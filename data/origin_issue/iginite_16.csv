Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocker),Outward issue link (Blocker),Inward issue link (Cloners),Outward issue link (Cloners),Outward issue link (Completes),Inward issue link (Container),Outward issue link (Container),Inward issue link (Dependent),Outward issue link (Dependent),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Incorporates),Outward issue link (Problem/Incident),Outward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Regression),Inward issue link (Required),Outward issue link (Required),Inward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Ignite Flags),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Release Note),Custom field (Review Date),Custom field (Reviewer),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
CacheQueryExample and CacheClientBinaryQueryExample print class name and hash instead of smth meaningful,IGNITE-4508,13031053,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,krybakova,krybakova,krybakova,29/Dec/16 09:04,06/Jul/17 17:12,14/Jul/23 06:19,29/Dec/16 09:29,1.7,,,2.0,general,,,,,0,,,,"Examples org.apache.ignite.examples.datagrid.CacheQueryExample and org.apache.ignite.examples.binary.datagrid.CacheClientBinaryQueryExample  print class name and hash instead of something meaningful:

{noformat}
>>> People with salaries between 0 and 1000 (queried with SCAN query): 
>>>     Entry [key=BinaryObject [idHash=622772003, hash=570907497], val=BinaryObject [idHash=699871906, hash=828088650]]
>>>     Entry [key=BinaryObject [idHash=460333119, hash=570907528], val=BinaryObject [idHash=1365711624, hash=402207819]]
{noformat}

{noformat}
>>> Employees working for GridGain:
>>>     BinaryObject [idHash=415906914, hash=504478805]
>>>     BinaryObject [idHash=739210872, hash=36627152]
>>>     BinaryObject [idHash=1154941313, hash=1266093632]
{noformat}",,krybakova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-12-29 09:04:42.0,,,,,,,,,,"0|i383kn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoverySpi is not reliable in some network split scenarios.,IGNITE-4499,13030672,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,ascherbakov,ascherbakov,27/Dec/16 10:57,18/Jan/17 15:50,14/Jul/23 06:19,18/Jan/17 15:50,1.6,,,2.0,general,,,,,0,,,,"Where is a possible caveat in current discovery implementation using ring of nodes.

Imagine grid consisting of nodes A B C D

Let them form the ring:
A-B-C-D-A

If network connectivity issues will arise between nodes A-C and B-D
discovery spi will never know it and will continue to assume the topology is valid. 

On other side, TcpCommunicationSpi will try to run transaction on this topology and never will succeed.

We must drop nodes from topology on communication spi errors.


",,agura,ascherbakov,daradurvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4501,,,,,,IGNITE-4491,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 18 15:43:17 UTC 2017,,,,,,,,,,"0|i3817z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Dec/16 10:58;ascherbakov;Sadly I have no reproducer at the moment.;;;","27/Dec/16 14:46;daradurvs;I think it will decide in IGNITE-4501;;;","09/Jan/17 22:55;agura;Fixed. If server node can't connect to client node or other server node then remote node will be kicked from topology. The same behaviour for client node in case when it can't connect to other client node.

Waiting for TC. 

Please review. PR 1410.;;;","18/Jan/17 15:43;agura;Fixed. Current solution: Node should be kicked out from topology (forcibly failed). At this moment this valid only for TCP connection, not shmem.

{{TcpCommunicationSpi}} fails node in case if it can connect to remote node (server or client) and all retries are failed. Serve node can fail both server or client node. Client nodes can fail only other clients nodes. It is implemented in {{ctreateTcpClient()}} method.

{{TcpDiscoveryNodeFailedMessage}} will be handled by {{TcpDiscoverySpi}} in a special manner in case of forcible node fail. All nodes will not handle this message if it isn't verified by coordinator. It allows to avoid of topology crashes in cases, for example, when two nodes try to kick out each other (changes in {{ServerImpl}} class).

Client node now can receive {{TcpDiscoveryNodeFailedMessage}} in case of forcible fail. In this case client reconnection will be performed with delay.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Add missing diagnostic records in case of API errors,IGNITE-4493,13030583,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,skalashnikov,skalashnikov,26/Dec/16 14:13,10/Jan/17 08:11,14/Jul/23 06:19,10/Jan/17 08:11,1.8,,,2.0,odbc,,,,,0,,,,"The following functions in Ignite ODBC driver do not strictly follow the API documentation with regard to diagnostics. It should be possible to obtain additional information about errors via SQLGetDiagRec() call.

SQLAllocHandle
SQLFreeHandle
SQLFreeStmt
SQLBindCol
SQLFetchScroll
SQLBindParameter
",,githubbot,isapego,ptupitsyn,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jan 10 08:11:56 UTC 2017,,,,,,,,,,"0|i380o7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Dec/16 13:14;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/1396

    IGNITE-4493: ODBC: Added missing diagnostic records for error cases

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4493

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1396.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1396
    
----
commit b3535988164bebba6810bce3ed4d2564af88df5f
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2016-12-30T13:11:28Z

    IGNITE-4493: Added missing diagnostic record for errors

commit 751428212cf9a9f61010b297b0d7d6e0fbe4d764
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2016-12-30T13:12:54Z

    Merge branch 'master' of https://github.com/apache/ignite into ignite-4493

----
;;;","30/Dec/16 18:06;skalashnikov;Igor, please review the changes.;;;","09/Jan/17 12:36;isapego;Sergey,

Looks good in general. I have found one issue though. Commented at Upsource. Please, have a look.;;;","09/Jan/17 17:35;skalashnikov;Igor, I have applied your latest remark. Please take a look.;;;","09/Jan/17 18:02;isapego;Pavel, please merge this PR.
;;;","10/Jan/17 08:11;ptupitsyn;Looks good to me, merged to master.;;;","10/Jan/17 08:11;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1396
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on query execution,IGNITE-4487,13030364,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sharpler,dkarachentsev,dkarachentsev,23/Dec/16 11:47,18/Jan/17 17:57,14/Jul/23 06:19,18/Jan/17 17:57,1.8,,,1.9,cache,,,,,1,,,,"NPE may be thrown when called destroyCache() and started querying.

Attached example reproduces this case when GridDiscoveryManager#removeCacheFilter called but cache state haven't been changed to STOPPED org.apache.ignite.internal.processors.cache.GridCacheGateway#onStopped.
{code:none}
javax.cache.CacheException: class org.apache.ignite.IgniteCheckedException: null
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:740)
        at com.intellica.evam.engine.event.future.FutureEventWorker.processFutureEvents(FutureEventWorker.java:117)
        at com.intellica.evam.engine.event.future.FutureEventWorker.run(FutureEventWorker.java:66)
Caused by: class org.apache.ignite.IgniteCheckedException: null
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:1693)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:494)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:732)
        ... 2 more
Caused by: java.lang.NullPointerException
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter$ScanQueryFallbackClosableIterator.init(GridCacheQueryAdapter.java:712)
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter$ScanQueryFallbackClosableIterator.<init>(GridCacheQueryAdapter.java:677)
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter$ScanQueryFallbackClosableIterator.<init>(GridCacheQueryAdapter.java:628)
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter.executeScanQuery(GridCacheQueryAdapter.java:548)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy$2.applyx(IgniteCacheProxy.java:497)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy$2.applyx(IgniteCacheProxy.java:495)
        at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:1670)
        ... 4 more
{code}


",,agoncharuk,dkarachentsev,dmagda,githubbot,sharpler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Dec/16 11:49;dkarachentsev;IgniteThread.java;https://issues.apache.org/jira/secure/attachment/12844554/IgniteThread.java","23/Dec/16 11:49;dkarachentsev;Main.java;https://issues.apache.org/jira/secure/attachment/12844555/Main.java",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 18 15:36:58 UTC 2017,,,,,,,,,,"0|i37zbj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Dec/16 09:40;sharpler;I found that: in inner class 'GridCacheQueryAdapter.ScanQueryFallbackClosableIterator' in constructor is called with method 'init()', but method 'init()' cannot be called with an empty field 'nodes'. In source code it looks like:

{code:java}
private ScanQueryFallbackClosableIterator(int part, GridCacheQueryAdapter qry,
            GridCacheQueryManager qryMgr, GridCacheContext cctx) {
            this.qry = qry;
            this.qryMgr = qryMgr;
            this.cctx = cctx;
            this.part = part;

            nodes = fallbacks(cctx.discovery().topologyVersionEx());
            // !!! Here nodes.isEmpty()==true, and init() will fail in the future. !!!
            init();
        }
{code}

I can fix it by adding some check in code, but i must know what behavior are best in this case? As I understand it, the list of nodes is empty if there are no nodes with the current partition, which means data loss, and either need to return a meaningful exception, or ignore this situation. But maybe I missed something.;;;","27/Dec/16 10:35;githubbot;GitHub user SharplEr opened a pull request:

    https://github.com/apache/ignite/pull/1388

    IGNITE-4487: Fixed

    Fix NPE in inner class 'GridCacheQueryAdapter.ScanQueryFallbackClosableIterator' in constructor. Method ScanQueryFallbackClosableIterator#init() cannot be called with an empty field 'nodes'. Looks like that was the problem in IGNITE-4487.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/SharplEr/ignite ignite-4487

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1388.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1388
    
----
commit da84c2331abac3b049a295275603b3340c137602
Author: Alexander Menshikov <sharplermc@gmail.com>
Date:   2016-12-27T10:30:05Z

    IGNITE-4487: Fixed

----
;;;","29/Dec/16 18:33;sharpler;Added check for an empty collection;;;","06/Jan/17 17:34;dmagda;[~agoncharuk], please do a final review.;;;","09/Jan/17 08:06;agoncharuk;[~sharpler], my comments are below:
 * Move exception throw statement to the line next to if according to Ignite coding guidelines
 * Change the exception message to match other Ignite exception to something like ""Failed to execute the query (all cache affinity nodes left the grid)"". It will be also useful to print out the topology version on which the query was executed and the query itself
 * Convert the example created by Dmitriy to a unit test, make sure it fails without your fix; add this test to a cache queries test suite;;;","10/Jan/17 11:35;sharpler;Done, please look again.;;;","17/Jan/17 19:14;dmagda;[~agoncharuk], please keep reviewing this ticket.;;;","18/Jan/17 15:36;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1388
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add serialVersionUID to AttributeNodeFilter,IGNITE-4486,13030340,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,al.psc,al.psc,23/Dec/16 09:28,26/Dec/16 12:06,14/Jul/23 06:19,26/Dec/16 12:04,1.8,,,1.8,general,,,,,0,,,,"Subj. - in particular, without it, TC build fails all at once",,al.psc,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 26 12:06:02 UTC 2016,,,,,,,,,,"0|i37z67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Dec/16 09:30;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/1380

    IGNITE-4486 Added serialVersionUID to AttributeNodeFilter

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4486

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1380.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1380
    
----
commit d0b5845b9246301c4ab2cc9e83323b0144d59a7d
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2016-12-23T09:29:11Z

    IGNITE-4486 Added serialVersionUID to AttributeNodeFilter

----
;;;","26/Dec/16 12:04;al.psc;Fixed in master by Vlad, closing this.;;;","26/Dec/16 12:06;githubbot;Github user alexpaschenko closed the pull request at:

    https://github.com/apache/ignite/pull/1380
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheJdbcPojoStore returns unexpected BinaryObject upon loadCache(),IGNITE-4485,13030206,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,ein,ein,22/Dec/16 18:47,10/May/17 03:05,14/Jul/23 06:19,26/Apr/17 12:18,2.0,,,2.0,cache,,,,,0,easyfix,,,"When calling loadCache(IgniteBiInClosure clo, Object... args) sometimes we get unexpected values of type BinaryObject in IgniteBiInClosure.apply(), whereas POJO value kind was registered previously for well known key type.

It's so because getOrCreateCacheMappings returns HashMap which resorts entity mappings for the same key but with different value kind. When BinaryMarshaller is used, then this map contains two mappings for the same key - POJO and BINARY.

Possible fix is to use LinkedHashMap, then POJO mapping will be picked first.",,ein,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4949,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,2016-12-22 18:47:06.0,,,,,,,,,,"0|i37ycf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client should re-try connection attempt in case of concurrent network failure,IGNITE-4473,13030065,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,vozerov,vozerov,22/Dec/16 10:14,17/Mar/17 12:13,14/Jul/23 06:19,17/Mar/17 12:13,1.8,,,2.0,general,,,,,0,,,,"*Problem*
Consider the following scenario:
1) Client started, but there are no servers, so it hangs somewhere inside start routine.
2) Server appears, and discovery finishes successfully.
3) Nodes start talking to each other through communication SPI to finish start process (e.g. to complete exchange).
4) But network glitch occurs and server becomes unreachable.

*Expected behavior*
Client disconnects and hangs waiting for reconnect.

*Actual behavior*
Client throws an exception and never tries to reconnect.",,amashenkov,dkarachentsev,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4112,,,,IGNITE-4112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 14 07:12:12 UTC 2017,,,,,,,,,,"0|i37xh3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/17 11:01;dkarachentsev;1. On exchange when IOException caught and local node is client, is IgniteCouldReconnectCheckedException thrown.
2. It's processed in IgniteKernal.start() method and signals that client should be reconnected to cluster.
3. For that purpose added rejoin() method to GridDiscoveryManager and ClientImpl. It means that client should initiate disconnect from cluster to force run all node leave routines, and try to join again. 
4. When start script catches IgniteCouldReconnectCheckedException it calls rejoin() and waits on reconnect future. If thrown other exception, node will be stopped.
5. This will block user thread on node start and will be released once rejoin succeeded.
6. Added method onReconnectFailed() to GridKernalGateway that completes reconnect future with exception. This exception will be processed in IgniteKernal rejoin loop.
7. ClientImpl.SocketWriter.forceLeave() blocks until node left message will be sent (or sending failed) and closes connection to cluster.

Left to do:
Add test and code for the case when client was disconnected from cluster, but connection to coordinator wasn't fully restored. Client node should continue rejoining unless coordinator become available.;;;","14/Mar/17 07:12;dkarachentsev;[PR #1593|https://github.com/apache/ignite/pull/1593];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Can not retrieve table metadata,IGNITE-4471,13029851,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,isapego,isapego,21/Dec/16 18:33,23/Dec/16 10:52,14/Jul/23 06:19,23/Dec/16 10:52,1.8,,,2.0,odbc,,,,,0,odbc,,,{{SQLTables}} always returns set of empty strings currently.,,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4230,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 23 10:52:34 UTC 2016,,,,,,,,,,"0|i37w5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 18:35;isapego;Seems like there is an regression in {{odbc::utility::ReadString()}} function. Going to add tests for this function.;;;","22/Dec/16 13:37;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1377

    IGNITE-4471: Fixed ODBC string-reading utility function.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4471

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1377.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1377
    
----
commit 95d417d570af82d05119ee6be193b10106e99614
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-12-22T13:34:10Z

    IGNITE-4471: Fixed ODBC string-reading utility function.

----
;;;","22/Dec/16 17:04;isapego;Ready for review.;;;","23/Dec/16 10:52;ptupitsyn;Looks good, merged to master.;;;","23/Dec/16 10:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1377
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Read-through is not properly working with multiple gets executed in parallel,IGNITE-4465,13029630,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sboikov,vkulichenko,vkulichenko,21/Dec/16 04:43,17/Jan/17 09:36,14/Jul/23 06:19,17/Jan/17 09:36,1.8,,,1.9,cache,,,,,0,,,,"The issue is sporadic and very hard to isolate, however I managed to create a test that reproduces it. Basically, the scenario is the following:
* We have one server and one client.
* The client creates a cache with read through enabled.
* The client then executes bunch of jobs (number of jobs is bigger than number of threads in server's public pool) asynchronously in parallel.
* {{CacheStore.load()}} method is called more than once and invocations go one after another (sometimes even in the same thread!) with an interval of a bit more than one second, which is the duration of load (there is a {{Thread.sleep(1000)}} in the implementation.
* In addition, statistics show that number of misses go up to 50 which is number of jobs. I would not expect more than 16 there. First 16 jobs executed in parallel can all register miss at the same time before load happens. But all consecutive execution must read the value from cache.

Test is attached.

",,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 04:44;vkulichenko;ReadThroughTest.java;https://issues.apache.org/jira/secure/attachment/12844181/ReadThroughTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 22 15:30:51 UTC 2016,,,,,,,,,,"0|i37usf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 11:37;sboikov;I think now this is possible since empty entry can be concurrently removed between 'innerGet' and store loading, so 'get' will return loaded value but it will not be stored in entry:
- t1 calls entry.innerGetVersioned in GridCacheAdapter.getAllAsync0, it returns null, then T1 saves entry key/version in 'misses' map (note - one more race here, entry.version() already could change after innerGetVersioned call) 
- some other t2 calls ctx.evicts().touch(entry) for the same entry (e.g. from GridPartitionedSingleGetFuture.localGet), entry is empty, it is obsoleted and removed
- t1 loaded value from store and calls entry.versionedValue, original entry was obsoleted, so version check does not pass and value is not stored in entry
;;;","22/Dec/16 15:30;sboikov;Implemented following fix: before trying to load entry from store we need somehow prevent entry eviction, for this I added 'IS_EVICT_DISABLED' flag in GridCacheMapEntry. This flag is set in innerGetVersioned and then should be reset after load is finished, also this flag is reset each time entry is updated. Initial test stared to pass, need verify on tests on TeamCity.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Unhelpful error message for same-table SelectMany in LINQ,IGNITE-4460,13029152,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,19/Dec/16 14:50,17/Apr/17 10:51,14/Jul/23 06:19,17/Apr/17 10:51,,,,2.0,platforms,,,,,0,.NET,LINQ,,"The following LINQ is not supported ({{RegionToRole}} is a collection, which is not understood by SQL):
{code}
users.Where(w => w.Value.ID == userId && !w.Value.IsDeleted)
                .SelectMany(sm => sm.Value.RegionToRole)
{code}

However, LINQ engine proceeds to generate an invalid query, which fails later in SQL engine:

{code}
Failed to parse query: select _T0._key, _T0._val from ""User"".User as _T0 , ""User"".User as _T0 where  ...
{code}

We should detect invalid LINQ early and throw an error with explanation.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 17 10:51:45 UTC 2017,,,,,,,,,,"0|i37ruf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Apr/17 10:51;ptupitsyn;Simple validation added: all FROM clauses must be {{IQueryable}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Explicit lock is not released when node that acquired it is killed,IGNITE-4450,13028814,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sboikov,vkulichenko,vkulichenko,16/Dec/16 22:59,15/Mar/17 07:57,14/Jul/23 06:19,22/Dec/16 08:31,1.8,,,1.9,cache,,,,,0,,,,"Test is attached. The scenario is the following:
# Start first node and create a transactional cache.
# Start second node and acquire a lock.
# Kill second node after several seconds without doing unlock.
# Try to start third node. It can't join because the lock is still held for some reason. The result if hanged cluster.",,dukedai,evans_ye,sboikov,thammoud,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/16 23:00;vkulichenko;ExplicitLockTest.java;https://issues.apache.org/jira/secure/attachment/12843663/ExplicitLockTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 15 07:57:07 UTC 2017,,,,,,,,,,"0|i37prb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Dec/16 09:24;sboikov;Found reason of hang: when second node is killed 'affinity change' exchange is in progress and exchange worker waits for locks release. But callback removing locks for failed node is called only when exchange for node fail will start, so 'affinity change' exchange never finish. Need fix GridDhtPartitionsExchangeFuture to also call 'removeExplicitNodeLocks' when it receive s'node fail' events. ;;;","22/Dec/16 08:31;sboikov;Fixed in master.;;;","15/Mar/17 07:57;evans_ye;Hi team,
This is fixed and committed to the code base, however I can't find patch file or PR attached on this JIRA.
It would be better to have the code attached here so that user/developer can reference and learn how the bug gets fixed.
BTW, thanks for the fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Implement configuration of affinity function in cache configuration.,IGNITE-4442,13028639,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,16/Dec/16 10:17,17/Jan/17 12:08,14/Jul/23 06:20,29/Dec/16 04:32,1.8,,,2.0,wizards,,,,,0,,,,Also implement custom configuration of cache store.,,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 29 04:31:58 UTC 2016,,,,,,,,,,"0|i37oof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Dec/16 08:51;vsisko;Implemented section for configuration of affinity function and affinity mapper.;;;","27/Dec/16 09:28;anovikov;Reviewed. Fixed code generation.

Please remove dropdown for affinityMapper with one possible value and use only one input for class name;;;","29/Dec/16 04:31;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: incorrect code generation for creating a near cache on client node,IGNITE-4432,13028274,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,pkonstantinov,pkonstantinov,15/Dec/16 03:17,15/Dec/16 09:55,14/Jul/23 06:20,15/Dec/16 04:42,,,,2.0,,,,,,0,,,,"Current java-code generated as
{code}
// Demo of near cache creation on client node.   
ignite.getOrCreateCache(ClientConfigurationFactory.ComalgorithmCache(), ClientConfigurationFactory.nearConfigurationComalgorithmCache());
{code}

but actual method name for cache creation is 'cacheComalgorithmCache()' - starting with 'cache'",,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 15 09:54:49 UTC 2016,,,,,,,,,,"0|i37mfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/16 04:42;vsisko;Fixed cache configuration method name generation.;;;","15/Dec/16 09:54;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default format of the ignite log doesn't contain a date.,IGNITE-4431,13028127,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,tledkov-gridgain,tledkov-gridgain,14/Dec/16 15:42,12/Jun/17 07:47,14/Jul/23 06:20,09/Jun/17 08:38,1.8,,,2.1,general,,,,,0,,,,"Ignite uses the default pattern layout for the log4j loggers with the {{ABSOLUTE}} date format. 

May be the {{ISO8601}} for default is more useful because {{ABSOLUTE}} doesn't contain date.",,githubbot,kuaw26,sboikov,shroman,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 09 08:38:41 UTC 2017,,,,,,,,,,"0|i37lin:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/17 02:51;shroman;+1 for ISO8601.
It would be particularly useful for long-running evaluation tests when users don't care about changing log settings.;;;","09/Jun/17 03:29;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/2109

    IGNITE-4431: Include date into the default format of the ignite log.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-4431

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2109.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2109
    
----
commit de9afe8c9642616fadf29c9fabf3743a0b34bd10
Author: shroman <rshtykh@yahoo.com>
Date:   2017-06-09T03:28:12Z

    IGNITE-4431: Include date into the default format of the ignite log.

----
;;;","09/Jun/17 04:45;shroman;[~kuaw26] Can you please review this change? It also changes log4j configs in visor and webconsole, so it would be nice if you have a look.;;;","09/Jun/17 06:44;shroman;TC looks good (errors are only on timeout and flaky tests).;;;","09/Jun/17 07:08;kuaw26;[~roman_s] Visor & Web Console looks good for me.;;;","09/Jun/17 08:07;shroman;[~kuaw26] Thank you!

[~sboikov] Can you please double-check before I merge?;;;","09/Jun/17 08:11;sboikov;Looks good to me.

Thanks!;;;","09/Jun/17 08:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2109
;;;","09/Jun/17 08:38;shroman;Merged. Thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in IgniteAtomicSequence when used inside transaction,IGNITE-4429,13028102,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,ascherbakov,ascherbakov,14/Dec/16 14:13,31/Jan/17 08:14,14/Jul/23 06:20,31/Jan/17 08:14,,,,2.0,cache,compute,data structures,,,0,,,,"On certains scenarios involving job runs using compute API, operations with {{IgniteAtomicSequence}} inside user transactions may lead to deadlock caused by public thread pool exhaustion.",,ascherbakov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 15 10:22:33 UTC 2016,,,,,,,,,,"0|i37ld3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/16 16:40;ascherbakov;WIth the new separation of system and user transaction the fix as simple as removing outTx call.

PR: https://github.com/apache/ignite/pull/1347

Scheduled TC run.;;;","15/Dec/16 07:43;ascherbakov;TC result looks acceptable.

http://ci.ignite.apache.org/viewLog.html?buildId=390883&tab=buildResultsDiv&buildTypeId=IgniteTests_RunAll;;;","15/Dec/16 09:26;sboikov;Hi Alexei,

Looks good, I'll merge this fix into master. 

Could you please also create ticket to get rid of 'outTx' in others data structures?

Thanks!;;;","15/Dec/16 10:22;ascherbakov;Done.

https://issues.apache.org/jira/browse/IGNITE-4437;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REPLICATED cache isn't synced across nodes,IGNITE-4424,13027817,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,avinogradov,amashenkov,amashenkov,13/Dec/16 15:44,16/Jan/17 09:35,14/Jul/23 06:20,16/Jan/17 09:35,1.8,,,2.0,cache,,,,,0,,,,"Replicated cache sometimes won't sync across nodes properly.
PFA a reproducer code.

All nodes are started at the same time on different machines:
* Ignition.start() // Blocks until node is up
* Only one of the nodes performs next: getOrCreateCache() then putAll() 
* All the other nodes block on this before proceeding. 
* All of the nodes perform next:
** getOrCreateCache() // Again
** cache.localSize(CachePeekMode.ALL)

All nodes should see filled cache, but sometimes some nodes see empty cache. LocalSize call can be replaced by iterating over cache, but result will be same.

Much more rarely, cluster degradation is possible and one part of cluster see empty cache while another see filled cache. Logs contain no errors at all. It takes about two hours running test in infinite loop to catch this rare error.",,amashenkov,avinogradov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Dec/16 15:51;avinogradov;ReplicatedCacheRebalanceFails.java;https://issues.apache.org/jira/secure/attachment/12843905/ReplicatedCacheRebalanceFails.java","19/Dec/16 11:05;avinogradov;ReplicatedCacheRebalanceFails.java;https://issues.apache.org/jira/secure/attachment/12843842/ReplicatedCacheRebalanceFails.java","14/Dec/16 14:25;amashenkov;ignite-d8e433e4.log;https://issues.apache.org/jira/secure/attachment/12843237/ignite-d8e433e4.log",,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 20 16:01:01 UTC 2016,,,,,,,,,,"0|i37jlr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Dec/16 08:34;avinogradov;Initially reproduced. Reproducer added to issue.;;;","20/Dec/16 16:01;avinogradov;Problem found. 
cctx.mvcc().addAtomicFuture(...) happens not under topology.readlock (it already released)
So, exchange is not waiting for putAll operation finish.

Dummy hotfix (relocation of this code to readlock section solved the issue).
Fixing code in proper way.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: SQLFetch fails if result set contains non-primitive column.,IGNITE-4421,13027790,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,isapego,isapego,13/Dec/16 13:56,11/Jan/17 12:29,14/Jul/23 06:20,14/Dec/16 09:30,1.8,,,2.0,odbc,,,,,0,odbc,,,"If any column of the result set is complex binary object (non primitive type), then {{SQLFetch}} fails upon call with the following message:
{noformat}
Error 01S01: Can not retrieve row column.
{noformat}",,githubbot,isapego,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/17 12:29;krybakova;IGNITE-4421_verification.zip;https://issues.apache.org/jira/secure/attachment/12846816/IGNITE-4421_verification.zip",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 11 12:27:02 UTC 2017,,,,,,,,,,"0|i37jfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Dec/16 14:19;isapego;I found a root cause of the issue. In {{OdbcRequestHandler}} we now acquire keep-binary cache instance ({{withKeepBinary()}}), so any complex object returned as an instance of  {{BinaryObjectExImpl}}, which serialized as {{IGNITE_TYPE_BINARY}}. Currently, we don't handle objects of type {{IGNITE_TYPE_BINARY}} in ODBC driver.
I'm going to implement it.;;;","13/Dec/16 17:06;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1342

    IGNITE-4421: Added BinaryObject handling in ODBC.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4421

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1342.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1342
    
----
commit 3df412e7f25aac8227b68cffe1577593a05d1431
Author: sboikov <sboikov@gridgain.com>
Date:   2016-12-07T09:25:32Z

    ignite-2545 Optimization for GridCompoundFuture's futures iteration

commit f3db74f782c68c7f73ef3ef4390e010976493634
Author: Anton Vinogradov <av@apache.org>
Date:   2016-12-07T10:15:37Z

    IGNITE-4238: Added geospatial queries example (nolgpl examples hotfix)

commit 56efb10c40fd4481d6a9dc00928e7beee1f164c5
Author: Anton Vinogradov <av@apache.org>
Date:   2016-12-07T11:25:53Z

    IGNITE-4353 Parent Cassandra module deployed on maven repository (hotfix: deploy to custom maven repository)

commit 83710a9d1bb7379e5f3d891ed95c86096263740b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-12-12T14:52:22Z

    IGNITE-4413 .NET: Fix DateTime argument handling in SqlQuery
    
    This closes #1341

commit 5d8b6b8e9fab87b36b9a58db18b8bed2e0796d05
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-12-13T13:59:14Z

    IGNITE-4421: Added BinaryObject handling in ODBC.

commit 2d44a33055919d8da914b0b12c1a4d05b7ba9c58
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-12-13T15:35:06Z

    IGNITE-4421: Refactoring.

commit de7f1c498a23347edd85431460c0f69628e42fff
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-12-13T16:53:56Z

    IGNITE-4421: Added test.

----
;;;","13/Dec/16 17:26;isapego;Ready for review.;;;","14/Dec/16 06:40;ptupitsyn;Looks good, see my minor comment in review.;;;","14/Dec/16 09:29;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1342
;;;","14/Dec/16 09:30;ptupitsyn;Merged to master;;;","11/Jan/17 12:27;krybakova;verification files are attached;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: EntityFramework 2nd level cache fails for some complex queries,IGNITE-4415,13027442,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,12/Dec/16 13:02,21/Feb/17 14:41,14/Jul/23 06:20,23/Dec/16 13:55,1.8,,,1.9,platforms,,,,,0,.NET,,,"This EF query (sent by user) fails when EF caching is enabled:
{code}
            var regionsAsm = user.GetAllChildRegions()
                .Where(w => w.RegionToRole.Any(a => a.RoleID == (int)UserRoles.ASM));
 
            var allInvestTitle = user.RepositoryFactory.InvestTitle.All();
 
            var isFutureYear = filters.ActualYear.Value.Year >
                               user.RepositoryFactory.Version.All().SingleOrDefault(w => w.IsCurrent)?.ActualYear;
 
            var distributorToRegionAsmBindings = !isFutureYear
                ? regionsAsm.SelectMany(s => s.DistributorToRegionAsmBinding)
                : regionsAsm.SelectMany(s => s.DistributorToRegionAsmBinding.Where(b => b.IsActual));
 
 
            var resultAllBudgets = distributorToRegionAsmBindings
                .Select(d => new { Distributor = d.Distributor, RegionAsm = d.Region, d })
                .SelectMany(dr => allInvestTitle, (dr, t) => new { dr.Distributor, dr.RegionAsm, InvestTitle = t, dr.d });
 
            var allBudgets = resultAllBudgets
                    .Select(b => new BudgetResult
                    {
                        AsmRegionId = b.RegionAsm.ID,
                        AsmRegionName = b.RegionAsm.Name,
                        DistributorId = b.Distributor.ID,
                        DistributorName = b.Distributor.Name,
                        RsmRegionId = b.RegionAsm.RegionExpand
                            .Where(w => w.Region1.RegionToRole.Any(a => a.RoleID == (int) UserRoles.RSM))
                            .Select(ss => ss.ParentRegionID)
                            .FirstOrDefault(),
                        RsmRegionName = b.RegionAsm.RegionExpand
                            .Where(w => w.Region1.RegionToRole.Any(a => a.RoleID == (int) UserRoles.RSM))
                            .Select(ss => ss.Region1.Name)
                            .FirstOrDefault(),
                        InvestTitleId = b.InvestTitle.ID,
                        InvestTitleName = b.InvestTitle.Name,
                    });
 
            var result = allBudgets.ToList();
{code}

Error:
{code}
class org.apache.ignite.binary.BinaryObjectException: Unexpected flag value [pos=43775, expected=12, actual=0]
    at org.apache.ignite.internal.binary.BinaryReaderExImpl.checkFlag(BinaryReaderExImpl.java:1403)
    at org.apache.ignite.internal.binary.BinaryReaderExImpl.readByteArray(BinaryReaderExImpl.java:468)
    at org.apache.ignite.internal.processors.platform.entityframework.PlatformDotNetEntityFrameworkCacheExtension.processInOutStreamLong(PlatformDotNetEntityFrameworkCacheExtension.java:125)
    at org.apache.ignite.internal.processors.platform.cache.PlatformCache.processInStreamOutLong(PlatformCache.java:761)
    at org.apache.ignite.internal.processors.platform.PlatformAbstractTarget.inStreamOutLong(PlatformAbstractTarget.java:78)
{code}

Generated SQL:
{code}
SELECT 
    [Project17].[ID2] AS [ID], 
    [Project17].[ID1] AS [ID1], 
    [Project17].[Name1] AS [Name], 
    [Project17].[ID] AS [ID2], 
    [Project17].[Name] AS [Name1], 
    CASE WHEN ([Project17].[C1] IS NULL) THEN 0 ELSE [Project17].[C2] END AS [C1], 
    [Project17].[C3] AS [C2], 
    [Project17].[Name2] AS [Name2]
    FROM ( SELECT 
        [Project13].[ID] AS [ID], 
        [Project13].[Name] AS [Name], 
        [Project13].[ID1] AS [ID1], 
        [Project13].[Name1] AS [Name1], 
        [Project13].[ID2] AS [ID2], 
        [Project13].[Name2] AS [Name2], 
        [Project13].[C1] AS [C1], 
        [Project13].[C2] AS [C2], 
        (SELECT TOP (1) 
            [Project14].[Name] AS [Name]
            FROM ( SELECT 
                [Extent14].[ParentRegionID] AS [ParentRegionID], 
                [Extent15].[ID] AS [ID], 
                [Extent15].[Name] AS [Name]
                FROM  [dbo].[RegionExpand] AS [Extent14]
                INNER JOIN [dbo].[Region] AS [Extent15] ON [Extent14].[ParentRegionID] = [Extent15].[ID]
                WHERE [Project13].[ID1] = [Extent14].[RegionID]
            )  AS [Project14]
            WHERE  EXISTS (SELECT 
                1 AS [C1]
                FROM [dbo].[RegionToRole] AS [Extent16]
                WHERE ([Project14].[ParentRegionID] = [Extent16].[RegionID]) AND (5 = [Extent16].[RoleID])
            )) AS [C3]
        FROM ( SELECT 
            [Project12].[ID] AS [ID], 
            [Project12].[Name] AS [Name], 
            [Project12].[ID1] AS [ID1], 
            [Project12].[Name1] AS [Name1], 
            [Project12].[ID2] AS [ID2], 
            [Project12].[Name2] AS [Name2], 
            [Project12].[C1] AS [C1], 
            [Project12].[C2] AS [C2]
            FROM ( SELECT 
                [Project8].[ID] AS [ID], 
                [Project8].[Name] AS [Name], 
                [Project8].[ID1] AS [ID1], 
                [Project8].[Name1] AS [Name1], 
                [Project8].[ID2] AS [ID2], 
                [Project8].[Name2] AS [Name2], 
                [Project8].[C1] AS [C1], 
                (SELECT TOP (1) 
                    [Project9].[ParentRegionID] AS [ParentRegionID]
                    FROM ( SELECT 
                        [Extent12].[ParentRegionID] AS [ParentRegionID]
                        FROM [dbo].[RegionExpand] AS [Extent12]
                        WHERE [Project8].[ID1] = [Extent12].[RegionID]
                    )  AS [Project9]
                    WHERE  EXISTS (SELECT 
                        1 AS [C1]
                        FROM [dbo].[RegionToRole] AS [Extent13]
                        WHERE ([Project9].[ParentRegionID] = [Extent13].[RegionID]) AND (5 = [Extent13].[RoleID])
                    )) AS [C2]
                FROM ( SELECT 
                    [Project7].[ID] AS [ID], 
                    [Project7].[Name] AS [Name], 
                    [Project7].[ID1] AS [ID1], 
                    [Project7].[Name1] AS [Name1], 
                    [Project7].[ID2] AS [ID2], 
                    [Project7].[Name2] AS [Name2], 
                    [Project7].[C1] AS [C1]
                    FROM ( SELECT 
                        [Project3].[ID] AS [ID], 
                        [Project3].[Name] AS [Name], 
                        [Project3].[ID1] AS [ID1], 
                        [Project3].[Name1] AS [Name1], 
                        [Project3].[ID2] AS [ID2], 
                        [Project3].[Name2] AS [Name2], 
                        (SELECT TOP (1) 
                            [Project4].[ParentRegionID] AS [ParentRegionID]
                            FROM ( SELECT 
                                [Extent10].[ParentRegionID] AS [ParentRegionID]
                                FROM [dbo].[RegionExpand] AS [Extent10]
                                WHERE [Project3].[ID1] = [Extent10].[RegionID]
                            )  AS [Project4]
                            WHERE  EXISTS (SELECT 
                                1 AS [C1]
                                FROM [dbo].[RegionToRole] AS [Extent11]
                                WHERE ([Project4].[ParentRegionID] = [Extent11].[RegionID]) AND (5 = [Extent11].[RoleID])
                            )) AS [C1]
                        FROM ( SELECT 
                            [Project1].[ID] AS [ID], 
                            [Project1].[Name] AS [Name], 
                            [Project1].[ID1] AS [ID1], 
                            [Project1].[Name1] AS [Name1], 
                            [Project1].[ID2] AS [ID2], 
                            [Project1].[Name2] AS [Name2]
                            FROM ( SELECT 
                                [Extent4].[RegionID] AS [RegionID], 
                                [Extent5].[DistributorID] AS [DistributorID], 
                                [Extent5].[RegionAsmID] AS [RegionAsmID], 
                                [Extent6].[ID] AS [ID], 
                                [Extent6].[Name] AS [Name], 
                                [Extent7].[ID] AS [ID1], 
                                [Extent7].[Name] AS [Name1], 
                                [Extent8].[ID] AS [ID2], 
                                [Extent8].[Name] AS [Name2]
                                FROM       [dbo].[User] AS [Extent1]
                                INNER JOIN  (SELECT [Extent2].[UserID] AS [UserID], [Extent3].[RegionID] AS [RegionID]
                                    FROM  [dbo].[UserToRegionRole] AS [Extent2]
                                    INNER JOIN [dbo].[RegionToRole] AS [Extent3] ON [Extent2].[RegionRoleID] = [Extent3].[ID] ) AS [Join1] ON [Extent1].[ID] = [Join1].[UserID]
                                INNER JOIN [dbo].[RegionExpand] AS [Extent4] ON [Join1].[RegionID] = [Extent4].[ParentRegionID]
                                INNER JOIN [dbo].[DistributorToRegionAsmBinding] AS [Extent5] ON [Extent4].[RegionID] = [Extent5].[RegionAsmID]
                                INNER JOIN [dbo].[Distributor] AS [Extent6] ON [Extent5].[DistributorID] = [Extent6].[ID]
                                INNER JOIN [dbo].[Region] AS [Extent7] ON [Extent5].[RegionAsmID] = [Extent7].[ID]
                                CROSS JOIN [dbo].[InvestTitle] AS [Extent8]
                                WHERE ([Extent1].[IsDeleted] <> 1) AND ([Extent1].[ID] = @p__linq__0)
                            )  AS [Project1]
                            WHERE  EXISTS (SELECT 
                                1 AS [C1]
                                FROM [dbo].[RegionToRole] AS [Extent9]
                                WHERE ([Project1].[RegionID] = [Extent9].[RegionID]) AND (7 = [Extent9].[RoleID])
                            )
                        )  AS [Project3]
                    )  AS [Project7]
                )  AS [Project8]
            )  AS [Project12]
        )  AS [Project13]
    )  AS [Project17]
{code}",,alexbchr,dmazhukov,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 21 14:39:26 UTC 2017,,,,,,,,,,"0|i37han:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/16 14:43;dmazhukov;I investigated the problem and found that even the first query fails
{code}         var regionsAsm = user.GetAllChildRegions()
                .Where(w => w.RegionToRole.Any(a => a.RoleID == (int)UserRoles.ASM));
{code}

{{user.GetAllChildRegions()}} does not fail and adding {{Where(...)}} condition causes problems.

{{user.GetAllChildRegions()}} is translated into
{code}
SELECT 
    [Extent5].[ID] AS [ID], 
    [Extent5].[ParentID] AS [ParentID], 
    [Extent5].[Name] AS [Name], 
    [Extent5].[CreationDate] AS [CreationDate], 
    [Extent5].[IsDeleted] AS [IsDeleted]
    FROM    [dbo].[User] AS [Extent1]
    INNER JOIN  (SELECT [Extent2].[UserID] AS [UserID], [Extent3].[RegionID] AS [RegionID]
        FROM  [dbo].[UserToRegionRole] AS [Extent2]
        INNER JOIN [dbo].[RegionToRole] AS [Extent3] ON [Extent2].[RegionRoleID] = [Extent3].[ID] ) AS [Join1] ON [Extent1].[ID] = [Join1].[UserID]
    INNER JOIN [dbo].[RegionExpand] AS [Extent4] ON [Join1].[RegionID] = [Extent4].[ParentRegionID]
    INNER JOIN [dbo].[Region] AS [Extent5] ON [Extent4].[RegionID] = [Extent5].[ID]
    WHERE ([Extent1].[IsDeleted] <> 1) AND ([Extent1].[ID] = @p__linq__0)
{code}
Failing query is translated into 
{code}
SELECT 
    [Project1].[ID] AS [ID], 
    [Project1].[ParentID] AS [ParentID], 
    [Project1].[Name] AS [Name], 
    [Project1].[CreationDate] AS [CreationDate], 
    [Project1].[IsDeleted] AS [IsDeleted]
    FROM ( SELECT 
        [Extent5].[ID] AS [ID], 
        [Extent5].[ParentID] AS [ParentID], 
        [Extent5].[Name] AS [Name], 
        [Extent5].[CreationDate] AS [CreationDate], 
        [Extent5].[IsDeleted] AS [IsDeleted]
        FROM    [dbo].[User] AS [Extent1]
        INNER JOIN  (SELECT [Extent2].[UserID] AS [UserID], [Extent3].[RegionID] AS [RegionID]
            FROM  [dbo].[UserToRegionRole] AS [Extent2]
            INNER JOIN [dbo].[RegionToRole] AS [Extent3] ON [Extent2].[RegionRoleID] = [Extent3].[ID] ) AS [Join1] ON [Extent1].[ID] = [Join1].[UserID]
        INNER JOIN [dbo].[RegionExpand] AS [Extent4] ON [Join1].[RegionID] = [Extent4].[ParentRegionID]
        INNER JOIN [dbo].[Region] AS [Extent5] ON [Extent4].[RegionID] = [Extent5].[ID]
        WHERE ([Extent1].[IsDeleted] <> 1) AND ([Extent1].[ID] = @p__linq__0)
    )  AS [Project1]
    WHERE  EXISTS (SELECT 
        1 AS [C1]
        FROM [dbo].[RegionToRole] AS [Extent6]
        WHERE ([Project1].[ID] = [Extent6].[RegionID]) AND (7 = [Extent6].[RoleID])
    )
{code};;;","23/Dec/16 12:24;ptupitsyn;I've reproduced the bug. It is caused by the fact that the same entity set is used multiple times in the query, and duplicates are not removed when handling the versions in {{DbCache.GetEntitySetVersions()}}.;;;","23/Dec/16 13:55;ptupitsyn;Fixed in master;;;","21/Feb/17 14:33;alexbchr;Any chances seeing this resolved in version 1.9 of Ignite? 
I don't see this ticket referenced in 1.9 release [tickets|https://cwiki.apache.org/confluence/display/IGNITE/Apache+Ignite+1.9], even though you said it's fixed in master branch.;;;","21/Feb/17 14:39;ptupitsyn;[~alexbchr] fix version was incorrectly set to 2.0. I've updated it and wiki page now contains the ticket. 

Code wise the fix is certainly in {{master}} and {{ignite-1.9}} branches:
https://github.com/apache/ignite/commit/781e5b7c93a1ee47299fc94519efbd0bea020940;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: SqlQuery with DateTime arguments does not work,IGNITE-4413,13027435,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,12/Dec/16 12:42,11/Jan/17 10:58,14/Jul/23 06:20,12/Dec/16 15:24,1.6,1.7,1.8,2.0,platforms,,,,,0,.NET,,,"DateTime arguments are serialized incorrectly when using SqlQuery.
This is not the case with SqlFieldsQuery and LINQ. See CacheImpl.WriteQueryArgs and QueryBase.WriteQueryArgs.

To reproduce:
{code}
new SqlQuery(""where datefrom <= ?"", DateTime.UtcNow)
{code}",,githubbot,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 11 10:57:58 UTC 2017,,,,,,,,,,"0|i37h93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/16 14:05;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1341

    IGNITE-4413 .NET: Fix DateTime argument handling in SqlQuery

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4413

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1341.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1341
    
----
commit e71b900b052f99425940437018a5bf3e2c1aa1f7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-12-12T13:23:54Z

    IGNITE-4413 .NET: SqlQuery with DateTime arguments does not work

commit 0979a57dbab1db630d4870faab8be78ea230f853
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-12-12T13:28:25Z

    wip

commit bb75df3f2bf714d71824dae6908ff8181829e4b0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-12-12T13:39:33Z

    revert

commit a154406b8de2b4b4aaae19ba7581145c330e190b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-12-12T13:42:54Z

    wip

commit 5f240fe60e59ead1bdde5c0cfbe9fe5dc23b6f8a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-12-12T13:50:33Z

    wip tests

commit 9700a492137e9df570c0dc4397ab7f0bb4872386
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-12-12T14:02:53Z

    Fix DateTime args serialization

commit 65f1c0dd9d85f67805b0458e6771ce5f35d0228a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-12-12T14:04:43Z

    Fix test

----
;;;","12/Dec/16 14:53;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1341
;;;","11/Jan/17 10:57;krybakova;Verified in 1.8.2 using dotnet examples:
added Date field to Emploee and the following into query example:
{code}
            var qry2 = cache.Query(new SqlQuery(typeof(Employee), ""where Date <= ?"", System.DateTime.UtcNow));

            foreach (var entry in qry2)
                Console.WriteLine("">>>    "" + entry.Value);
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: NLogLoggerTest is not thread safe,IGNITE-4412,13027400,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,,ptupitsyn,ptupitsyn,12/Dec/16 09:34,09/Jan/17 21:09,14/Jul/23 06:20,09/Jan/17 12:38,1.8,,,2.0,platforms,,,,,0,.NET,newbie,,"NLog.Targets.MemoryTarget is not thread safe, the test can sometimes fail. Replace this target with our own synchronized implementation.",,githubbot,gurustron,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jan 09 12:38:47 UTC 2017,,,,,,,,,,"0|i37h1b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jan/17 18:20;githubbot;GitHub user gurustron opened a pull request:

    https://github.com/apache/ignite/pull/1401

    IGNITE-4412 fix NLogLoggerTest thread safety issue

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gurustron/ignite ignite-4412

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1401.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1401
    
----
commit e64c700067600150336a7ef21018d6444ab24293
Author: Sergey Stronchinskiy <sergey.stronchinskiy@kraftvaerk.com>
Date:   2017-01-05T18:18:22Z

    IGNITE-4412 fix NLogLoggerTest thread safety issue

----
;;;","05/Jan/17 18:48;gurustron;Team City looks good: http://ci.ignite.apache.org/viewLog.html?buildId=410551&tab=buildResultsDiv&buildTypeId=IgniteTests_IgnitePlatformNet;;;","09/Jan/17 12:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1401
;;;","09/Jan/17 12:38;ptupitsyn;Looks good to me, merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock with striped pool,IGNITE-4411,13027184,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sboikov,yzhdanov,yzhdanov,10/Dec/16 09:11,15/Dec/16 09:16,14/Jul/23 06:20,15/Dec/16 09:16,,,,2.0,cache,,,,,0,,,,"I think we need to rewrite test either to use static JVM local atomic long or submit cache atomic long increment closure to parallel thread and change value check to cycle with condition wait

{noformat}
[15:49:29,501][WARN ][grid-timeout-worker-#14968%replicated.GridCachePartitionedFairAffinityMultiNodeFullApiSelfTest0%][G] >>> Possible starvation in striped pool: sys-stripe-0-#14954%replicated.GridCachePartitionedFairAffinityMultiNodeFullApiSelfTest0%
[Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridNearTxPrepareResponse [pending=[], futId=3cefb1ae851-45363875-1d17-4def-a565-ed045430c63a, miniId=4cefb1ae851-45363875-1d17-4def-a565-ed045430c63a, dhtVer=GridCacheVersion [topVer=92839713, time=1481359713993, order=1481359711974, nodeOrder=4], writeVer=GridCacheVersion [topVer=92839713, time=1481359713993, order=1481359711975, nodeOrder=4], invalidParts=null, ownedVals=null, retVal=GridCacheReturn [v=null, cacheObj=null, success=true, invokeRes=false, loc=true, cacheId=0], clientRemapVer=null, super=GridDistributedTxPrepareResponse [txState=null, err=null, super=GridDistributedBaseMessage [ver=GridCacheVersion [topVer=92839713, time=1481359713993, order=1481359711973, nodeOrder=1], committedVers=null, rolledbackVers=null, cnt=0, super=GridCacheMessage [msgId=3399625, depInfo=GridDeploymentInfoBean [clsLdrId=80eab1ae851-ad92cf87-855c-4c83-8d65-4df93a000003, depMode=SHARED, userVer=0, locDepOwner=true, participants=null], err=null, skipPrepare=false, cacheId=0, cacheId=0]]]]]]]
deadlock: false
completed: 101
Thread [name=""sys-stripe-0-#14954%replicated.GridCachePartitionedFairAffinityMultiNodeFullApiSelfTest0%"", id=16497, state=WAITING, blockCnt=0, waitCnt=102]
    Lock [object=o.a.i.i.processors.cache.distributed.near.GridNearTxFinishFuture@42abf08e, ownerName=null, ownerId=-1]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:964)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1282)
        at o.a.i.i.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:159)
        at o.a.i.i.util.future.GridFutureAdapter.get(GridFutureAdapter.java:119)
        at o.a.i.i.processors.cache.transactions.IgniteTxLocalAdapter.commit(IgniteTxLocalAdapter.java:567)
        at o.a.i.i.processors.datastructures.GridCacheAtomicLongImpl$3.call(GridCacheAtomicLongImpl.java:105)
        at o.a.i.i.processors.datastructures.GridCacheAtomicLongImpl$3.call(GridCacheAtomicLongImpl.java:91)
        at o.a.i.i.processors.cache.GridCacheUtils$21.call(GridCacheUtils.java:1628)
        at o.a.i.i.processors.cache.GridCacheUtils.outTx(GridCacheUtils.java:866)
        at o.a.i.i.processors.datastructures.GridCacheAtomicLongImpl.incrementAndGet(GridCacheAtomicLongImpl.java:250)
        at o.a.i.i.processors.cache.distributed.near.GridCachePartitionedMultiNodeFullApiSelfTest$SwapUnswapLocalListener.apply(GridCachePartitionedMultiNodeFullApiSelfTest.java:471)
        at o.a.i.i.processors.cache.distributed.near.GridCachePartitionedMultiNodeFullApiSelfTest$SwapUnswapLocalListener.apply(GridCachePartitionedMultiNodeFullApiSelfTest.java:452)
        at o.a.i.i.managers.eventstorage.GridEventStorageManager$UserListenerWrapper.onEvent(GridEventStorageManager.java:1183)
        at o.a.i.i.managers.eventstorage.GridEventStorageManager.notifyListeners(GridEventStorageManager.java:770)
        at o.a.i.i.managers.eventstorage.GridEventStorageManager.notifyListeners(GridEventStorageManager.java:755)
        at o.a.i.i.managers.eventstorage.GridEventStorageManager.record(GridEventStorageManager.java:295)
        at o.a.i.i.processors.cache.GridCacheEventManager.addEvent(GridCacheEventManager.java:297)
        at o.a.i.i.processors.cache.GridCacheSwapManager$4.apply(GridCacheSwapManager.java:763)
        at o.a.i.i.processors.cache.GridCacheSwapManager$4.apply(GridCacheSwapManager.java:745)
        at o.a.i.spi.swapspace.file.FileSwapSpaceSpi.remove(FileSwapSpaceSpi.java:427)
        at o.a.i.i.managers.swapspace.GridSwapSpaceManager.remove(GridSwapSpaceManager.java:239)
        at o.a.i.i.processors.cache.GridCacheSwapManager.readAndRemoveSwap(GridCacheSwapManager.java:745)
        at o.a.i.i.processors.cache.GridCacheSwapManager.readAndRemove(GridCacheSwapManager.java:717)
        at o.a.i.i.processors.cache.GridCacheSwapManager.readAndRemove(GridCacheSwapManager.java:889)
        at o.a.i.i.processors.cache.GridCacheMapEntry.unswap(GridCacheMapEntry.java:567)
        at o.a.i.i.processors.cache.GridCacheMapEntry.unswap(GridCacheMapEntry.java:503)
        at o.a.i.i.processors.cache.GridCacheMapEntry.unswap(GridCacheMapEntry.java:497)
        at o.a.i.i.processors.cache.transactions.IgniteTxManager.lockMultiple(IgniteTxManager.java:1635)
        at o.a.i.i.processors.cache.transactions.IgniteTxManager.prepareTx(IgniteTxManager.java:861)
        at o.a.i.i.processors.cache.distributed.GridDistributedTxRemoteAdapter.prepare(GridDistributedTxRemoteAdapter.java:398)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler.startRemoteTx(IgniteTxHandler.java:1527)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler.processDhtTxPrepareRequest(IgniteTxHandler.java:950)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler$5.apply(IgniteTxHandler.java:169)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler$5.apply(IgniteTxHandler.java:167)
        at o.a.i.i.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:831)
        at o.a.i.i.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:373)
        at o.a.i.i.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:295)
        at o.a.i.i.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:96)
        at o.a.i.i.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:240)
        at o.a.i.i.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at o.a.i.i.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at o.a.i.i.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
        at o.a.i.i.managers.communication.GridIoManager$6.run(GridIoManager.java:787)
        at o.a.i.i.util.StripedExecutor$Stripe.run(StripedExecutor.java:428)
        at java.lang.Thread.run(Thread.java:724)
{noformat}",,sboikov,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 15 09:16:29 UTC 2016,,,,,,,,,,"0|i37fpb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/16 09:16;sboikov;Test uses IgniteAtomicLong to work in multi-jvm mode, so fixed it to run increment from another thread and use 'waitForCondition'.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UUID fields of the key class deserialized in a wrong way on INSERT.,IGNITE-4409,13026982,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,isapego,isapego,09/Dec/16 12:39,01/Mar/17 14:33,14/Jul/23 06:20,20/Feb/17 15:05,1.8,,,1.9,sql,,,,,0,,,,"Consider the following case. There is a class which is used as Key on C++ side. It contains 3 fields: String, Timestamp and UUID. There is also a value of the type Integer. Record of the cache is being inserted with {{SqlFieldsQuery}}:
{noformat}
INSERT INTO Integer (str, ts, guid, _val) VALUES (?, ?, ?, ?)
{noformat}

String, Timestamp and Integer values serialized and desirialized just fine, but UUID value is passed further just like byte array of 17 bytes, first of which is 10 (UUID type header in  Binary format), so later it gets converted here:
{noformat}
""main@1"" prio=5 tid=0x1 nid=NA runnable
  java.lang.Thread.State: RUNNABLE
      at org.h2.value.ValueUuid.get(ValueUuid.java:68)
      at org.h2.value.Value.convertTo(Value.java:861)
      at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.convert(DmlStatementsProcessor.java:637)
      at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.rowToKeyValue(DmlStatementsProcessor.java:868)
      at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.doInsert(DmlStatementsProcessor.java:745)
      at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.executeUpdateStatement(DmlStatementsProcessor.java:286)
      at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.updateSqlFields(DmlStatementsProcessor.java:159)
      at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.updateSqlFieldsTwoStep(DmlStatementsProcessor.java:189)
      at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryTwoStep(IgniteH2Indexing.java:1266)
      at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.applyx(GridQueryProcessor.java:812)
      at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.applyx(GridQueryProcessor.java:810)
      at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
      at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:1777)
      at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryTwoStep(GridQueryProcessor.java:810)
      at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:749)
      at org.apache.ignite.internal.processors.platform.cache.PlatformCache.runFieldsQuery(PlatformCache.java:1205)
      at org.apache.ignite.internal.processors.platform.cache.PlatformCache.processInStreamOutObject(PlatformCache.java:837)
      at org.apache.ignite.internal.processors.platform.PlatformAbstractTarget.inStreamOutObject(PlatformAbstractTarget.java:90)
{noformat}

Obviously enough, it gets deserialized wrong because of the header byte and as a result, we get wrong key instance in the cache.",,al.psc,avinogradov,githubbot,isapego,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 01 14:33:41 UTC 2017,,,,,,,,,,"0|i37egf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Feb/17 16:12;avinogradov;FixVersion changed to 2.0.
In case issue can be done till Feb 17 please rollback this change.;;;","16/Feb/17 14:54;vozerov;Let's see if we can make it in 1.9 because described problem may affect multiple use cases.;;;","20/Feb/17 11:12;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/1554

    IGNITE-4409 UUID literals handling.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4409

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1554.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1554
    
----
commit 3fd684390016483cd67af5f3b05b477b8fdf540a
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-02-20T11:07:12Z

    IGNITE-4409 UUID literals handling.

----
;;;","01/Mar/17 14:33;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1554
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare Cloud Images for 1.8 Release,IGNITE-4402,13026765,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ntikhonov,dmagda,dmagda,08/Dec/16 19:00,16/Jan/17 11:53,14/Jul/23 06:20,16/Jan/17 11:53,,,,1.8,,,,,,0,,,,"We have to prepare all the AI 1.8 cloud images for the environments listed here:
https://ignite.apache.org/download.cgi#docker

Once this done, share the URLs with me and I'll update the site.",,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 13 10:32:57 UTC 2016,,,,,,,,,,"0|i37d47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Dec/16 13:36;ntikhonov;I've updated image on docker hub.
https://hub.docker.com/r/apacheignite/ignite/~/dockerfile/ ;;;","09/Dec/16 17:53;dmagda;[~ntikhonov], what's for Amazon and Google Compute Images? Are you preparing them as well?

;;;","12/Dec/16 17:33;ntikhonov;[~dmagda]
I've updated images. That correct links at these:
AWS:  
  US-WEST ami-9cdbb3fc https://console.aws.amazon.com/ec2/home?region=us-west-1#launchAmi=ami-9cdbb3fc,
  US-EAST  ami-ce82caa4  https://console.aws.amazon.com/ec2/home?region=us-east-1#launchAmi=ami-ce82caa4
  EU-CENTRAL  ami-191b0775  https://console.aws.amazon.com/ec2/home?region=eu-central-1#launchAmi=ami-191b0775
Google Cloud:
  https://storage.googleapis.com/ignite-media/ignite-google-image.tar.gz

;;;","12/Dec/16 20:27;dmagda;[~ntikhonov], thanks! One question. Do we need to update these images all the time new release goes out? As I see we use IGNITE_VERSION parameter everywhere and I have a feeling that images update may be something redundant.;;;","13/Dec/16 10:32;ntikhonov;[~dmagda]
Yes, it not needed. IGNITE_VERSION allows using any version of ignite.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: incorrect authentication under IE 11 (windows 10),IGNITE-4398,13026631,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,08/Dec/16 10:36,19/Dec/17 03:35,14/Jul/23 06:20,05/Dec/17 04:42,,,,,wizards,,,,,0,,,,"To reproduce:
1) log in as User1
2) create some cluster and save
3) log out
4) log in as User2

You will see the cluster from User1.
Note: IE specific only",,alexdel,anovikov,kuaw26,pkonstantinov,,,,,,,,,"Сreated an issue;08/Dec/16 10:40;pkonstantinov;6",,,,,,,,,,,,,,,,,,,,,,,,,0,6,,,0,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 19 03:35:01 UTC 2017,,,,,,,,,,"0|i37caf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/17 09:08;alexdel;Fixed. Please test;;;","23/Nov/17 04:15;alexdel;[~pkonstantinov] Updated cache disable mechanism. Please test;;;","23/Nov/17 08:41;pkonstantinov;Tested in branch;;;","28/Nov/17 15:20;kuaw26;[~anovikov] Please review.;;;","29/Nov/17 03:10;anovikov;Please, take a look.
https://stackoverflow.com/questions/39404588/prevent-cache-when-serving-a-json-response-in-node-js-api/39407519;;;","29/Nov/17 05:42;alexdel;Implemented caching as described here: https://stackoverflow.com/questions/5017454/make-ie-to-cache-resources-but-always-revalidate, Please review;;;","29/Nov/17 06:57;alexdel;[~anovikov] Moved header cache stuff to upper level;;;","05/Dec/17 04:42;anovikov;Reviewed. Looks good. Merged to master.;;;","05/Dec/17 04:46;anovikov;[~pkonstantinov], merged to master please retest.;;;","19/Dec/17 03:35;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Failed to edit File system checkpoint spi paths.,IGNITE-4396,13026608,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,08/Dec/16 08:44,21/Dec/16 09:19,14/Jul/23 06:20,21/Dec/16 06:24,1.9,,,2.0,wizards,,,,,0,,,,"# Add FIle system checkpoint spi configuration.
# Add some paths.
# Try to remove or edit path.

angular.js:13920 TypeError: Cannot create property 'FS' on string 'b'
    at fn (eval at compile (angular.js:14817), <anonymous>:4:813)
    at expensiveCheckFn (angular.js:15906)
    at callback (angular.js:25885)
    at Scope.$eval (angular.js:17682)
    at Scope.$apply (angular.js:17782)
    at HTMLElement.<anonymous> (angular.js:25890)
    at HTMLElement.dispatch (jquery.js:5201)
    at HTMLElement.elemData.handle (jquery.js:5009)

",,Dmitriyff,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 21 09:19:26 UTC 2016,,,,,,,,,,"0|i37c5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Dec/16 11:51;Dmitriyff;added fix
;;;","21/Dec/16 03:06;vsisko;Tested. Fixed removing of rows.;;;","21/Dec/16 09:19;pkonstantinov;Tested.Closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Web console: memory leak when dialog ""Connection to Ignite Node is not established"" on the screen",IGNITE-4394,13026586,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,08/Dec/16 06:49,24/Nov/17 05:20,14/Jul/23 06:20,21/Nov/17 15:02,,,,2.4,wizards,,,,,0,,,,I've noticed memory leak in case when dialog is opened during long period.,,alexdel,kuaw26,pkonstantinov,,,,,,,,,,"Created an issue;08/Dec/16 10:53;pkonstantinov;6",,,,,,,,,,,,,,,,,,,,,,,,,0,6,,,0,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Nov 24 04:47:25 UTC 2017,,,,,,,,,,"0|i37c0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 07:04;alexdel;Configured service for enabling garbage collection.;;;","21/Nov/17 15:02;kuaw26;Looks good. Merged to master.;;;","24/Nov/17 04:47;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect Karaf OSGI feature for ignite-rest-http,IGNITE-4387,13026359,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,skozlov,Sergiuss,Sergiuss,07/Dec/16 14:04,04/Jul/19 21:50,14/Jul/23 06:20,14/Apr/17 08:41,1.7,,,2.0,clients,osgi,,,,0,,,,In accordance with the commit f177d4312c47 (IGNITE-3277 Replaced outdated json-lib 2.4 to modern Jackson 2.7.5) dependencies in module ignite-rest-http have been updated. But Karaf OSGI features config has not been updated.,,githubbot,kuaw26,Sergiuss,,,,,,,,,,"dspavlov commented on issue #1330: IGNITE-4387 Fix incorrect Karaf OSGI feature for ignite-rest-http
URL: https://github.com/apache/ignite/pull/1330#issuecomment-508581820
 
 
   
   IGNITE-4387 | Resolved 
   
   Feel free to reopen if needed
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:50;githubbot;600","dspavlov commented on pull request #1330: IGNITE-4387 Fix incorrect Karaf OSGI feature for ignite-rest-http
URL: https://github.com/apache/ignite/pull/1330
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 14 08:41:01 UTC 2017,,,,,,,,,,"0|i37alz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Dec/16 06:35;githubbot;GitHub user SergiusSidorov opened a pull request:

    https://github.com/apache/ignite/pull/1330

    IGNITE-4387 Fix incorrect Karaf OSGI feature for ignite-rest-http

    IGNITE-4387 Fix

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/SergiusSidorov/ignite ignite-4387

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1330.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1330
    
----
commit 2b7e5766290c2f3ea666336b8ce86f8aaed38d1d
Author: Sergej Sidorov <sergius.sidorov@gmail.com>
Date:   2016-12-08T06:32:00Z

    IGNITE-4387 Fix incorrect Karaf OSGI feature for ignite-rest-http

----
;;;","08/Dec/16 07:06;Sergiuss;PR #1330
Test IgniteKarafFeaturesInstallationTest has been fixed;;;","14/Apr/17 08:41;kuaw26;OSGI suite TC passed. Merged to master.
Please test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop tests affect each other through IgniteHadoopClientProtocolProvider#cliMap,IGNITE-4386,13026358,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,iveselovskiy,iveselovskiy,07/Dec/16 14:02,12/Dec/16 10:35,14/Jul/23 06:20,12/Dec/16 10:35,1.7,,,2.0,hadoop,,,,,0,,,,"Tests affect each other through map
org.apache.ignite.hadoop.mapreduce.IgniteHadoopClientProtocolProvider#cliMap that never clears. 

For example, test org.apache.ignite.internal.processors.hadoop.impl.client.HadoopClientProtocolMultipleServersSelfTest#testSingleAddress sometimes fails if test org.apache.ignite.internal.processors.hadoop.impl.client.HadoopClientProtocolSelfTest#testJobCounters runs before it.",,githubbot,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4341,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 12 08:30:16 UTC 2016,,,,,,,,,,"0|i37alr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Dec/16 14:10;iveselovskiy;https://github.com/apache/ignite/pull/1327 ;;;","07/Dec/16 14:22;iveselovskiy;Shall we also invoke org.apache.ignite.internal.client.GridClientFactory#stopAll() ?;;;","08/Dec/16 10:54;vozerov;Ivan,
I would prefer to have more clean way to clear client map - do that when client is closed. We should use method {{IgniteHadoopClientProtocolProvider.close}} for this.

Concurrency should be scalable enough.;;;","08/Dec/16 19:45;iveselovskiy;reimplemented. TC tests passed. 
branch ""ignite-4341-4386"" contains both  the fixes.;;;","09/Dec/16 14:01;vozerov;Ivan,

Currently one closed protocol will close GridClient for all other protocols created from the same provider, what is not correct.;;;","09/Dec/16 16:40;iveselovskiy;Fixed. Tests passed.;;;","12/Dec/16 07:52;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/1339

    IGNITE-4386

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4386-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1339.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1339
    
----
commit bfb00b6e61f9709718c30971997aeb0ac79e86b4
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-18T20:12:28Z

    IgniteTcpCommunicationBigClusterTest added

commit 02dd92e605b9b53f5a16c7ec5f8e7b5698b15ba4
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-18T21:55:37Z

    IgniteTcpCommunicationBigClusterTest update

commit 6acf193a3d356d1bad4c02a53ac76833ed1008d0
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-19T09:55:45Z

    Have got TcpCommunicationSpi error

commit 4fd39653d24f62f19f70b4dffba8497185cc46fb
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-19T16:39:10Z

    Some discovery have been done

commit c2c181922c7c24ea457577e32d2af897c8bec87f
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-19T20:11:28Z

    Prove that problem is not in the onFirstMessage hang

commit f8076edba097f6077229b2090ee3ff1a3369878c
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-19T20:26:37Z

    Revert: Prove that problem is not in the onFirstMessage hang

commit 6e1f2dfc2acb3dbb8f24aa51ed67b2ee447b4585
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-21T08:55:09Z

    Revert: pushing unnecessary changes to the master

commit ed794ca815f6bb1471af15779279d287576b39cc
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-21T09:08:00Z

    Revert: pushing unnecessary changes to the master

commit e4357ca34b531a855379d841155e92919e69d42e
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-12-07T14:07:44Z

    ignite-4386

commit 2482e48781a9b879024edac64e6e892c5734ede5
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-12-08T18:21:38Z

    4386: new implementation based on job.getCluster().close()

commit ac568c822228ce1d57b97167df3d06055b42ece0
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-12-08T19:40:21Z

    4386: cosmetic beautifications.

commit 67db940c93b4d515d2f3d4c1b2da7c83f58f4de9
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-09T13:46:02Z

    Merge branch 'master' into ignite-4386
    
    # Conflicts:
    #	modules/hadoop/src/test/java/org/apache/ignite/internal/processors/hadoop/impl/client/HadoopClientProtocolMultipleServersSelfTest.java

commit 86584b0ed5a68635ec61e8c214069a636d93a30b
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-09T14:04:19Z

    Minors.

commit 91ef548d787fb56a71ea034b80e81a6a38ea2b19
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-12-09T15:56:55Z

    4386: implemented client usage counter.

commit 81005c672fe636bf1fba41bd11f989914a93c71c
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-12-09T16:13:53Z

    4386: cosmetic changes.

commit d9752340e44b80c4791943a880f49a00c02ef941
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-12T07:06:53Z

    Merge remote-tracking branch 'upstream/ignite-4386' into ignite-4386

commit 44f97b9f44d85dce9a056a69454d39013c74ed4a
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-12T07:40:30Z

    Review.

commit c7ce7e64583938b14718d3c7d066431e873e9801
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-12T07:40:43Z

    Review.

commit e75b4dbe6b8640fe692b124a0ee7b85e075adc60
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-12T07:43:29Z

    Minors.

----
;;;","12/Dec/16 08:30;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/1339
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: LINQ requires IQueryable in joins,IGNITE-4385,13026342,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,ptupitsyn,ptupitsyn,07/Dec/16 12:26,23/Dec/16 16:07,14/Jul/23 06:20,23/Dec/16 16:07,1.7,1.8,,2.0,platforms,,,,,0,.NET,LINQ,,"This does not work:
{code}
var q3 = from ic in GetCache<Contract>().AsCacheQueryable()
    from pp in GetCache<PaymentPlan>().AsCacheQueryable()
    select pp.Value;
{code}

Error:
{code}
Unexpected query source: GetCache().AsCacheQueryable()
{code}

And this does work:
{code}
var contracts = GetCache<Contract>().AsCacheQueryable();
var paymentPlans = GetCache<PaymentPlan>().AsCacheQueryable();
var q3 = from ic in contracts
    from pp in paymentPlans
    select pp.Value;
{code}

While it is usually possible to extract variables, this is an inconvenience. See if we can support such expressions (evaluate irrelevant part automatically).",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 23 16:07:34 UTC 2016,,,,,,,,,,"0|i37ai7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Dec/16 16:07;ptupitsyn;Fixed in master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Local SQL field query broken in master,IGNITE-4379,13026064,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,06/Dec/16 17:38,19/Apr/17 05:27,14/Jul/23 06:20,09/Dec/16 12:43,,,,2.0,sql,,,,,0,,,,"Local SQL field query returns entries from backup partition.

For now query context is being cleared in IgniteH2Indexing.queryLocalSqlFields() method before query is really executed.

It seems, GridQueryFieldsResultAdapter should restore query context before query run in iterator() method or move back query execution to outside GridQueryFieldsResultAdapter.
",,amashenkov,ascherbakov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4414,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 22 15:16:38 UTC 2016,,,,,,,,,,"0|i378sf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/16 17:48;amashenkov;It looks like, it was broken in [https://issues.apache.org/jira/browse/IGNITE-2680];;;","06/Dec/16 19:44;amashenkov;[~ascherbakov], would you please explain if it is really need to move query execution to GridQueryFieldsResultAdapter.iterator() method?;;;","07/Dec/16 10:18;ascherbakov;This is required for deferred query execution.

Andrew, please move context management inside GridQueryFieldsResultAdapter.;;;","07/Dec/16 11:02;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1323

    IGNITE-4379: SQL: Local SQL field query broken in master

    Fixed broken local SQLFieldsQuery.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4379

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1323.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1323
    
----
commit 312a64be2bcbf44e50e95595c3207a6c130dc486
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-12-07T10:50:37Z

    Fixed broken local SQLFieldsQuery.

----
;;;","07/Dec/16 11:13;amashenkov;Fixed.
Pending for TC tests.;;;","07/Dec/16 16:41;amashenkov;Tests looks good.;;;","22/Dec/16 15:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1323
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot find schema for object with compact footer,IGNITE-4377,13025999,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,06/Dec/16 15:55,28/Aug/17 16:38,14/Jul/23 06:20,31/Jul/17 08:51,1.7,1.8,,2.3,cache,compute,,,,0,,,,"When invoking a computation which returns an object from *client* node, ""Cannot find schema for object with compact footer"" exception occurs some times (only during first invocation)

{code}
class org.apache.ignite.binary.BinaryObjectException: Cannot find schema for object with compact footer [typeId=2005649068, schemaId=-1206298342]

	at org.apache.ignite.internal.binary.BinaryReaderExImpl.getOrCreateSchema(BinaryReaderExImpl.java:1738)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:279)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:178)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:157)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.deserialize(GridBinaryMarshaller.java:298)
	at org.apache.ignite.internal.binary.BinaryMarshaller.unmarshal0(BinaryMarshaller.java:100)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.unmarshal(AbstractNodeNameAwareMarshaller.java:82)
	at org.apache.ignite.internal.util.IgniteUtils.unmarshal(IgniteUtils.java:9751)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.onResponse(GridTaskWorker.java:808)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.processJobExecuteResponse(GridTaskProcessor.java:996)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor$JobMessageListener.onMessage(GridTaskProcessor.java:1221)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1082)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:710)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:102)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:673)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{code}

Reproducer:
{code}
package org.apache.ignite;

import org.apache.ignite.platform.PlatformComputeBinarizable;
import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;

public class ClientModeCompactFooterTest extends GridCommonAbstractTest {
    public ClientModeCompactFooterTest() {
        super(false);
    }

    public void test() throws Exception {
        for (int i =0; i < 100; i++) {
            startGrid(""server"", ""modules\\platforms\\dotnet\\Apache.Ignite.Core.Tests\\Config\\Compute\\compute-grid1.xml"");
            Ignite client = startGrid(""client"", ""modules\\platforms\\dotnet\\Apache.Ignite.Core.Tests\\Config\\Compute\\compute-grid3.xml"");

            PlatformComputeBinarizable res = client.compute().execute(""org.apache.ignite.platform.PlatformComputeEchoTask"", 12);
            assertEquals(1, res.field);

            stopAllGrids();
        }
    }
}
{code}",,avolkov,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4367,IGNITE-3194,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jul 31 08:50:52 UTC 2017,,,,,,,,,,"0|i378dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 08:30;avolkov;Retested for master. No exceptions during reproducer runs.
[~ptupitsyn], could you please recheck from your side?;;;","31/Jul/17 08:50;ptupitsyn;Checked in master, problem seems to be gone. Updated .NET tests: {{d758a3f1b09def177b11d85c782ff11e274cfdec}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Failed to run reduce query locally with a valid query,IGNITE-4376,13025964,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,06/Dec/16 13:41,06/Apr/17 12:41,14/Jul/23 06:20,06/Apr/17 12:41,1.7,,,2.0,sql,,,,,0,,,,"Reported by Ignite.NET user:

{code}
javax.cache.CacheException: Failed to run reduce query locally.
    at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:754)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$5.iterator(IgniteH2Indexing.java:1119)
    at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:98)
    at org.apache.ignite.internal.processors.platform.cache.query.PlatformAbstractQueryCursor.processInLongOutLong(PlatformAbstractQueryCursor.java:142)
    at org.apache.ignite.internal.processors.platform.PlatformAbstractTarget.inLongOutLong(PlatformAbstractTarget.java:66)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to parse SQL query: SELECT
__C0 NATURALKEY,
((PR.PR_PER_PROJECTS_PERCENTCOMPLETED / 100.0) * SUM(__C1)) AS EXPR1
FROM PUBLIC.__T0
GROUP BY __C0, __C2
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.preparedStatementWithParams(IgniteH2Indexing.java:913)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:985)
    at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:709)
    ... 4 more
Caused by: org.h2.jdbc.JdbcSQLException: Column ""PR.PR_PER_PROJECTS_PERCENTCOMPLETED"" not found; SQL statement:
SELECT
__C0 NATURALKEY,
((PR.PR_PER_PROJECTS_PERCENTCOMPLETED / 100.0) * SUM(__C1)) AS EXPR1
FROM PUBLIC.__T0
GROUP BY __C0, __C2 [42122-191]
    at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
    at org.h2.message.DbException.get(DbException.java:179)
    at org.h2.message.DbException.get(DbException.java:155)
    at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
    at org.h2.expression.Operation.optimize(Operation.java:181)
    at org.h2.expression.Operation.optimize(Operation.java:181)
    at org.h2.expression.Alias.optimize(Alias.java:51)
    at org.h2.command.dml.Select.prepare(Select.java:852)
    at org.h2.command.Parser.prepareCommand(Parser.java:257)
    at org.h2.engine.Session.prepareLocal(Session.java:560)
    at org.h2.engine.Session.prepareCommand(Session.java:501)
    at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1188)
    at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
    at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:276)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.prepareStatement(IgniteH2Indexing.java:425)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.preparedStatementWithParams(IgniteH2Indexing.java:910)
    ... 6 more
{code}

Query (works in H2 console):
{code}
select pr.NATURALKEY, (pr.PR_PER_PROJECTS_PERCENTCOMPLETED / 100.0) * sum(a.AS_RIO_ASSIGNMENTS_PERIODCOST) as Expr1
from ""Landscape"".MI_MILESTONES mi 
Inner join ""Landscape"".PR_HAS_MI_A t0 on t0.MI_ID_A = MI.NATURALKEY 
Inner join ""Landscape"".PR_HAS_AS_A t1 on t1.PR_ID_HAS = t0.PR_ID_HAS 
Inner join ""Landscape"".PR_HAS_OW_A t2 on t2.PR_ID_HAS = t0.PR_ID_HAS 
Inner join ""Landscape"".AS_ASSIGNMENTS a on a.NATURALKEY = t1.AS_ID_A 
inner join ""Landscape"".PR_PROJECTS pr on pr.NATURALKEY = t0.PR_ID_HAS 
inner join ""Landscape"".OW_OWNERSHIP ow on ow.NATURALKEY=t2.OW_ID_A 
group by 
pr.NATURALKEY, pr.PR_PER_PROJECTS_PERCENTCOMPLETED
{code}

Query entity config:
{code}
<queryEntities>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PR_Projects"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""PR_NAM_Projects_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_DES_Projects_Description"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_FIN_Projects_FinanceCode"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_STA_Projects_StartDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""PR_INI_Projects_FinishDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""PR_TAT_Projects_StatusDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""PR_DUR_Projects_Duration"" fieldType=""System.Int32"" fieldTypeName=""java.lang.Integer"" />
	<queryField name=""PR_PER_Projects_PercentCompleted"" fieldType=""System.Int32"" fieldTypeName=""java.lang.Integer"" />
	<queryField name=""PR_ERC_Projects_PercentWorkComplet"" fieldType=""System.Int32"" fieldTypeName=""java.lang.Integer"" />
	<queryField name=""PR_PRO_Projects_ProjectCategory"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_LIF_Projects_LifecyclePhase"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_RAG_Projects_RAGPast"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_AGC_Projects_RAGCurrent"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_AGF_Projects_RAGFuture"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_QUA_Projects_QualityLevel"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_PLA_Projects_PlanType"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PR_WIT_Projects_WithoutAssignments"" fieldType=""System.Boolean"" fieldTypeName=""java.lang.Boolean"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""MI_Milestones"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""MI_NAM_Milestones_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""MI_IND_Milestones_Index"" fieldType=""System.Int32"" fieldTypeName=""java.lang.Integer"" />
	<queryField name=""MI_ISM_Milestones_IsMilestoneFlag"" fieldType=""System.Boolean"" fieldTypeName=""java.lang.Boolean"" />
	<queryField name=""MI_ISA_Milestones_IsActiveFlag"" fieldType=""System.Boolean"" fieldTypeName=""java.lang.Boolean"" />
	<queryField name=""MI_MIL_Milestones_MilestoneType"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""MI_STA_Milestones_StartDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""MI_FIN_Milestones_FinishDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""MI_PER_Milestones_PercentComplete"" fieldType=""System.Int32"" fieldTypeName=""java.lang.Integer"" />
	<queryField name=""MI_BAS_Milestones_Baseline0FinishDat"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""MI_ASE_Milestones_Baseline1FinishDat"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""MI_DAT_Milestones_Date10Percent"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""MI_ATE_Milestones_Date50Percent"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""MI_TEP_Milestones_Date90Percent"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""MI_REP_Milestones_ReportingLevel"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""MI_SEL_Milestones_BaselineRAG"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""MI_MAN_Milestones_ManagementTeamDire"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""AS_Assignments"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""AS_PER_Assignments_PeriodStartDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""AS_ERI_Assignments_PeriodFinishDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""AS_WOR_Assignments_WorkFTE"" fieldType=""System.Double"" fieldTypeName=""java.lang.Double"" />
	<queryField name=""AS_ORK_Assignments_WorkDays"" fieldType=""System.Double"" fieldTypeName=""java.lang.Double"" />
	<queryField name=""AS_RIO_Assignments_PeriodCost"" fieldType=""System.Decimal"" fieldTypeName=""java.math.BigDecimal"" />
	<queryField name=""AS_FTE_Assignments_FTEDaysDelivered"" fieldType=""System.Double"" fieldTypeName=""java.lang.Double"" />
	<queryField name=""AS_TEA_Assignments_FTEActualCost"" fieldType=""System.Decimal"" fieldTypeName=""java.math.BigDecimal"" />
	<queryField name=""AS_WIT_Assignments_WithoutProjects"" fieldType=""System.Boolean"" fieldTypeName=""java.lang.Boolean"" />
	<queryField name=""AS_ITH_Assignments_WithoutRoles"" fieldType=""System.Boolean"" fieldTypeName=""java.lang.Boolean"" />
	<queryField name=""AS_THO_Assignments_WithoutFTEContract"" fieldType=""System.Boolean"" fieldTypeName=""java.lang.Boolean"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PO_Posts"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""PO_NAM_Posts_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PO_ISA_Posts_IsActiveFlag"" fieldType=""System.Boolean"" fieldTypeName=""java.lang.Boolean"" />
	<queryField name=""PO_ISG_Posts_IsGenericFlag"" fieldType=""System.Boolean"" fieldTypeName=""java.lang.Boolean"" />
	<queryField name=""PO_GRA_Posts_Grade"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PO_MIL_Posts_MilitaryorCivilian"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""PO_FUN_Posts_FunctionalGroup"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""RO_Roles"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""RO_NAM_Roles_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""SU_Suppliers"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SU_NAM_Suppliers_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PE_People"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""PE_NAM_People_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""OW_Ownership"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""OW_NAM_Ownership_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
	<queryField name=""OW_STA_Ownership_StartDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
	<queryField name=""OW_FIN_Ownership_FinishDate"" fieldType=""System.DateTime"" fieldTypeName=""java.sql.Timestamp"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""FT_FTEContracts"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""FT_NAM_FTEContracts_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""DE_DeliverableContrac"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""DE_NAM_DeliverableContrac_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""SE_ServiceContracts"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SE_NAM_ServiceContracts_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""ER_Services"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""ER_NAM_Services_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""RV_ServiceDeliveries"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""RV_NAM_ServiceDeliveries_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""IN_Incidents"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""IN_NAM_Incidents_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""VI_ServiceLevels"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""VI_NAM_ServiceLevels_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""SS_Assets"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SS_NAM_Assets_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""IS_ISSCoreServiceRequ"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""IS_NAM_ISSCoreServiceRequ_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""ES_DesignAuthorityRev"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""ES_NAM_DesignAuthorityRev_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""BU_BusinessUnitServic"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""BU_NAM_BusinessUnitServic_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""US_BUServiceDesigns"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""US_NAM_BUServiceDesigns_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""UI_BUISInitiatives"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""UI_NAM_BUISInitiatives_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""SI_BusinessUnitCapabi"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SI_NAM_BusinessUnitCapabi_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""NE_BusinessUnits"">
  <fields>
	<queryField name=""naturalKey"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""NE_NAM_BusinessUnits_Name"" fieldType=""System.String"" fieldTypeName=""java.lang.String"" />
  </fields>
  <indexes>
	<queryIndex name=""naturalkey_asc_idx"">
	  <fields>
		<queryIndexField name=""naturalKey"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PR_has_MI_a"">
  <fields>
	<queryField name=""PR_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""MI_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""pr_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""PR_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""mi_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""MI_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PR_has_SU_a"">
  <fields>
	<queryField name=""PR_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SU_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""su_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""SU_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""pr_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""PR_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PR_has_OW_a"">
  <fields>
	<queryField name=""PR_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""OW_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""ow_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""OW_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""pr_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""PR_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PE_has_OW_a"">
  <fields>
	<queryField name=""PE_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""OW_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""pe_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""PE_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""ow_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""OW_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PR_has_AS_a"">
  <fields>
	<queryField name=""PR_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""AS_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""as_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""AS_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""pr_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""PR_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PO_has_RO_a"">
  <fields>
	<queryField name=""PO_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""RO_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""po_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""PO_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""ro_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""RO_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""AS_has_RO_a"">
  <fields>
	<queryField name=""AS_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""RO_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""as_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""AS_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""ro_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""RO_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PO_has_PE_a"">
  <fields>
	<queryField name=""PO_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""PE_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""po_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""PO_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""pe_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""PE_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""AS_has_FT_a"">
  <fields>
	<queryField name=""AS_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""FT_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""as_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""AS_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""ft_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""FT_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""MI_has_DE_a"">
  <fields>
	<queryField name=""MI_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""DE_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""mi_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""MI_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""de_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""DE_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""FT_has_SU_a"">
  <fields>
	<queryField name=""FT_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SU_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""su_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""SU_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""ft_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""FT_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""DE_has_SU_a"">
  <fields>
	<queryField name=""DE_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SU_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""su_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""SU_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""de_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""DE_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""SU_has_SE_a"">
  <fields>
	<queryField name=""SU_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SE_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""se_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""SE_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""su_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""SU_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""SE_has_ER_a"">
  <fields>
	<queryField name=""SE_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""ER_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""er_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""ER_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""se_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""SE_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""ER_has_RV_a"">
  <fields>
	<queryField name=""ER_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""RV_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""rv_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""RV_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""er_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""ER_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""RV_has_IN_a"">
  <fields>
	<queryField name=""RV_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""IN_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""rv_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""RV_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""in_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""IN_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""RV_has_VI_a"">
  <fields>
	<queryField name=""RV_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""VI_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""rv_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""RV_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""vi_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""VI_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""MI_has_SS_a"">
  <fields>
	<queryField name=""MI_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SS_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""ss_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""SS_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""mi_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""MI_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""SS_has_ER_a"">
  <fields>
	<queryField name=""SS_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""ER_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""er_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""ER_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""ss_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""SS_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""PR_has_IS_a"">
  <fields>
	<queryField name=""PR_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""IS_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""is_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""IS_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""pr_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""PR_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""RV_has_BU_a"">
  <fields>
	<queryField name=""RV_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""BU_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""rv_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""RV_Id_has"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""bu_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""BU_Id_a"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""BU_has_SI_a"">
  <fields>
	<queryField name=""BU_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SI_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""si_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""SI_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""bu_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""BU_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""SI_has_NE_a"">
  <fields>
	<queryField name=""SI_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""NE_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""ne_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""NE_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""si_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""SI_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""UI_has_SI_a"">
  <fields>
	<queryField name=""UI_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""SI_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""si_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""SI_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""ui_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""UI_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""US_has_UI_a"">
  <fields>
	<queryField name=""US_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""UI_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""ui_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""UI_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""us_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""US_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""IS_has_US_a"">
  <fields>
	<queryField name=""IS_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""US_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""us_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""US_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""is_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""IS_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
<queryEntity keyTypeName=""java.lang.Long"" keyType=""System.Int64"" valueTypeName=""US_has_ES_a"">
  <fields>
	<queryField name=""US_Id_has"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
	<queryField name=""ES_Id_a"" fieldType=""System.Int64"" fieldTypeName=""java.lang.Long"" />
  </fields>
  <indexes>
	<queryIndex name=""es_id_a_asc_idx"">
	  <fields>
		<queryIndexField name=""ES_Id_a"" />
	  </fields>
	</queryIndex>
	<queryIndex name=""us_id_has_asc_idx"">
	  <fields>
		<queryIndexField name=""US_Id_has"" />
	  </fields>
	</queryIndex>
  </indexes>
</queryEntity>
</queryEntities>
{code}",,ptupitsyn,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Apr 06 12:41:57 UTC 2017,,,,,,,,,,"0|i37867:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/16 14:19;ptupitsyn;I can reproduce this with empty cache, just configure query entities and execute the query. .NET query entities are mapped to Java query entities, but I'm not sure how to produce Spring XML out of existing Java CacheConfiguration at runtime.;;;","06/Dec/16 14:21;sergi;I see what the problem is. Will fix it as part of IGNITE-3860;;;","06/Apr/17 12:41;ptupitsyn;Seems to be fixed as part of IGNITE-3860;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Neat TX finish request processing may fall into sync wait of dht finish response,IGNITE-4371,13025844,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sboikov,yzhdanov,yzhdanov,06/Dec/16 04:55,19/Dec/16 13:07,14/Jul/23 06:20,19/Dec/16 13:07,,,,2.0,cache,,,,,0,,,,"After fixing this please remove TODO and put proper partition ID to org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxFinishResponse#partition

{noformat}
        Thread [name=""sys-stripe-1-#30%dht.GridCacheColocatedTxExceptionSelfTest1%"", id=46, state=WAITING, blockCnt=0, waitCnt=7]
    Lock [object=o.a.i.i.processors.cache.distributed.dht.GridDhtTxFinishFuture@212874c9, ownerName=null, ownerId=-1]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:994)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1303)
        at o.a.i.i.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:159)
        at o.a.i.i.util.future.GridFutureAdapter.get(GridFutureAdapter.java:117)
        at o.a.i.i.processors.cache.distributed.dht.GridDhtTxFinishFuture.onError(GridDhtTxFinishFuture.java:183)
        at o.a.i.i.processors.cache.distributed.dht.GridDhtTxLocal.finishCommit(GridDhtTxLocal.java:543)
        at o.a.i.i.processors.cache.distributed.dht.GridDhtTxLocal.commitAsync(GridDhtTxLocal.java:580)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:849)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:728)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:687)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:157)
        at o.a.i.i.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:155)
        at o.a.i.i.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:758)
        at o.a.i.i.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:363)
        at o.a.i.i.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:287)
        at o.a.i.i.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:89)
        at o.a.i.i.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:232)
        at o.a.i.i.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1212)
        at o.a.i.i.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:840)
        at o.a.i.i.managers.communication.GridIoManager.access$2100(GridIoManager.java:110)
        at o.a.i.i.managers.communication.GridIoManager$6.run(GridIoManager.java:785)
        at o.a.i.i.util.StripedExecutor$Stripe.run(StripedExecutor.java:362)
        at java.lang.Thread.run(Thread.java:724)
{noformat}",,sboikov,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 16 14:36:20 UTC 2016,,,,,,,,,,"0|i377fj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Dec/16 14:36;sboikov;Fixed problem with synchronous rollback in GridNearTxFinishFuture.onDone and in GridDhtTxFinishFuture.onError.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inner properties mutation broken in SQL UPDATE,IGNITE-4363,13025236,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,al.psc,al.psc,02/Dec/16 22:51,24/Jan/19 13:06,14/Jul/23 06:20,08/Feb/17 10:48,1.8,,,2.0,binary,sql,,,,0,,,,"Discovered in course of working on IGNITE-4340.

Say, we have following type for cache values

{code:java}
static final class AllTypes implements Serializable {
        /**
         * Data Long.
         */
        @QuerySqlField
        Long longCol;

        /**
         * Inner type object.
         */
        @QuerySqlField
        InnerType innerTypeCol;

        /** */
        static final class InnerType implements Serializable {
            /** */
            @QuerySqlField
            Long innerLongCol;

            /** */
            @QuerySqlField
            String innerStrCol;
       }
}
{code}

Queries like this fail for both optimized and binary marshaller:

{code:sql}
UPDATE AllTypes set innerLongCol = ?
{code}

For optimized, current DML implementation mutates existing inner property thus confusing DML statements re-run logic (query re-runs because engine sees value as concurrently modified, though the only change is its own, and ultimately fails). The solution is to clone inner objects and set new property values on them because we need to have old value pristine.

For binary, current DML implementation does not honor properties hierarchy and, for above example, just sets {{innerLongCol}} field on {{AllTypes}} binary object and not its child {{InnerType}} object. Thus, index will be updated and SELECTs for that column will return correct value for that field, but inner state of target property {{innerTypeCol}} does not change, and {{AllTypes}} object gets its own odd field {{innerLongCol}} which it does not know how to do with (no metadata about it in type descriptor).

The patch for both problems is ready and lying on my shelf waiting for 1.8 release to happen to be applied. Then this will ultimately be fixed with the rest of known problems/improvements (Jira issues for them will follow).",,al.psc,pkouznet,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4669,,,,,,,,,,,,,,,,,,,IGNITE-10824,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 07 15:55:27 UTC 2017,,,,,,,,,,"0|i373of:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Dec/16 15:20;vozerov;Alex, I re-merged the ticket with master. Please confirm status of TC.;;;","27/Dec/16 14:38;al.psc;[~vozerov] TC looks fine to me, all tests that have failed appear to be flaky ones.;;;","02/Feb/17 10:47;vozerov;[~al.psc],
It seems that this fix conflicts with some other SQL change related to properties. Could you please re-merge from {{master}} and resolve the conflict?;;;","03/Feb/17 11:41;al.psc;[~vozerov] merged, TC is on the run.;;;","06/Feb/17 14:32;vozerov;Alex,
LGTM. I re-merged PR w/ {{master}} again and performed some minor fixes to error message logging. 
Could you please confirm that tests are fine?;;;","07/Feb/17 15:55;ptupitsyn;Looks like .NET tests are broken by this commit: http://ci.ignite.apache.org/viewLog.html?buildId=442967

[~al.psc] can you please have a look?

Also, I do not see a pull request here, can you please link it to the ticket?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DML: BinaryObjectBuilder does not sort fields in some cases,IGNITE-4354,13024802,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,ptupitsyn,ptupitsyn,01/Dec/16 15:21,10/Apr/17 13:35,14/Jul/23 06:20,10/Apr/17 13:34,1.8,,,2.0,binary,sql,,,,0,DML,,,"One of the setField methods uses TreeMap<> to sort fields, depending on BinaryUtils.FIELDS_SORTED_ORDER.

However, there are other places where assignedVals is initialized (setField, removeField) which are not updated to use TreeMap.

Make sure to put this logic in one place.",,al.psc,amashenkov,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2626,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 10 13:35:53 UTC 2017,,,,,,,,,,"0|i370zz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/17 13:46;amashenkov;BinaryUtils.FIELDS_SORTED_ORDER depends on deprecated property IgniteSystemProperties.IGNITE_BINARY_SORT_OBJECT_FIELDS that should be removed in 2.0.

Is there a plan to remove this property and always use TreeMap? Or fields natural sort order is still needed?;;;","08/Apr/17 17:13;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/1759

    IGNITE-4354

    Consistent logic to initialize BinaryObjectBuilderImpl.assignedVals field

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4354

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1759.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1759
    
----
commit 48ab0eb3c40f37c3cba421dc43f695884aadf797
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-04-08T17:09:39Z

    IGNITE-4354 Consistent logic to initialize BinaryObjectBuilderImpl.assignedVals field

----
;;;","08/Apr/17 17:14;al.psc;[~vozerov] I've submitted a patch for this, please review: https://github.com/apache/ignite/pull/1759;;;","10/Apr/17 13:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1759
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parent Cassandra module deployed on maven repository,IGNITE-4353,13024778,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,01/Dec/16 14:14,01/Dec/16 16:12,14/Jul/23 06:20,01/Dec/16 14:46,1.8,,,1.8,,,,,,0,,,,{{ignite-cassandra}} module deployed on maven repository though has no binary artifacts.,,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 01 16:12:27 UTC 2016,,,,,,,,,,"0|i370un:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/16 16:12;skozlov;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: NPE when cache name is different from the one configured in DSN,IGNITE-4347,13024620,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,dmagda,dmagda,30/Nov/16 23:47,12/Dec/16 08:41,14/Jul/23 06:20,02/Dec/16 09:35,,,,1.8,odbc,,,,,0,,,,"The following query was executed from PHP PDO side

{code}
$dbs = $dbh->prepare('INSERT INTO Person (_key, firstName, lastName, resume, salary) 
        VALUES (?, ?, ?, ?, ?)');
{code}

The cache name in Spring XML configuration was ""Person"" while the DSN was configured to use ""PersonCache"" as a default cache name.

As a result, I was getting NPE shown in the attached screenshot. Only after I sorted out the root cause of the NPE referring to the source code I could finally fix the issue.

Let's provide more meaningful explanation rather than throwing NPE saying something like ""The cache named {cache_name} has not been found. Make sure that ODBC connection string or DSN is configured properly.""

",,dmagda,githubbot,krybakova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/16 23:47;dmagda;exception.png;https://issues.apache.org/jira/secure/attachment/12841172/exception.png",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 12 08:41:30 UTC 2016,,,,,,,,,,"0|i36zvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/16 11:57;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1305

    IGNITE-4347: Fixed NPE.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-4347

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1305.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1305
    
----
commit 6633904bc28b8d47b16588b1a3dff84922c21efb
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-12-01T11:55:42Z

    IGNITE-4347: Fixed NPE.

----
;;;","05/Dec/16 12:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1305
;;;","12/Dec/16 08:41;krybakova;Verified.
{noformat}
PHP Warning:  PDO::exec(): SQLSTATE[HY000]: General error: 0 Cache doesn't exist (did you configure it?): abc (SQLExecDirect[0] at ext\pdo_odbc\odbc_driver.c:247)
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DML and PHP PDO: double field is converted to bigdecimal,IGNITE-4346,13024615,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,al.psc,dmagda,dmagda,30/Nov/16 23:33,02/Dec/16 15:10,14/Jul/23 06:20,02/Dec/16 15:10,,,,1.8,,,,,,0,,,,"I've set up PHP PDO and ODBC environment according to the following documentation
https://apacheignite-mix.readme.io/docs/php-pdo

In particular:
- The ODBC driver was built from the latest 1.8 sources located in ignite-1.8 branch. 
- The DSN configuration is shown in the attached screenshot name ""dsn_configuration""
- Ignite's cluster configuration is attached as well.

To reproduce the issue do the following:
- start a node using attached default-config.xml
- execute insert.php. There won't be any error.
- execute update.php and you'll get the error with the stack trace below

{code}
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to execute DML
 statement [qry=UPDATE Person SET salary = 42000.0 WHERE salary > 50000.0, param
s=[]]
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.execut
eQuery(GridQueryProcessor.java:1800)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryT
woStep(GridQueryProcessor.java:810)
        ... 13 more
Caused by: class org.apache.ignite.internal.processors.query.IgniteSQLException:
 Failed to execute DML statement [qry=UPDATE Person SET salary = 42000.0 WHERE s
alary > 50000.0, params=[]]
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.query
TwoStep(IgniteH2Indexing.java:1270)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.appl
yx(GridQueryProcessor.java:812)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.appl
yx(GridQueryProcessor.java:810)
        at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOu
tClosureX.java:36)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.execut
eQuery(GridQueryProcessor.java:1777)
        ... 14 more
Caused by: class org.apache.ignite.internal.transactions.IgniteTxHeuristicChecke
dException: Failed to locally write to cache (all transaction entries will be in
validated, however there was a window when entries for this transaction were vis
ible to others): GridNearTxLocal [mappings=IgniteTxMappingsSingleImpl [mapping=G
ridDistributedTxMapping [entries=[IgniteTxEntry [key=KeyCacheObjectImpl [val=777
, hasValBytes=false], cacheId=1215863053, partId=-1, txKey=IgniteTxKey [key=KeyC
acheObjectImpl [val=777, hasValBytes=false], cacheId=1215863053], val=[op=TRANSF
ORM, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryPr
ocessorsCol=[IgniteBiTuple [val1=org.apache.ignite.internal.processors.query.h2.
DmlStatementsProcessor$ModifyingEntryProcessor@1f2f10da, val2=[Ljava.lang.Object
;@2bfa5294]], ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null,
 dhtVer=GridCacheVersion [topVer=92027384, time=1480547401695, order=14805473813
93, nodeOrder=1], filters=[], filtersPassed=false, filtersSet=true, entry=GridDh
tColocatedCacheEntry [super=GridDhtCacheEntry [rdrs=[], locPart=GridDhtLocalPart
ition [id=777, map=org.apache.ignite.internal.processors.cache.GridCacheConcurre
ntMapImpl@24c94530, rmvQueue=GridCircularBuffer [sizeMask=255, idxGen=0], cntr=1
, shouldBeRenting=false, state=OWNING, reservations=0, empty=false, createTime=1
1/30/2016 15:09:45], super=GridDistributedCacheEntry [super=GridCacheMapEntry [k
ey=KeyCacheObjectImpl [val=777, hasValBytes=false], val=Person [idHash=659295625
, hash=-322179972, resume=Secret Service agent, firstName=James, lastName=Bond,
salary=65000.0], startVer=1480547381389, ver=GridCacheVersion [topVer=92027384,
time=1480547394518, order=1480547381390, nodeOrder=1], hash=777, extras=GridCach
eMvccEntryExtras [mvcc=GridCacheMvcc [locs=[GridCacheMvccCandidate [nodeId=08b20
b4b-3ca6-4c05-aa9d-4219cbc3f3f5, ver=GridCacheVersion [topVer=92027384, time=148
0547401693, order=1480547381392, nodeOrder=1], timeout=0, ts=1480547401693, thre
adId=57, id=3, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], reentry
=null, otherNodeId=08b20b4b-3ca6-4c05-aa9d-4219cbc3f3f5, otherVer=GridCacheVersi
on [topVer=92027384, time=1480547401693, order=1480547381392, nodeOrder=1], mapp
edDhtNodes=null, mappedNearNodes=null, ownerVer=null, serOrder=null, key=KeyCach
eObjectImpl [val=777, hasValBytes=false], masks=local=1|owner=1|ready=1|reentry=
0|used=0|tx=1|single_implicit=1|dht_local=1|near_local=0|removed=0, prevVer=null
, nextVer=null]], rmts=null]], flags=0]]]], prepared=1, locked=false, nodeId=08b
20b4b-3ca6-4c05-aa9d-4219cbc3f3f5, locMapped=false, expiryPlc=null, transferExpi
ryPlc=false, flags=6, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion
 [topVer=92027384, time=1480547401693, order=1480547381392, nodeOrder=1]]], expl
icitLock=false, dhtVer=GridCacheVersion [topVer=92027384, time=1480547401693, or
der=1480547381392, nodeOrder=1], last=false, near=false, clientFirst=false, node
=08b20b4b-3ca6-4c05-aa9d-4219cbc3f3f5]], nearLocallyMapped=false, colocatedLocal
lyMapped=true, needCheckBackup=null, hasRemoteLocks=false, thread=odbc-#27%null%
, mappings=IgniteTxMappingsSingleImpl [mapping=GridDistributedTxMapping [entries
=[IgniteTxEntry [key=KeyCacheObjectImpl [val=777, hasValBytes=false], cacheId=12
15863053, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=777, hasValB
ytes=false], cacheId=1215863053], val=[op=TRANSFORM, val=null], prevVal=[op=NOOP
, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=[IgniteBiTuple [val1
=org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor$Modifying
EntryProcessor@1f2f10da, val2=[Ljava.lang.Object;@2bfa5294]], ttl=-1, conflictEx
pireTime=-1, conflictVer=null, explicitVer=null, dhtVer=GridCacheVersion [topVer
=92027384, time=1480547401695, order=1480547381393, nodeOrder=1], filters=[], fi
ltersPassed=false, filtersSet=true, entry=GridDhtColocatedCacheEntry [super=Grid
DhtCacheEntry [rdrs=[], locPart=GridDhtLocalPartition [id=777, map=org.apache.ig
nite.internal.processors.cache.GridCacheConcurrentMapImpl@24c94530, rmvQueue=Gri
dCircularBuffer [sizeMask=255, idxGen=0], cntr=1, shouldBeRenting=false, state=O
WNING, reservations=0, empty=false, createTime=11/30/2016 15:09:45], super=GridD
istributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=777,
hasValBytes=false], val=Person [idHash=659295625, hash=-322179972, resume=Secret
 Service agent, firstName=James, lastName=Bond, salary=65000.0], startVer=148054
7381389, ver=GridCacheVersion [topVer=92027384, time=1480547394518, order=148054
7381390, nodeOrder=1], hash=777, extras=GridCacheMvccEntryExtras [mvcc=GridCache
Mvcc [locs=[GridCacheMvccCandidate [nodeId=08b20b4b-3ca6-4c05-aa9d-4219cbc3f3f5,
 ver=GridCacheVersion [topVer=92027384, time=1480547401693, order=1480547381392,
 nodeOrder=1], timeout=0, ts=1480547401693, threadId=57, id=3, topVer=AffinityTo
pologyVersion [topVer=1, minorTopVer=0], reentry=null, otherNodeId=08b20b4b-3ca6
-4c05-aa9d-4219cbc3f3f5, otherVer=GridCacheVersion [topVer=92027384, time=148054
7401693, order=1480547381392, nodeOrder=1], mappedDhtNodes=null, mappedNearNodes
=null, ownerVer=null, serOrder=null, key=KeyCacheObjectImpl [val=777, hasValByte
s=false], masks=local=1|owner=1|ready=1|reentry=0|used=0|tx=1|single_implicit=1|
dht_local=1|near_local=0|removed=0, prevVer=null, nextVer=null]], rmts=null]], f
lags=0]]]], prepared=1, locked=false, nodeId=08b20b4b-3ca6-4c05-aa9d-4219cbc3f3f
5, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=6, partUpdate
Cntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=92027384, time=14805474
01693, order=1480547381392, nodeOrder=1]]], explicitLock=false, dhtVer=GridCache
Version [topVer=92027384, time=1480547401693, order=1480547381392, nodeOrder=1],
 last=false, near=false, clientFirst=false, node=08b20b4b-3ca6-4c05-aa9d-4219cbc
3f3f5]], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[],
 dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null
, sndTransformedVals=false, depEnabled=false, txState=IgniteTxImplicitSingleStat
eImpl [init=true], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=920273
84, time=1480547401693, order=1480547381392, nodeOrder=1], writeVer=GridCacheVer
sion [topVer=92027384, time=1480547401695, order=1480547381393, nodeOrder=1], im
plicit=true, loc=true, threadId=57, startTime=1480547401693, nodeId=08b20b4b-3ca
6-4c05-aa9d-4219cbc3f3f5, startVer=GridCacheVersion [topVer=92027384, time=14805
47401693, order=1480547381392, nodeOrder=1], endVer=null, isolation=READ_COMMITT
ED, concurrency=OPTIMISTIC, timeout=0, sysInvalidate=false, sys=false, plc=2, co
mmitVer=GridCacheVersion [topVer=92027384, time=1480547401693, order=14805473813
92, nodeOrder=1], finalizing=NONE, preparing=false, invalidParts=null, state=COM
MITTING, timedOut=false, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0
], duration=0ms, onePhaseCommit=true], size=1]]]
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLoca
lAdapter.userCommit(IgniteTxLocalAdapter.java:950)
        at org.apache.ignite.internal.processors.cache.distributed.near.GridNear
TxLocal.finish(GridNearTxLocal.java:747)
        at org.apache.ignite.internal.processors.cache.distributed.near.GridNear
TxFinishFuture.finish(GridNearTxFinishFuture.java:418)
        at org.apache.ignite.internal.processors.cache.distributed.near.GridNear
TxLocal$4.apply(GridNearTxLocal.java:868)
        at org.apache.ignite.internal.processors.cache.distributed.near.GridNear
TxLocal$4.apply(GridNearTxLocal.java:860)
        at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListen
er(GridFutureAdapter.java:264)
        at org.apache.ignite.internal.util.future.GridFutureAdapter.listen(GridF
utureAdapter.java:227)
        at org.apache.ignite.internal.processors.cache.distributed.near.GridNear
TxLocal.commitAsync(GridNearTxLocal.java:860)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLoca
lAdapter.optimisticPutFuture(IgniteTxLocalAdapter.java:3219)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLoca
lAdapter.putAllAsync0(IgniteTxLocalAdapter.java:3185)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLoca
lAdapter.invokeAsync(IgniteTxLocalAdapter.java:1907)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter$33.op(Gr
idCacheAdapter.java:2518)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter$33.op(Gr
idCacheAdapter.java:2514)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter.syncOp(G
ridCacheAdapter.java:4351)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invokeAl
l(GridCacheAdapter.java:2514)
        at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor
.processPage(DmlStatementsProcessor.java:758)
        at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor
.doUpdate(DmlStatementsProcessor.java:535)
        at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor
.executeUpdateStatement(DmlStatementsProcessor.java:285)
        at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor
.updateSqlFields(DmlStatementsProcessor.java:155)
        at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor
.updateSqlFieldsTwoStep(DmlStatementsProcessor.java:185)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.query
TwoStep(IgniteH2Indexing.java:1266)
        ... 18 more
Caused by: java.lang.ClassCastException: java.math.BigDecimal cannot be cast to
java.lang.Double
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$RowDe
scriptor.wrap(IgniteH2Indexing.java:2962)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyV
alueRow.getValue(GridH2AbstractKeyValueRow.java:316)
        at org.h2.index.BaseIndex.compareRows(BaseIndex.java:294)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex$2.
compare(GridH2TreeIndex.java:103)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex$2.
compare(GridH2TreeIndex.java:95)
        at java.util.concurrent.ConcurrentSkipListMap.cpr(ConcurrentSkipListMap.
java:655)
        at java.util.concurrent.ConcurrentSkipListMap.doPut(ConcurrentSkipListMa
p.java:835)
        at java.util.concurrent.ConcurrentSkipListMap.put(ConcurrentSkipListMap.
java:1581)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.pu
t(GridH2TreeIndex.java:362)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpda
te(GridH2Table.java:566)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update
(GridH2Table.java:495)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.store
(IgniteH2Indexing.java:603)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.store(
GridQueryProcessor.java:737)
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManag
er.store(GridCacheQueryManager.java:431)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.updateI
ndex(GridCacheMapEntry.java:4019)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerSe
t(GridCacheMapEntry.java:1253)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLoca
lAdapter.userCommit(IgniteTxLocalAdapter.java:784)
        ... 38 more
{code} 

",,al.psc,dmagda,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4340,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/16 23:35;dmagda;default-config.xml;https://issues.apache.org/jira/secure/attachment/12841166/default-config.xml","30/Nov/16 23:38;dmagda;dsn_configuration.png;https://issues.apache.org/jira/secure/attachment/12841169/dsn_configuration.png","30/Nov/16 23:35;dmagda;insert.php;https://issues.apache.org/jira/secure/attachment/12841167/insert.php","30/Nov/16 23:35;dmagda;update.php;https://issues.apache.org/jira/secure/attachment/12841168/update.php",,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 02 14:57:32 UTC 2016,,,,,,,,,,"0|i36zuf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Nov/16 23:37;dmagda;[~isapego], please assist Alexander with the debugging and fixing of the issue so that he doesn't need to set up PHP environment on his side.

Don't forget to add missing tests.;;;","01/Dec/16 07:12;al.psc;Allora, signori, rilassatevi per favore: I'm sure this is fixed by IGNITE-4340. Igor, please try to reproduce everything described by Denis on branch ignite-4340.;;;","01/Dec/16 11:44;isapego;Denis, Alexander,

I've tried to reproduce the issue on the ignite-4340 and it can't be reproduced on this branch.;;;","01/Dec/16 11:46;al.psc;Just as expected. Thanks Igor. [~dmagda] I suggest that we close this as a duplicate to IGNITE-4340.;;;","01/Dec/16 15:08;dmagda;When IGNITE-4340 is expected to be merged in 1.8 branch?;;;","01/Dec/16 16:18;al.psc;I assume tomorrow.;;;","02/Dec/16 09:58;isapego;I'll check again, when IGNITE-4340 is going to be merged in 1.8.;;;","02/Dec/16 14:57;isapego;I've checked on ignite-1.8. Everything seems to be working.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
incorrect/outdated info on site,IGNITE-4345,13024525,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,pgarg,SergeyKa,SergeyKa,30/Nov/16 17:56,13/Dec/16 19:43,14/Jul/23 06:20,13/Dec/16 19:41,,,,1.8,documentation,,,,,0,,,,"Old/icorrect info on the site.

1) http://ignite.apache.org/download.cgi#docker
   a) ""guide"" link points to 1.5 version
   b) ""docker repository"" is a broken link, should be 
https://hub.docker.com/u/apacheignite/
i guess.


2) https://apacheignite.readme.io/v1.7/docs/docker-deployment
IGNITE_CONFIG ""example url""'s file (https://raw.githubusercontent.com/
bob/master/ignite-cfg.xml) does not exists.
I think, it may be pointed to the some file in the current github repo. 
",,dmagda,ntikhonov,pgarg,SergeyKa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 13 19:40:55 UTC 2016,,,,,,,,,,"0|i36zaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Nov/16 18:36;dmagda;I've fixed point 1.

[~ntikhonov], please take care of 2. 

In general, please review the overall Docker-related documentation cleaning out an outdated information
https://apacheignite.readme.io/docs/docker-deployment

In addition, please answer on the following:

1) Do we still need to use your own repository in this example (https://apacheignite.readme.io/docs/docker-deployment#section-example)?

2) Why AWS and GCE deployment is described in the Docker documentation? Any reason why we don't have dedicated pages for these cloud platforms?
;;;","01/Dec/16 14:35;ntikhonov;Yes. The documentation has been obsolete for version 1.7. I've updated, please look at it.

[~dmagda]
1) No, this parameter not needed.
2) AWS and GCE deployments based on docker and they start docker container. All parameters desribed for docker deployment also apply to AWS and GCE. But we can create for them separate pages. Do you think that this more appropriate?;;;","01/Dec/16 15:20;dmagda;[~ntikhonov],

The documentation is still hard coded to specific versions. For instance, I see the following in the shell commands.

{code}
# Pull ignite version 1.7.0
sudo docker pull apacheignite/ignite:1.7.0
{code}

{code}
# Run ignite version 1.4.0
sudo docker run -it --net=host 
-e ""CONFIG_URI=$CONFIG_URI"" 
[-e ""OPTION_LIBS=$OPTION_LIBS""]
[-e ""JVM_OPTS=$JVM_OPTS""]
...
apacheignite/ignite:1.4.0 
{code}

Let's use something like {ignite-version} instead of 1.4.0 or 1.7.0 to avoid documentation updates every time a new version gets released.

Next, as for AWS and GCE, I would move it to its own documentation pages and clean on out outdated reference to the images. As an example, GCE section refers to this old image (https://storage.googleapis.com/ignite-media/ignite-google-image-1.0.0.tar.gz) which even doesn't exist any longer.

I would modify both AWS and GCE in such a way when there is no need to paste the links to images but rather would provide instruction on how to look for a gridgain image on a cloud environment using its internal search capabilities.;;;","01/Dec/16 15:22;dmagda;In addition, please provide the latest valid links for Docker and Cloud images so that I can update them on the site
https://ignite.apache.org/download.cgi#docker;;;","12/Dec/16 17:33;ntikhonov;[~dmagda]
I've updated documentations and images:
https://apacheignite.readme.io/docs/aws-deployment
https://apacheignite.readme.io/docs/google-compute-deployment;;;","12/Dec/16 20:24;dmagda;[~ntikhonov], thanks a lot for the update!

[~pgarg], please review the language of three documentations below and close the ticket after that.
http://apacheignite.gridgain.org/docs/docker-deployment
https://apacheignite.readme.io/docs/aws-deployment
https://apacheignite.readme.io/docs/google-compute-deployment;;;","13/Dec/16 19:40;pgarg;Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client node allocates off heap memories for caches,IGNITE-4344,13024491,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sboikov,ntikhonov,ntikhonov,30/Nov/16 15:53,16/Mar/17 09:33,14/Jul/23 06:20,01/Dec/16 14:36,1.6,1.7,,1.9,cache,,,,,0,,,,Client node should not allocate memories. Test attached.,,krybakova,ntikhonov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/16 15:54;ntikhonov;OffHeapClientTest.patch;https://issues.apache.org/jira/secure/attachment/12841065/OffHeapClientTest.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Thu Mar 16 09:33:19 UTC 2017,,,,,,,,,,"0|i36z2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/16 14:36;sboikov;Fixed to do not create offheap map on non-affinity nodes.;;;","16/Mar/17 09:33;krybakova;Checked using org.apache.ignite.internal.processors.cache.OffheapCacheOnClientsTest;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Manual rebalance can't be requested twice,IGNITE-4336,13024353,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,dsetrakyan,dsetrakyan,30/Nov/16 08:21,24/Jul/19 17:50,14/Jul/23 06:20,08/Dec/16 15:08,,,,1.9,cache,,,,,0,,,,"Manual rebalancing with ignite.rebalance().get() immediately returns on second try without requesting rebalancing. The reason is that the future that was created for the first rebalance, is reused for the consecutive attempts. We must have a new future for every rebalance attempt.
",,dsetrakyan,githubbot,ilantukh,,,,,,,,,,"dspavlov commented on issue #1306: IGNITE-4336 : Fixed rebalance future.
URL: https://github.com/apache/ignite/pull/1306#issuecomment-514733374
 
 
   
   IGNITE-4336 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:50;githubbot;600","dspavlov commented on pull request #1306: IGNITE-4336 : Fixed rebalance future.
URL: https://github.com/apache/ignite/pull/1306
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 01 22:20:07 UTC 2016,,,,,,,,,,"0|i36y87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/16 12:46;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/1306

    IGNITE-4336 : Fixed rebalance future.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ilantukh/ignite ignite-4336

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1306.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1306
    
----
commit 20a1cfaf0d400a57f3a281bf8a4af1801a12243c
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2016-12-01T12:44:39Z

    ignite-4336 : Fixed rebalance future.

----
;;;","01/Dec/16 22:20;ilantukh;Tests passed, please review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Usage of cache.getEntry inside GridCacheQueryManager.runQuery causes to remote operations,IGNITE-4332,13024108,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,EdShangGG,EdShangGG,29/Nov/16 15:12,30/Nov/16 11:35,14/Jul/23 06:20,30/Nov/16 11:35,1.7,,,1.8,,,,,,0,,,,"Usage of cache.getEntry inside GridCacheQueryManager.runQuery causes to remote operations.

We must avoid remote operations if it is possible.",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 30 11:35:36 UTC 2016,,,,,,,,,,"0|i36wpr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Nov/16 15:16;EdShangGG;https://github.com/apache/ignite/pull/1299

Patch is available. Pls, take a look.;;;","30/Nov/16 11:35;sboikov;Looks good, merged.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Rebuild in Visual Studio fails the first time,IGNITE-4326,13024039,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,29/Nov/16 10:37,16/Dec/16 12:21,14/Jul/23 06:20,29/Nov/16 10:55,1.7,,,1.9,platforms,,,,,0,.NET,,,"Clean then Rebuild fails:
{code}
CS0234	The type or namespace name 'Linq' does not exist in the namespace 'Apache.Ignite' (are you missing an assembly reference?)	Apache.Ignite.Examples	C:\W\incubator-ignite\modules\platforms\dotnet\Examples\Apache.Ignite.Examples\Datagrid\LinqExample.cs
{code}

Consequent build succeeds.
Looks like a missing build dependency.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 29 10:55:04 UTC 2016,,,,,,,,,,"0|i36waf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Nov/16 10:55;ptupitsyn;Build order fixed (examples project depends on Core and Linq);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ScanQuery throws incomprehensible exception when topology does not contain data nodes,IGNITE-4324,13023783,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,williamdo,ntikhonov,ntikhonov,28/Nov/16 16:30,01/Aug/19 21:50,14/Jul/23 06:20,13/Jun/17 10:32,1.7,1.8,,2.1,cache,,,,,0,newbie,,,"ScanQuery throws incomprehensible exception when topology does not contain data nodes (for example with node filter).  See attached test.

{code}
java.lang.IllegalArgumentException: bound must be positive
	at java.util.Random.nextInt(Random.java:388)
	at org.apache.ignite.internal.util.lang.GridFunc.rand(GridFunc.java:677)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter.nodes(GridCacheQueryAdapter.java:582)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter.executeScanQuery(GridCacheQueryAdapter.java:527)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.igniteIterator(GridCacheAdapter.java:4119)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.igniteIterator(GridCacheAdapter.java:4094)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.iterator(IgniteCacheProxy.java:1979)
	at org.apache.ignite.internal.CacheFilterQueryTest.testScanQuery(CacheFilterQueryTest.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1768)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
	at org.apache.ignite.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1706)
	at java.lang.Thread.run(Thread.java:745)
[
{code}",,dmagda,githubbot,ntikhonov,williamdo,,,,,,,,,"dspavlov commented on issue #1935: IGNITE-4324 Check node list is non-empty before query execution
URL: https://github.com/apache/ignite/pull/1935#issuecomment-517470943
 
 
   
   IGNITE-4324 | Closed
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 21:50;githubbot;600","dspavlov commented on pull request #1935: IGNITE-4324 Check node list is non-empty before query execution
URL: https://github.com/apache/ignite/pull/1935
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 21:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/16 16:31;ntikhonov;Tests.patch;https://issues.apache.org/jira/secure/attachment/12840668/Tests.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 13 10:32:48 UTC 2017,,,,,,,,,,"0|i36upj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/May/17 21:21;githubbot;GitHub user WilliamDo opened a pull request:

    https://github.com/apache/ignite/pull/1935

    IGNITE-4324 Check node list is non-empty before query execution

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/WilliamDo/ignite IGNITE-4324

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1935.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1935
    
----
commit 5fc9cf9796c96208124f0d1ae363c6c557ec3b5c
Author: William Do <williamd0@outlook.com>
Date:   2017-05-12T21:18:20Z

    IGNITE-4324 Check node list is non-empty before selecting one for query execution

----
;;;","23/May/17 23:28;dmagda;[~ntikhonov], would you be able to review the fix?;;;","29/May/17 15:16;williamdo;I have checked the tests on TeamCity and there are a number of failures which are unrelated to this fix so am happy to submit the patch pending a review.;;;","08/Jun/17 13:11;ntikhonov;[~williamdo],
Thank you for your contribution! I've reviewed your changes and have only minor notes. I've fixed them (code style and added test for partition cache). I've pushed changes to ignite-4324 branch. Could you look at it? If you don't have any objections, I'll merge the branch to master.;;;","09/Jun/17 21:13;williamdo;[~ntikhonov], yes it's all good thanks!;;;","13/Jun/17 10:32;ntikhonov;I've merged to master. Thank you for your contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: ClientReconnectExample is not clear enough ,IGNITE-4322,13023699,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,krybakova,krybakova,28/Nov/16 10:37,06/Jul/17 17:12,14/Jul/23 06:20,28/Nov/16 13:16,1.8,,,1.9,platforms,,,,,0,,,,"ClientReconnectExample has the following output

{noformat}
>>> Client reconnect example started.
[13:19:53]    __________  ________________
[13:19:53]   /  _/ ___/ |/ /  _/_  __/ __/
[13:19:53]  _/ // (7 7    // /  / / / _/
[13:19:53] /___/\___/_/|_/___/ /_/ /___/
[13:19:53]
[13:19:53] ver. 1.8.0-QASK2501#20161125-sha1:ccbe6007
[13:19:53] 2016 Copyright(C) Apache Software Foundation
[13:19:53]
[13:19:53] Ignite documentation: http://ignite.apache.org
[13:19:53]
[13:19:53] Quiet mode.
[13:19:53]   ^-- Logging to file 'C:\WORK\Releases\apache-ignite-fabric-1.8.0-QASK2501-bin\work\log\ignite-a18708d8.0.log'
[13:19:53]   ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or ""-v"" to ignite.{sh|bat}
[13:19:53]
[13:19:53] OS: Windows 10 10.0 amd64
[13:19:53] VM information: Java(TM) SE Runtime Environment 1.8.0_91-b14 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.91-b14
[13:19:53] Initial heap size is 256MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[13:19:53] Configured plugins:
[13:19:53]   ^-- None
[13:19:53]
[13:19:58] Security status [authentication=off, tls/ssl=off]
[13:19:59] Performance suggestions for grid 'serverNode' (fix if possible)
[13:19:59] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[13:19:59]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[13:19:59]   ^-- Disable fully synchronous writes (set 'writeSynchronizationMode' to PRIMARY_SYNC or FULL_ASYNC)
[13:19:59]
[13:19:59] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[13:19:59]
[13:19:59] Ignite node started OK (id=a18708d8, grid=serverNode)
[13:19:59] Topology snapshot [ver=1, servers=1, clients=0, CPUs=4, heap=3.5GB]
>>> Server node started.
[13:20:00]    __________  ________________
[13:20:00]   /  _/ ___/ |/ /  _/_  __/ __/
[13:20:00]  _/ // (7 7    // /  / / / _/
[13:20:00] /___/\___/_/|_/___/ /_/ /___/
[13:20:00]
[13:20:00] ver. 1.8.0-QASK2501#20161125-sha1:ccbe6007
[13:20:00] 2016 Copyright(C) Apache Software Foundation
[13:20:00]
[13:20:00] Ignite documentation: http://ignite.apache.org
[13:20:00]
[13:20:00] Quiet mode.
[13:20:00]   ^-- Logging to file 'C:\WORK\Releases\apache-ignite-fabric-1.8.0-QASK2501-bin\work\log\ignite-a18708d8.0.log'
[13:20:00]   ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or ""-v"" to ignite.{sh|bat}
[13:20:00]
[13:20:00] OS: Windows 10 10.0 amd64
[13:20:00] VM information: Java(TM) SE Runtime Environment 1.8.0_91-b14 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.91-b14
[13:20:00] Initial heap size is 256MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[13:20:00] Configured plugins:
[13:20:00]   ^-- None
[13:20:00]
[13:20:00] Security status [authentication=off, tls/ssl=off]
[13:20:02] Topology snapshot [ver=2, servers=1, clients=1, CPUs=4, heap=3.5GB]
[13:20:02] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[13:20:02]
[13:20:02] Ignite node started OK (id=2f5922f5)
[13:20:02] Topology snapshot [ver=2, servers=1, clients=1, CPUs=4, heap=3.5GB]
>>> Client node connected to the cluster.
>>> Put value with key:0
>>> Put value with key:1
>>> Put value with key:2
[13:20:04,824][SEVERE][tcp-client-disco-sock-writer-#5%null%][TcpDiscoverySpi] Failed to send message: TcpDiscoveryClientPingRequest [nodeToPing=a18708d8-e489-4b47-a8e9-e16efc6b814e, super=TcpDiscoveryAbstractMessage [sndNodeId=null, id=a9fa27aa851-2f5922f5-d38b-4b4f-80cf-feec8bf52013, verifierNodeId=null, topVer=0, pendingIdx=0, failedNodes=null, isClient=false]]
java.net.SocketException: Socket is closed
        at java.net.Socket.getOutputStream(Socket.java:943)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.writeToSocket(TcpDiscoverySpi.java:1354)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$SocketWriter.body(ClientImpl.java:1088)
        at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
[13:20:04] Ignite node stopped OK [name=serverNode, uptime=00:00:04:899]
>>> Put value with key:3
[13:20:09] New version is available at ignite.apache.org: 1.7.0
>>> Restarting server node...
[13:20:09]    __________  ________________
[13:20:09]   /  _/ ___/ |/ /  _/_  __/ __/
[13:20:09]  _/ // (7 7    // /  / / / _/
[13:20:09] /___/\___/_/|_/___/ /_/ /___/
[13:20:09]
[13:20:09] ver. 1.8.0-QASK2501#20161125-sha1:ccbe6007
[13:20:09] 2016 Copyright(C) Apache Software Foundation
[13:20:09]
[13:20:09] Ignite documentation: http://ignite.apache.org
[13:20:09]
[13:20:09] Quiet mode.
[13:20:09]   ^-- Logging to file 'C:\WORK\Releases\apache-ignite-fabric-1.8.0-QASK2501-bin\work\log\ignite-a18708d8.0.log'
[13:20:09]   ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or ""-v"" to ignite.{sh|bat}
[13:20:09]
[13:20:09] OS: Windows 10 10.0 amd64
[13:20:09] VM information: Java(TM) SE Runtime Environment 1.8.0_91-b14 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.91-b14
[13:20:09] Initial heap size is 256MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[13:20:09] Configured plugins:
[13:20:09]   ^-- None
[13:20:09]
[13:20:09] Security status [authentication=off, tls/ssl=off]
[13:20:10] Performance suggestions for grid 'serverNode' (fix if possible)
[13:20:10] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[13:20:10]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[13:20:10]   ^-- Disable fully synchronous writes (set 'writeSynchronizationMode' to PRIMARY_SYNC or FULL_ASYNC)
[13:20:10]
[13:20:10] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[13:20:10]
[13:20:10] Ignite node started OK (id=791211e8, grid=serverNode)
[13:20:10] Topology snapshot [ver=1, servers=1, clients=0, CPUs=4, heap=3.5GB]
[13:20:12] New version is available at ignite.apache.org: 1.7.0
>>> Client disconnected from the cluster.
[13:20:20] Topology snapshot [ver=2, servers=1, clients=1, CPUs=4, heap=3.5GB]
[13:20:20] Client node was reconnected after it was already considered failed by the server topology (this could happen after all servers restarted or due to a long network outage between the client and servers). All continuous queries and remote event listeners created by this client will be unsubscribed, consider listening to EVT_CLIENT_NODE_RECONNECTED event to restore them.
[13:20:20] New version is available at ignite.apache.org: 1.7.0
>>> Client reconnected to the cluster.
[13:20:20] Topology snapshot [ver=2, servers=1, clients=1, CPUs=4, heap=3.5GB]
>>> Put value with key:5
>>> Put value with key:6
>>> Put value with key:7
>>> Put value with key:8
>>> Put value with key:9

>>> Example finished, press any key to exit ...
[13:20:23] Ignite node stopped OK [name=serverNode, uptime=00:00:12:607]
[13:20:24,312][SEVERE][tcp-client-disco-sock-writer-#5%null%][TcpDiscoverySpi] Failed to send message: TcpDiscoveryClientPingRequest [nodeToPing=791211e8-9f45-4a19-8d8b-79950a421f38, super=TcpDiscoveryAbstractMessage [sndNodeId=null, id=7ffa27aa851-844ade6c-017c-4384-a2a6-cdbf149268dd, verifierNodeId=null, topVer=0, pendingIdx=0, failedNodes=null, isClient=false]]
java.net.SocketException: Socket is closed
        at java.net.Socket.getOutputStream(Socket.java:943)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.writeToSocket(TcpDiscoverySpi.java:1354)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$SocketWriter.body(ClientImpl.java:1088)
        at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{noformat}

The following is confusing:

1) When server node stops we get SocketException but still put key 3 successfully.

2) "">>> Client disconnected from the cluster."" message appears after server restart (should be before). Possibly need to increase this timeout:
{noformat}
// Wait for client to detect the disconnect.
Thread.Sleep(5000);
{noformat}

3) SocketException happens when example finished already.
{noformat}
[13:20:24,312][SEVERE][tcp-client-disco-sock-writer-#5%null%][TcpDiscoverySpi] Failed to send message: TcpDiscoveryClientPingRequest [nodeToPing=791211e8-9f45-4a19-8d8b-79950a421f38, super=TcpDiscoveryAbstractMessage [sndNodeId=null, id=7ffa27aa851-844ade6c-017c-4384-a2a6-cdbf149268dd, verifierNodeId=null, topVer=0, pendingIdx=0, failedNodes=null, isClient=false]]
java.net.SocketException: Socket is closed
        at java.net.Socket.getOutputStream(Socket.java:943)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.writeToSocket(TcpDiscoverySpi.java:1354)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$SocketWriter.body(ClientImpl.java:1088)
        at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{noformat}",,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 28 13:15:47 UTC 2016,,,,,,,,,,"0|i36u6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/16 13:15;ptupitsyn;Console output and timeouts improved.

There is nothing to do with SocketException, it is thrown and caught internally.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cassandra modules,IGNITE-4321,13023684,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,28/Nov/16 10:08,30/Nov/16 10:20,14/Jul/23 06:20,30/Nov/16 10:20,1.8,,,1.8,build,,,,,0,,,,"Binary fabric edition now has following modules:
{noformat}
 Содержимое папки C:\Work\apache-ignite-fabric-1.8.0-QASK2502-bin\libs\optional\ignite-cassandra

25.11.2016  22:13    <DIR>          .
25.11.2016  22:13    <DIR>          ..
25.11.2016  22:13               964 README.txt
               1 файлов            964 байт

 Содержимое папки C:\Work\apache-ignite-fabric-1.8.0-QASK2502-bin\libs\optional\ignite-cassandra-serializers

25.11.2016  22:13    <DIR>          .
25.11.2016  22:13    <DIR>          ..
25.11.2016  22:13            53 231 asm-5.0.3.jar
25.11.2016  22:13            12 181 ignite-cassandra-serializers-1.8.0-QASK2502.jar
25.11.2016  22:13           285 211 kryo-3.0.3.jar
25.11.2016  22:13    <DIR>          licenses
25.11.2016  22:13             5 711 minlog-1.3.0.jar
25.11.2016  22:13            41 755 objenesis-2.1.jar
25.11.2016  22:13             1 345 README.txt
25.11.2016  22:13            20 738 reflectasm-1.10.1.jar
               7 файлов        420 172 байт

 Содержимое папки C:\Work\apache-ignite-fabric-1.8.0-QASK2502-bin\libs\optional\ignite-cassandra-serializers\licenses

25.11.2016  22:13    <DIR>          .
25.11.2016  22:13    <DIR>          ..
25.11.2016  22:13            11 358 apache-2.0.txt
25.11.2016  22:13             1 857 ignite-cassandra-serializers-licenses.txt
               2 файлов         13 215 байт

 Содержимое папки C:\Work\apache-ignite-fabric-1.8.0-QASK2502-bin\libs\optional\ignite-cassandra-store

25.11.2016  22:13    <DIR>          .
25.11.2016  22:13    <DIR>          ..
25.11.2016  22:13           990 392 cassandra-driver-core-3.0.0.jar
25.11.2016  22:13           232 019 commons-beanutils-1.8.3.jar
25.11.2016  22:13         2 308 517 guava-19.0.jar
25.11.2016  22:13            91 897 ignite-cassandra-store-1.8.0-QASK2502.jar
25.11.2016  22:13    <DIR>          licenses
25.11.2016  22:13            85 448 metrics-core-3.0.2.jar
25.11.2016  22:13           196 881 netty-buffer-4.0.33.Final.jar
25.11.2016  22:13           145 779 netty-codec-4.0.33.Final.jar
25.11.2016  22:13           441 447 netty-common-4.0.33.Final.jar
25.11.2016  22:13           272 139 netty-handler-4.0.33.Final.jar
25.11.2016  22:13           349 164 netty-transport-4.0.33.Final.jar
25.11.2016  22:13             1 228 README.txt
              11 файлов      5 114 911 байт

 Содержимое папки C:\Work\apache-ignite-fabric-1.8.0-QASK2502-bin\libs\optional\ignite-cassandra-store\licenses

25.11.2016  22:13    <DIR>          .
25.11.2016  22:13    <DIR>          ..
25.11.2016  22:13            11 358 apache-2.0.txt
25.11.2016  22:13               294 ignite-cassandra-store-licenses.txt
               2 файлов         11 652 байт

{noformat}

I suppose that {{ignite-cassandra}} directory must be removed and rest of Cassandra modules should be joined into one.",,irudyak,kuaw26,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 30 10:20:26 UTC 2016,,,,,,,,,,"0|i36u3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/16 20:23;irudyak;It should be done on the maven package creation side. Cassandra module was separated to two different modules for the purpose. Please find more details here:

https://issues.apache.org/jira/browse/IGNITE-3172;;;","30/Nov/16 10:20;kuaw26;Sergey, I think Igor is right.
I made minor changes in ignite-cassandra-serializers/README.txt in order to describe how ignite-cassandra-serializers module should be used.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache.clear should not destroy offheap map,IGNITE-4314,13023402,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,sboikov,sboikov,25/Nov/16 13:52,02/Dec/16 07:39,14/Jul/23 06:20,02/Dec/16 07:39,1.7,,,1.9,,,,,,0,,,,"Currently when offheap is enabled then cache.clear() operations fully destroys offheap map (GridCacheClearAllRunnable calls GridCacheSwapManager.clearOffHeap). This is not correct since there can be entry referenceing cleared memory, it seems offheap should be cleared in the same way as swap using offheap keys iterator.",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 02 07:39:15 UTC 2016,,,,,,,,,,"0|i36scv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Dec/16 07:39;sboikov;Fixed, merged in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: MultiTieredCacheExample has some issues ,IGNITE-4311,13023380,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,krybakova,krybakova,krybakova,25/Nov/16 12:14,08/Dec/16 12:40,14/Jul/23 06:20,25/Nov/16 13:33,1.8,,,1.8,platforms,,,,,0,,,,"Apache.Ignite.Examples.Datagrid.MultiTieredCacheExample has some issues:

1) Typo
{noformat}
Console.WriteLine("">>> Lifecycle example started."");
{noformat}

2) 
{noformat}
OffHeapMaxMemory = EntrySize * 10, // Limit off-heap to 10 entries.
{noformat}
This size is not enough to store 10 entries, overhead is not taked into account. In my case some experiments showed that  (EntrySize * 10) + 810 is minimum required.
",,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 08 12:40:36 UTC 2016,,,,,,,,,,"0|i36s7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/16 12:43;ptupitsyn;2) I suggest to modify comment: ""Limit off-heap to *(roughly)* 10 entries"" since we can't know the overhead for sure;;;","25/Nov/16 13:33;ptupitsyn;Fixed in ignite-1.8;;;","08/Dec/16 12:40;krybakova;verified;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: AtomicSequenceExample uses AtomicConfiguration incorrectly,IGNITE-4307,13023345,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,25/Nov/16 09:40,16/Feb/17 10:59,14/Jul/23 06:20,28/Dec/16 08:41,1.8,,,1.9,platforms,,,,,0,.NET,examples,,AtomicConfiguration is specified only on local node. Standalone nodes use default configuration.,,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4306,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 28 08:41:13 UTC 2016,,,,,,,,,,"0|i36s07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Dec/16 08:41;ptupitsyn;Fixed in master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: TestRemoteNodesClientMode(AtomicSequenceExample) fails sporadically,IGNITE-4306,13023339,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,25/Nov/16 09:11,28/Nov/16 12:16,14/Jul/23 06:20,28/Nov/16 12:16,1.8,,,1.9,platforms,,,,,0,,,,Looks like standalone node fails to join,,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 28 12:16:54 UTC 2016,,,,,,,,,,"0|i36ryv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/16 09:13;ptupitsyn;Added more info to the assert, waiting for new runs;;;","28/Nov/16 12:16;ptupitsyn;Does not fail for now. Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridNearAtomicSingleUpdateInvokeRequest cannot unmarshal invoke arguments properly.,IGNITE-4305,13023337,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kdudkov,vozerov,vozerov,25/Nov/16 09:00,02/Dec/16 09:49,14/Jul/23 06:20,02/Dec/16 09:49,1.8,,,1.8,cache,,,,,0,,,,"Steps to reproduce:
1) Set binary marshaller as deafult for {{GridCacheBinaryAtomicEntryProcessorDeploymentSelfTest}}:
{code}
static {
    GridTestProperties.setProperty(GridTestProperties.MARSH_CLASS_NAME, BinaryMarshaller.class.getName());        GridTestProperties.setProperty(GridTestProperties.ENTRY_PROCESSOR_CLASS_NAME,
            ""org.apache.ignite.tests.p2p.CacheDeploymentBinaryEntryProcessor"");
    }
{code}

2) Run the test, observe failures in {{testInvokeDeployment*}} tests.

3) Go to {{GridNearAtomicSingleUpdateFuture.mapSingleUpdate}} and force single transform to use old {{GridNearAtomicFullUpdateRequest}}

4) Re-run test. No all pass.",,kdudkov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 28 16:33:00 UTC 2016,,,,,,,,,,"0|i36ryf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/16 16:33;kdudkov;fixed request marshalling bug, now tests run good. Please review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClusterTopologyCheckedException: Failed to send message because node left grid,IGNITE-4304,13023255,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,24/Nov/16 19:53,25/Nov/16 20:04,14/Jul/23 06:20,25/Nov/16 11:10,1.8,,,1.8,general,,,,,0,,,,"The server node prints out the following exception after run  {{CacheClientBinaryPutGetExample}}:
{noformat}
[22:46:53,052][ERROR][sys-#65%null%][IgniteTxManager] Failed to send one phase commit ack to backup node [backup=c8d7e7b7-d984-4498-ab4c-8e7cb8928e19]
class org.apache.ignite.internal.cluster.ClusterTopologyCheckedException: Failed to send message because node left grid [nodeId=c8d7e7b7-d984-4498-ab4c-8e7cb8928e19, msg=GridDhtTxOnePhaseCommitAckRequest [vers=[GridCacheVersion [topVer=91496812, time=1480016812498, order=1480016808989, nodeOrder=1]], super=GridCacheMessage [msgId=-1, depInfo=null, err=null, skipPrepare=false, cacheId=0, cacheId=0]]]
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.send(GridCacheIoManager.java:1056)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$2.finish(IgniteTxManager.java:283)
	at org.apache.ignite.internal.processors.cache.GridDeferredAckMessageSender$DeferredAckMessageBuffer.finish0(GridDeferredAckMessageSender.java:214)
	at org.apache.ignite.internal.processors.cache.GridDeferredAckMessageSender$DeferredAckMessageBuffer.access$000(GridDeferredAckMessageSender.java:111)
	at org.apache.ignite.internal.processors.cache.GridDeferredAckMessageSender$DeferredAckMessageBuffer$1.run(GridDeferredAckMessageSender.java:159)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6620)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$1.body(GridClosureProcessor.java:764)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,skozlov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Nov 25 20:04:57 UTC 2016,,,,,,,,,,"0|i36rg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/16 11:10;vozerov;Fixed.;;;","25/Nov/16 20:04;skozlov;fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheClientBinaryQueryExample returns wrong result,IGNITE-4303,13023254,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,24/Nov/16 19:52,25/Nov/16 20:05,14/Jul/23 06:20,25/Nov/16 10:31,1.8,,,1.8,general,,,,,0,,,,"CacheClientBinaryQueryExample returns wrong result: the list of GridGain employees must be not empty.

{noformat}
>>> Employees working for GridGain:

>>> Employee names and their salaries:
>>>     [Name=Allison Mathis, salary=25300]
>>>     [Name=Breana Robbin, salary=6500]
>>>     [Name=Philip Horsley, salary=19800]
>>>     [Name=Brian Peters, salary=10600]
>>>     [Name=James Wilson, salary=12500]
>>>     [Name=Daniel Adams, salary=11000]
>>>     [Name=Cristian Moss, salary=12500]
{noformat}

",,skozlov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4304,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Nov 25 20:05:11 UTC 2016,,,,,,,,,,"0|i36rfz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/16 10:31;vozerov;Not reproducible after recent DML fixes.;;;","25/Nov/16 20:05;skozlov;fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove useless cin.get() in query_example.cpp,IGNITE-4299,13023165,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,isapego,krybakova,krybakova,24/Nov/16 12:09,05/Dec/16 12:38,14/Jul/23 06:20,24/Nov/16 12:54,,,,1.8,platforms,,,,,0,,,,"Remove useless cin.get() in query_example.cpp:
{noformat}
std::cout << "">>> Ready"" << std::endl;
std::cout << std::endl;
std::cin.get();
{noformat}",,githubbot,isapego,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 05 12:38:43 UTC 2016,,,,,,,,,,"0|i36qw7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/16 12:40;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1277

    IGNITE-4299: Fixes for examples.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-4299

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1277.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1277
    
----
commit 1403c6438d5d5263d98b3796d15cd65faff8845b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-24T12:37:32Z

    IGNITE-4299: Fixes for examples.

----
;;;","24/Nov/16 12:43;isapego;Ready for review.;;;","24/Nov/16 13:02;ptupitsyn;Looks good.;;;","25/Nov/16 13:03;krybakova;verified;;;","05/Dec/16 12:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1277
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Upgrading NuGet to new version does not clean up jar files in bin folder,IGNITE-4297,13023137,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,krybakova,ptupitsyn,ptupitsyn,24/Nov/16 09:41,09/Dec/16 10:09,14/Jul/23 06:20,24/Nov/16 13:35,1.6,,,1.8,platforms,,,,,0,.NET,,,"Apache.Ignite.Core NuGet package updates post-build step with a script to copy jar files to the bin directory.

However, this script does not remove old versions of jar files. This causes a problem when upgrading to a new version of NuGet package: user gets an error like

{code}
Failed to initialize JVM. ---> Apache.Ignite.Core.Common.IgniteException: Java class method is not found (did you set IGNITE_HOME environment variable?): binaryProcessor ---> Apache.Ignite.Core.Common.JavaException: java.lang.NoSuchMethodError: binaryProcessor
{code}
",,githubbot,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 09 10:09:56 UTC 2016,,,,,,,,,,"0|i36qpz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/16 11:54;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1276

    IGNITE-4297 .NET: Update NuGet uninstall script to clean up jars

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4297

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1276.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1276
    
----
commit 226278bd748b7598749732a9a4e424147ce98fef
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-24T11:53:29Z

    IGNITE-4297 .NET: Update uninstall script to clean up jars

----
;;;","24/Nov/16 13:03;ptupitsyn;Updated both install and uninstall script to clean up bin\libs folder in all build configurations;;;","24/Nov/16 13:34;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/1276
;;;","24/Nov/16 13:34;ptupitsyn;Merged to master and 1.8;;;","09/Dec/16 10:09;krybakova;verified;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deserialized value is cached if queries are enabled,IGNITE-4293,13023004,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,vkulichenko,vkulichenko,23/Nov/16 21:00,16/Jan/17 08:22,14/Jul/23 06:20,16/Jan/17 08:22,1.7,1.8,,,cache,,,,,0,,,,"Here is the problematic piece of code in {{IgniteCacheObjectProcessorImpl}}:
{code}
boolean storeVal = ctx.config().isPeerClassLoadingEnabled() ||
    GridQueryProcessor.isEnabled(ccfg) ||
    !ccfg.isCopyOnRead();
{code}
This flag is set to true if queries are enabled even when binary marshaller is used (this condition makes sense to other marshallers though). It is then use in {{BinaryObjectImpl.deserializeValue}}:
{code}
if (coCtx != null && coCtx.storeValue())
    obj = obj0;
{code}
As a result, memory consumption doubles.",,dmagda,ein,ptupitsyn,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3347,IGNITE-2417,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jan 16 08:22:54 UTC 2017,,,,,,,,,,"0|i36pwf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Nov/16 21:13;dmagda;In my understanding all we need to do is to pass {{cfg.isCopyOnRead()}} value instead of {{ctx0.storeValue()}} into this call 

{code}
        CacheObjectContext res = new CacheObjectBinaryContext(ctx,
            cfg.getName(),
            ctx0.copyOnGet(),
            ctx0.storeValue(),
            binaryEnabled,
            ctx0.addDeploymentInfo());
{code}

that is inside of {{CacheObjectBinaryProcessorImpl.contextForCache()}} method.;;;","24/Nov/16 07:18;ptupitsyn;I think this duplicates IGNITE-3347 and/or IGNITE-2417;;;","15/Dec/16 10:20;ein;Let's look at the basis with two types: CacheObject and CacheObjectContext.

Because the implementations could be very different, let's think abstract.

Calling CacheObject.value(CacheObjectContext ctx, boolean cpy) we'll get a user object independently of underlying storage and implementation.

Supposed that the CacheObject MAY have a cached instance of the user object on-heap, and the <cpy> flag is like a hint controlling behaivor of such implementations. If it's true, then the copy of the user object MAY be returned, if underlying CacheObject have the such internal on-heap instance, but if it's false is also possible to retreive a new instance every time because of absence of internal field.

Next there is CacheObjectContext controlling the behavior of the caching on-heap instance and user objects will be returned. Precisely two methods: copyOnGet() and storeValue().

Supposed that copyOnGet() value controls behaviour of CacheObjects with respect to <cpy> flag. If copyOnGet() is false, then the cached user object should be returned, if the internal on-heap instance is present. And if storeValue() is true, then the CacheObject should store the user object upon deserialization, if the internal field is present.

It's seems that copyOnGet() and storeValue() are threated independently, but it's something wrong. If we'll call every time CacheObject.value(ctx, true) and both ctx.copyOnGet() and ctx.storeValue() are true, then the stored value will never be used. But relating to common usage of CacheObject.value method it's seems that usual value of <cpy> is false, so the problem is virtual.

I'm wondering that nothing of above was written in Javadoc.

Going further, I'm answering myself when the copyOnGet() and storeValue() should be true or false?

Definitly they should depend upon user preference CacheConfiguration.isCopyOnRead(): copyOnGet() == isCopyOnRead(); storeValue() != isCopyOnRead().

Also we should take in account how indexing are working. Whenever indexing is enabled on the cache, some number of GridH2ValueCacheObject are present (up to number of cache entries). There is the method GridH2ValueCacheObject.compareSecure(Value v, CompareMode mode) which compares the two CacheObject or its serialized user objects, depending of the CacheObject.isPlatformType() value. So, because compareSecure() method is time critical, we should set storeValue() to true, when indexing is enabled AND CacheObject.isPlatformType() is true for all entries in the cache, to avoid high CPU overhead upon deserializing user object on each compareSecure() invocation.

Actual CacheObject type stored in the cache depends on the IgniteConfiguration.getMarshaller() value configured. The GridQueryProcessor.isEnabled(CacheConfiguration ccfg) doesn't take into account what marshaller type is used, but only whether indexing is enabled. It should be fixed.

There is another condition IgniteConfiguration.isPeerClassLoadingEnabled() is used to determine CacheObjectContext.storeValue(). It is still being discovered.;;;","19/Dec/16 20:30;vkulichenko;[~ein], to be honest, it looks like you're complicating this a bit :)

Basically, the main issue here is {{CacheObjectBinaryProcessorImpl.contextForCache()}} method implementation which is incorrect. For some reason it calls {{super.contextForCache()}} first and then creates another instance of {{CacheObjectContext}} preserving values of {{cpyOnGet}} and {{storeVal}} flags. Instead, it should define these flags by itself making sure that they are correct from binary format standpoint. In particular, with binary marshaller there is no reason to cache deserialized objects when SQL is enabled (actually, that's what this ticket is about and it's a pretty serious bug, so let's fix it first and then create new tickets if there is anything else that should be improved).;;;","28/Dec/16 05:25;ein;Testing done, please review;;;","16/Jan/17 08:22;sboikov;Reviewed, looks good, merged into master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Fix ODBC and DML interoperability.,IGNITE-4288,13022900,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,isapego,isapego,23/Nov/16 15:58,12/Dec/16 09:06,14/Jul/23 06:20,24/Nov/16 12:49,1.7,,,1.8,odbc,,,,,0,,,,"Need to fix ODBC-DML interoperability issues on ignite-1.8 branch.

Failing tests list:
* odbc-tests/QueriesTestSuite/TestInsertDeleteSelect 	
* odbc-tests/QueriesTestSuite/TestInsertMergeSelect 	
* odbc-tests/QueriesTestSuite/TestInsertSelect 	
* odbc-tests/QueriesTestSuite/TestInsertUpdateSelect ",,dmagda,githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 05 12:38:44 UTC 2016,,,,,,,,,,"0|i36p9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Nov/16 16:05;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1272

    IGNITE-4288: Fix for 32-bit verions.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-4288

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1272.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1272
    
----
commit d08f4f268b9dd0a20c2e7adc7a6d7a4b50e292eb
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-23T16:03:17Z

    IGNITE-4288: Fix for 32-bit verions.

----
;;;","23/Nov/16 16:43;isapego;Getting the following exception:
{noformat}
18:49:00][TestInsertSelect] [23-Nov-2016 15:49:00][ERROR][odbc-#1060%NodeMain%][OdbcRequestHandler] Failed to execute SQL query [reqId=69, req=OdbcQueryExecuteRequest [cacheName=cache, sqlQry=INSERT INTO TestType(_key, strField) VALUES(?, ?), args=[1, String#0]]]
[18:49:00][TestInsertSelect] java.lang.NullPointerException
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.processors.odbc.OdbcUtils.addQuotationMarksIfNeeded(OdbcUtils.java:31)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.processors.odbc.OdbcColumnMeta.<init>(OdbcColumnMeta.java:57)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.processors.odbc.OdbcRequestHandler.convertMetadata(OdbcRequestHandler.java:507)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.processors.odbc.OdbcRequestHandler.executeQuery(OdbcRequestHandler.java:214)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.processors.odbc.OdbcRequestHandler.handle(OdbcRequestHandler.java:109)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.processors.odbc.OdbcNioListener.onMessage(OdbcNioListener.java:124)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.processors.odbc.OdbcNioListener.onMessage(OdbcNioListener.java:33)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.util.nio.GridNioFilterChain$TailFilter.onMessageReceived(GridNioFilterChain.java:270)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:107)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.util.nio.GridNioAsyncNotifyFilter$3.body(GridNioAsyncNotifyFilter.java:95)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[18:49:00][TestInsertSelect] 	at org.apache.ignite.internal.util.worker.GridWorkerPool$1.run(GridWorkerPool.java:70)
[18:49:00][TestInsertSelect] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
[18:49:00][TestInsertSelect] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
[18:49:00][TestInsertSelect] 	at java.lang.Thread.run(Thread.java:745)
{noformat};;;","23/Nov/16 16:55;isapego;So it seems like when we perform any DML query {{org.apache.ignite.internal.processors.cache.QueryCursorImpl#fieldsMeta()}} return list of {{GridQueryFieldMetadata}} where {{schemaName()}} return null-string.;;;","23/Nov/16 16:57;isapego;I'm going to investigate this issue and find out if we really need this metadata for DML requests.;;;","23/Nov/16 17:49;isapego;According to [MSDN|https://msdn.microsoft.com/en-us/library/ms716289(v=vs.85).aspx], metadata-related calls used on SELECT statements. Though I was not able to find information what  happens if such kind of function is called on DML statement. Seems like driver-specific behavior?

Anyway, I've fixed NPE and now tests pass, though returned schema is still {{null}}.;;;","23/Nov/16 22:52;dmagda;[~isapego], do you have in mind any DML query where this meta information will be needed?

Presently, I can't get how this can affect DML support from ODBC side in general.;;;","24/Nov/16 09:56;isapego;[~dmagda], no I don't.

I guess, we can open a new ticket if someone really needs such a feature, though I doubt anyone does.;;;","27/Nov/16 03:56;dmagda;Sounds reasonable.;;;","27/Nov/16 03:56;dmagda;[~isapego], please make sure to commit all DML+ODBC related changed into 1.8 branch before the voting starts.;;;","05/Dec/16 12:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1272
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DML: DELETE statement failed: Invalid number of query parameters. Cannot find 2 parameter.,IGNITE-4287,13022880,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,23/Nov/16 15:00,05/Dec/16 12:38,14/Jul/23 06:20,25/Nov/16 16:08,1.8,,,1.8,general,,,,,0,,,,"{code:title=test.java|borderStyle=solid}
      IgniteCache<Long, Organization> orgCache = Ignition.ignite().cache(ORG_CACHE);

        orgCache.clear();

        for (int z=100; z < 100000; z++) {
            orgCache.query(new SqlFieldsQuery(""insert into Organization (_key, name) values (?, ?)"").setArgs(z, ""Org "" + Integer.toString(z)));
        }

        for (int z=100; z < 100000; z++) {
            if (z > 0 && z % 10 == 0)
                System.out.println(""Delete "" + z);

            orgCache.query(new SqlFieldsQuery(""delete from Organization where _key >= ?"").setArgs(z));
        }
{code}

The code above failed with IgniteException
{noformat}
Exception in thread ""main"" javax.cache.CacheException: class org.apache.ignite.IgniteException: Invalid number of query parameters. Cannot find 2 parameter.
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:761)
	at org.apache.ignite.examples.datagrid.CacheQueryExample.initialize(CacheQueryExample.java:336)
	at org.apache.ignite.examples.datagrid.CacheQueryExample.main(CacheQueryExample.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: class org.apache.ignite.IgniteException: Invalid number of query parameters. Cannot find 2 parameter.
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryTwoStep(GridQueryProcessor.java:818)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:749)
	... 7 more
Caused by: class org.apache.ignite.IgniteCheckedException: Invalid number of query parameters. Cannot find 2 parameter.
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:1789)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryTwoStep(GridQueryProcessor.java:811)
	... 8 more
Caused by: class org.apache.ignite.IgniteException: Invalid number of query parameters. Cannot find 2 parameter.
	at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQuerySplitter.findParams(GridSqlQuerySplitter.java:634)
	at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQuerySplitter.findParams(GridSqlQuerySplitter.java:650)
	at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQuerySplitter.findParams(GridSqlQuerySplitter.java:650)
	at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQuerySplitter.findParams(GridSqlQuerySplitter.java:604)
	at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQuerySplitter.split(GridSqlQuerySplitter.java:403)
	at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQuerySplitter.split(GridSqlQuerySplitter.java:184)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryTwoStep(IgniteH2Indexing.java:1277)
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.executeUpdateStatement(DmlStatementsProcessor.java:226)
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.updateSqlFields(DmlStatementsProcessor.java:134)
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.updateSqlFieldsTwoStep(DmlStatementsProcessor.java:160)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryTwoStep(IgniteH2Indexing.java:1266)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.applyx(GridQueryProcessor.java:813)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.applyx(GridQueryProcessor.java:811)
	at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:1766)
	... 9 more

{noformat}",,githubbot,skozlov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 05 12:38:44 UTC 2016,,,,,,,,,,"0|i36p4v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/16 15:09;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/1280

    IGNITE-4287 DmlStatementsProcessor logic fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4287

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1280.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1280
    
----
commit 63a36224d30f3d7626770e6a35a9eac05e370290
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2016-11-24T06:09:45Z

    IGNITE-4287 DmlStatementsProcessor logic fix (always force keepBinary for SELECTs inside DML logic)

----
;;;","05/Dec/16 12:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1280
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed second client node join with continuous query and peer class loading enabled,IGNITE-4284,13022831,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,23/Nov/16 11:48,30/Mar/17 09:54,14/Jul/23 06:20,30/Mar/17 09:54,1.7,,,2.0,cache,,,,,1,,,,"Steps to reproduce:
1) Start server with cache and peer class loading enabled.
2) Start client with peer class loading enabled.
3) Start continuous query with custom event filter factory.
4) Start second client -- Fail with NPE or AsserionError.

Test that reproduces error: [PR#1681|https://github.com/apache/ignite/pull/1681]",,dkarachentsev,githubbot,NSAmelchev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 28 09:49:54 UTC 2017,,,,,,,,,,"0|i36otz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Feb/17 13:46;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/1564

    IGNITE-4284

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite IGNITE-4284

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1564.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1564
    
----
commit bca9756cc4fbe3e89fbc29453d94619d2f90c95b
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-02-07T14:04:02Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit b676ee8bef440447968372ffd56bcf644bfa7175
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-01-27T14:56:12Z

    Add test
    
    Second client node join with continuous query and peer class loading
    enabled

commit 1e1846b681080bf1af29968e552662fbaebb5e66
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-01-27T15:04:07Z

    Return null for event filter when remote filter factori is null
    
    Fix by returning null for event filter if remote filter factory is null.

commit e90b78aacdc5175a56783c89e60f6e9c5800fd27
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-02-20T17:14:48Z

    Add Nullable annotation

commit 9266321939112fe39fba237bf7cd6b6d34213a9e
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-02-21T10:00:17Z

    Add test to suite

commit 01d447c00a44becafffcd5bac8279512a30629e7
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-02-21T13:44:07Z

    Merge remote-tracking branch 'apache/master' into IGNITE-4284
    
    # Conflicts:
    #	modules/indexing/src/test/java/org/apache/ignite/testsuites/IgniteCacheQuerySelfTestSuite3.java

----
;;;","22/Feb/17 10:15;githubbot;Github user NSAmelchev closed the pull request at:

    https://github.com/apache/ignite/pull/1564
;;;","16/Mar/17 11:24;NSAmelchev;I try to do p2p class loading for discover. At now handlers with filters connecting node's register before node state=connected. But unmarshal this filtres is being done by optimized marshaller and its need sys-marshaller cache that loaded after state=connected. Some attempts to register handlers after start sys-cache lead spontaneous errors deserialize object by classloader (I used p2p code from start query) and crash some test with backups or reconnect nodes. I try to resolve it.;;;","28/Mar/17 09:49;githubbot;Github user dkarachentsev closed the pull request at:

    https://github.com/apache/ignite/pull/1267
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc broken ,IGNITE-4282,13022825,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ustas,ustas,23/Nov/16 11:32,29/Nov/16 13:13,14/Jul/23 06:20,26/Nov/16 02:32,1.8,,,1.8,documentation,,,,,0,,,,"Broken javadoc here:
{noformat}incubator-ignite/modules/core/src/main/java/org/apache/ignite/internal/processors/rest/handlers/redis/server/GridRedisDbSizeCommandHandler.java{noformat}

Warning text:
{noformat}Tag @inheritDoc cannot be used in constructor documentation.  It can only be used in the following types of documentation: method, inline text.{noformat}

Log you can find in attachment.",,githubbot,shroman,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/16 11:33;ustas;javadoc;https://issues.apache.org/jira/secure/attachment/12840237/javadoc",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 29 13:13:04 UTC 2016,,,,,,,,,,"0|i36osn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/16 01:45;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/1273

    IGNITE-4282: Javadoc broken.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-4282

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1273.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1273
    
----
commit a89229ee53e5ccbbcadd0b6a7b245df1e9fb86a3
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-11-24T01:44:38Z

    IGNITE-4282: Javadoc broken.

----
;;;","26/Nov/16 02:32;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1273
;;;","26/Nov/16 02:32;shroman;Merged to master.;;;","29/Nov/16 13:13;ustas;Fix confirmed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Offheap cache entries statistics is broken in master,IGNITE-4264,13022522,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,22/Nov/16 15:19,04/Jul/19 21:49,14/Jul/23 06:20,09/Dec/16 14:53,,,,2.0,cache,,,,,0,,,,"Reproducer is attached. Test is fine on 1.7 release branch, but fails in master

cache.metrics().getOffHeapPrimaryEntriesCount() returns wrong number. Also it seems the number grows with increasing number of clients.",,agura,amashenkov,githubbot,wmz7year,,,,,,,,,"dspavlov commented on issue #1263: IGNITE-4264: fix cache metrics error between server and client.
URL: https://github.com/apache/ignite/pull/1263#issuecomment-508581706
 
 
   
   IGNITE-4264 | Resolved 
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:49;githubbot;600","dspavlov commented on pull request #1263: IGNITE-4264: fix cache metrics error between server and client.
URL: https://github.com/apache/ignite/pull/1263
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:49;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/16 15:21;amashenkov;Test.java;https://issues.apache.org/jira/secure/attachment/12840040/Test.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 22 15:16:38 UTC 2016,,,,,,,,,,"0|i36mxb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Nov/16 03:05;githubbot;GitHub user wmz7year opened a pull request:

    https://github.com/apache/ignite/pull/1263

    IGNITE-4264: fix cache metrics error between server and client.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/wmz7year/ignite ignite-4264

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1263.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1263
    
----
commit af739867d50218dd47990ce17e81cce06615db85
Author: jiangwei <jiangwei@caifuzhinan.com>
Date:   2016-11-23T03:01:37Z

    fix cache metrics error between server and client.

----
;;;","23/Nov/16 03:05;wmz7year;https://github.com/apache/ignite/pull/1263;;;","07/Dec/16 18:03;agura;Hi, [~wmz7year]. I've looked at your PR and I think that this fix isn't correct. Your cache can be created on some client or server node but this node can be filtered out and doesn't own any data. In order to get all nodes that really have cache data you should get affinity nodes using {{ClusterGroup.forDataNodes(String cacheName)}} method.

Also I'm not sure that filtering out clients is good idea ({{forServers() call}}) because client node can have local cache and own metrics.

Could you please take in account this comments and provide new fix?

Thanks.;;;","09/Dec/16 14:02;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1336

    IGNITE-4264: Offheap cache entries statistics is broken in master

    Fixed. 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4264-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1336.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1336
    
----
commit da6d8dbe10c2adac6aca860d54e98e053112ae73
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-12-09T13:52:20Z

    Fixed cluster wide cache metrics

----
;;;","22/Dec/16 15:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1336
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: ScanQuery tests are ignored by NUnit,IGNITE-4261,13022485,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,22/Nov/16 12:24,15/Dec/16 11:38,14/Jul/23 06:20,22/Nov/16 12:58,,,,1.8,platforms,,,,,0,.NET,,,"CacheQueriesTest.TestScanQuery are ignored both on TC and locally: ""unable to determine type arguments for fixture"".

This is due to type arguments.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-11-22 12:24:40.0,,,,,,,,,,"0|i36mp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Geospatial functionality is broken in master,IGNITE-4259,13022447,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,amashenkov,amashenkov,22/Nov/16 09:26,05/Apr/17 14:19,14/Jul/23 06:20,22/Nov/16 12:07,,,,1.8,binary,sql,,,,0,,,,"GridH2IndexingGeoSelfTest fails with binary marshaller configured. 

Query parameters are converted to binary since commit ""ae77653"" as a result of  [https://issues.apache.org/jira/browse/IGNITE-2208]
Also see [https://issues.apache.org/jira/browse/IGNITE-4238].",,amashenkov,dmagda,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 05 14:19:54 UTC 2017,,,,,,,,,,"0|i36mgn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/16 10:04;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1257

    IGNITE-4259: Geospatial functionality is broken in master

    Tests added.
    Feasible fix added.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4259

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1257.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1257
    
----
commit bfb00b6e61f9709718c30971997aeb0ac79e86b4
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-18T20:12:28Z

    IgniteTcpCommunicationBigClusterTest added

commit 02dd92e605b9b53f5a16c7ec5f8e7b5698b15ba4
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-18T21:55:37Z

    IgniteTcpCommunicationBigClusterTest update

commit 6acf193a3d356d1bad4c02a53ac76833ed1008d0
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-19T09:55:45Z

    Have got TcpCommunicationSpi error

commit 4fd39653d24f62f19f70b4dffba8497185cc46fb
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-19T16:39:10Z

    Some discovery have been done

commit c2c181922c7c24ea457577e32d2af897c8bec87f
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-19T20:11:28Z

    Prove that problem is not in the onFirstMessage hang

commit f8076edba097f6077229b2090ee3ff1a3369878c
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-19T20:26:37Z

    Revert: Prove that problem is not in the onFirstMessage hang

commit 6e1f2dfc2acb3dbb8f24aa51ed67b2ee447b4585
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-21T08:55:09Z

    Revert: pushing unnecessary changes to the master

commit ed794ca815f6bb1471af15779279d287576b39cc
Author: Alexandr Kuramshin <akuramshin@gridgain.com>
Date:   2016-11-21T09:08:00Z

    Revert: pushing unnecessary changes to the master

commit dd550060b810d78cbf7ead7859723fc280be2b5f
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-22T10:02:37Z

    Exclude geo-classes from serialization in binary marshaller.
    Tests added.

----
;;;","22/Nov/16 10:52;vozerov;Add {{isGeometryClass}} to {{GridQueryProcessor.initializeCache}} fixes the problem with incorrect type passed to H2 engine:

{code}
if (binaryEnabled && !keyOrValMustDeserialize) {
    // Safe to check null.
    if (SQL_TYPES.contains(valCls) || isGeometryClass(valCls))
        desc.valueClass(valCls);
    else
        desc.valueClass(Object.class);

    if (SQL_TYPES.contains(keyCls) || isGeometryClass(keyCls))
        desc.keyClass(keyCls);
    else
        desc.keyClass(Object.class);
}
{code};;;","22/Nov/16 15:45;dmagda;[~amashenkov], [~vozerov], please the changes in the master and after this make sure that the example from this ticket executes successfully
https://issues.apache.org/jira/browse/IGNITE-4238

To validate the example:
- run the example {{SpatialQueryExample}} from the master;
- run the tests that were added deliberately for it {{SpatialQueryExampleSelfTest, SpatialQueryExampleMultiNodeSelfTest}};;;","05/Apr/17 14:19;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1257
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: BinaryReader ignores current stream position,IGNITE-4258,13022415,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,22/Nov/16 07:18,15/Dec/16 11:37,14/Jul/23 06:20,22/Nov/16 08:21,,,,1.8,platforms,,,,,0,.NET,,,BinaryReader initializes _curPos to 0 always and ignores current stream position.,,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 08:21:14 UTC 2016,,,,,,,,,,"0|i36m9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/16 07:40;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1255

    IGNITE-4258 .NET: Fix BinaryReader to use current stream position

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4258

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1255.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1255
    
----
commit a5cf560ba2b66727ffb4177b21c582a1e396cf6b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-22T07:39:37Z

    IGNITE-4258 .NET: Fix BinaryReader to use current stream position

----
;;;","22/Nov/16 08:21;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1255
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Download project on Summary screen is broken under Safari browser,IGNITE-4257,13022383,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,kuaw26,kuaw26,22/Nov/16 03:54,13/Dec/16 07:23,14/Jul/23 06:20,30/Nov/16 10:36,,,,,wizards,,,,,0,,,,,,anovikov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 13 07:23:25 UTC 2016,,,,,,,,,,"0|i36m2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Nov/16 10:36;anovikov;Added note with instruction for Safari users. Pavel, please test.;;;","09/Dec/16 03:42;pkonstantinov;I suggest to do the note more noticeable, for example make the icon red and a bit more size.;;;","13/Dec/16 07:23;anovikov;I don't think this is good idea to use different icon size or color.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException with local cache query,IGNITE-4252,13022131,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,pkonstantinov,pkonstantinov,21/Nov/16 09:06,03/Feb/17 08:59,14/Jul/23 06:20,03/Feb/17 08:59,,,,1.9,sql,,,,,0,,,,"Try to send query for local cache to partitioned cache for executing:

Two caches: local_cache & partitioned_cache.

// SQL query performed on local_cache, but entry point is partitioned_cache.
ignite.cache(""partitioned_cache"").query(new SqlFieldsQuery(""select * from ""local_cache"".Table""))

{code}
java.lang.ClassCastException: org.apache.ignite.internal.processors.cache.local.atomic.GridLocalAtomicCache cannot be cast to org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter
	at org.apache.ignite.internal.processors.cache.GridCacheContext.topology(GridCacheContext.java:853)
	at org.apache.ignite.internal.processors.cache.GridCacheContext.topology(GridCacheContext.java:831)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.hasMovingPartitions(GridReduceQueryExecutor.java:389)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.isPreloadingActive(GridReduceQueryExecutor.java:376)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:520)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$5.iterator(IgniteH2Indexing.java:1089)
	at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:81)
{code}
",,githubbot,pkonstantinov,skalashnikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 03 08:59:40 UTC 2017,,,,,,,,,,"0|i36kif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Feb/17 17:01;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/1489

    IGNITE-4252 Fixed exception with local cache query started on partiti…

    …oned cache

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4252

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1489.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1489
    
----
commit 42d0e97be861cf285c994faa1232e660adc12a08
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-02-02T16:50:15Z

    IGNITE-4252 Fixed exception with local cache query started on partitioned cache

----
;;;","02/Feb/17 17:08;skalashnikov;Fixed the exception by avoiding the bad cast for the local cache;;;","03/Feb/17 08:59;vozerov;LGTM, merging.;;;","03/Feb/17 08:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1489
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Remove separate port for agents connections.,IGNITE-4251,13022088,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,anovikov,anovikov,21/Nov/16 04:42,24/Nov/16 03:52,14/Jul/23 06:20,21/Nov/16 09:45,1.7,,,1.8,,,,,,0,,,,Use one port for REST and WS.,,anovikov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 24 03:48:54 UTC 2016,,,,,,,,,,"0|i36k8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/16 07:54;anovikov;Removed separate port for URI to Ignite Console server in agent.

Now backend use only one port for REST, WS from browsers, WS from agents. 

Legacy agent should receive message: You are using an older version of the agent. Please reload agent archive;;;","21/Nov/16 08:57;kuaw26;Looks good for me.

1) Please check README and DEVNOTES - do we need to describe somewhere new ports?

2) Assign for Pavel for testing. Please describe how to test with PREVIOUS agent.;;;","21/Nov/16 09:44;anovikov;1) Fixed.

Pavel, please test.
* PREVIOUS agent should receive message: You are using an older version of the agent. Please reload agent.
* Need check url in email on reset password. Link in email should have same schema as url in browser.;;;","24/Nov/16 03:48;pkonstantinov;Tested:
- connection of new agent to site
- connection of old agent to site is failed
- monitoring works
- import of model from database (db2) works
- SQL works
- reset password;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Even simple request takes a lot of time.,IGNITE-4249,13021835,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,isapego,isapego,18/Nov/16 19:54,13/Jan/17 18:32,14/Jul/23 06:20,23/Nov/16 09:06,1.7,,,1.8,odbc,,,,,0,,,,"Even if you submit very simple request with {{SQLExecute}} on a small data set, it's going to take ~40ms to be processed, while the same request in C++ client takes ~200us.",,githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 13 18:32:20 UTC 2017,,,,,,,,,,"0|i36ion:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/16 15:56;isapego;Here is what I've found so far:

First I've profiled ODBC driver and here are results:
Socket Send took: 21 us
Socket Receive took: 44037 us
Entire SQLExecute call took: 44134 us

As you can see, almost 100% of the time driver spends waiting on the socket.
I assumed then that Java part (OdbcProcessor) execution takes a lot of time, so I profiled Java part and here is result:

Java code execution takes: 2,965 us
Most of the time spent in getting query iterator.

So I've written simple test with Java SocketServer and C++ socket client which send 1 byte to each other.
It takes 50 - 10000 us (most of the times <100 though)

So the only part I can think about now that takes all this time is Nio system.;;;","21/Nov/16 16:19;isapego;I investigated the issue further and I found some other interesting detail: ODBC driver were sending request in 2 steps - first it was sending header and then message body itself. By some reason, there is a delay between first and second packets on the receiving side (Java) for about 40ms. I've changed ODBC logic to send request with a single call and now SQLExecute takes ~4ms. Weird.;;;","21/Nov/16 18:30;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1254

    IGNITE-4249: Sending request in one packet now.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4249

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1254.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1254
    
----
commit 7290d88e14a15a3d030b7381dbd0a3f14cb65a12
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-18T14:17:17Z

    IGNITE-4030 Streamline PlatformTarget operation methods
    
    This closes #1167

commit 66c76d1f30f024b58db8cab07ba9e7d429f596f8
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-18T15:45:06Z

    IGNITE-2355 Fixed the test HadoopClientProtocolMultipleServersSelfTest. Clear connection poll after the test, cosmetic.

commit f37fbcab1ae2c7553696e96b7a9c3194a570d7af
Author: isapego <isapego@gridgain.com>
Date:   2016-10-19T10:06:42Z

    IGNITE-3705: Fixed compiliation warnings. This closes #1169.

commit 7ed2bb7e341701d052220a36a2b2f8f0a46fd644
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2016-10-19T15:33:59Z

    IGNITE-3448 Support SQL queries with distinct aggregates added. This closes #3448.

commit 551a4dfae6169a07a5e28f9b266f90311f3216b7
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-21T10:25:57Z

    IGNITE-2355 Fixed the test HadoopClientProtocolMultipleServersSelfTest. Clear connection poll before and after  the test

commit ec12a9db2265180f96be72e2217e60ced856164e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-24T14:52:36Z

    Minor fix for flags passed to GridCacheMapEntry.initialValue from data streamer isolated updater.

commit 44740465677c39068dc813dabd464e60f09e5f49
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-26T13:00:11Z

    IGNITE-4062: fix BinaryObject.equals: compare only bytes containing the fields' data (without header and footer). This closes  #1182.

commit c22411b740d1cdbe0c24c2502b4d6cb992335d6f
Author: isapego <isapego@gridgain.com>
Date:   2016-10-26T16:16:14Z

    IGNITE-4100: Improved README and DEVNOTES for CPP.

commit 9ddb8be1243df8e489f7ebc716d315415775439a
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-10-27T14:52:22Z

    IGNITE-2079 GridCacheIoManager eats exception trail if it falls into the directed case
    merger from ignite-2079-2
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryMetricsAdapter.java

commit 6f160728c544d252f77bdb85c0ff2857559707a3
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-10-28T23:18:14Z

    IGNITE-4110 - Fixed BUFFER_UNDERFLOW and BUFFER_OVERFLOW handling in BlockingSslHandler

commit 6b78ad0cbbcf286cb083136c49cebd5dd85de58c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-31T07:35:44Z

    TcoDiscovery: reduced amount of debug logging (heartbeat/connection check messages are logged trace level).

commit 175da6b7e394dd76c27d5155ff98a5b2ef03bb9d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-07T06:16:58Z

    IGNITE-3432:  check data/meta cache names are different for different IGFS instances. This closes #1201

commit 40ef2f5ae42826fe8fd077e3013e8f55c8512bdd
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-07T09:09:41Z

    ignite-4178 support permission builder

commit fc7ce5a4d72145f2e8a86debeda264ef0a5b37e3
Author: isapego <isapego@gridgain.com>
Date:   2016-11-07T10:26:05Z

    IGNITE-4090: Added flags so stdint and limits can be used in C++.

commit a98804a249496ba9bafbc96daa7aaf25b3d36724
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-07T11:00:00Z

    IGNITE-4113: Added tests. Added Statement::Set/GetAttribute.

commit 950bad474ef29f9b808e74034c49a69d57eb2740
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:03:34Z

    GG-11655 - Restore service compatibility with releases before 1.5.30.

commit 3d19bfc2b66574e3945ce17c7a4dfe77d0070b8d
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:04:36Z

    Merge remote-tracking branch 'origin/ignite-1.6.11' into ignite-1.6.11

commit e821dc0083003bc81058b1cb223d8a8a2ee44daf
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:09:21Z

    IGNITE-2079 (revert commit) GridCacheIoManager eats exception trail if it falls into the directed case

commit c2c82ca44befe4570325dd6cf2ba885e0d90596c
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:10:10Z

    Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11

commit 865bbcf0f41a0c4944e0928f1758d43a0eae82c5
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:18:29Z

    Revert ""Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11""
    
    This reverts commit c2c82ca44befe4570325dd6cf2ba885e0d90596c, reversing
    changes made to e821dc0083003bc81058b1cb223d8a8a2ee44daf.

commit 9726421ff9efb2b19813b2fd6ad27a3728b5ab1a
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:59:00Z

      Revert  Revert  Merge remote-tracking branch 'professional/ignite-1.6.11'

commit 5a3a1960fff1dcf32961c45c0ba5149d6748d2fc
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-08T14:36:35Z

    Added license header.

commit d88f422aeb02738d676d86ce416551b805ad154e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-11-09T07:25:38Z

    GG-11028 Fixed resolving of host name.

commit ac660dcaa5bf8eb20e7dd4e442e97c1cf548a827
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T12:29:06Z

    IGNITE-4183: ODBC Fixed null-values fetching issue.

commit cdae2ab76d403aef9a0bd209fc7497dc6cfdfc08
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T13:25:30Z

    IGNITE-3873: Added WiX script to generate ODBC installer.

commit 277691c1da25746093eb96019f2801386922fdbd
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T15:55:03Z

    IGNITE-4100: Specified full path to ODBC readme file.

commit bac0cba7fddd412dfbff98163afbc15d81d5e0d4
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-10T06:02:41Z

    ignite-4044  always authenticate local node

commit 26daa57ca82254d68ac04a7b33223c6eb5ade0e4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-10T08:17:29Z

    Fixed javadoc.

commit e43dbdebbfe70e5bd3b04e6b418d63034101f1cb
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-10T10:07:29Z

    IGNITE-4100: Typo fixed.

commit 45d89fc363efa316147667f67eea2c886f0ed96d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-10T10:36:04Z

    IGNITE-4100: Added note about development version of the DM.

----
;;;","22/Nov/16 11:22;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1254
;;;","22/Nov/16 11:27;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1260

    IGNITE-4249: TCP message sended by ODBC driver in single call now.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4249

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1260.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1260
    
----
commit 7290d88e14a15a3d030b7381dbd0a3f14cb65a12
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-18T14:17:17Z

    IGNITE-4030 Streamline PlatformTarget operation methods
    
    This closes #1167

commit 66c76d1f30f024b58db8cab07ba9e7d429f596f8
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-18T15:45:06Z

    IGNITE-2355 Fixed the test HadoopClientProtocolMultipleServersSelfTest. Clear connection poll after the test, cosmetic.

commit f37fbcab1ae2c7553696e96b7a9c3194a570d7af
Author: isapego <isapego@gridgain.com>
Date:   2016-10-19T10:06:42Z

    IGNITE-3705: Fixed compiliation warnings. This closes #1169.

commit 7ed2bb7e341701d052220a36a2b2f8f0a46fd644
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2016-10-19T15:33:59Z

    IGNITE-3448 Support SQL queries with distinct aggregates added. This closes #3448.

commit 551a4dfae6169a07a5e28f9b266f90311f3216b7
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-21T10:25:57Z

    IGNITE-2355 Fixed the test HadoopClientProtocolMultipleServersSelfTest. Clear connection poll before and after  the test

commit ec12a9db2265180f96be72e2217e60ced856164e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-24T14:52:36Z

    Minor fix for flags passed to GridCacheMapEntry.initialValue from data streamer isolated updater.

commit 44740465677c39068dc813dabd464e60f09e5f49
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-26T13:00:11Z

    IGNITE-4062: fix BinaryObject.equals: compare only bytes containing the fields' data (without header and footer). This closes  #1182.

commit 9ddb8be1243df8e489f7ebc716d315415775439a
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-10-27T14:52:22Z

    IGNITE-2079 GridCacheIoManager eats exception trail if it falls into the directed case
    merger from ignite-2079-2
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryMetricsAdapter.java

commit 6f160728c544d252f77bdb85c0ff2857559707a3
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-10-28T23:18:14Z

    IGNITE-4110 - Fixed BUFFER_UNDERFLOW and BUFFER_OVERFLOW handling in BlockingSslHandler

commit 6b78ad0cbbcf286cb083136c49cebd5dd85de58c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-31T07:35:44Z

    TcoDiscovery: reduced amount of debug logging (heartbeat/connection check messages are logged trace level).

commit 175da6b7e394dd76c27d5155ff98a5b2ef03bb9d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-07T06:16:58Z

    IGNITE-3432:  check data/meta cache names are different for different IGFS instances. This closes #1201

commit 40ef2f5ae42826fe8fd077e3013e8f55c8512bdd
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-07T09:09:41Z

    ignite-4178 support permission builder

commit fc7ce5a4d72145f2e8a86debeda264ef0a5b37e3
Author: isapego <isapego@gridgain.com>
Date:   2016-11-07T10:26:05Z

    IGNITE-4090: Added flags so stdint and limits can be used in C++.

commit a98804a249496ba9bafbc96daa7aaf25b3d36724
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-07T11:00:00Z

    IGNITE-4113: Added tests. Added Statement::Set/GetAttribute.

commit 950bad474ef29f9b808e74034c49a69d57eb2740
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:03:34Z

    GG-11655 - Restore service compatibility with releases before 1.5.30.

commit 3d19bfc2b66574e3945ce17c7a4dfe77d0070b8d
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:04:36Z

    Merge remote-tracking branch 'origin/ignite-1.6.11' into ignite-1.6.11

commit e821dc0083003bc81058b1cb223d8a8a2ee44daf
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:09:21Z

    IGNITE-2079 (revert commit) GridCacheIoManager eats exception trail if it falls into the directed case

commit c2c82ca44befe4570325dd6cf2ba885e0d90596c
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:10:10Z

    Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11

commit 865bbcf0f41a0c4944e0928f1758d43a0eae82c5
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:18:29Z

    Revert ""Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11""
    
    This reverts commit c2c82ca44befe4570325dd6cf2ba885e0d90596c, reversing
    changes made to e821dc0083003bc81058b1cb223d8a8a2ee44daf.

commit 9726421ff9efb2b19813b2fd6ad27a3728b5ab1a
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:59:00Z

      Revert  Revert  Merge remote-tracking branch 'professional/ignite-1.6.11'

commit 5a3a1960fff1dcf32961c45c0ba5149d6748d2fc
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-08T14:36:35Z

    Added license header.

commit d88f422aeb02738d676d86ce416551b805ad154e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-11-09T07:25:38Z

    GG-11028 Fixed resolving of host name.

commit ac660dcaa5bf8eb20e7dd4e442e97c1cf548a827
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T12:29:06Z

    IGNITE-4183: ODBC Fixed null-values fetching issue.

commit cdae2ab76d403aef9a0bd209fc7497dc6cfdfc08
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T13:25:30Z

    IGNITE-3873: Added WiX script to generate ODBC installer.

commit 1093819ac0f3e7a0faacde59919117b8977e6d5b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T15:19:01Z

    IGNITE-4201: Fixed version fix maven step.

commit bac0cba7fddd412dfbff98163afbc15d81d5e0d4
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-10T06:02:41Z

    ignite-4044  always authenticate local node

commit 26daa57ca82254d68ac04a7b33223c6eb5ade0e4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-10T08:17:29Z

    Fixed javadoc.

commit 8b59f4e76138e08e80aa219c1a9cf0c3df6fdb4b
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-10T11:43:00Z

    Backport commit of the following:
    
    commit 612eb3daffe608995aac28eed019b3e6ef9d66d3
    Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
    Date:   Fri Aug 19 13:28:39 2016 +0300
    
        ignite-2795 Support 'copyOnRead' for SQL queries

commit b7499828c928e02e8e554f960f3754e4d08bfbe0
Author: Anton Vinogradov <av@apache.org>
Date:   2016-11-10T13:10:21Z

    IGNITE-500 CacheLoadingConcurrentGridStartSelfTest fails (DataStreamer data loss at unstable topology in !allowOverwrite mode fixed)

commit baa752660c6eddf27d15a812252b01b5872385de
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-11-10T15:47:09Z

    IGNITE-4208: Hadoop: Fixed a bug preventing normal secondary file system start. This closes #1228.

----
;;;","22/Nov/16 11:29;isapego;Ready for review.;;;","13/Jan/17 18:32;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1260
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slf4jLogger ignores IGNITE_QUIET system property,IGNITE-4248,13021833,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,vkulichenko,vkulichenko,18/Nov/16 19:50,02/Mar/17 22:31,14/Jul/23 06:20,22/Dec/16 10:14,1.7,,,1.9,general,,,,,0,,,,"{{Slf4jLogger}} writes in quiet mode into {{System.out}} regardless of the value of {{IGNITE_QUEIT}} system property.

Also {{JclLogger}} and {{HadoopIgfsJclLogger}} ignore this property and should be fixed.",,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4464,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 22 10:05:26 UTC 2016,,,,,,,,,,"0|i36io7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Dec/16 14:57;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1367

    IGNITE-4248: Slf4jLogger ignores IGNITE_QUIET system property

    Fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4248

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1367.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1367
    
----
commit 295859884fa48f05313f26fd3b33b6c85c64a09e
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-12-20T14:54:34Z

    Minors

----
;;;","22/Dec/16 10:05;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1367
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Table aliases not supported for SqlQuery,IGNITE-4247,13021826,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,vkulichenko,vkulichenko,18/Nov/16 19:11,09/Feb/17 17:43,14/Jul/23 06:20,17/Jan/17 12:19,1.7,,,1.9,sql,,,,,0,,,,"Here is the example of the query:
{code}
from Person p where p.salary > ? and p.salary <= ?
{code}
Ignite is not aware of the alias and incorrectly appends the SELECT statement, which causes this exception:
{noformat}
Exception in thread ""main"" javax.cache.CacheException: Failed to parse query: SELECT ""CacheQueryExamplePersons"".Person._key, ""CacheQueryExamplePersons"".Person._val from Person p where salary > ? and salary <= ?
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryTwoStep(IgniteH2Indexing.java:1217)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryTwoStep(IgniteH2Indexing.java:1123)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.applyx(GridQueryProcessor.java:813)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.applyx(GridQueryProcessor.java:811)
	at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:1760)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryTwoStep(GridQueryProcessor.java:811)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:733)
	at org.apache.ignite.examples.datagrid.CacheQueryExample.sqlQuery(CacheQueryExample.java:176)
	at org.apache.ignite.examples.datagrid.CacheQueryExample.main(CacheQueryExample.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
Caused by: org.h2.jdbc.JdbcSQLException: Column ""CacheQueryExamplePersons.PERSON._KEY"" not found; SQL statement:
SELECT ""CacheQueryExamplePersons"".Person._key, ""CacheQueryExamplePersons"".Person._val from Person p where salary > ? and salary <= ? [42122-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:257)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1188)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:276)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.prepareStatement(IgniteH2Indexing.java:410)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryTwoStep(IgniteH2Indexing.java:1201)
	... 14 more
{noformat}",,amashenkov,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 09 17:43:48 UTC 2017,,,,,,,,,,"0|i36imn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/16 14:40;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1297

    IGNITE-4247: Sql queries supports table alias.

    Big fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4247

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1297.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1297
    
----
commit 029bbee10b415d49dd765ca4b1377dac137ab2c7
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-28T14:27:33Z

    Sql queries supports table alias.

----
;;;","28/Nov/16 15:01;amashenkov;H2Indexing.generateQuery() method should provide correct column names in ""SELECT"" part of query. The correct way is analyze ""FROM"" part of query, choose suitable alias and rewrite ""SELECT"" part with correct alias. But it is not obvious how to choose right alias if multiple tables or subquery is present in ""FROM"" part.

Fix in PR allow alias to be provided as an argument.;;;","21/Dec/16 14:04;amashenkov;TC test looks good.
Can be merged after review;;;","16/Jan/17 15:19;amashenkov;Review passed. Can be merged.;;;","09/Feb/17 17:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1297
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: IgniteDbConfiguration initializes incorrectly,IGNITE-4246,13021764,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,18/Nov/16 14:14,18/Nov/16 17:33,14/Jul/23 06:20,18/Nov/16 17:33,1.8,,,1.8,platforms,,,,,0,.NET,,,"1) Loaded event handler is static. We should avoid subscribing multiple times.
2) Loaded event handler should check whether context in question actually needs caching
3) Add a way to configure EF caching without inheriting IgniteDbConfiguration",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Nov 18 17:33:46 UTC 2016,,,,,,,,,,"0|i36i8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/16 16:19;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1249

    IGNITE-4246 .NET: Fix IgniteDbConfiguration initialization

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4246

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1249.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1249
    
----
commit 797f558ddf8cdc06b73fab59b9cfab62a3654226
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T14:45:53Z

    Fix multiple subscriptions

commit 154bb48dc76b7cc452178e2378d3f2374829e223
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T14:56:34Z

    InitializeIgniteCaching static method

commit ccb05ee6a7e019fc240d90663ba822a22ee07e4b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T15:35:45Z

    Add a check

commit c393330f2f249417e51467403862f18076ead76f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T15:39:10Z

    wip

commit c8d4c0faa47c1363a830ff44c046f9d92b616459
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T15:41:40Z

    wip

commit 521549d6e287163dd00bc30cab677bc2cc9cdedc
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T15:48:15Z

    Refactor AddInterceptor call

commit bc7325f56ca36c642a3fc0470b32614fd8f7f0e2
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T15:55:19Z

    wip

commit 0a3663ef2dc062881476db9308f467935db749b8
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T15:58:19Z

    wip

commit a1234e8b1d4e29d6604af72658d6592881c7f5fc
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T16:06:35Z

    wip extra tests

commit 9b5356797d3b7bd3e72a2f971a48e0c093956b0a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T16:11:40Z

    wip

commit bd2988906432dd6f038119da4a9d6c03b6e99d07
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-18T16:17:10Z

    Test done

----
;;;","18/Nov/16 17:33;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1249
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExchangeManager should wait for cache rebalancing in async way,IGNITE-4242,13021483,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,avinogradov,avinogradov,17/Nov/16 15:25,06/Dec/16 09:56,14/Jul/23 06:20,06/Dec/16 09:56,,,,1.9,,,,,,0,,,,"Current code waits at system pool's thread, that unacceptable.",,avinogradov,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-11-17 15:25:38.0,,,,,,,,,,"0|i36gif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web condole: Failed execute query after node restart.,IGNITE-4241,13021419,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,17/Nov/16 10:22,24/Nov/16 03:33,14/Jul/23 06:20,18/Nov/16 05:46,1.8,,,1.8,wizards,,,,,0,,,,"# Run one node with data,
# Execute query on SQL page,
# Restart node,
# Execute query again.

Console in results area show message:
Error: Failed to clear query results. Nodes are not available: [d539449e]",,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 24 03:33:17 UTC 2016,,,,,,,,,,"0|i36g47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/16 05:46;anovikov;Fixed. Pavel, please test.;;;","24/Nov/16 03:33;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Public thread pool starvation is cause of deadlock when user's jobs calls cache.size(),IGNITE-4239,13021356,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,tledkov-gridgain,tledkov-gridgain,tledkov-gridgain,17/Nov/16 05:31,22/Nov/16 11:40,14/Jul/23 06:20,22/Nov/16 09:53,1.6,,,1.9,cache,compute,,,,0,,,,"The users job are hang when a lot of jobs that calculates cache size are submitted.

The log contains message:
{code}
WARNING: Possible thread pool starvation detected (no task completed in last 30000ms, is executorService pool size large enough?)
{code}

After a while all the thread of a public thread pool are locked on waiting the SizeTask future. ",,githubbot,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 11:40:33 UTC 2016,,,,,,,,,,"0|i36fq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/16 05:32;tledkov-gridgain;Root cause: SizeJob is always executed in the public thread pool.;;;","21/Nov/16 09:35;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/1242
;;;","21/Nov/16 09:40;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1250

    IGNITE-4239 Public thread pool starvation is cause of deadlock when user's jobs calls cache.size()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4239

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1250.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1250
    
----
commit 85a4b966fdfb7018d1c91b73df1659082128f786
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-14T10:38:33Z

    IGNITE-4216 .NET: Fix PlatformAffinityFunction to inject resource into baseFunc

commit e39888a08da313bec4d30f96488eccb36b4abacc
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2016-11-17T04:41:05Z

    IGNITE-4163 Fixed load range queries.

commit 400140120cbd768cf032d91ab6dc16426e0054b5
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-17T05:34:52Z

    IGNITE-4239: add GridInternal annotaion for tasks instead of jobs.

----
;;;","21/Nov/16 12:29;tledkov-gridgain;[Tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1250%2Fhead];;;","22/Nov/16 11:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1250
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hangs on compute result serialization error,IGNITE-4231,13021085,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,16/Nov/16 09:14,12/Dec/16 09:21,14/Jul/23 06:20,12/Dec/16 09:21,1.7,,,2.0,,,,,,0,,,,Compute task may hang if was thrown exception on result serialization. This should be properly handled and responded to client.,,dkarachentsev,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 23 08:07:04 UTC 2016,,,,,,,,,,"0|i36e1z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/16 07:38;dkarachentsev;[PR #1238|https://github.com/apache/ignite/pull/1238];;;","21/Nov/16 16:02;sboikov;Hi,

Fix looks good, but I think we need improve it a little:
- now marshaller also can throw exception when 'ex' or 'attrs' are marshalled ('loc ? null : U.marshal(marsh, ex)';  'loc ? null : U.marshal(marsh, attrs)'), need handle these errors as well
- for response marshall error please also include in error message response class name ('Failed to serialize job response [resCls=' ...)

Thanks!;;;","22/Nov/16 13:59;dkarachentsev;Thanks, Semen. Please, check again.;;;","23/Nov/16 08:07;sboikov;Looks good to merge.

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataStreamer can hang on changing topology,IGNITE-4225,13020744,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,avinogradov,avinogradov,15/Nov/16 09:39,22/Nov/16 08:56,14/Jul/23 06:20,22/Nov/16 08:56,,,,1.8,,,,,,0,,,,"Hang reason:

Exchange cannot happen because some datastreamer futures not finished 

{noformat}
Pending data streamer futures:
[12:17:28,427][WARN ][exchange-worker-#106%distributed.CacheLoadingConcurrentGridStartSelfTest2%][GridCachePartitionExchangeManager] >>> DataStreamerFuture [topVer=AffinityTopologyVersion [topVer=5, minorTopVer=0], super=GridFutureAdapter [resFlag=0, res=null, startTime=1479201428401, endTime=0, ignoreInterrupts=false, state=INIT]]
{noformat}

Reason of notfinished futures:

{noformat}
- parking to wait for  <0x0000000792e050b0> (a org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache$AffinityReadyFuture)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:160)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:118)
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.awaitTopologyVersion(GridAffinityAssignmentCache.java:538)
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.cachedAffinity(GridAffinityAssignmentCache.java:449)
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.nodes(GridAffinityAssignmentCache.java:402)
	at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.nodes(GridCacheAffinityManager.java:259)
	at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.primary(GridCacheAffinityManager.java:295)
	at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.primary(GridCacheAffinityManager.java:286)
	at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.primary(GridCacheAffinityManager.java:310)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamerImpl$IsolatedUpdater.receive(DataStreamerImpl.java:1948)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamerUpdateJob.call(DataStreamerUpdateJob.java:140)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.localUpdate(DataStreamProcessor.java:370)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.processRequest(DataStreamProcessor.java:297)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.access$000(DataStreamProcessor.java:56)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor$1.onMessage(DataStreamProcessor.java:86)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1080)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:708)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:101)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:671)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

Possible solution:
Need to use topology instead of affinity to detect is node primary
{noformat}
boolean primary = cctx.affinity().primary(cctx.localNode(), entry.key(), topVer);
{noformat}",,avinogradov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 15 13:23:14 UTC 2016,,,,,,,,,,"0|i36by7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Nov/16 13:23;avinogradov;Fixed by replacing 

{noformat}
AffinityTopologyVersion topVer = cctx.isLocal() ?
                cctx.affinity().affinityTopologyVersion() :
                cctx.topology().topologyVersion();
{noformat}

with 
{noformat}
            AffinityTopologyVersion topVer = cctx.isLocal() ?
                cctx.affinity().affinityTopologyVersion() :
                cctx.shared().exchange().readyAffinityVersion();
{noformat}

To be checked at TeamCity;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hive job submission failed with exception ”java.io.UTFDataFormatException“,IGNITE-4219,13020526,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,vozerov,amashenkov,amashenkov,14/Nov/16 15:31,19/Jan/17 11:34,14/Jul/23 06:20,19/Jan/17 11:34,,,,2.0,hadoop,,,,,0,,,,"Long property passing to Hadoop causes an exception:

{code}
Caused by: java.io.UTFDataFormatException 
       at java.io.ObjectOutputStream$BlockDataOutputStream.writeUTF(ObjectOutputStream.java:2144) 
       at java.io.ObjectOutputStream$BlockDataOutputStream.writeUTF(ObjectOutputStream.java:1987) 
       at java.io.ObjectOutputStream.writeUTF(ObjectOutputStream.java:865) 
       at org.apache.ignite.internal.util.IgniteUtils.writeUTFStringNullable(IgniteUtils.java:5029) 
       at org.apache.ignite.internal.util.IgniteUtils.writeStringMap(IgniteUtils.java:4989) 
       at org.apache.ignite.internal.processors.hadoop.HadoopDefaultJobInfo.writeExternal(HadoopDefaultJobInfo.java:137)
{code}",,amashenkov,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 18 13:28:06 UTC 2017,,,,,,,,,,"0|i36alr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Nov/16 15:34;amashenkov;It seems we can't use custom marshaller to overcome the issue, due to GridClientJdkMarshaller hardcoded.;;;","09/Jan/17 11:19;iveselovskiy;java.io.DataOutput#writeUTF exactly specifies this behavior in javadoc: 
{code}
     *If this number is larger than
     * <code>65535</code>, then a <code>UTFDataFormatException</code>
     * is thrown. Otherwise, this length is written
     * to the output stream in exactly the manner
     * of the <code>writeShort</code> method;
     * after this, the one-, two-, or three-byte
     * representation of each character in the
     * string <code>s</code> is written.
{code};;;","09/Jan/17 17:57;iveselovskiy;https://github.com/apache/ignite/pull/1409

A new test added to check the fix. ;;;","18/Jan/17 13:28;vozerov;Reviewed, performed some minor fixes. Waiting for TC.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: wrong generation of collision SPIs with default values.,IGNITE-4218,13020478,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,14/Nov/16 11:32,24/Nov/16 07:36,14/Jul/23 06:20,17/Nov/16 09:09,1.8,,,1.8,wizards,,,,,0,,,,Selected empty collision SPI bean is not generated in preview and on summary page.,,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 24 07:36:05 UTC 2016,,,,,,,,,,"0|i36ab3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Nov/16 03:53;vsisko;Fixed code generation for default configured collision configurations.;;;","17/Nov/16 09:09;anovikov;Reviewed. Merged. Pavel, please test;;;","24/Nov/16 07:36;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: PlatformAffinityFunction does not inject resource into baseFunc,IGNITE-4216,13020451,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,14/Nov/16 08:46,16/Dec/16 12:38,14/Jul/23 06:20,14/Nov/16 10:42,,,,1.8,platforms,,,,,0,.NET,,,"PlatformAffinityFunction does not inject resource into baseFunc. This causes NPE within RendezvousAffinityFunction:

* start multiple nodes
* start a new cache with RendezvousAffinityFunction",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-11-14 08:46:42.0,,,,,,,,,,"0|i36a53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop edition: node cannot be started with SecondaryFileSystem in configuration,IGNITE-4208,13019815,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,iveselovskiy,pkonstantinov,pkonstantinov,10/Nov/16 12:22,11/Nov/16 03:56,14/Jul/23 06:20,10/Nov/16 15:47,1.7,,,1.8,hadoop,,,,,0,,,,"To reproduce:
# download hadoop edition
# start node using attached config
Note: HADOOP_HOME is set correctly 
{code}
[18:45:30,628][INFO ][main][IgniteKernal%hadoop] 

>>>    __________  ________________  
>>>   /  _/ ___/ |/ /  _/_  __/ __/  
>>>  _/ // (7 7    // /  / / / _/    
>>> /___/\___/_/|_/___/ /_/ /___/   
>>> 
>>> ver. 1.7.0-SNAPSHOT#20161031-sha1:9712e2b2
>>> 2016 Copyright(C) Apache Software Foundation
>>> 
>>> Ignite documentation: http://ignite.apache.org

[18:45:30,631][INFO ][main][IgniteKernal%hadoop] Daemon mode: off
[18:45:30,632][INFO ][main][IgniteKernal%hadoop] OS: Mac OS X 10.12 x86_64
[18:45:30,632][INFO ][main][IgniteKernal%hadoop] OS user: kope
[18:45:30,633][INFO ][main][IgniteKernal%hadoop] PID: 27005
[18:45:30,634][INFO ][main][IgniteKernal%hadoop] Language runtime: Java Platform API Specification ver. 1.7
[18:45:30,634][INFO ][main][IgniteKernal%hadoop] VM information: Java(TM) SE Runtime Environment 1.7.0_67-b01 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 24.65-b04
[18:45:30,636][INFO ][main][IgniteKernal%hadoop] VM total memory: 0.96GB
[18:45:30,637][INFO ][main][IgniteKernal%hadoop] Remote Management [restart: on, REST: on, JMX (remote: on, port: 49140, auth: off, ssl: off)]
[18:45:30,637][INFO ][main][IgniteKernal%hadoop] IGNITE_HOME=/Users/kope/Downloads/hadoop-7.7.0-SNAPSHOT-2
[18:45:30,638][INFO ][main][IgniteKernal%hadoop] VM arguments: [-Xms1g, -Xmx1g, -XX:+AggressiveOpts, -XX:MaxPermSize=256m, -DIGNITE_QUIET=true, -Dcom.sun.management.jmxremote, -Dcom.sun.management.jmxremote.port=49140, -Dcom.sun.management.jmxremote.authenticate=false, 
[18:45:30,639][INFO ][main][IgniteKernal%hadoop] Configured caches ['ignite-marshaller-sys-cache', 'ignite-sys-cache', 'ignite-hadoop-mr-sys-cache', 'ignite-atomics-sys-cache', 'igfs-data', 'igfs-meta']
SNAPSHOT-2/work/ipc/shmem/eb922773-cb75-4bc1-94bf-a14ac085dfa3-27005]
[18:45:31,051][INFO ][main][TcpCommunicationSpi] Successfully bound shared memory communication to TCP port [port=48100, locHost=0.0.0.0/0.0.0.0]
[18:45:31,128][INFO ][main][TcpCommunicationSpi] Successfully bound to TCP port [port=47100, locHost=0.0.0.0/0.0.0.0]
[18:45:31,179][WARN ][main][NoopCheckpointSpi] Checkpoints are disabled (to enable configure any GridCheckpointSpi implementation)
[18:45:31,260][WARN ][main][GridCollisionManager] Collision resolution is disabled (all jobs will be activated upon arrival).
[18:45:31,270][WARN ][main][NoopSwapSpaceSpi] Swap space is disabled. To enable use FileSwapSpaceSpi.
[18:45:31,274][INFO ][main][IgniteKernal%hadoop] Security status [authentication=off, tls/ssl=off]
[18:45:32,044][INFO ][main][GridTcpRestProtocol] Command protocol successfully started [name=TCP binary, host=0.0.0.0/0.0.0.0, port=11211]
[18:45:32,361][ERROR][main][IgniteKernal%hadoop] Got exception while starting (will rollback startup routine).
java.lang.NoClassDefFoundError: org/apache/hadoop/conf/Configuration
	at org.apache.ignite.internal.processors.hadoop.impl.delegate.HadoopBasicFileSystemFactoryDelegate.start(HadoopBasicFileSystemFactoryDelegate.java:129)
	at org.apache.ignite.internal.processors.hadoop.impl.delegate.HadoopCachingFileSystemFactoryDelegate.start(HadoopCachingFileSystemFactoryDelegate.java:58)
	at org.apache.ignite.internal.processors.hadoop.impl.delegate.HadoopIgfsSecondaryFileSystemDelegateImpl.start(HadoopIgfsSecondaryFileSystemDelegateImpl.java:376)
	at org.apache.ignite.hadoop.fs.IgniteHadoopIgfsSecondaryFileSystem.start(IgniteHadoopIgfsSecondaryFileSystem.java:261)
	at org.apache.ignite.internal.processors.igfs.IgfsImpl.<init>(IgfsImpl.java:187)
	at org.apache.ignite.internal.processors.igfs.IgfsContext.<init>(IgfsContext.java:101)
	at org.apache.ignite.internal.processors.igfs.IgfsProcessor.start(IgfsProcessor.java:127)
	at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1599)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:890)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1761)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1595)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1041)
	at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:963)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:849)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:748)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:618)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:588)
	at org.apache.ignite.Ignition.start(Ignition.java:347)
	at org.apache.ignite.startup.cmdline.CommandLineStartup.main(CommandLineStartup.java:302)
Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.conf.Configuration
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 19 more
[18:45:32,370][WARN ][main][IgniteKernal%hadoop] Attempt to stop starting grid. This operation cannot be guaranteed to be successful.
[18:45:32,391][INFO ][main][GridTcpRestProtocol] Command protocol successfully stopped: TCP binary
[18:45:32,425][WARN ][main][GridCacheIoManager] Failed to unregister ordered cache communication handler because it was not found for topic: T6 [topic=TOPIC_CACHE, id1=83e8ca36-2305-3266-8e65-1463be879baa, id2=0]
[18:45:32,818][INFO ][main][IgniteKernal%hadoop] 

>>> +------------------------------------------------------------------------------------------+
>>> Ignite ver. 1.7.0-SNAPSHOT#20161031-sha1:9712e2b247426d03bf733c32fe57714d338d1397 stopped OK
>>> +------------------------------------------------------------------------------------------+
>>> Grid name: hadoop
>>> Grid uptime: 00:00:05:068



{code}",,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 02:42;pkonstantinov;hadoop-server.xml;https://issues.apache.org/jira/secure/attachment/12838492/hadoop-server.xml",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Nov 11 02:27:37 UTC 2016,,,,,,,,,,"0|i3667r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 02:27;pkonstantinov;Successfully tested in 1.7;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CassandraCacheStore should start IgniteThread threads in loadCache() method,IGNITE-4205,13019705,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kdudkov,vkulichenko,vkulichenko,10/Nov/16 00:56,17/May/19 14:35,14/Jul/23 06:20,22/May/17 11:36,1.7,,,2.1,cache,,,,,0,,,,"{{CassandraCacheStore.loadCache()}} method starts a generic thread pool for parallel data load. Threads in this thread pool can't deserialize Ignite internal objects (e.g. {{IgniteKernal}}) which can cause unexpected behavior. Here is one of the scenarios:
* There is column in Cassandra which stores an object as BLOB using {{JavaSerializer}}.
* {{CacheConfiguration.storeKeepBinary}} is {{true}}.
* When an object is saved, it's passed to the store as an instance of {{BinaryObject}} which is converted to a byte array and saved in Cassandra.
* When the same object is loaded in {{loadCache}}, the store takes the byte array and tries to convert it to {{BinaryObject}}. But it can't because this implies calling {{IgnitionEx.localIgnite()}} from non-Ignite thread.

To fix this we need to provide a thread factory that will create instances of {{IgniteThread}} and use it in the pool that loads the data.

Most likely the same issue exists in {{CacheAbstractJdbcStore}}.

And in general, any threads created by Ignite internals should be {{IgniteThread}}-s. This should be revisited.",,irudyak,kdudkov,ntikhonov,vkulichenko,,,,,,,,,"dspavlov commented on issue #1274: IGNITE-4205 CassandraCacheStore should start IgniteThread threads in loadCache() method
URL: https://github.com/apache/ignite/pull/1274#issuecomment-493476538
 
 
   https://issues.apache.org/jira/browse/IGNITE-4205 is closed closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 14:35;githubbot;600","dspavlov commented on pull request #1274: IGNITE-4205 CassandraCacheStore should start IgniteThread threads in loadCache() method
URL: https://github.com/apache/ignite/pull/1274
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 14:35;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,IGNITE-1371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 22 11:36:21 UTC 2017,,,,,,,,,,"0|i365jb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Nov/16 00:32;vkulichenko;[~irudyak], the change looks good to me, but it seems to be not tested. Can you create a test for the scenario I described in the ticket? We need to make sure that the solution is actually working.

We also need to make similar change in {{CacheAbstractJdbcStore}}. Can you do this as well? Or you prefer to create a separate ticket for this?;;;","06/Dec/16 06:30;irudyak;Valentin I can easily do this, but it looks like IgniteThread implementation doesn't have anything special related to marchalling/unmarshalling - just only a number of getters and setters. Thus it looks like it shouldn't work. Am I wrong?;;;","10/Dec/16 19:01;irudyak;Valentin, could you please clarify this *""When an object is saved, it's passed to the store as an instance of BinaryObject""*?

I did this:

*IgniteCache myCache = ignite.cache(""mycache"").withKeepBinary();*
*myCache.put(1L, new MyObject());*

But on *CacheStore* side, inside *write(final Cache.Entry<? extends K, ? extends V> entry)* method I still have *MyObject* instance inside the *entry* object instead of expected *BinaryObject*.

Should I construct *BinaryObject* manually? Looks like I can do this using *BinaryObjectBuilder*, but the idea itself looks rather awkwardly. If I am correct, the main idea of binary objects is to use them for read only operations on different clients (*Java*, *.Net* and etc.) which provides kind of *""platform independent""* serialization. While for write operations I can use my custom Java class instances and they will be automatically converted to *BinaryObjects* right?

Configuration for *mycache* looks like this:

<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
        <property name=""name"" value=""mycache""/>
        <property name=""readThrough"" value=""true""/>
        <property name=""writeThrough"" value=""true""/>
        <property name=""storeKeepBinary"" value=""true""/>
        <property name=""cacheStoreFactory"">
                <bean class=""org.apache.ignite.cache.store.cassandra.CassandraCacheStoreFactory"">
                        <property name=""dataSourceBean"" value=""cassandraAdminDataSource""/>
                        <property name=""persistenceSettingsBean"" value=""cache2_persistence_settings""/>
                </bean>
        </property>
</bean>
;;;","15/Dec/16 01:06;vkulichenko;[~irudyak], {{IgniteThread}} has a grid name associated with it which is used within {{IgnitionEx.localIgnite()}} method during deserialization of binary object. If thread is not an instance of {{IgniteThread}}, this method will throw an exception.;;;","15/Dec/16 01:10;vkulichenko;[~irudyak], the idea behind this is not to deserialize them on server side. One of the main features of binary format is that it allows not to deploy classes on server and dynamically change the schema. If you deserialize before calling the store, this is not possible. But weird thing is that this is controlled by {{cacheStoreFactory}} configuration flag, which it's actually set to true in your case, so the {{CacheStore}} implementation should get binary objects. Not sure why this doesn't work for you...;;;","24/Jan/17 00:40;vkulichenko;[~irudyak], do you have any news on this ticket? Will you have a chance to finish it soon?;;;","10/May/17 12:52;kdudkov;Due to no activity I'll try to complete ticket.;;;","10/May/17 17:13;kdudkov;I created new [GitHub pr|https://github.com/apache/ignite/pull/1925], with changes and a test for the scenario described in the ticket;;;","11/May/17 09:28;kdudkov;The weird moment: we can't get object from cache after loadAll(), because we can't deserealize it due to absence of metadata in new ignite instance. But we can get binary representation of it using .withKeepBinary().get();;;","16/May/17 09:10;vkulichenko;[~kdudkov], can you please also check if the same issue exists in JDBC store ({{CacheAbstractJdbcStore}})? If yes, it needs to be fixed in the same way.

As for your last comment, {{BinaryConfiguration#compactFooter}} should be set to {{false}} in this scenario. Please try and make sure it works.;;;","16/May/17 09:34;kdudkov;My last commit added this flag and checked read back works.

I'll check same issuei for CacheAbstractJdbcStore and will add separate ticket if it is same there.;;;","16/May/17 11:40;vkulichenko;I don't think it makes sense to separate these fixes. Can you fix the JDBC store in the same PR?;;;","16/May/17 12:04;kdudkov;I've fixed this issue in CacheAbstractJdbcStore too.;;;","16/May/17 14:29;vkulichenko;Can you add test for it as well?;;;","17/May/17 07:41;kdudkov;In CacheAbstractJdbcStore it was the thread naming question only - because the only child class - CacheJdbcPojoStore - doesn't use binary marshaller. So I can test only the fact that new threads are instances of IgniteThread, that is obvious.;;;","17/May/17 07:48;vkulichenko;That's not true. JDBC store does work with binary objects, at least when there are no classes on server nodes.;;;","18/May/17 14:28;vkulichenko;Looks like this scenario is not applicable to POJO store. The fix can be merged.;;;","22/May/17 11:36;ntikhonov;I've merged this changes to master. Thank you for your contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,
CPP: fix versioning of C++ libs,IGNITE-4201,13019536,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,krybakova,krybakova,09/Nov/16 13:29,13/Jan/17 18:31,14/Jul/23 06:20,10/Nov/16 11:21,1.7,,,1.8,platforms,,,,,0,,,,"Currently  versions are not set properly in Ignite C++ core libraries names if we build this libraries on Linux according to $IGNITE_HOME/platforms/cpp/DEVNOTES.txt.

For instance, for version 1.7 names are libignite*-1.6.0.8653 instead of libignite*-1.7.0",,githubbot,isapego,krybakova,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 13 18:31:17 UTC 2017,,,,,,,,,,"0|i364hr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Nov/16 15:19;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1222

    IGNITE-4201: Fixed version fix maven step.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4201

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1222.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1222
    
----
commit 3ef5f61b6e6abcb1fcce89af842fa59af52d0674
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T15:17:38Z

    IGNITE-4201: Fixed version fix maven step.

----
;;;","09/Nov/16 15:20;isapego;Ready for review.;;;","10/Nov/16 11:18;vozerov;LGTM;;;","10/Nov/16 11:24;krybakova;verified;;;","13/Jan/17 18:31;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1222
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
H2 debug console is always started on artificial port,IGNITE-4196,13019431,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,vkulichenko,vkulichenko,09/Nov/16 01:38,03/Feb/17 08:42,14/Jul/23 06:20,03/Feb/17 08:41,1.7,,,1.9,sql,,,,,1,,,,"When H2 debug console is started as described in [1], it always binds to an artificial port. This has at least two issues:
* Sometimes a client wants to connect through firewall. It's impossible to open all possible ports for the console.
* If there is no GUI on server node, console can't be opened in a browser, so user has no idea what to do next and how to connect.

We should:
* Print out the information about how to connect to the console after it's started.
* Allow to use a specific port provided as a system property.

[1] https://apacheignite.readme.io/docs/sql-queries#using-h2-debug-console",,githubbot,skalashnikov,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 03 08:42:23 UTC 2017,,,,,,,,,,"0|i363un:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 13:04;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/1486

    IGNITE-4196 Added means to specify port for H2 debug console

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4196

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1486.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1486
    
----
commit ebc293b14f3eed3fc563f3fc11e3d1ecd85f55e9
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-02-01T13:02:36Z

    IGNITE-4196 Added means to specify port for H2 debug console

----
;;;","01/Feb/17 14:17;skalashnikov;Added system property IGNITE_H2_DEBUG_CONSOLE_PORT which controls the port for H2 debug console.
;;;","01/Feb/17 14:18;skalashnikov;[~vozerov], could you please review?;;;","03/Feb/17 08:36;vozerov;[~skalashnikov], looks good to me. Will merge in the nearest time.;;;","03/Feb/17 08:42;vozerov;Merged to {{master}} as impact is minor.;;;","03/Feb/17 08:42;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1486
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
".NET: ""Invalid session release request"" exception in IgniteSessionStateStoreProvider.SetAndReleaseItemExclusive",IGNITE-4186,13019231,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,krybakova,krybakova,krybakova,08/Nov/16 14:59,24/Nov/16 12:47,14/Jul/23 06:20,10/Nov/16 17:40,1.7,,,1.8,platforms,,,,,0,,,,"Steps:
- Create a new C# Web application in MS Visual Studio
- Install Apache.Ignite.AspNet package via Tools->NuGet Package ManagerPackage Manager Console
- Open Web.config file, remove default sessionState section in <system.web> and add the following instead:
{noformat}
<sessionState mode=""Custom"" customProvider=""IgniteSessionStateProvider"">
  <providers>
    <add name=""IgniteSessionStateProvider"" type=""Apache.Ignite.AspNet.IgniteSessionStateStoreProvider, Apache.Ignite.AspNet"" />
  </providers>
</sessionState>
{noformat}
- Open Default.aspx.cs file and add the following to Page_Load method
{noformat}
Session[""test""] = ""abc"";
{noformat}
- Run project
- Use Incognito mode or clear the cookies and open the main page

Result:
{noformat}
[IgniteException: Invalid session release request, expected lockId: 0, actual: ]
 Apache.Ignite.AspNet.IgniteSessionStateStoreProvider.SetAndReleaseItemExclusive(HttpContext context, String id, SessionStateStoreData item, Object lockId, Boolean newItem) +298
   System.Web.SessionState.SessionStateModule.OnReleaseState(Object source, EventArgs eventArgs) +573
   System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +141
   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +69
{noformat}","Windows 10
MS VS 2015
.NET Framework 4.0.30319
ASP.NET 4.6.1586.0",githubbot,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 24 12:47:48 UTC 2016,,,,,,,,,,"0|i362m7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Nov/16 15:09;ptupitsyn;Need to clear the cookies (or use incognito mode) in order to reproduce this.;;;","10/Nov/16 14:28;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1227

    IGNITE-4186 .NET: Fix ""Invalid session release request"" exception in IgniteSessionStateStoreProvider.SetAndReleaseItemExclusive

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4186

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1227.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1227
    
----
commit 8aa73120cb2de5c7f246674d1c06285b50d44ae6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-10T12:15:10Z

    IGNITE-4186 .NET: ""Invalid session release request"" exception in IgniteSessionStateStoreProvider.SetAndReleaseItemExclusive - add test

commit 89bddf806bc7aa095ed95da4444b96da868de685
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-10T12:26:36Z

    wip

commit cb61b149d8a8fe3629a5b21583353acb16d75d9b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-10T12:32:14Z

    wip

commit c1206774165a469b1429d28ad81345d994a8e389
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-10T13:02:37Z

    wip

commit 7aac35547aa840882a6783ca6e0b0a32c881e5aa
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-10T13:12:53Z

    wip

commit 9a6223d52b3b340f6653d757c054446cf728d349
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-10T13:55:00Z

    wip

commit b7fe4c2f846d8805d4bc094ac2db5937ed11522e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-10T14:26:14Z

    fix test

----
;;;","10/Nov/16 17:36;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1227
;;;","24/Nov/16 12:47;krybakova;Verified;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: NullReferenceException in IgniteOutputCacheProvider when igniteConfiguration is missing,IGNITE-4185,13019195,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,krybakova,krybakova,krybakova,08/Nov/16 12:33,24/Nov/16 09:12,14/Jul/23 06:20,08/Nov/16 16:14,1.7,,,1.8,platforms,,,,,0,,,,"Steps:
- Create a new C# Web application in the MS Visual Studio
- Install Apache.Ignite.AspNet package via Tools->NuGet Package ManagerPackage Manager Console:
- Open Web.config file and make the following changes:
Add to <configSections>:
{noformat}
<section name=""igniteConfiguration"" type=""Apache.Ignite.Core.IgniteConfigurationSection, Apache.Ignite.Core"" />
{noformat}
Remove default sessionState section in <system.web> and add the following instead:
{noformat}
<sessionState mode=""Custom"" customProvider=""IgniteSessionStateProvider"">
  <providers>
    <add name=""IgniteSessionStateProvider"" type=""Apache.Ignite.AspNet.IgniteSessionStateStoreProvider, Apache.Ignite.AspNet"" />
  </providers>
</sessionState>
{noformat}
Add to <system.web>:
{noformat}
<caching>
  <outputCache defaultProvider=""apacheIgnite"">
    <providers>
      <add name=""apacheIgnite"" type=""Apache.Ignite.AspNet.IgniteOutputCacheProvider, Apache.Ignite.AspNet"" igniteConfigurationSectionName=""igniteConfiguration"" cacheName=""myWebCache"" />
    </providers>
  </outputCache>
</caching>
{noformat}
<igniteConfiguration> section in <configuration> is missed on purpose.

- Run project

Result:
{noformat}
Failed to initialize Apache.Ignite.AspNet.IgniteOutputCacheProvider: System.NullReferenceException: 
in
Apache.Ignite.AspNet.Impl.ConfigUtil.StartFromApplicationConfiguration(String sectionName, String gridName)
  в Apache.Ignite.AspNet.Impl.ConfigUtil.InitializeCache[TK,TV](NameValueCollection config, Type callerType, String defaultCacheName)
{noformat}","Windows 10
MS VS 2015",krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 24 09:12:25 UTC 2016,,,,,,,,,,"0|i362e7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Nov/16 15:52;ptupitsyn;There is a missing null check, but it fails only when the configuration is incorrect. So the bug is essentially an unfriendly error message.;;;","24/Nov/16 09:12;krybakova;Verified.
Currently it's handled correctly:
{noformat}
Failed to initialize Apache.Ignite.AspNet.IgniteOutputCacheProvider: System.Configuration.ConfigurationErrorsException: IgniteConfigurationSection with name 'igniteConfiguration' is defined in <configSections>, but not present in configuration.
  в Apache.Ignite.AspNet.Impl.ConfigUtil.StartFromApplicationConfiguration(String sectionName, String gridName)
  в Apache.Ignite.AspNet.Impl.ConfigUtil.InitializeCache[TK,TV](NameValueCollection config, Type callerType, String defaultCacheName)
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: empty value in a particular row breaks reading other rows in the column,IGNITE-4183,13018854,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,07/Nov/16 14:55,13/Jan/17 18:29,14/Jul/23 06:20,09/Nov/16 12:31,1.7,,,1.8,odbc,,,,,0,odbc,,,"To reproduce,
* first create cache without empty values and ensure that all values are properly exposed via ODBC
* next make some value(s) in original cache null, try it again and verify whether ODBC exposes more null values than expected
",,githubbot,isapego,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 13 18:29:15 UTC 2017,,,,,,,,,,"0|i360a7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/16 17:56;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1213

    IGNITE-4183: Returning size of the fixed-sized columns on fetch.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4183

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1213.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1213
    
----
commit a4c63ae113931615e940ada2411ebce32dba5db8
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-09-30T07:45:13Z

    IGNITE-3998: IGFS: Enabled IgfsAbstractSelfTest.testCreateConsistencyMultithreaded. This closes #1129.

commit a12298c0baf19407f3110ba3c4f0aab88b67946d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-30T08:00:51Z

    IGNITE-3868: ODBC: Fixed connection string parsing. This closes #1051.

commit 5e7ef8644ad824b87d4797e59133eb783ff8b098
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:37:25Z

    Merge branch 'ignite-1.6.9' into ignite-1.6.10

commit 59b46d3e6ea073d054ca2262d676b055a74bbb1f
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:40:04Z

    IGNITE-2881: Fixed SPI queries.

commit 0b66d2d7b695cf370a4b8a717844ad67742c6090
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-03T09:04:03Z

    ignite-3601 Do not check version on commit for read-only serializable transactions.

commit 9f211e413332931f0fb1190744ddd7c7f38fd213
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-03T09:26:12Z

    IGNITE-3645: IGFS: Local secondary: Implemented update() operation. This closes #1003.

commit fa698d6fcfde0006423ef009337dbef58ac62515
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T10:33:12Z

    Fixed TcpDiscoverySnapshotHistoryTest intermittent failures caused by multicast IP finder.

commit bba019fd5076412ca43c10a32fd300b6031ccd0b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T14:25:20Z

    IGNITE-3980: Processed failing tests in query suites. This closes #1137.

commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit 23461b8d33922772ef8e7217e9e87b3f3b0b37b1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T07:14:59Z

    IGNITE-4001: Timeouts for threads in Ignite pools. This closes #1130.

commit b94b0aeae4c42b1d35128c6b1de97e3fa318d497
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-06T07:22:50Z

    IGNITE-3163 IGFS: Added working directory support to IgniteHadoopIgfsSecondaryFileSystem. This closes #1030. This closes #1058. This closes #1132.

commit e6317e01fa8a0de03e15dcdd84a575c6b06ce701
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T09:03:48Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect. This closes #903. This closes #1145.

commit 952be8b995050b34379006dd6e739da3fe3b49e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2016-10-07T12:00:09Z

    Squashed commit of the following:
    
    commit 566881b695b8bc00e618fe9a9b4c86a8fd563cc1
    Author: sboikov <sboikov@gridgain.com>
    Date:   Fri Oct 7 13:08:38 2016 +0300
    
        minor
    
    commit 7fe88a1cb21f794ee55a176ab36d895cbf916528
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Oct 6 11:11:24 2016 +0300
    
        ignite-update-notifier fix after review
    
        (cherry picked from commit a10d2ff)
    
    commit f2de749f958a3b18dc479f8a5517d7bf9362b933
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Oct 4 12:12:08 2016 +0300
    
        ignite-2079-2 optimize import and change url path
    
        (cherry picked from commit 830a3cf)
    
    commit 0d1be85ad55b0aa91224690d6c112ae92e8bc0a9
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Sep 29 19:54:54 2016 +0300
    
        update-notifier remove parse xml, now parse like properties
    
        (cherry picked from commit 9ecaa29)
    
    commit e43bca6fb4528a7fc0dcb804a74fca1c59d7468b
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Sep 27 17:07:21 2016 +0300
    
        remove dom parser
    
        (cherry picked from commit d1653b2)

commit b9c776a8423471706ecb1dc6176b38f23e799077
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-10T08:52:57Z

    IGNITE-3235 Failed to initialize primitive boolean cache property of superclass

commit f9a0676fad7fd6c23e3c91c10d7e0412ccb27c06
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T07:23:01Z

    IGNITE-4041: Created separate processor for thread pools and refactored IO manager. This closes #1150.

commit 9a6cfce659df40b0a4624f19fd91c217b74bafea
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-10-11T10:59:57Z

    IGNITE-4014 Fixed ""Transaction hangs if entry processor failed during serialization"". This closes #1148.

commit 1938a17b01fac1e08c30011180bbcc3ed7374d83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-11T11:50:18Z

    IGNITE-3948: Fixed a bug causing TTL manager to continue tracking of evicted entries. This closes #1101.

commit 60d27547dfc6bd27c6d39cbcc523d0d1e872a821
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T11:51:00Z

    Merge remote-tracking branch 'upstream/ignite-1.6.10' into ignite-1.6.10

commit 359a392f1c53217c691c4c40762c51fd330666e2
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes
    
    (cherry picked from commit a5c85ca)

commit 01ca6db70933fb7f50f161a80cde9647e68a3710
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-10-11T13:18:40Z

    Merge remote-tracking branch 'origin/ignite-1.6.10' into ignite-1.6.10

commit 0659bebe04dc9c0b0a163bc95061519c553e678c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T11:49:36Z

    IGNITE-3972: Fixed a bug causing continuous queries to be lost for ATOMIC cache when key's primary node leaves topology. This closes #1133.

commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T12:44:08Z

    IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.

commit 2ab094e08373dc6667af44d48a38b4f044953a79
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-12T13:48:51Z

    IGNITE-2355: Hadoop: added ability to configure multiple job tracker addresses. This closes #1153.

commit eaf8ae246cc799c1353332fcac05cb3a8efab02c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-12T16:57:09Z

    IGNITE-4034 Get rid of specialized methods in platform targets

commit b1ec58f716ece3a5866dd654ebc707bef67caf57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-10-13T05:58:22Z

    IGNITE-4066 Fixed NPE.

commit 447e07c0bb5af75bce6a14612606904e4e3d9705
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-14T08:40:41Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL

commit 7adfbcf1ee7bbe0beb95fa82749a2e04449de8fa
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-14T14:48:14Z

    IGNITE-4060: Fixed a bug in RoundRobinLoadBalancing API causing exception when running closures after client node reconnect. This closes #1157.

commit 80abd1b72e4fc7b0b95212e7f53c700c0fe21156
Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
Date:   2016-10-14T16:33:07Z

    GG-11360 - Implement SQL queries cancellation (#18)
    
    * GG-11360 Merged IGNITE-2680 to ignite-1.6.3.
    
    * GG-11360 Test cleanup.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Added test for forever-running query cancellation on node restart.
    
    * GG-11360 Fixing race.
    
    * GG-11360 Added test for forever-running query cancellation on node stop.
    
    * GG-11360 Cleanup.
    
    * GG-11360 Support for local query cancellation/timeout.
    
    * GG-11360 Increase test duration.
    
    * GG-11360 Remove redundant catch block.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * Merge remote-tracking branch 'remotes/gg/ignite-1.6.10' into ignite-gg-11360
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.

commit 43ac3f5d5e8ab664e07f26d99be34f284f7941dd
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-17T08:26:12Z

    IGNITE-4054: Hadoop: added map-reduce plan debug output.

commit d3f042b9ba6c605500ab7155c40a41850babefdb
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-17T09:28:31Z

    Fixed indexing test in according to changes from #80abd1b.

----
;;;","07/Nov/16 18:19;isapego;Implemented. The problem was that the length of the fetched data was not set in the case of fixed-size data types.;;;","09/Nov/16 12:21;vozerov;LGTM.;;;","13/Jan/17 18:29;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1213
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The several runs of ServicesExample causes NPE,IGNITE-4181,13018820,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,cyberdemon,skozlov,skozlov,07/Nov/16 12:42,04/Aug/17 19:30,14/Jul/23 06:20,04/Aug/17 19:30,1.6,1.7,2.0,2.1,general,,,,,0,newbie,,,"0. Open example project in IDEA
1. Start 2-3 {{ExampleNodeStartup}}
2. Run {{ServicesExample}} several times.
Sometimes it causes NullPointerException:
{noformat}
Executing closure [mapSize=10]
Service was cancelled: myNodeSingletonService
[15:37:20,020][INFO ][srvc-deploy-#24%null%][GridServiceProcessor] Cancelled service instance [name=myNodeSingletonService, execId=88a92a4d-c1cb-4a9b-8930-c67ac7f42bf3]
[15:37:20,032][INFO ][sys-#33%null%][GridCacheProcessor] Stopped cache: myNodeSingletonService
[15:37:20,033][INFO ][exchange-worker-#23%null%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=10, minorTopVer=4], evt=DISCOVERY_CUSTOM_EVT, node=5faac72a-72ab-4277-9643-0e962973b3f4]
[15:37:20,045][INFO ][sys-#39%null%][GridCacheProcessor] Stopped cache: myClusterSingletonService
[15:37:20,046][INFO ][exchange-worker-#23%null%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=10, minorTopVer=5], evt=DISCOVERY_CUSTOM_EVT, node=478f1752-fdce-42c6-aef6-55a5f4c08d90]
[15:37:20,062][INFO ][disco-event-worker-#20%null%][GridDiscoveryManager] Node left topology: TcpDiscoveryNode [id=4f9cbc67-d756-4c25-9ee4-aee6528da024, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.107, 2001:0:9d38:6ab8:34b2:9f3e:3c6f:269], sockAddrs=[/2001:0:9d38:6ab8:34b2:9f3e:3c6f:269:0, /127.0.0.1:0, /0:0:0:0:0:0:0:1:0, work-pc/172.25.4.107:0], discPort=0, order=10, intOrder=7, lastExchangeTime=1478522239236, loc=false, ver=1.7.3#20161107-sha1:5132ac87, isClient=true]
[15:37:20,063][INFO ][disco-event-worker-#20%null%][GridDiscoveryManager] Topology snapshot [ver=11, servers=3, clients=0, CPUs=8, heap=11.0GB]
[15:37:20,064][INFO ][sys-#44%null%][GridCacheProcessor] Stopped cache: myMultiService
[15:37:20,066][INFO ][exchange-worker-#23%null%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=10, minorTopVer=6], evt=DISCOVERY_CUSTOM_EVT, node=5faac72a-72ab-4277-9643-0e962973b3f4]
[15:37:20,076][INFO ][exchange-worker-#23%null%][GridCacheProcessor] Started cache [name=myClusterSingletonService, mode=PARTITIONED]
[15:37:20,115][INFO ][exchange-worker-#23%null%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=10, minorTopVer=7], evt=DISCOVERY_CUSTOM_EVT, node=478f1752-fdce-42c6-aef6-55a5f4c08d90]
[15:37:20,121][INFO ][exchange-worker-#23%null%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=11, minorTopVer=0], evt=NODE_LEFT, node=4f9cbc67-d756-4c25-9ee4-aee6528da024]
[15:37:20,133][INFO ][exchange-worker-#23%null%][GridCacheProcessor] Started cache [name=myMultiService, mode=PARTITIONED]
[15:37:20,135][ERROR][exchange-worker-#23%null%][GridDhtPartitionsExchangeFuture] Failed to reinitialize local partitions (preloading will be stopped): GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=11, minorTopVer=1], nodeId=5faac72a, evt=DISCOVERY_CUSTOM_EVT]
java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.initStartedCacheOnCoordinator(CacheAffinitySharedManager.java:743)
	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.onCacheChangeRequest(CacheAffinitySharedManager.java:413)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onCacheChangeRequest(GridDhtPartitionsExchangeFuture.java:565)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:448)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1447)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)
[15:37:20,142][ERROR][exchange-worker-#23%null%][GridCachePartitionExchangeManager] Failed to wait for completion of partition map exchange (preloading will not start): GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryCustomEvent [customMsg=null, affTopVer=AffinityTopologyVersion [topVer=11, minorTopVer=1], super=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=5faac72a-72ab-4277-9643-0e962973b3f4, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.107, 2001:0:9d38:6ab8:34b2:9f3e:3c6f:269], sockAddrs=[work-pc/172.25.4.107:47501, /127.0.0.1:47501, /0:0:0:0:0:0:0:1:47501, /2001:0:9d38:6ab8:34b2:9f3e:3c6f:269:47501], discPort=47501, order=3, intOrder=3, lastExchangeTime=1478522196962, loc=false, ver=1.7.3#20161107-sha1:5132ac87, isClient=false], topVer=11, nodeId8=bbcf9d48, msg=null, type=DISCOVERY_CUSTOM_EVT, tstamp=1478522240108]], crd=TcpDiscoveryNode [id=bbcf9d48-980f-43a1-9219-2456baf49262, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.107, 2001:0:9d38:6ab8:34b2:9f3e:3c6f:269], sockAddrs=[/2001:0:9d38:6ab8:34b2:9f3e:3c6f:269:47500, /127.0.0.1:47500, /0:0:0:0:0:0:0:1:47500, work-pc/172.25.4.107:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1478522240139, loc=true, ver=1.7.3#20161107-sha1:5132ac87, isClient=false], exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=11, minorTopVer=1], nodeId=5faac72a, evt=DISCOVERY_CUSTOM_EVT], added=true, initFut=GridFutureAdapter [resFlag=2, res=false, startTime=1478522240108, endTime=1478522240128, ignoreInterrupts=false, state=DONE], init=false, topSnapshot=null, lastVer=null, partReleaseFut=null, affChangeMsg=null, skipPreload=false, clientOnlyExchange=false, initTs=1478522240118, centralizedAff=false, evtLatch=0, remaining=[478f1752-fdce-42c6-aef6-55a5f4c08d90, 5faac72a-72ab-4277-9643-0e962973b3f4], srvNodes=[TcpDiscoveryNode [id=bbcf9d48-980f-43a1-9219-2456baf49262, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.107, 2001:0:9d38:6ab8:34b2:9f3e:3c6f:269], sockAddrs=[/2001:0:9d38:6ab8:34b2:9f3e:3c6f:269:47500, /127.0.0.1:47500, /0:0:0:0:0:0:0:1:47500, work-pc/172.25.4.107:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1478522240139, loc=true, ver=1.7.3#20161107-sha1:5132ac87, isClient=false], TcpDiscoveryNode [id=478f1752-fdce-42c6-aef6-55a5f4c08d90, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.107, 2001:0:9d38:6ab8:34b2:9f3e:3c6f:269], sockAddrs=[work-pc/172.25.4.107:47502, /2001:0:9d38:6ab8:34b2:9f3e:3c6f:269:47502, /127.0.0.1:47502, /0:0:0:0:0:0:0:1:47502], discPort=47502, order=2, intOrder=2, lastExchangeTime=1478522194286, loc=false, ver=1.7.3#20161107-sha1:5132ac87, isClient=false], TcpDiscoveryNode [id=5faac72a-72ab-4277-9643-0e962973b3f4, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.107, 2001:0:9d38:6ab8:34b2:9f3e:3c6f:269], sockAddrs=[work-pc/172.25.4.107:47501, /127.0.0.1:47501, /0:0:0:0:0:0:0:1:47501, /2001:0:9d38:6ab8:34b2:9f3e:3c6f:269:47501], discPort=47501, order=3, intOrder=3, lastExchangeTime=1478522196962, loc=false, ver=1.7.3#20161107-sha1:5132ac87, isClient=false]], super=GridFutureAdapter [resFlag=1, res=java.lang.NullPointerException, startTime=1478522240108, endTime=1478522240128, ignoreInterrupts=false, state=DONE]]
class org.apache.ignite.IgniteCheckedException: null
	at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7154)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:196)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:137)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1453)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.initStartedCacheOnCoordinator(CacheAffinitySharedManager.java:743)
	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.onCacheChangeRequest(CacheAffinitySharedManager.java:413)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onCacheChangeRequest(GridDhtPartitionsExchangeFuture.java:565)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:448)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1447)
	... 2 more
{noformat}","Windows 10, Oracle JDK 7",andrey-kuznetsov,avinogradov,cyberdemon,githubbot,skozlov,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 04 19:30:40 UTC 2017,,,,,,,,,,"0|i3602n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jul/17 13:12;githubbot;GitHub user x-kreator opened a pull request:

    https://github.com/apache/ignite/pull/2325

    ignite-4181

    IGNITE-4181 challenge

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/x-kreator/ignite ignite-4181

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2325.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2325
    
----
commit 8c3e64db7d1c6b3059680dc7f003e851dc7c8af3
Author: Dmitry Sorokin <d.w.sorokin@gmail.com>
Date:   2017-07-20T10:00:58Z

    IGNITE-4181 challenge: GDPEF.onCacheChangeRequest debug timeout.

commit 3e5be50f5f7c43ad06ba6e67e7e6dbec38a11505
Author: Dmitry Sorokin <d.w.sorokin@gmail.com>
Date:   2017-07-20T11:51:56Z

    IGNITE-4181 challenge: + simple test

----
;;;","21/Jul/17 13:31;githubbot;Github user x-kreator closed the pull request at:

    https://github.com/apache/ignite/pull/2325
;;;","24/Jul/17 14:27;cyberdemon;This issue was caused by mechanics which uses GridCacheProcessor's cache descriptors map concurrently by event handlers at TCP discovery workers and exchange processors at exchange worker. Cache creation event puts newly created cache descriptor into GCP's cache descriptors map, then emits exchange, and processing of one try take cache descriptor, which already can be removed by cache deletion event, processed later then cache creation event but earlier then cache creation exchange.;;;","24/Jul/17 14:39;cyberdemon;This issue seems resolved by:

commit 7e45010b4848d0a570995e6dc938875710d846d8
Author: sboikov <sboikov@gridgain.com>
Date: 2017-06-04T08:02:31Z

ignite-5075 'logical' caches sharing the same 'physical' cache group;;;","25/Jul/17 14:44;cyberdemon;https://github.com/apache/ignite/pull/2333;;;","26/Jul/17 10:02;avinogradov;[~cyberdemon]
I'll check it soon.;;;","26/Jul/17 10:12;andrey-kuznetsov;[~avinogradov], Please review our changes. Public API reproducer was added recently.;;;","04/Aug/17 19:30;cyberdemon;This issue was reproduced up to version 2.0 and was fixed by commit 7e45010b which included into version 2.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteQueue not functioning as expected after remove().,IGNITE-4176,13017790,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,aakhmedov,C,C,03/Nov/16 19:13,04/Jul/19 21:47,14/Jul/23 06:20,09/Nov/16 10:09,1.7,,,1.8,data structures,,,,,0,,,,"After removing an item from an IgniteQueue, the next item on the queue can be viewed using peek().  However, poll() or take() does not retrieve the item.  When iterating through the remaining items in the queue, it appears that 1/2 of them are missing.",,C,githubbot,sboikov,,,,,,,,,,"dspavlov commented on issue #1211: IGNITE-4176: IgniteQueue not functioning as expected after remove()
URL: https://github.com/apache/ignite/pull/1211#issuecomment-508581537
 
 
   https://issues.apache.org/jira/browse/IGNITE-4176 is resolved, closing PR. Feel free to reopen if needed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:47;githubbot;600","dspavlov commented on pull request #1211: IGNITE-4176: IgniteQueue not functioning as expected after remove()
URL: https://github.com/apache/ignite/pull/1211
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Nov/16 19:14;C;WhereDidItGo.java;https://issues.apache.org/jira/secure/attachment/12836945/WhereDidItGo.java","03/Nov/16 19:14;C;pom.xml;https://issues.apache.org/jira/secure/attachment/12836944/pom.xml",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 09 10:09:03 UTC 2016,,,,,,,,,,"0|i35tpr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/16 19:14;C;The pom.xml attached shows components.  The Java source file replicates the problem.;;;","03/Nov/16 19:16;C;BTW - apologies if this is not contributed correctly.  I have not participated in Apache open source projects before, but I thought the problem was significant enough to warrant your attention.  No offense intended.;;;","07/Nov/16 04:09;githubbot;GitHub user amirakhmedov opened a pull request:

    https://github.com/apache/ignite/pull/1211

    IGNITE-4176: IgniteQueue not functioning as expected after remove()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/amirakhmedov/ignite IGNITE-4176

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1211.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1211
    
----
commit cf89f6ea4ae24a770cf1b09ecb7bf582de2c113d
Author: Amir Akhmedov <amir.akhmedov@gmail.com>
Date:   2016-11-07T04:07:19Z

    IGNITE-4176: IgniteQueue not functioning as expected after remove()

----
;;;","09/Nov/16 10:09;sboikov;Hi Amir,

I merged your fix into master. Thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JdbcResultSet class wasNull() method should return true on NULL fields,IGNITE-4175,13017787,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,03/Nov/16 19:02,21/Jun/17 11:15,14/Jul/23 06:20,22/Nov/16 09:01,1.6,1.7,,1.8,jdbc,,,,,0,newbie,,,"For now wasNull() method can return false for NULL field in case of field typed as String.

Startpoints are org.apache.ignite.internal.jdbc.JdbcResultSet class
and org.apache.ignite.internal.jdbc2.JdbcResultSet class",,agura,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 09:01:46 UTC 2016,,,,,,,,,,"0|i35tp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/16 19:14;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1210

    IGNITE-4175: SQL: JdbcResultSet class wasNull() method should return true on column NULL value.

    JdbcResultSet.wasNull() method should return null on column NULL value, if column value is null String.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1210.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1210
    
----
commit 76b89dc43d8902dc8532f43ea0a631fb441fe10f
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-03T19:10:41Z

    Trivial fix.
    
    JdbcResultSet.wasNull() method should return null on column NULL value.

----
;;;","03/Nov/16 19:19;amashenkov;It just a trivial fix.;;;","08/Nov/16 10:04;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1210
;;;","08/Nov/16 12:03;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1215

    IGNITE-4175: SQL: JdbcResultSet class wasNull() method should return true on NULL fields

    Trivial fix.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1215.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1215
    
----
commit a4c63ae113931615e940ada2411ebce32dba5db8
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-09-30T07:45:13Z

    IGNITE-3998: IGFS: Enabled IgfsAbstractSelfTest.testCreateConsistencyMultithreaded. This closes #1129.

commit a12298c0baf19407f3110ba3c4f0aab88b67946d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-30T08:00:51Z

    IGNITE-3868: ODBC: Fixed connection string parsing. This closes #1051.

commit 5e7ef8644ad824b87d4797e59133eb783ff8b098
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:37:25Z

    Merge branch 'ignite-1.6.9' into ignite-1.6.10

commit 59b46d3e6ea073d054ca2262d676b055a74bbb1f
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:40:04Z

    IGNITE-2881: Fixed SPI queries.

commit 0b66d2d7b695cf370a4b8a717844ad67742c6090
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-03T09:04:03Z

    ignite-3601 Do not check version on commit for read-only serializable transactions.

commit 9f211e413332931f0fb1190744ddd7c7f38fd213
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-03T09:26:12Z

    IGNITE-3645: IGFS: Local secondary: Implemented update() operation. This closes #1003.

commit fa698d6fcfde0006423ef009337dbef58ac62515
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T10:33:12Z

    Fixed TcpDiscoverySnapshotHistoryTest intermittent failures caused by multicast IP finder.

commit bba019fd5076412ca43c10a32fd300b6031ccd0b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T14:25:20Z

    IGNITE-3980: Processed failing tests in query suites. This closes #1137.

commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit 23461b8d33922772ef8e7217e9e87b3f3b0b37b1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T07:14:59Z

    IGNITE-4001: Timeouts for threads in Ignite pools. This closes #1130.

commit b94b0aeae4c42b1d35128c6b1de97e3fa318d497
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-06T07:22:50Z

    IGNITE-3163 IGFS: Added working directory support to IgniteHadoopIgfsSecondaryFileSystem. This closes #1030. This closes #1058. This closes #1132.

commit e6317e01fa8a0de03e15dcdd84a575c6b06ce701
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T09:03:48Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect. This closes #903. This closes #1145.

commit 952be8b995050b34379006dd6e739da3fe3b49e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2016-10-07T12:00:09Z

    Squashed commit of the following:
    
    commit 566881b695b8bc00e618fe9a9b4c86a8fd563cc1
    Author: sboikov <sboikov@gridgain.com>
    Date:   Fri Oct 7 13:08:38 2016 +0300
    
        minor
    
    commit 7fe88a1cb21f794ee55a176ab36d895cbf916528
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Oct 6 11:11:24 2016 +0300
    
        ignite-update-notifier fix after review
    
        (cherry picked from commit a10d2ff)
    
    commit f2de749f958a3b18dc479f8a5517d7bf9362b933
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Oct 4 12:12:08 2016 +0300
    
        ignite-2079-2 optimize import and change url path
    
        (cherry picked from commit 830a3cf)
    
    commit 0d1be85ad55b0aa91224690d6c112ae92e8bc0a9
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Sep 29 19:54:54 2016 +0300
    
        update-notifier remove parse xml, now parse like properties
    
        (cherry picked from commit 9ecaa29)
    
    commit e43bca6fb4528a7fc0dcb804a74fca1c59d7468b
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Sep 27 17:07:21 2016 +0300
    
        remove dom parser
    
        (cherry picked from commit d1653b2)

commit b9c776a8423471706ecb1dc6176b38f23e799077
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-10T08:52:57Z

    IGNITE-3235 Failed to initialize primitive boolean cache property of superclass

commit f9a0676fad7fd6c23e3c91c10d7e0412ccb27c06
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T07:23:01Z

    IGNITE-4041: Created separate processor for thread pools and refactored IO manager. This closes #1150.

commit 9a6cfce659df40b0a4624f19fd91c217b74bafea
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-10-11T10:59:57Z

    IGNITE-4014 Fixed ""Transaction hangs if entry processor failed during serialization"". This closes #1148.

commit 1938a17b01fac1e08c30011180bbcc3ed7374d83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-11T11:50:18Z

    IGNITE-3948: Fixed a bug causing TTL manager to continue tracking of evicted entries. This closes #1101.

commit 60d27547dfc6bd27c6d39cbcc523d0d1e872a821
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T11:51:00Z

    Merge remote-tracking branch 'upstream/ignite-1.6.10' into ignite-1.6.10

commit 359a392f1c53217c691c4c40762c51fd330666e2
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes
    
    (cherry picked from commit a5c85ca)

commit 01ca6db70933fb7f50f161a80cde9647e68a3710
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-10-11T13:18:40Z

    Merge remote-tracking branch 'origin/ignite-1.6.10' into ignite-1.6.10

commit 0659bebe04dc9c0b0a163bc95061519c553e678c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T11:49:36Z

    IGNITE-3972: Fixed a bug causing continuous queries to be lost for ATOMIC cache when key's primary node leaves topology. This closes #1133.

commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T12:44:08Z

    IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.

commit 2ab094e08373dc6667af44d48a38b4f044953a79
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-12T13:48:51Z

    IGNITE-2355: Hadoop: added ability to configure multiple job tracker addresses. This closes #1153.

commit eaf8ae246cc799c1353332fcac05cb3a8efab02c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-12T16:57:09Z

    IGNITE-4034 Get rid of specialized methods in platform targets

commit b1ec58f716ece3a5866dd654ebc707bef67caf57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-10-13T05:58:22Z

    IGNITE-4066 Fixed NPE.

commit 447e07c0bb5af75bce6a14612606904e4e3d9705
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-14T08:40:41Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL

commit 7adfbcf1ee7bbe0beb95fa82749a2e04449de8fa
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-14T14:48:14Z

    IGNITE-4060: Fixed a bug in RoundRobinLoadBalancing API causing exception when running closures after client node reconnect. This closes #1157.

commit 80abd1b72e4fc7b0b95212e7f53c700c0fe21156
Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
Date:   2016-10-14T16:33:07Z

    GG-11360 - Implement SQL queries cancellation (#18)
    
    * GG-11360 Merged IGNITE-2680 to ignite-1.6.3.
    
    * GG-11360 Test cleanup.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Added test for forever-running query cancellation on node restart.
    
    * GG-11360 Fixing race.
    
    * GG-11360 Added test for forever-running query cancellation on node stop.
    
    * GG-11360 Cleanup.
    
    * GG-11360 Support for local query cancellation/timeout.
    
    * GG-11360 Increase test duration.
    
    * GG-11360 Remove redundant catch block.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * Merge remote-tracking branch 'remotes/gg/ignite-1.6.10' into ignite-gg-11360
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.

commit 43ac3f5d5e8ab664e07f26d99be34f284f7941dd
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-17T08:26:12Z

    IGNITE-4054: Hadoop: added map-reduce plan debug output.

commit d3f042b9ba6c605500ab7155c40a41850babefdb
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-17T09:28:31Z

    Fixed indexing test in according to changes from #80abd1b.

----
;;;","08/Nov/16 12:03;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1215
;;;","08/Nov/16 12:03;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1216

    IGNITE-4175: SQL: JdbcResultSet class wasNull() method should return true on NULL fields

    Trivial fix.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1216.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1216
    
----
commit f3e4f78fc96c98f4376ff86ab3e76ba54d6b09a4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-07-26T12:48:36Z

    Print debug information on 'waitForRent' timeout.
    (cherry picked from commit 7cf26d9)

commit 9d07e3e7a34d1cbe67a9656630bc6215cd213f0a
Author: sboikov <sboikov@gridgain.com>
Date:   2016-07-27T06:19:12Z

    ignite-3300 Fixed issue with partition value changing stored in KeyCacheObject.
    (cherry picked from commit a441bb9)

commit 4979c870735698dc51ce2c0db350a0f35c9b8b0e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-07-27T09:12:39Z

    Collector task do not honor node filters for caches and IGFS.

commit 7b3d1963cb7240ce3f59f5c9f81965bf5730bad0
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-07-29T09:03:20Z

    Fixed compatibility.

commit 4f27a47b81314b2eb52a5bc5b1d938bb586ae2aa
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2016-08-01T17:25:54Z

    IGNITE-3513 Cleanup worker is placed in the Thread's waiting queue using Thread.sleep method

commit ae23dab0af8caaccd3db1dca8e435b57b8844a31
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-08-03T10:10:03Z

    Visor: scan cache with filter.

commit a90d05b30f39da001156fdd4053790f8cd352406
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-04T05:00:15Z

    IGNITE-3408 - Provided basic implementation of AddressResolver

commit d945a5dd89b01f05a59e2b02fb86c1007736aff9
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-08-04T15:37:37Z

    version changed to: 1.6.4

commit 00f47d78216db5de75dda2a1b5fef2c1e65d9871
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-06T01:04:01Z

    IGNITE-3634 - SpringCacheManager should support null values

commit 018001011daff723d120834da7b4f57bad7f8f71
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-05-27T12:16:27Z

    IGNITE-2310 Lock cache partition for affinityRun/affinityCall execution

commit b9d9d84f4fcaf7f025b480769b612fc63b5082f4
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-09T11:04:47Z

    IGNITE-3659: Added special test suite to handle ignored tests.

commit e23aba4b060a9dfbee20384550a49274a479ac00
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-09T11:05:17Z

    Merge remote-tracking branch 'upstream/ignite-1.6.5' into ignite-1.6.5

commit d1a3904c8c8ed4a6cf750a2caa4e2e06cc471698
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-09T13:23:34Z

    IGNITE-2310 Lock cache partition for affinityRun/affinityCall execution -  add javadoc for test

commit e1262b2f2f4fb57fa8a75f6008f9e005ad07b5df
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-09T22:56:49Z

    Fixed copy constructor in ConnectorConfiguration

commit 151dfa7878d7d013cd93fac9d627bbdeb1ef8e18
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-10T06:48:29Z

    Revert ""version changed to: 1.6.4""
    
    This reverts commit d945a5dd89b01f05a59e2b02fb86c1007736aff9.

commit ff3e00caa892a7399622711b620fcb4dcfbbfb56
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-08-10T13:21:52Z

    IGNITE-3272 Fixed ""Memory consumption in ContinuousQueryHandler"". This close #930.

commit 1d0cbb45cd61c5c8e6ec926d7e629eb94111b32f
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2016-08-11T05:43:50Z

    IGNITE-3618: Client can not load data after server restarts. This closes #941.

commit 1139a9f76b5d37073261d729a15b1fbec674d48d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-11T05:47:48Z

    Added missing license.

commit 0b4ffdbcce63e5ce53572f71af967cff300d5670
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-14T15:18:40Z

    IGNITE-2852: Fixed TreeMap and TreeSet serialization.

commit 89bce0fc5cb3dba56626c7088e607d0b25c3353c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-30T10:14:16Z

    IGNITE-3021: IGFS: Fixed failiing IgfsStreamsSelfTest.testCreateFileColocated() test. Failure as caused by misconfiguration.

commit 78aa065b4c7b05381b1fa31159b74969ec4a2bfe
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:35Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit f87ca482420fc1e6ffcb000a227717142d24e270
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:41Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit 9ddf9d846f52a4e8fc433643409993884c70ce37
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T13:00:45Z

    IGNITE-466: IGFS: Added ""IgfsMode mode(IgfsPath)"" method.

commit dc81069ba9ebb88bc11cf6917e8733cc1f6de2fb
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2016-08-02T08:11:24Z

    IGNITE-3343: IGFS: Secondary file system is not queried for statuses during MKDIRS and CREATE operations. This closes #896.

commit ae54e36f27719f46d1d276f62a977c3f8d053b44
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-04T14:04:41Z

    IGNITE-3331 IGFS: Route client tasks to primary node when metadata co-location is enabled. This closes #921.

commit 970137b1db7dc6c5e546581e22e428ae15c86513
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:32Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit 4d876a7560060c892908da447178e97bfe12ca9c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:43Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit f5a040a01280c654df1fc4789cc39ff1ac2d32a4
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-09T07:01:56Z

    IGNITE-3332: IGFS: Optimized file unlock routine with help of a client callable. This closes #916.

commit 5cf3bea32a25ccc78641f083aa7f1ac81b4187ba
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-15T10:40:41Z

    IGNITE-1926: IGFS: Implemented local secondary file system.

commit 278633eced6d8039b5be4a18eefe6c65650aba4f
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-08-15T11:27:22Z

    IGNITE-3688: Fixed visiblity issue in GridCacheIoManager.idxClsHandlers.

----
;;;","09/Nov/16 18:32;agura;I completely don't understand why our JDBC drivers return {{""null""}} string instead of {{null}} value in this case. From my point of view current behavior is incorrect. See also JDCB {{ResultSet.getString()}} method's javadoc:
{code:java}
    /**
     * Retrieves the value of the designated column in the current row
     * of this <code>ResultSet</code> object as
     * a <code>String</code> in the Java programming language.
     *
     * @param columnIndex the first column is 1, the second is 2, ...
     * @return the column value; if the value is SQL <code>NULL</code>, the
     * value returned is <code>null</code>
     * @exception SQLException if the columnIndex is not valid;
     * if a database access error occurs or this method is
     *            called on a closed result set
     */
    String getString(int columnIndex) throws SQLException;
{code};;;","09/Nov/16 19:15;amashenkov;Fixed.;;;","10/Nov/16 11:57;agura;Looks good to me. Thanks, Andrew!;;;","15/Nov/16 14:46;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1216
;;;","15/Nov/16 14:46;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1235

    IGNITE-4175: SQL: JdbcResultSet class wasNull() method should return true on NULL fields 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1235.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1235
    
----
commit 9aea27a6d0f772b0b74d2e5779b3a0fbd45b85a2
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-03T19:10:41Z

    Trivial fix.
    
    JdbcResultSet.wasNull() method should return null on column NULL value.

commit 10b1b0abf9e83fc65b421dd91ef66889af8d3282
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-10T11:30:51Z

    Minors

----
;;;","22/Nov/16 09:01;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1235
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteSemaphore with failoverSafe enabled doesn't release permits in case permits owner node left topology,IGNITE-4173,13017618,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vladisav,agura,agura,03/Nov/16 12:42,01/Aug/19 22:02,14/Jul/23 06:20,13/Apr/17 10:27,1.7,,,2.0,,,,,,0,,,,"{{IgniteSemaphore}} with {{failoverSafe}} enabled doesn't release permits in case permits owner node left topology.

See reproducer in test class {{SemaphoreFailoverSafeReleasePermitsTest}}.",,agura,amashenkov,dmekhanikov,ezhuravl,githubbot,vladisav,yzhdanov,,,,,,"dspavlov commented on issue #1780: IGNITE-4173 
URL: https://github.com/apache/ignite/pull/1780#issuecomment-517474067
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:02;githubbot;600","dspavlov commented on pull request #1780: IGNITE-4173 
URL: https://github.com/apache/ignite/pull/1780
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,IGNITE-1977,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 25 12:33:49 UTC 2017,,,,,,,,,,"0|i35snr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/17 17:16;amashenkov;Seems it is duplicate of IGNITE-1977;;;","12/Apr/17 13:32;githubbot;GitHub user vladisav opened a pull request:

    https://github.com/apache/ignite/pull/1780

    IGNITE-4173 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vladisav/ignite ignite-4173

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1780.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1780
    
----
commit 76e9098bc67bb4bf660ebc147be89b64a8256c8d
Author: vladisav <vladisavj@gmail.com>
Date:   2017-04-12T13:27:55Z

    Fixes ignite-4173;

----
;;;","12/Apr/17 13:50;vladisav;This was a bug, the cause was that attempt to recover from failure was throwing the NPE for the newly created semaphores (because semaphores are lazily initialized).
There is also a problem with the  {{SemaphoreFailoverSafeReleasePermitsTest}}: second semaphore was created only after the first node failed; in this scenario there are no semaphores to attempt recovery so the permit is lost for good. ;;;","13/Apr/17 10:27;yzhdanov;merged to master
Vladislav, thanks for contribution!;;;","21/Sep/17 17:35;ezhuravl;[~vladisav] Vladisav, I've checked test  SemaphoreFailoverSafeReleasePermitsTest  and noticed that if you get semaphore second time after the first node that acquired it was stopped, that leads to the impossibility of acquiring it. Could you describe why in test it Initializes second semaphore before the first one is broken?


;;;","22/Sep/17 11:50;vladisav;Hi Evgenii, in order for the permits to be recovered after the failure of acquiring semaphore, there must be at least one (other than the failing) semaphore alive; If not, there is no one to do the recovery and the permits get wasted (this is exactly what happens when you initialize second semaphore after the first one is broken, as in your scenario). This specific test was made to point out a bug (which was resolved) where semaphore was not able to recover properly because of lazy initialization.;;;","22/Sep/17 14:42;dmekhanikov;[~vladisav] currently if a node, that exclusively holds a semaphore, leaves, then another node will not be able to acquire it. This is not an expected behavior. 
Judging by javadoc, semaphores should be released anyway, even if it was the only node that held the semaphore instance.;;;","22/Sep/17 14:45;ezhuravl;Agreed with Denis, I think we need to think how we can fix it.

[~vladisav], what do you think, is it a big change in code?;;;","25/Sep/17 12:33;vladisav;I think we should have an additional test for this, and perhaps even open a new issue.
My first shot would be to track the number of active nodes with initialized semaphores in DataStructuresProcessor and remove the semaphore state from cache when the last node with initialized semaphore leaves the topology.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Add support for Java 8 Time API classes in date\time functions,IGNITE-4172,13017613,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,asfedotov,amashenkov,amashenkov,03/Nov/16 12:35,12/Dec/17 09:21,14/Jul/23 06:20,03/Nov/17 11:16,2.0,,,2.4,sql,,,,,2,usability,,,"We have is issue with querying LocalDateTime objects with our SQL engine. 

Next query can fails with error, if one of row localDateTimeField value has zero-time: 
select DATEDIFF('DAY', localDateTimeField, CURRENT_DATE ()) from t;

Startpoint is IgniteH2Indexing.wrap() method. 
We need add support to these classes: LocalDate, LocalTime, LocalDateTime.",,amashenkov,asfedotov,avinogradov,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5483,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 12 09:21:40 UTC 2017,,,,,,,,,,"0|i35smn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/16 17:36;amashenkov;H2 converts object to Timestamp right before provide it to DateDiff function as an argument.

I've found that H2 does not support LocalDateTime class and try it as a String when converting to Timestamp.
But LocalDateTime.toString() method can return result in different format. Short time format is used for object with zero-time setted. H2 parser does not support shot time format and throws an error.

E.g.
Object with zero-time toString() returns smth like this: 2016-11-01T00:00 
But with non-zero-time: 2016-11-01T22:07:19.547


;;;","03/Nov/16 17:40;amashenkov;It seems it can be fixed in IgniteH2Indexing,wrap method. We can substitute LocalDateTime instance with Timestamp. 
But Reflection should be used to prevent compatibility issues with Java7.
;;;","03/Nov/16 18:12;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1208

    IGNITE-4172: SQL: Add support for Java 8 Time API classes in date\time functions

    Prototype implemented

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4172

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1208.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1208
    
----

----
;;;","03/Nov/16 18:27;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1208
;;;","03/Nov/16 18:32;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1209

    IGNITE-4172: SQL: Add support for Java 8 Time API classes in date\time functions

    prototype

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4172

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1209.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1209
    
----

----
;;;","07/Nov/16 15:05;amashenkov;I've changed IgniteH2Indexing.wrap() method to support LocalDateTime class. But query result contains java.sql.TimeStamp objects instead of java.time.LocalDateTime, due to H2 does not support java8 time api. 

Java8 time objects support will be added in next H2 version. 
To resolve this we need to update H2 version, so this ticket is deferred to ignite 2.0.

As a workaround, custom function can be used to convert types.
;;;","08/Nov/16 15:20;amashenkov;Patch needs to be updated after H2 has been upgraded.;;;","26/Jul/17 15:52;githubbot;GitHub user asfedotov opened a pull request:

    https://github.com/apache/ignite/pull/2349

    IGNITE-4172 SQL: Add support for Java 8 Time API classes in date\time functions

    For CI purposes only.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4172

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2349.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2349
    
----
commit 925ee11c2002729b1264148ee5db5700ded5a7b7
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-04-04T09:06:01Z

    Fixed typo.
    (cherry picked from commit 3b84f34)

commit ce4b078c1c97cae4136c318ae38b27a50fe383cc
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-04-04T09:14:56Z

    master Updated version.
    (cherry picked from commit 5469626)

commit ae435fb5474429e7ac76faadd680c19a4c657371
Author: Sergi Vladykin <sergi.vladykin@gmail.com>
Date:   2017-04-02T12:35:04Z

    ignite-2913 - SQL: EXISTS support added

commit b7ab27301b59bf93fc73b52fdf8e0bcf124fec1d
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4832: Prevent service deployment on client by default when configuration is provided on startup. This closes #1748.

commit b214211eb3461746b6931c0623e086bb208e5dda
Author: Anton Vinogradov <av@apache.org>
Date:   2017-04-06T12:00:12Z

    IGNITE-4644 Value from IgniteQueue in atomic mode could be lost

commit 014161427fb603b6df7c8ecc3c0904f5df47a21d
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-02-14T01:33:32Z

    IGNITE-4159: Kubernetes IP finder.
    (cherry picked from commit 37c0a22)

commit 1db238402f11c67d2b28bfb7ff47955415f00c25
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-02-16T04:37:26Z

    IGNITE-4159: fixing logging
    (cherry picked from commit 06908d2)
    (cherry picked from commit fa27ee3)

commit 5dfe16f7e91374008b9f6dfbb899364f5b2e1164
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-02-14T06:03:30Z

    IGNITE-4159: using logger instead of system.out.println
    (cherry picked from commit b9bf77c)

commit 6e596d1ef426b66abd866d011a8f5cf5c5c25124
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4832: Prevent service deployment on client by default when configuration is provided on startup. This closes #1748.
    
    (cherry picked from commit b7ab273)

commit 443ac9a7aa82af1359a03bcfc8f9212b108300e4
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T12:01:02Z

    IGNITE-4917: Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller . This closes #1736.

commit 05f3c747921aed6838804d2f5f2c8d2bd7985337
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T12:01:02Z

    IGNITE-4917: Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller . This closes #1736.
    
    (cherry picked from commit 443ac9a)

commit b8e3d1b6f972b6d30657b7c85c8b34506dc29b88
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T12:01:02Z

    IGNITE-4917: Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller . This closes #1736.
    
    (cherry picked from commit 443ac9a)

commit a0392605f39c23fcd20c98d852c4cab749cd059b
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4832: Prevent service deployment on client by default when configuration is provided on startup. This closes #1748.
    
    (cherry picked from commit b7ab273)

commit 3be4e00373ec5a2b49788d70eb0aebccc3cb6ccf
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T11:59:00Z

    Merge branch ignite-1.6.5 into ignite-1.8.5-p1

commit d81548d3a4e384e1a9b4adacf1fb487444bbfd33
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T12:33:08Z

    Merge branch ignite-1.6.6-p1 into ignite-1.8.5-p1

commit 6954ff0c85f2f75507ee0bd306c879f490b4201a
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T12:44:48Z

    Merge branch ignite-1.6.12 into ignite-1.8.5-p1

commit 62dbba81c009170ff6243a28d3ef12fa75b96225
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T12:46:11Z

    Merge branch ignite-1.7.4-p1 into ignite-1.8.5-p1

commit 4fce28054bc325741f65035ae384f9b4b9c3fee8
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T13:06:34Z

    Merge branch ignite-1.8.4-p1 into ignite-1.8.5-p1
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/managers/discovery/GridDiscoveryManager.java

commit 220db882b466c03eadd148b3a19a0bf70d82d4a6
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T07:28:15Z

    IGNITE-2466 - Use current NIO back pressure mechanism to limit received messages. Mark them process only when backups acknowledged.

commit 3d616799efb472227b3b313516e6b40729654631
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T07:36:11Z

    IGNITE-2466 - Use current NIO back pressure mechanism to limit received messages. Mark them process only when backups acknowledged.
    
    (backport from 1.9.2)
    
    (cherry picked from commit 220db882b466c03eadd148b3a19a0bf70d82d4a6)

commit 2a88a7a7581465ff0a6f8733550e6d42d7f71a6c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T07:54:37Z

    IGNITE-4667 - Throw exception on starting client cache when indexed types cannot be loaded

commit ba6227be49c8a395a5632e9841a6acb65ae340b6
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.

commit bb3ff120e6995431d10439243d8b163712de0e0e
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.
    
    (cherry picked from commit ba6227b)

commit 960e454b4b68c76ed94ca58a3ee9a9d8e79c2039
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T07:28:15Z

    IGNITE-2466 - Use current NIO back pressure mechanism to limit received messages. Mark them process only when backups acknowledged.
    
    (cherry picked from commit 220db88)

commit 207ccaa1ff5a021a25dc779b5b2d7bfdb0f3b647
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.
    
    (cherry picked from commit ba6227b)
    
    (cherry picked from commit bb3ff12)

commit 5fbbc37669bcf0557a98d8ab70c3dbb79ebcd340
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T12:01:02Z

    IGNITE-4917: Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller . This closes #1736.
    
    (cherry picked from commit b8e3d1b)

commit 315ff38eeef96f12954d6ff39c84d58b2b959667
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4879: Fixed System pool starvation while partition evicting.

commit 89e9dbe484312c251f02c9fbe9698c3ac2e03df8
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-10T13:36:33Z

    Fix org.apache.ignite.internal.processors.cache.expiry
        .IgniteCacheExpiryPolicyAbstractTest#testNearExpiresWithCacheStore

commit 01ceeb13420b68edf12b0262fe0991e84c085dd8
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4863: Disallow change RootLogger log-level if it can have negative effect on other loggers. This closes #1687.

commit 02b194268071b179d291b28472cef5d587e7558a
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-11T09:00:59Z

    Fix missing test resource directory for
    org.apache.ignite.spi.discovery.tcp
        .TcpDiscoveryNodeAttributesUpdateOnReconnectTest.testReconnect

----
;;;","28/Jul/17 12:08;githubbot;Github user asfedotov closed the pull request at:

    https://github.com/apache/ignite/pull/2349
;;;","28/Jul/17 14:15;asfedotov;This ticket has been fixed in the scope of [https://issues.apache.org/jira/browse/IGNITE-5483].
Only tests are introduced in the scope of this particular ticket.;;;","02/Aug/17 10:07;asfedotov;Apart from the improvements introduced by [IGNITE-5483|https://issues.apache.org/jira/browse/IGNITE-5483] the following should be addressed:
1. {{java.time.LocalTime}}, {{java.time.LocalDate}}, {{java.time.LocalDateTime}} are not supported as cache values or keys.
2. {{java.time.LocalTime}} is stored as {{java.sql.Time}}, {{java.time.LocalDate}} as {{java.sql.Date}},  {{LocalDateTime}}  as {{Timestamp}}.
Having, for example, {{IgniteCache<Long, Person>}} where {{Person}} has a {{java.time.LocalDateTime}} field, trying to select that field with a query like
{code:sql}select locDateTime from Person{code}
will return {{java.sql.Timestamp}} value.
;;;","14/Aug/17 10:28;githubbot;GitHub user asfedotov opened a pull request:

    https://github.com/apache/ignite/pull/2438

    IGNITE-4172 SQL: Add support for Java 8 Time API classes in date\time funcitons

    For CI purposes.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4172

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2438.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2438
    
----
commit 84c7427a53a8e1712b1d0b763d7539c9cb844cb6
Author: Sergey Stronchinskiy <gurustronpublic@gmail.com>
Date:   2017-07-04T11:51:25Z

    IGNITE-5532 .NET: Split CacheLinqTest into partial classes
    
    This closes #2226

commit 64c156e9252395504af00f09d934f36b6bc21913
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-04T16:42:33Z

    IGNITE-5663: ODBC: Closing cursor do not reset prepared statement anymore

commit 80c95ff79f344daf1fca3f094733a24bac2a218d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-05T15:41:28Z

    IGNITE-5576: Added Compute::Run() for C++

commit 836906c89dfb880ac602046c37b3a2dba3ebdc46
Author: samaitra <saikat.maitra@gmail.com>
Date:   2017-07-06T04:28:15Z

    IGNITE-5695 FlinkIgniteSinkSelfTest is failing due to conflicting default test timeout and default flush frequency - Fixes #2241.
    
    Signed-off-by: samaitra <saikat.maitra@gmail.com>

commit 651ffc544bbc32cded55626adcd3ed4cc74f11ce
Author: shroman <rshtykh@yahoo.com>
Date:   2017-07-06T05:00:08Z

    Removed unnecessary line from the comments.

commit d1d6802378d874b039f775fe787f78c507661bb2
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-07T09:36:13Z

    Merge branch 'ignite-2.1'

commit 45cd87fe73db117f5148ed2006f8de8d2517bbfe
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-30T17:23:55Z

    IGNITE-5554 ServiceProcessor may process failed reassignments in timeout thread

commit fa974286e8f066a8d6aa57519edf5ec7761be095
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-07T13:49:15Z

    IGNITE-5582: Implemented Compute::Broadcast for C++

commit 01f504ff83cc77f80d37981b5c5a15b653861bbd
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-07-10T12:03:01Z

    IGNITE-5087 Enum comparison fails after marshal-unmarshal with BinaryMarshaller.

commit ecfbc2c97464ad7da3f24afaaf1868a2d2fdb87e
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-11T09:17:41Z

    Merge branch 'ignite-2.1'
    
    # Conflicts:
    #	modules/platforms/dotnet/Apache.Ignite.Core.Tests/Apache.Ignite.Core.Tests.csproj

commit 1be9b40c37efcbf332ebeeefc865c2fe864339e7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-11T09:42:54Z

    Exchange future cleanup, added special tasks for reassign/force rebalance.

commit 8d4a0c2ca2abc17a1d54fa0d33b161531fa59b12
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-11T09:49:16Z

    Merge branch 'ignite-2.1'

commit bf25b5c52be044f07076c0800447230c75174db3
Author: Slava Koptilin <slava.koptilin@gmail.com>
Date:   2017-07-07T12:35:33Z

    ignite-5562: assert statements were changed to the 'if' blocks

commit e93b28488693381fcd232de93087ab8ec1d0f5bb
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-11T11:18:52Z

    ignite-5446 Only lateAffinity logic in CacheAffinitySharedManager.

commit 5c363184c80f2fd8b79f1075d1eacbf9af5369a1
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-07-11T19:20:16Z

    Simplified Memory Policies Example

commit b95f76f8a0a3a7e920f78f20b3d814112fc6d522
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-12T05:47:04Z

    ignite-5727 Call TcpCommunicationSpi's discovery listener first

commit 120384fca2b5f6f141207697f776d7859afa857f
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T06:48:51Z

    Merge branch 'ignite-2.1'

commit 5394bbdeff4e9fb97d3b413bf30001ede580bdd7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-13T10:30:59Z

    Unnecessary synchronous rollback in GridDhtTxLocal.prepareAsync

commit 00c6b6c4ba00fa6577f74fc95b378737fb5a789c
Author: Alexander Menshikov <sharplermc@gmail.com>
Date:   2017-07-13T12:24:59Z

    IGNITE-5567 Make benchmark Ignite.reentrantLock vs IgniteCache.lock

commit 18bdfe96a1e579371108c661e3374183c58a296d
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-13T12:42:30Z

    Fixed NPE in tests

commit 7338445ac9c1a2343fd41cdd20785de07b727796
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-07-13T13:00:08Z

    IGNITE-5597 - Fix javadoc in Affinity and AffinityFunction for REPLICATED cache. This closes #2268.

commit d9ed07c67e4a4ff3a9de543cbe039ac2a48f03a0
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T14:32:06Z

    Functionality of muted test is debated now

commit 871d9260f3b32bed5273852dbdb74c758f73d383
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T15:34:01Z

    Functionality of GridVersionSelfTest is debated now

commit 2788a740c9aec88d14808d5927a346d121ad42b1
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:23:42Z

    Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ignite into ignite-2.1.3

commit 1e7e692bd4ce0fe2e092117190b59382840317a7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:25:08Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit abe8e67e63018305cf0c2065282380b0cf9b762c
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-14T10:22:54Z

    Merge branch 'ignite-2.1'

commit 9fa78849c1ecc45fa56f518ad229e76725c27790
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-14T11:12:29Z

    IGNITE-4831: Add an option to disable MBeans. This closes #2265.
    
    (cherry picked from commit 7283edb)

commit d5cc82cb09cf37da783c9bcfbf6743b8910ceb30
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:09Z

    GridCacheAbstractNodeRestartSelfTest stopping all grids after each test to prevent subsequent test failures when one test fails or hangs

commit 8f1d732fc8065e59a29bb538456194d7f4edd3e9
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:17Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit 1d75560f9f418628da7d212207267482a1ea16aa
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-14T13:07:49Z

    Merge branch 'master' into ignite-2.1.3

----
;;;","08/Sep/17 10:28;vozerov;[~asfedotov], my comments:
1) What is the purpose of changes to {{osgi-karaf/pom.xml}}?
2) Changes to the main {{pom.xml}} should be reviewed by build subsystem experts ([~avinogradov], [~oleg-ostanin])
3) {{Jsr310Java8DateTimeApiUtils}} - I see unused methods in this class, is it fine?
4) {{Jsr310Java8DateTimeApiUtils}} - empty method bodies should have {{// No-op}} inside.
5) Tests - please rewrite them so that neither ""_key"", nor ""_val"" ever used. These are internal fields which are not shown to users normally. Instead, you should define normal classes with date/time fields and query them.
6) {{CacheQueryJsr310Java8DateTimeApiSupportTestSuite}} - is it included into any TeamCity suite? If not, let's create and configure one.;;;","08/Sep/17 12:23;asfedotov;[~vozerov], 
1 and 2. Changes to {{pom.xml}} were initially reviewed by [~avinogradov].
{{osgi-karaf/pom.xml}} changes were caused by issue reported in https://issues.apache.org/jira/browse/IGNITE-6150  
3. These methods could be useful for further JSR-310 support implementation.
Let's keep them for this time. I believe once H2 switches to Java 8 it will be possible to remove this altogether
4. Will fix that
5. Will adjust to wrapper classes where possible
6. Yes, it's included in ""JSR-310 Java 8 Date and Time API Queries"" build configuration which included in RunAll.;;;","12/Sep/17 08:59;vozerov;[~asfedotov],
1) I still do not understand why Karaf changes is there. 
3) We will add these methods when they needed. No dead code please.;;;","25/Sep/17 12:48;asfedotov;[~vozerov],
1) I've added a capability to have a Java 8 folder in each subproject of the parent.pom.
Due to the nontrivial rules of the effective POM composing, the order of statements in Karaf's POM led
to the {{ignite-osgi-karaf-licenses.txt}} being missed during a build.
2) OK. Will remove them for now.;;;","04/Oct/17 12:50;vozerov;[~asfedotov], looks good to me. However, could you please additionally review changes to {{pom.xml}} with build-subsystem experts, e.g. [~avinogradov]?;;;","05/Oct/17 10:59;avinogradov;Discussed changes with [~asfedotov].
Found some issues should be fixed before merge.;;;","13/Oct/17 11:38;asfedotov;[~avinogradov], PR updated. Please verify.;;;","13/Oct/17 12:34;avinogradov;[~asfedotov]
Looks good to me.;;;","03/Nov/17 08:57;vozerov;Final test run before merge: https://ci.ignite.apache.org/viewQueued.html?itemId=929114;;;","03/Nov/17 11:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2438
;;;","12/Dec/17 09:21;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1209
;;;",,,,,,,,,,,,,,,,,,,,
Web console: Add missed properties of POJO store configuration.,IGNITE-4166,13017561,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,03/Nov/16 09:11,24/Nov/16 07:26,14/Jul/23 06:20,17/Nov/16 08:42,1.8,,,1.8,wizards,,,,,0,,,,Now configured only Dialect property.,,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 24 07:26:19 UTC 2016,,,,,,,,,,"0|i35sb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/16 03:36;vsisko;Missed fields has been added on a POJO store factory section of configuration.;;;","17/Nov/16 08:42;anovikov;Reviewed. Merged. Pavel, please test.;;;","24/Nov/16 07:26;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong SQL generated by org.apache.ignite.cache.store.jdbc.dialect.BasicJdbcDialect#loadCacheSelectRangeQuery,IGNITE-4163,13017143,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,abotos,abotos,02/Nov/16 09:46,24/Nov/16 08:42,14/Jul/23 06:20,17/Nov/16 04:43,1.7,,,1.8,sql,,,,,0,,,,"The SQL statement generated by org.apache.ignite.cache.store.jdbc.dialect.BasicJdbcDialect#loadCacheSelectRangeQuery looks like this:

{{SELECT KEY_COLUMN_1,KEY_COLUMN_2 FROM (SELECT KEY_COLUMN_1,KEY_COLUMN_2, ROWNUM() AS rn FROM SOME_TABLE ORDER BY KEY_COLUMN_1,KEY_COLUMN_2) WHERE mod(rn, ?) = 0}}

For Oracle this is incorrect, as Oracle does not have a {{ROWNUM()}} function. For the above query the following error is thrown: {{ORA-00923: FROM keyword not found where expected}}

Regarding row numbering Oracle has:
* a {{ROWNUM}} pseudocolumn, in which case the query should have {{ROWNUM AS rn}}
* a {{ROW_NUMBER()}} function, in which case the query would become more complicated. See https://docs.oracle.com/database/121/SQLRF/functions170.htm#SQLRF06100 for more details about {{ROW_NUMBER()}}

Please make the neccessary adjustments to either {{BasicJdbcDialect}} or {{OracleDialect}} so that a correct query is produced.",,abotos,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 07:02;anovikov;IGNITE_4163_Fixed_load_range_queries_Review.patch;https://issues.apache.org/jira/secure/attachment/12838515/IGNITE_4163_Fixed_load_range_queries_Review.patch","08/Nov/16 07:49;vsisko;IGNITE_4163_Fixed_load_range_queries_for_MS_SQL_Server_.patch;https://issues.apache.org/jira/secure/attachment/12837925/IGNITE_4163_Fixed_load_range_queries_for_MS_SQL_Server_.patch","07/Nov/16 11:31;vsisko;IGNITE_4163_Fixed_load_range_queries_for_different_databases.patch;https://issues.apache.org/jira/secure/attachment/12837747/IGNITE_4163_Fixed_load_range_queries_for_different_databases.patch","14/Nov/16 03:59;vsisko;IGNITE_4163_Index_column_in_upper_case.patch;https://issues.apache.org/jira/secure/attachment/12838705/IGNITE_4163_Index_column_in_upper_case.patch","03/Nov/16 10:14;vsisko;IGNITE_4163_Oracle_specific_for_load_range_query_.patch;https://issues.apache.org/jira/secure/attachment/12836771/IGNITE_4163_Oracle_specific_for_load_range_query_.patch","14/Nov/16 03:13;pkonstantinov;test4163-project.zip;https://issues.apache.org/jira/secure/attachment/12838701/test4163-project.zip",,,,,,,,,,,,,,,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 24 08:42:12 UTC 2016,,,,,,,,,,"0|i35pq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/16 10:14;vsisko;Implemented Oracle specific query for select range query.;;;","04/Nov/16 06:09;abotos;Hi,

After trying out the patched dialect and playing around with it, I'm back with some more information on this. While the query is correct now from a syntactic point of view, it does not produce the expected results. As explained on http://www.oracle.com/technetwork/issue-archive/2006/06-sep/o56asktom-086197.html , *A ROWNUM value is assigned to a row after it passes the predicate phase of the query but before the query does any sorting or aggregation*, so having ROWNUM as part of the sorted sub-query will produce the wrong values in the {{rn}} column (because it's values are assigned before the ordering).

Assume we have a table with two key columns, with the following values:
||KC1|| KC2||
|2|2|
|2|1|
|1|3|
|1|2|
|1|1|
Then {{SELECT KC1, KC2, ROWNUM AS rn FROM MY_TABLE}} yields:
||KC1|| KC2||RN||
|2|2|1|
|2|1|2|
|1|3|3|
|1|2|4|
|1|1|5|
The sub-query as it would be produced by the patched dialect would be {{SELECT KC1, KC2, ROWNUM AS rn FROM MY_TABLE ORDER BY KC1, KC2}}. Executing this query, one obtains:
||KC1|| KC2||RN||
|1|1|5|
|1|2|4|
|1|3|3|
|2|1|2|
|2|2|1|
This is wrong, we need to have {{ROWNUM}} added to the result set after the ordering has been performed, so it needs to go in the outer query to have something like this: {{SELECT KC1, KC2, ROWNUM AS rn FROM (SELECT KC1, KC2 FROM MY_TABLE ORDER BY KC1, KC2)}}. Executing the query one gets the following results:
||KC1|| KC2||RN||
|1|1|1|
|1|2|2|
|1|3|3|
|2|1|4|
|2|2|5|
Now we need to apply the condition {{WHERE mod(RN, parallelLoadCacheMinThreshold)=0}}, but for some odd reason this results in  {{ORA-00904: ""RN"": invalid identifier}}. Since we anyway want to not have the {{RN}} column in the output result set, we can wrap the entire query from above into another {{SELECT}}, having a final query that looks like this: {{SELECT KC1, KC2 FROM (SELECT KC1, KC2, ROWNUM AS rn FROM (SELECT KC1, KC2 FROM MY_TABLE ORDER BY KC1, KC2)) WHERE mod(rn, 2)=0}} (I used {{parallelLoadCacheMinThreshold=2}} just as an example, as in reality it should be larger in order to actually benefit from the parallel loading). Executing the query one obtains the following results:
||KC1|| KC2||
|1|2|
|2|1|
Which are *correct*.

;;;","04/Nov/16 07:06;abotos;Additional to my above comment, since having a select that is so nested didn't look quite nice to me, I also looked at Oracle's {{ROW_NUMBER()}} function. I can get the same results using a query like this:
{{SELECT KC1, KC2 FROM (SELECT KC1, KC2, ROW_NUMBER() OVER (ORDER BY KC1, KC2) RN FROM MY_TABLE) WHERE mod(RN, 2)=0;}} (I used {{parallelLoadCacheMinThreshold=2}} just as an example).

Regarding which of the two approaches is better (i.e. more performant) I cannot really say, as I'm not an Oracle expert, but I found some articles dealing with the topic (e.g. https://explainextended.com/2009/05/06/oracle-row_number-vs-rownum/). In case you have an Oracle expert amongst your contributors, it might be a good idea to check with him.;;;","07/Nov/16 13:35;vsisko;Fixed using of row number function for Oracle, IBM DB2, MS SQL Server and PostgreSQL databases.;;;","11/Nov/16 06:02;anovikov;Vasiliy, I reviewed your patch and attach new patch with latest changes.

Pavel, please test.

Need load cache using parallel queries under different database. 
Note: Key must be a object with two or more fields.

To reduce parallel load cache rows please change property: parallelLoadCacheMinimumThreshold by default equals 512 rows.;;;","11/Nov/16 10:47;pkonstantinov;I've faced with the following issue while I'm tried to test with MS SQL Server
{code}
Caused by: java.lang.IllegalStateException: Failed to find column index for database field: id1
        at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore.columnIndex(CacheAbstractJdbcStore.java:796)
        at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildBinaryObject(CacheJdbcPojoStore.java:250)
        at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildObject(CacheJdbcPojoStore.java:136)
        at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore$LoadCacheCustomQueryWorker.call(CacheAbstractJdbcStore.java:2047)
        at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore$LoadCacheCustomQueryWorker.call(CacheAbstractJdbcStore.java:2003)
{code};;;","14/Nov/16 04:04;vsisko;Fixed loading of cache in case when a query is specified and JDBC driver metadata contain columns in lower case.;;;","15/Nov/16 09:21;pkonstantinov;Successfully tested with major DBs: Oracle, SQL Server, MySql, PostgreSQL, IBM DB2, H2;;;","17/Nov/16 04:43;anovikov;Merged.;;;","24/Nov/16 08:42;pkonstantinov;Re-tested in target branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Project build settings are not consistent,IGNITE-4151,13016159,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,28/Oct/16 13:52,12/Dec/16 15:04,14/Jul/23 06:20,28/Oct/16 15:30,,,,1.8,platforms,,,,,0,.NET,,,"Check all projects to have the following settings in Release mode:
* DEBUG constant: off
* TRACE constant: off
* Optimize code: on
* XML documentation file: on
* Debug info: none",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-10-28 13:52:17.0,,,,,,,,,,"0|i35jo7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: adding a first item in CheckpointSPI takes a long time under Firefox,IGNITE-4148,13016095,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,pkonstantinov,pkonstantinov,28/Oct/16 09:44,16/Nov/16 03:39,14/Jul/23 06:20,15/Nov/16 03:42,,,,,wizards,,,,,0,,,,"1) I've noticed adding a first item in CheckpointSPI list takes a long time in Firefox.
We need to investigate and fix the reason.

2) Hide not mandatory fields under the 'show advanced' panel",,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 16 03:39:40 UTC 2016,,,,,,,,,,"0|i35j9z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Nov/16 12:18;vsisko;Heavy panels divided by blocks.
To check JDBC and S3 checkpoin SPIs on cluster page and eviction for client and server near caches on cache page.;;;","15/Nov/16 03:42;anovikov;Reviewed. Merged. Pavel, please test.;;;","16/Nov/16 03:39;pkonstantinov;For now adding a first item in CheckpointSPI is fast.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSL misconfiguration is not handled properly,IGNITE-4147,13016004,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,vkulichenko,vkulichenko,27/Oct/16 23:28,03/Dec/21 10:19,14/Jul/23 06:20,17/Feb/17 09:36,1.7,,,2.0,general,,,,,0,,,,"Currently, if one tries to start a node with incorrect SSL configuration (i.e. node with SSL disabled tries to connect to secured cluster or other way around), this new node does not show any exceptions or warnings. Instead user may end up having two topologies - one secured and another non-secured.

This is counterintuitive. We should try to detect this and throw an exception in this case.

Here are possible scenarios that we should consider:
* Unsecured server tries to join secured cluster.
* Secured server tries to join unsecured cluster.
* Unsecured client tries to join secured cluster.
* Secured client tries to join unsecured cluster.",,dkarachentsev,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-16054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 17 09:26:09 UTC 2017,,,,,,,,,,"0|i35ipr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Dec/16 14:14;dkarachentsev;Valentin,

I'm not sure that throwing exception is a good idea, may be it will be enough to show meaningful warnings?;;;","23/Dec/16 18:49;vkulichenko;Dmitry, why don't you like an exception? I can't imagine a use case when the described situation can be valid.;;;","26/Dec/16 07:25;dkarachentsev;I'm just worrying if node unable to connect because another app is listening on that port, and may be it is better not to fail immediately, but go on with next address from list.

In case that you suggested, discovery will fail fast with recommendation to check configuration.

But anyway, you're right and this is also not valid case.;;;","26/Dec/16 18:09;vkulichenko;Fail fast is correct behavior here, I think.;;;","27/Dec/16 12:00;dkarachentsev;[PR#1382|https://github.com/apache/ignite/pull/1382];;;","17/Jan/17 13:05;sboikov;Reviewed, looks ok.;;;","19/Jan/17 08:20;dkarachentsev;May fail on constant node restarting. Should be more durable.;;;","17/Feb/17 09:26;sboikov;Looks good, just in case lt's set sslConnectAttempts to 3.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""No query result found for request"" exception when running multiple queries concurrently.",IGNITE-4145,13015812,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,vozerov,vozerov,27/Oct/16 13:45,22/Nov/16 11:40,14/Jul/23 06:20,11/Nov/16 10:05,1.7,,,1.8,sql,,,,,0,,,,"When many queries are executed simultaneously in multi-node cluster, the following exception might appear from time to time:
{code}
Exception in thread ""qry-exec-20"" javax.cache.CacheException: Failed to fetch data from node: 3432842f-2fa2-44b9-b69b-cadba286d317
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor$3.fetchNextPage(GridReduceQueryExecutor.java:298)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMergeIndex.fetchNextPage(GridMergeIndex.java:229)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMergeIndexUnsorted$1.hasNext(GridMergeIndexUnsorted.java:106)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMergeIndex$IteratorCursor.next(GridMergeIndex.java:351)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMergeIndex$FetchingCursor.next(GridMergeIndex.java:382)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:640)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$4.iterator(IgniteH2Indexing.java:1057)
	at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:81)
	at org.apache.ignite.yardstick.ringcentral.AdgRunner$QueryExecutor.run(AdgRunner.java:394)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: javax.cache.CacheException: Failed to execute map query on the node: c51bc4f2-7038-4df6-88a9-eb87506c2f86, class javax.cache.CacheException:No query result found for request: GridQueryNextPageRequest [qryReqId=93, qry=0, pageSize=1024]
		at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.fail(GridReduceQueryExecutor.java:259)
		at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.onFail(GridReduceQueryExecutor.java:249)
		at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.onMessage(GridReduceQueryExecutor.java:230)
		at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor$1.onMessage(GridReduceQueryExecutor.java:178)
		at org.apache.ignite.internal.managers.communication.GridIoManager$ArrayListener.onMessage(GridIoManager.java:1900)
		at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1080)
		at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:708)
		at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:101)
		at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:671)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
		... 1 more
{code}

Quick analysis shows that next-page request could possibly arrive before original query message is processed. Need to confirm it with deeper debugging first.

The best way to reproduce it:
1) Generate some data
2) Start several data nodes (e.g. 4)
3) Start client node
4) Concurrently execute multiple SQL queries from the client in different threads.",,amashenkov,githubbot,sergi,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 11:40:33 UTC 2016,,,,,,,,,,"0|i35hjb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Nov/16 11:38;amashenkov;I've found that FetchingCursor can get FailPage while merging indices on reduce side. 
It seems that this FailPage object was created in GridMergeIndex.fail(UUID ) method. 
;;;","08/Nov/16 14:38;amashenkov;There is a race in GridMergeIndex.addPage() method.

A page can pass to FetchingCursor (in GridMergeIndexUnsorted class) and become available to another thread before remaining rows counter is reduced. So, another thread could call fetchNextPage() method on the last page object in sequence, that resulted in error, because Map side had no query result object (see  NodeResult class) already. 
;;;","08/Nov/16 14:48;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1218

    IGNITE-4145: ""No query result found for request"" exception when running multiple queries concurrently.Fixed

    Race condition has fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4145

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1218.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1218
    
----
commit f3e4f78fc96c98f4376ff86ab3e76ba54d6b09a4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-07-26T12:48:36Z

    Print debug information on 'waitForRent' timeout.
    (cherry picked from commit 7cf26d9)

commit 9d07e3e7a34d1cbe67a9656630bc6215cd213f0a
Author: sboikov <sboikov@gridgain.com>
Date:   2016-07-27T06:19:12Z

    ignite-3300 Fixed issue with partition value changing stored in KeyCacheObject.
    (cherry picked from commit a441bb9)

commit 4979c870735698dc51ce2c0db350a0f35c9b8b0e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-07-27T09:12:39Z

    Collector task do not honor node filters for caches and IGFS.

commit 7b3d1963cb7240ce3f59f5c9f81965bf5730bad0
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-07-29T09:03:20Z

    Fixed compatibility.

commit 4f27a47b81314b2eb52a5bc5b1d938bb586ae2aa
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2016-08-01T17:25:54Z

    IGNITE-3513 Cleanup worker is placed in the Thread's waiting queue using Thread.sleep method

commit ae23dab0af8caaccd3db1dca8e435b57b8844a31
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-08-03T10:10:03Z

    Visor: scan cache with filter.

commit a90d05b30f39da001156fdd4053790f8cd352406
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-04T05:00:15Z

    IGNITE-3408 - Provided basic implementation of AddressResolver

commit d945a5dd89b01f05a59e2b02fb86c1007736aff9
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-08-04T15:37:37Z

    version changed to: 1.6.4

commit 00f47d78216db5de75dda2a1b5fef2c1e65d9871
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-06T01:04:01Z

    IGNITE-3634 - SpringCacheManager should support null values

commit 018001011daff723d120834da7b4f57bad7f8f71
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-05-27T12:16:27Z

    IGNITE-2310 Lock cache partition for affinityRun/affinityCall execution

commit b9d9d84f4fcaf7f025b480769b612fc63b5082f4
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-09T11:04:47Z

    IGNITE-3659: Added special test suite to handle ignored tests.

commit e23aba4b060a9dfbee20384550a49274a479ac00
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-09T11:05:17Z

    Merge remote-tracking branch 'upstream/ignite-1.6.5' into ignite-1.6.5

commit d1a3904c8c8ed4a6cf750a2caa4e2e06cc471698
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-09T13:23:34Z

    IGNITE-2310 Lock cache partition for affinityRun/affinityCall execution -  add javadoc for test

commit e1262b2f2f4fb57fa8a75f6008f9e005ad07b5df
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-09T22:56:49Z

    Fixed copy constructor in ConnectorConfiguration

commit 151dfa7878d7d013cd93fac9d627bbdeb1ef8e18
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-10T06:48:29Z

    Revert ""version changed to: 1.6.4""
    
    This reverts commit d945a5dd89b01f05a59e2b02fb86c1007736aff9.

commit ff3e00caa892a7399622711b620fcb4dcfbbfb56
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-08-10T13:21:52Z

    IGNITE-3272 Fixed ""Memory consumption in ContinuousQueryHandler"". This close #930.

commit 1d0cbb45cd61c5c8e6ec926d7e629eb94111b32f
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2016-08-11T05:43:50Z

    IGNITE-3618: Client can not load data after server restarts. This closes #941.

commit 1139a9f76b5d37073261d729a15b1fbec674d48d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-11T05:47:48Z

    Added missing license.

commit 0b4ffdbcce63e5ce53572f71af967cff300d5670
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-14T15:18:40Z

    IGNITE-2852: Fixed TreeMap and TreeSet serialization.

commit 89bce0fc5cb3dba56626c7088e607d0b25c3353c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-30T10:14:16Z

    IGNITE-3021: IGFS: Fixed failiing IgfsStreamsSelfTest.testCreateFileColocated() test. Failure as caused by misconfiguration.

commit 78aa065b4c7b05381b1fa31159b74969ec4a2bfe
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:35Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit f87ca482420fc1e6ffcb000a227717142d24e270
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:41Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit 9ddf9d846f52a4e8fc433643409993884c70ce37
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T13:00:45Z

    IGNITE-466: IGFS: Added ""IgfsMode mode(IgfsPath)"" method.

commit dc81069ba9ebb88bc11cf6917e8733cc1f6de2fb
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2016-08-02T08:11:24Z

    IGNITE-3343: IGFS: Secondary file system is not queried for statuses during MKDIRS and CREATE operations. This closes #896.

commit ae54e36f27719f46d1d276f62a977c3f8d053b44
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-04T14:04:41Z

    IGNITE-3331 IGFS: Route client tasks to primary node when metadata co-location is enabled. This closes #921.

commit 970137b1db7dc6c5e546581e22e428ae15c86513
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:32Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit 4d876a7560060c892908da447178e97bfe12ca9c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:43Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit f5a040a01280c654df1fc4789cc39ff1ac2d32a4
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-09T07:01:56Z

    IGNITE-3332: IGFS: Optimized file unlock routine with help of a client callable. This closes #916.

commit 5cf3bea32a25ccc78641f083aa7f1ac81b4187ba
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-15T10:40:41Z

    IGNITE-1926: IGFS: Implemented local secondary file system.

commit 278633eced6d8039b5be4a18eefe6c65650aba4f
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-08-15T11:27:22Z

    IGNITE-3688: Fixed visiblity issue in GridCacheIoManager.idxClsHandlers.

----
;;;","08/Nov/16 20:48;sergi;Please provide correct PR for review.;;;","09/Nov/16 08:20;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1220

    IGNITE-4145: ""No query result found for request"" exception when running multiple queries concurrently.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4145

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1220.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1220
    
----
commit a4c63ae113931615e940ada2411ebce32dba5db8
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-09-30T07:45:13Z

    IGNITE-3998: IGFS: Enabled IgfsAbstractSelfTest.testCreateConsistencyMultithreaded. This closes #1129.

commit a12298c0baf19407f3110ba3c4f0aab88b67946d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-30T08:00:51Z

    IGNITE-3868: ODBC: Fixed connection string parsing. This closes #1051.

commit 5e7ef8644ad824b87d4797e59133eb783ff8b098
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:37:25Z

    Merge branch 'ignite-1.6.9' into ignite-1.6.10

commit 59b46d3e6ea073d054ca2262d676b055a74bbb1f
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:40:04Z

    IGNITE-2881: Fixed SPI queries.

commit 0b66d2d7b695cf370a4b8a717844ad67742c6090
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-03T09:04:03Z

    ignite-3601 Do not check version on commit for read-only serializable transactions.

commit 9f211e413332931f0fb1190744ddd7c7f38fd213
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-03T09:26:12Z

    IGNITE-3645: IGFS: Local secondary: Implemented update() operation. This closes #1003.

commit fa698d6fcfde0006423ef009337dbef58ac62515
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T10:33:12Z

    Fixed TcpDiscoverySnapshotHistoryTest intermittent failures caused by multicast IP finder.

commit bba019fd5076412ca43c10a32fd300b6031ccd0b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T14:25:20Z

    IGNITE-3980: Processed failing tests in query suites. This closes #1137.

commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit 23461b8d33922772ef8e7217e9e87b3f3b0b37b1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T07:14:59Z

    IGNITE-4001: Timeouts for threads in Ignite pools. This closes #1130.

commit b94b0aeae4c42b1d35128c6b1de97e3fa318d497
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-06T07:22:50Z

    IGNITE-3163 IGFS: Added working directory support to IgniteHadoopIgfsSecondaryFileSystem. This closes #1030. This closes #1058. This closes #1132.

commit e6317e01fa8a0de03e15dcdd84a575c6b06ce701
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T09:03:48Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect. This closes #903. This closes #1145.

commit 952be8b995050b34379006dd6e739da3fe3b49e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2016-10-07T12:00:09Z

    Squashed commit of the following:
    
    commit 566881b695b8bc00e618fe9a9b4c86a8fd563cc1
    Author: sboikov <sboikov@gridgain.com>
    Date:   Fri Oct 7 13:08:38 2016 +0300
    
        minor
    
    commit 7fe88a1cb21f794ee55a176ab36d895cbf916528
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Oct 6 11:11:24 2016 +0300
    
        ignite-update-notifier fix after review
    
        (cherry picked from commit a10d2ff)
    
    commit f2de749f958a3b18dc479f8a5517d7bf9362b933
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Oct 4 12:12:08 2016 +0300
    
        ignite-2079-2 optimize import and change url path
    
        (cherry picked from commit 830a3cf)
    
    commit 0d1be85ad55b0aa91224690d6c112ae92e8bc0a9
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Sep 29 19:54:54 2016 +0300
    
        update-notifier remove parse xml, now parse like properties
    
        (cherry picked from commit 9ecaa29)
    
    commit e43bca6fb4528a7fc0dcb804a74fca1c59d7468b
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Sep 27 17:07:21 2016 +0300
    
        remove dom parser
    
        (cherry picked from commit d1653b2)

commit b9c776a8423471706ecb1dc6176b38f23e799077
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-10T08:52:57Z

    IGNITE-3235 Failed to initialize primitive boolean cache property of superclass

commit f9a0676fad7fd6c23e3c91c10d7e0412ccb27c06
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T07:23:01Z

    IGNITE-4041: Created separate processor for thread pools and refactored IO manager. This closes #1150.

commit 9a6cfce659df40b0a4624f19fd91c217b74bafea
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-10-11T10:59:57Z

    IGNITE-4014 Fixed ""Transaction hangs if entry processor failed during serialization"". This closes #1148.

commit 1938a17b01fac1e08c30011180bbcc3ed7374d83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-11T11:50:18Z

    IGNITE-3948: Fixed a bug causing TTL manager to continue tracking of evicted entries. This closes #1101.

commit 60d27547dfc6bd27c6d39cbcc523d0d1e872a821
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T11:51:00Z

    Merge remote-tracking branch 'upstream/ignite-1.6.10' into ignite-1.6.10

commit 359a392f1c53217c691c4c40762c51fd330666e2
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes
    
    (cherry picked from commit a5c85ca)

commit 01ca6db70933fb7f50f161a80cde9647e68a3710
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-10-11T13:18:40Z

    Merge remote-tracking branch 'origin/ignite-1.6.10' into ignite-1.6.10

commit 0659bebe04dc9c0b0a163bc95061519c553e678c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T11:49:36Z

    IGNITE-3972: Fixed a bug causing continuous queries to be lost for ATOMIC cache when key's primary node leaves topology. This closes #1133.

commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T12:44:08Z

    IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.

commit 2ab094e08373dc6667af44d48a38b4f044953a79
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-12T13:48:51Z

    IGNITE-2355: Hadoop: added ability to configure multiple job tracker addresses. This closes #1153.

commit eaf8ae246cc799c1353332fcac05cb3a8efab02c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-12T16:57:09Z

    IGNITE-4034 Get rid of specialized methods in platform targets

commit b1ec58f716ece3a5866dd654ebc707bef67caf57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-10-13T05:58:22Z

    IGNITE-4066 Fixed NPE.

commit 447e07c0bb5af75bce6a14612606904e4e3d9705
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-14T08:40:41Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL

commit 7adfbcf1ee7bbe0beb95fa82749a2e04449de8fa
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-14T14:48:14Z

    IGNITE-4060: Fixed a bug in RoundRobinLoadBalancing API causing exception when running closures after client node reconnect. This closes #1157.

commit 80abd1b72e4fc7b0b95212e7f53c700c0fe21156
Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
Date:   2016-10-14T16:33:07Z

    GG-11360 - Implement SQL queries cancellation (#18)
    
    * GG-11360 Merged IGNITE-2680 to ignite-1.6.3.
    
    * GG-11360 Test cleanup.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Added test for forever-running query cancellation on node restart.
    
    * GG-11360 Fixing race.
    
    * GG-11360 Added test for forever-running query cancellation on node stop.
    
    * GG-11360 Cleanup.
    
    * GG-11360 Support for local query cancellation/timeout.
    
    * GG-11360 Increase test duration.
    
    * GG-11360 Remove redundant catch block.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * Merge remote-tracking branch 'remotes/gg/ignite-1.6.10' into ignite-gg-11360
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.

commit 43ac3f5d5e8ab664e07f26d99be34f284f7941dd
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-17T08:26:12Z

    IGNITE-4054: Hadoop: added map-reduce plan debug output.

commit d3f042b9ba6c605500ab7155c40a41850babefdb
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-17T09:28:31Z

    Fixed indexing test in according to changes from #80abd1b.

----
;;;","09/Nov/16 14:47;sergi;Looks good to me, but do we have a test for this issue?;;;","09/Nov/16 18:09;amashenkov;This bug is a race condition and I it's impossible to make a unit test for it. It should be some kind of load or stress test.
It take few minutes for me to reproduce this bug under load. I'll add a reproducer, but which test suite it should be added to?
;;;","10/Nov/16 09:55;sergi;You can add it to the same place where we have other multithreaded query tests, take a look at `IgniteCacheQueryMultiThreadedSelfTest` for example.;;;","10/Nov/16 13:50;amashenkov;Test added.

Sergi, thanks for pointing me!
I've found another race. Page should be added after remainingRow counter updated but before the counter initialized flag raised to avoid race condition on adding LastPage.

Sergi, please review PR once more. ;;;","10/Nov/16 18:01;sergi;Please fix the formatting: spaces and newlines.;;;","11/Nov/16 10:16;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1220
;;;","22/Nov/16 11:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1218
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Check and restore remove buttons for table values,IGNITE-4143,13015660,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,27/Oct/16 02:48,28/Oct/16 04:03,14/Jul/23 06:20,28/Oct/16 03:51,1.8,,,1.8,wizards,,,,,0,,,,"Missed remove button for cache key configuration table.
Remove last element in failover table",,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 28 04:02:54 UTC 2016,,,,,,,,,,"0|i35glj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Oct/16 03:03;vsisko;Fixed remove buttons on cache key configuration and failover page.
Fixed required state for failover configuration fields.
Fixed code generation for Custom variant of failover.;;;","27/Oct/16 08:32;pkonstantinov;Remove buttons are work correctly, but I found that error message is not displayed if mandatory field is empty on Save.
This is about 'Affinity key field name:' in Cache configuration on Clusters screen. Could you please fix this as well.;;;","27/Oct/16 09:32;vsisko;Fixed showing of error message for invalid field value on cache key configuration section.;;;","28/Oct/16 04:02;pkonstantinov;Successfully tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion in ClientImpl.updateMetrics(),IGNITE-4142,13015586,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,amashenkov,vkulichenko,vkulichenko,26/Oct/16 21:14,09/Feb/17 17:43,14/Jul/23 06:20,09/Jan/17 09:49,1.7,,,2.0,general,,,,,0,,,,"The problem was reported here: http://apache-ignite-users.70518.x6.nabble.com/AssertionError-td8321.html

It looks like the reason is that {{TcpDiscoveryHeartbeatMessage.setCacheMetrics()}} method does not put empty map in the {{cacheMetrics}} collection. As a result, it's possible that there are cluster metrics for a node, but no cache metrics for this node - this leads to the assertion in {{ClientImpl.updateMetrics}} (see below). We should remove the {{if}} in {{TcpDiscoveryHeartbeatMessage.setCacheMetrics()}} or change {{ClientImpl.updateMetrics}} logic so that it does not fail in this case.

We should also try to reproduce in a unit test to make sure this the only problematic code here.

{noformat}
10:39:38,355 SEVERE [TcpDiscoverySpi] Runtime error caught during grid runnable execution: IgniteSpiThread [name=tcp-client-disco-msg-worker-#4%FooGrid%]: java.lang.AssertionError 
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.updateMetrics(ClientImpl.java:2046) 
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.processHeartbeatMessage(ClientImpl.java:1926) 
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.processDiscoveryMessage(ClientImpl.java:1580) 
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.body(ClientImpl.java:1499) 
        at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62) 
{noformat}",,amashenkov,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 09 17:43:48 UTC 2017,,,,,,,,,,"0|i35g53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 16:51;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1370

    IGNITE-4142: Assertion in ClientImpl.updateMetrics()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4142

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1370.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1370
    
----
commit c188c3c4a96eacb85ea8e08f0634288332432c1c
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-28T01:46:23Z

    IGNITE-3983 Fixed wrong cache load optimization. Test added.

commit 89c30c8b0be6915d2399be508ddcd9eb439a9aaa
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-28T01:57:45Z

    IGNITE-3965 @GridInternal tasks should run via standart LoadBalancingSpi. Added test.

commit a53c399e10926120106379d1c764edd7d3854e6a
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-28T02:07:55Z

    Merge ignite-1.6.9 into ignite-1.7.2.

commit ec9ddcd3d99d19403bf19e1172ede2afdab6c86f
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T09:05:28Z

    Code style fixes.

commit 17c2fc0b69abd023b2a1e5da344e67951fd49408
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T09:56:17Z

    ignite-2833 Need call 'touch' for cache entry if it was obtained using 'entryEx'.

commit daf974d261efa525678d5fabc6191642c07f9ad4
Author: AKuznetsov <akuznetsov@gridgain.com>
Date:   2016-09-28T10:22:10Z

    IGNITE-3965 Fixed issues found on review.

commit 53fbad7ddafdae7b368b0f207d06d16574978d62
Author: AKuznetsov <akuznetsov@gridgain.com>
Date:   2016-09-28T10:24:56Z

    Merge branch ignite-1.6.9 into ignite-1.7.2.

commit 4ff19c20b169e0373eafc8025a838db8bfc61f27
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T10:47:51Z

    ignite-3621 Fixed 'testEvictExpired'.

commit bfe4458448a59542713830f57713b3ac2af08e2b
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T11:31:24Z

    ignite-3621 Fixed 'testEvictExpired'.

commit d643dcf2dd2caac4c3ff04cb72f31bbfbf97339a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-28T11:34:23Z

    IGNITE-3970 .NET: Fix Cyrillic 'C' letters in code - add test

commit 474ade276c4ae3e8f93cce37473d37270b4e7ad9
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T11:38:04Z

    IGNITE-3988: Moved failing cloud tests to ignore module.

commit ccfaaf8d060ef984678d2376b16b5a17e7c17e9d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T11:38:17Z

    Merge remote-tracking branch 'upstream/ignite-1.6.9' into ignite-1.6.9

commit c7fa918c10d771efa91cde1017662c26d0a61085
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-28T11:47:17Z

    Merge remote-tracking branch 'remotes/community/ignite-1.6.9' into ignite-1.7.3

commit b9105df77cc70b532f94899c754fba47e3e05e9a
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T11:53:20Z

    IGNITE-3989: Moved failing JTA tests to ignore module.

commit d595345765db2151ff432beecd478ce056393593
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T12:08:38Z

    IGNITE-3990: Moved failing Spring tests to ""ignore"" module.

commit e3f13455d4273e615727d0410783e3719db98f76
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T09:56:17Z

    ignite-2833 Need call 'touch' for cache entry if it was obtained using 'entryEx'.
    
    (cherry picked from commit 17c2fc0)

commit b2faa339acb2eea24e6dd5e0c21fc3d3d0592ff6
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T10:47:51Z

    ignite-3621 Fixed 'testEvictExpired'.
    
    (cherry picked from commit 4ff19c2)

commit 74d2fc2416b8e6bc0598152552021f984a013061
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T11:31:24Z

    ignite-3621 Fixed 'testEvictExpired'.
    
    (cherry picked from commit bfe4458)

commit d2563dacceea61b19bb6e083e29ebacc28fdd323
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T12:51:55Z

    IGNITE-3993: Added failing client tests to ""ignored"" test suite.

commit 33d34941390c00e8d6a2488e8f2e11e6abba8a01
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T12:54:52Z

    Merge remote-tracking branch 'community/ignite-1.6.9' into ignite-1.6.9

commit 78144c4c9d6200ceef8b666a186039685f053381
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T13:52:13Z

    Fixed incorrect test count calculation leading to afterTestsStopped() not being called.

commit e3dfdecc3607b5f3183bfcb1ce36c57543a8965f
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2016-09-28T13:46:46Z

    Validate hash code presence in BinaryObject. Fixes #928

commit 53229e290f7d6aab9b504693bd2b93155ecd2bad
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-09-28T14:07:47Z

    IGNITE-3995 .NET: Introduced default non-null ASP.NET Session-State Store Provider cache name. This closes #1128.

commit d1e3a78ae569fa5d5692816db44f2c677e1b8283
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-09-29T00:53:42Z

    IGNITE-3191 - Fixed ordering of fields in binary objects

commit b280c3efa1eb84c6bc8abbe31ba669b0c24323d8
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-29T07:23:54Z

    Fixed missing Apache header.

commit 3e8a1c6b045c231dbb3c972463000f824386aee9
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-29T08:08:23Z

    Added node stop to IgniteCacheExpireAndUpdateConsistencyTest.

commit 062b9b69aa851d5253dfb7f44066b7d749f1ca12
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-09-29T08:26:50Z

    IGNITE-3633 - Enforce key validation for tests.

commit a4d7aa343df23a5e00df11c5080cc1762b187161
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-29T09:04:44Z

    ignite-3621 Fixed 'testEvictExpired'.

commit ad613afd7165ed2d8bf0a62805fc2506dfe6c59a
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-29T09:04:44Z

    ignite-3621 Fixed 'testEvictExpired'.
    
    (cherry picked from commit a4d7aa3)

commit 22dc2c9e05e5183f838865023c9cb7a8291ac67f
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2016-09-29T12:43:20Z

    GridNearCacheAdapter, GridDhtCacheAdapter - test fix

----
;;;","21/Dec/16 16:53;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1372

    IGNITE-4142: Assertion in ClientImpl.updateMetrics()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4142-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1372.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1372
    
----
commit 6319c3b9e6a187157435ecf848dc0d82717484cb
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-12-21T16:53:08Z

    Fixed.

----
;;;","21/Dec/16 17:00;amashenkov;Obviously, there is a bug.
But I've no idea how it can be reproduced, in particular on single JVM.;;;","21/Dec/16 17:02;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1370
;;;","22/Dec/16 14:55;amashenkov;TC tests look good.
;;;","22/Dec/16 21:31;vkulichenko;[~amashenkov], if you decided to fix this way, then it should be similarly fixed in {{ServerImpl}} as well. Basically, I think we can get rid of {{TcpDiscoveryHeartbeatMessage.hasCacheMetrics()}} without parameters and use the one that check for particular node ID instead. Agree?;;;","04/Jan/17 19:39;vkulichenko;[~amashenkov], I don't see the fix in master or in any other branch. Was it merged?;;;","09/Feb/17 17:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1372
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Communication fails to send message if target node did not finish join process,IGNITE-4111,13015379,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,NSAmelchev,sboikov,sboikov,26/Oct/16 11:21,04/Jul/19 21:50,14/Jul/23 06:20,18/Dec/18 15:58,,,,2.8,general,,,,,0,,,,"Currently this scenario is possible:
- joining node sent join request and waits for TcpDiscoveryNodeAddFinishedMessage inside ServerImpl.joinTopology
- others nodes already see this node and can send messages to it (for example try to run compute job on this node)
- joining node can not receive message: TcpCommunicationSpi will hang inside 'onFirstMessage' on 'getSpiContext' call, so sending node will get error trying to establish connection

Possible fix: if in onFirstMessage() spi context is not available, then TcpCommunicationSpi  should send special response which indicates that this node is not ready yet, and sender should retry after some time.

Also need check internal code for places where message can be unnecessarily sent to node: one such place is GridCachePartitionExchangeManager.refreshPartitions - message is sent to all known nodes, but here we can filter by node order / finished exchage version.
",,agoncharuk,ascherbakov,dpavlov,githubbot,ignitetcbot,ilantukh,nizhikov,NSAmelchev,sboikov,,,,"dspavlov commented on issue #1307: IGNITE-4111
URL: https://github.com/apache/ignite/pull/1307#issuecomment-508581782
 
 
   
   IGNITE-4111 | Resolved
    Feel free to reopen if needed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:50;githubbot;600","dspavlov commented on pull request #1307: IGNITE-4111
URL: https://github.com/apache/ignite/pull/1307
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Nov/16 21:00;ein;test onFirstMessage hang.log;https://issues.apache.org/jira/secure/attachment/12839704/test+onFirstMessage+hang.log",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 18 16:01:19 UTC 2018,,,,,,,,,,"0|i35ev3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Nov/16 21:14;ein;I have try to get the simulation when the nodes in topology have received TcpDiscoveryNodeAddFinishedMessage but the joining node still has not.
I've add the delay on processing TcpDiscoveryNodeAddFinishedMessage, decrease the communication timeout, and start 10 nodes simultaneously.
Then I have got an error after the 10th node started:
Failed to send job request, caused by Failed to send message to remote node, caused by Failed to connect to node (is node still alive?),
caused by Failed to perform handshake due to timeout (consider increasing 'connectionTimeout' configuration property).

But after some discovery I've found that the onFirstMessage method don't hang. It successfully executes every time when onMessage is invoked.;;;","20/Nov/16 23:53;ein;I've found that the actual lock occurs in the TcpCommunicationSpi.srvLsnr.onConnected() method while sending the node ID on accepting a remote connection:

ses.send(nodeIdMessage());

This invocation causes awaiting the ctxInitLatch, hence locks a clientThread of the GridNioServer until the node in not joined the topology.

At the same time invocation of the ch.read(buf) is being blocked and this call will never be reached:

UUID rmtNodeId0 = U.bytesToUuid(buf.array(), 1);

In consequence of timeout.;;;","28/Nov/16 13:53;ein;Implemented, tests passed, please review pull/1259/head;;;","01/Dec/16 13:16;githubbot;GitHub user akuramshingg opened a pull request:

    https://github.com/apache/ignite/pull/1307

    IGNITE-4111

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4111

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1307.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1307
    
----

----
;;;","01/Dec/16 13:17;ein;https://github.com/apache/ignite/pull/1307;;;","23/Apr/18 17:45;dpavlov;Hi [~ein], is this patch and ticket still actual?;;;","23/Apr/18 17:52;ein;Hi [~dpavlov], actually I don't know;;;","06/Jun/18 11:21;agoncharuk;[~dpavlov] The ticket is still relevant, it would be great to merge it. ;;;","06/Jun/18 11:23;agoncharuk;I am moving this ticket to in-progress because the PR has conflicts with master.
[~sboikov] can you please unassign the ticket if you are not planning to work on it?;;;","14/Jun/18 12:57;agoncharuk;Since there are no activity on this ticket, moving to open state.;;;","03/Sep/18 12:56;NSAmelchev;If you don't mind, I'll continue work on the issue.;;;","05/Sep/18 09:22;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/4685

    IGNITE-4111

    Fix for IGNITE-4111 Communication fails to send message if target node did not finish join process

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite ignite-4111

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4685.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4685
    
----
commit bfb00b6e61f9709718c30971997aeb0ac79e86b4
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-18T20:12:28Z

    IgniteTcpCommunicationBigClusterTest added

commit 02dd92e605b9b53f5a16c7ec5f8e7b5698b15ba4
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-18T21:55:37Z

    IgniteTcpCommunicationBigClusterTest update

commit 6acf193a3d356d1bad4c02a53ac76833ed1008d0
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-19T09:55:45Z

    Have got TcpCommunicationSpi error

commit 4fd39653d24f62f19f70b4dffba8497185cc46fb
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-19T16:39:10Z

    Some discovery have been done

commit c2c181922c7c24ea457577e32d2af897c8bec87f
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-19T20:11:28Z

    Prove that problem is not in the onFirstMessage hang

commit f8076edba097f6077229b2090ee3ff1a3369878c
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-19T20:26:37Z

    Revert: Prove that problem is not in the onFirstMessage hang

commit 9415f11564480ae61952b7ad551518141b5ad7c0
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-19T20:55:15Z

    Prove that problem is not in the onFirstMessage hang

commit dc95254a8030f03e485fe535bb286eb1a7b99f63
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-21T08:51:26Z

    Hang dectection

commit 6e1f2dfc2acb3dbb8f24aa51ed67b2ee447b4585
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-21T08:55:09Z

    Revert: pushing unnecessary changes to the master

commit ed794ca815f6bb1471af15779279d287576b39cc
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-21T09:08:00Z

    Revert: pushing unnecessary changes to the master

commit bcd049d09dadb20295eb87667d20101d7fb41790
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-21T19:45:10Z

    Fix: get handshake error on long delivery addNodeFinished message

commit a33f22a9da972b769bf63de04f86b42741c7f0d6
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-22T10:39:04Z

    Include the test into Communication SPI Test Suite

commit f8ba785e43993639e30e8e048def5533eefedc32
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-22T10:50:03Z

    Removing unnecessary changes

commit 7bc8ac878a5761fc111d7e5e71222a8cef4335d7
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-22T10:54:06Z

    Removing unnecessary changes

commit fb95a5af0f43f3c1a0ebb4f375280225bec5ec98
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-22T12:55:19Z

    java7 syntax

commit dc2814a2beaa53761329654f52d669fc4f0cc7c7
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-25T11:20:13Z

    fix INIT_TIMEOUT_MSG_TYPE = -28
    fix message codes comment

commit b10a57c1073bd0305748af46bd9b787c7b283ff0
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-11-28T11:07:02Z

    add license header

commit 8ed19a042a8c0e9e061e3c286635b1e9521f1047
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-12-01T13:03:28Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-4111

commit eca325b9bc96426aa4ddc44169df89ee26b9453b
Author: Alexandr Kuramshin <akuramshin@...>
Date:   2016-12-01T13:15:07Z

    Merge remote-tracking branch 'remotes/apache/master' into ignite-4111
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/managers/communication/GridIoMessageFactory.java

commit eeaf5bc95dc50b506dc531e919f806f271761cc6
Author: NSAmelchev <nsamelchev@...>
Date:   2018-09-04T14:22:54Z

    Merge commit 'refs/pull/1307/head' of https://github.com/apache/ignite into ignite-4111
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/managers/communication/GridIoMessageFactory.java
    #	modules/core/src/main/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpi.java

commit 0154877f927eba6ebd96dee2942b9572017499f9
Author: NSAmelchev <nsamelchev@...>
Date:   2018-09-04T14:28:16Z

    fixed build after merge

----
;;;","13/Sep/18 12:50;NSAmelchev;I partially fixed PR provided by [~ein]:
 - Fix for SSL. (It was also incorrect behavior)
 - Moved out message class to others messages.
 - Used internal utilities.
 - I have rewritten test. The provided test doesn't reproduce a problem correctly. Also, I have added the test for the case when SSL enabled.
 - Fixed code style problems.
[TC tests|https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&branch_IgniteTests24Java8=pull%2F4685%2Fhead] - OK;;;","11/Oct/18 16:01;ignitetcbot;{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2057917&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","16/Oct/18 14:01;nizhikov;LGTM;;;","17/Oct/18 10:05;NSAmelchev;[~agoncharuk],
Could you review, please?;;;","22/Oct/18 11:52;agoncharuk;[~NSAmelchev] can you pull up the latest master?;;;","23/Oct/18 11:43;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Queries (Binary Objects Simple Mapper){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2139457]]
* IgniteSqlSplitterSelfTest.testIndexSegmentationPartitionedReplicated (last started)

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2139460&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","23/Oct/18 11:46;NSAmelchev;[~agoncharuk], I've updated PR. Also, I added new listening test logger instead deprecated GridStringLogger into the test. TC tests look good.;;;","31/Oct/18 15:07;ignitetcbot;{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2208611&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","31/Oct/18 15:12;NSAmelchev;I have used the new method of test listening method and merged new master one more time. TC tests are OK. ;;;","22/Nov/18 11:49;ilantukh;[~NSAmelchev], thanks for the contribution!

I've reviewed your PR, it looks good. However, I would prefer to have a more precise test. Currently in IgniteTcpCommunicationBigClusterTest you just create an artificial latency and start multiple nodes, hoping that you will end up in the scenario mentioned in ticket's description. Please check if it is possible to re-write it so it will ensure such scenario using synchronization mechanics (like CountDownLatch) and make it more deterministic. Also, please give the test more meaningful name.;;;","27/Nov/18 10:04;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}[Inspections] Core{color} [[tests 0 BuildFailureOnMetric |https://ci.ignite.apache.org/viewLog.html?buildId=2400999]]

{panel}
[TeamCity Run All Results|https://ci.ignite.apache.org/viewLog.html?buildId=2401003&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","27/Nov/18 10:09;NSAmelchev;[~ilantukh], thanks for review! 
I have rewritten the test. Could you take a look one more time, please?;;;","29/Nov/18 13:28;ilantukh;Thanks, looks good now.;;;","10/Dec/18 12:11;agoncharuk;Thanks, [~NSAmelchev], merged your changes to master.;;;","10/Dec/18 12:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4685
;;;","10/Dec/18 17:18;ascherbakov;This fails in master with NPE:
{noformat}
package org.apache.ignite.internal.processors.cache;

import org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction;
import org.apache.ignite.configuration.CacheConfiguration;
import org.apache.ignite.configuration.IgniteConfiguration;
import org.apache.ignite.failure.StopNodeFailureHandler;
import org.apache.ignite.internal.IgniteEx;
import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;
import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder;
import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;

/**
 */
public class ClientReconnectSelfTest extends GridCommonAbstractTest {
    /** IP finder. */
    private static final TcpDiscoveryVmIpFinder IP_FINDER = new TcpDiscoveryVmIpFinder(true);

    /** {@inheritDoc} */
    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {
        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);

        cfg.setConsistentId(""node"" + igniteInstanceName);
        cfg.setFailureHandler(new StopNodeFailureHandler());

        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(IP_FINDER);

        boolean client = igniteInstanceName.startsWith(""client"");

        cfg.setClientMode(client);

        if (!client) {
            CacheConfiguration ccfg = new CacheConfiguration(DEFAULT_CACHE_NAME);

            ccfg.setAtomicityMode(TRANSACTIONAL);
            ccfg.setBackups(1);
            ccfg.setWriteSynchronizationMode(FULL_SYNC);
            ccfg.setOnheapCacheEnabled(false);
            ccfg.setAffinity(new RendezvousAffinityFunction(false, 32));

            cfg.setCacheConfiguration(ccfg);
        }

        return cfg;
    }

    /** */
    public void testReconnect() throws Exception {
        try {
            IgniteEx crd = (IgniteEx)startGridsMultiThreaded(1);

            IgniteEx client = startGrid(""client"");

            stopGrid(0);

            crd = startGrid(0);
            crd.cluster().active(true);

            awaitPartitionMapExchange();
        }
        finally {
            stopAllGrids();
        }
    }
}
{noformat};;;","10/Dec/18 17:19;agoncharuk;[~NSAmelchev] can you take a look at the reproducer provided by Alexei?;;;","10/Dec/18 23:23;NSAmelchev;[~ascherbakov], Hi
I can't reproduce NPE locally with provided reproducer.

Logs of the reproducer *with my changes:*
{noformat}
/opt/jdk1.8.0_191/bin/java -ea -Didea.test.cyclic.buffer.size=102424576 -javaagent:/opt/idea-IC-182.5107.16/lib/idea_rt.jar=34053:/opt/idea-IC-182.5107.16/bin -Dfile.encoding=UTF-8 -classpath /opt/idea-IC-182.5107.16/lib/idea_rt.jar:/opt/idea-IC-182.5107.16/plugins/junit/lib/junit-rt.jar:/opt/idea-IC-182.5107.16/plugins/junit/lib/junit5-rt.jar:/opt/jdk1.8.0_191/jre/lib/charsets.jar:/opt/jdk1.8.0_191/jre/lib/deploy.jar:/opt/jdk1.8.0_191/jre/lib/ext/cldrdata.jar:/opt/jdk1.8.0_191/jre/lib/ext/dnsns.jar:/opt/jdk1.8.0_191/jre/lib/ext/jaccess.jar:/opt/jdk1.8.0_191/jre/lib/ext/jfxrt.jar:/opt/jdk1.8.0_191/jre/lib/ext/localedata.jar:/opt/jdk1.8.0_191/jre/lib/ext/nashorn.jar:/opt/jdk1.8.0_191/jre/lib/ext/sunec.jar:/opt/jdk1.8.0_191/jre/lib/ext/sunjce_provider.jar:/opt/jdk1.8.0_191/jre/lib/ext/sunpkcs11.jar:/opt/jdk1.8.0_191/jre/lib/ext/zipfs.jar:/opt/jdk1.8.0_191/jre/lib/javaws.jar:/opt/jdk1.8.0_191/jre/lib/jce.jar:/opt/jdk1.8.0_191/jre/lib/jfr.jar:/opt/jdk1.8.0_191/jre/lib/jfxswt.jar:/opt/jdk1.8.0_191/jre/lib/jsse.jar:/opt/jdk1.8.0_191/jre/lib/management-agent.jar:/opt/jdk1.8.0_191/jre/lib/plugin.jar:/opt/jdk1.8.0_191/jre/lib/resources.jar:/opt/jdk1.8.0_191/jre/lib/rt.jar:/home/home/work/ignite/modules/core/target/test-classes:/home/home/work/ignite/modules/core/target/classes:/home/home/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar:/home/home/.m2/repository/org/jetbrains/annotations/16.0.3/annotations-16.0.3.jar:/home/home/.m2/repository/mx4j/mx4j-tools/3.0.1/mx4j-tools-3.0.1.jar:/home/home/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/home/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar:/home/home/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/home/.m2/repository/com/thoughtworks/xstream/xstream/1.4.8/xstream-1.4.8.jar:/home/home/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/home/home/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar:/home/home/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/home/.m2/repository/org/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/home/home/.m2/repository/com/h2database/h2/1.4.197/h2-1.4.197.jar:/home/home/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-servlets/9.4.11.v20180605/jetty-servlets-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-continuation/9.4.11.v20180605/jetty-continuation-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-http/9.4.11.v20180605/jetty-http-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-util/9.4.11.v20180605/jetty-util-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-io/9.4.11.v20180605/jetty-io-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-webapp/9.4.11.v20180605/jetty-webapp-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-xml/9.4.11.v20180605/jetty-xml-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-servlet/9.4.11.v20180605/jetty-servlet-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-security/9.4.11.v20180605/jetty-security-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-server/9.4.11.v20180605/jetty-server-9.4.11.v20180605.jar:/home/home/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/home/.m2/repository/com/esotericsoftware/kryo/kryo/2.20/kryo-2.20.jar:/home/home/.m2/repository/com/esotericsoftware/reflectasm/reflectasm/1.07/reflectasm-1.07-shaded.jar:/home/home/.m2/repository/org/ow2/asm/asm/4.0/asm-4.0.jar:/home/home/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/home/home/.m2/repository/org/objenesis/objenesis/1.2/objenesis-1.2.jar:/home/home/.m2/repository/c3p0/c3p0/0.9.1/c3p0-0.9.1.jar:/home/home/.m2/repository/org/gridgain/ignite-shmem/1.0.0/ignite-shmem-1.0.0.jar:/home/home/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/home/.m2/repository/org/springframework/spring-beans/4.3.18.RELEASE/spring-beans-4.3.18.RELEASE.jar:/home/home/.m2/repository/org/springframework/spring-core/4.3.18.RELEASE/spring-core-4.3.18.RELEASE.jar:/home/home/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/home/.m2/repository/org/springframework/spring-context/4.3.18.RELEASE/spring-context-4.3.18.RELEASE.jar:/home/home/.m2/repository/org/springframework/spring-aop/4.3.18.RELEASE/spring-aop-4.3.18.RELEASE.jar:/home/home/.m2/repository/org/springframework/spring-expression/4.3.18.RELEASE/spring-expression-4.3.18.RELEASE.jar:/home/home/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/home/.m2/repository/org/apache/ignite/binary/test1/1.1/test1-1.1.jar:/home/home/.m2/repository/org/apache/ignite/binary/test2/1.1/test2-1.1.jar:/home/home/.m2/repository/com/google/guava/guava/25.1-jre/guava-25.1-jre.jar:/home/home/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/home/.m2/repository/org/checkerframework/checker-qual/2.0.0/checker-qual-2.0.0.jar:/home/home/.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar:/home/home/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/home/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/home/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/home/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/home/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/opt/jdk1.8.0_191/lib/tools.jar com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 org.apache.ignite.internal.processors.cache.ClientReconnectSelfTest
Configured log4j from: /home/home/work/ignite/modules/core/src/test/config/log4j-test.xml[2018-12-11 02:05:54,971][INFO ][main][root] >>> Starting test class: ClientReconnectSelfTest <<<
[2018-12-11 02:05:55,145][INFO ][main][root] >>> Starting test: ClientReconnectSelfTest#testReconnect <<<
[2018-12-11 02:05:55,714][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>>    __________  ________________  
>>>   /  _/ ___/ |/ /  _/_  __/ __/  
>>>  _/ // (7 7    // /  / / / _/    
>>> /___/\___/_/|_/___/ /_/ /___/   
>>> 
>>> ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d4
>>> 2018 Copyright(C) Apache Software Foundation
>>> 
>>> Ignite documentation: http://ignite.apache.org

[2018-12-11 02:05:55,722][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Config URL: n/a
[2018-12-11 02:05:55,834][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] IgniteConfiguration [igniteInstanceName=cache.ClientReconnectSelfTest0, pubPoolSize=8, svcPoolSize=8, callbackPoolSize=8, stripedPoolSize=8, sysPoolSize=8, mgmtPoolSize=4, igfsPoolSize=8, dataStreamerPoolSize=8, utilityCachePoolSize=8, utilityCacheKeepAliveTime=60000, p2pPoolSize=2, qryPoolSize=8, igniteHome=/home/home/work/ignite, igniteWorkDir=/home/home/work/ignite/work, mbeanSrv=com.sun.jmx.mbeanserver.JmxMBeanServer@23223dd8, nodeId=d6c7eafb-10f2-466d-946c-baf3fc800000, marsh=BinaryMarshaller [], marshLocJobs=false, daemon=false, p2pEnabled=true, netTimeout=10000, netCompressionLevel=1, sndRetryDelay=1000, sndRetryCnt=3, metricsHistSize=10000, metricsUpdateFreq=1000, metricsExpTime=9223372036854775807, discoSpi=TcpDiscoverySpi [addrRslvr=null, sockTimeout=0, ackTimeout=0, marsh=null, reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], segPlc=STOP, segResolveAttempts=2, waitForSegOnStart=true, allResolversPassReq=true, segChkFreq=10000, commSpi=TcpCommunicationSpi [connectGate=null, connPlc=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$FirstConnectionPolicy@6500f4b2, enableForcibleNodeKill=false, enableTroubleshootingLog=false, locAddr=null, locHost=null, locPort=45010, locPortRange=100, shmemPort=-1, directBuf=true, directSndBuf=false, idleConnTimeout=600000, connTimeout=5000, maxConnTimeout=600000, reconCnt=10, sockSndBuf=32768, sockRcvBuf=32768, msgQueueLimit=0, slowClientQueueLimit=0, nioSrvr=null, shmemSrv=null, usePairedConnections=false, connectionsPerNode=1, tcpNoDelay=true, filterReachableAddresses=false, ackSndThreshold=32, unackedMsgsBufSize=0, sockWriteTimeout=2000, boundTcpPort=-1, boundTcpShmemPort=-1, selectorsCnt=4, selectorSpins=0, addrRslvr=null, ctxInitLatch=java.util.concurrent.CountDownLatch@2e7eee8c[Count = 1], stopping=false], evtSpi=MemoryEventStorageSpi [expireAgeMs=9223372036854775807, expireCnt=10000, filter=null], colSpi=NoopCollisionSpi [], deploySpi=LocalDeploymentSpi [], indexingSpi=org.apache.ignite.spi.indexing.noop.NoopIndexingSpi@53a7e4a1, addrRslvr=null, encryptionSpi=org.apache.ignite.spi.encryption.noop.NoopEncryptionSpi@6e39d05d, clientMode=false, rebalanceThreadPoolSize=1, txCfg=TransactionConfiguration [txSerEnabled=false, dfltIsolation=REPEATABLE_READ, dfltConcurrency=PESSIMISTIC, dfltTxTimeout=0, txTimeoutOnPartitionMapExchange=0, pessimisticTxLogSize=0, pessimisticTxLogLinger=10000, tmLookupClsName=null, txManagerFactory=null, useJtaSync=false], cacheSanityCheckEnabled=true, discoStartupDelay=60000, deployMode=SHARED, p2pMissedCacheSize=100, locHost=127.0.0.1, timeSrvPortBase=31100, timeSrvPortRange=100, failureDetectionTimeout=10000, sysWorkerBlockedTimeout=null, clientFailureDetectionTimeout=10000, metricsLogFreq=0, hadoopCfg=null, connectorCfg=null, odbcCfg=null, warmupClos=null, atomicCfg=AtomicConfiguration [seqReserveSize=1000, cacheMode=PARTITIONED, backups=1, aff=null, grpName=null], classLdr=null, sslCtxFactory=null, platformCfg=null, binaryCfg=null, memCfg=null, pstCfg=null, dsCfg=DataStorageConfiguration [sysRegionInitSize=41943040, sysRegionMaxSize=104857600, pageSize=0, concLvl=0, dfltDataRegConf=DataRegionConfiguration [name=default, maxSize=3301543116, initSize=268435456, swapPath=null, pageEvictionMode=DISABLED, evictionThreshold=0.9, emptyPagesPoolSize=100, metricsEnabled=false, metricsSubIntervalCount=5, metricsRateTimeInterval=60000, persistenceEnabled=false, checkpointPageBufSize=0], dataRegions=null, storagePath=null, checkpointFreq=180000, lockWaitTime=10000, checkpointThreads=4, checkpointWriteOrder=SEQUENTIAL, walHistSize=20, maxWalArchiveSize=1073741824, walSegments=10, walSegmentSize=67108864, walPath=db/wal, walArchivePath=db/wal/archive, metricsEnabled=false, walMode=LOG_ONLY, walTlbSize=131072, walBuffSize=0, walFlushFreq=2000, walFsyncDelay=1000, walRecordIterBuffSize=67108864, alwaysWriteFullPages=false, fileIOFactory=org.apache.ignite.internal.processors.cache.persistence.file.AsyncFileIOFactory@3eac8620, metricsSubIntervalCnt=5, metricsRateTimeInterval=60000, walAutoArchiveAfterInactivity=-1, writeThrottlingEnabled=false, walCompactionEnabled=false, walCompactionLevel=1, checkpointReadLockTimeout=null], activeOnStart=true, autoActivation=true, longQryWarnTimeout=3000, sqlConnCfg=null, cliConnCfg=ClientConnectorConfiguration [host=null, port=10800, portRange=100, sockSndBufSize=0, sockRcvBufSize=0, tcpNoDelay=true, maxOpenCursorsPerConn=128, threadPoolSize=8, idleTimeout=0, jdbcEnabled=true, odbcEnabled=true, thinCliEnabled=true, sslEnabled=false, useIgniteSslCtxFactory=true, sslClientAuth=false, sslCtxFactory=null], mvccVacuumThreadCnt=2, mvccVacuumFreq=5000, authEnabled=false, failureHnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]], commFailureRslvr=null]
[2018-12-11 02:05:55,836][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Daemon mode: off
[2018-12-11 02:05:55,837][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] OS: Linux 4.15.0-42-generic amd64
[2018-12-11 02:05:55,837][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] OS user: home
[2018-12-11 02:05:55,847][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] PID: 5835
[2018-12-11 02:05:55,848][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Language runtime: Java Platform API Specification ver. 1.8
[2018-12-11 02:05:55,849][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM information: Java(TM) SE Runtime Environment 1.8.0_191-b12 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.191-b12
[2018-12-11 02:05:55,852][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM total memory: 3.4GB
[2018-12-11 02:05:55,853][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Remote Management [restart: off, REST: off, JMX (remote: off)]
[2018-12-11 02:05:55,854][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Logger: GridTestLog4jLogger [quiet=false, config=null]
[2018-12-11 02:05:55,854][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] IGNITE_HOME=/home/home/work/ignite
[2018-12-11 02:05:55,855][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM arguments: [-ea, -Didea.test.cyclic.buffer.size=102424576, -javaagent:/opt/idea-IC-182.5107.16/lib/idea_rt.jar=34053:/opt/idea-IC-182.5107.16/bin, -Dfile.encoding=UTF-8]
[2018-12-11 02:05:55,856][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] System cache's DataRegion size is configured to 40 MB. Use DataStorageConfiguration.systemRegionInitialSize property to change the setting.
[2018-12-11 02:05:55,857][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Configured caches [in 'sysMemPlc' dataRegion: ['ignite-sys-cache'], in 'default' dataRegion: ['default']]
[2018-12-11 02:05:55,858][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Peer class loading is enabled (disable it in production for performance and deployment consistency reasons)
[2018-12-11 02:05:55,859][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Please set system property '-Djava.net.preferIPv4Stack=true' to avoid possible problems in mixed environments.
[2018-12-11 02:05:55,882][WARN ][pub-#23%cache.ClientReconnectSelfTest0%][GridDiagnostic] Initial heap size is 246MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[2018-12-11 02:05:55,881][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 3-rd party licenses can be found at: /home/home/work/ignite/libs/licenses
[2018-12-11 02:05:55,961][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] Configured plugins:
[2018-12-11 02:05:55,962][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- TestReconnectPlugin 1.0
[2018-12-11 02:05:55,962][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:05:55,962][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:05:55,962][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- StanByClusterTestProvider 1.0
[2018-12-11 02:05:55,962][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- null
[2018-12-11 02:05:55,963][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:05:55,963][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- PageMemory tracker plugin 1.0
[2018-12-11 02:05:55,963][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:05:55,963][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:05:55,964][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][FailureProcessor] Configured failure handler: [hnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]]]

[2018-12-11 02:05:56,098][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[2018-12-11 02:05:56,096][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Successfully bound communication NIO server to TCP port [port=45010, locHost=/127.0.0.1, selectorsCnt=4, selectorSpins=0, pairedConn=false]
[2018-12-11 02:05:56,258][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCollisionManager] Collision resolution is disabled (all jobs will be activated upon arrival).
[2018-12-11 02:05:56,287][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Security status [authentication=off, tls/ssl=off]
[2018-12-11 02:05:56,602][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteCacheDatabaseSharedManager] DataRegionConfiguration.maxWalArchiveSize instead DataRegionConfiguration.walHistorySize would be used for removing old archive wal files
[2018-12-11 02:05:56,611][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteCacheDatabaseSharedManager] Configured data regions initialized successfully [total=3]
[2018-12-11 02:05:56,699][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][PartitionsEvictManager] Evict partition permits=2
[2018-12-11 02:05:56,761][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientListenerProcessor] Client connector processor has started on TCP port 10800
[2018-12-11 02:05:56,837][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Non-loopback local IPs: 192.168.31.180, fe80:0:0:0:3e1e:a1db:8101:16f8%wlp0s20f3
[2018-12-11 02:05:56,837][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Enabled local MACs: 645D86A76B6F
[2018-12-11 02:05:56,898][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TestTcpDiscoverySpi] Connection check threshold is calculated: 10000
[2018-12-11 02:05:56,901][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TestTcpDiscoverySpi] Successfully bound to TCP port [port=47500, localHost=/127.0.0.1, locNodeId=d6c7eafb-10f2-466d-946c-baf3fc800000]
[2018-12-11 02:05:56,925][INFO ][disco-notifier-worker-#37%cache.ClientReconnectSelfTest0%][MvccProcessorImpl] Assigned mvcc coordinator [crd=MvccCoordinator [nodeId=d6c7eafb-10f2-466d-946c-baf3fc800000, crdVer=1544483156905, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]], crdNode=TcpDiscoveryNode [id=d6c7eafb-10f2-466d-946c-baf3fc800000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483156894, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=false]]
[2018-12-11 02:05:56,925][INFO ][disco-notifier-worker-#37%cache.ClientReconnectSelfTest0%][MvccProcessorImpl] Initialize local node as mvcc coordinator [node=d6c7eafb-10f2-466d-946c-baf3fc800000, crdVer=1544483156905]
[2018-12-11 02:05:56,949][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], crd=true, evt=NODE_JOINED, evtNode=d6c7eafb-10f2-466d-946c-baf3fc800000, customEvt=null, allowMerge=false]
[2018-12-11 02:05:56,976][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][IgniteCacheDatabaseSharedManager] Configured data regions started successfully [total=3]
[2018-12-11 02:05:56,976][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][msg] Components activation performed in 27 ms.
[2018-12-11 02:05:57,133][INFO ][sys-#43%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Started cache [name=default, id=1544803905, dataRegionName=default, mode=PARTITIONED, atomicity=TRANSACTIONAL, backups=1, mvcc=false]
[2018-12-11 02:05:57,133][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Started cache [name=ignite-sys-cache, id=-2100569601, dataRegionName=sysMemPlc, mode=REPLICATED, atomicity=TRANSACTIONAL, backups=2147483647, mvcc=false]
[2018-12-11 02:05:57,154][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Starting caches on local join performed in 182 ms.
[2018-12-11 02:05:57,159][INFO ][sys-#47%cache.ClientReconnectSelfTest0%][GridAffinityAssignmentCache] Local node affinity assignment distribution is not ideal [cache=default, expectedPrimary=32,00, actualPrimary=32, expectedBackups=32,00, actualBackups=0, warningThreshold=50,00%]
[2018-12-11 02:05:57,166][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Skipped waiting for partitions release future (local node is joining) [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]]
[2018-12-11 02:05:57,218][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] finishExchangeOnCoordinator [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]]
[2018-12-11 02:05:57,218][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Affinity changes (coordinator) applied in 0 ms.
[2018-12-11 02:05:57,224][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Partitions validation performed in 6 ms.
[2018-12-11 02:05:57,226][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Partitions assignment performed in 2 ms.
[2018-12-11 02:05:57,238][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Preparing Full Message performed in 11 ms.
[2018-12-11 02:05:57,238][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], err=null]
[2018-12-11 02:05:57,239][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Detecting lost partitions performed in 1 ms.
[2018-12-11 02:05:57,250][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Finish proxy initialization, cacheName=default, localNodeId=d6c7eafb-10f2-466d-946c-baf3fc800000
[2018-12-11 02:05:57,251][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Finish proxy initialization, cacheName=ignite-sys-cache, localNodeId=d6c7eafb-10f2-466d-946c-baf3fc800000
[2018-12-11 02:05:57,251][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Completed partition exchange [localNode=d6c7eafb-10f2-466d-946c-baf3fc800000, exchange=GridDhtPartitionsExchangeFuture [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], evt=NODE_JOINED, evtNode=TcpDiscoveryNode [id=d6c7eafb-10f2-466d-946c-baf3fc800000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483156894, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=false], done=true], topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], durationFromInit=305]
[2018-12-11 02:05:57,252][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], crd=true]
[2018-12-11 02:05:57,257][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=1, minorTopVer=0], force=false, evt=NODE_JOINED, node=d6c7eafb-10f2-466d-946c-baf3fc800000]
[2018-12-11 02:05:57,294][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Performance suggestions for grid 'cache.ClientReconnectSelfTest0' (fix if possible)
[2018-12-11 02:05:57,294][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[2018-12-11 02:05:57,294][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable checkpoints (remove 'checkpointSpi' from configuration)
[2018-12-11 02:05:57,294][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[2018-12-11 02:05:57,294][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[2018-12-11 02:05:57,294][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:05:57,294][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:05:57,295][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[2018-12-11 02:05:57,295][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Decrease number of backups (set 'backups' to 0)
[2018-12-11 02:05:57,295][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Enable ATOMIC mode if not using transactions (set 'atomicityMode' to ATOMIC)
[2018-12-11 02:05:57,295][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable fully synchronous writes (set 'writeSynchronizationMode' to PRIMARY_SYNC or FULL_ASYNC)
[2018-12-11 02:05:57,295][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable assertions (remove '-ea' from JVM options)
[2018-12-11 02:05:57,295][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[2018-12-11 02:05:57,295][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 
[2018-12-11 02:05:57,295][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[2018-12-11 02:05:57,296][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Data Regions Configured:
[2018-12-11 02:05:57,297][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- default [initSize=256,0 MiB, maxSize=3,1 GiB, persistence=false]
[2018-12-11 02:05:57,297][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>> +-------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a
>>> +-------------------------------------------------------------------------------+
>>> OS name: Linux 4.15.0-42-generic amd64
>>> CPU(s): 8
>>> Heap: 3.4GB
>>> VM name: 5835@home-G5-5587
>>> Ignite instance name: cache.ClientReconnectSelfTest0
>>> Local node [ID=D6C7EAFB-10F2-466D-946C-BAF3FC800000, order=1, clientMode=false]
>>> Local node addresses: [127.0.0.1]
>>> Local ports: TCP:10800 TCP:45010 TCP:47500 

[2018-12-11 02:05:57,299][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDiscoveryManager] Topology snapshot [ver=1, locNode=d6c7eafb, servers=1, clients=0, state=ACTIVE, CPUs=8, offheap=3.1GB, heap=3.4GB]
[2018-12-11 02:05:57,300][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] Node started with the following configuration [id=d6c7eafb-10f2-466d-946c-baf3fc800000, marshaller=BinaryMarshaller [], discovery=TcpDiscoverySpi [addrRslvr=null, sockTimeout=5000, ackTimeout=5000, marsh=JdkMarshaller [clsFilter=org.apache.ignite.marshaller.MarshallerUtils$1@6ab58d41], reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], binaryCfg=null, lateAff=true]
[2018-12-11 02:05:57,304][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] awaitPartitionMapExchange finished
[2018-12-11 02:05:57,315][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 

>>>    __________  ________________  
>>>   /  _/ ___/ |/ /  _/_  __/ __/  
>>>  _/ // (7 7    // /  / / / _/    
>>> /___/\___/_/|_/___/ /_/ /___/   
>>> 
>>> ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d4
>>> 2018 Copyright(C) Apache Software Foundation
>>> 
>>> Ignite documentation: http://ignite.apache.org

[2018-12-11 02:05:57,315][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Config URL: n/a
[2018-12-11 02:05:57,316][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] IgniteConfiguration [igniteInstanceName=client, pubPoolSize=8, svcPoolSize=8, callbackPoolSize=8, stripedPoolSize=8, sysPoolSize=8, mgmtPoolSize=4, igfsPoolSize=8, dataStreamerPoolSize=8, utilityCachePoolSize=8, utilityCacheKeepAliveTime=60000, p2pPoolSize=2, qryPoolSize=8, igniteHome=/home/home/work/ignite, igniteWorkDir=/home/home/work/ignite/work, mbeanSrv=com.sun.jmx.mbeanserver.JmxMBeanServer@23223dd8, nodeId=b40917ca-ac62-4c5a-90a2-58db32c270de, marsh=BinaryMarshaller [], marshLocJobs=false, daemon=false, p2pEnabled=true, netTimeout=10000, netCompressionLevel=1, sndRetryDelay=1000, sndRetryCnt=3, metricsHistSize=10000, metricsUpdateFreq=1000, metricsExpTime=9223372036854775807, discoSpi=TcpDiscoverySpi [addrRslvr=null, sockTimeout=0, ackTimeout=0, marsh=null, reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], segPlc=STOP, segResolveAttempts=2, waitForSegOnStart=true, allResolversPassReq=true, segChkFreq=10000, commSpi=TcpCommunicationSpi [connectGate=null, connPlc=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$FirstConnectionPolicy@30af66fa, enableForcibleNodeKill=false, enableTroubleshootingLog=false, locAddr=null, locHost=null, locPort=45010, locPortRange=100, shmemPort=-1, directBuf=true, directSndBuf=false, idleConnTimeout=600000, connTimeout=5000, maxConnTimeout=600000, reconCnt=10, sockSndBuf=32768, sockRcvBuf=32768, msgQueueLimit=0, slowClientQueueLimit=0, nioSrvr=null, shmemSrv=null, usePairedConnections=false, connectionsPerNode=1, tcpNoDelay=true, filterReachableAddresses=false, ackSndThreshold=32, unackedMsgsBufSize=0, sockWriteTimeout=2000, boundTcpPort=-1, boundTcpShmemPort=-1, selectorsCnt=4, selectorSpins=0, addrRslvr=null, ctxInitLatch=java.util.concurrent.CountDownLatch@5aabda4[Count = 1], stopping=false], evtSpi=MemoryEventStorageSpi [expireAgeMs=9223372036854775807, expireCnt=10000, filter=null], colSpi=NoopCollisionSpi [], deploySpi=LocalDeploymentSpi [], indexingSpi=org.apache.ignite.spi.indexing.noop.NoopIndexingSpi@59c13f51, addrRslvr=null, encryptionSpi=org.apache.ignite.spi.encryption.noop.NoopEncryptionSpi@41e57dd4, clientMode=true, rebalanceThreadPoolSize=1, txCfg=TransactionConfiguration [txSerEnabled=false, dfltIsolation=REPEATABLE_READ, dfltConcurrency=PESSIMISTIC, dfltTxTimeout=0, txTimeoutOnPartitionMapExchange=0, pessimisticTxLogSize=0, pessimisticTxLogLinger=10000, tmLookupClsName=null, txManagerFactory=null, useJtaSync=false], cacheSanityCheckEnabled=true, discoStartupDelay=60000, deployMode=SHARED, p2pMissedCacheSize=100, locHost=127.0.0.1, timeSrvPortBase=31100, timeSrvPortRange=100, failureDetectionTimeout=10000, sysWorkerBlockedTimeout=null, clientFailureDetectionTimeout=10000, metricsLogFreq=0, hadoopCfg=null, connectorCfg=null, odbcCfg=null, warmupClos=null, atomicCfg=AtomicConfiguration [seqReserveSize=1000, cacheMode=PARTITIONED, backups=1, aff=null, grpName=null], classLdr=null, sslCtxFactory=null, platformCfg=null, binaryCfg=null, memCfg=null, pstCfg=null, dsCfg=null, activeOnStart=true, autoActivation=true, longQryWarnTimeout=3000, sqlConnCfg=null, cliConnCfg=ClientConnectorConfiguration [host=null, port=10800, portRange=100, sockSndBufSize=0, sockRcvBufSize=0, tcpNoDelay=true, maxOpenCursorsPerConn=128, threadPoolSize=8, idleTimeout=0, jdbcEnabled=true, odbcEnabled=true, thinCliEnabled=true, sslEnabled=false, useIgniteSslCtxFactory=true, sslClientAuth=false, sslCtxFactory=null], mvccVacuumThreadCnt=2, mvccVacuumFreq=5000, authEnabled=false, failureHnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]], commFailureRslvr=null]
[2018-12-11 02:05:57,316][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Daemon mode: off
[2018-12-11 02:05:57,316][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] OS: Linux 4.15.0-42-generic amd64
[2018-12-11 02:05:57,316][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] OS user: home
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] PID: 5835
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Language runtime: Java Platform API Specification ver. 1.8
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] VM information: Java(TM) SE Runtime Environment 1.8.0_191-b12 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.191-b12
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] VM total memory: 3.4GB
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Remote Management [restart: off, REST: off, JMX (remote: off)]
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Logger: GridTestLog4jLogger [quiet=false, config=null]
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] IGNITE_HOME=/home/home/work/ignite
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] VM arguments: [-ea, -Didea.test.cyclic.buffer.size=102424576, -javaagent:/opt/idea-IC-182.5107.16/lib/idea_rt.jar=34053:/opt/idea-IC-182.5107.16/bin, -Dfile.encoding=UTF-8]
[2018-12-11 02:05:57,317][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Configured caches [in 'sysMemPlc' dataRegion: ['ignite-sys-cache']]
[2018-12-11 02:05:57,318][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Peer class loading is enabled (disable it in production for performance and deployment consistency reasons)
[2018-12-11 02:05:57,318][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Please set system property '-Djava.net.preferIPv4Stack=true' to avoid possible problems in mixed environments.
[2018-12-11 02:05:57,321][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 3-rd party licenses can be found at: /home/home/work/ignite/libs/licenses
[2018-12-11 02:05:57,321][WARN ][pub-#71%client%][GridDiagnostic] Initial heap size is 246MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] Configured plugins:
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- TestReconnectPlugin 1.0
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- StanByClusterTestProvider 1.0
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- null
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- PageMemory tracker plugin 1.0
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:05:57,328][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:05:57,329][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][FailureProcessor] Configured failure handler: [hnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]]]
[2018-12-11 02:05:57,334][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[2018-12-11 02:05:57,334][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Successfully bound communication NIO server to TCP port [port=45011, locHost=/127.0.0.1, selectorsCnt=4, selectorSpins=0, pairedConn=false]
[2018-12-11 02:05:57,340][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCollisionManager] Collision resolution is disabled (all jobs will be activated upon arrival).
[2018-12-11 02:05:57,340][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Security status [authentication=off, tls/ssl=off]
[2018-12-11 02:05:57,348][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][PartitionsEvictManager] Evict partition permits=2
[2018-12-11 02:05:57,354][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientListenerProcessor] Client connector processor has started on TCP port 10801
[2018-12-11 02:05:57,359][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Non-loopback local IPs: 192.168.31.180, fe80:0:0:0:3e1e:a1db:8101:16f8%wlp0s20f3
[2018-12-11 02:05:57,359][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Enabled local MACs: 645D86A76B6F
[2018-12-11 02:05:57,372][INFO ][tcp-disco-srvr-#4%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery accepted incoming connection [rmtAddr=/127.0.0.1, rmtPort=54243]
[2018-12-11 02:05:57,384][INFO ][tcp-disco-srvr-#4%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery spawning a new thread for connection [rmtAddr=/127.0.0.1, rmtPort=54243]
[2018-12-11 02:05:57,385][INFO ][tcp-disco-sock-reader-#11%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Started serving remote node connection [rmtAddr=/127.0.0.1:54243, rmtPort=54243]
[2018-12-11 02:05:57,448][INFO ][disco-event-worker-#38%cache.ClientReconnectSelfTest0%][GridDiscoveryManager] Added new node to topology: TcpDiscoveryNode [id=b40917ca-ac62-4c5a-90a2-58db32c270de, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1544483157411, loc=false, ver=2.7.0#20181203-sha1:d19123d4, isClient=true]
[2018-12-11 02:05:57,449][INFO ][disco-event-worker-#38%cache.ClientReconnectSelfTest0%][GridDiscoveryManager] Topology snapshot [ver=2, locNode=d6c7eafb, servers=1, clients=1, state=ACTIVE, CPUs=8, offheap=3.1GB, heap=3.4GB]
[2018-12-11 02:05:57,451][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], crd=true, evt=NODE_JOINED, evtNode=b40917ca-ac62-4c5a-90a2-58db32c270de, customEvt=null, allowMerge=true]
[2018-12-11 02:05:57,457][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], err=null]
[2018-12-11 02:05:57,460][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Completed partition exchange [localNode=d6c7eafb-10f2-466d-946c-baf3fc800000, exchange=GridDhtPartitionsExchangeFuture [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], evt=NODE_JOINED, evtNode=TcpDiscoveryNode [id=b40917ca-ac62-4c5a-90a2-58db32c270de, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1544483157411, loc=false, ver=2.7.0#20181203-sha1:d19123d4, isClient=true], done=true], topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], durationFromInit=10]
[2018-12-11 02:05:57,460][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], crd=true]
[2018-12-11 02:05:57,462][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=2, minorTopVer=0], force=false, evt=NODE_JOINED, node=b40917ca-ac62-4c5a-90a2-58db32c270de]
[2018-12-11 02:05:57,470][INFO ][disco-notifier-worker-#85%client%][MvccProcessorImpl] Assigned mvcc coordinator [crd=MvccCoordinator [nodeId=d6c7eafb-10f2-466d-946c-baf3fc800000, crdVer=1544483156905, topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0]], crdNode=TcpDiscoveryNode [id=d6c7eafb-10f2-466d-946c-baf3fc800000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483157452, loc=false, ver=2.7.0#20181203-sha1:d19123d4, isClient=false]]
[2018-12-11 02:05:57,475][INFO ][exchange-worker-#87%client%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], crd=false, evt=NODE_JOINED, evtNode=b40917ca-ac62-4c5a-90a2-58db32c270de, customEvt=null, allowMerge=true]
[2018-12-11 02:05:57,475][INFO ][exchange-worker-#87%client%][msg] Components activation performed in 0 ms.
[2018-12-11 02:05:57,481][INFO ][exchange-worker-#87%client%][GridCacheProcessor] Started cache [name=ignite-sys-cache, id=-2100569601, dataRegionName=sysMemPlc, mode=REPLICATED, atomicity=TRANSACTIONAL, backups=2147483647, mvcc=false]
[2018-12-11 02:05:57,481][INFO ][exchange-worker-#87%client%][GridCacheProcessor] Starting caches on local join performed in 0 ms.
[2018-12-11 02:05:57,490][INFO ][grid-nio-worker-tcp-comm-0-#25%cache.ClientReconnectSelfTest0%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/127.0.0.1:45010, rmtAddr=/127.0.0.1:43278]
[2018-12-11 02:05:57,501][INFO ][grid-nio-worker-tcp-comm-0-#73%client%][TcpCommunicationSpi] Established outgoing communication connection [locAddr=/127.0.0.1:43278, rmtAddr=/127.0.0.1:45010]
[2018-12-11 02:05:57,501][INFO ][exchange-worker-#87%client%][GridDhtPartitionsExchangeFuture] Sending Single Message performed in 19 ms.
[2018-12-11 02:05:57,502][INFO ][exchange-worker-#87%client%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], crd=false]
[2018-12-11 02:05:57,530][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Received full message, will finish exchange [node=d6c7eafb-10f2-466d-946c-baf3fc800000, resVer=AffinityTopologyVersion [topVer=2, minorTopVer=0]]
[2018-12-11 02:05:57,536][INFO ][sys-#88%client%][CacheAffinitySharedManager] Affinity initialization on local join performed in 6 ms.
[2018-12-11 02:05:57,536][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Affinity changes applied in 6 ms.
[2018-12-11 02:05:57,538][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Full map updating for 2 groups performed in 2 ms.
[2018-12-11 02:05:57,538][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], err=null]
[2018-12-11 02:05:57,538][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Detecting lost partitions performed in 0 ms.
[2018-12-11 02:05:57,539][INFO ][sys-#88%client%][GridCacheProcessor] Finish proxy initialization, cacheName=ignite-sys-cache, localNodeId=b40917ca-ac62-4c5a-90a2-58db32c270de
[2018-12-11 02:05:57,539][INFO ][exchange-worker-#87%client%][GridCachePartitionExchangeManager] Skipping rebalancing (no affinity changes) [top=AffinityTopologyVersion [topVer=2, minorTopVer=0], rebTopVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], evt=NODE_JOINED, evtNode=b40917ca-ac62-4c5a-90a2-58db32c270de, client=true]
[2018-12-11 02:05:57,539][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Completed partition exchange [localNode=b40917ca-ac62-4c5a-90a2-58db32c270de, exchange=GridDhtPartitionsExchangeFuture [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], evt=NODE_JOINED, evtNode=TcpDiscoveryNode [id=b40917ca-ac62-4c5a-90a2-58db32c270de, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:0], discPort=0, order=2, intOrder=0, lastExchangeTime=1544483157361, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=true], done=true], topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], durationFromInit=61]
[2018-12-11 02:05:57,554][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Performance suggestions for grid 'client' (fix if possible)
[2018-12-11 02:05:57,554][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[2018-12-11 02:05:57,554][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Disable checkpoints (remove 'checkpointSpi' from configuration)
[2018-12-11 02:05:57,554][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[2018-12-11 02:05:57,554][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[2018-12-11 02:05:57,554][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:05:57,555][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:05:57,555][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[2018-12-11 02:05:57,555][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Disable assertions (remove '-ea' from JVM options)
[2018-12-11 02:05:57,555][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[2018-12-11 02:05:57,555][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 
[2018-12-11 02:05:57,555][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[2018-12-11 02:05:57,555][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 

>>> +-------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a
>>> +-------------------------------------------------------------------------------+
>>> OS name: Linux 4.15.0-42-generic amd64
>>> CPU(s): 8
>>> Heap: 3.4GB
>>> VM name: 5835@home-G5-5587
>>> Ignite instance name: client
>>> Local node [ID=B40917CA-AC62-4C5A-90A2-58DB32C270DE, order=2, clientMode=true]
>>> Local node addresses: [127.0.0.1]
>>> Local ports: TCP:10801 TCP:45011 

[2018-12-11 02:05:57,556][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDiscoveryManager] Topology snapshot [ver=2, locNode=b40917ca, servers=1, clients=1, state=ACTIVE, CPUs=8, offheap=0.1GB, heap=3.4GB]
[2018-12-11 02:05:57,556][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] Node started with the following configuration [id=b40917ca-ac62-4c5a-90a2-58db32c270de, marshaller=BinaryMarshaller [], discovery=TcpDiscoverySpi [addrRslvr=null, sockTimeout=5000, ackTimeout=5000, marsh=JdkMarshaller [clsFilter=org.apache.ignite.marshaller.MarshallerUtils$1@f6052ec], reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], binaryCfg=null, lateAff=true]
[2018-12-11 02:05:57,556][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] >>> Stopping grid [name=cache.ClientReconnectSelfTest0, id=d6c7eafb-10f2-466d-946c-baf3fc800000]
[2018-12-11 02:05:57,574][INFO ][tcp-disco-sock-reader-#11%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Finished serving remote node connection [rmtAddr=/127.0.0.1:54243, rmtPort=54243
[2018-12-11 02:05:57,576][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=default]
[2018-12-11 02:05:57,577][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=ignite-sys-cache]
[2018-12-11 02:05:57,577][WARN ][tcp-client-disco-reconnector-#13%client%][TestTcpDiscoverySpi] Failed to connect to any address from IP finder (will retry to join topology every 2000 ms; change 'reconnectDelay' to configure the frequency of retries): [/127.0.0.1:47500]
[2018-12-11 02:05:57,593][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Removed undeployed class: GridDeployment [ts=1544483157462, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@18b4aac2, clsLdrId=b9eae5a9761-d6c7eafb-10f2-466d-946c-baf3fc800000, userVer=0, loc=true, sampleClsName=org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceDeploymentPredicate, pendingUndeploy=false, undeployed=true, usage=0]
[2018-12-11 02:05:57,594][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceAssignmentsPredicate
[2018-12-11 02:05:57,594][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceDeploymentPredicate
[2018-12-11 02:05:57,621][WARN ][tcp-comm-worker-#6%client%][TcpCommunicationSpi] Connect timed out (consider increasing 'failureDetectionTimeout' configuration property) [addr=/127.0.0.1:45010, failureDetectionTimeout=10000]
[2018-12-11 02:05:57,621][WARN ][tcp-comm-worker-#6%client%][TcpCommunicationSpi] Failed to connect to a remote node (make sure that destination node is alive and operating system firewall is disabled on local and remote hosts) [addrs=[/127.0.0.1:45010]]
[2018-12-11 02:05:57,621][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>> +------------------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a stopped OK
>>> +------------------------------------------------------------------------------------------+
>>> Ignite instance name: cache.ClientReconnectSelfTest0
>>> Grid uptime: 00:00:00.321


[2018-12-11 02:05:57,625][ERROR][tcp-client-disco-sock-writer-#8%client%][TestTcpDiscoverySpi] Failed to send message: TcpDiscoveryClientPingRequest [nodeToPing=d6c7eafb-10f2-466d-946c-baf3fc800000, super=TcpDiscoveryAbstractMessage [sndNodeId=null, id=1beae5a9761-b40917ca-ac62-4c5a-90a2-58db32c270de, verifierNodeId=null, topVer=0, pendingIdx=0, failedNodes=null, isClient=false]]
java.net.SocketException: Socket is closed
	at java.net.Socket.getSendBufferSize(Socket.java:1215)
	at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.socketStream(TcpDiscoverySpi.java:1479)
	at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.writeToSocket(TcpDiscoverySpi.java:1605)
	at org.apache.ignite.spi.discovery.tcp.ClientImpl$SocketWriter.body(ClientImpl.java:1362)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:61)
[2018-12-11 02:05:57,646][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>>    __________  ________________  
>>>   /  _/ ___/ |/ /  _/_  __/ __/  
>>>  _/ // (7 7    // /  / / / _/    
>>> /___/\___/_/|_/___/ /_/ /___/   
>>> 
>>> ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d4
>>> 2018 Copyright(C) Apache Software Foundation
>>> 
>>> Ignite documentation: http://ignite.apache.org

[2018-12-11 02:05:57,646][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Config URL: n/a
[2018-12-11 02:05:57,647][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] IgniteConfiguration [igniteInstanceName=cache.ClientReconnectSelfTest0, pubPoolSize=8, svcPoolSize=8, callbackPoolSize=8, stripedPoolSize=8, sysPoolSize=8, mgmtPoolSize=4, igfsPoolSize=8, dataStreamerPoolSize=8, utilityCachePoolSize=8, utilityCacheKeepAliveTime=60000, p2pPoolSize=2, qryPoolSize=8, igniteHome=/home/home/work/ignite, igniteWorkDir=/home/home/work/ignite/work, mbeanSrv=com.sun.jmx.mbeanserver.JmxMBeanServer@23223dd8, nodeId=65ad581d-8078-42c2-aca4-e87dbea00000, marsh=BinaryMarshaller [], marshLocJobs=false, daemon=false, p2pEnabled=true, netTimeout=10000, netCompressionLevel=1, sndRetryDelay=1000, sndRetryCnt=3, metricsHistSize=10000, metricsUpdateFreq=1000, metricsExpTime=9223372036854775807, discoSpi=TcpDiscoverySpi [addrRslvr=null, sockTimeout=0, ackTimeout=0, marsh=null, reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], segPlc=STOP, segResolveAttempts=2, waitForSegOnStart=true, allResolversPassReq=true, segChkFreq=10000, commSpi=TcpCommunicationSpi [connectGate=null, connPlc=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$FirstConnectionPolicy@1e57456b, enableForcibleNodeKill=false, enableTroubleshootingLog=false, locAddr=null, locHost=null, locPort=45010, locPortRange=100, shmemPort=-1, directBuf=true, directSndBuf=false, idleConnTimeout=600000, connTimeout=5000, maxConnTimeout=600000, reconCnt=10, sockSndBuf=32768, sockRcvBuf=32768, msgQueueLimit=0, slowClientQueueLimit=0, nioSrvr=null, shmemSrv=null, usePairedConnections=false, connectionsPerNode=1, tcpNoDelay=true, filterReachableAddresses=false, ackSndThreshold=32, unackedMsgsBufSize=0, sockWriteTimeout=2000, boundTcpPort=-1, boundTcpShmemPort=-1, selectorsCnt=4, selectorSpins=0, addrRslvr=null, ctxInitLatch=java.util.concurrent.CountDownLatch@1622338d[Count = 1], stopping=false], evtSpi=MemoryEventStorageSpi [expireAgeMs=9223372036854775807, expireCnt=10000, filter=null], colSpi=NoopCollisionSpi [], deploySpi=LocalDeploymentSpi [], indexingSpi=org.apache.ignite.spi.indexing.noop.NoopIndexingSpi@2288c1df, addrRslvr=null, encryptionSpi=org.apache.ignite.spi.encryption.noop.NoopEncryptionSpi@471ff25c, clientMode=false, rebalanceThreadPoolSize=1, txCfg=TransactionConfiguration [txSerEnabled=false, dfltIsolation=REPEATABLE_READ, dfltConcurrency=PESSIMISTIC, dfltTxTimeout=0, txTimeoutOnPartitionMapExchange=0, pessimisticTxLogSize=0, pessimisticTxLogLinger=10000, tmLookupClsName=null, txManagerFactory=null, useJtaSync=false], cacheSanityCheckEnabled=true, discoStartupDelay=60000, deployMode=SHARED, p2pMissedCacheSize=100, locHost=127.0.0.1, timeSrvPortBase=31100, timeSrvPortRange=100, failureDetectionTimeout=10000, sysWorkerBlockedTimeout=null, clientFailureDetectionTimeout=10000, metricsLogFreq=0, hadoopCfg=null, connectorCfg=null, odbcCfg=null, warmupClos=null, atomicCfg=AtomicConfiguration [seqReserveSize=1000, cacheMode=PARTITIONED, backups=1, aff=null, grpName=null], classLdr=null, sslCtxFactory=null, platformCfg=null, binaryCfg=null, memCfg=null, pstCfg=null, dsCfg=DataStorageConfiguration [sysRegionInitSize=41943040, sysRegionMaxSize=104857600, pageSize=0, concLvl=0, dfltDataRegConf=DataRegionConfiguration [name=default, maxSize=3301543116, initSize=268435456, swapPath=null, pageEvictionMode=DISABLED, evictionThreshold=0.9, emptyPagesPoolSize=100, metricsEnabled=false, metricsSubIntervalCount=5, metricsRateTimeInterval=60000, persistenceEnabled=false, checkpointPageBufSize=0], dataRegions=null, storagePath=null, checkpointFreq=180000, lockWaitTime=10000, checkpointThreads=4, checkpointWriteOrder=SEQUENTIAL, walHistSize=20, maxWalArchiveSize=1073741824, walSegments=10, walSegmentSize=67108864, walPath=db/wal, walArchivePath=db/wal/archive, metricsEnabled=false, walMode=LOG_ONLY, walTlbSize=131072, walBuffSize=0, walFlushFreq=2000, walFsyncDelay=1000, walRecordIterBuffSize=67108864, alwaysWriteFullPages=false, fileIOFactory=org.apache.ignite.internal.processors.cache.persistence.file.AsyncFileIOFactory@1275553c, metricsSubIntervalCnt=5, metricsRateTimeInterval=60000, walAutoArchiveAfterInactivity=-1, writeThrottlingEnabled=false, walCompactionEnabled=false, walCompactionLevel=1, checkpointReadLockTimeout=null], activeOnStart=true, autoActivation=true, longQryWarnTimeout=3000, sqlConnCfg=null, cliConnCfg=ClientConnectorConfiguration [host=null, port=10800, portRange=100, sockSndBufSize=0, sockRcvBufSize=0, tcpNoDelay=true, maxOpenCursorsPerConn=128, threadPoolSize=8, idleTimeout=0, jdbcEnabled=true, odbcEnabled=true, thinCliEnabled=true, sslEnabled=false, useIgniteSslCtxFactory=true, sslClientAuth=false, sslCtxFactory=null], mvccVacuumThreadCnt=2, mvccVacuumFreq=5000, authEnabled=false, failureHnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]], commFailureRslvr=null]
[2018-12-11 02:05:57,647][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Daemon mode: off
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] OS: Linux 4.15.0-42-generic amd64
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] OS user: home
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] PID: 5835
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Language runtime: Java Platform API Specification ver. 1.8
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM information: Java(TM) SE Runtime Environment 1.8.0_191-b12 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.191-b12
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM total memory: 3.4GB
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Remote Management [restart: off, REST: off, JMX (remote: off)]
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Logger: GridTestLog4jLogger [quiet=false, config=null]
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] IGNITE_HOME=/home/home/work/ignite
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM arguments: [-ea, -Didea.test.cyclic.buffer.size=102424576, -javaagent:/opt/idea-IC-182.5107.16/lib/idea_rt.jar=34053:/opt/idea-IC-182.5107.16/bin, -Dfile.encoding=UTF-8]
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] System cache's DataRegion size is configured to 40 MB. Use DataStorageConfiguration.systemRegionInitialSize property to change the setting.
[2018-12-11 02:05:57,648][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Configured caches [in 'sysMemPlc' dataRegion: ['ignite-sys-cache'], in 'default' dataRegion: ['default']]
[2018-12-11 02:05:57,649][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Peer class loading is enabled (disable it in production for performance and deployment consistency reasons)
[2018-12-11 02:05:57,649][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Please set system property '-Djava.net.preferIPv4Stack=true' to avoid possible problems in mixed environments.
[2018-12-11 02:05:57,651][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 3-rd party licenses can be found at: /home/home/work/ignite/libs/licenses
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] Configured plugins:
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- TestReconnectPlugin 1.0
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 

[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- StanByClusterTestProvider 1.0
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- null
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- PageMemory tracker plugin 1.0
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] [2018-12-11 02:05:57,652][WARN ][pub-#119%cache.ClientReconnectSelfTest0%][GridDiagnostic] Initial heap size is 246MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[2018-12-11 02:05:57,656][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][FailureProcessor] Configured failure handler: [hnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]]]

[2018-12-11 02:05:57,658][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Successfully bound communication NIO server to TCP port [port=45010, locHost=/127.0.0.1, selectorsCnt=4, selectorSpins=0, pairedConn=false][2018-12-11 02:05:57,658][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[2018-12-11 02:05:57,663][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCollisionManager] Collision resolution is disabled (all jobs will be activated upon arrival).
[2018-12-11 02:05:57,664][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Security status [authentication=off, tls/ssl=off]
[2018-12-11 02:05:57,669][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteCacheDatabaseSharedManager] Configured data regions initialized successfully [total=3]
[2018-12-11 02:05:57,669][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][PartitionsEvictManager] Evict partition permits=2
[2018-12-11 02:05:57,680][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientListenerProcessor] Client connector processor has started on TCP port 10800
[2018-12-11 02:05:57,688][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Non-loopback local IPs: 192.168.31.180, fe80:0:0:0:3e1e:a1db:8101:16f8%wlp0s20f3
[2018-12-11 02:05:57,688][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Enabled local MACs: 645D86A76B6F
[2018-12-11 02:05:57,693][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TestTcpDiscoverySpi] Connection check threshold is calculated: 10000
[2018-12-11 02:05:57,693][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TestTcpDiscoverySpi] Successfully bound to TCP port [port=47500, localHost=/127.0.0.1, locNodeId=65ad581d-8078-42c2-aca4-e87dbea00000]
[2018-12-11 02:05:57,702][INFO ][disco-notifier-worker-#133%cache.ClientReconnectSelfTest0%][MvccProcessorImpl] Assigned mvcc coordinator [crd=MvccCoordinator [nodeId=65ad581d-8078-42c2-aca4-e87dbea00000, crdVer=1544483157692, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]], crdNode=TcpDiscoveryNode [id=65ad581d-8078-42c2-aca4-e87dbea00000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483157691, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=false]]
[2018-12-11 02:05:57,702][INFO ][disco-notifier-worker-#133%cache.ClientReconnectSelfTest0%][MvccProcessorImpl] Initialize local node as mvcc coordinator [node=65ad581d-8078-42c2-aca4-e87dbea00000, crdVer=1544483157692]
[2018-12-11 02:05:57,704][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], crd=true, evt=NODE_JOINED, evtNode=65ad581d-8078-42c2-aca4-e87dbea00000, customEvt=null, allowMerge=false]
[2018-12-11 02:05:57,706][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][IgniteCacheDatabaseSharedManager] Configured data regions started successfully [total=3]
[2018-12-11 02:05:57,706][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][msg] Components activation performed in 2 ms.
[2018-12-11 02:05:57,717][INFO ][sys-#139%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Started cache [name=ignite-sys-cache, id=-2100569601, dataRegionName=sysMemPlc, mode=REPLICATED, atomicity=TRANSACTIONAL, backups=2147483647, mvcc=false]
[2018-12-11 02:05:57,717][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Started cache [name=default, id=1544803905, dataRegionName=default, mode=PARTITIONED, atomicity=TRANSACTIONAL, backups=1, mvcc=false]
[2018-12-11 02:05:57,717][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Starting caches on local join performed in 11 ms.
[2018-12-11 02:05:57,719][INFO ][sys-#143%cache.ClientReconnectSelfTest0%][GridAffinityAssignmentCache] Local node affinity assignment distribution is not ideal [cache=default, expectedPrimary=32,00, actualPrimary=32, expectedBackups=32,00, actualBackups=0, warningThreshold=50,00%]
[2018-12-11 02:05:57,720][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Skipped waiting for partitions release future (local node is joining) [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]]
[2018-12-11 02:05:57,739][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] finishExchangeOnCoordinator [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]]
[2018-12-11 02:05:57,739][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Affinity changes (coordinator) applied in 0 ms.
[2018-12-11 02:05:57,740][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Partitions validation performed in 1 ms.
[2018-12-11 02:05:57,740][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Partitions assignment performed in 0 ms.
[2018-12-11 02:05:57,744][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Preparing Full Message performed in 4 ms.
[2018-12-11 02:05:57,744][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], err=null]
[2018-12-11 02:05:57,744][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Detecting lost partitions performed in 0 ms.
[2018-12-11 02:05:57,745][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Finish proxy initialization, cacheName=default, localNodeId=65ad581d-8078-42c2-aca4-e87dbea00000
[2018-12-11 02:05:57,745][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Finish proxy initialization, cacheName=ignite-sys-cache, localNodeId=65ad581d-8078-42c2-aca4-e87dbea00000
[2018-12-11 02:05:57,745][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Completed partition exchange [localNode=65ad581d-8078-42c2-aca4-e87dbea00000, exchange=GridDhtPartitionsExchangeFuture [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], evt=NODE_JOINED, evtNode=TcpDiscoveryNode [id=65ad581d-8078-42c2-aca4-e87dbea00000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483157691, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=false], done=true], topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], durationFromInit=41]
[2018-12-11 02:05:57,746][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], crd=true]
[2018-12-11 02:05:57,747][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=1, minorTopVer=0], force=false, evt=NODE_JOINED, node=65ad581d-8078-42c2-aca4-e87dbea00000]
[2018-12-11 02:05:57,751][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Performance suggestions for grid 'cache.ClientReconnectSelfTest0' (fix if possible)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable checkpoints (remove 'checkpointSpi' from configuration)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Decrease number of backups (set 'backups' to 0)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Enable ATOMIC mode if not using transactions (set 'atomicityMode' to ATOMIC)
[2018-12-11 02:05:57,752][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable fully synchronous writes (set 'writeSynchronizationMode' to PRIMARY_SYNC or FULL_ASYNC)
[2018-12-11 02:05:57,753][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable assertions (remove '-ea' from JVM options)
[2018-12-11 02:05:57,753][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[2018-12-11 02:05:57,753][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 
[2018-12-11 02:05:57,753][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[2018-12-11 02:05:57,753][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Data Regions Configured:
[2018-12-11 02:05:57,753][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- default [initSize=256,0 MiB, maxSize=3,1 GiB, persistence=false]
[2018-12-11 02:05:57,753][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>> +-------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a
>>> +-------------------------------------------------------------------------------+
>>> OS name: Linux 4.15.0-42-generic amd64
>>> CPU(s): 8
>>> Heap: 3.4GB
>>> VM name: 5835@home-G5-5587
>>> Ignite instance name: cache.ClientReconnectSelfTest0
>>> Local node [ID=65AD581D-8078-42C2-ACA4-E87DBEA00000, order=1, clientMode=false]
>>> Local node addresses: [127.0.0.1]
>>> Local ports: TCP:10800 TCP:45010 TCP:47500 

[2018-12-11 02:05:57,754][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDiscoveryManager] Topology snapshot [ver=1, locNode=65ad581d, servers=1, clients=0, state=ACTIVE, CPUs=8, offheap=3.1GB, heap=3.4GB]
[2018-12-11 02:05:57,754][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] Node started with the following configuration [id=65ad581d-8078-42c2-aca4-e87dbea00000, marshaller=BinaryMarshaller [], discovery=TcpDiscoverySpi [addrRslvr=null, sockTimeout=5000, ackTimeout=5000, marsh=JdkMarshaller [clsFilter=org.apache.ignite.marshaller.MarshallerUtils$1@2243240f], reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], binaryCfg=null, lateAff=true]
[2018-12-11 02:05:57,756][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] >>> Stopping grid [name=client, id=b40917ca-ac62-4c5a-90a2-58db32c270de]
[2018-12-11 02:05:59,578][INFO ][tcp-disco-srvr-#17%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery accepted incoming connection [rmtAddr=/127.0.0.1, rmtPort=36181]
[2018-12-11 02:05:59,580][INFO ][tcp-disco-srvr-#17%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery spawning a new thread for connection [rmtAddr=/127.0.0.1, rmtPort=36181]
[2018-12-11 02:05:59,580][INFO ][tcp-disco-sock-reader-#19%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Started serving remote node connection [rmtAddr=/127.0.0.1:36181, rmtPort=36181]
[2018-12-11 02:05:59,590][INFO ][tcp-disco-sock-reader-#19%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Finished serving remote node connection [rmtAddr=/127.0.0.1:36181, rmtPort=36181
[2018-12-11 02:05:59,592][INFO ][tcp-client-disco-msg-worker-#10%client%][TestTcpDiscoverySpi] Client node disconnected from cluster, will try to reconnect with new id [newId=4355e936-b13b-4705-a614-05d00725db0c, prevId=b40917ca-ac62-4c5a-90a2-58db32c270de, locNode=TcpDiscoveryNode [id=b40917ca-ac62-4c5a-90a2-58db32c270de, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:0], discPort=0, order=2, intOrder=0, lastExchangeTime=1544483157361, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=true]]
[2018-12-11 02:05:59,592][INFO ][tcp-disco-srvr-#17%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery accepted incoming connection [rmtAddr=/127.0.0.1, rmtPort=41987]
[2018-12-11 02:05:59,592][INFO ][tcp-disco-srvr-#17%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery spawning a new thread for connection [rmtAddr=/127.0.0.1, rmtPort=41987]
[2018-12-11 02:05:59,592][INFO ][tcp-disco-sock-reader-#21%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Started serving remote node connection [rmtAddr=/127.0.0.1:41987, rmtPort=41987]
[2018-12-11 02:05:59,603][INFO ][tcp-disco-sock-reader-#21%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Finished serving remote node connection [rmtAddr=/127.0.0.1:41987, rmtPort=41987
[2018-12-11 02:05:59,606][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=ignite-sys-cache]
[2018-12-11 02:05:59,607][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Removed undeployed class: GridDeployment [ts=1544483157523, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@18b4aac2, clsLdrId=0aeae5a9761-b40917ca-ac62-4c5a-90a2-58db32c270de, userVer=0, loc=true, sampleClsName=org.apache.ignite.internal.processors.cache.distributed.dht.preloader.IgniteDhtPartitionsToReloadMap, pendingUndeploy=false, undeployed=true, usage=0]
[2018-12-11 02:05:59,607][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionMap
[2018-12-11 02:05:59,607][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.service.GridServiceProcessor$1
[2018-12-11 02:05:59,607][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.IgniteDhtPartitionsToReloadMap
[2018-12-11 02:05:59,607][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionFullMap
[2018-12-11 02:05:59,607][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.IgniteDhtPartitionCountersMap2
[2018-12-11 02:05:59,608][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.CachePartitionFullCountersMap
[2018-12-11 02:05:59,608][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.IgniteDhtPartitionHistorySuppliersMap
[2018-12-11 02:05:59,608][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class java.util.Collections$UnmodifiableMap
[2018-12-11 02:05:59,609][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 

>>> +------------------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a stopped OK
>>> +------------------------------------------------------------------------------------------+
>>> Ignite instance name: client
>>> Grid uptime: 00:00:02.046


[2018-12-11 02:05:59,613][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] >>> Stopping grid [name=cache.ClientReconnectSelfTest0, id=65ad581d-8078-42c2-aca4-e87dbea00000]
[2018-12-11 02:05:59,635][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=default]
[2018-12-11 02:05:59,636][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=ignite-sys-cache]
[2018-12-11 02:05:59,642][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>> +------------------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a stopped OK
>>> +------------------------------------------------------------------------------------------+
>>> Ignite instance name: cache.ClientReconnectSelfTest0
>>> Grid uptime: 00:00:01.898


[2018-12-11 02:05:59,645][INFO ][main][root] >>> Stopping test: ClientReconnectSelfTest#testReconnect in 4499 ms <<<
[2018-12-11 02:05:59,645][INFO ][main][root] >>> Stopping test class: ClientReconnectSelfTest <<<
[2018-12-11 02:05:59,644][ERROR][main][root] Test failed.
junit.framework.AssertionFailedError: Found nodes from different clusters, probable some test does not stop nodes [allNodes=[cache.ClientReconnectSelfTest0, client]]
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:609)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:547)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:532)
	at org.apache.ignite.internal.processors.cache.ClientReconnectSelfTest.testReconnect(ClientReconnectSelfTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$001(GridAbstractTest.java:150)
	at org.apache.ignite.testframework.junits.GridAbstractTest$6.evaluate(GridAbstractTest.java:2104)
	at org.apache.ignite.testframework.junits.GridAbstractTest$7.run(GridAbstractTest.java:2119)
	at java.lang.Thread.run(Thread.java:748)

junit.framework.AssertionFailedError: Found nodes from different clusters, probable some test does not stop nodes [allNodes=[cache.ClientReconnectSelfTest0, client]]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:609)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:547)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:532)
	at org.apache.ignite.internal.processors.cache.ClientReconnectSelfTest.testReconnect(ClientReconnectSelfTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$001(GridAbstractTest.java:150)
	at org.apache.ignite.testframework.junits.GridAbstractTest$6.evaluate(GridAbstractTest.java:2104)
	at org.apache.ignite.testframework.junits.GridAbstractTest$7.run(GridAbstractTest.java:2119)
	at java.lang.Thread.run(Thread.java:748)


Process finished with exit code 255

{noformat}
And *without my changes* (commit earlier):
{noformat}
/opt/jdk1.8.0_191/bin/java -ea -Didea.test.cyclic.buffer.size=102424576 -javaagent:/opt/idea-IC-182.5107.16/lib/idea_rt.jar=40681:/opt/idea-IC-182.5107.16/bin -Dfile.encoding=UTF-8 -classpath /opt/idea-IC-182.5107.16/lib/idea_rt.jar:/opt/idea-IC-182.5107.16/plugins/junit/lib/junit-rt.jar:/opt/idea-IC-182.5107.16/plugins/junit/lib/junit5-rt.jar:/opt/jdk1.8.0_191/jre/lib/charsets.jar:/opt/jdk1.8.0_191/jre/lib/deploy.jar:/opt/jdk1.8.0_191/jre/lib/ext/cldrdata.jar:/opt/jdk1.8.0_191/jre/lib/ext/dnsns.jar:/opt/jdk1.8.0_191/jre/lib/ext/jaccess.jar:/opt/jdk1.8.0_191/jre/lib/ext/jfxrt.jar:/opt/jdk1.8.0_191/jre/lib/ext/localedata.jar:/opt/jdk1.8.0_191/jre/lib/ext/nashorn.jar:/opt/jdk1.8.0_191/jre/lib/ext/sunec.jar:/opt/jdk1.8.0_191/jre/lib/ext/sunjce_provider.jar:/opt/jdk1.8.0_191/jre/lib/ext/sunpkcs11.jar:/opt/jdk1.8.0_191/jre/lib/ext/zipfs.jar:/opt/jdk1.8.0_191/jre/lib/javaws.jar:/opt/jdk1.8.0_191/jre/lib/jce.jar:/opt/jdk1.8.0_191/jre/lib/jfr.jar:/opt/jdk1.8.0_191/jre/lib/jfxswt.jar:/opt/jdk1.8.0_191/jre/lib/jsse.jar:/opt/jdk1.8.0_191/jre/lib/management-agent.jar:/opt/jdk1.8.0_191/jre/lib/plugin.jar:/opt/jdk1.8.0_191/jre/lib/resources.jar:/opt/jdk1.8.0_191/jre/lib/rt.jar:/home/home/work/ignite/modules/core/target/test-classes:/home/home/work/ignite/modules/core/target/classes:/home/home/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar:/home/home/.m2/repository/org/jetbrains/annotations/16.0.3/annotations-16.0.3.jar:/home/home/.m2/repository/mx4j/mx4j-tools/3.0.1/mx4j-tools-3.0.1.jar:/home/home/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/home/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar:/home/home/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/home/.m2/repository/com/thoughtworks/xstream/xstream/1.4.8/xstream-1.4.8.jar:/home/home/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/home/home/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar:/home/home/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/home/.m2/repository/org/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/home/home/.m2/repository/com/h2database/h2/1.4.197/h2-1.4.197.jar:/home/home/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-servlets/9.4.11.v20180605/jetty-servlets-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-continuation/9.4.11.v20180605/jetty-continuation-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-http/9.4.11.v20180605/jetty-http-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-util/9.4.11.v20180605/jetty-util-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-io/9.4.11.v20180605/jetty-io-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-webapp/9.4.11.v20180605/jetty-webapp-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-xml/9.4.11.v20180605/jetty-xml-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-servlet/9.4.11.v20180605/jetty-servlet-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-security/9.4.11.v20180605/jetty-security-9.4.11.v20180605.jar:/home/home/.m2/repository/org/eclipse/jetty/jetty-server/9.4.11.v20180605/jetty-server-9.4.11.v20180605.jar:/home/home/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/home/.m2/repository/com/esotericsoftware/kryo/kryo/2.20/kryo-2.20.jar:/home/home/.m2/repository/com/esotericsoftware/reflectasm/reflectasm/1.07/reflectasm-1.07-shaded.jar:/home/home/.m2/repository/org/ow2/asm/asm/4.0/asm-4.0.jar:/home/home/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/home/home/.m2/repository/org/objenesis/objenesis/1.2/objenesis-1.2.jar:/home/home/.m2/repository/c3p0/c3p0/0.9.1/c3p0-0.9.1.jar:/home/home/.m2/repository/org/gridgain/ignite-shmem/1.0.0/ignite-shmem-1.0.0.jar:/home/home/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/home/.m2/repository/org/springframework/spring-beans/4.3.18.RELEASE/spring-beans-4.3.18.RELEASE.jar:/home/home/.m2/repository/org/springframework/spring-core/4.3.18.RELEASE/spring-core-4.3.18.RELEASE.jar:/home/home/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/home/.m2/repository/org/springframework/spring-context/4.3.18.RELEASE/spring-context-4.3.18.RELEASE.jar:/home/home/.m2/repository/org/springframework/spring-aop/4.3.18.RELEASE/spring-aop-4.3.18.RELEASE.jar:/home/home/.m2/repository/org/springframework/spring-expression/4.3.18.RELEASE/spring-expression-4.3.18.RELEASE.jar:/home/home/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/home/.m2/repository/org/apache/ignite/binary/test1/1.1/test1-1.1.jar:/home/home/.m2/repository/org/apache/ignite/binary/test2/1.1/test2-1.1.jar:/home/home/.m2/repository/com/google/guava/guava/25.1-jre/guava-25.1-jre.jar:/home/home/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/home/.m2/repository/org/checkerframework/checker-qual/2.0.0/checker-qual-2.0.0.jar:/home/home/.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar:/home/home/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/home/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/home/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/home/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/home/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/opt/jdk1.8.0_191/lib/tools.jar com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 org.apache.ignite.internal.processors.cache.ClientReconnectSelfTest
Configured log4j from: /home/home/work/ignite/modules/core/src/test/config/log4j-test.xml[2018-12-11 02:08:12,709][INFO ][main][root] >>> Starting test class: ClientReconnectSelfTest <<<
[2018-12-11 02:08:12,788][INFO ][main][root] >>> Starting test: ClientReconnectSelfTest#testReconnect <<<
[2018-12-11 02:08:13,095][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>>    __________  ________________  
>>>   /  _/ ___/ |/ /  _/_  __/ __/  
>>>  _/ // (7 7    // /  / / / _/    
>>> /___/\___/_/|_/___/ /_/ /___/   
>>> 
>>> ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d4
>>> 2018 Copyright(C) Apache Software Foundation
>>> 
>>> Ignite documentation: http://ignite.apache.org

[2018-12-11 02:08:13,096][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Config URL: n/a
[2018-12-11 02:08:13,137][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] IgniteConfiguration [igniteInstanceName=cache.ClientReconnectSelfTest0, pubPoolSize=8, svcPoolSize=8, callbackPoolSize=8, stripedPoolSize=8, sysPoolSize=8, mgmtPoolSize=4, igfsPoolSize=8, dataStreamerPoolSize=8, utilityCachePoolSize=8, utilityCacheKeepAliveTime=60000, p2pPoolSize=2, qryPoolSize=8, igniteHome=/home/home/work/ignite, igniteWorkDir=/home/home/work/ignite/work, mbeanSrv=com.sun.jmx.mbeanserver.JmxMBeanServer@23223dd8, nodeId=04db57dd-cce0-4555-95aa-232b4b900000, marsh=BinaryMarshaller [], marshLocJobs=false, daemon=false, p2pEnabled=true, netTimeout=10000, netCompressionLevel=1, sndRetryDelay=1000, sndRetryCnt=3, metricsHistSize=10000, metricsUpdateFreq=1000, metricsExpTime=9223372036854775807, discoSpi=TcpDiscoverySpi [addrRslvr=null, sockTimeout=0, ackTimeout=0, marsh=null, reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], segPlc=STOP, segResolveAttempts=2, waitForSegOnStart=true, allResolversPassReq=true, segChkFreq=10000, commSpi=TcpCommunicationSpi [connectGate=null, connPlc=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$FirstConnectionPolicy@573a9844, enableForcibleNodeKill=false, enableTroubleshootingLog=false, locAddr=null, locHost=null, locPort=45010, locPortRange=100, shmemPort=-1, directBuf=true, directSndBuf=false, idleConnTimeout=600000, connTimeout=5000, maxConnTimeout=600000, reconCnt=10, sockSndBuf=32768, sockRcvBuf=32768, msgQueueLimit=0, slowClientQueueLimit=0, nioSrvr=null, shmemSrv=null, usePairedConnections=false, connectionsPerNode=1, tcpNoDelay=true, filterReachableAddresses=false, ackSndThreshold=32, unackedMsgsBufSize=0, sockWriteTimeout=2000, boundTcpPort=-1, boundTcpShmemPort=-1, selectorsCnt=4, selectorSpins=0, addrRslvr=null, ctxInitLatch=java.util.concurrent.CountDownLatch@a20d91e[Count = 1], stopping=false], evtSpi=MemoryEventStorageSpi [expireAgeMs=9223372036854775807, expireCnt=10000, filter=null], colSpi=NoopCollisionSpi [], deploySpi=LocalDeploymentSpi [], indexingSpi=org.apache.ignite.spi.indexing.noop.NoopIndexingSpi@5af1ebc6, addrRslvr=null, encryptionSpi=org.apache.ignite.spi.encryption.noop.NoopEncryptionSpi@9b198a6, clientMode=false, rebalanceThreadPoolSize=1, txCfg=TransactionConfiguration [txSerEnabled=false, dfltIsolation=REPEATABLE_READ, dfltConcurrency=PESSIMISTIC, dfltTxTimeout=0, txTimeoutOnPartitionMapExchange=0, pessimisticTxLogSize=0, pessimisticTxLogLinger=10000, tmLookupClsName=null, txManagerFactory=null, useJtaSync=false], cacheSanityCheckEnabled=true, discoStartupDelay=60000, deployMode=SHARED, p2pMissedCacheSize=100, locHost=127.0.0.1, timeSrvPortBase=31100, timeSrvPortRange=100, failureDetectionTimeout=10000, sysWorkerBlockedTimeout=null, clientFailureDetectionTimeout=10000, metricsLogFreq=0, hadoopCfg=null, connectorCfg=null, odbcCfg=null, warmupClos=null, atomicCfg=AtomicConfiguration [seqReserveSize=1000, cacheMode=PARTITIONED, backups=1, aff=null, grpName=null], classLdr=null, sslCtxFactory=null, platformCfg=null, binaryCfg=null, memCfg=null, pstCfg=null, dsCfg=DataStorageConfiguration [sysRegionInitSize=41943040, sysRegionMaxSize=104857600, pageSize=0, concLvl=0, dfltDataRegConf=DataRegionConfiguration [name=default, maxSize=3301543116, initSize=268435456, swapPath=null, pageEvictionMode=DISABLED, evictionThreshold=0.9, emptyPagesPoolSize=100, metricsEnabled=false, metricsSubIntervalCount=5, metricsRateTimeInterval=60000, persistenceEnabled=false, checkpointPageBufSize=0], dataRegions=null, storagePath=null, checkpointFreq=180000, lockWaitTime=10000, checkpointThreads=4, checkpointWriteOrder=SEQUENTIAL, walHistSize=20, maxWalArchiveSize=1073741824, walSegments=10, walSegmentSize=67108864, walPath=db/wal, walArchivePath=db/wal/archive, metricsEnabled=false, walMode=LOG_ONLY, walTlbSize=131072, walBuffSize=0, walFlushFreq=2000, walFsyncDelay=1000, walRecordIterBuffSize=67108864, alwaysWriteFullPages=false, fileIOFactory=org.apache.ignite.internal.processors.cache.persistence.file.AsyncFileIOFactory@77473666, metricsSubIntervalCnt=5, metricsRateTimeInterval=60000, walAutoArchiveAfterInactivity=-1, writeThrottlingEnabled=false, walCompactionEnabled=false, walCompactionLevel=1, checkpointReadLockTimeout=null], activeOnStart=true, autoActivation=true, longQryWarnTimeout=3000, sqlConnCfg=null, cliConnCfg=ClientConnectorConfiguration [host=null, port=10800, portRange=100, sockSndBufSize=0, sockRcvBufSize=0, tcpNoDelay=true, maxOpenCursorsPerConn=128, threadPoolSize=8, idleTimeout=0, jdbcEnabled=true, odbcEnabled=true, thinCliEnabled=true, sslEnabled=false, useIgniteSslCtxFactory=true, sslClientAuth=false, sslCtxFactory=null], mvccVacuumThreadCnt=2, mvccVacuumFreq=5000, authEnabled=false, failureHnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]], commFailureRslvr=null]
[2018-12-11 02:08:13,138][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Daemon mode: off
[2018-12-11 02:08:13,138][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] OS: Linux 4.15.0-42-generic amd64
[2018-12-11 02:08:13,138][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] OS user: home
[2018-12-11 02:08:13,139][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] PID: 6307
[2018-12-11 02:08:13,140][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Language runtime: Java Platform API Specification ver. 1.8
[2018-12-11 02:08:13,140][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM information: Java(TM) SE Runtime Environment 1.8.0_191-b12 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.191-b12
[2018-12-11 02:08:13,142][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM total memory: 3.4GB
[2018-12-11 02:08:13,142][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Remote Management [restart: off, REST: off, JMX (remote: off)]
[2018-12-11 02:08:13,145][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Logger: GridTestLog4jLogger [quiet=false, config=null]
[2018-12-11 02:08:13,145][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] IGNITE_HOME=/home/home/work/ignite
[2018-12-11 02:08:13,145][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM arguments: [-ea, -Didea.test.cyclic.buffer.size=102424576, -javaagent:/opt/idea-IC-182.5107.16/lib/idea_rt.jar=40681:/opt/idea-IC-182.5107.16/bin, -Dfile.encoding=UTF-8]
[2018-12-11 02:08:13,146][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] System cache's DataRegion size is configured to 40 MB. Use DataStorageConfiguration.systemRegionInitialSize property to change the setting.
[2018-12-11 02:08:13,146][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Configured caches [in 'sysMemPlc' dataRegion: ['ignite-sys-cache'], in 'default' dataRegion: ['default']]
[2018-12-11 02:08:13,147][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Peer class loading is enabled (disable it in production for performance and deployment consistency reasons)
[2018-12-11 02:08:13,148][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Please set system property '-Djava.net.preferIPv4Stack=true' to avoid possible problems in mixed environments.
[2018-12-11 02:08:13,166][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 3-rd party licenses can be found at: /home/home/work/ignite/libs/licenses
[2018-12-11 02:08:13,167][WARN ][pub-#23%cache.ClientReconnectSelfTest0%][GridDiagnostic] Initial heap size is 246MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[2018-12-11 02:08:13,191][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] Configured plugins:
[2018-12-11 02:08:13,191][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- TestReconnectPlugin 1.0
[2018-12-11 02:08:13,191][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:08:13,191][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:13,191][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- StanByClusterTestProvider 1.0
[2018-12-11 02:08:13,191][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- null
[2018-12-11 02:08:13,191][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:13,192][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- PageMemory tracker plugin 1.0
[2018-12-11 02:08:13,192][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:08:13,192][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:13,192][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][FailureProcessor] Configured failure handler: [hnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]]]
[2018-12-11 02:08:13,282][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[2018-12-11 02:08:13,282][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Successfully bound communication NIO server to TCP port [port=45010, locHost=/127.0.0.1, selectorsCnt=4, selectorSpins=0, pairedConn=false]
[2018-12-11 02:08:13,369][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCollisionManager] Collision resolution is disabled (all jobs will be activated upon arrival).
[2018-12-11 02:08:13,384][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Security status [authentication=off, tls/ssl=off]
[2018-12-11 02:08:13,650][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteCacheDatabaseSharedManager] DataRegionConfiguration.maxWalArchiveSize instead DataRegionConfiguration.walHistorySize would be used for removing old archive wal files
[2018-12-11 02:08:13,659][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteCacheDatabaseSharedManager] Configured data regions initialized successfully [total=3]
[2018-12-11 02:08:13,778][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][PartitionsEvictManager] Evict partition permits=2
[2018-12-11 02:08:13,850][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientListenerProcessor] Client connector processor has started on TCP port 10800
[2018-12-11 02:08:13,925][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Non-loopback local IPs: 192.168.31.180, fe80:0:0:0:3e1e:a1db:8101:16f8%wlp0s20f3
[2018-12-11 02:08:13,925][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Enabled local MACs: 645D86A76B6F
[2018-12-11 02:08:13,968][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TestTcpDiscoverySpi] Connection check threshold is calculated: 10000
[2018-12-11 02:08:13,971][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TestTcpDiscoverySpi] Successfully bound to TCP port [port=47500, localHost=/127.0.0.1, locNodeId=04db57dd-cce0-4555-95aa-232b4b900000]
[2018-12-11 02:08:14,001][INFO ][disco-notifier-worker-#37%cache.ClientReconnectSelfTest0%][MvccProcessorImpl] Assigned mvcc coordinator [crd=MvccCoordinator [nodeId=04db57dd-cce0-4555-95aa-232b4b900000, crdVer=1544483293990, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]], crdNode=TcpDiscoveryNode [id=04db57dd-cce0-4555-95aa-232b4b900000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483293969, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=false]]
[2018-12-11 02:08:14,001][INFO ][disco-notifier-worker-#37%cache.ClientReconnectSelfTest0%][MvccProcessorImpl] Initialize local node as mvcc coordinator [node=04db57dd-cce0-4555-95aa-232b4b900000, crdVer=1544483293990]
[2018-12-11 02:08:14,023][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], crd=true, evt=NODE_JOINED, evtNode=04db57dd-cce0-4555-95aa-232b4b900000, customEvt=null, allowMerge=false]
[2018-12-11 02:08:14,047][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][IgniteCacheDatabaseSharedManager] Configured data regions started successfully [total=3]
[2018-12-11 02:08:14,047][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][msg] Components activation performed in 23 ms.
[2018-12-11 02:08:14,182][INFO ][sys-#43%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Started cache [name=default, id=1544803905, dataRegionName=default, mode=PARTITIONED, atomicity=TRANSACTIONAL, backups=1, mvcc=false]
[2018-12-11 02:08:14,182][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Started cache [name=ignite-sys-cache, id=-2100569601, dataRegionName=sysMemPlc, mode=REPLICATED, atomicity=TRANSACTIONAL, backups=2147483647, mvcc=false]
[2018-12-11 02:08:14,205][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Starting caches on local join performed in 161 ms.
[2018-12-11 02:08:14,211][INFO ][sys-#47%cache.ClientReconnectSelfTest0%][GridAffinityAssignmentCache] Local node affinity assignment distribution is not ideal [cache=default, expectedPrimary=32,00, actualPrimary=32, expectedBackups=32,00, actualBackups=0, warningThreshold=50,00%]
[2018-12-11 02:08:14,218][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Skipped waiting for partitions release future (local node is joining) [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]]
[2018-12-11 02:08:14,276][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] finishExchangeOnCoordinator [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]]
[2018-12-11 02:08:14,276][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Affinity changes (coordinator) applied in 0 ms.
[2018-12-11 02:08:14,282][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Partitions validation performed in 6 ms.
[2018-12-11 02:08:14,283][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Partitions assignment performed in 1 ms.
[2018-12-11 02:08:14,294][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Preparing Full Message performed in 10 ms.
[2018-12-11 02:08:14,295][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], err=null]
[2018-12-11 02:08:14,296][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Detecting lost partitions performed in 1 ms.
[2018-12-11 02:08:14,307][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Finish proxy initialization, cacheName=default, localNodeId=04db57dd-cce0-4555-95aa-232b4b900000
[2018-12-11 02:08:14,307][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Finish proxy initialization, cacheName=ignite-sys-cache, localNodeId=04db57dd-cce0-4555-95aa-232b4b900000
[2018-12-11 02:08:14,308][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Completed partition exchange [localNode=04db57dd-cce0-4555-95aa-232b4b900000, exchange=GridDhtPartitionsExchangeFuture [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], evt=NODE_JOINED, evtNode=TcpDiscoveryNode [id=04db57dd-cce0-4555-95aa-232b4b900000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483293969, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=false], done=true], topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], durationFromInit=282]
[2018-12-11 02:08:14,309][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], crd=true]
[2018-12-11 02:08:14,314][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=1, minorTopVer=0], force=false, evt=NODE_JOINED, node=04db57dd-cce0-4555-95aa-232b4b900000]
[2018-12-11 02:08:14,345][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Performance suggestions for grid 'cache.ClientReconnectSelfTest0' (fix if possible)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable checkpoints (remove 'checkpointSpi' from configuration)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Decrease number of backups (set 'backups' to 0)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Enable ATOMIC mode if not using transactions (set 'atomicityMode' to ATOMIC)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable fully synchronous writes (set 'writeSynchronizationMode' to PRIMARY_SYNC or FULL_ASYNC)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable assertions (remove '-ea' from JVM options)
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 
[2018-12-11 02:08:14,346][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[2018-12-11 02:08:14,347][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Data Regions Configured:
[2018-12-11 02:08:14,348][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- default [initSize=256,0 MiB, maxSize=3,1 GiB, persistence=false]
[2018-12-11 02:08:14,349][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>> +-------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a
>>> +-------------------------------------------------------------------------------+
>>> OS name: Linux 4.15.0-42-generic amd64
>>> CPU(s): 8
>>> Heap: 3.4GB
>>> VM name: 6307@home-G5-5587
>>> Ignite instance name: cache.ClientReconnectSelfTest0
>>> Local node [ID=04DB57DD-CCE0-4555-95AA-232B4B900000, order=1, clientMode=false]
>>> Local node addresses: [127.0.0.1]
>>> Local ports: TCP:10800 TCP:45010 TCP:47500 

[2018-12-11 02:08:14,350][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDiscoveryManager] Topology snapshot [ver=1, locNode=04db57dd, servers=1, clients=0, state=ACTIVE, CPUs=8, offheap=3.1GB, heap=3.4GB]
[2018-12-11 02:08:14,351][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] Node started with the following configuration [id=04db57dd-cce0-4555-95aa-232b4b900000, marshaller=BinaryMarshaller [], discovery=TcpDiscoverySpi [addrRslvr=null, sockTimeout=5000, ackTimeout=5000, marsh=JdkMarshaller [clsFilter=org.apache.ignite.marshaller.MarshallerUtils$1@3e1d3e82], reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], binaryCfg=null, lateAff=true]
[2018-12-11 02:08:14,354][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] awaitPartitionMapExchange finished
[2018-12-11 02:08:14,369][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 

>>>    __________  ________________  
>>>   /  _/ ___/ |/ /  _/_  __/ __/  
>>>  _/ // (7 7    // /  / / / _/    
>>> /___/\___/_/|_/___/ /_/ /___/   
>>> 
>>> ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d4
>>> 2018 Copyright(C) Apache Software Foundation
>>> 
>>> Ignite documentation: http://ignite.apache.org

[2018-12-11 02:08:14,369][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Config URL: n/a
[2018-12-11 02:08:14,370][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] IgniteConfiguration [igniteInstanceName=client, pubPoolSize=8, svcPoolSize=8, callbackPoolSize=8, stripedPoolSize=8, sysPoolSize=8, mgmtPoolSize=4, igfsPoolSize=8, dataStreamerPoolSize=8, utilityCachePoolSize=8, utilityCacheKeepAliveTime=60000, p2pPoolSize=2, qryPoolSize=8, igniteHome=/home/home/work/ignite, igniteWorkDir=/home/home/work/ignite/work, mbeanSrv=com.sun.jmx.mbeanserver.JmxMBeanServer@23223dd8, nodeId=124f01de-a1a4-4cb4-9567-acbb2622047b, marsh=BinaryMarshaller [], marshLocJobs=false, daemon=false, p2pEnabled=true, netTimeout=10000, netCompressionLevel=1, sndRetryDelay=1000, sndRetryCnt=3, metricsHistSize=10000, metricsUpdateFreq=1000, metricsExpTime=9223372036854775807, discoSpi=TcpDiscoverySpi [addrRslvr=null, sockTimeout=0, ackTimeout=0, marsh=null, reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], segPlc=STOP, segResolveAttempts=2, waitForSegOnStart=true, allResolversPassReq=true, segChkFreq=10000, commSpi=TcpCommunicationSpi [connectGate=null, connPlc=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$FirstConnectionPolicy@114f07e7, enableForcibleNodeKill=false, enableTroubleshootingLog=false, locAddr=null, locHost=null, locPort=45010, locPortRange=100, shmemPort=-1, directBuf=true, directSndBuf=false, idleConnTimeout=600000, connTimeout=5000, maxConnTimeout=600000, reconCnt=10, sockSndBuf=32768, sockRcvBuf=32768, msgQueueLimit=0, slowClientQueueLimit=0, nioSrvr=null, shmemSrv=null, usePairedConnections=false, connectionsPerNode=1, tcpNoDelay=true, filterReachableAddresses=false, ackSndThreshold=32, unackedMsgsBufSize=0, sockWriteTimeout=2000, boundTcpPort=-1, boundTcpShmemPort=-1, selectorsCnt=4, selectorSpins=0, addrRslvr=null, ctxInitLatch=java.util.concurrent.CountDownLatch@320546d0[Count = 1], stopping=false], evtSpi=MemoryEventStorageSpi [expireAgeMs=9223372036854775807, expireCnt=10000, filter=null], colSpi=NoopCollisionSpi [], deploySpi=LocalDeploymentSpi [], indexingSpi=org.apache.ignite.spi.indexing.noop.NoopIndexingSpi@207c8173, addrRslvr=null, encryptionSpi=org.apache.ignite.spi.encryption.noop.NoopEncryptionSpi@1f6347a3, clientMode=true, rebalanceThreadPoolSize=1, txCfg=TransactionConfiguration [txSerEnabled=false, dfltIsolation=REPEATABLE_READ, dfltConcurrency=PESSIMISTIC, dfltTxTimeout=0, txTimeoutOnPartitionMapExchange=0, pessimisticTxLogSize=0, pessimisticTxLogLinger=10000, tmLookupClsName=null, txManagerFactory=null, useJtaSync=false], cacheSanityCheckEnabled=true, discoStartupDelay=60000, deployMode=SHARED, p2pMissedCacheSize=100, locHost=127.0.0.1, timeSrvPortBase=31100, timeSrvPortRange=100, failureDetectionTimeout=10000, sysWorkerBlockedTimeout=null, clientFailureDetectionTimeout=10000, metricsLogFreq=0, hadoopCfg=null, connectorCfg=null, odbcCfg=null, warmupClos=null, atomicCfg=AtomicConfiguration [seqReserveSize=1000, cacheMode=PARTITIONED, backups=1, aff=null, grpName=null], classLdr=null, sslCtxFactory=null, platformCfg=null, binaryCfg=null, memCfg=null, pstCfg=null, dsCfg=null, activeOnStart=true, autoActivation=true, longQryWarnTimeout=3000, sqlConnCfg=null, cliConnCfg=ClientConnectorConfiguration [host=null, port=10800, portRange=100, sockSndBufSize=0, sockRcvBufSize=0, tcpNoDelay=true, maxOpenCursorsPerConn=128, threadPoolSize=8, idleTimeout=0, jdbcEnabled=true, odbcEnabled=true, thinCliEnabled=true, sslEnabled=false, useIgniteSslCtxFactory=true, sslClientAuth=false, sslCtxFactory=null], mvccVacuumThreadCnt=2, mvccVacuumFreq=5000, authEnabled=false, failureHnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]], commFailureRslvr=null]
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Daemon mode: off
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] OS: Linux 4.15.0-42-generic amd64
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] OS user: home
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] PID: 6307
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Language runtime: Java Platform API Specification ver. 1.8
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] VM information: Java(TM) SE Runtime Environment 1.8.0_191-b12 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.191-b12
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] VM total memory: 3.4GB
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Remote Management [restart: off, REST: off, JMX (remote: off)]
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Logger: GridTestLog4jLogger [quiet=false, config=null]
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] IGNITE_HOME=/home/home/work/ignite
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] VM arguments: [-ea, -Didea.test.cyclic.buffer.size=102424576, -javaagent:/opt/idea-IC-182.5107.16/lib/idea_rt.jar=40681:/opt/idea-IC-182.5107.16/bin, -Dfile.encoding=UTF-8]
[2018-12-11 02:08:14,371][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Configured caches [in 'sysMemPlc' dataRegion: ['ignite-sys-cache']]
[2018-12-11 02:08:14,372][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Peer class loading is enabled (disable it in production for performance and deployment consistency reasons)
[2018-12-11 02:08:14,372][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Please set system property '-Djava.net.preferIPv4Stack=true' to avoid possible problems in mixed environments.
[2018-12-11 02:08:14,376][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 3-rd party licenses can be found at: /home/home/work/ignite/libs/licenses
[2018-12-11 02:08:14,377][WARN ][pub-#71%client%][GridDiagnostic] Initial heap size is 246MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] Configured plugins:
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- TestReconnectPlugin 1.0
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- StanByClusterTestProvider 1.0
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- null
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- PageMemory tracker plugin 1.0
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:08:14,382][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:14,383][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][FailureProcessor] Configured failure handler: [hnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]]]
[2018-12-11 02:08:14,389][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[2018-12-11 02:08:14,388][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Successfully bound communication NIO server to TCP port [port=45011, locHost=/127.0.0.1, selectorsCnt=4, selectorSpins=0, pairedConn=false]
[2018-12-11 02:08:14,398][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCollisionManager] Collision resolution is disabled (all jobs will be activated upon arrival).
[2018-12-11 02:08:14,398][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Security status [authentication=off, tls/ssl=off]
[2018-12-11 02:08:14,405][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][PartitionsEvictManager] Evict partition permits=2
[2018-12-11 02:08:14,412][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientListenerProcessor] Client connector processor has started on TCP port 10801
[2018-12-11 02:08:14,416][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Non-loopback local IPs: 192.168.31.180, fe80:0:0:0:3e1e:a1db:8101:16f8%wlp0s20f3
[2018-12-11 02:08:14,417][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Enabled local MACs: 645D86A76B6F
[2018-12-11 02:08:14,430][INFO ][tcp-disco-srvr-#4%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery accepted incoming connection [rmtAddr=/127.0.0.1, rmtPort=39127]
[2018-12-11 02:08:14,438][INFO ][tcp-disco-srvr-#4%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery spawning a new thread for connection [rmtAddr=/127.0.0.1, rmtPort=39127]
[2018-12-11 02:08:14,438][INFO ][tcp-disco-sock-reader-#11%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Started serving remote node connection [rmtAddr=/127.0.0.1:39127, rmtPort=39127]
[2018-12-11 02:08:14,496][INFO ][disco-event-worker-#38%cache.ClientReconnectSelfTest0%][GridDiscoveryManager] Added new node to topology: TcpDiscoveryNode [id=124f01de-a1a4-4cb4-9567-acbb2622047b, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1544483294462, loc=false, ver=2.7.0#20181203-sha1:d19123d4, isClient=true]
[2018-12-11 02:08:14,496][INFO ][disco-event-worker-#38%cache.ClientReconnectSelfTest0%][GridDiscoveryManager] Topology snapshot [ver=2, locNode=04db57dd, servers=1, clients=1, state=ACTIVE, CPUs=8, offheap=3.1GB, heap=3.4GB]
[2018-12-11 02:08:14,498][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], crd=true, evt=NODE_JOINED, evtNode=124f01de-a1a4-4cb4-9567-acbb2622047b, customEvt=null, allowMerge=true]
[2018-12-11 02:08:14,503][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], err=null]
[2018-12-11 02:08:14,505][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Completed partition exchange [localNode=04db57dd-cce0-4555-95aa-232b4b900000, exchange=GridDhtPartitionsExchangeFuture [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], evt=NODE_JOINED, evtNode=TcpDiscoveryNode [id=124f01de-a1a4-4cb4-9567-acbb2622047b, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1544483294462, loc=false, ver=2.7.0#20181203-sha1:d19123d4, isClient=true], done=true], topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], durationFromInit=11]
[2018-12-11 02:08:14,506][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], crd=true]
[2018-12-11 02:08:14,508][INFO ][exchange-worker-#39%cache.ClientReconnectSelfTest0%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=2, minorTopVer=0], force=false, evt=NODE_JOINED, node=124f01de-a1a4-4cb4-9567-acbb2622047b]
[2018-12-11 02:08:14,519][INFO ][disco-notifier-worker-#85%client%][MvccProcessorImpl] Assigned mvcc coordinator [crd=MvccCoordinator [nodeId=04db57dd-cce0-4555-95aa-232b4b900000, crdVer=1544483293990, topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0]], crdNode=TcpDiscoveryNode [id=04db57dd-cce0-4555-95aa-232b4b900000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483294492, loc=false, ver=2.7.0#20181203-sha1:d19123d4, isClient=false]]
[2018-12-11 02:08:14,523][INFO ][exchange-worker-#87%client%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], crd=false, evt=NODE_JOINED, evtNode=124f01de-a1a4-4cb4-9567-acbb2622047b, customEvt=null, allowMerge=true]
[2018-12-11 02:08:14,523][INFO ][exchange-worker-#87%client%][msg] Components activation performed in 0 ms.
[2018-12-11 02:08:14,528][INFO ][exchange-worker-#87%client%][GridCacheProcessor] Started cache [name=ignite-sys-cache, id=-2100569601, dataRegionName=sysMemPlc, mode=REPLICATED, atomicity=TRANSACTIONAL, backups=2147483647, mvcc=false]
[2018-12-11 02:08:14,528][INFO ][exchange-worker-#87%client%][GridCacheProcessor] Starting caches on local join performed in 10 ms.
[2018-12-11 02:08:14,537][INFO ][grid-nio-worker-tcp-comm-0-#25%cache.ClientReconnectSelfTest0%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/127.0.0.1:45010, rmtAddr=/127.0.0.1:43336]
[2018-12-11 02:08:14,548][INFO ][grid-nio-worker-tcp-comm-0-#73%client%][TcpCommunicationSpi] Established outgoing communication connection [locAddr=/127.0.0.1:43336, rmtAddr=/127.0.0.1:45010]
[2018-12-11 02:08:14,548][INFO ][exchange-worker-#87%client%][GridDhtPartitionsExchangeFuture] Sending Single Message performed in 20 ms.
[2018-12-11 02:08:14,548][INFO ][exchange-worker-#87%client%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], crd=false]
[2018-12-11 02:08:14,569][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Received full message, will finish exchange [node=04db57dd-cce0-4555-95aa-232b4b900000, resVer=AffinityTopologyVersion [topVer=2, minorTopVer=0]]
[2018-12-11 02:08:14,575][INFO ][sys-#88%client%][CacheAffinitySharedManager] Affinity initialization on local join performed in 6 ms.
[2018-12-11 02:08:14,575][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Affinity changes applied in 6 ms.
[2018-12-11 02:08:14,576][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Full map updating for 2 groups performed in 1 ms.
[2018-12-11 02:08:14,577][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], err=null]
[2018-12-11 02:08:14,577][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Detecting lost partitions performed in 0 ms.
[2018-12-11 02:08:14,577][INFO ][sys-#88%client%][GridCacheProcessor] Finish proxy initialization, cacheName=ignite-sys-cache, localNodeId=124f01de-a1a4-4cb4-9567-acbb2622047b
[2018-12-11 02:08:14,578][INFO ][exchange-worker-#87%client%][GridCachePartitionExchangeManager] Skipping rebalancing (no affinity changes) [top=AffinityTopologyVersion [topVer=2, minorTopVer=0], rebTopVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], evt=NODE_JOINED, evtNode=124f01de-a1a4-4cb4-9567-acbb2622047b, client=true]
[2018-12-11 02:08:14,578][INFO ][sys-#88%client%][GridDhtPartitionsExchangeFuture] Completed partition exchange [localNode=124f01de-a1a4-4cb4-9567-acbb2622047b, exchange=GridDhtPartitionsExchangeFuture [topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], evt=NODE_JOINED, evtNode=TcpDiscoveryNode [id=124f01de-a1a4-4cb4-9567-acbb2622047b, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:0], discPort=0, order=2, intOrder=0, lastExchangeTime=1544483294422, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=true], done=true], topVer=AffinityTopologyVersion [topVer=2, minorTopVer=0], durationFromInit=60]
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Performance suggestions for grid 'client' (fix if possible)
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Disable checkpoints (remove 'checkpointSpi' from configuration)
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client]   ^-- Disable assertions (remove '-ea' from JVM options)
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 
[2018-12-11 02:08:14,590][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[2018-12-11 02:08:14,591][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 

>>> +-------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a
>>> +-------------------------------------------------------------------------------+
>>> OS name: Linux 4.15.0-42-generic amd64
>>> CPU(s): 8
>>> Heap: 3.4GB
>>> VM name: 6307@home-G5-5587
>>> Ignite instance name: client
>>> Local node [ID=124F01DE-A1A4-4CB4-9567-ACBB2622047B, order=2, clientMode=true]
>>> Local node addresses: [127.0.0.1]
>>> Local ports: TCP:10801 TCP:45011 

[2018-12-11 02:08:14,591][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDiscoveryManager] Topology snapshot [ver=2, locNode=124f01de, servers=1, clients=1, state=ACTIVE, CPUs=8, offheap=0.1GB, heap=3.4GB]
[2018-12-11 02:08:14,591][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] Node started with the following configuration [id=124f01de-a1a4-4cb4-9567-acbb2622047b, marshaller=BinaryMarshaller [], discovery=TcpDiscoverySpi [addrRslvr=null, sockTimeout=5000, ackTimeout=5000, marsh=JdkMarshaller [clsFilter=org.apache.ignite.marshaller.MarshallerUtils$1@1feeb383], reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], binaryCfg=null, lateAff=true]
[2018-12-11 02:08:14,591][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] >>> Stopping grid [name=cache.ClientReconnectSelfTest0, id=04db57dd-cce0-4555-95aa-232b4b900000]
[2018-12-11 02:08:14,604][INFO ][tcp-disco-sock-reader-#11%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Finished serving remote node connection [rmtAddr=/127.0.0.1:39127, rmtPort=39127
[2018-12-11 02:08:14,610][WARN ][tcp-client-disco-reconnector-#13%client%][TestTcpDiscoverySpi] Failed to connect to any address from IP finder (will retry to join topology every 2000 ms; change 'reconnectDelay' to configure the frequency of retries): [/127.0.0.1:47500]
[2018-12-11 02:08:14,610][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=default]
[2018-12-11 02:08:14,611][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=ignite-sys-cache]
[2018-12-11 02:08:14,627][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Removed undeployed class: GridDeployment [ts=1544483294503, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@18b4aac2, clsLdrId=957c06a9761-04db57dd-cce0-4555-95aa-232b4b900000, userVer=0, loc=true, sampleClsName=org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceDeploymentPredicate, pendingUndeploy=false, undeployed=true, usage=0]
[2018-12-11 02:08:14,628][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceAssignmentsPredicate
[2018-12-11 02:08:14,628][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceDeploymentPredicate
[2018-12-11 02:08:14,638][WARN ][tcp-comm-worker-#6%client%][TcpCommunicationSpi] Connect timed out (consider increasing 'failureDetectionTimeout' configuration property) [addr=/127.0.0.1:45010, failureDetectionTimeout=10000]
[2018-12-11 02:08:14,639][WARN ][tcp-comm-worker-#6%client%][TcpCommunicationSpi] Failed to connect to a remote node (make sure that destination node is alive and operating system firewall is disabled on local and remote hosts) [addrs=[/127.0.0.1:45010]]
[2018-12-11 02:08:14,638][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>> +------------------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a stopped OK
>>> +------------------------------------------------------------------------------------------+
>>> Ignite instance name: cache.ClientReconnectSelfTest0
>>> Grid uptime: 00:00:00.294


[2018-12-11 02:08:14,641][ERROR][tcp-client-disco-sock-writer-#8%client%][TestTcpDiscoverySpi] Failed to send message: TcpDiscoveryClientPingRequest [nodeToPing=04db57dd-cce0-4555-95aa-232b4b900000, super=TcpDiscoveryAbstractMessage [sndNodeId=null, id=377c06a9761-124f01de-a1a4-4cb4-9567-acbb2622047b, verifierNodeId=null, topVer=0, pendingIdx=0, failedNodes=null, isClient=false]]
java.net.SocketException: Socket is closed
	at java.net.Socket.getSendBufferSize(Socket.java:1215)
	at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.socketStream(TcpDiscoverySpi.java:1479)
	at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.writeToSocket(TcpDiscoverySpi.java:1605)
	at org.apache.ignite.spi.discovery.tcp.ClientImpl$SocketWriter.body(ClientImpl.java:1362)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:61)
[2018-12-11 02:08:14,672][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>>    __________  ________________  
>>>   /  _/ ___/ |/ /  _/_  __/ __/  
>>>  _/ // (7 7    // /  / / / _/    
>>> /___/\___/_/|_/___/ /_/ /___/   
>>> 
>>> ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d4
>>> 2018 Copyright(C) Apache Software Foundation
>>> 
>>> Ignite documentation: http://ignite.apache.org

[2018-12-11 02:08:14,672][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Config URL: n/a
[2018-12-11 02:08:14,673][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] IgniteConfiguration [igniteInstanceName=cache.ClientReconnectSelfTest0, pubPoolSize=8, svcPoolSize=8, callbackPoolSize=8, stripedPoolSize=8, sysPoolSize=8, mgmtPoolSize=4, igfsPoolSize=8, dataStreamerPoolSize=8, utilityCachePoolSize=8, utilityCacheKeepAliveTime=60000, p2pPoolSize=2, qryPoolSize=8, igniteHome=/home/home/work/ignite, igniteWorkDir=/home/home/work/ignite/work, mbeanSrv=com.sun.jmx.mbeanserver.JmxMBeanServer@23223dd8, nodeId=17a9205d-4962-4b68-ac8d-0620fbd00000, marsh=BinaryMarshaller [], marshLocJobs=false, daemon=false, p2pEnabled=true, netTimeout=10000, netCompressionLevel=1, sndRetryDelay=1000, sndRetryCnt=3, metricsHistSize=10000, metricsUpdateFreq=1000, metricsExpTime=9223372036854775807, discoSpi=TcpDiscoverySpi [addrRslvr=null, sockTimeout=0, ackTimeout=0, marsh=null, reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], segPlc=STOP, segResolveAttempts=2, waitForSegOnStart=true, allResolversPassReq=true, segChkFreq=10000, commSpi=TcpCommunicationSpi [connectGate=null, connPlc=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$FirstConnectionPolicy@23ebf3b0, enableForcibleNodeKill=false, enableTroubleshootingLog=false, locAddr=null, locHost=null, locPort=45010, locPortRange=100, shmemPort=-1, directBuf=true, directSndBuf=false, idleConnTimeout=600000, connTimeout=5000, maxConnTimeout=600000, reconCnt=10, sockSndBuf=32768, sockRcvBuf=32768, msgQueueLimit=0, slowClientQueueLimit=0, nioSrvr=null, shmemSrv=null, usePairedConnections=false, connectionsPerNode=1, tcpNoDelay=true, filterReachableAddresses=false, ackSndThreshold=32, unackedMsgsBufSize=0, sockWriteTimeout=2000, boundTcpPort=-1, boundTcpShmemPort=-1, selectorsCnt=4, selectorSpins=0, addrRslvr=null, ctxInitLatch=java.util.concurrent.CountDownLatch@32fffc91[Count = 1], stopping=false], evtSpi=MemoryEventStorageSpi [expireAgeMs=9223372036854775807, expireCnt=10000, filter=null], colSpi=NoopCollisionSpi [], deploySpi=LocalDeploymentSpi [], indexingSpi=org.apache.ignite.spi.indexing.noop.NoopIndexingSpi@575fce9d, addrRslvr=null, encryptionSpi=org.apache.ignite.spi.encryption.noop.NoopEncryptionSpi@89fa71e, clientMode=false, rebalanceThreadPoolSize=1, txCfg=TransactionConfiguration [txSerEnabled=false, dfltIsolation=REPEATABLE_READ, dfltConcurrency=PESSIMISTIC, dfltTxTimeout=0, txTimeoutOnPartitionMapExchange=0, pessimisticTxLogSize=0, pessimisticTxLogLinger=10000, tmLookupClsName=null, txManagerFactory=null, useJtaSync=false], cacheSanityCheckEnabled=true, discoStartupDelay=60000, deployMode=SHARED, p2pMissedCacheSize=100, locHost=127.0.0.1, timeSrvPortBase=31100, timeSrvPortRange=100, failureDetectionTimeout=10000, sysWorkerBlockedTimeout=null, clientFailureDetectionTimeout=10000, metricsLogFreq=0, hadoopCfg=null, connectorCfg=null, odbcCfg=null, warmupClos=null, atomicCfg=AtomicConfiguration [seqReserveSize=1000, cacheMode=PARTITIONED, backups=1, aff=null, grpName=null], classLdr=null, sslCtxFactory=null, platformCfg=null, binaryCfg=null, memCfg=null, pstCfg=null, dsCfg=DataStorageConfiguration [sysRegionInitSize=41943040, sysRegionMaxSize=104857600, pageSize=0, concLvl=0, dfltDataRegConf=DataRegionConfiguration [name=default, maxSize=3301543116, initSize=268435456, swapPath=null, pageEvictionMode=DISABLED, evictionThreshold=0.9, emptyPagesPoolSize=100, metricsEnabled=false, metricsSubIntervalCount=5, metricsRateTimeInterval=60000, persistenceEnabled=false, checkpointPageBufSize=0], dataRegions=null, storagePath=null, checkpointFreq=180000, lockWaitTime=10000, checkpointThreads=4, checkpointWriteOrder=SEQUENTIAL, walHistSize=20, maxWalArchiveSize=1073741824, walSegments=10, walSegmentSize=67108864, walPath=db/wal, walArchivePath=db/wal/archive, metricsEnabled=false, walMode=LOG_ONLY, walTlbSize=131072, walBuffSize=0, walFlushFreq=2000, walFsyncDelay=1000, walRecordIterBuffSize=67108864, alwaysWriteFullPages=false, fileIOFactory=org.apache.ignite.internal.processors.cache.persistence.file.AsyncFileIOFactory@425490e1, metricsSubIntervalCnt=5, metricsRateTimeInterval=60000, walAutoArchiveAfterInactivity=-1, writeThrottlingEnabled=false, walCompactionEnabled=false, walCompactionLevel=1, checkpointReadLockTimeout=null], activeOnStart=true, autoActivation=true, longQryWarnTimeout=3000, sqlConnCfg=null, cliConnCfg=ClientConnectorConfiguration [host=null, port=10800, portRange=100, sockSndBufSize=0, sockRcvBufSize=0, tcpNoDelay=true, maxOpenCursorsPerConn=128, threadPoolSize=8, idleTimeout=0, jdbcEnabled=true, odbcEnabled=true, thinCliEnabled=true, sslEnabled=false, useIgniteSslCtxFactory=true, sslClientAuth=false, sslCtxFactory=null], mvccVacuumThreadCnt=2, mvccVacuumFreq=5000, authEnabled=false, failureHnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]], commFailureRslvr=null]
[2018-12-11 02:08:14,673][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Daemon mode: off
[2018-12-11 02:08:14,673][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] OS: Linux 4.15.0-42-generic amd64
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] OS user: home
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] PID: 6307
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Language runtime: Java Platform API Specification ver. 1.8
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM information: Java(TM) SE Runtime Environment 1.8.0_191-b12 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.191-b12
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM total memory: 3.4GB
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Remote Management [restart: off, REST: off, JMX (remote: off)]
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Logger: GridTestLog4jLogger [quiet=false, config=null]
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] IGNITE_HOME=/home/home/work/ignite
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] VM arguments: [-ea, -Didea.test.cyclic.buffer.size=102424576, -javaagent:/opt/idea-IC-182.5107.16/lib/idea_rt.jar=40681:/opt/idea-IC-182.5107.16/bin, -Dfile.encoding=UTF-8]
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] System cache's DataRegion size is configured to 40 MB. Use DataStorageConfiguration.systemRegionInitialSize property to change the setting.
[2018-12-11 02:08:14,674][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Configured caches [in 'sysMemPlc' dataRegion: ['ignite-sys-cache'], in 'default' dataRegion: ['default']]
[2018-12-11 02:08:14,674][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Peer class loading is enabled (disable it in production for performance and deployment consistency reasons)
[2018-12-11 02:08:14,675][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Please set system property '-Djava.net.preferIPv4Stack=true' to avoid possible problems in mixed environments.
[2018-12-11 02:08:14,680][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 3-rd party licenses can be found at: /home/home/work/ignite/libs/licenses
[2018-12-11 02:08:14,681][WARN ][pub-#119%cache.ClientReconnectSelfTest0%][GridDiagnostic] Initial heap size is 246MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[2018-12-11 02:08:14,686][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] Configured plugins:
[2018-12-11 02:08:14,686][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- TestReconnectPlugin 1.0
[2018-12-11 02:08:14,686][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:08:14,686][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:14,686][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- StanByClusterTestProvider 1.0
[2018-12-11 02:08:14,686][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- null
[2018-12-11 02:08:14,686][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:14,687][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- PageMemory tracker plugin 1.0
[2018-12-11 02:08:14,687][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor]   ^-- 
[2018-12-11 02:08:14,687][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgnitePluginProcessor] 
[2018-12-11 02:08:14,687][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][FailureProcessor] Configured failure handler: [hnd=StopNodeFailureHandler [super=AbstractFailureHandler [ignoredFailureTypes=SingletonSet [SYSTEM_WORKER_BLOCKED]]]]
[2018-12-11 02:08:14,688][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Successfully bound communication NIO server to TCP port [port=45010, locHost=/127.0.0.1, selectorsCnt=4, selectorSpins=0, pairedConn=false]
[2018-12-11 02:08:14,689][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][TcpCommunicationSpi] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[2018-12-11 02:08:14,697][WARN ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCollisionManager] Collision resolution is disabled (all jobs will be activated upon arrival).
[2018-12-11 02:08:14,697][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Security status [authentication=off, tls/ssl=off]
[2018-12-11 02:08:14,702][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteCacheDatabaseSharedManager] Configured data regions initialized successfully [total=3]
[2018-12-11 02:08:14,703][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][PartitionsEvictManager] Evict partition permits=2
[2018-12-11 02:08:14,713][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientListenerProcessor] Client connector processor has started on TCP port 10800
[2018-12-11 02:08:14,719][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Non-loopback local IPs: 192.168.31.180, fe80:0:0:0:3e1e:a1db:8101:16f8%wlp0s20f3
[2018-12-11 02:08:14,719][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Enabled local MACs: 645D86A76B6F
[2018-12-11 02:08:14,723][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TestTcpDiscoverySpi] Connection check threshold is calculated: 10000
[2018-12-11 02:08:14,723][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][TestTcpDiscoverySpi] Successfully bound to TCP port [port=47500, localHost=/127.0.0.1, locNodeId=17a9205d-4962-4b68-ac8d-0620fbd00000]
[2018-12-11 02:08:14,730][INFO ][disco-notifier-worker-#133%cache.ClientReconnectSelfTest0%][MvccProcessorImpl] Assigned mvcc coordinator [crd=MvccCoordinator [nodeId=17a9205d-4962-4b68-ac8d-0620fbd00000, crdVer=1544483294727, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]], crdNode=TcpDiscoveryNode [id=17a9205d-4962-4b68-ac8d-0620fbd00000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483294716, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=false]]
[2018-12-11 02:08:14,731][INFO ][disco-notifier-worker-#133%cache.ClientReconnectSelfTest0%][MvccProcessorImpl] Initialize local node as mvcc coordinator [node=17a9205d-4962-4b68-ac8d-0620fbd00000, crdVer=1544483294727]
[2018-12-11 02:08:14,732][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], crd=true, evt=NODE_JOINED, evtNode=17a9205d-4962-4b68-ac8d-0620fbd00000, customEvt=null, allowMerge=false]
[2018-12-11 02:08:14,733][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][IgniteCacheDatabaseSharedManager] Configured data regions started successfully [total=3]
[2018-12-11 02:08:14,733][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][msg] Components activation performed in 1 ms.
[2018-12-11 02:08:14,739][INFO ][sys-#139%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Started cache [name=ignite-sys-cache, id=-2100569601, dataRegionName=sysMemPlc, mode=REPLICATED, atomicity=TRANSACTIONAL, backups=2147483647, mvcc=false]
[2018-12-11 02:08:14,740][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Started cache [name=default, id=1544803905, dataRegionName=default, mode=PARTITIONED, atomicity=TRANSACTIONAL, backups=1, mvcc=false]
[2018-12-11 02:08:14,740][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Starting caches on local join performed in 10 ms.
[2018-12-11 02:08:14,741][INFO ][sys-#143%cache.ClientReconnectSelfTest0%][GridAffinityAssignmentCache] Local node affinity assignment distribution is not ideal [cache=default, expectedPrimary=32,00, actualPrimary=32, expectedBackups=32,00, actualBackups=0, warningThreshold=50,00%]
[2018-12-11 02:08:14,742][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Skipped waiting for partitions release future (local node is joining) [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]]
[2018-12-11 02:08:14,758][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] finishExchangeOnCoordinator [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=1, minorTopVer=0]]
[2018-12-11 02:08:14,758][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Affinity changes (coordinator) applied in 0 ms.
[2018-12-11 02:08:14,759][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Partitions validation performed in 1 ms.
[2018-12-11 02:08:14,759][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Partitions assignment performed in 0 ms.
[2018-12-11 02:08:14,762][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Preparing Full Message performed in 2 ms.
[2018-12-11 02:08:14,762][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], err=null]
[2018-12-11 02:08:14,762][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Detecting lost partitions performed in 0 ms.
[2018-12-11 02:08:14,762][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Finish proxy initialization, cacheName=default, localNodeId=17a9205d-4962-4b68-ac8d-0620fbd00000
[2018-12-11 02:08:14,762][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCacheProcessor] Finish proxy initialization, cacheName=ignite-sys-cache, localNodeId=17a9205d-4962-4b68-ac8d-0620fbd00000
[2018-12-11 02:08:14,763][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridDhtPartitionsExchangeFuture] Completed partition exchange [localNode=17a9205d-4962-4b68-ac8d-0620fbd00000, exchange=GridDhtPartitionsExchangeFuture [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], evt=NODE_JOINED, evtNode=TcpDiscoveryNode [id=17a9205d-4962-4b68-ac8d-0620fbd00000, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1544483294716, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=false], done=true], topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], durationFromInit=30]
[2018-12-11 02:08:14,763][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], crd=true]
[2018-12-11 02:08:14,764][INFO ][exchange-worker-#135%cache.ClientReconnectSelfTest0%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=1, minorTopVer=0], force=false, evt=NODE_JOINED, node=17a9205d-4962-4b68-ac8d-0620fbd00000]
[2018-12-11 02:08:14,769][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Performance suggestions for grid 'cache.ClientReconnectSelfTest0' (fix if possible)
[2018-12-11 02:08:14,769][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[2018-12-11 02:08:14,769][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable checkpoints (remove 'checkpointSpi' from configuration)
[2018-12-11 02:08:14,769][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[2018-12-11 02:08:14,769][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Decrease number of backups (set 'backups' to 0)
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Enable ATOMIC mode if not using transactions (set 'atomicityMode' to ATOMIC)
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable fully synchronous writes (set 'writeSynchronizationMode' to PRIMARY_SYNC or FULL_ASYNC)
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- Disable assertions (remove '-ea' from JVM options)
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] Data Regions Configured:
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0]   ^-- default [initSize=256,0 MiB, maxSize=3,1 GiB, persistence=false]
[2018-12-11 02:08:14,770][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>> +-------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a
>>> +-------------------------------------------------------------------------------+
>>> OS name: Linux 4.15.0-42-generic amd64
>>> CPU(s): 8
>>> Heap: 3.4GB
>>> VM name: 6307@home-G5-5587
>>> Ignite instance name: cache.ClientReconnectSelfTest0
>>> Local node [ID=17A9205D-4962-4B68-AC8D-0620FBD00000, order=1, clientMode=false]
>>> Local node addresses: [127.0.0.1]
>>> Local ports: TCP:10800 TCP:45010 TCP:47500 

[2018-12-11 02:08:14,771][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDiscoveryManager] Topology snapshot [ver=1, locNode=17a9205d, servers=1, clients=0, state=ACTIVE, CPUs=8, offheap=3.1GB, heap=3.4GB]
[2018-12-11 02:08:14,771][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] Node started with the following configuration [id=17a9205d-4962-4b68-ac8d-0620fbd00000, marshaller=BinaryMarshaller [], discovery=TcpDiscoverySpi [addrRslvr=null, sockTimeout=5000, ackTimeout=5000, marsh=JdkMarshaller [clsFilter=org.apache.ignite.marshaller.MarshallerUtils$1@4cc76224], reconCnt=10, reconDelay=2000, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], binaryCfg=null, lateAff=true]
[2018-12-11 02:08:14,774][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] >>> Stopping grid [name=client, id=124f01de-a1a4-4cb4-9567-acbb2622047b]
[2018-12-11 02:08:16,614][INFO ][tcp-disco-srvr-#17%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery accepted incoming connection [rmtAddr=/127.0.0.1, rmtPort=48951]
[2018-12-11 02:08:16,615][INFO ][tcp-disco-srvr-#17%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery spawning a new thread for connection [rmtAddr=/127.0.0.1, rmtPort=48951]
[2018-12-11 02:08:16,615][INFO ][tcp-disco-sock-reader-#19%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Started serving remote node connection [rmtAddr=/127.0.0.1:48951, rmtPort=48951]
[2018-12-11 02:08:16,629][INFO ][tcp-disco-sock-reader-#19%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Finished serving remote node connection [rmtAddr=/127.0.0.1:48951, rmtPort=48951
[2018-12-11 02:08:16,631][INFO ][tcp-client-disco-msg-worker-#10%client%][TestTcpDiscoverySpi] Client node disconnected from cluster, will try to reconnect with new id [newId=6082a6a8-6fd9-469a-80d3-8e7af6b1d4e5, prevId=124f01de-a1a4-4cb4-9567-acbb2622047b, locNode=TcpDiscoveryNode [id=124f01de-a1a4-4cb4-9567-acbb2622047b, addrs=ArrayList [127.0.0.1], sockAddrs=HashSet [/127.0.0.1:0], discPort=0, order=2, intOrder=0, lastExchangeTime=1544483294422, loc=true, ver=2.7.0#20181203-sha1:d19123d4, isClient=true]]
[2018-12-11 02:08:16,631][INFO ][tcp-disco-srvr-#17%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery accepted incoming connection [rmtAddr=/127.0.0.1, rmtPort=33985]
[2018-12-11 02:08:16,631][INFO ][tcp-disco-srvr-#17%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] TCP discovery spawning a new thread for connection [rmtAddr=/127.0.0.1, rmtPort=33985]
[2018-12-11 02:08:16,632][INFO ][tcp-disco-sock-reader-#21%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Started serving remote node connection [rmtAddr=/127.0.0.1:33985, rmtPort=33985]
[2018-12-11 02:08:16,647][INFO ][tcp-disco-sock-reader-#21%cache.ClientReconnectSelfTest0%][TestTcpDiscoverySpi] Finished serving remote node connection [rmtAddr=/127.0.0.1:33985, rmtPort=33985
[2018-12-11 02:08:16,647][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=ignite-sys-cache]
[2018-12-11 02:08:16,649][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Removed undeployed class: GridDeployment [ts=1544483294563, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@18b4aac2, clsLdrId=267c06a9761-124f01de-a1a4-4cb4-9567-acbb2622047b, userVer=0, loc=true, sampleClsName=java.util.Collections$UnmodifiableMap, pendingUndeploy=false, undeployed=true, usage=0]
[2018-12-11 02:08:16,653][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionMap
[2018-12-11 02:08:16,653][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.service.GridServiceProcessor$1
[2018-12-11 02:08:16,653][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.IgniteDhtPartitionsToReloadMap
[2018-12-11 02:08:16,653][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.IgniteDhtPartitionCountersMap2
[2018-12-11 02:08:16,653][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionFullMap
[2018-12-11 02:08:16,653][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.CachePartitionFullCountersMap
[2018-12-11 02:08:16,653][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class org.apache.ignite.internal.processors.cache.distributed.dht.preloader.IgniteDhtPartitionHistorySuppliersMap
[2018-12-11 02:08:16,653][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridDeploymentLocalStore] Class locally undeployed: class java.util.Collections$UnmodifiableMap
[2018-12-11 02:08:16,655][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][IgniteKernal%client] 

>>> +------------------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a stopped OK
>>> +------------------------------------------------------------------------------------------+
>>> Ignite instance name: client
>>> Grid uptime: 00:00:02.069


[2018-12-11 02:08:16,659][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][root] >>> Stopping grid [name=cache.ClientReconnectSelfTest0, id=17a9205d-4962-4b68-ac8d-0620fbd00000]
[2018-12-11 02:08:16,685][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=default]
[2018-12-11 02:08:16,686][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][GridCacheProcessor] Stopped cache [cacheName=ignite-sys-cache]
[2018-12-11 02:08:16,692][INFO ][test-runner-#1%cache.ClientReconnectSelfTest%][ClientReconnectSelfTest0] 

>>> +------------------------------------------------------------------------------------------+
>>> Ignite ver. 2.7.0-SNAPSHOT#20181203-sha1:d19123d46f367daa783674172485ffc438b6b96a stopped OK
>>> +------------------------------------------------------------------------------------------+
>>> Ignite instance name: cache.ClientReconnectSelfTest0
>>> Grid uptime: 00:00:01.917


[2018-12-11 02:08:16,696][INFO ][main][root] >>> Stopping test: ClientReconnectSelfTest#testReconnect in 3908 ms <<<
[2018-12-11 02:08:16,697][INFO ][main][root] >>> Stopping test class: ClientReconnectSelfTest <<<
[2018-12-11 02:08:16,696][ERROR][main][root] Test failed.
junit.framework.AssertionFailedError: Found nodes from different clusters, probable some test does not stop nodes [allNodes=[cache.ClientReconnectSelfTest0, client]]
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:609)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:547)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:532)
	at org.apache.ignite.internal.processors.cache.ClientReconnectSelfTest.testReconnect(ClientReconnectSelfTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$001(GridAbstractTest.java:149)
	at org.apache.ignite.testframework.junits.GridAbstractTest$6.evaluate(GridAbstractTest.java:2106)
	at org.apache.ignite.testframework.junits.GridAbstractTest$7.run(GridAbstractTest.java:2123)
	at java.lang.Thread.run(Thread.java:748)

junit.framework.AssertionFailedError: Found nodes from different clusters, probable some test does not stop nodes [allNodes=[cache.ClientReconnectSelfTest0, client]]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:609)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:547)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:532)
	at org.apache.ignite.internal.processors.cache.ClientReconnectSelfTest.testReconnect(ClientReconnectSelfTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$001(GridAbstractTest.java:149)
	at org.apache.ignite.testframework.junits.GridAbstractTest$6.evaluate(GridAbstractTest.java:2106)
	at org.apache.ignite.testframework.junits.GridAbstractTest$7.run(GridAbstractTest.java:2123)
	at java.lang.Thread.run(Thread.java:748)


Process finished with exit code 255

{noformat}
They haven't differenced. 

Could you attach your log/stacktrace with the fail, please?;;;","11/Dec/18 08:33;ascherbakov;[~NSAmelchev],

Always fails for me. Try running it several times. Looks like a race on client reconnect and node startup (discovery is not initialized yet). 
{noformat}
java.lang.NullPointerException
at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.getRemoteNodes(TcpDiscoverySpi.java:454)
at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.isHandshakeWaitSupported(TcpCommunicationSpi.java:4094)
at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.access$400(TcpCommunicationSpi.java:274)
at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$2.onConnected(TcpCommunicationSpi.java:418)
at org.apache.ignite.internal.util.nio.GridNioFilterChain$TailFilter.onSessionOpened(GridNioFilterChain.java:251)
at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedSessionOpened(GridNioFilterAdapter.java:88)
at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onSessionOpened(GridNioCodecFilter.java:67)
at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedSessionOpened(GridNioFilterAdapter.java:88)
at org.apache.ignite.internal.util.nio.GridConnectionBytesVerifyFilter.onSessionOpened(GridConnectionBytesVerifyFilter.java:58)
at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedSessionOpened(GridNioFilterAdapter.java:88)
at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onSessionOpened(GridNioServer.java:3503)
at org.apache.ignite.internal.util.nio.GridNioFilterChain.onSessionOpened(GridNioFilterChain.java:139)
at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.register(GridNioServer.java:2616)
at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:1974)
at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1795)
at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:120)
at java.lang.Thread.run(Thread.java:745){noformat}
 

 

 

 ;;;","12/Dec/18 13:18;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/5650

    IGNITE-4111 Fix NPE on client connected before disco impl initialized

    It happens when someone client connect before discovery impl started.
    - add fix (return empty collection)
    - add test

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite ignite-4111_fix_npe

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5650.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5650
    
----
commit 3c57f869fdb9124a4fb46dc46ab1206eaddc4bd2
Author: NSAmelchev <nsamelchev@...>
Date:   2018-12-12T11:57:33Z

    Fix issue

commit 3c635c6def95a8862f2fac56aa18a1afb534f032
Author: NSAmelchev <nsamelchev@...>
Date:   2018-12-12T13:07:37Z

    Move test

----
;;;","13/Dec/18 09:09;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2530616&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","13/Dec/18 09:12;NSAmelchev;[~ascherbakov], Thank you for reporting this issue!

I still can't get the NPE with the reproducer and on TC it doesn't fail too ([tests log|https://ci.ignite.apache.org/viewLog.html?buildId=2522954&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Cache9#testNameId-3818521143170875066]).

But I have investigated the issue and problem is that anyone client tries to connect to this node by communication SPI before disco SPI initialized implementation. There is a question about how other nodes try to connect to a node that is not in topology yet.
In any case, this is a bug and I have prepared the fix and direct reproducer. This method called for compatibility resolving. In the fix, it will return empty collections of nodes until impl initialized.

[~agoncharuk], could you take a look [at PR|https://github.com/apache/ignite/pull/5650], please?;;;","18/Dec/18 15:58;agoncharuk;[~NSAmelchev], thanks, merged to master.;;;","18/Dec/18 16:01;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/5650
;;;",,,,,,,
BlockingSslHandler does not properly handle BUFFER_UNDERFLOW after unwrap,IGNITE-4110,13015190,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vkulichenko,vkulichenko,vkulichenko,25/Oct/16 18:47,28/Oct/16 23:19,14/Jul/23 06:20,28/Oct/16 23:18,1.7,,,1.8,general,,,,,0,,,,"{{BlockingSslHandler.unwrapHandshake()}} method ignores the case when {{BUFFER_UNDERFLOW}} status is returned from the {{unwrap}} method.

Under different circumstances this can cause infinite loop of this exception:
{noformat}
Failed to read from channel: javax.net.ssl.SSLException: Unsupported record version Unknown-70.97
{noformat}

To reproduce the issue:
# Change {{BlockingSslHandler.inNetBuf}} initial capacity to 1000.
# Run {{GridTcpCommunicationSpiSslSelfTest}}.",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Oct 26 22:55:12 UTC 2016,,,,,,,,,,"0|i35dp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/16 22:55;vkulichenko;Fixed {{BUFFER_UNDERFLOW}} and {{BUFFER_OVERFLOW}} handling in {{BlockingSslHandler}}.

Changes are in branch {{ignite-4110}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryType.isEnum() throws an exception if typeId==0,IGNITE-4109,13014856,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,vkulichenko,vkulichenko,24/Oct/16 20:16,23/Dec/16 14:52,14/Jul/23 06:20,23/Dec/16 14:52,1.7,,,2.0,binary,,,,,0,,,,"If {{typeId==0}} and full class name is written in the binary format, {{BinaryType.isEnum()}} method fails with the exception:
{noformat}
Caused by: org.apache.ignite.binary.BinaryObjectException: Failed to get binary type details [typeId=0]
  at org.apache.ignite.internal.binary.BinaryTypeProxy.target(BinaryTypeProxy.java:99) ~[ignite-core-1.6.7.jar:1.6.7]
  at org.apache.ignite.internal.binary.BinaryTypeProxy.isEnum(BinaryTypeProxy.java:86) ~[ignite-core-1.6.7.jar:1.6.7]
{noformat}
This happens because {{BinaryTypeProxy.target()}} method ignores this case. If {{typeId==0}}, It should look up full class name from the object and convert it to the actual type ID before trying to fetch metadata.",,dkarachentsev,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 23 13:40:27 UTC 2016,,,,,,,,,,"0|i35bmv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 10:44;dkarachentsev;Valentin,

Do you know any possible scenario for such situation? I can reproduce it with synthetic test only.;;;","21/Dec/16 15:32;vkulichenko;Dmitry, we write zero type ID and full class name in case we want to register a new class, but there is a ongoing exchange at the time. This is done to avoid deadlocks and must happen very rarely indeed. It's OK if it's reproduced only in a synthetic test.;;;","22/Dec/16 12:53;dkarachentsev;[PR#1373|https://github.com/apache/ignite/pull/1373];;;","23/Dec/16 07:33;sboikov;Hi Dmitry,

I'm not sure about this in BinaryTypeProxy.target():
{noformat}
typeId = ctx.userTypeMapper(clsName).typeId(clsName);
{noformat}
Isn't it more correct to use instead
{noformat}
typeId = ctx.typeId(clsName);
{noformat}

Thanks!;;;","23/Dec/16 08:26;dkarachentsev;Thanks for review! 

Yes, you're right, please check now.;;;","23/Dec/16 13:40;sboikov;Looks good to merge.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console - SQL: the 'next' button is available after incorrect query,IGNITE-4104,13014618,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,pkonstantinov,pkonstantinov,24/Oct/16 02:38,28/Oct/16 08:41,14/Jul/23 06:20,28/Oct/16 08:09,,,,,wizards,,,,,0,,,,"# execute Scan - next become available
# enter incorrect sql query, e.g. 'dfasdjufhlsj' and click on Explain - next still available, but should be invisible
# the same issue in case when SQL query results are expired - next should be invisble",,Dmitriyff,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 28 08:40:53 UTC 2016,,,,,,,,,,"0|i35a5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Oct/16 08:56;Dmitriyff;Added fix. pls review it;;;","28/Oct/16 08:09;kuaw26;Fixed on staging. Please test.;;;","28/Oct/16 08:40;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some typos and missing references in cpp platform instructions,IGNITE-4100,13013845,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,krybakova,krybakova,krybakova,20/Oct/16 13:00,13/Jan/17 18:29,14/Jul/23 06:20,22/Nov/16 11:14,1.6,,,1.8,platforms,,,,,0,,,,"1) Fix typo in $IGNITE_HOME/platforms/cpp/DEVNOTES.txt, line 40:
{{heasders}} -> {{headers}}

2)  Fix typo in  $IGNITE_HOME/platforms/cpp/README.txt, line 5:
{{you can execute perform}} -> {{you can perform}} or {{you can execute}}

3) Fix typo in  $IGNITE_HOME/platforms/cpp/README.txt, line 52:
{{odbc.dll}} -> {{ignite.odbc.dll}}

4) $IGNITE_HOME/platforms/cpp/DEVNOTES.txt: 
add some note (to both linux and windows sections or to common section) that user should refer to $IGNITE_HOME/platforms/cpp/odbc/README.txt  to install odbc driver

5) $IGNITE_HOME/platforms/cpp/examples/README.txt, line 10 {{Apache Ignite C++ must be built according to instructions for your platform}}:
add a reference to the instruction $IGNITE_HOME/platforms/cpp/DEVNOTES.txt

6) $IGNITE_HOME/platforms/cpp/examples/README.txt, line 29 {{Apache Ignite ODBC driver must be built and installed according to instructions for your platform.}}:
suggest you moving this to {{Common requirements}} (since it's actual for both Linux and Win) and adding a reference to the instruction $IGNITE_HOME/platforms/cpp/odbc/README.txt",,githubbot,isapego,krybakova,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 13 18:29:58 UTC 2017,,,,,,,,,,"0|i355e7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/16 16:20;isapego;1-3) Fixed.
4) Added notice to both DEVNOTES.txt and README.txt, to the beginning of the documents.
5-6) Done.;;;","06/Nov/16 11:22;vozerov;Igor,

I do not understand the directory {{odbc/README.txt}}. Where is it located? I would rather type ralative from {{$IGNITE_HOME}}.

Vladimir.;;;","09/Nov/16 15:52;isapego;Vladimir, the problem is there are different paths for binary and source distributions:
* {{$IGNITE_HOME/modules/platforms/cpp/odbc/README.txt}} for source distribution.
* {{$IGNITE_HOME/platforms/cpp/odbc/README.txt}} for binary distribution.;;;","09/Nov/16 15:57;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1223

    IGNITE-4100: Improved README and DEVNOTES for CPP.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4100

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1223.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1223
    
----
commit 7290d88e14a15a3d030b7381dbd0a3f14cb65a12
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-18T14:17:17Z

    IGNITE-4030 Streamline PlatformTarget operation methods
    
    This closes #1167

commit 66c76d1f30f024b58db8cab07ba9e7d429f596f8
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-18T15:45:06Z

    IGNITE-2355 Fixed the test HadoopClientProtocolMultipleServersSelfTest. Clear connection poll after the test, cosmetic.

commit f37fbcab1ae2c7553696e96b7a9c3194a570d7af
Author: isapego <isapego@gridgain.com>
Date:   2016-10-19T10:06:42Z

    IGNITE-3705: Fixed compiliation warnings. This closes #1169.

commit 7ed2bb7e341701d052220a36a2b2f8f0a46fd644
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2016-10-19T15:33:59Z

    IGNITE-3448 Support SQL queries with distinct aggregates added. This closes #3448.

commit 551a4dfae6169a07a5e28f9b266f90311f3216b7
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-21T10:25:57Z

    IGNITE-2355 Fixed the test HadoopClientProtocolMultipleServersSelfTest. Clear connection poll before and after  the test

commit ec12a9db2265180f96be72e2217e60ced856164e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-24T14:52:36Z

    Minor fix for flags passed to GridCacheMapEntry.initialValue from data streamer isolated updater.

commit 44740465677c39068dc813dabd464e60f09e5f49
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-26T13:00:11Z

    IGNITE-4062: fix BinaryObject.equals: compare only bytes containing the fields' data (without header and footer). This closes  #1182.

commit c22411b740d1cdbe0c24c2502b4d6cb992335d6f
Author: isapego <isapego@gridgain.com>
Date:   2016-10-26T16:16:14Z

    IGNITE-4100: Improved README and DEVNOTES for CPP.

commit 277691c1da25746093eb96019f2801386922fdbd
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T15:55:03Z

    IGNITE-4100: Specified full path to ODBC readme file.

----
;;;","09/Nov/16 15:59;isapego;On the second look I've noticed that there are a lot of paths already in both README and DEVNOTES, which use binary version of path. Did the same.;;;","10/Nov/16 10:30;krybakova;[~isapego] Please, clarify in DEVNOTES.txt ""To build ODBC driver you need to install ODBC Driver Manager on you system.
   Apache Ignite has been tested with UnixODBC."" that unixodbc-dev package should be installed. If I install unixodbc instead of unixodbc-dev I get an error during ./configure:
{noformat}
In file included from src/app/application_data_buffer.cpp:26:0:
./include/ignite/odbc/system/odbc_constants.h:34:20: fatal error: sqlext.h: No such file or directory
...
{noformat};;;","10/Nov/16 10:38;isapego;Ksenia, 
Fixed. Thank you.;;;","10/Nov/16 18:10;ptupitsyn;Looks good to me.;;;","17/Nov/16 13:06;krybakova;Please, change odbc/README.txt to $IGNITE_HOME/platforms/cpp/odbc/README.txt in DEVNOTES as well;;;","17/Nov/16 13:12;isapego;Fixed.;;;","18/Nov/16 12:29;ptupitsyn;Looks good to me.;;;","24/Nov/16 08:10;krybakova;verified;;;","13/Jan/17 18:29;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1223
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Deprecated CompiledQuery is used in examples,IGNITE-4095,13013539,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,19/Oct/16 13:24,09/Dec/16 15:13,14/Jul/23 06:20,17/Nov/16 12:02,1.7,,,1.8,platforms,,,,,0,.NET,,,Replace deprecated API calls in examples (including LINQ),,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-10-19 13:24:02.0,,,,,,,,,,"0|i353i7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: SQL - cache name is not displayed for default cache (cache name is null) in 'show query' dialog,IGNITE-4079,13012243,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,pkonstantinov,pkonstantinov,14/Oct/16 04:37,14/Oct/16 08:14,14/Jul/23 06:20,14/Oct/16 08:03,1.7,,,1.8,wizards,,,,,0,,,,"We should display '<default>'.

# choose <default> cache
# SCAN
# click on 'show query'
",,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 14 08:14:10 UTC 2016,,,,,,,,,,"0|i34vmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/16 08:03;kuaw26;Fixed on staging.;;;","14/Oct/16 08:14;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: can not choose a cache by clicking on it,IGNITE-4076,13012234,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,14/Oct/16 03:47,14/Oct/16 11:01,14/Jul/23 06:20,14/Oct/16 08:56,,,,,wizards,,,,,0,,,,"# Open SQL page
# Create a second query
# Click by cache name

In my case the page is scrolled up instead of cache selecting.",,mafanasiev,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 14 11:01:32 UTC 2016,,,,,,,,,,"0|i34vkf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/16 08:55;mafanasiev;Fixed. Please test.;;;","14/Oct/16 11:01;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Focus lost from key type on input.,IGNITE-4071,13011947,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,13/Oct/16 10:48,19/Oct/16 02:20,14/Jul/23 06:20,19/Oct/16 02:20,1.8,,,1.8,wizards,,,,,0,,,,"On model page:
# Uncheck ""Generate POJO classes"" checkbox.
# Try to input into ""Key type"" field.
After every input field lost focus.",,anovikov,mafanasiev,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Oct 19 02:20:01 UTC 2016,,,,,,,,,,"0|i34tsn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Oct/16 16:41;mafanasiev;Fixed. Please review.;;;","19/Oct/16 02:20;anovikov;Reviewed. Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: error triangle icon is not displayed for some fields,IGNITE-4069,13011937,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,pkonstantinov,pkonstantinov,13/Oct/16 09:50,26/Oct/16 03:24,14/Jul/23 06:20,26/Oct/16 02:01,,,,1.8,wizards,,,,,0,,,,"For example this can be reproduced  on CollisionSPI fields for case FIFO.
To reproduce enter the value '-0' - the field shows red frame but red triangle is not displayed.",,Dmitriyff,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Oct 26 03:24:31 UTC 2016,,,,,,,,,,"0|i34tqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Oct/16 11:36;Dmitriyff;Added fix, pls check it
;;;","26/Oct/16 02:01;kuaw26;Looks good. Pavel, please test on staging.;;;","26/Oct/16 03:24;pkonstantinov;Tested using CollisionSPI.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on access CacheJdbcPojoStoreFactory.getTypes(),IGNITE-4066,13011891,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,13/Oct/16 04:44,13/Oct/16 06:04,14/Jul/23 06:20,13/Oct/16 06:04,1.6,,,1.8,general,,,,,0,,,,Check that all places where CacheJdbcPojoStoreFactory.getTypes() invoked and fix.,,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-10-13 04:44:19.0,,,,,,,,,,"0|i34tg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryType.fieldNames() should return names in consistent order,IGNITE-4063,13011807,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,tledkov-gridgain,vkulichenko,vkulichenko,12/Oct/16 21:38,22/Dec/16 15:16,14/Jul/23 06:20,09/Dec/16 13:05,1.7,,,2.0,binary,,,,,0,,,,"In some cases it can be useful to get the field names from metadata in the order fields were written when the metadata was created (i.e. object was serialized for the first time). For example, this can be used to recreate the object using builder preserving the consistent field ordering, so that {{BinaryObject.equals()}} method works properly.

Basically, we just need to replace {{HashMap}} with {{LinkedHashMap}} in the {{BinaryType}} implementation.",,githubbot,tledkov-gridgain,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 22 15:16:38 UTC 2016,,,,,,,,,,"0|i34sxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Nov/16 15:20;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1270

    IGNITE-4063 BinaryType.fieldNames() should return names in consistent order

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4063

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1270.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1270
    
----
commit b038730ee56a662f73e02bbec83eb1712180fa82
Author: isapego <igorsapg@gmail.com>
Date:   2016-11-23T09:05:54Z

    IGNITE-4249: ODBC: Fixed performance issue caused by ineddicient IO handling on CPP side. This closes #1254.

commit 394d562125519193436026af30b93a9588ba08ba
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-23T15:10:18Z

    IGNITE-4063:  keep order of fields in the metadata according with schema

----
;;;","23/Nov/16 15:21;tledkov-gridgain;[Pull request|https://github.com/apache/ignite/pull/1270]
[Tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1270%2Fhead];;;","22/Dec/16 15:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1270
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObject header should not participate in equals test,IGNITE-4062,13011804,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,tledkov-gridgain,vkulichenko,vkulichenko,12/Oct/16 21:31,22/Nov/16 11:40,14/Jul/23 06:20,26/Oct/16 13:02,1.7,,,1.8,binary,,,,,0,,,,"{{BinaryObject.equals()}} compares the full byte array, which can give incorrect results in come cases. For example, we sometimes write full class name instead of type ID, so two objects that are equal from user's standpoint will have different binary representation and {{equals()}} will return false.

We should make {{equals()}} implementation more smart and compare separately:
* type ID
* hash code
* portion of byte array that contains actual data, i.e. fields without header and footer",,githubbot,tledkov-gridgain,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 11:40:33 UTC 2016,,,,,,,,,,"0|i34swv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Oct/16 14:56;tledkov-gridgain;How can I reproduce the case when the two instances of the same class are serialized: the first with typeId, and the second with full class name?;;;","21/Oct/16 16:10;tledkov-gridgain;I guess in case one of objects {{typeId == UNREGISTERED_TYPE_ID}} make sense compare the first {{hash}} codes and if they are equals check the class names.;;;","24/Oct/16 14:37;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1182

    IGNITE-4062  BinaryObject header should not participate in equals test

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4062

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1182.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1182
    
----
commit a4c63ae113931615e940ada2411ebce32dba5db8
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-09-30T07:45:13Z

    IGNITE-3998: IGFS: Enabled IgfsAbstractSelfTest.testCreateConsistencyMultithreaded. This closes #1129.

commit a12298c0baf19407f3110ba3c4f0aab88b67946d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-30T08:00:51Z

    IGNITE-3868: ODBC: Fixed connection string parsing. This closes #1051.

commit 5e7ef8644ad824b87d4797e59133eb783ff8b098
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:37:25Z

    Merge branch 'ignite-1.6.9' into ignite-1.6.10

commit 59b46d3e6ea073d054ca2262d676b055a74bbb1f
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:40:04Z

    IGNITE-2881: Fixed SPI queries.

commit 0b66d2d7b695cf370a4b8a717844ad67742c6090
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-03T09:04:03Z

    ignite-3601 Do not check version on commit for read-only serializable transactions.

commit 9f211e413332931f0fb1190744ddd7c7f38fd213
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-03T09:26:12Z

    IGNITE-3645: IGFS: Local secondary: Implemented update() operation. This closes #1003.

commit fa698d6fcfde0006423ef009337dbef58ac62515
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T10:33:12Z

    Fixed TcpDiscoverySnapshotHistoryTest intermittent failures caused by multicast IP finder.

commit bba019fd5076412ca43c10a32fd300b6031ccd0b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T14:25:20Z

    IGNITE-3980: Processed failing tests in query suites. This closes #1137.

commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit 23461b8d33922772ef8e7217e9e87b3f3b0b37b1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T07:14:59Z

    IGNITE-4001: Timeouts for threads in Ignite pools. This closes #1130.

commit b94b0aeae4c42b1d35128c6b1de97e3fa318d497
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-06T07:22:50Z

    IGNITE-3163 IGFS: Added working directory support to IgniteHadoopIgfsSecondaryFileSystem. This closes #1030. This closes #1058. This closes #1132.

commit e6317e01fa8a0de03e15dcdd84a575c6b06ce701
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T09:03:48Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect. This closes #903. This closes #1145.

commit 952be8b995050b34379006dd6e739da3fe3b49e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2016-10-07T12:00:09Z

    Squashed commit of the following:
    
    commit 566881b695b8bc00e618fe9a9b4c86a8fd563cc1
    Author: sboikov <sboikov@gridgain.com>
    Date:   Fri Oct 7 13:08:38 2016 +0300
    
        minor
    
    commit 7fe88a1cb21f794ee55a176ab36d895cbf916528
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Oct 6 11:11:24 2016 +0300
    
        ignite-update-notifier fix after review
    
        (cherry picked from commit a10d2ff)
    
    commit f2de749f958a3b18dc479f8a5517d7bf9362b933
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Oct 4 12:12:08 2016 +0300
    
        ignite-2079-2 optimize import and change url path
    
        (cherry picked from commit 830a3cf)
    
    commit 0d1be85ad55b0aa91224690d6c112ae92e8bc0a9
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Sep 29 19:54:54 2016 +0300
    
        update-notifier remove parse xml, now parse like properties
    
        (cherry picked from commit 9ecaa29)
    
    commit e43bca6fb4528a7fc0dcb804a74fca1c59d7468b
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Sep 27 17:07:21 2016 +0300
    
        remove dom parser
    
        (cherry picked from commit d1653b2)

commit b9c776a8423471706ecb1dc6176b38f23e799077
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-10T08:52:57Z

    IGNITE-3235 Failed to initialize primitive boolean cache property of superclass

commit f9a0676fad7fd6c23e3c91c10d7e0412ccb27c06
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T07:23:01Z

    IGNITE-4041: Created separate processor for thread pools and refactored IO manager. This closes #1150.

commit 9a6cfce659df40b0a4624f19fd91c217b74bafea
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-10-11T10:59:57Z

    IGNITE-4014 Fixed ""Transaction hangs if entry processor failed during serialization"". This closes #1148.

commit 1938a17b01fac1e08c30011180bbcc3ed7374d83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-11T11:50:18Z

    IGNITE-3948: Fixed a bug causing TTL manager to continue tracking of evicted entries. This closes #1101.

commit 60d27547dfc6bd27c6d39cbcc523d0d1e872a821
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T11:51:00Z

    Merge remote-tracking branch 'upstream/ignite-1.6.10' into ignite-1.6.10

commit 359a392f1c53217c691c4c40762c51fd330666e2
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes
    
    (cherry picked from commit a5c85ca)

commit 01ca6db70933fb7f50f161a80cde9647e68a3710
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-10-11T13:18:40Z

    Merge remote-tracking branch 'origin/ignite-1.6.10' into ignite-1.6.10

commit 0659bebe04dc9c0b0a163bc95061519c553e678c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T11:49:36Z

    IGNITE-3972: Fixed a bug causing continuous queries to be lost for ATOMIC cache when key's primary node leaves topology. This closes #1133.

commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T12:44:08Z

    IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.

commit 2ab094e08373dc6667af44d48a38b4f044953a79
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-12T13:48:51Z

    IGNITE-2355: Hadoop: added ability to configure multiple job tracker addresses. This closes #1153.

commit eaf8ae246cc799c1353332fcac05cb3a8efab02c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-12T16:57:09Z

    IGNITE-4034 Get rid of specialized methods in platform targets

commit b1ec58f716ece3a5866dd654ebc707bef67caf57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-10-13T05:58:22Z

    IGNITE-4066 Fixed NPE.

commit 447e07c0bb5af75bce6a14612606904e4e3d9705
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-14T08:40:41Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL

commit 7adfbcf1ee7bbe0beb95fa82749a2e04449de8fa
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-14T14:48:14Z

    IGNITE-4060: Fixed a bug in RoundRobinLoadBalancing API causing exception when running closures after client node reconnect. This closes #1157.

commit 80abd1b72e4fc7b0b95212e7f53c700c0fe21156
Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
Date:   2016-10-14T16:33:07Z

    GG-11360 - Implement SQL queries cancellation (#18)
    
    * GG-11360 Merged IGNITE-2680 to ignite-1.6.3.
    
    * GG-11360 Test cleanup.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Added test for forever-running query cancellation on node restart.
    
    * GG-11360 Fixing race.
    
    * GG-11360 Added test for forever-running query cancellation on node stop.
    
    * GG-11360 Cleanup.
    
    * GG-11360 Support for local query cancellation/timeout.
    
    * GG-11360 Increase test duration.
    
    * GG-11360 Remove redundant catch block.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * Merge remote-tracking branch 'remotes/gg/ignite-1.6.10' into ignite-gg-11360
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.

commit 43ac3f5d5e8ab664e07f26d99be34f284f7941dd
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-17T08:26:12Z

    IGNITE-4054: Hadoop: added map-reduce plan debug output.

commit d3f042b9ba6c605500ab7155c40a41850babefdb
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-17T09:28:31Z

    Fixed indexing test in according to changes from #80abd1b.

----
;;;","24/Oct/16 14:43;tledkov-gridgain;[Tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1182%2Fhead];;;","25/Oct/16 09:47;vozerov;Taras,
Let's simplify implementation and do the following:
1) Compare type IDs (converting type name to type ID in case of {{UNREGISTERED_TYPE_ID}}); return {{false}] if they do not match;
2) Find data start and footer start
3) If lengths of byte in-between are different - return {{false}};
4) Finally, compare everything in-between.;;;","25/Oct/16 19:25;tledkov-gridgain;Fixed.;;;","26/Oct/16 12:41;vozerov;LGTM. Please go ahead with merge as long as all tests are fine.;;;","22/Nov/16 11:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1182
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RoundRobinLoadBalancingSpi doesn't work after client reconnect.,IGNITE-4060,13011631,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vozerov,vozerov,12/Oct/16 10:56,09/Nov/16 08:39,14/Jul/23 06:20,14/Oct/16 14:47,1.7,,,1.8,compute,,,,,0,,,,"If {{IgntieCompute.apply()}} is called on a client after reconnect, it fails. Reproducer code is attached. The problem is that {{RoundRobinLoadBalancingSpi}} (which is default one) is not notified about topology reset.

Sample stack trace:
{code}
class org.apache.ignite.IgniteException: Task topology does not have alive nodes: [TcpDiscoveryNode [id=50f56f53-bbf6-4d66-bfc5-02d801241e14, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1476269284697, loc=false, ver=1.7.0#19700101-sha1:00000000, isClient=false]]
	at org.apache.ignite.spi.loadbalancing.roundrobin.RoundRobinGlobalLoadBalancer.checkBalancerNodes(RoundRobinGlobalLoadBalancer.java:256)
	at org.apache.ignite.spi.loadbalancing.roundrobin.RoundRobinGlobalLoadBalancer.getBalancedNode(RoundRobinGlobalLoadBalancer.java:201)
	at org.apache.ignite.spi.loadbalancing.roundrobin.RoundRobinLoadBalancingSpi.getBalancedNode(RoundRobinLoadBalancingSpi.java:307)
	at org.apache.ignite.internal.managers.loadbalancer.GridLoadBalancerManager.getBalancedNode(GridLoadBalancerManager.java:81)
	at org.apache.ignite.internal.managers.loadbalancer.GridLoadBalancerManager$1.getBalancedNode(GridLoadBalancerManager.java:99)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$T8.map(GridClosureProcessor.java:1616)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$T8.map(GridClosureProcessor.java:1587)
	at org.apache.ignite.internal.processors.task.GridTaskWorker$2.call(GridTaskWorker.java:519)
	at org.apache.ignite.internal.processors.task.GridTaskWorker$2.call(GridTaskWorker.java:517)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6509)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.body(GridTaskWorker.java:516)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.startTask(GridTaskProcessor.java:679)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:403)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor.callAsync(GridClosureProcessor.java:630)
	at org.apache.ignite.internal.IgniteComputeImpl.apply(IgniteComputeImpl.java:451)
{code}",,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/16 10:57;vozerov;RoundRodbinErrorReproducer.java;https://issues.apache.org/jira/secure/attachment/12832865/RoundRodbinErrorReproducer.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 09 08:39:08 UTC 2016,,,,,,,,,,"0|i34ruf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Oct/16 16:02;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1157

    IGNITE-4060  RoundRobinLoadBalancingSpi doesn't work after client reconnect.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4060

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1157.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1157
    
----

----
;;;","12/Oct/16 16:05;tledkov-gridgain;[Tests results|http://195.239.208.174/viewQueued.html?itemId=342151];;;","17/Oct/16 08:29;vozerov;Ticket completed.;;;","09/Nov/16 08:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1157
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Task error is always printed to the console.,IGNITE-4053,13011345,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,vozerov,vozerov,vozerov,11/Oct/16 13:48,22/Nov/16 11:40,14/Jul/23 06:20,11/Nov/16 12:01,1.7,,,1.8,compute,,,,,0,,,,"Currently if something wrong happens to the task, it prints error to the console:
{code}
java.lang.Throwable.printStackTrace(java.lang.Throwable$PrintStreamOrWriter) (line: 653)
java.lang.Throwable.printStackTrace(java.io.PrintStream) (line: 643)
org.apache.ignite.internal.util.IgniteUtils.error(org.apache.ignite.IgniteLogger, java.lang.Object, java.lang.Object, java.lang.Throwable) (line: 4171)
org.apache.ignite.internal.util.IgniteUtils.error(org.apache.ignite.IgniteLogger, java.lang.Object, java.lang.Throwable) (line: 4189)
org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(org.apache.ignite.lang.IgniteInClosure) (line: 269)
org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListeners() (line: 250)
org.apache.ignite.internal.util.future.GridFutureAdapter.onDone(java.lang.Object, java.lang.Throwable, boolean) (line: 380)
org.apache.ignite.internal.util.future.GridFutureAdapter.onDone(java.lang.Object, java.lang.Throwable)
org.apache.ignite.internal.processors.task.GridTaskWorker.finishTask(java.lang.Object, java.lang.Throwable, boolean) (line: 1475)
org.apache.ignite.internal.processors.task.GridTaskWorker.finishTask(java.lang.Object, java.lang.Throwable) (line: 1443)
org.apache.ignite.internal.processors.task.GridTaskWorker$4.apply() (line: 988)
org.apache.ignite.internal.processors.task.GridTaskWorker$4.apply()
org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(java.lang.ClassLoader, org.apache.ignite.lang.IgniteOutClosure) (line: 6516)
org.apache.ignite.internal.processors.task.GridTaskWorker.result(org.apache.ignite.compute.ComputeJobResult, java.util.List)
org.apache.ignite.internal.processors.task.GridTaskWorker.onResponse(org.apache.ignite.internal.GridJobExecuteResponse) (line: 810)
{code}

This happens because there is no logger in the future, hence error is unconditionally printed to the console.

We need to fix that. Probably we can inject logger into the task future.",,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 11:40:33 UTC 2016,,,,,,,,,,"0|i34q3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/16 16:21;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1160

    IGNITE-4053  Task error is always printed to the console

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4053

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1160.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1160
    
----
commit a4c63ae113931615e940ada2411ebce32dba5db8
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-09-30T07:45:13Z

    IGNITE-3998: IGFS: Enabled IgfsAbstractSelfTest.testCreateConsistencyMultithreaded. This closes #1129.

commit a12298c0baf19407f3110ba3c4f0aab88b67946d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-30T08:00:51Z

    IGNITE-3868: ODBC: Fixed connection string parsing. This closes #1051.

commit 5e7ef8644ad824b87d4797e59133eb783ff8b098
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:37:25Z

    Merge branch 'ignite-1.6.9' into ignite-1.6.10

commit 59b46d3e6ea073d054ca2262d676b055a74bbb1f
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:40:04Z

    IGNITE-2881: Fixed SPI queries.

commit 0b66d2d7b695cf370a4b8a717844ad67742c6090
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-03T09:04:03Z

    ignite-3601 Do not check version on commit for read-only serializable transactions.

commit 9f211e413332931f0fb1190744ddd7c7f38fd213
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-03T09:26:12Z

    IGNITE-3645: IGFS: Local secondary: Implemented update() operation. This closes #1003.

commit fa698d6fcfde0006423ef009337dbef58ac62515
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T10:33:12Z

    Fixed TcpDiscoverySnapshotHistoryTest intermittent failures caused by multicast IP finder.

commit bba019fd5076412ca43c10a32fd300b6031ccd0b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T14:25:20Z

    IGNITE-3980: Processed failing tests in query suites. This closes #1137.

commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit 23461b8d33922772ef8e7217e9e87b3f3b0b37b1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T07:14:59Z

    IGNITE-4001: Timeouts for threads in Ignite pools. This closes #1130.

commit b94b0aeae4c42b1d35128c6b1de97e3fa318d497
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-06T07:22:50Z

    IGNITE-3163 IGFS: Added working directory support to IgniteHadoopIgfsSecondaryFileSystem. This closes #1030. This closes #1058. This closes #1132.

commit e6317e01fa8a0de03e15dcdd84a575c6b06ce701
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T09:03:48Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect. This closes #903. This closes #1145.

commit 952be8b995050b34379006dd6e739da3fe3b49e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2016-10-07T12:00:09Z

    Squashed commit of the following:
    
    commit 566881b695b8bc00e618fe9a9b4c86a8fd563cc1
    Author: sboikov <sboikov@gridgain.com>
    Date:   Fri Oct 7 13:08:38 2016 +0300
    
        minor
    
    commit 7fe88a1cb21f794ee55a176ab36d895cbf916528
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Oct 6 11:11:24 2016 +0300
    
        ignite-update-notifier fix after review
    
        (cherry picked from commit a10d2ff)
    
    commit f2de749f958a3b18dc479f8a5517d7bf9362b933
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Oct 4 12:12:08 2016 +0300
    
        ignite-2079-2 optimize import and change url path
    
        (cherry picked from commit 830a3cf)
    
    commit 0d1be85ad55b0aa91224690d6c112ae92e8bc0a9
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Sep 29 19:54:54 2016 +0300
    
        update-notifier remove parse xml, now parse like properties
    
        (cherry picked from commit 9ecaa29)
    
    commit e43bca6fb4528a7fc0dcb804a74fca1c59d7468b
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Sep 27 17:07:21 2016 +0300
    
        remove dom parser
    
        (cherry picked from commit d1653b2)

commit b9c776a8423471706ecb1dc6176b38f23e799077
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-10T08:52:57Z

    IGNITE-3235 Failed to initialize primitive boolean cache property of superclass

commit f9a0676fad7fd6c23e3c91c10d7e0412ccb27c06
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T07:23:01Z

    IGNITE-4041: Created separate processor for thread pools and refactored IO manager. This closes #1150.

commit 9a6cfce659df40b0a4624f19fd91c217b74bafea
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-10-11T10:59:57Z

    IGNITE-4014 Fixed ""Transaction hangs if entry processor failed during serialization"". This closes #1148.

commit 1938a17b01fac1e08c30011180bbcc3ed7374d83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-11T11:50:18Z

    IGNITE-3948: Fixed a bug causing TTL manager to continue tracking of evicted entries. This closes #1101.

commit 60d27547dfc6bd27c6d39cbcc523d0d1e872a821
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T11:51:00Z

    Merge remote-tracking branch 'upstream/ignite-1.6.10' into ignite-1.6.10

commit 359a392f1c53217c691c4c40762c51fd330666e2
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes
    
    (cherry picked from commit a5c85ca)

commit 01ca6db70933fb7f50f161a80cde9647e68a3710
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-10-11T13:18:40Z

    Merge remote-tracking branch 'origin/ignite-1.6.10' into ignite-1.6.10

commit 0659bebe04dc9c0b0a163bc95061519c553e678c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T11:49:36Z

    IGNITE-3972: Fixed a bug causing continuous queries to be lost for ATOMIC cache when key's primary node leaves topology. This closes #1133.

commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T12:44:08Z

    IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.

commit 2ab094e08373dc6667af44d48a38b4f044953a79
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-12T13:48:51Z

    IGNITE-2355: Hadoop: added ability to configure multiple job tracker addresses. This closes #1153.

commit eaf8ae246cc799c1353332fcac05cb3a8efab02c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-12T16:57:09Z

    IGNITE-4034 Get rid of specialized methods in platform targets

commit b1ec58f716ece3a5866dd654ebc707bef67caf57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-10-13T05:58:22Z

    IGNITE-4066 Fixed NPE.

commit 447e07c0bb5af75bce6a14612606904e4e3d9705
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-14T08:40:41Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL

commit 96701a811fc7dc3f2985dfed8f471f4193720f1f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-14T16:20:32Z

    IGNITE-4053 Task error is always printed to the console.

----
;;;","18/Oct/16 11:10;vozerov;Taras, 

I would avoid setting loggers through reflection. Instead, let's do the following:
- Add {{GridFutureAdapter.logger()}} method, which will return {{null}}
- Use this method in {{notifyListener}} method
- Override this method for {{ComputeTaskInternalFuture}} and pass the logger in constructor.
- Note that this future is {{ComputeTaskInternalFuture}}, so make sure to set {{transient}} to logger field to avoid serialization problems.;;;","01/Nov/16 13:28;tledkov-gridgain;Fixed;;;","06/Nov/16 18:04;vozerov;Taras, my comments:

1) Looks like there is no need to call {{injectGeneric}} in {{GridTaskProcessor}} as we set logger through constructor, right?
2) {{GridFutureAdapter.logger(}} must be marked {{@Nullable}}.

Once fixed please validate state of all tests suites and go ahead with merge.

Vladimir.;;;","10/Nov/16 09:38;tledkov-gridgain;[Tests results | http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1160%2Fhead];;;","22/Nov/16 11:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1160
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: result panel is not displayed in case if first query is incorrect,IGNITE-4048,13010891,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,10/Oct/16 03:06,14/Oct/16 03:37,14/Jul/23 06:20,13/Oct/16 10:01,,,,,wizards,,,,,0,,,,"Create a new Query
Write 'select * from qwerty'
Execute

Observed: there is no result panel with error message below the query area.",,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 14 03:37:38 UTC 2016,,,,,,,,,,"0|i34nb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Oct/16 10:01;anovikov;Fixed. Pavel, please test.;;;","14/Oct/16 03:37;pkonstantinov;Successfully tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add an option to always authenticate local node,IGNITE-4044,13010167,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,06/Oct/16 14:12,16/Nov/16 07:37,14/Jul/23 06:20,16/Nov/16 07:37,,,,1.8,,,,,,0,,,,"Currently authenticator is called during the startup only if the new node is the first one in the topology. This in counterintuitive and introduces unpredictable behavior when global authentication is enabled - the node may or may not call the authenticator depending on the starting order.
",,DmitriyGovorukhin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-10-06 14:12:48.0,,,,,,,,,,"0|i34iu7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Near cache is not expired together with corresponding server cache,IGNITE-4036,13009889,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,Sergiuss,Sergiuss,05/Oct/16 14:11,03/Mar/17 14:31,14/Jul/23 06:20,26/Jan/17 08:01,1.7,,,1.9,cache,,,,,0,,,,"Steps to reproduce:
1. Configure server cache with expiry time
2. Start server node
3. Configure client node with near cache
4. Start client node
5. Put elements to cache
6. Wait for the expiry of the cache
7. Check cache state (server/client)
",,amashenkov,dkarachentsev,githubbot,Sergiuss,shroman,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Mar 03 14:31:31 UTC 2017,,,,,,,,,,"0|i34h4f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jan/17 09:58;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1425

    IGNITE-4036: Near cache is not expired together with corresponding server cache

    Test added

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite igntie-4036

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1425.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1425
    
----
commit bedf7e74d81204ec66e0c143d3f57a2eff5389af
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-01-11T14:01:26Z

    Test added

commit 8641be3de7432957d02d125ec633431e02bfe6d2
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2017-01-11T20:13:53Z

    Minors

commit 00a9224dac3fade842ca6b4591c70f702a5a653f
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-01-12T12:55:57Z

    Test fixed: CacheStore added to configuration

commit 21ab4c9cebb9a58cd39623b07c226af4025b537e
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-01-12T14:05:04Z

    Minors

commit bb4e44db54b3d5b5c9b753de408e447a057657fc
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2017-01-12T17:00:07Z

    Minors

commit 078f00685f234310b271ed37014ac79b5eba5f7c
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2017-01-12T17:20:46Z

    Minors

commit abc543af4a19414ceaa4b1021770b77713dcb04b
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2017-01-12T17:23:21Z

    Fixed

commit 81ecc634e8a6e8e9f9854bdb3301380ee09e8f6a
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-01-13T09:43:47Z

    Minors

commit fcecab80425accaeb18b2bb55e0b12d0be308d34
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-01-13T09:45:24Z

    Minors

----
;;;","13/Jan/17 14:19;amashenkov;I've add test for this bug. 
It looks like this issue is related to IGNITE-518.

;;;","17/Jan/17 13:53;amashenkov;If entry that was put from client node expires correctly in the node NearCache. But if entry was put on some another node, then it is possible it will not be expires in client NearCache.

It look like client has missed to subscribe on cache events while getting entry value from grid or smth like that.

Could someone clarify how it should work?;;;","19/Jan/17 21:01;vkulichenko;[~amashenkov], I think that expiration info must be sent to the reader along with the value, so that it's properly expired in the scenario you described. I believe we already do this for backup entries, right?;;;","24/Jan/17 13:15;dkarachentsev;[PR#1450|https://github.com/apache/ignite/pull/1450];;;","03/Mar/17 14:31;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1425
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObjectBuilder.build() can fail if one of the fields is Externalizable,IGNITE-4026,13009679,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vkulichenko,vkulichenko,04/Oct/16 20:35,05/Apr/17 11:37,14/Jul/23 06:20,02/Dec/16 10:03,1.7,,,1.8,binary,,,,,0,,,,"Test reproducing the issue is attached.

Scenario is the following:
# Create a binary object with an {{Externalizable}} field.
# Create a builder from this object using {{toBuilder()}} method.
# Do some modifications.
# Call {{build()}}, get exception below.

{noformat}
Exception in thread ""main"" class org.apache.ignite.binary.BinaryObjectException: Invalid flag value: -2
	at org.apache.ignite.internal.binary.builder.BinaryBuilderReader.parseValue(BinaryBuilderReader.java:761)
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.serializeTo(BinaryObjectBuilderImpl.java:281)
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.build(BinaryObjectBuilderImpl.java:183)
	at BuilderTest.main(BuilderTest.java:16)
{noformat}
Similar issue exists with enums. An attempt to set enum field to builder with a value which was read from a binary object fails with this exception:
{noformat}
Exception in thread ""main"" class org.apache.ignite.binary.BinaryObjectException: Wrong value has been set [typeName=MyType, fieldName=enum, fieldType=Enum, assignedValueType=Object]
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.checkMetadata(BinaryObjectBuilderImpl.java:401)
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.serializeTo(BinaryObjectBuilderImpl.java:316)
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.build(BinaryObjectBuilderImpl.java:183)
	at BuilderTest2.main(BuilderTest2.java:15)
{noformat}
The letter is reproduced in {{BinaryTest2.java}} (attached).",,dkarachentsev,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4312,,,,,,,,,,,IGNITE-4917,,,,,,"04/Oct/16 20:36;vkulichenko;BuilderTest.java;https://issues.apache.org/jira/secure/attachment/12831617/BuilderTest.java","24/Nov/16 21:18;vkulichenko;BuilderTest2.java;https://issues.apache.org/jira/secure/attachment/12840456/BuilderTest2.java",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 05 11:59:54 UTC 2016,,,,,,,,,,"0|i34ftr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/16 07:49;dkarachentsev;[PR#1281|https://github.com/apache/ignite/pull/1281];;;","28/Nov/16 07:57;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/1289

    IGNITE-4026 - Fix BinaryObjectBuilder.build() can fail if one of the …

    …fields is Externalizable, enum from binary object.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4026-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1289.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1289
    
----
commit 7972e721c937974d79c85e14f879c975dc62b519
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-28T07:55:49Z

    IGNITE-4026 - Fix BinaryObjectBuilder.build() can fail if one of the fields is Externalizable, enum from binary object.

----
;;;","29/Nov/16 06:30;dkarachentsev;[PR#1289|https://github.com/apache/ignite/pull/1289];;;","05/Dec/16 11:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1289
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction hangs if entry processor failed during serialization,IGNITE-4014,13009243,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ntikhonov,ntikhonov,ntikhonov,03/Oct/16 14:39,11/Oct/16 10:38,14/Jul/23 06:20,11/Oct/16 10:38,1.7,,,,cache,,,,,0,,,,"If entry processor implements Externalizable interface and inside of methods writeTo() or readTo() throws exceptions then transaction hangs.

Hanged thread dump:
{code}
    Lock [object=o.a.i.i.processors.cache.distributed.near.GridNearTxFinishFuture@2575e80b, ownerName=null, ownerId=-1]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:964)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1282)
        at o.a.i.i.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:157)
        at o.a.i.i.util.future.GridFutureAdapter.get(GridFutureAdapter.java:117)
        at o.a.i.i.processors.cache.distributed.dht.GridDhtTxLocalAdapter.rollback(GridDhtTxLocalAdapter.java:859)
        at o.a.i.i.processors.cache.transactions.IgniteTxAdapter.close(IgniteTxAdapter.java:903)
        at o.a.i.i.processors.cache.distributed.near.GridNearTxLocal.close(GridNearTxLocal.java:1306)
        at o.a.i.i.processors.cache.GridCacheSharedContext.endTx(GridCacheSharedContext.java:720)
        at o.a.i.i.processors.cache.transactions.TransactionProxyImpl.close(TransactionProxyImpl.java:276)
        at o.a.i.i.processors.cache.query.continuous.CacheEntryProcessorExternalizableFailedTest.doTestInvokeTest(CacheEntryProcessorExternalizableFailedTest.java:327)
        at o.a.i.i.processors.cache.query.continuous.CacheEntryProcessorExternalizableFailedTest.testOptimisticOnePhaseCommitFullSync(CacheEntryProcessorExternalizableFailedTest.java:233)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at junit.framework.TestCase.runTest(TestCase.java:176)
        at o.a.i.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1760)
        at o.a.i.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
        at o.a.i.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1698)
        at java.lang.Thread.run(Thread.java:745)
{code}
",,ntikhonov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/16 14:47;ntikhonov;CacheEntryProcessorExternalizableFailedTest.java;https://issues.apache.org/jira/secure/attachment/12831333/CacheEntryProcessorExternalizableFailedTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Tue Oct 11 07:18:28 UTC 2016,,,,,,,,,,"0|i34d53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Oct/16 17:18;ntikhonov;Fixed behaviour when exceptions which have been thrown from marshaller code not handled correctly. ;;;","06/Oct/16 13:45;sboikov;Hi Nikolay,

It seems this problem is more serious: you fixed few places to also catch IgniteException, but if marshaller throws RuntimeExceptions there are number of places in internal code where these exceptions are not handled. I think we need introduce utility method which will call marshaller.marshall and wrap all thrown exceptions into IgniteCheckedException. This method should be used everywhere in internal code.

Thanks;;;","10/Oct/16 14:58;ntikhonov;[~sboikov],

Thank you for your review! I've added several methods into {{IgniteUtils}} class and replaced places where invokes {{Marshaller.marshal}} and {{Marshaller.unmarshal}}.;;;","11/Oct/16 07:18;sboikov;Looks good.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OptimizedObjectOutputStream checks for error message of removed IgniteEmailProcessor,IGNITE-4009,13008840,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,shroman,shroman,shroman,30/Sep/16 09:46,17/May/19 14:34,14/Jul/23 06:20,07/Dec/16 15:02,,,,1.9,,,,,,0,,,,I wonder if we need a catch part with {{if (CONVERTED_ERR.contains(t.getMessage()))}} of {{writeObjectOverride(...)}} at all.,,githubbot,sboikov,shroman,,,,,,,,,,"dspavlov commented on issue #1140: IGNITE-4009: Removed error message check for non-serializable fields …
URL: https://github.com/apache/ignite/pull/1140#issuecomment-493476140
 
 
   https://issues.apache.org/jira/browse/IGNITE-4009 is closed, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 14:34;githubbot;600","dspavlov commented on pull request #1140: IGNITE-4009: Removed error message check for non-serializable fields …
URL: https://github.com/apache/ignite/pull/1140
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 14:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 07 15:02:09 UTC 2016,,,,,,,,,,"0|i34ao7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Oct/16 01:31;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/1140

    IGNITE-4009: Removed error message check for non-serializable fields …

    …in writeObjectOverride().

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-4009

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1140.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1140
    
----
commit eff2f2abb3c74e8511378d3ac8c09f22f699335d
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-10-04T01:31:03Z

    IGNITE-4009: Removed error message check for non-serializable fields in writeObjectOverride().

----
;;;","04/Oct/16 01:33;shroman;I think we cannot check all possible error messages for non-serializable fields in writeObjectOverride(), so I removed the check and just let throw the exception.;;;","07/Dec/16 15:02;sboikov;Looks good, merged into master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: QueryMetrics.minimumTime() is always zero.,IGNITE-4007,13008585,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,29/Sep/16 16:09,04/Oct/16 03:17,14/Jul/23 06:20,30/Sep/16 08:28,1.6,,,1.8,sql,,,,,0,,,," QueryMetrics.minimumTime() is always zero, because internal AtomicInteger initialized with zero and code that change minTime looks like
{code}minTime.setIfLess(duration);{code}
Obviously that execution time is always >=0 and any number is always is greate than zero and metrics never updated.",,githubbot,kuaw26,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Oct 04 03:17:05 UTC 2016,,,,,,,,,,"0|i3493j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Sep/16 16:56;kuaw26;Semen, please review in branch ignite-4007.;;;","29/Sep/16 17:06;githubbot;GitHub user akuznetsov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1134

    IGNITE-4007 Fixed Query metrics min time

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4007

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1134.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1134
    
----
commit b9105df77cc70b532f94899c754fba47e3e05e9a
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T11:53:20Z

    IGNITE-3989: Moved failing JTA tests to ignore module.

commit d595345765db2151ff432beecd478ce056393593
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T12:08:38Z

    IGNITE-3990: Moved failing Spring tests to ""ignore"" module.

commit e3f13455d4273e615727d0410783e3719db98f76
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T09:56:17Z

    ignite-2833 Need call 'touch' for cache entry if it was obtained using 'entryEx'.
    
    (cherry picked from commit 17c2fc0)

commit b2faa339acb2eea24e6dd5e0c21fc3d3d0592ff6
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T10:47:51Z

    ignite-3621 Fixed 'testEvictExpired'.
    
    (cherry picked from commit 4ff19c2)

commit 74d2fc2416b8e6bc0598152552021f984a013061
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T11:31:24Z

    ignite-3621 Fixed 'testEvictExpired'.
    
    (cherry picked from commit bfe4458)

commit d2563dacceea61b19bb6e083e29ebacc28fdd323
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T12:51:55Z

    IGNITE-3993: Added failing client tests to ""ignored"" test suite.

commit 33d34941390c00e8d6a2488e8f2e11e6abba8a01
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T12:54:52Z

    Merge remote-tracking branch 'community/ignite-1.6.9' into ignite-1.6.9

commit 78144c4c9d6200ceef8b666a186039685f053381
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-28T13:52:13Z

    Fixed incorrect test count calculation leading to afterTestsStopped() not being called.

commit e3dfdecc3607b5f3183bfcb1ce36c57543a8965f
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2016-09-28T13:46:46Z

    Validate hash code presence in BinaryObject. Fixes #928

commit d1e3a78ae569fa5d5692816db44f2c677e1b8283
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-09-29T00:53:42Z

    IGNITE-3191 - Fixed ordering of fields in binary objects

commit b280c3efa1eb84c6bc8abbe31ba669b0c24323d8
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-29T07:23:54Z

    Fixed missing Apache header.

commit 3e8a1c6b045c231dbb3c972463000f824386aee9
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-29T08:08:23Z

    Added node stop to IgniteCacheExpireAndUpdateConsistencyTest.

commit 062b9b69aa851d5253dfb7f44066b7d749f1ca12
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-09-29T08:26:50Z

    IGNITE-3633 - Enforce key validation for tests.

commit ad613afd7165ed2d8bf0a62805fc2506dfe6c59a
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-29T09:04:44Z

    ignite-3621 Fixed 'testEvictExpired'.
    
    (cherry picked from commit a4d7aa3)

commit 22dc2c9e05e5183f838865023c9cb7a8291ac67f
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2016-09-29T12:43:20Z

    GridNearCacheAdapter, GridDhtCacheAdapter - test fix

commit f447559ecba55149452e4e48e2bf44ef1fa1b4d7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-09-29T14:10:14Z

    ignite-1.6.9 - Fixing tests

commit 0957640a89f02c0a3bc834b0bc436741fdb80c1c
Author: AKuznetsov <akuznetsov@gridgain.com>
Date:   2016-09-29T16:53:34Z

    IGNITE-4007 Fixed update of QueryMetrics.minimumTime() metric. Tests added.

----
;;;","30/Sep/16 07:05;sboikov;Reviewed, looks good.;;;","04/Oct/16 03:17;githubbot;Github user akuznetsov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/1134
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Non-ASCII characters in code,IGNITE-4004,13008543,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,krybakova,ptupitsyn,ptupitsyn,29/Sep/16 14:04,09/Dec/16 11:48,14/Jul/23 06:20,29/Sep/16 14:50,,,,1.8,platforms,,,,,0,.NET,,,"Continuing the IGNITE-3970, there are other non-ASCII characters in code. Some are even unreadable. We should extend the test and avoid them when possible.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-09-29 14:04:41.0,,,,,,,,,,"0|i348u7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect errors/warnings while odbc driver installation,IGNITE-4002,13008506,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,isapego,krybakova,krybakova,29/Sep/16 12:10,03/Apr/17 08:38,14/Jul/23 06:20,23/Mar/17 15:15,1.7,,,2.0,platforms,,,,,0,cpp,,,"1) Build x64 odbc driver according to $IGNITE_HOME\platforms\cpp\DEVNOTES.txt

2) Install x64 bit driver according to $IGNITE_HOME\platforms\cpp\odbc\README.txt. Don't pass x32 driver as a second parameter:
{noformat}
D:\ignite\platforms\cpp\odbc\install>install_amd64.cmd D:\ignite\platforms\cpp\project\vs\x64\Release\ignite.odbc.dll
Installing 64-bit driver: D:\ignite\platforms\cpp\project\vs\x64\Release\ignite.odbc.dll
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
Ошибка в синтаксисе команды.
{noformat}

Expected: ""warning: 32-bit driver is not specified. If you want to install 32-bit driver please specify path to it as a second argument."" message
Actual: ""Ошибка в синтаксисе команды"".

3) Install x64 bit driver according to $IGNITE_HOME\platforms\cpp\odbc\README.txt. Pass \ (root directory) as a second parameter (x32 driver):
{noformat}
D:\ignite\platforms\cpp\odbc\install>install_amd64.cmd D:\ignite\platforms\cpp\project\vs\x64\Release\ignite.odbc.dll \
Installing 64-bit driver: D:\ignite\platforms\cpp\project\vs\x64\Release\ignite.odbc.dll
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
Installing 32-bit driver: \
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
Операция успешно завершена.
{noformat}

Expected:
""warning: The path you have specified seems to be a directory. Note that you have to specify path to driver file itself instead."" warning before ""Installing 32-bit driver: \"" 
Actual: no such a warning (if exist %ODBC_X86%\ -> if exist \ \ -> false. So this check doesn't work in this case).

Please, consider some changes in error handling.
",Windows 2010 (Rus),githubbot,isapego,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 03 08:38:21 UTC 2017,,,,,,,,,,"0|i348lz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/17 14:29;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1635

    IGNITE-4002: Fixed warning/error messages during ODBC driver installation.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4002

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1635.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1635
    
----
commit 245363e7ab4b4826ae2936b3c49fa9cfd02cdeff
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-03-17T14:27:26Z

    IGNITE-4002: Fixed warning/error messages on ODBC driver installiation.

----
;;;","17/Mar/17 14:29;isapego;Ready. [~ptupitsyn], please, review.;;;","17/Mar/17 14:36;ptupitsyn;[~isapego] looks good.;;;","20/Mar/17 12:57;isapego;Merged.;;;","21/Mar/17 11:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1635
;;;","22/Mar/17 14:44;krybakova;Please take a look at ""3)"" in issue description as well;;;","23/Mar/17 15:15;isapego;[~krybakova], fixed.;;;","03/Apr/17 08:38;krybakova;Verified in master branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: uncomment testCreateConsistencyMultithreaded ,IGNITE-3998,13008268,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,vozerov,iveselovskiy,iveselovskiy,28/Sep/16 15:52,30/Sep/16 07:45,14/Jul/23 06:20,30/Sep/16 07:45,1.6,,,1.8,igfs,,,,,0,,,,"Test  org.apache.ignite.internal.processors.igfs.IgfsAbstractSelfTest#testCreateConsistencyMultithreaded was commented out for unknown reason. 
Uncomment it.",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 28 16:08:24 UTC 2016,,,,,,,,,,"0|i34753:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/16 16:08;iveselovskiy;https://github.com/apache/ignite/pull/1129;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
".NET: ASP.NET Session-State Store Provider run cache with default ""null"" name",IGNITE-3995,13008226,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsidorova,vsidorova,28/Sep/16 13:20,03/Oct/16 09:56,14/Jul/23 06:20,28/Sep/16 14:08,1.8,,,1.8,,,,,,0,.net,,,"STEPS TO REPDODUCE
-------------------------------------------------------------------
# Create a new C# Web application in the MS Visual Studio: File -> New -> Project -> Visual C# -> Web -> ASP.NET Web Application
# In the Package Manager Console install Apache.Ignite.AspNet package
# Open Web.config file and add following code to the ""system.web"" section:
{noformat}
<sessionState mode=""Custom"" customProvider=""IgniteSessionStateProvider"">
	<providers>
		<add name=""IgniteSessionStateProvider""
			type=""Apache.Ignite.AspNet.IgniteSessionStateStoreProvider, Apache.Ignite.AspNet"" />
	</providers>
</sessionState>
{noformat}
# Run project (Ctrl-F5) (ASP.NET page is opened in browser)
# Connect to started cache via console application or visorcmd and look onto cache name
-----------------------------------------------------------------------
ACTUAL RESULT
-----------------------------------------------------------------------
Started cache have ""null"" name
-----------------------------------------------------------------------
EXPECTED RESULT
-----------------------------------------------------------------------
Default cache name have name differ from ""null"" - it's bad name and can cause unexpected errors",Windows 7 OS,githubbot,vsidorova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Oct 03 09:56:14 UTC 2016,,,,,,,,,,"0|i346vr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/16 14:00;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1128

    IGNITE-3995 .NET: Fix default cache name in ASP.NET Session-State Store Provider

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3995

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1128.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1128
    
----
commit 53fbad7ddafdae7b368b0f207d06d16574978d62
Author: AKuznetsov <akuznetsov@gridgain.com>
Date:   2016-09-28T10:24:56Z

    Merge branch ignite-1.6.9 into ignite-1.7.2.

commit 4ff19c20b169e0373eafc8025a838db8bfc61f27
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T10:47:51Z

    ignite-3621 Fixed 'testEvictExpired'.

commit bfe4458448a59542713830f57713b3ac2af08e2b
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-28T11:31:24Z

    ignite-3621 Fixed 'testEvictExpired'.

commit bff34b50aa93d43c63f9419cf19e00c2d3cd5413
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-28T13:34:32Z

    IGNITE-3995 .NET: ASP.NET Session-State Store Provider run cache with default ""null"" name

commit 33b5efa0162941186318ae3d839ebdfcaecfdf27
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-28T13:52:09Z

    Fix the bug

commit be791f1480a11f6a17ba3b6ec7d17cdc9fd6352e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-28T13:58:07Z

    cleanup

commit 486cb20ac30dcde82a13ae82de8fb2ed450e0eb0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-28T13:59:04Z

    cleanup

----
;;;","29/Sep/16 10:26;vsidorova;Fix verified for Apache Ignite 1.8;;;","03/Oct/16 09:56;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1128
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client buffer CacheContinuousQueryEntry on pendingEvts after reconnect to alive cluster,IGNITE-3994,13008218,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,v.pyatkov,v.pyatkov,28/Sep/16 12:45,10/Feb/17 12:11,14/Jul/23 06:20,10/Feb/17 12:11,,,,1.9,,,,,,0,,,,The CacheContinuousQueryEntry will accumulate until buffer will not full.,,githubbot,sboikov,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/16 12:46;v.pyatkov;ClientReconnectContinuousQueryTest.java;https://issues.apache.org/jira/secure/attachment/12830690/ClientReconnectContinuousQueryTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 10 12:11:49 UTC 2017,,,,,,,,,,"0|i346tz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Feb/17 14:08;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/1496

    IGNITE-3994

    Client buffer CacheContinuousQueryEntry on pendingEvts after reconnect to alive cluster

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-3994

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1496.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1496
    
----
commit 1a09c627966fe3f7f77477a518838be969637d75
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2017-02-03T14:04:06Z

    IGNITE-3994
    Client buffer CacheContinuousQueryEntry on pendingEvts after reconnect to alive cluster

----
;;;","10/Feb/17 12:10;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1496
;;;","10/Feb/17 12:11;sboikov;Reviewed, looks good, merged into master.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Refactor test database init in backend tests.,IGNITE-3985,13008124,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,anovikov,anovikov,28/Sep/16 03:56,07/Oct/16 09:21,14/Jul/23 06:20,07/Oct/16 09:20,1.8,,,1.8,wizards,,,,,0,,,,Need simplify database init before test. As example may be  used modules/web-console/backend/test/unit/AuthService.test.js,,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 07 09:20:53 UTC 2016,,,,,,,,,,"0|i34693:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/16 08:56;vsisko;Backend tests refactored. ignite-3985;;;","07/Oct/16 09:20;anovikov;Reviewed. Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheBinaryAutoStoreExample get wrong result,IGNITE-3983,13008003,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,vsidorova,vsidorova,27/Sep/16 17:55,28/Sep/16 15:44,14/Jul/23 06:20,28/Sep/16 02:18,1.8,,,1.8,,,,,,0,,,,"---------------------------------------------
DESCRIPTION
---------------------------------------------
CacheBinaryAutoStoreExample get wrong result
---------------------------------------------
STEPS FOR REPRODUCE
---------------------------------------------
# Build examples project
# Start H2 database TCP server using
# Start a few nodes using ExampleNodeStartup (it's stable reproducible with different numbers of nodes)
---------------------------------------------
ACTUAL RESULT
---------------------------------------------
{noformat}
>>> Populate database with data...

>>> Cache auto store example started...
>>> Read value: null
>>> Overwrote old value: null
>>> Read value: Person [id=25121642, orgId=1, lastName=Newton, firstName=Isaac, salary=100.1, resume=English physicist and mathematician]
>>> Update salary in transaction...
>>> Read value after commit: Person [id=25121642, orgId=1, lastName=Newton, firstName=Isaac, salary=200.2, resume=English physicist and mathematician]
>>> ------------------------------------------
>>> Load data to cache from DB with custom SQL...
>>> Loaded cache entries: 3
>>> Load ALL data to cache from DB...
>>> Loaded cache entries: 0
{noformat}
---------------------------------------------
EXPECTED RESULT
---------------------------------------------
{noformat}
>>> Populate database with data...

>>> Cache auto store example started...
>>> Read value: null
>>> Overwrote old value: null
>>> Read value: Person [id=25121642, orgId=1, lastName=Newton, firstName=Isaac, salary=100.1, resume=English physicist and mathematician]
>>> Update salary in transaction...
>>> Read value after commit: Person [id=25121642, orgId=1, lastName=Newton, firstName=Isaac, salary=200.2, resume=English physicist and mathematician]
>>> ------------------------------------------
>>> Load data to cache from DB with custom SQL...
>>> Loaded cache entries: 3
>>> Load ALL data to cache from DB...
>>> Loaded cache entries: 7
{noformat}
---------------------------------------------
ADDITIONAL INFO
---------------------------------------------
Isn't reproducible for previous versions","Ubuntu 14.04, Win7, Apache Ignite 1.8",kuaw26,vsidorova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 28 15:44:05 UTC 2016,,,,,,,,,,"0|i345i7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/16 02:17;kuaw26;Fixed issue. Added test.;;;","28/Sep/16 02:18;kuaw26;Please retest.;;;","28/Sep/16 15:44;vsidorova;Fix verified for Apache Ignite 1.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nodes can form separate clusters with TcpDiscoveryMulticastIpFinder,IGNITE-3973,13007895,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,27/Sep/16 11:57,27/Sep/16 12:43,14/Jul/23 06:20,27/Sep/16 12:43,1.7,,,1.8,general,,,,,0,,,,"Currently TcpDiscoveryMulticastIpFinder on start sends mcast address request and stops wait when at least one remote address is received.
This scenario is possible:
- 4 nodes start concurrently
- node1 receive first address of node2, node2 from node1
- node3 receive first address of node4, node4 from node3
- node1/node2 and node3/node4 can form separate clusters",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 27 12:43:55 UTC 2016,,,,,,,,,,"0|i344u7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Sep/16 12:43;sboikov;Changed TcpDiscoveryMulticastIpFinder.requestAddresses to do not stop when first remote address is received.

Better fix is send together with adress flag indicating whether node already joined topology, requestAddresses can stop when address from joined node is received. But this breaks binary compatibility.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Continuous query events could be lost on backup node when primary leaves (atomic cache).,IGNITE-3972,13007879,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,27/Sep/16 10:45,09/Nov/16 08:39,14/Jul/23 06:20,12/Oct/16 11:49,1.7,,,1.8,cache,,,,,0,,,,"Consider the following scenario:
1) One node in topology;
2) PARTITIONED cache with 1 backup;
3) Continuous query is set on the cache;

If another node joins the cluster, it will handle some updates. If it leaves the topology, the first node must flush it's own events from backup queue thus ensuring that no events are lost.

But this doesn't happen because {{GridContinuousProcessor.addBackupNotification}} method perform lookup only on remote infos map, while handler is local and hence located in local infos map.",,amashenkov,githubbot,sboikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4015,IGNITE-4047,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 09 08:39:08 UTC 2016,,,,,,,,,,"0|i344qn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Sep/16 13:59;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1133

    IGNITE-3972: Continuous query events could be lost on backup node when primary leaves.

    Reproduced.
    Fix provided prevents CQ events from being lost, but single duplicate event can occur if node has left on entry put.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3972

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1133.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1133
    
----
commit 8027a75aafc4ec6118aa796fcc4d5bd403993385
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-27T14:47:53Z

    Implemented

commit 39590383e487a2ad7e7970118718a19325918c24
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-27T14:50:26Z

    Test reproducing bug added: see CQLostRunner

----
;;;","29/Sep/16 17:13;amashenkov;I've commited fix affected atomic cache. But we still can loose events in transactional cache.
Events can be lost while entry was putting primary node for the entry key left topology.
;;;","11/Oct/16 07:35;vozerov;Andrey,

The tests you created are not ""load"" tests, but ""failover"" tests in our usual terms. And we already have failover tests for CQ - {{CacheContinuousQueryFailoverAbstractSelfTest}}. 
I do not want us to create more long running tests unless it is really needed. Please investigate whether we can improve existing tests instead.

Vladimir.;;;","11/Oct/16 10:30;amashenkov;Done;;;","11/Oct/16 14:13;sboikov;Hi Andrew,

Did minor change in GridContinuousProcessor, please review, otherwise good to merge,

Thanks!;;;","11/Oct/16 14:18;amashenkov;Minor is ok. ;;;","09/Nov/16 08:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1133
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Cyrillic 'C' letter in code,IGNITE-3970,13007852,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,27/Sep/16 08:57,28/Sep/16 11:54,14/Jul/23 06:20,28/Sep/16 11:54,1.7,,,1.8,platforms,,,,,0,.net,,,"The following places have Cyrillic 'C' instead of English 'C' in code:

* СlusterNodeFilterApplyCallbackDelegate
* СlusterNodeFilterApply
* Comments in ICompute",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 28 11:54:45 UTC 2016,,,,,,,,,,"0|i344kn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/16 11:54;ptupitsyn;Test added;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Discovery events can be lost after client reconnect,IGNITE-3967,13007526,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,26/Sep/16 10:38,27/Sep/16 13:22,14/Jul/23 06:20,27/Sep/16 13:22,1.5.0.final,,,1.8,general,,,,,0,,,,"GridDiscoveryManager uses GridBoundedConcurrentOrderedMap to store discovery events history. When client reconnects this collection is cleared using 'clear' method, but for GridBoundedConcurrentOrderedMap this method is not correctly implemented, and after this elements put in this map can be lost.",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 27 13:22:11 UTC 2016,,,,,,,,,,"0|i342k7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Sep/16 13:22;sboikov;Fixed to to use single removes to clear map.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop: automatically add ${HADOOP_HOME}/lib/native to java.library.path system property,IGNITE-3966,13007525,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,iveselovskiy,iveselovskiy,26/Sep/16 10:22,19/Dec/16 08:57,14/Jul/23 06:20,19/Dec/16 08:57,1.6,,,2.0,hadoop,,,,,0,easyfix,,,"Now in order to use native libs user is expected to add -J-Djava.library.path explicitly upon node start.
In most of the Hadoop distributions native libraries are found in ${HADOOP_HOME}/lib/native/ , and, if such directory exists, we can add -Djava.library.path  paramater automatically. 
Note that if -Djava.library.path  is also given explicitly by the user, we should  merge his explicit value with our implicitly added value.  ",,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 13 18:20:56 UTC 2016,,,,,,,,,,"0|i342jz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/16 12:02;iveselovskiy;pull request
https://github.com/apache/ignite/pull/1320;;;","09/Dec/16 15:37;vozerov;Ivan,

Patch looks good to me, but we need to ensure that it works on the following environments:
1) Apache Hadoop
2) HDP
3) CDH
4) MapR
5) In addition let's check that it works in Windows env w/ Apache Hadoop.;;;","13/Dec/16 18:20;iveselovskiy;Tested on Apache 2.7.0,  HDP 2.4, Cloudera  5.3.0, MapR 5.2.0.
Windows case not applicable there since Hadoop does not contein .dll libraries  for Windows , and thus ""ignite.bat"" script not affected by the change at all. Even if somebody runs ""ignite.sh"" on Windows, no harm is there , since lib/native/  contains only Unix libraries that will not be loaded on Windows. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@GridInternal tasks should not go through user load balancing SPI,IGNITE-3965,13007488,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,26/Sep/16 06:22,04/Oct/16 03:18,14/Jul/23 06:20,28/Sep/16 02:54,1.6,,,1.8,compute,,,,,0,,,,"User can specify some custom load balancing SPI, but internal task should use default load balancing SPI with predictable behaviour. ",,githubbot,kuaw26,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Oct 04 03:18:29 UTC 2016,,,,,,,,,,"0|i342br:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Sep/16 14:35;kuaw26;Semen, please review my changes in branch community/ignite-3965.
;;;","26/Sep/16 14:59;sboikov;Alexey,

I have some comments:
- more simple fix is just pass 'internal' flag to GridLoadBalancerManager's method, I believe this flag should be already available in places when GridLoadBalancerManager is called
- also please replace in getBalancedNode: 'if (!spi.getName().equals(GRID_INTERNAL_LOAD_BALANCING_SPI)) -> (!spi instanceof RoundRobinLoadBalancingSpi'), this should work faster

Thanks;;;","27/Sep/16 02:47;githubbot;GitHub user akuznetsov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1117

    IGNITE-3965 internal tasks should not go through custom load balancer.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3965

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1117.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1117
    
----
commit 855fb78203c815944d41796e3bd82505a55e12cd
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-26T08:41:33Z

    IGNITE-3965 WIP.

commit 84d06bd8b156071a7b74bf28296ce5d9ea8b88b0
Author: AKuznetsov <akuznetsov@gridgain.com>
Date:   2016-09-26T10:56:18Z

    Merge branches 'ignite-1.6.9' and 'ignite-3965' of https://github.com/gridgain/apache-ignite into ignite-3965

commit 1345a309701a26bf100db8225218b5feec6f4e02
Author: AKuznetsov <akuznetsov@gridgain.com>
Date:   2016-09-26T14:07:41Z

    Merge branch 'ignite-1.6.9' of https://github.com/gridgain/apache-ignite into ignite-3965

commit d3b56903615510e6d7cd8d594837c29cec56aed7
Author: AKuznetsov <akuznetsov@gridgain.com>
Date:   2016-09-26T14:31:25Z

    IGNITE-3965 @GridInternal tasks should run via standart LoadBalancingSpi. Added test.

commit 7c0976a69bf5bf4028d4de5f68d95cb65dad3b65
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-27T02:32:51Z

    IGNITE-3965 Fixed review comments.

----
;;;","27/Sep/16 04:44;kuaw26;Semen, I fixed review notes, please review again.;;;","27/Sep/16 08:53;sboikov;Hi,

I still see some issues:
- in GridJobProcessor it is not correct to use 'internal()' method to create session, correct way is use 'req.isInternal()'
- in GridTaskProcessor you call 'dep.internalTask', but at this line 'dep' can be null, you need move session creation after 'dep' is checked for null
- also since you initialize 'internal' flag for session we can use this value in GridTaskWorker:493 instead of calling 'dep.internalTask' one more time

Thanks;;;","27/Sep/16 13:03;kuaw26;Semen, good catch!

# Fixed GridJobProcessor
# Fixed call of 'dep.internalTask' with guard check to null. I did not move session creation because dep is checked for null later in code and if I move session creation this make me declare it two times.
# Fixed usage of session 'isInternal' flag.

Please review one more time.;;;","27/Sep/16 14:30;sboikov;Reviewed, looks good to merge.

Thanks!;;;","28/Sep/16 02:54;kuaw26;Merged to master.;;;","04/Oct/16 03:18;githubbot;Github user akuznetsov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/1117
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FlinkIgniteSinkSelfTest fails with exception IllegalArgumentException,IGNITE-3963,13007453,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,samaitra,samaitra,samaitra,25/Sep/16 16:02,07/Oct/16 19:01,14/Jul/23 06:20,07/Oct/16 19:01,1.7,,,1.8,,,,,,0,,,,"FlinkIgniteSinkSelfTest fails with exception IllegalArgumentException.

{code}
[21:30:31,387][INFO ][main][root] >>> Stopping test class: FlinkIgniteSinkSelfTest <<<

org.apache.flink.runtime.client.JobExecutionException: Job execution failed.

	at org.apache.flink.runtime.jobmanager.JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$7.apply$mcV$sp(JobManager.scala:714)
	at org.apache.flink.runtime.jobmanager.JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$7.apply(JobManager.scala:660)
	at org.apache.flink.runtime.jobmanager.JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$7.apply(JobManager.scala:660)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:41)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:401)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.pollAndExecAll(ForkJoinPool.java:1253)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1346)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: org.apache.flink.streaming.runtime.tasks.StreamTaskException: Cannot instantiate user function.
	at org.apache.flink.streaming.api.graph.StreamConfig.getStreamOperator(StreamConfig.java:209)
	at org.apache.flink.streaming.runtime.tasks.StreamTask.invoke(StreamTask.java:186)
	at org.apache.flink.runtime.taskmanager.Task.run(Task.java:559)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Ignite grid name thread local must be set or this method should be accessed under org.apache.ignite.thread.IgniteThread
	at org.apache.ignite.internal.IgnitionEx.localIgnite(IgnitionEx.java:1296)
	at org.apache.ignite.internal.GridLoggerProxy.readResolve(GridLoggerProxy.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1148)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1810)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2000)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1924)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2000)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1924)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)
	at org.apache.flink.util.InstantiationUtil.deserializeObject(InstantiationUtil.java:290)
	at org.apache.flink.util.InstantiationUtil.readObjectFromConfig(InstantiationUtil.java:248)
	at org.apache.flink.streaming.api.graph.StreamConfig.getStreamOperator(StreamConfig.java:194)
	... 3 more
{code}",,agura,githubbot,samaitra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 07 18:59:22 UTC 2016,,,,,,,,,,"0|i3423z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Sep/16 16:04;samaitra;Solution described in the below thread resolves the issue.

http://apache-ignite-users.70518.x6.nabble.com/Calling-serviceDescriptiors-after-service-deployment-throws-exception-td5903.html;;;","25/Sep/16 16:23;githubbot;GitHub user samaitra opened a pull request:

    https://github.com/apache/ignite/pull/1112

    IGNITE-3963 FlinkIgniteSinkSelfTest fails with exception IllegalArgum…

    …entException

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/samaitra/ignite IGNITE-3963

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1112.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1112
    
----
commit 714aa0fc565f020da686c3b7a378712dc93c7341
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-09-25T16:21:46Z

    IGNITE-3963 FlinkIgniteSinkSelfTest fails with exception IllegalArgumentException

----
;;;","06/Oct/16 12:11;agura;[~samaitra] I've looked at your changes and have some comments:

- exception points to problem at deserialization of {{IgniteLogger}} instance not {{Ignite}} ignite instance.
- {{IgniteSink.java}}: {{Ignite}} instance will not be serialized because {{Holder}} class isn't serializable and {{Ignite}} instance static itself (statics are implicitly transient). So {{@IgniteInstanceResource}} annotation and {{transient}} modifier are redundant for {{Holder.IGNITE}} field.
- {{FlinkIgniteSinkSelfTest.java}}: {{@IgniteInstanceResource}} annotation and {{transient}} modifier are redundant for {{FlinkIgniteSinkSelfTest.ignite}} field bacuse value of this field does never sirialize in this test.

Could you please fix this comments?

I also found other issues that don't related with this ticket. JFYI: It's very strange to me that {{cacheName}}, {{igniteCfgFile}} and {{stopped}} fileds of {{IgniteSink}} class are static. Looks like we can does work only with one Ignite cache in one JVM. Note also that {{stopped}} filed value will be {{false}} by default after deserialization.;;;","06/Oct/16 18:13;samaitra;[~agura]

Hi Andrey,

Thank you for reviewing the PR and sharing your feedback. I have modified the PR as per comments. 

Yes, the fields cacheName, igniteCfgFile and stopped are static as we have used static inner class SinkContext. IgniteSink supports streaming data from flink clusters to single cache but if required I can modify it to work with multiple caches.

Regards
Saikat;;;","07/Oct/16 09:57;agura;{quote}Thank you for reviewing the PR and sharing your feedback. I have modified the PR as per comments.{quote}

Thanks for contribution! Looks good for me. Could you please merge it to master branch.

{quote}Yes, the fields cacheName, igniteCfgFile and stopped are static as we have used static inner class SinkContext. IgniteSink supports streaming data from flink clusters to single cache but if required I can modify it to work with multiple caches.{quote}

I think it could be made in separate task.;;;","07/Oct/16 18:50;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1112
;;;","07/Oct/16 18:59;samaitra;[~agura]

Thank you Andrey. I have merged the changes in master branch.

Regards
Saikat;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client node should not start rest processor,IGNITE-3958,13007092,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ntikhonov,yzhdanov,yzhdanov,23/Sep/16 08:50,24/Nov/16 12:40,14/Jul/23 06:20,24/Nov/16 12:40,,,,2.0,,,,,,0,,,,,,kuaw26,ntikhonov,vkulichenko,vozerov,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/16 09:21;ntikhonov;IGNITE_3958.patch;https://issues.apache.org/jira/secure/attachment/12840392/IGNITE_3958.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 16 19:31:37 UTC 2016,,,,,,,,,,"0|i33zvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Sep/16 08:51;vozerov;Why client should not start REST processor? Looks weird to me. This is normal use case to use client nodes as a gateway for various external activities. E.g. to listen for ODBC requests and start queries, collect data for web-console, start tasks for REST, etc..;;;","27/Sep/16 03:36;vkulichenko;Agree. But I think that management endpoints (e.g. for Visor) should only be started on servers.;;;","27/Sep/16 03:59;kuaw26;Val, why?

Client node may be a kind of ""gateway"" for private cluster.;;;","27/Sep/16 05:59;vozerov;+1 to Alex question. I do not quite understand how management endpoint is different from any other client gateways? ;;;","27/Sep/16 06:05;vkulichenko;Also a good point. Actually, I don't think it's a very common use case and a regular user would expect that REST will connect to server nodes. Having said that, ideally REST should be disabled on clients by default with an option to enable it. But this is an incompatible change, so probably it's better to do it in 2.0.

[~yzhdanov], can you chime in?;;;","16/Nov/16 19:31;ntikhonov;Guys,
I've implemented the following approach (https://github.com/apache/ignite/pull/1240):
* By default REST processor does not start on clinet nodes;
* For start REST processor on client node need to add envirement property IGNITE_REST_START_ON_CLIENT;
* When REST processor does not start on client in logs prints message ""REST protocols have not been started. For start the protocols on a client node add -DIGNITE_REST_START_ON_CLIENT=true"";;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Swap space is not cleared when the cache is destroyed,IGNITE-3957,13006974,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vkulichenko,vkulichenko,22/Sep/16 21:36,24/Jul/19 17:46,14/Jul/23 06:20,29/Sep/16 14:02,1.7,,,1.8,cache,,,,,0,,,,"Test attached.

When the cache is destroyed, corresponding swap filed are not deleted. However, they are deleted on node stop.",,amartianov,githubbot,sboikov,vkulichenko,,,,,,,,,"dspavlov commented on issue #1122: IGNITE-3957: clear swap space when cache is destroyed
URL: https://github.com/apache/ignite/pull/1122#issuecomment-514731892
 
 
   
   IGNITE-3957 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:46;githubbot;600","dspavlov commented on pull request #1122: IGNITE-3957: clear swap space when cache is destroyed
URL: https://github.com/apache/ignite/pull/1122
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/16 21:36;vkulichenko;SwapTest.java;https://issues.apache.org/jira/secure/attachment/12829934/SwapTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 29 14:02:41 UTC 2016,,,,,,,,,,"0|i33z5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Sep/16 10:14;githubbot;GitHub user amartianov opened a pull request:

    https://github.com/apache/ignite/pull/1122

    IGNITE-3957: clear swap space when cache is destroyed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3957

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1122.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1122
    
----
commit 6e101bda907d0f95bbfb5c9fa1361995fb7eb8bf
Author: Andrey Martianov <amartianov@gridgane.com>
Date:   2016-09-27T09:59:54Z

    IGNITE-3957: clear swap space when cache is destroyed

----
;;;","28/Sep/16 07:27;amartianov;I added swap clearing at cache destroy. 

Tests on TC passed. Please review;;;","29/Sep/16 14:02;sboikov;Reviewed, looks good, merged into master.

Andrey, thanks for fix, but do not forget to add new tests in some suites, otherwise test is not run on TeamCity.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: NuGet examples for LinqPad failed for specific scenario,IGNITE-3956,13006832,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,vsidorova,vsidorova,22/Sep/16 12:39,29/Sep/16 15:00,14/Jul/23 06:20,26/Sep/16 17:25,1.6,,,1.8,platforms,,,,,0,.net,,,"---------------------------------------------
DESCRIPTION
---------------------------------------------
Nuget examples for LinqPad fail if they are running one-by-one with pure Java node. Proposal: remove ""CreateCache"" method by ""GetOrCreateCache"" and/or get different names to caches from different examples
---------------------------------------------
STEPS FOR REPRODUCE
---------------------------------------------
# In the  default-config.xml  add properties dor class org.apache.ignite.configuration.IgniteConfiguration:
{noformat}
<property name=""binaryConfiguration"">
          <bean class=""org.apache.ignite.configuration.BinaryConfiguration"">
              <property name=""compactFooter"" value=""true""/>
              <property name=""idMapper"">
                  <bean class=""org.apache.ignite.binary.BinaryBasicIdMapper"">
                      <constructor-arg value=""true""/>
                  </bean>
              </property>
              <property name=""nameMapper"">
                  <bean class=""org.apache.ignite.binary.BinaryBasicNameMapper"">
                      <constructor-arg value=""true""/>
                  </bean>
              </property>
          </bean>
 </property>
{noformat}
# Run pure Java node (ignite.bat)
# Run LinqPad 4
# Add  Apache.Ignite package
# Go to  ""Samples"" Tab -> run all examples from nuget -> Apache.Ignite and nuget -> Apache.Ignite.Linq
---------------------------------------------
ACTUAL RESULT
---------------------------------------------
Query and PutGet examples fail with ""Failed to start cache"" exception. Look at the attached picture 
---------------------------------------------
EXPECTED RESULT
---------------------------------------------
Examples can be runnable on the one pure Java node many times without any exceptions","Win7, Apache Ignite 1.6.8, LINQPad 4",githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/16 12:43;vsidorova;LINQPad 4_exampleError.png;https://issues.apache.org/jira/secure/attachment/12829845/LINQPad+4_exampleError.png",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 29 15:00:43 UTC 2016,,,,,,,,,,"0|i33y9z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Sep/16 16:36;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1116

    IGNITE-3956 .NET: Fix cache creation in LINQPad examples

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3956

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1116.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1116
    
----
commit 38d1d0491ab9e6858a58b90d0e5d892d9fc0e284
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-26T08:04:56Z

    IGNITE-3876: ODBC: Better handling of NULL values for output parameters. This closes #1099.

commit 548fe6a3fe4d38caebe3b45366f3e812b035d006
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-26T09:05:07Z

    IGNITE-3333: IGFS: Now it is possible to use ATOMIC cache for data blocks when fragmentizer it disabled. This closes #1108.

commit 8032fc2c8a7cf9f404eb75c65164bb2900aab79d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-26T09:31:30Z

    IGNITE-3912: Hadoop: Implemented new class loading architecture for embedded execution mode.

commit 33a6878eccd60f86648067901613b713ef3bb71f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-26T11:56:51Z

    IGNITE-3491 .NET: Allow type name without assembly for type properties in app.config

commit a4a933eb708dadb6b67f6c062db32ffeef819184
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-26T14:41:57Z

    IGNITE-3883: ODBC: Implemented data-at-execution dialog. This closes #1073.

commit 510d6105a9c90591ac2bb4247d85b2e1f40a36a8
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-26T16:27:23Z

    IGNITE-3956 .NET: NuGet examples for LinqPad failed for specific scenario

----
;;;","26/Sep/16 17:23;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1116
;;;","29/Sep/16 15:00;vsidorova;Fix verified for Apache Ignite 1.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteSpringBean.reentrantLock() method incorrectly flips create and fair flags when calling kernel delegate.,IGNITE-3951,13006673,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,ekaganovich@yahoo.com,ekaganovich@yahoo.com,21/Sep/16 21:58,27/Sep/16 09:38,14/Jul/23 06:20,23/Sep/16 12:18,1.7,,,1.8,data structures,,,,,0,easyfix,,,"{code:title=IgniteSpringBean.java|borderStyle=solid}{code}
@Nullable @Override public IgniteLock reentrantLock(String name,
        boolean failoverSafe,{color:green}boolean fair, boolean create {color})  {

           checkIgnite();
           return g.reentrantLock(name, failoverSafe, {color:red}create, fair{color});
    }
",,agura,ekaganovich@yahoo.com,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 23 12:18:02 UTC 2016,,,,,,,,,,"0|i33xan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Sep/16 03:49;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/1104

    IGNITE-3951: IgniteSpringBean.reentrantLock() method incorrectly flip…

    …s create and fair flags.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-3951

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1104.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1104
    
----
commit 9cd4ab8ff7945bf41effd171ba7d996a1963f93b
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-09-23T03:48:11Z

    IGNITE-3951: IgniteSpringBean.reentrantLock() method incorrectly flips create and fair flags.

----
;;;","23/Sep/16 12:18;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1104
;;;","23/Sep/16 12:18;agura;LGTM. Merged to master branch. Thanks for contribution.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock when exchange starts with pending explicit lock,IGNITE-3950,13006526,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,ilantukh,ilantukh,21/Sep/16 15:02,19/Dec/18 14:05,14/Jul/23 06:20,21/Jul/17 12:46,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,Muted_test,test-fail,"Reproduced by IgniteCacheMultiTxLockSelfTest#testExplicitLockManyKeysWithClient (hangs with ~10% probability).

Exchange worker waits for lock to be released:
{noformat}
Thread [name=""exchange-worker-#155%dht.IgniteCacheMultiTxLockSelfTest3%"", id=195, state=TIMED_WAITING, blockCnt=0, waitCnt=44]
    Lock [object=o.a.i.i.processors.cache.GridCacheMvccManager$FinishLockFuture@2638011, ownerName=null, ownerId=-1]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1037)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
        at o.a.i.i.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:187)
        at o.a.i.i.util.future.GridFutureAdapter.get(GridFutureAdapter.java:137)
        at o.a.i.i.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.waitPartitionRelease(GridDhtPartitionsExchangeFuture.java:835)
        at o.a.i.i.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.distributedExchange(GridDhtPartitionsExchangeFuture.java:763)
        at o.a.i.i.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:516)
        at o.a.i.i.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1464)
        at o.a.i.i.util.worker.GridWorker.run(GridWorker.java:110)
        at java.lang.Thread.run(Thread.java:745)
{noformat}
while thread that holds lock cannot finish cache operation:
{noformat}
""Thread-9@3645"" prio=5 tid=0x11a nid=NA waiting
  java.lang.Thread.State: WAITING
	  at sun.misc.Unsafe.park(Unsafe.java:-1)
	  at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	  at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	  at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:967)
	  at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1283)
	  at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:157)
	  at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:117)
	  at org.apache.ignite.internal.processors.cache.GridCacheAdapter$45.inOp(GridCacheAdapter.java:2849)
	  at org.apache.ignite.internal.processors.cache.GridCacheAdapter$SyncInOp.op(GridCacheAdapter.java:5303)
	  at org.apache.ignite.internal.processors.cache.GridCacheAdapter.syncOp(GridCacheAdapter.java:4351)
	  at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAll(GridCacheAdapter.java:2847)
	  at org.apache.ignite.internal.processors.cache.GridCacheProxyImpl.putAll(GridCacheProxyImpl.java:838)
	  at org.apache.ignite.internal.processors.cache.distributed.dht.IgniteCacheMultiTxLockSelfTest$1.run(IgniteCacheMultiTxLockSelfTest.java:218)
{noformat}
",,Alexey Kuznetsov,avinogradov,dpavlov,githubbot,ilantukh,thammoud,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/17 18:11;VitaliyB;threadDumps.IgniteCacheTestSuite4.txt;https://issues.apache.org/jira/secure/attachment/12878223/threadDumps.IgniteCacheTestSuite4.txt",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 19 14:05:29 UTC 2018,,,,,,,,,,"0|i33wf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/17 15:18;VitaliyB;This issue is not reproduce in master branch. I think it was fixed in this issue: https://issues.apache.org/jira/browse/IGNITE-4681;;;","07/Jul/17 07:40;Alexey Kuznetsov;Don't forget to fix the test IgniteCacheMultiTxLockSelfTest#testExplicitLockManyKeysWithClient();;;","15/Jul/17 13:18;dpavlov;[~VitaliyB], is it repoduced in ignite 2.1 branch?

[~Alexey Kuznetsov], could you please share ticket number for IgniteCacheMultiTxLockSelfTest#testExplicitLockManyKeysWithClient() test?;;;","17/Jul/17 10:46;VitaliyB;[~dpavlov],
I could not reproduce it in ignite 2.1 branch.
It turns out to reproduce if I roll back to the commit in which this line was added.
{code:java}
fail(""https://issues.apache.org/jira/browse/IGNITE-3950"");
{code}
I think we can delete this line and see how this test will be on the TC.
;;;","19/Jul/17 13:00;dpavlov;[~VitaliyB], I agree, we can try. Probalby this issue was already fixed;;;","19/Jul/17 13:30;githubbot;GitHub user BiryukovVA opened a pull request:

    https://github.com/apache/ignite/pull/2322

    IGNITE-3950: Issue is not reproduce.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-3950

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2322.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2322
    
----
commit 51368ffa65259e2f449aeaf04c2189f12139a629
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-07-19T13:29:36Z

    IGNITE-3950: Issue is not reproduce.

----
;;;","20/Jul/17 09:04;VitaliyB;[~dpavlov],
I've done 40 TC runs for Ignite Cache 4 suite and the issue has not been reproduced.
http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache4&page=2&tab=buildTypeHistoryList&branch_Ignite20Tests=pull%2F2322%2Fhead;;;","20/Jul/17 10:12;dpavlov;[~VitaliyB], thank you for this researh!

offtop to this issue: could you please share your experience how to run multiple launches? As far as I know, if you run one build configuration few times they will be merged and only 1 will be in a queue. Did you use REST API?

About this issue: I see 40 launces and 6 execution timeouts in pull/2322/head. This problably related to this issue and probably not. Each of this timeouts requires detailed full build log investigation to find out which  was last ""started test"" which testh was hang up. Probability declared in this issue (10%) likes similar as current results.;;;","20/Jul/17 12:10;VitaliyB;[~dpavlov],

offtop to this issue: If there are free agents, TС will launch additional builds. Or you can select a certain agent for your build.

These timeouts were caused by one of these tests:
* IgniteCacheMultiTxLockSelfTest
* CacheGetEntryOptimisticSerializableSeltTest
* CacheGetEntryPessimisticSerializableSeltTest

You can convince yourself of this from the thread dumps.

Default branch has the same results:
 http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache4&tab=buildTypeHistoryList&branch_Ignite20Tests=%3Cdefault%3E;;;","20/Jul/17 17:41;dpavlov;[~VitaliyB], Is IgniteCacheMultiTxLockSelfTest hand up occurred in method testExplicitLockManyKeysWithClient() ? If yes, it seems this issue is still reproducible. 

I've updated issue description, we don't have IgniteCacheMultiLockSelfTest, there is only IgniteCacheMultiTxLockSelfTest ;;;","20/Jul/17 18:21;VitaliyB;[~dethmix], 
[^threadDumps.IgniteCacheTestSuite4.txt]
I've attached txt file with 6 thread dumps of all failed by timeout test suites.
I've not found timeouts associated with the IgniteCacheMultiTxLockSelfTest.;;;","21/Jul/17 07:38;dpavlov;[~VitaliyB], I've run test locally in cycle for at least 2 hours, it is not failing.

I think we can merge this change and continute to monitoring at Teamcity.;;;","21/Jul/17 12:30;avinogradov;[~VitaliyB],

Thanks for contribution, merged to master.

[~dpavlov],

Please unmute test at TeamCity if necessary and resolve the issue.;;;","21/Jul/17 12:41;dpavlov;Unmuted test in Ignite 2.0
http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=-7064535582619629339&tab=testDetails
;;;","19/Dec/18 14:05;githubbot;Github user BiryukovVA closed the pull request at:

    https://github.com/apache/ignite/pull/2322
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
TTL manager continues to track evicted entries,IGNITE-3948,13006446,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,agura,agura,21/Sep/16 09:47,09/Nov/16 08:39,14/Jul/23 06:20,11/Oct/16 11:50,1.7,,,1.8,,,,,,0,,,,"Cache uses only heap memory and has eviction and expiry policies. During loading data into cache TTL manager consumes heap memory even if entries were evicted because it still track this entries. 

It's ok in case of offheap memory or/and swap are enabled but doesn't make sense in case of using only heap memory.

See also http://stackoverflow.com/questions/39447690/apache-ignite-cache-eviction-still-in-memory",,agura,amashenkov,damaan,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 09 08:39:08 UTC 2016,,,,,,,,,,"0|i33vxb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/16 09:24;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1101

    IGNITE-3948: TTL manager continues to track evicted entries

    Fixed

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3948

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1101.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1101
    
----
commit 4d713331c510a65c791963d2c9d722b14dd5ab17
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-22T09:23:20Z

    Fixed

----
;;;","04/Oct/16 12:15;amashenkov;Andrew, 
Please, review PR, so it can be merged.;;;","06/Oct/16 13:15;agura;Looks good. Could be merged.;;;","11/Oct/16 07:40;vozerov;Andrey,
Please confirm if tests are fine.;;;","11/Oct/16 10:39;amashenkov;Vladimir,
 Tests are fine.;;;","09/Nov/16 08:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1101
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JDBC POJO store should support escaping for database schema, table and field names",IGNITE-3938,13006128,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,kuaw26,kuaw26,20/Sep/16 07:32,23/Sep/16 10:33,14/Jul/23 06:20,22/Sep/16 08:35,1.6,,,1.8,cache,,,,,0,,,,"Sometimes database names could be very *strange* and this could be handled only via escaping. We need to support this.
Adding {code}String JdbcDialect.escape(name){code} method looks like a good solution.",,anovikov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 23 10:33:11 UTC 2016,,,,,,,,,,"0|i33tyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/16 07:16;kuaw26;Andrey, please review.

Implemented *sqlEscapeAll* flag on JDBC POJO store factory and store.
Implemented custom escaping for *MySQLDialect* and *SQLServerDialect*.
Added tests for *sqlEscapeAll* mode ON.
Added test for remove.;;;","22/Sep/16 08:35;anovikov;Looks good for me, please merge.;;;","22/Sep/16 09:50;kuaw26;Pavel, please test.

Merged to master.

You should test on 3 databases: H2, MySQL, MsSQL.

create some table with escaped column, for example, MySQL:
{code}
create table test(
 id integer not null primary key,
 `group` varchar(10)
)
{code}

Import this table via Web Console and generate project.
After project generated - add to XML config for POJO store factory
{code}
 <property ""name""=""sqlEscapeAll"" value=""true""/>
{code}

And test:
# cache.loadCache(null) // load (check cache populated with data, use scan or SQL)
# cache.put(key, someVal1) // insert (check record appear in db)
# cache.put(key, someVal2) // merge (check record updated in db)
# cache.remove(key) // delete (check record deleted from db)

Repeat tests with sqlEscapeAll = false.

All should work without exceptions.;;;","23/Sep/16 10:33;pkonstantinov;Successfully tested with all DBs: MySql, MsSQL, H2.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatabaseMetadataDialect should properly handle unsigned types,IGNITE-3937,13006127,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,kuaw26,kuaw26,20/Sep/16 07:26,22/Sep/16 10:35,14/Jul/23 06:20,21/Sep/16 11:55,1.6,,,1.8,wizards,,,,,0,,,,"Some databases (for example MySQL) could declare columns like this {code}id int(11) unsigned{code} in this case *DatabaseMetadataDialect* will map to *int*, but should map to *long*.",,anovikov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 22 10:35:27 UTC 2016,,,,,,,,,,"0|i33tyn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/16 08:07;kuaw26;Andrey, please review.
Implemented support for unsigned types for MySQL.;;;","21/Sep/16 11:55;anovikov;Looks good. Alexey, please merge.;;;","22/Sep/16 08:32;kuaw26;Pavel, please test.

To test:
# create in *MySQL* table like this:
{code}
CREATE TABLE zzz (
  a int(11) unsigned,
  b int(11)
)
{code}

Then in schema import utility import this table.
Field ""a"" should be mapped to *java.lang.Long*
Field ""b"" should be mapped to *java.lang.Integer*
;;;","22/Sep/16 10:35;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC POJO store may load data twice in some conditions,IGNITE-3936,13006124,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,kuaw26,kuaw26,kuaw26,20/Sep/16 07:10,29/Dec/16 22:36,14/Jul/23 06:20,21/Sep/16 03:17,1.6,,,1.8,cache,,,,,0,,,,"If POJO class present and Binary marshaller configured then {code}cache.loadCache(null){code} may load same data twice.

Also in case of empty table in database POJO store also tries to load data twice.",,anovikov,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 21 03:17:01 UTC 2016,,,,,,,,,,"0|i33txz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/16 01:56;kuaw26;Please review my changes.
I added:
# Check for already processed key types.
# Info messages about start/finish cache load.
# Improved exception messages.;;;","21/Sep/16 03:17;anovikov;Reviewed. Fixed log message. Alexey, please merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassLoaders are not switched during object deserialization,IGNITE-3935,13006123,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmekhanikov,dmagda,dmagda,20/Sep/16 07:10,01/Aug/19 22:09,14/Jul/23 06:20,18/Jan/18 13:53,1.6,,,2.4,binary,,,,,0,,,,"If an object is being deserialized with ClassLoader A then this ClassLoader A will be used for the deserialization of the whole object's state, i.e., including all its fields that can be custom objects loaded by ClassLoader B. 

In a basic scenario we can have an object of some Ignite class that is presented in the classpath. That Ignite class may enclose an object that is loaded by peer-class-loading class loader. The deserialization will fail because Ignite won't switch to the peer-class-loading loader when it's needed.

To reproduce the issue do the following:
1. Start a remote ignite node using {{./ignite.sh ../examples/config/example-ignite.xml}}
2. Run the code below
{code}
public class StreamingExample {`
public static class StreamingExampleCacheEntryProcessor implements CacheEntryProcessor<String, Long, Object> {
    @Override
    public Object process(MutableEntry<String, Long> e, Object... arg) throws EntryProcessorException {
        Long val = e.getValue();
        e.setValue(val == null ? 1L : val + 1);
        return null;
    }
}

public static void main(String[] args) throws IgniteException, IOException {
    Ignition.setClientMode(true);
    try (Ignite ignite = Ignition.start(""examples/config/example-ignite.xml"")) {
        IgniteCache<String, Long> stmCache = ignite.getOrCreateCache(""mycache"");
        try (IgniteDataStreamer<String, Long> stmr = ignite.dataStreamer(stmCache.getName())) {
            stmr.allowOverwrite(true);
            stmr.receiver(StreamTransformer.from(new StreamingExampleCacheEntryProcessor()));
            stmr.addData(""word"", 1L);
            System.out.println(""Finished"");
        }
    }
}
{code}

However if to modify this code to the following everything will work fine 

{code}
public class StreamingExample {

    public static class StreamingExampleCacheEntryProcessor extends StreamTransformer<String, Long> {
        @Override
        public Object process(MutableEntry<String, Long> e, Object... arg) throws EntryProcessorException {
            System.out.println(""Executed!"");
            Long val = e.getValue();
            e.setValue(val == null ? 1L : val + 1);
            return null;
        }
    }

    public static void main(String[] args) throws IgniteException, IOException {
        Ignition.setClientMode(true);
        try (Ignite ignite = Ignition.start(""examples/config/example-ignite.xml"")) {
            IgniteCache<String, Long> stmCache = ignite.getOrCreateCache(""mycache"");
            try (IgniteDataStreamer<String, Long> stmr = ignite.dataStreamer(stmCache.getName())) {
                stmr.allowOverwrite(true);
                stmr.receiver(new StreamingExampleCacheEntryProcessor());
                stmr.addData(""word"", 1L);
                System.out.println(""Finished"");
            }
        }
    }
}
{code}",,agoncharuk,dmagda,dmekhanikov,githubbot,VitaliyB,zstan,,,,,,,"dspavlov commented on issue #2221: IGNITE-3935
URL: https://github.com/apache/ignite/pull/2221#issuecomment-517475350
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on pull request #2221: IGNITE-3935
URL: https://github.com/apache/ignite/pull/2221
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on issue #2195: Add unit-test for https://issues.apache.org/jira/browse/IGNITE-3935
URL: https://github.com/apache/ignite/pull/2195#issuecomment-517475361
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on pull request #2195: Add unit-test for https://issues.apache.org/jira/browse/IGNITE-3935
URL: https://github.com/apache/ignite/pull/2195
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on issue #3149: [IGNITE-3935] test case implemented
URL: https://github.com/apache/ignite/pull/3149#issuecomment-517476068
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3149: [IGNITE-3935] test case implemented
URL: https://github.com/apache/ignite/pull/3149
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 10 16:51:03 UTC 2018,,,,,,,,,,"0|i33txr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/16 07:12;dmagda;The issue was reported from a StackOverflow discussion
http://stackoverflow.com/questions/39539835/apache-ignite-serialization-error-related-to-data-streaming/39547964?noredirect=1#comment66427481_39547964;;;","26/Jun/17 14:06;githubbot;GitHub user onishkov opened a pull request:

    https://github.com/apache/ignite/pull/2195

    Add unit-test for https://issues.apache.org/jira/browse/IGNITE-3935

    Added unit-test corresponding to the problem https://issues.apache.org/jira/browse/IGNITE-3935 (ClassLoaders are not switched during object deserialization)

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/onishkov/ignite ignite-3935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2195.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2195
    
----
commit 8522a4b7dd45b1de69de38ad6e0cc93475aba8c5
Author: onishkov <onishkov@gmail.com>
Date:   2017-06-26T14:01:27Z

    Add unit-test for https://issues.apache.org/jira/browse/IGNITE-3935

----
;;;","29/Jun/17 19:52;githubbot;GitHub user 1vanan opened a pull request:

    https://github.com/apache/ignite/pull/2220

    Ignite 3935

    Issue https://issues.apache.org/jira/browse/IGNITE-3935

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/1vanan/ignite ignite-3935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2220.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2220
    
----
commit 0c0ebb844de5f392e10522d1f6abe70b82dcfb04
Author: ivanan <vanen31@gmail.com>
Date:   2017-06-29T19:31:16Z

    initial commit

commit dab3fc1a702ec125b1a26dfc5c1a155cd245ed60
Author: ivanan <vanen31@gmail.com>
Date:   2017-06-29T19:51:27Z

    StreamingExample & StreamingExampleSelfTest was added

----
;;;","30/Jun/17 16:41;githubbot;GitHub user Grigory2000 opened a pull request:

    https://github.com/apache/ignite/pull/2221

    IGNITE-3935

    Added test for Ignite-3935 issue.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Grigory2000/ignite Ignite-3935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2221.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2221
    
----
commit 66ede2de4fafbc9ae63abaac8623d4fb89f267f9
Author: Grigory <krasilnikov@phystech.edu>
Date:   2017-06-30T14:32:13Z

    StreamingExample for reproducing the issue added

commit 7e06da526adb96bf09a094107118041654ca6ed7
Author: Grigory <krasilnikov@phystech.edu>
Date:   2017-06-30T16:26:11Z

    Added self test/testsuite according to other tests

----
;;;","31/Jul/17 20:20;githubbot;GitHub user xtern opened a pull request:

    https://github.com/apache/ignite/pull/2369

    IGNITE-3935 test

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/xtern/ignite test/ignite-3935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2369.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2369
    
----
commit 9aa2f6dcc6ee478c284b8b48d3a828bb9e473b85
Author: Pereslegin Pavel <xtern@users.noreply.github.com>
Date:   2017-07-31T20:14:21Z

    IGNITE-3935 test

----
;;;","31/Jul/17 20:22;githubbot;Github user xtern closed the pull request at:

    https://github.com/apache/ignite/pull/2369
;;;","16/Aug/17 14:50;githubbot;GitHub user red-batmen opened a pull request:

    https://github.com/apache/ignite/pull/2456

    Add test for https://issues.apache.org/jira/browse/IGNITE-3935

    Writing test for IGNITE-3935

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/red-batmen/ignite IGNITE-3935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2456.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2456
    
----
commit 216dfb7fada63b983f2816af28ddabd297c0da22
Author: Alex Boroda <als.boroda@gmail.com>
Date:   2017-08-16T14:31:59Z

    Add test for https://issues.apache.org/jira/browse/IGNITE-3935

----
;;;","16/Aug/17 14:51;githubbot;Github user red-batmen closed the pull request at:

    https://github.com/apache/ignite/pull/2456
;;;","20/Sep/17 20:43;githubbot;GitHub user knovik opened a pull request:

    https://github.com/apache/ignite/pull/2708

    IGNITE-3935 Test on deserialization from different nodes

    ClassloaderSwitchSelfTest.java implements a test-case where class loaders should be switched to the peer-class-loading loader refering to IGNITE-3935 issue.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/knovik/ignite IGNITE-3935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2708.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2708
    
----
commit 107fff32693f18a73e9543bae9f496efd74cc6eb
Author: koctbik <koctbik@bk.ru>
Date:   2017-09-19T15:00:38Z

    IGNITE-3935 Testcase on class loader switching included in test suit CacheExamples

commit f7cd9116aab05c0e430ef5f5cd892b4a4b0f2a9e
Author: knovik <koctbik@frtk.ru>
Date:   2017-09-20T20:29:25Z

    This closes pull req

----
;;;","20/Sep/17 20:44;githubbot;Github user knovik closed the pull request at:

    https://github.com/apache/ignite/pull/2708
;;;","05/Dec/17 21:01;githubbot;GitHub user corney opened a pull request:

    https://github.com/apache/ignite/pull/3149

    [IGNITE-3935] test case implemented

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/corney/ignite IGNITE-3935-verification-for-deserialization

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3149.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3149
    
----
commit 18a8fdde68726e222e3e95541787d890a48598e1
Author: Дмитрий Каряев <dmitriy.karyaev@team.dz.ru>
Date:   2017-12-05T20:59:28Z

    [IGNITE-3935] test case implemented

----
;;;","09/Dec/17 16:46;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/3190

    IGNITE-3935: Switch to the peer-class-loading loader when it's needed.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3190.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3190
    
----
commit d0ad3d18f7cbd2323fd4ac0a036a8354f6279127
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-12-08T13:10:08Z

    IGNITE-3935: Switch to the peer-class-loading loader when it's needed.

----
;;;","10/Dec/17 07:36;zstan;tc seems ok https://ci.ignite.apache.org/viewLog.html?buildId=988186&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteBasic 
test mentioned in this issue are passed too.;;;","15/Jan/18 08:58;dmekhanikov;{{GridPeerDeployAware}} interface solves this problem for internal types, that may contain some user classes.

The problem with {{StreamTransformer}} is that the object, returned from {{StreamTransformer.from()}} doesn't implement {{GridPeerDeployAware}} interface.;;;","15/Jan/18 14:26;githubbot;GitHub user dmekhanikov opened a pull request:

    https://github.com/apache/ignite/pull/3378

    IGNITE-3935: Fix P2P class loading for StreamTransformer.from()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3935-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3378.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3378
    
----
commit 44bae8f97be94be40584a7500339663e25133fad
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-01-15T10:22:41Z

    ignite-3935 fix P2P class loading for StreamTransformer.from()

commit c3d52c511169c3624aaf1ebd39c0e93022f9a242
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-01-15T14:14:55Z

    ignite-3935 add test for P2P class loading for stream transformer

----
;;;","15/Jan/18 14:36;dmekhanikov;Fix for {{StreamTransformer.from()}} method is ready: https://github.com/apache/ignite/pull/3378
Please review.;;;","18/Jan/18 08:42;agoncharuk;Thanks, Denis, merged your changes to master and ignite-2.4;;;","18/Jan/18 08:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3378
;;;","15/Feb/18 15:10;githubbot;Github user 1vanan closed the pull request at:

    https://github.com/apache/ignite/pull/2220
;;;","10/Dec/18 16:51;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/3190
;;;",,,,,,,,,,,,,,,,,,,,,,,
"Web Console: Need to reload notebooks in sql after ""become this user"" was used. ",IGNITE-3927,13005865,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,anovikov,anovikov,19/Sep/16 10:01,19/Sep/16 10:58,14/Jul/23 06:20,19/Sep/16 10:05,1.7,,,1.8,,,,,,0,,,,,,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 19 10:58:42 UTC 2016,,,,,,,,,,"0|i33scn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Sep/16 10:05;anovikov;Added reload of notebooks list on become/revert. Fixed agent token on become.;;;","19/Sep/16 10:58;pkonstantinov;Tested. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Summary page - Download button should show progress of downloading,IGNITE-3923,13005831,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,19/Sep/16 06:40,13/Dec/16 09:38,14/Jul/23 06:20,13/Dec/16 07:19,1.6,,,2.0,wizards,,,,,0,,,,"In case of download large project Summary page is not responsive.
To fix this we should somehow animate ""Download progress"".",,anovikov,Dmitriyff,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 13 09:37:58 UTC 2016,,,,,,,,,,"0|i33s53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/16 12:57;Dmitriyff;added webworker process to download on summary page;;;","01/Dec/16 04:41;anovikov;Reviewed. Cleanup code. Pavel, please test project download.;;;","05/Dec/16 07:43;pkonstantinov;If ""huge"" project is in the list the Summary page is hangs on open.
Please fix this too.;;;","13/Dec/16 07:19;anovikov;Fixed. [~pkonstantinov], please test;;;","13/Dec/16 09:37;pkonstantinov;Tested. Closed. For my last comment I've created a new issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: test org.apache.ignite.internal.processors.igfs.IgfsTaskSelfTest hangs on WiFi network,IGNITE-3922,13005507,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,vozerov,iveselovskiy,iveselovskiy,16/Sep/16 17:54,09/Feb/17 18:39,14/Jul/23 06:20,26/Jan/17 09:25,1.7,,,1.9,igfs,,,,,0,,,,"The following 2 tests frequently hang:
org.apache.ignite.internal.processors.igfs.IgfsTaskSelfTest#testTask
org.apache.ignite.internal.processors.igfs.IgfsTaskSelfTest#testTaskAsync

Also that happens on public TC.

Thread dump does not show any specific reason of stuck, but it frequently contains stack like this:
Thread [name=""test-runner-#298%igfs.IgfsTaskSelfTest%"", id=364, state=RUNNABLE, blockCnt=14, waitCnt=25]
        at java.net.Inet6AddressImpl.getHostByAddr(Native Method)
        at java.net.InetAddress$1.getHostByAddr(InetAddress.java:905)
        at java.net.InetAddress.getHostFromNameService(InetAddress.java:590)
        at java.net.InetAddress.getHostName(InetAddress.java:532)
        at java.net.InetAddress.getHostName(InetAddress.java:504)
        at o.a.i.i.processors.igfs.IgfsBlockLocationImpl.convertFromNodes(IgfsBlockLocationImpl.java:304)
        at o.a.i.i.processors.igfs.IgfsBlockLocationImpl.<init>(IgfsBlockLocationImpl.java:101)
        at o.a.i.i.processors.igfs.IgfsDataManager.splitBlocks(IgfsDataManager.java:895)
        at o.a.i.i.processors.igfs.IgfsDataManager.affinity0(IgfsDataManager.java:862)
        at o.a.i.i.processors.igfs.IgfsDataManager.affinity(IgfsDataManager.java:738)
        at o.a.i.i.processors.igfs.IgfsImpl$18.call(IgfsImpl.java:1216)
        at o.a.i.i.processors.igfs.IgfsImpl$18.call(IgfsImpl.java:1191)
        at o.a.i.i.processors.igfs.IgfsImpl.safeOp(IgfsImpl.java:1679)
        at o.a.i.i.processors.igfs.IgfsImpl.affinity(IgfsImpl.java:1191)
        at o.a.i.igfs.mapreduce.IgfsTask.map(IgfsTask.java:116)
        at o.a.i.igfs.mapreduce.IgfsTask.map(IgfsTask.java:85)
        at o.a.i.i.processors.task.GridTaskWorker$2.call(GridTaskWorker.java:519)
        at o.a.i.i.processors.task.GridTaskWorker$2.call(GridTaskWorker.java:517)
        at o.a.i.i.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6509)
        at o.a.i.i.processors.task.GridTaskWorker.body(GridTaskWorker.java:516)
        at o.a.i.i.util.worker.GridWorker.run(GridWorker.java:110)
        at o.a.i.i.processors.task.GridTaskProcessor.startTask(GridTaskProcessor.java:678)
        at o.a.i.i.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:403)
        at o.a.i.i.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:385)
        at o.a.i.i.processors.igfs.IgfsImpl.executeAsync(IgfsImpl.java:1446)
        at o.a.i.i.processors.igfs.IgfsImpl.executeAsync(IgfsImpl.java:1427)
        at o.a.i.i.processors.igfs.IgfsImpl.execute(IgfsImpl.java:1375)
        at o.a.i.i.processors.igfs.IgfsTaskSelfTest.testTask(IgfsTaskSelfTest.java:171)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at junit.framework.TestCase.runTest(TestCase.java:176)
        at o.a.i.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1760)
        at o.a.i.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
        at o.a.i.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1698)
        at java.lang.Thread.run(Thread.java:745)


measurements of method 
org.apache.ignite.internal.processors.igfs.IgfsBlockLocationImpl#convertFromNodes ,
duration show the following:
: 
...
convertFromNodes Took: 39 ms
convertFromNodes Took: 34 ms
convertFromNodes Took: 40 ms
convertFromNodes Took: 32 ms
convertFromNodes Took: 39 ms
convertFromNodes Took: 32 ms
convertFromNodes Took: 32 ms
convertFromNodes Took: 37 ms
convertFromNodes Took: 31 ms
convertFromNodes Took: 31 ms
convertFromNodes Took: 5067 ms
convertFromNodes Took: 33 ms
convertFromNodes Took: 31 ms
convertFromNodes Took: 137 ms
convertFromNodes Took: 33 ms
convertFromNodes Took: 30 ms
convertFromNodes Took: 41 ms
convertFromNodes Took: 35 ms
convertFromNodes Took: 136 ms
convertFromNodes Took: 71 ms
convertFromNodes Took: 5037 ms
convertFromNodes Took: *15056 ms*
convertFromNodes Took: 37 ms


That is, addresses calculation sometimes takes as long as 15 seconds.
Simple caching of the addresses proven to fix the issue.",,iveselovskiy,j03wang,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 09 18:39:00 UTC 2017,,,,,,,,,,"0|i33q5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Sep/16 17:59;iveselovskiy;POC fix implementing the idea of simple addresses caching is available there:
https://github.com/apache/ignite/pull/1079 ;;;","28/Sep/16 10:18;iveselovskiy;The problem is reproducible in master branch. 
Problem is in o.a.i.i.processors.igfs.IgfsBlockLocationImpl.convertFromNodes(), not in test code. ;;;","26/Jan/17 09:25;vozerov;Fix to block locations looks overly complex to me. I simplified the test instead.;;;","09/Feb/17 18:39;j03wang;Hi! I'm running IGFS on Windows and have consistently run into the issue of convertFromNodes taking unreasonable amounts of time to the point where reading from IGFS is slower than the secondary FS backing IGFS. I've applied Ivan's patch of IgfsBlockLocationImpl from the PR and it seems to have solved the issue. Would you guys reconsider taking his change from the PR?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: profile page become empty after refresh(F5),IGNITE-3913,13005392,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,16/Sep/16 09:57,19/Sep/16 03:07,14/Jul/23 06:20,16/Sep/16 10:51,1.7,,,,wizards,,,,,0,,,,"Open User profile
Press F5",,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 19 03:06:26 UTC 2016,,,,,,,,,,"0|i33pfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Sep/16 10:51;anovikov;Fixed. Pavel, please test.;;;","19/Sep/16 03:06;pkonstantinov;Tested on web console.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: PDO always passes parameters as strings.,IGNITE-3910,13005218,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,isapego,isapego,15/Sep/16 17:01,09/Dec/16 11:50,14/Jul/23 06:20,23/Nov/16 15:12,1.7,,,1.8,odbc,,,,,0,odbc,,,"By some reason, PDO always passes parameters as strings to our ODBC driver. Need to investigate and find a solution.",,githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3865,IGNITE-3883,,,IGNITE-3919,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 05 12:38:46 UTC 2016,,,,,,,,,,"0|i33od3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/16 19:04;isapego;It seems like PDO uses {{SQLDescribeParam}} to determine the type of the parameter. This function is not supported currently by the ODBC. To support it we need to have ability to find out the type of the parameters of the prepared statements in Ignite.;;;","19/Sep/16 18:07;isapego;Implemented {{SQLDescribeParam}}, though I can't test it properly without IGNITE-3919 and IGNITE-2294.;;;","23/Nov/16 14:39;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1269

    IGNITE-3910: Implemented SQLDescribeParam.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3910

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1269.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1269
    
----
commit 04bf81e2b48d0985b33e95a7d33bed2e65b84aeb
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-23T14:38:41Z

    IGNITE-3910: Implemented SQLDescribeParam.

----
;;;","23/Nov/16 14:41;isapego;Ready for review.;;;","05/Dec/16 12:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1269
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect initialization CQ when node filter configured for cache,IGNITE-3907,13005137,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ntikhonov,ntikhonov,ntikhonov,15/Sep/16 10:17,16/Sep/16 11:28,14/Jul/23 06:20,16/Sep/16 11:28,1.6,,,,cache,,,,,0,,,,Continuous query might be initialized incorrect on cache with node filter. Seems this bug was injected with IGNITE-3413 changes. Test attached.,,ntikhonov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/16 10:27;ntikhonov;3907.patch;https://issues.apache.org/jira/secure/attachment/12828618/3907.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Fri Sep 16 11:21:35 UTC 2016,,,,,,,,,,"0|i33nv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/16 17:21;ntikhonov;Implemented that structures (ack buffers, partition recoveries and etc) initialized on node which started CQ.;;;","16/Sep/16 11:21;sboikov;Reviewed, looks good.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop: unreliable context classloader manipulations.,IGNITE-3902,13004985,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,14/Sep/16 19:43,15/Sep/16 15:43,14/Jul/23 06:20,15/Sep/16 15:43,1.7,,,1.8,hadoop,,,,,0,,,,,,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-09-14 19:43:45.0,,,,,,,,,,"0|i33mxb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache POJO store with Percona and the MariaDB shoud correctry select dialect,IGNITE-3896,13004812,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,14/Sep/16 08:31,06/Oct/16 04:40,14/Jul/23 06:20,05/Oct/16 12:15,1.6,,,1.8,cache,,,,,0,,,,,,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 06 04:40:28 UTC 2016,,,,,,,,,,"0|i33luv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/16 10:59;vsisko;Implemented dialect detection for MariaDB.
Fixed generation of Generic DB dialect.;;;","05/Oct/16 12:15;kuaw26;Pavel, please test on staging:
# Import domain models from PostgreSQL - Generic dialect should be detected.
# Import from MariaDB + MySQL JDBC driver - MySql dialect should be detected.
# Import from MariaDB + MariaDB JDBC driver - MySql dialect should be detected.;;;","06/Oct/16 04:40;pkonstantinov;Successfully tested. 
SQL dialect is set correctly to MySQL for both MariaDB and MySQL JDBC driver for MariaDB and for MySQL jdbc driver with Percona.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"void type is not part of 'primitiveMap' in IgniteUtils class , this is causing class not found exception for void.",IGNITE-3893,13004780,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,benakaraj.ks,benakaraj.ks,14/Sep/16 04:53,25/Jul/17 15:26,14/Jul/23 06:20,25/Jul/17 15:26,1.5.0.final,,,,compute,,,,,0,,,,"I am doing dynamic code generation inside IgniteCallable which i am broadcasting to all the nodes(this is to achieve Dynamic pojo support for IgniteCache) using bytebuddy , my dynamically generated pojo class has setter methods with return type void,  I am getting ClassNotFoundException : void  while generating Dynamic pojo, when i debugged i got to know that the problem(?) is that, void is not part of 'primitiveMap' in IgniteUtils class. Is there a reason for not having it in this MAP?. ",,benakaraj.ks,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 25 15:26:25 UTC 2017,,,,,,,,,,"0|i33lnr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 15:26;ntikhonov;Fixed by the following commit:

Fixed ClassNotFoundException for void.class
2a3a565 Valentin Kulichenko <valentin.kulichenko@gmail.com> on 12.03.2016 at 1:35;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryWriterExImpl.doWriteClass is incorrect,IGNITE-3892,13004690,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vkulichenko,vkulichenko,vkulichenko,13/Sep/16 19:06,21/Sep/16 23:07,14/Jul/23 06:20,21/Sep/16 23:07,1.7,,,1.8,binary,,,,,0,,,,"Here is the problematic code:
{code}
if (desc.registered())
    out.unsafeWriteInt(desc.typeId());
else {
    out.unsafeWriteInt(GridBinaryMarshaller.UNREGISTERED_TYPE_ID);

    doWriteString(val.getClass().getName());
}
{code}
If class is not registered, {{val.getClass().getName()}} is written. But {{val}} is already a {{Class}} instance, so it should be {{val.getName()}}.

Need to create a test and fix.",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-09-13 19:06:21.0,,,,,,,,,,"0|i33l3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Parameter binding does not work with PDO.,IGNITE-3883,13004375,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,isapego,isapego,12/Sep/16 18:20,26/Sep/16 17:23,14/Jul/23 06:20,26/Sep/16 14:42,1.7,,,1.8,odbc,,,,,0,odbc,,,"By some reason, parameter binding does not work with PDO. Investigate and fix.",,githubbot,isapego,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3910,,,,,IGNITE-3865,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 26 17:23:39 UTC 2016,,,,,,,,,,"0|i33j5r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Sep/16 16:36;isapego;Ok, it seems, like PDO uses [data-at-execution dialog|https://msdn.microsoft.com/en-us/library/ms716238(v=vs.85).aspx] which is not currently supported by our ODBC driver. I'm going now try and implement it properly.;;;","16/Sep/16 12:22;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1073

    IGNITE-3883: Implemented data-at-execution dialog.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3883

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1073.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1073
    
----
commit 68f087162ca54b8b6a629d0d13a1e7c745ad6183
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-15T14:56:35Z

    IGNITE-3883: Implemented data-at-execution dialog.

commit 822a988427715625ae8280dbc0ed8b9d3566516d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-15T16:12:27Z

    IGNITE-3883: Fixed DSN connection in Linux.

commit bd7dfb56f570e5448c4dc19ecde530b6924baa6c
Author: isapego <isapego@gridgain.com>
Date:   2016-09-16T12:18:10Z

    IGNITE-3883: Minor fix.

----
;;;","16/Sep/16 14:58;isapego;Done. Implemented data-at-execution dialog and added test.;;;","26/Sep/16 08:08;vozerov;Igor,

It seems that the patch conflicts with your changes related to output parameters null-check validation. 
 
Could you please re-merge your PR and assign back to me?

Vladimir.;;;","26/Sep/16 09:52;isapego;Vladimir,

Merged and resolved the conflicts.;;;","26/Sep/16 17:23;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1073
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sync putIfAbsent forever blocked on all nodes after one node is stopped,IGNITE-3874,13003816,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,avinogradov,avinogradov,09/Sep/16 10:08,23/Sep/16 09:05,14/Jul/23 06:20,23/Sep/16 09:05,,,,1.8,,,,,,0,,,,"First stacktrace:
Failed to send prepare response for transaction:
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.send(GridCacheIoManager.java:800)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.sendPrepareResponse(GridDhtTxPrepareFuture.java:731)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.onDone(GridDhtTxPrepareFuture.java:690)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.onError(GridDhtTxPrepareFuture.java:457)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.prepareAsync(GridDhtTxLocal.java:424)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.prepareAsync(GridDhtTxLocal.java:298)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.prepare(IgniteTxLocalAdapter.java:594)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager.salvageTx(IgniteTxManager.java:300)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager.access$2200(IgniteTxManager.java:119)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$NodeFailureTimeoutObject.onTimeout0(IgniteTxManager.java:2148)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$NodeFailureTimeoutObject.access$2400(IgniteTxManager.java:2113)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$NodeFailureTimeoutObject$2.run(IgniteTxManager.java:2188)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6540)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$1.body(GridClosureProcessor.java:802)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

Second:
Failed to commit transaction:
at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocalAdapter.finish(GridDhtTxLocalAdapter.java:750)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.finish(GridDhtTxLocal.java:649)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.commitAsync(GridDhtTxLocal.java:549)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.commit(IgniteTxLocalAdapter.java:585)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager.salvageTx(IgniteTxManager.java:317)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager.access$2200(IgniteTxManager.java:119)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$NodeFailureTimeoutObject.onTimeout0(IgniteTxManager.java:2148)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$NodeFailureTimeoutObject.access$2400(IgniteTxManager.java:2113)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$NodeFailureTimeoutObject$2.run(IgniteTxManager.java:2188)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6540)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$1.body(GridClosureProcessor.java:802)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)	
	
and finaly we see hanged 2pc TX with state MARKED_ROLLBACK.
Rollback should happen, but doesn't happen.",,avinogradov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 23 09:05:24 UTC 2016,,,,,,,,,,"0|i33fpj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Sep/16 09:05;avinogradov;Found incorrect exceprion catch, fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: DSN support for Windows works incorrectly,IGNITE-3868,13003635,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vsidorova,vsidorova,08/Sep/16 17:16,13/Jan/17 18:27,14/Jul/23 06:20,30/Sep/16 08:01,1.7,,,1.8,odbc,,,,,0,odbc,,,"---------------------------------------------
DESCRIPTION
---------------------------------------------
Some keys aren't registered in the registry during odbc driver installation and during DSN user data source adding:
HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\Apache Ignite\Setup
HKEY_CURRENT_USER\Software\ODBC\ODBC.INI\Apache Ignite DSN\{port,protocol_version}
---------------------------------------------
STEPS FOR REPRODUCE
---------------------------------------------
# Build and install odbc driver according to instruction from product binaries
# Go to Control Panel\System and Security\Administrative Tools\ODBC Data Source Administrator (or run ""odbcad32"" command)
# Try to add Apache Ignite DSN source
---------------------------------------------
ACTUAL RESULT
---------------------------------------------
Error message appear. Source isn't adding. There isn't HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\Apache Ignite\Setup key in the registry
---------------------------------------------
EXPECTED RESULT
---------------------------------------------
Source is installed without any exception
---------------------------------------------
NEXT STEPS FOR REPRODUCE
---------------------------------------------
# Add HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\Apache Ignite\Setup=[path_to_ignite_odbc_driver] into registry
# Add Apache Ignite DSN source in the ODBC Data Source Administrator
# Start some cache
# Run Tableau
# Try to connect to the cache using DSN
---------------------------------------------
ACTUAL RESULT
---------------------------------------------
Connection error message appears. There aren't HKEY_CURRENT_USER\Software\ODBC\ODBC.INI\Apache Ignite DSN\{port,protocol_version} keys in the registry
---------------------------------------------
EXPECTED RESULT
---------------------------------------------
Connection is successful
---------------------------------------------
ADDITIONAL INFO
---------------------------------------------
Keys HKEY_CURRENT_USER\Software\ODBC\ODBC.INI\Apache Ignite DSN\{port,protocol_version} are registered in the registry after user run ""Configure"" command (without any changes) for Apache Ignite DSN source","Win 8, Apache Ignite 1.6.7",githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3861,,,,,,,,,IGNITE-3390,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 13 18:27:14 UTC 2017,,,,,,,,,,"0|i33elb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Sep/16 08:29;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1051

    IGNITE-3868: Fix for driver installiation.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3868

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1051.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1051
    
----
commit 12fd4976f482ebc43831754645e34042c9073b2d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-08-25T09:29:04Z

    Fixed GridQueryParsingTest.

commit 12f532986677c30a716f73aeaa7d3587dd701f55
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-01T14:05:15Z

    Merge remote-tracking branch 'remotes/community/ignite-1.6.6' into ignite-1.6.7

commit ae7765329fd6f7d50d13183d13626f39c5682334
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-09-02T15:01:12Z

    IGNITE-2208 - Queries with object arguments doesn't work wth BinaryMarshaller.

commit 7a84ab6a9163ca31fbcfcc6d7ff27e06bf9babef
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:05:16Z

    IGNITE-3827: Removed double marshalling of keys in DataStreamerImpl.addData(Map) method.

commit 7bb961fd0a2e78334d33b6bc279c4edc323c246a
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:05:54Z

    Merge remote-tracking branch 'upstream/ignite-1.6.7' into ignite-1.6.7

commit e3c4868d6737e5a0f0b90f99666242865add750c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:23:09Z

    IGNITE-3829: Optimized affinity key field name handling.

commit e9c797fd964727882ad6f40f2a452b17ae7c857e
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:47:40Z

    IGNITE-2946: CPP: Optimized GetNext() method for cursors. This closes #992.

commit c992213274ec5872ef7ce359efa51e26003424ad
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:49:42Z

    IGNITE-3760: ODBC: Added tests for supported SQL92 string functions. This closes #1006.

commit d06eaa2344a753e08d1e3cb00e6b4ab83c6a9a01
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:52:04Z

    IGNITE-3801: ODBC: Added tests for OUTER JOIN. This closes #1027.

commit f8ae67456703e63e3afc9bb5c21d81d576d59448
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-04T14:09:08Z

    IGNITE-3651 IGFS: Implemented ""usedSpaceSize()"" operation for local secondary file system. This closes #1009.

commit fc2fe7bf1905675258d40932a4ff649156c17488
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-04T14:12:35Z

    IGNITE-3646: IGFS: Added test for symlinked mkdirs on local secondary file system. This closes #1013.

commit 3aa13f716934a6ccfe49f8bf99ec3b654e263900
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-05T07:19:48Z

    IGNITE-3829: Additional fix.

commit a760918757bee71ab28495496f94e9067ef17888
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-05T07:36:38Z

    IGNITE-3750: ODBC: Added tests for date/time types. This closes #1002.

commit d65228e42ec9c84182b8c9c9c8d06a0056d5eed2
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T08:20:26Z

    IGNITE-2974: ODBC: Added ""socketSendBufferSize"" and ""socketReceiveBufferSize"" configuration parameters. This closes #994.

commit 40d4b6ac6a71ed541d20018cf7deb2fb9b9bbb9b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-05T08:35:26Z

    IGNITE-3834: Fixed a problem with BinaryMarshaller handles resolution.

commit 42963e6c99e9b282972e6ad67a813a8038cf580f
Author: Alexander Paschenko <apaschenko@gridgain.com>
Date:   2016-09-05T11:10:39Z

    IGNITE-3817: Fixed binary object re-build with missing schema.

commit df8163f1ad3a390bb8d51b0eb2f378b5b3663025
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T11:15:59Z

    IGNITE-3743: ODBC: Added procedure call escape sequence support. This closes #1008.

commit e3533010b584ba986196f9c7dbc36359aebd829e
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-05T12:02:07Z

    IGNITE-3819: ODBC: Improved error logging. This closes #1024.

commit 008cf64429f40635e396a71f2c0aaf184077ff2b
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T12:17:53Z

    IGNITE-3741: ODBC: Added character escape support to expression parser. This closes #1004.

commit bf9371a3ddb020209a6b031e11282706e19c58cb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-05T14:05:05Z

    IGNITE-3611: IGFS: Slight refactoring to listPaths() and listFiles() methods.

commit 2c397d2fb8851b25aa5f0a5589ad1deffbe7eee9
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T14:38:47Z

    IGNITE-2629: ODBC: Requests are now processed asynchronously in separate thread pool. This closes #996.

commit 355082958b476009179254df9be20e225179cb7c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T15:06:27Z

    IGNITE-2833: GridCacheTtlManager pending queue retention size optimization.

commit 8970b3e3a36b18274b451fddf365627ba23459d6
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-05T15:15:11Z

    IGNITE-3628: ODBC: Added ability to configure page size in DSN, changed default value from 32 to 1024. This closes #1014.

commit e23a94fbab4040f60b7a8ef3638aaebe4b9ba5f6
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-06T08:34:14Z

    Fixed GridQueryParsingTest.

commit 385355a157993f4d78ced551bbaa168181748a7d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-06T09:09:38Z

    GridNearOptimisticTxPrepareFuture: fixed javadoc warning.

commit bdc1b10cabcefb6684adcdb22bb6106e44148516
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-06T11:45:01Z

    IGNITE-2208 Queries with object arguments doesn't work wth BinaryMarshaller: use 'toBinary' for arguments conversion.

commit 224cae1dd5dc5d95843c6ea1a72f61f27ea35cb4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-07T07:18:20Z

    Fixed IgniteCacheExpiryPolicyAbstractTest.testZeroOnAccess.

commit b5121adff860d96e5954d3466137854f8fae4c27
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-07T09:44:24Z

    IGNITE-2629: ODBC: GridNioAsyncNotifyFilter should process onSessionOpened synchronously

commit 121b89b07990068a31d384da8d6f3c781cf0efb8
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-07T11:36:51Z

    Fixed NPE in GridCacheAbstractFullApiSelfTest in multi jvm tests.

commit ff744cc2213a6a5973955813b2db43595368300c
Author: isapego <isapego@gridgain.com>
Date:   2016-09-09T07:44:49Z

    IGNITE-3868: Fix for driver installiation.

----
;;;","09/Sep/16 15:15;vsidorova;First part is fixed - Apache Ignite DSN source is correctly added.

But second issue - connection to the cache from Tableau via DSN is still reproducible. Please, look at this.;;;","14/Sep/16 09:18;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1051
;;;","27/Sep/16 15:22;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1126

    IGNITE-3868: Fix for Tableau connect using DSN.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3868

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1126.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1126
    
----
commit b2f92954cc5adc3f35f2478e521b8c613035b4ee
Author: isapego <isapego@gridgain.com>
Date:   2016-09-27T15:12:09Z

    IGNITE-3868: Fix for Tableau connect using DSN.

----
;;;","27/Sep/16 15:24;isapego;Ready;;;","13/Jan/17 18:27;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1126
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ScanQuery ignores pageSize propertry,IGNITE-3867,13003630,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,ntikhonov,ntikhonov,08/Sep/16 16:58,17/Mar/17 14:17,14/Jul/23 06:20,17/Jan/17 13:19,1.7,,,1.9,cache,,,,,0,,,,"See 
{{org.apache.ignite.internal.processors.cache.IgniteCacheProxy#query(ScanQuery, IgniteClosure<T,R>, ClusterGroup)}} method. 
In this place we loose page size which set by user and use default value:
{{qry = ctx.queries().createScanQuery(p, transformer, scanQry.getPartition(), isKeepBinary)}}",,amashenkov,githubbot,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-872,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Thu Feb 09 17:43:48 UTC 2017,,,,,,,,,,"0|i33ek7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Sep/16 17:26;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1078

    IGNITE-3867: ScanQuery ignores pageSize propertry

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3867

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1078.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1078
    
----
commit e90c9c8889235e780bb9f37ed0b0ca7a8d30136d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-06-14T07:05:20Z

    ignite-114 Load value from store for cache 'invoke'
    (cherry picked from commit e10ffef)

commit e5fcebb095fc189487d1d4f267fbf2164aef7329
Author: sboikov <sboikov@gridgain.com>
Date:   2016-06-14T07:17:50Z

    ignite-3038 Do not use custom discovery events to start continuous queries for system caches
    (cherry picked from commit 7f878c5)

commit c88ce20a62e315418cac014c3419ce254c591bee
Author: sboikov <sboikov@gridgain.com>
Date:   2016-06-14T08:16:29Z

    ignite-3038 Do not use custom discovery events to start continuous queries for system caches
    (cherry picked from commit 7f878c5)

commit 3a4f587b457bd1bb86665bf51757a2aa3f986f07
Author: sboikov <sboikov@gridgain.com>
Date:   2016-06-14T08:42:52Z

    Tcp discovery minor: create buffered input stream with size = socket receiveBufferSize.
    (cherry picked from commit 54425bf)

commit 6094ee0d73f26e913dd5ff4c64d72a75e450479b
Author: Sergi Vladykin <sergi.vladykin@gmail.com>
Date:   2016-06-05T21:14:05Z

    ignite-gg-11181 - scanCount with offheap index fix

commit fda4110baf5cba8c6d32d0cdd3d7e2c8945af2e5
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-06-14T10:25:38Z

    Merge branch 'gridgain-7.6.1' of https://github.com/gridgain/apache-ignite into gridgain-7.6.1

commit e9a33f2376733ec3c507963c6ff98e3ad0514281
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-06-14T15:17:33Z

    IGNITE-3272 Fixed ""Memory consumption in ContinuousQueryHandler"". (cherry picked from commit 5f44672)

commit 84547ef2a198d639ac213ecf2f51de539b3f19d0
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-06-14T00:52:39Z

    IGNITE-3305 - Fixed SYNC rebalance mode for dynamically started cache.

commit ab7fa496459d9e8560c56d0daa9c56c171dea405
Author: Sergi Vladykin <sergi.vladykin@gmail.com>
Date:   2016-06-14T18:47:11Z

    IGNITE-3273 - fixed

commit 6faa1f229bf24d5aa5dc6fc99023283639ecacfe
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-06-14T15:09:10Z

    IGNITE-3215 - Added IgniteRDD.withKeepBinary method

commit 10916ed03688f820cef93866c8ea71226bba3716
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-06-15T09:19:44Z

    IGNITE-3215 - Added IgniteRDD.withKeepBinary method (ScalaDoc)

commit e9546aa76be97dde30d3d4777b5770d15cc4d1fa
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-06-15T10:44:23Z

    Fixed compilation

commit 5c1492872358cac78a6954796ea1e3420bf7c26e
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-06-15T09:58:33Z

    IGNITE-2344 - WebSessionFilter doesn't support session ID renewal. Fixes #780.

commit dc1d08856e803ee8b689b2e5aad25c767e4c2015
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-10T08:05:48Z

    IGNITE-3287: IGFS Delete in PRIMARY/DUAL modes goes through the same path.

commit 51814fd816f1f3c4bf72c91399c03db7b1358ed1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-15T13:25:19Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.1' into gridgain-7.6.1

commit c2f8df96907e096fdeaa8d040463ff5ec1662395
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-14T08:09:01Z

    IGNITE-3294: IGFS: Improved ""create"" performance in DUAL mode.

commit 95513d3214dd1ea7a1a68d6f1709af004c2efccd
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-14T08:36:33Z

    IGNITE-3294: IGFS: Created separate processor optimized for entry rename.

commit e733e912cccf2c83d7e31d6f856b30fc4c663975
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-14T14:39:44Z

    IGNITE-2938: IGFS: Puts during secondary file reads are now performed synchronously and with proper semantics.

commit b46422ad64f531900263fb36f6ff28373e4346f1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-15T13:02:53Z

    IGNITE-3312: IGFS: Fixed a bug introduced during create() routine reworking.

commit b8411955e5169b38430e077c5b4ed85d8e95b83c
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-06-15T14:18:27Z

    IGNITE-2767: Cont. query remote filter requires to be in client nodes class path.
    Reviewed and merged by Denis Magda.

commit a672e576cf88e21859944474355a91d9f4699550
Author: agura <agura@gridgain.com>
Date:   2016-06-14T14:32:25Z

    ignite-3209 Waiting for affinity topology in case of failover for affinity call

commit 19aeec39fe84f141a97ba1b0f4e6b48d2bb21f27
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-06-15T15:43:22Z

    IGNITE-3151: Using IgniteCountDownLatch sometimes drives to dead lock.
    Reviewed and merged by Denis Magda.

commit b5f4aac2a5daad96cdac4df9abf91713824ff2c0
Author: Anton Vinogradov <av@apache.org>
Date:   2016-06-16T11:14:33Z

    GG-11237 KeepBinary flag will not be send to another node.

commit 40d41c10e3179436bc1ae1e12bdc2d6e3a7208f0
Author: Anton Vinogradov <av@apache.org>
Date:   2016-06-16T07:25:38Z

    IGNITE-3216 Need to deduplicate addresses registered in the IP finder

commit e05c012f293dcad2cd3a184e6d257a0cb2af509a
Author: Anton Vinogradov <av@apache.org>
Date:   2016-06-16T07:49:48Z

    IGNITE-3153 TcpDiscoveryZookeeperIpFinder doesn't properly handle client reconnections

commit 1689164bf0c7cf2d506478f8eaff27c5405e1d04
Author: Kristian Rosenvold <kristian.rosenvold@gmail.com>
Date:   2016-06-16T11:46:17Z

    When multiple addresses resolve to same name, TcpDiscoverySharedFsIpFinder fails on unregister.
    Reviewed and merged by Denis Magda.

commit 6fb108f1c24aa4ffc2e5dcf0442637bbdf856b50
Author: Anton Vinogradov <av@apache.org>
Date:   2016-06-16T15:58:08Z

    Compatibility fix (removal reverted)

commit a527bf88133820885be1f6bd4d8e286bf97ac6d0
Author: sboikov <sboikov@gridgain.com>
Date:   2016-06-17T08:19:27Z

    IgniteCacheRandomOperationBenchmark: distinguish small/large value classes to better estimate cache size.

commit 0fd1ab6d21447ae63e09535057cec6326539520f
Author: sboikov <sboikov@gridgain.com>
Date:   2016-06-17T09:04:13Z

    IgniteCacheRandomOperationBenchmark: minor code style changes.

commit 0773332335f965af3ec18a474138e3ea6157fc6e
Author: agura <agura@gridgain.com>
Date:   2016-06-16T10:03:03Z

    ignite-3239 Fix of java.io.IOException: Resource deadlock avoided

----
;;;","03/Oct/16 14:48;amashenkov;Nikolay, please review PR.;;;","11/Oct/16 12:25;ntikhonov;[~amashenkov],
thank you for your contributions! I've reviewed your changes and found an one comment: need add test. Could you please write tests on this functionality?

;;;","16/Dec/16 17:56;amashenkov;[~ntikhonov],
I've no idea how we can test this. We can't add any event listener to check that number of pages received and we have no metrics with pages counter.
PageSize is used in GridCacheQueryFutureAdapter, but how we can check the pageSize value pass into it?;;;","19/Dec/16 10:17;ntikhonov;[~amashenkov]
If we can't test feature how can we sure that issue gone? Any developer can break down and do not notice it. ;) You can override {{Tcp CommunicationSpi}} and check that page size sent to remote node and check that we received several messages instead of one. Look at IgniteCacheAbstractStopBusySelfTest test as example.;;;","09/Jan/17 14:11;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1078
;;;","09/Jan/17 14:17;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1406

    IGNITE-3867: ScanQuery ignores pageSize property

    Fixed.
    Test added.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3867

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1406.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1406
    
----
commit b6d6e30d73ef9d9950da0448412d3b02ba96d224
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-01-09T14:13:07Z

    Fixed

----
;;;","17/Jan/17 13:07;amashenkov;[~ntikhonov],
I've added a test. TC looks fine.;;;","17/Jan/17 13:08;ntikhonov;[~amashenkov],
Thank you for your contribution. Looks good for me.;;;","09/Feb/17 17:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1406
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridServiceProxy invocation never times out,IGNITE-3862,13003390,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dkarachentsev,vkulichenko,vkulichenko,07/Sep/16 22:17,17/Feb/17 12:59,14/Jul/23 06:20,12/Dec/16 09:21,1.7,,,1.9,managed services,,,,,0,,,,"{{GridServiceProxy}} uses compute for remote invocation. In some cases an exception on server side can cause the closure execution never finish. For example, this happens when the exception is thrown during the serialization of the result.

Need to add additional {{IgniteServices.serviceProxy(..)}} method that will additionally allow to specify custom timeout.

This timeout should limit the number of retries (there is an infinite loop now) and also be passed to {{callAsyncNoFailover}} to avoid hangs.",,dkarachentsev,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 09 09:39:29 UTC 2016,,,,,,,,,,"0|i33d33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Oct/16 16:31;dkarachentsev;PR [#1156|https://github.com/apache/ignite/pull/1156];;;","04/Nov/16 08:33;sboikov;Hi Dmitry,

I reviewed your changes, have few questions:
- usually we first discuss public API changes on dev list, was it discussed there?
- now if target node is local then timeout for method call is ignored, is it ok? If yes, then please document this in javadoc. Also javadoc says that timeout is used to 'wait for service availability', but actually it is also used for remote call, please document it more precisely.
- in IgniteServiceProxyTimeoutInitializedTest one test case expects that on timeout IgniteException is thrown, another one expects ComputeTaskTimeoutException. Should not it be the same exception when invocation fails with timeout?

Also if job or job result (de)serialization can cause hang of compute call this should be fixed separately, can you please create ticket?

Thanks;;;","16/Nov/16 09:22;dkarachentsev;Thanks Semen for review.
* Fixed javadoc.
* I'm not sure that GridServiceProxy should throw ComputeTaskTimeoutException, in most cases it throws just IgniteException. Maybe I need to create specific exception for that case (f.e. GridServiceAcquireTimeoutException)?
* Opened a ticket for compute serialization error https://issues.apache.org/jira/browse/IGNITE-4231
* Use LT in GridTaskWorker and GridJobWorker to reduce amount of same errors when GridServiceProxe retries to get service (it ignores GridServiceNotFoundException and ClusterTopologyCheckedException). ;;;","09/Dec/16 09:39;sboikov;Reviewed, looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: installer doesn't support path to driver with backspaces,IGNITE-3861,13003209,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsidorova,vsidorova,07/Sep/16 12:03,19/Sep/16 14:44,14/Jul/23 06:20,09/Sep/16 09:20,1.6,,,1.8,odbc,,,,,0,,,,"---------------------------------------------
STEPS FOR REPRODUCE
---------------------------------------------
# Build odbc driver according to instruction from $IGNITE_HOME/platforms/cpp/DEVNOTES.txt
# Put driver into folder with path which contains backspaces
# Install odbc driver according to instruction from  $IGNITE_HOME/platforms/cpp/odbc/README.txt 
---------------------------------------------
ACTUAL RESULT
---------------------------------------------
# Driver get error like this:
{noformat}
C:\ignite\platforms\cpp\odbc\install>install_x86.cmd ""C:\Program Files\IgniteODBC\ignite.odbc.dll""
warning: The path you have specified seems to be a directory. Note that you have to specify path to driver file itself instead.
Installing driver: """"C:\Program Files\IgniteODBC\ignite.odbc.dll""""
The operation completed successfully.
The operation completed successfully.
ERROR: Invalid syntax.
Type ""REG ADD /?"" for usage.
The operation completed successfully.
Driver can not be found: """"C:\Program Files\IgniteODBC\ignite.odbc.dll""""
Call format: install_x86 abs_path_to_driver
Press any key to continue . . .
{noformat}
# Driver isn't installed
---------------------------------------------
EXPECTED RESULT
---------------------------------------------
Driver is installed without any exceptions or should give correct and clear  error string","Win 8, odbc installer 1.6.7",isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3868,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 19 14:44:26 UTC 2016,,,,,,,,,,"0|i33byv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Sep/16 09:20;isapego;Resolved by IGNITE-3868;;;","19/Sep/16 14:44;vsidorova;Fix verified for Ignite 1.6.8 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve distributed SQL support.,IGNITE-3860,13003207,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sergi,sergi,sergi,07/Sep/16 11:50,01/Mar/17 07:31,14/Jul/23 06:20,01/Mar/17 07:31,1.7,,,1.9,sql,,,,,0,important,,,Now we do not process subqueries containing aggregate functions or group bys in FROM clause. Also we do not correctly process UNIONs.,,amashenkov,sergi,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3013,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 13 13:33:26 UTC 2016,,,,,,,,,,"0|i33byf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Sep/16 13:33;vozerov;Closed duplicate ticket IGNITE-2592.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Copy constructor in ConnectorConfiguration does not copy sslFactory,IGNITE-3848,13003068,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vkulichenko,vkulichenko,vkulichenko,06/Sep/16 22:32,06/Sep/16 22:41,14/Jul/23 06:20,06/Sep/16 22:41,1.7,,,1.8,general,,,,,0,,,,"Since {{sslFactory}} is not copied, it's actually ignored. The only way to enable SSL is to enable globally on {{IgniteConfiguration}} level.",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-09-06 22:32:54.0,,,,,,,,,,"0|i33b3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some of the job execution events are recorded for internal tasks,IGNITE-3846,13002965,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,skozlov,vkulichenko,vkulichenko,06/Sep/16 16:20,09/Sep/16 09:55,14/Jul/23 06:20,09/Sep/16 09:55,1.7,,,1.8,general,,,,,0,,,,"{{GridTaskWorker.recordJobEvent(..)}} method doesn't filter out internal tasks. This is how the code should look like:
{code}
if (!internal && ctx.event().isRecordable(evtType)) {
    ...
}
{code}
Tests should be added as well.",,kuaw26,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 09 09:55:47 UTC 2016,,,,,,,,,,"0|i33agn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/16 04:34;kuaw26;# GridTaskWorker.recordJobEvent(..) - fixed.
# GridEventStorageSelfTest#testGridInternalEvents()

Val, could you please review my fix in branch ignite-3846
You may use this link: https://github.com/gridgain/apache-ignite/compare/ignite-1.6.7...gridgain:ignite-3846;;;","07/Sep/16 15:48;vkulichenko;Alexey,

Looks good to me. Please merge.;;;","09/Sep/16 09:55;kuaw26;Issue fixed. Unit tests added.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console > Model: the preview of 'general' and 'SQL' sections shows the same content,IGNITE-3845,13002883,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,06/Sep/16 10:53,12/Sep/16 02:24,14/Jul/23 06:20,07/Sep/16 06:36,,,,,wizards,,,,,0,,,,"Create new model.
Enter any info in the SQL section.",,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/16 10:55;pkonstantinov;ig-3845.png;https://issues.apache.org/jira/secure/attachment/12827169/ig-3845.png",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 07 10:12:24 UTC 2016,,,,,,,,,,"0|i339yf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/16 06:36;anovikov;Fixed. Vasiliy, please retest.;;;","07/Sep/16 10:12;vsisko;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: IGFS > Miscellaneous: Save is stay disabled after row deleting,IGNITE-3842,13002843,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,06/Sep/16 06:54,12/Sep/16 02:23,14/Jul/23 06:20,07/Sep/16 18:52,,,,,,,,,,0,,,,"Create several new rows in the 'Path modes' - Save
Delete one row - Save is still unavailable.",,Dmitriyff,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 08 02:36:20 UTC 2016,,,,,,,,,,"0|i339pj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/16 18:51;Dmitriyff;added fix, remove check pristine when watch backupItem changes. pls check base behavior;;;","08/Sep/16 02:36;vsisko;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Continue investigation: High memory utilization when OFFHEAP_TIERED mode and expiry policy are enabled.,IGNITE-3840,13002789,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,amashenkov,amashenkov,05/Sep/16 21:11,17/Oct/17 10:36,14/Jul/23 06:20,07/Jun/17 06:33,1.5.0.final,,,2.0,cache,,,,,0,community,important,,"Continue investigation of high memory utilization.

The problem is originally reported by Neil Wightman: http://apache-ignite-users.70518.x6.nabble.com/Off-Heap-cache-using-lots-of-heap-memory-td3414.html
",,amashenkov,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2833,,,,,,"05/Sep/16 21:11;amashenkov;IgniteExpiryIssue.java;https://issues.apache.org/jira/secure/attachment/12827103/IgniteExpiryIssue.java","05/Sep/16 21:11;amashenkov;config.xml;https://issues.apache.org/jira/secure/attachment/12827104/config.xml",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Oct 17 10:36:08 UTC 2017,,,,,,,,,,"0|i339dj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Sep/16 16:29;amashenkov;GridCacheTtlManager pendingEntries Set memory consumption reduced by 20%.

I have noticed no performance issues with large pendingEntries set with long-live entries  as well as set with short-lived entries.
;;;","06/Sep/16 16:32;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1037

    IGNITE-3840 : Continue investigation: High memory utilization when OFFHEAP_TIERED mode and expiry policy are enabled

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3840

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1037.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1037
    
----
commit 30aa287b881d4f9dc3fd5eec9840eab8d9a20828
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-24T13:57:20Z

    ignite-2620 Skip empty entries in GridCacheMapEntry.onTtlExpired
    (cherry picked from commit 6fc274a)

commit e2db87bb1b6c71d7978af17e9f2005ba1c661ab4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-25T07:06:43Z

    Added trace logging for entry/offheap updates.
    (cherry picked from commit 9b2767f)

commit 6fcc7a41d8676956983792717483318b85781479
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-05-25T09:54:40Z

    IGNITE-2538 - IgniteRDD count() and isEmpty() method use IgniteCache API

commit e274d44a37fd1269e7a3a5f0000e1ee6139fd0b0
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-26T11:57:52Z

    IGNITE-3188: Binary marshaller doesn't unmarshal a void type (added tests)

commit 6687e2bfb9627ce08c1c258527e2927606a500ed
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T08:48:00Z

    review IGNITE-2708 Need to validate that SPIs are started only once
    (cherry picked from commit cd063da)

commit 40a41fc50bdb73d50e2aa13da8203784be98e38a
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T08:59:02Z

    reverting review IGNITE-2708 Need to validate that SPIs are started only once
    (cherry picked from commit bf561e1)

commit d05786d8bfc8177223b6db9a98bd3c8170b6bcf1
Author: Ryan Zhao <ryan.zhao.cs@gmail.com>
Date:   2016-05-13T09:00:43Z

    review IGNITE-2708 Need to validate that SPIs are started only once (commit with proper author)
    (cherry picked from commit 98338ff)

commit 9d937ca34775f39b46568eb3fca4585ce00a0fb1
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T09:54:01Z

    review IGNITE-2708 Need to validate that SPIs are started only once (added logic to protect properly started grids)
    (cherry picked from commit b8d624a)

commit edc2947d7340cac4a3c90fa726c23d5d47798ab9
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-25T10:07:03Z

    IGNITE-3191: IGFS: Improved error logging for operations in dual mode.

commit 2f1747d726da87b67f6c5323b3e64762d56398cb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-27T11:40:17Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.1' into gridgain-7.6.1

commit 1bb8b647264593034659b7db929c2664dec603e1
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-27T11:21:01Z

    ignite-3116 Fixed NodeStoppingException in GridDhtGetFuture.
    (cherry picked from commit 303d3ca)

commit 47c575c8696d51b675a16aa260ec9d398e0a68e9
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-30T09:42:37Z

    Added benchmark property file.

commit 00e2dda9a850f74178ee893a3acf74ddc30d4a13
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-30T11:45:38Z

    Updated benchmark property file.

commit a28e16e24adb0a03df959830517db84d2505c481
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-05-31T07:01:46Z

    IGNITE-3190: OffHeap cache metrics doesn't work properly for OFFHEAP_TIRED mode.
    Reviewed and merged by Denis Magda (dmagda@gridgain.com)
    (cherry picked from commit 7533dfc)

commit 56c605622dbecf71f3ee87cc41a16d2ee87e92d3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-26T08:15:48Z

    IGNITE-3200: Resolved classloader leak.

commit a815067a0e8e7cfc9f49c57efe2b2eba562e9071
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T07:23:00Z

    IGNITE-3202: Hadoop: Implemented user name mappers.

commit 421cf03b03276d0ab6c32ef6665d547746446dfc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T07:40:24Z

    7.5.24: Added missing JavaDocs.

commit 167e47781f65c056b9d273eea52d268bc9a8fa0b
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-31T10:50:06Z

    IGNITE-2708: fix tests that don't create unique IndexingSPI per node
    (cherry picked from commit f90e424)

commit 21bdf3148f05481d86e77e13b282ac44c6c3a059
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T10:54:32Z

    Added pacajge info for java.org.apache.ignite.hadoop.util package.

commit 3ca9febeb2bf53d17b6dea739938cff40c5fa67d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T11:03:48Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.1' into gridgain-7.6.1

commit f175d3c670025bd619ec347dba2a5c5f68f4cc32
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-06-02T13:14:10Z

    IGNITE-2655: AffinityFunction: primary and backup copies in different locations
    Reviewed and merged by Denis Magda (dmagda@gridgain.com)

commit 1da14369c886ed12dbe0fc9b2c4d5a568c76b6b2
Author: Anton Vinogradov <av@apache.org>
Date:   2016-06-02T14:02:09Z

     IGNITE-3183 ScanQuery and localEntries are ignored keepBinary flag in OFFHEAP_TIERED mode

commit e0cf0fcc954a39dad5b0f1969488a7b372ef8f94
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-06-02T16:16:31Z

    1.7.0-SNAPSHOT

commit 91862c7c05bd37e287df1b2b6fb00e5cd2cfbb71
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-06-03T08:55:14Z

    IGNITE-3229: fixing link in Class GridCacheStoreValueBytesSelfTest. This closes #770.

commit 9df1b905cd86384c1d191785d70a8e5c8e741e48
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-06-02T13:03:12Z

    IGNITE-3232 - Inline transformers for IgniteRDD.savePairs and IgniteRDD.saveValues

commit 7fc1a7f8ecba07869f8706091f076079dd83cb8e
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-06-02T19:52:39Z

    IGNITE-3232 - Fixed the number of iterations to find an affinity key.

commit 2485d86f63bb2149e8881d3f48c13fb7784c29b0
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-06-02T13:56:20Z

    IGNITE-3175 BigDecimal fields are not supported if query is executed from IgniteRDD: fix java.sql.Date mapping

commit 8ea0598c6b5ce9e81ccd114df7246ba17e26817e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-02T06:11:09Z

    IGNITE-3228: Hadoop: workaround/fix for inefficient memory usage.

commit 150e0d3b3ab1b01483b5e44ff28198a51fa35e68
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-02T08:47:38Z

    IGNITE-3228: Minor fix.

commit 0d623830e0d67be5f0874f704155367d2d9de45b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-05T17:57:15Z

    IGFS-3246: IGFS: Infrastructure for client optimizations.

----
;;;","15/Sep/16 13:44;amashenkov;GridCacheTtlManager pending entries moved to offheap, this solution allow to save 30% memory.
I notice performance degradation only with ON-HEAP caches (1,5 times slower), so benchmarks test should be run to get more accurate numbers.
If benchmarks will show unacceptable performance degradation, we can roll back to first commit.;;;","29/Sep/16 15:37;sboikov;Hi Andrey,

- please merge your branch with latest changes in ttl manager (there are conflicts)
- your previous comment: ""If benchmarks will show unacceptable performance degradation, we can roll back to first commit."" Did you run benchmarks? Could you please provide numbers
- I see some formatting changes in GridOffHeapSnapTreeMap, please revert these changes

Thanks;;;","04/Oct/16 08:08;amashenkov;Done.

Benchmark results
||	||ignite-3840
rev: d8b3a161a	||before ignite-3840
rev: 62991368	|| delta
|atomic-put	|143,553.38	|145,409.95	|-1.29%
|atomic-put-expiry	|129,797.36	|142,491.99	|-9.78%
|atomic-put-offheap	|140,287.64	|141,984.90	|-1.21%
|atomic-put-offheap-expiry	|124,709.77	|140,441.95	|-12.62%
|atomic-putAll	|14,376.13	|14,522.97	|-1.02%
|atomic-putAll-expiry	|13,348.26	|14,048.50	|-5.25%
|atomic-putAll-offheap	|13,150.17	|13,151.08	|-0.01%
|atomic-putAll-offheap-expiry	|12,174.34	|12,841.49	|-5.48%
|atomic-putAll1000b	 | 2,332.99	| 2,392.54|	-2.55%
|atomic-putAll1000b-expiry	|2,197.36	|2,259.99	|-2.85%
|atomic-putAll1000b-offheap	|1,883.01	|1,915.40|	-1.72%
|atomic-putAll1000b-offheap-expiry	|1,834.44	 |1,835.71 |-0.07%;;;","11/Oct/16 10:52;sboikov;Hi Andrew,

I reviewed your changes, have some comments:
- I think we need have two modes to store pending entries: new implementation should be used only if offheap is enabled, otherwise use current implementation
- I think PendingEntrySmartPointer incrementRefCount/decrementRefCount should really increment/decrement some counter and deallocate memory only when counter is 0?
- PendingEntrySmartPointer.compareTo: here you deserialize full entries, but actually for comparison it can be enough just read expire time. Please implement compareTo in more optimal way (I think we can completely avoid byte arrays instantiation).
- PendingEntrySmartPointer.hashCode - is it really called? GridH2KeyValueRowOffheap.hashCode throws IllegalStateException.
- why PendingEntry.hashCode is not just key hash code?
- I do not think we need top-level class GridOffHeapSnapTreeSet, please move this code in GridCacheTtlManager

Thanks!;;;","14/Oct/16 16:41;amashenkov;Done

Benchmark results
||	||benchs-new 
(rev: 1bd06b11c0)||	benchs
(rev: c939409)	|| delta
|atomic-put-b1000-expiry	|1288.09	|1282.4	|0.44%
|atomic-put-b1000-noexpiry|	1276.45|	1333.05	|-4.43%
|atomic-put-expiry	|133570.56	|126894.08	|5.00%
|atomic-put-noexpiry	|138602.71	|128234.73	|7.48%
|atomic-put-offheap-b1000-expiry	|1024.61	|1065.09|	-3.95%
|atomic-put-offheap-b1000-noexpiry	|1064.7	|1107.17|	-3.99%
|atomic-put-offheap-expiry	|108781.96	|123746.34 |-13.76%
|atomic-put-offheap-noexpiry	|127853.92	|125218.78 |2.06%;;;","07/Jun/17 06:33;sboikov;In 2.0 internal architecture changed, expired entries queue is stored in off-heap.;;;","17/Oct/17 10:36;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1037
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryReader.get method behaves incorrectly when in MODE_SINGLE mode,IGNITE-3834,13002501,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vkulichenko,vkulichenko,vkulichenko,02/Sep/16 22:33,05/Sep/16 08:36,14/Jul/23 06:20,05/Sep/16 08:35,1.7,,,1.8,general,,,,,0,,,,"The piece of code below is incorrect. It should not return the {{data}} right away, but compare the provided position with {{singlePos}} first and return {{null}} if they do not match.

{code}
case MODE_SINGLE:
     return (T)data;
{code}",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/16 22:36;vkulichenko;IGNITE_3834.patch;https://issues.apache.org/jira/secure/attachment/12826938/IGNITE_3834.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 02 22:36:20 UTC 2016,,,,,,,,,,"0|i337lj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Sep/16 22:36;vkulichenko;Attached a patch that fixes the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: exception on clicking on 'Show query' after scan,IGNITE-3821,13002239,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,02/Sep/16 04:47,02/Sep/16 07:19,14/Jul/23 06:20,02/Sep/16 06:49,,,,,,,,,,0,,,,"start demo
scan
next
show query
{code}
111:41:27.984 Error: e.queryArgs.query is null
t.default</t.showResultQuery@https://localhost/app.cd7e3ceffba3eec415ba.js:9:1211
anonymous/fn@https://localhost/common.a226e813cf92d65f293b.js line 27 > Function:2:341
t@https://localhost/common.a226e813cf92d65f293b.js:26:2231
[275]/</</ds[t]</<.compile/</</r@https://localhost/common.a226e813cf92d65f293b.js:28:18011
En/this.$get</p.prototype.$eval@https://localhost/common.a226e813cf92d65f293b.js:26:12405
En/this.$get</p.prototype.$apply@https://localhost/common.a226e813cf92d65f293b.js:26:12637
[275]/</</ds[t]</<.compile/</<@https://localhost/common.a226e813cf92d65f293b.js:28:18061
[755]/</me.event.dispatch@https://localhost/vendor.bcd603665fb745ac0256.js:101:2383
[755]/</me.event.add/m.handle@https://localhost/vendor.bcd603665fb745ac0256.js:101:437
1common.a226e813cf92d65f293b.js:25:29330
o/<()common.a226e813cf92d65f293b.js:25
bt/this.$get</<()common.a226e813cf92d65f293b.js:25
En/this.$get</p.prototype.$apply()common.a226e813cf92d65f293b.js:26
[275]/</</ds[t]</<.compile/</<()common.a226e813cf92d65f293b.js:28
[755]/</me.event.dispatch()vendor.bcd603665fb745ac0256.js:101
[755]/</me.event.add/m.handle()vendor.bcd603665fb745ac0256.js:101
{code}",,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 02 07:19:27 UTC 2016,,,,,,,,,,"0|i335zj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Sep/16 06:49;anovikov;Fixed typo. Pavel please test.;;;","02/Sep/16 07:19;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema absence flag ignored during building binary object based on another binary object,IGNITE-3817,13001963,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,al.psc,al.psc,01/Sep/16 10:23,05/Sep/16 11:11,14/Jul/23 06:20,05/Sep/16 11:11,1.7,,,1.8,binary,,,,01/Sep/16 00:00,0,,,,,,al.psc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 02 12:27:09 UTC 2016,,,,,,,,,,"0|i334an:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Sep/16 12:27;al.psc;TC is fine, good to merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheJdbcPojoStore check for column names should be case insensitive,IGNITE-3816,13001908,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,01/Sep/16 06:13,14/Sep/16 09:18,14/Jul/23 06:20,14/Sep/16 09:18,1.6,,,1.8,cache,,,,,0,,,,"Current logic just put column names as is and if user defined them in low register an NPE will be thrown because later search for column will be with upper case. Also if column not found a proper Excepton should be thrown, not NPE.",,anovikov,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 14 09:18:50 UTC 2016,,,,,,,,,,"0|i333yf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Sep/16 03:40;kuaw26;Please review in branch ignite-3816.;;;","14/Sep/16 09:18;anovikov;Alexey, please rename checkCacheContentWithSql to checkCacheLoadWithSql in CacheJdbcPojoStoreAbstractSelfTest and merge.;;;","14/Sep/16 09:18;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheJdbcPojoStore invalid query for merge operation with complex key on SQL Server,IGNITE-3811,13001551,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,anovikov,anovikov,31/Aug/16 03:50,07/Sep/16 07:12,14/Jul/23 06:20,31/Aug/16 09:05,1.6,,,1.8,cache,,,,,0,,,,,,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 07 07:12:28 UTC 2016,,,,,,,,,,"0|i331rb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/16 09:05;anovikov;Fixed query for merge operation.

For test: need put value with same key twice all should work fine.
Note: key must be an object with two or more fields.;;;","07/Sep/16 07:12;pkonstantinov;Successfully tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileSwapSpaceSpi can hang when large value is written,IGNITE-3810,13001518,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,vkulichenko,vkulichenko,31/Aug/16 00:07,05/Dec/18 09:01,14/Jul/23 06:20,19/Sep/16 15:20,1.7,,,1.8,general,,,,,0,,,,"Test reproducing the issue is attached.

Weirdly, the value of size {{1024 * 1024 - 48}} is successfully written, but when it is only one byte bigger, the swap space hangs.",,DmitriyGovorukhin,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/16 00:08;vkulichenko;SwapSpaceTest.java;https://issues.apache.org/jira/secure/attachment/12826284/SwapSpaceTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 19 15:20:19 UTC 2016,,,,,,,,,,"0|i331jz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/16 14:41;DmitriyGovorukhin;Hi [~vkulichenko], i found problem. It happened because you try to add byte buffer with size more than write thread can process to swap file. 
Option in FileSwapSpaceSpi  name DFLT_QUE_SIZE, by deffault 1024 * 1024, you can set more if you need.;;;","13/Sep/16 15:24;vkulichenko;Dmitriy, can we automatically increase the queue size in this case? This definitely should not hang. At the very least we should throw an exception with a proper message, but this is not good either because the fix will require full cluster restart.;;;","14/Sep/16 08:21;sboikov;As I understand the purpose of 'maxWriteQueueSize' is throttling (avoid file writer overload when there are to many writes), it defenetely should not case hangs. We can fix it this way: if value size is large than 'maxWriteQueueSize' print warning that this paremeter should be increased, then such large values should just wait when write queue is empty.;;;","14/Sep/16 08:36;DmitriyGovorukhin;Got it, I will prepare fix soon.;;;","14/Sep/16 12:21;DmitriyGovorukhin;[~sboikov] fix is ready in [ignite-3810|https://github.com/gridgain/apache-ignite/tree/ignite-3810];;;","19/Sep/16 15:20;sboikov;Reviewed, looks good, merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException in GridUnsafeLru,IGNITE-3809,13001511,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,vkulichenko,vkulichenko,30/Aug/16 23:42,07/Sep/16 05:38,14/Jul/23 06:20,07/Sep/16 05:33,1.7,,,1.8,cache,,,,,0,,,,"{{GridUnsafeLru.offer(..)}} method uses atomic integer as a counter. In case of integer overflow this method will throw {{ArrayIndexOutOfBoundsException}}.

We should use {{abs}} to avoid this. For example, like this:
{code}
return lrus[U.safeAbs(addIdx.getAndIncrement()) % cnt].offer(part, addr, hash);
{code}",,githubbot,sboikov,shroman,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 07 05:38:35 UTC 2016,,,,,,,,,,"0|i331if:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/16 09:37;shroman;http://apache-ignite-users.70518.x6.nabble.com/lt-default-gt-Unexpected-exception-during-cache-update-java-lang-ArrayIndexOutOfBoundsException-503-td7356.html;;;","01/Sep/16 09:42;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/1017

    IGNITE-3809: Fix for ArrayIndexOutOfBoundsException in GridUnsafeLru.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-3809

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1017.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1017
    
----
commit ad91f65d804134f2fd25fc42ebc98610948785d3
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-09-01T09:41:20Z

    IGNITE-3809: ArrayIndexOutOfBoundsException in GridUnsafeLru.

----
;;;","01/Sep/16 09:43;shroman;We have encountered the same problem.
Fix as proposed by Valentin.;;;","05/Sep/16 08:57;shroman;[~sboikov] Can you please review this?;;;","05/Sep/16 13:17;sboikov;Hi Roman,

Reviewed fix, have some comments:
- overflow is still possible in 'prePoll', (idx + i) at line 172:
{noformat}
'long qAddr = lrus[(idx + i) % cnt].prePoll(); 
{noformat}
Please change test to catch this issue as well.
- in my opinion instead of using 'safeAbs', it is better to replace usage of 'AtomicInteger.getAndIncrement() % cnt' with something like this:
{noformat}
    int getAndIncrement(AtomicInteger idx, int max) {
        for (;;) {
            int cur = idx.get();
            int next = cur == max ? 0 : cur + 1;
            if (idx.compareAndSet(cur, next))
                return cur;
        }
    }
{noformat}

Thanks!;;;","06/Sep/16 09:22;shroman;Hi Semen,
[~sboikov]

Thanks a lot for reviewing and pointing to the issue I overlooked!
I reworked the code. Hope I got it right and I can merge it.;;;","06/Sep/16 13:13;sboikov;Hi,

There was a mistake in the my code snippet for 'getAndIncrement', it should return 'next' instead of 'cur'. Also I think code can be simplified a little for offer/prePoll (here you do not need extra '% cnt'  for 'offer'):

{noformat}
    final int MAX_CNT;

    GridUnsafeLru(short cnt, GridUnsafeMemory mem) {
    ...
    MAX_CNT = cnt - 1;
    }

    long offer(int part, long addr, int hash) throws GridOffHeapOutOfMemoryException {
        return lrus[getAndIncrement(addIdx, MAX_CNT)].offer(part, addr, hash);
    }

    long prePoll() {
        int idx = getAndIncrement(rmvIdx, MAX_CNT);

        // Must try to poll from each LRU.
        for (int i = 0; i < lrus.length; i++) {
            long qAddr = lrus[(idx + i) % cnt].prePoll();

            if (qAddr != 0)
                return qAddr;
        }

        return 0;
    }
{noformat}
;;;","07/Sep/16 01:15;shroman;[~sboikov] Good simplification indeed. I reworked the code and change `getAndIncrement` to `incrementAndGet` to return `next`.
Also I removed unit tests I added before -- I think they are not needed any more, since `incrementAndGet()` takes care of max value.;;;","07/Sep/16 05:32;sboikov;Thanks Roman, looks good to merge now.;;;","07/Sep/16 05:33;shroman;Great, thanks Semen!;;;","07/Sep/16 05:36;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1017
;;;","07/Sep/16 05:38;shroman;Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing EntryProcessor invocations with partitions in flight,IGNITE-3808,13001471,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,DmitriyGovorukhin,pperalta,pperalta,30/Aug/16 20:51,24/Jul/19 17:45,14/Jul/23 06:20,08/Nov/16 12:01,1.7,,,1.8,cache,,,,,0,,,,"With {{CacheAtomicityMode.ATOMIC}}, on occasion we see entry processor invocations that go missing when partitions are in flight.

Reproducer will follow in a PR.",,agura,DmitriyGovorukhin,githubbot,obelix1974,pperalta,vkulichenko,,,,,,,"dspavlov commented on issue #1010: IGNITE-3808 Reproducer for missing EntryProcessr invocation
URL: https://github.com/apache/ignite/pull/1010#issuecomment-514731682
 
 
   
   IGNITE-3808 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:45;githubbot;600","dspavlov commented on pull request #1010: IGNITE-3808 Reproducer for missing EntryProcessr invocation
URL: https://github.com/apache/ignite/pull/1010
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 08 12:02:42 UTC 2016,,,,,,,,,,"0|i3319r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Aug/16 20:55;githubbot;GitHub user pperalta opened a pull request:

    https://github.com/apache/ignite/pull/1010

    IGNITE-3808 Reproducer for missing EntryProcessr invocation

    This test reproduces [IGNITE-3808.](https://issues.apache.org/jira/browse/IGNITE-3808) It is intermittent; every 3 or 4 invocations the test will fail with a message like this:
    
    ```
    junit.framework.AssertionFailedError: Unexpected clear bit: 180424
    ```

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/pperalta/ignite ignite-3808

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1010.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1010
    
----
commit b95454161d1359a222ffd64045b3b03d9317b09b
Author: Patrick Peralta <patrick.peralta@workday.com>
Date:   2016-08-30T19:17:37Z

    IGNITE-3808 Reproducer for missing EntryProcessr invocation
    
    This test reproduces IGNITE-3808. It is intermittent; every 3 or
    4 invocations the test will fail with a message like this:
    
    junit.framework.AssertionFailedError: Unexpected clear bit: 180424

----
;;;","28/Sep/16 14:17;agura;Can' reproduce issue with this reproducer. I tried on versions 1.5, 1.6 and 1.7.

The problem is very weird for me because even if {{readFromBackup == true}} and synchronization is {{PRIMARY_SYNC}} each invoke of entry processor will be performed on primary node. The only situation when described problem is possible if both primary and backup nodes are gone and partition is lost. In this case {{cache.get()}} also should return {{null}}. Also you can listen {{EVT_CACHE_REBALANCE_PART_DATA_LOST}} event on all nodes (should be recordable) that should be triggered in case of all owner nodes are gone.;;;","29/Sep/16 04:18;vkulichenko;Andrey, I just ran the test on master and it failed for me. Are you saying that the test is invalid?;;;","29/Sep/16 11:43;agura;No. Test is valid. But I have been tried to reproduce this problem during four hours and don't have success.;;;","08/Nov/16 12:02;DmitriyGovorukhin;This is not issue, because used PRIMARY_SYNC mode.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteSpiContext registers message listeners incorrectly,IGNITE-3807,13001457,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,samaitra,vkulichenko,vkulichenko,30/Aug/16 20:18,16/May/19 21:29,14/Jul/23 06:20,26/Sep/16 22:30,1.7,,,1.8,general,,,,,0,,,,"{{IgniteSpiContext}} implementation provided by {{GridManagerAdapter}} uses {{ctx.io().addMessageListener(..)}} method to register message listeners. This is incorrect, because this creates a listener for internal Ignite messages, not for user messages. Thus, when user tries to send a message on this topic, the listener is not invoked. To fix this, {{ctx.io().addUserMessageListener(..)}} method should be used instead.",,githubbot,samaitra,vkulichenko,,,,,,,,,,"dspavlov commented on issue #1036: IGNITE-3807 IgniteSpiContext registers message listeners incorrectly
URL: https://github.com/apache/ignite/pull/1036#issuecomment-493238712
 
 
   https://issues.apache.org/jira/browse/IGNITE-3807 is closed, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:29;githubbot;600","dspavlov commented on pull request #1036: IGNITE-3807 IgniteSpiContext registers message listeners incorrectly
URL: https://github.com/apache/ignite/pull/1036
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:29;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 27 14:43:51 UTC 2016,,,,,,,,,,"0|i3316f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Sep/16 20:47;githubbot;GitHub user samaitra opened a pull request:

    https://github.com/apache/ignite/pull/1036

    IGNITE-3807 IgniteSpiContext registers message listeners incorrectly

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/samaitra/ignite IGNITE-3807

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1036.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1036
    
----
commit a3e87e8765d52223f1296cb83e2ec39d32b197db
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-09-05T20:41:37Z

    IGNITE-3807 IgniteSpiContext registers message listeners incorrectly

----
;;;","08/Sep/16 00:25;vkulichenko;Hi Saikat,

Here are my comments:
* I think it's better to call methods {{addLocalMessageListener}} and {{removeLocalMessageListener}}, this will be consistent with sibling event listener methods.
* Old methods should be deprecated with proper comment in the JavaDoc.
* {{add}} method misses {{@Nullable}} annotation for topic.
* Test is not full. It should at least verify the scenario when the messages are sent and listeners are invoked. Try to provide as much coverage as possible.
* Test should be added to {{IgniteSpiTestSuite}}. Otherwise it will not run on CI.

Thanks!;;;","13/Sep/16 18:49;samaitra;[~vkulichenko]

Hi Valentin,

Thank you for reviewing the PR. I will update the PR as per review feedback.

Regards
Saikat;;;","22/Sep/16 17:31;vkulichenko;Hi [~samaitra],

When will you have a chance to finish these changes?;;;","23/Sep/16 03:06;samaitra;[~vkulichenko]

Hi Valentin,

I will complete the changes tomorrow and share an update.

regards
Saikat;;;","23/Sep/16 19:53;samaitra;[~vkulichenko]

Hi Valentin,

I have updated the changes required. Please review the PR and share your feedback.

Regards
Saikat;;;","26/Sep/16 22:30;vkulichenko;Saikat,

I made couple more minor changes and merged the fix to master. Thanks for the contribution!;;;","27/Sep/16 14:43;samaitra;[~vkulichenko]

Thank you Valentin.

Regards
Saikat;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
More descriptive exception for Cassandra column names duplicates ,IGNITE-3799,13001181,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,irudyak,irudyak,irudyak,30/Aug/16 03:49,19/Sep/16 14:31,14/Jul/23 06:20,19/Sep/16 14:30,,,,,,,,,,0,,,,"If POJO persistence strategy is used and cache key is mapped to the same column as one of the POJO fields, it's better to re-throw more descriptive exception instead of *com.datastax.driver.core.exceptions.InvalidQueryException: The column names contains duplicates*",,githubbot,irudyak,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 19 14:31:00 UTC 2016,,,,,,,,,,"0|i32zgv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Sep/16 18:42;irudyak;Instead of throwing exceptions it's better to have POJO fields aliases concept - two or more POJO fields could be mapped to the same Cassandra column if they have the same type.

It's rather important case when working with POJO objects in Ignite through JDBC. Key object and value object in Ignite cache could share the same fields in this case. For example we can use ""long"" as a key and custom ""Person"" class as a value, which at the same time already has ""id"" field storing the same ""long"" value (person id).;;;","16/Sep/16 18:55;githubbot;GitHub user irudyak opened a pull request:

    https://github.com/apache/ignite/pull/1080

    IGNITE-3799 More descriptive exception for Cassandra column names duplicates 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/irudyak/ignite ignite-3799

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1080.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1080
    
----
commit 075d6c48161b0c2027bbf05864eeaeda76ea5f84
Author: Igor <irudyak@gmail.com>
Date:   2016-09-16T04:45:53Z

    As far as DataSource now implements Serializable we can remove ""transient"" modificator for ""dataSrc"" variable

commit ba05cb58c5fe24be750bee89dc3cf729f6ef12fd
Author: Igor <irudyak@gmail.com>
Date:   2016-09-16T05:02:14Z

    Added support for:
    
     1) ""alias"" fields - POJO fields sharing the same Cassandra table column, but just having different names in POJO object
     2) calculated fields - read only POJO fields which values calculated based on other field values. Such fields should be only written to Cassandra, but it doesn't make sense to read them back on load operation

commit 2becf4590721f09a2f1ef7683fe3f115a9d2a377
Author: Igor <irudyak@gmail.com>
Date:   2016-09-16T18:43:48Z

    bugfix

commit 47558f14e9d9feba3b1d0870681e098a596e87e9
Author: Igor <irudyak@gmail.com>
Date:   2016-09-16T18:44:28Z

    unit tests modified according to new POJO fields aliases concept

commit 141f1ec1daa67de82eaf138666c2d355c509611c
Author: Igor <irudyak@gmail.com>
Date:   2016-09-16T18:52:02Z

    Merge branch 'master' into ignite-3799

----
;;;","19/Sep/16 14:30;kuaw26;Looks good for me.
Fixed minor code style issues and merged to master.;;;","19/Sep/16 14:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1080
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Wrap keyspace, table and column name with escape characters in generated CQL queries",IGNITE-3791,13000809,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,irudyak,irudyak,irudyak,28/Aug/16 21:33,15/Sep/16 02:45,14/Jul/23 06:20,15/Sep/16 02:44,1.7,,,1.8,cassandra,,,,,0,,,,"Sometimes user can specify Cassandra reserved word as a keyspace, table or column name. In such cases current implementation will fail to persist Ignite caches into Cassandra.

To prevent the problem, it's necessary to wrap keyspace, table and column names with escape characters (double quotes) in generated CQL queries.",,irudyak,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 15 02:44:39 UTC 2016,,,,,,,,,,"0|i32x67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/16 02:44;kuaw26;Looks good. Reviewed and merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridLogThrottle.warn ignores the exception,IGNITE-3770,13000078,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,shroman,vkulichenko,vkulichenko,25/Aug/16 16:42,04/Oct/16 22:17,14/Jul/23 06:20,04/Oct/16 22:17,1.7,,,1.8,general,,,,,0,,,,"There are two ways to fix this:
* Make sure that {{warn()}} method prints out the stack trace of the provided exception.
* Remove exception parameter from the {{warn()}} method and replace all such usages with {{error()}}.

I personally think that the second approach is clearer.",,githubbot,shroman,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Oct 04 22:17:33 UTC 2016,,,,,,,,,,"0|i32sof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/16 04:20;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/1095

    IGNITE-3770: GridLogThrottle.warn ignores the exception.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-3770

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1095.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1095
    
----
commit b8b420f4273869eabec48f343649d20d587fc526
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-09-21T04:19:15Z

    IGNITE-3770: GridLogThrottle.warn ignores the exception.

----
;;;","21/Sep/16 04:21;shroman;[~vkulichenko]
Considering {{U.warn}} and {{U.quietAndWarn}} does not handle exceptions (but {{U.error}} does), I suppose the 2nd approach is what we need.
Do you think we can change method signatures here because these methods are in the internal package, or should we create new while leaving old but making them deprecated?;;;","21/Sep/16 05:14;vkulichenko;Roman,

Let's just change signatures and refactor the code. This is not part of public API, so no reason to preserve compatibility.;;;","21/Sep/16 06:01;shroman;Ok. I think the pull request is ready for a review then.;;;","04/Oct/16 22:17;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1095
;;;","04/Oct/16 22:17;vkulichenko;Roman,

I merged your change to master. Thanks for the contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data rebalancing of large cache can hang out.,IGNITE-3748,12999617,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,v.pyatkov,v.pyatkov,24/Aug/16 10:24,22/Nov/16 09:03,14/Jul/23 06:20,22/Nov/16 09:03,,,,1.8,,,,,,0,,,,"After the node (_CO3SCH050520537_) disconnect from cluster and starts again, rebalacing partitions of cache works, until node will faill by timeout.

In the log of node which joining:
{noformat}
[2016.08.17 03:28:52,754 PDT][INFO ][sys-#122%null%][GridDhtPartitionDemander] <cache_raw_gbievent> Completed (final) rebalancing [cache=cache_raw_gbievent, fromNode=14666739-08e3-4188-ace7-9e47940bed70, topology=AffinityTopologyVersion [topVer=205, minorTopVer=0], time=336336 ms]
{noformat}

In other server nodes:
{noformat}
[2016.08.17 03:29:04,413 PDT][WARN ][exchange-worker-#176%null%][GridDhtPartitionsExchangeFuture] Failed to wait for partition release future [topVer=AffinityTopologyVersion [topVer=205, minorTopVer=1], node=14666739-08e3-4188-ace7-9e47940bed70].
{noformat}

See [the thread for details | http://apache-ignite-users.70518.x6.nabble.com/Failed-to-wait-for-initial-partition-map-exchange-tt6252.html#a7171]
",,avinogradov,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/16 10:27;v.pyatkov;Apache.config.xml;https://issues.apache.org/jira/secure/attachment/12825244/Apache.config.xml","24/Aug/16 10:27;v.pyatkov;default-config.xml;https://issues.apache.org/jira/secure/attachment/12825245/default-config.xml","24/Aug/16 10:27;v.pyatkov;logs.zip;https://issues.apache.org/jira/secure/attachment/12825246/logs.zip","24/Aug/16 10:27;v.pyatkov;thread_dump.zip;https://issues.apache.org/jira/secure/attachment/12825247/thread_dump.zip",,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 09:03:32 UTC 2016,,,,,,,,,,"0|i32ptz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Nov/16 12:18;avinogradov;Possible, problem at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader#evictPartitionAsync
{noformat}
if (part != null)
   part.tryEvict();
{noformat}
should be replaced with 
{noformat}
if (part != null)
   try {
      part.tryEvict();
   }
   catch (Throwable ex) {
      LT.error(log, ex, ""Partition eviction failed, this can cause grid hang."");
   }
{noformat}

This code will allow another partitions to be evicted in proper way and, as well, will log exception.;;;","22/Nov/16 09:03;avinogradov;Logging added.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lost documentation for Cassandra module,IGNITE-3728,12999379,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pgarg,irudyak,irudyak,23/Aug/16 21:57,29/Aug/16 19:29,14/Jul/23 06:20,24/Aug/16 17:39,1.7,,,,documentation,,,,,0,,,,"After switching from Ignite version 1.6 to 1.7 it was lost some portion of the official documentation on readme.io. For example all the documentation for Cassandra module is only available for version 1.6:

https://apacheignite.readme.io/v1.6/docs/overview

but not for 1.7 which is now current",,dmagda,irudyak,pgarg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Aug 24 17:39:22 UTC 2016,,,,,,,,,,"0|i32odb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Aug/16 22:51;dmagda;[~pgarg], looks like you lost a portion of Cassandra documentation at the time 1.7 were being prepared to become the latest one. Please fix this.;;;","24/Aug/16 17:39;pgarg;I think whoever created the documentation for the Cassandra module in  v1.6 never copied it to v1.7. I've copied it now.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cached in a file text must be written with UTF-8 charset, not default",IGNITE-3722,12999105,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dkarachentsev,dkarachentsev,23/Aug/16 04:15,04/Nov/16 06:47,14/Jul/23 06:20,06/Oct/16 05:46,1.7,,,1.8,cache,,,,,0,,,,"Writing/reading text files in default charset is error prone and UTF-8 must be set explicitly.
F.e. 
org.apache.ignite.internal.MarshallerContextImpl#className() and 
org.apache.ignite.internal.MarshallerContextImpl.ContinuousQueryListener#onUpdated()
InputStreamReader() and OutputStreamWriter() must have charset set.",,dkarachentsev,githubbot,samaitra,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 06 17:17:30 UTC 2016,,,,,,,,,,"0|i32mof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Oct/16 18:59;githubbot;GitHub user samaitra opened a pull request:

    https://github.com/apache/ignite/pull/1144

    IGNITE-3722 Cached in a file text must be written with UTF-8 charset,…

    … not default

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/samaitra/ignite IGNITE-3722

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1144.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1144
    
----
commit f6326de573d41f024a8f8acb62dbcc6e288b0d89
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-10-04T18:55:50Z

    IGNITE-3722 Cached in a file text must be written with UTF-8 charset, not default

----
;;;","06/Oct/16 05:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1144
;;;","06/Oct/16 05:46;sboikov;Hi Saikat,

I reviewed and merged your fix. One minor comment: in tests it is always better to use try-with-resource to start/stop node, so that it is stopped even if some test assert fails:

{noformat}
try (Ignite g1 = startGrid(1)) {
// test asserts here
}
{noformat}

Thanks for contribution!;;;","06/Oct/16 17:17;samaitra;[~sboikov]

Thank you Semen for the tip. I will do it.

Regards
Saikat;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Possible NPE in PlatformConfigurationUtils due to null Enum values,IGNITE-3713,12998511,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,19/Aug/16 15:31,22/Aug/16 09:24,14/Jul/23 06:20,22/Aug/16 09:23,1.6,,,1.8,platforms,,,,,0,.net,,,"There are no null checks, we call .ordinal() directly.

Even though for most enums in IgniteConfiguration null is not a valid value, Platform should not fail on this.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-08-19 15:31:02.0,,,,,,,,,,"0|i32j0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: PlatformRawMemory is not covered with tests,IGNITE-3711,12998452,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,19/Aug/16 10:20,19/Aug/16 14:37,14/Jul/23 06:20,19/Aug/16 14:35,1.8,,,1.8,platforms,,,,,0,.net,,,"Coverage suite shows that PlatformRawMemory is not called. This happens since the merge of IGNITE-2943, which changes error propagation mechanism.

Need to check whether old mechanism, which uses PlatformRawMemory, is still needed. Either remove it, or cover with test.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 19 14:35:44 UTC 2016,,,,,,,,,,"0|i32inb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Aug/16 13:44;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/971

    IGNITE-3711 .NET: PlatformRawMemory is not covered with tests

    * Remove unused code
    * Add asserts

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3711

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/971.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #971
    
----
commit ed2434f959bdc3e2a217eb7304c9b247d0230786
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-08-19T13:41:02Z

    IGNITE-3711 .NET: PlatformRawMemory is not covered with tests:
    * Remove unused code
    * Add asserts

----
;;;","19/Aug/16 14:35;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/971
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MySQLDialect.loadCacheSelectRangeQuery return statement that actually not supported by MySQL,IGNITE-3708,12998168,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,kuaw26,kuaw26,18/Aug/16 11:16,23/Aug/16 02:29,14/Jul/23 06:20,22/Aug/16 08:10,1.6,,,1.8,cache,,,,,0,,,,"As range query we return: ""SELECT %s FROM (SELECT %s, ROWNUM() AS rn FROM %s ORDER BY %s) WHERE mod(rn, ?) = 0""

But MySQL failed with ""com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Every derived table must have its own alias"" and plus ROWNUM() seems not supported by MySQL.

Also in JdbcPojoStore we must not swallow dialect exceptions we should at least print warnings.",,anovikov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Aug/16 11:01;pkonstantinov;mysql-project-test.zip;https://issues.apache.org/jira/secure/attachment/12824551/mysql-project-test.zip",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Aug 22 09:00:08 UTC 2016,,,,,,,,,,"0|i32gw7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Aug/16 03:09;anovikov;Fixed split for range under mysql dialect. Add warning on error.
Alexey^ please review.;;;","19/Aug/16 03:24;kuaw26;Pavel please test, that data will load correctly from MySQL and also do some sort of load test, load for example 50_000_000 rows.

And check that most popular RDBMS (DB2, Oracle, Postgress, ...) also support parallel load.;;;","19/Aug/16 11:00;pkonstantinov;Created a test project and database with table with 21 million of rows.
Test grid with only one node with 9 GB of heap.
Cache has OFFHEAP mode.
I was able to load maximum 10 millions of row.
It seems that MySQL driver fetching all result set in heap.

Attaching the test project.;;;","22/Aug/16 07:51;pkonstantinov;Successfully tested in branch - I was able to load 21M of rows during 6 min.;;;","22/Aug/16 08:10;kuaw26;Fixed MySQL loading large result sets. Merged to master.;;;","22/Aug/16 09:00;pkonstantinov;Successfully re-tested in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Warnings when build ignite and ignite-example cpp projects with Visual Studio 2015 (v140) toolset,IGNITE-3705,12997894,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,krybakova,krybakova,krybakova,17/Aug/16 12:25,22/Nov/16 11:40,14/Jul/23 06:20,19/Oct/16 12:48,1.7,,,1.8,platforms,,,,,0,cpp,,,"The following warnings apper when build ignite and ignite-example cpp projects with Visual Studio 2015 (v140) toolset:
{noformat}
platforms\cpp\common\include\ignite/ignite_error.h(90): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface class 'ignite::IgniteError'
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(43): note: see declaration of 'std::exception'
platforms\cpp\common\include\ignite/ignite_error.h(89): note: see declaration of 'ignite::IgniteError'

cl : Command line warning D9025: overriding '/sdl-' with '/GS-'
{noformat}

Steps to reproduce:
- Install VS 2015 and SDK 8.1
- Open %IGNITE_HOME%\platforms\cpp\project\vs\ignite.sln and %IGNITE_HOME%\platforms\cpp\examples\project\vs\ignite-examples.sln solutions in VS
- Set ""Visual Studio 2015 (v140)"" as Platform Toolset and ""8.1"" as Target Platform Version  in projects properties
- Build solutions

Expected: 
- no errors and warnings","Windows 2010, Visual Studio 2015",githubbot,isapego,krybakova,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 11:40:33 UTC 2016,,,,,,,,,,"0|i32f7b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Sep/16 18:58;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1038

    IGNITE-3705: Fixes for MSVC 14.0

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3705

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1038.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1038
    
----
commit 12fd4976f482ebc43831754645e34042c9073b2d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-08-25T09:29:04Z

    Fixed GridQueryParsingTest.

commit 12f532986677c30a716f73aeaa7d3587dd701f55
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-01T14:05:15Z

    Merge remote-tracking branch 'remotes/community/ignite-1.6.6' into ignite-1.6.7

commit ae7765329fd6f7d50d13183d13626f39c5682334
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-09-02T15:01:12Z

    IGNITE-2208 - Queries with object arguments doesn't work wth BinaryMarshaller.

commit 7a84ab6a9163ca31fbcfcc6d7ff27e06bf9babef
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:05:16Z

    IGNITE-3827: Removed double marshalling of keys in DataStreamerImpl.addData(Map) method.

commit 7bb961fd0a2e78334d33b6bc279c4edc323c246a
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:05:54Z

    Merge remote-tracking branch 'upstream/ignite-1.6.7' into ignite-1.6.7

commit e3c4868d6737e5a0f0b90f99666242865add750c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:23:09Z

    IGNITE-3829: Optimized affinity key field name handling.

commit e9c797fd964727882ad6f40f2a452b17ae7c857e
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:47:40Z

    IGNITE-2946: CPP: Optimized GetNext() method for cursors. This closes #992.

commit c992213274ec5872ef7ce359efa51e26003424ad
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:49:42Z

    IGNITE-3760: ODBC: Added tests for supported SQL92 string functions. This closes #1006.

commit d06eaa2344a753e08d1e3cb00e6b4ab83c6a9a01
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:52:04Z

    IGNITE-3801: ODBC: Added tests for OUTER JOIN. This closes #1027.

commit f8ae67456703e63e3afc9bb5c21d81d576d59448
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-04T14:09:08Z

    IGNITE-3651 IGFS: Implemented ""usedSpaceSize()"" operation for local secondary file system. This closes #1009.

commit fc2fe7bf1905675258d40932a4ff649156c17488
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-04T14:12:35Z

    IGNITE-3646: IGFS: Added test for symlinked mkdirs on local secondary file system. This closes #1013.

commit 3aa13f716934a6ccfe49f8bf99ec3b654e263900
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-05T07:19:48Z

    IGNITE-3829: Additional fix.

commit a760918757bee71ab28495496f94e9067ef17888
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-05T07:36:38Z

    IGNITE-3750: ODBC: Added tests for date/time types. This closes #1002.

commit d65228e42ec9c84182b8c9c9c8d06a0056d5eed2
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T08:20:26Z

    IGNITE-2974: ODBC: Added ""socketSendBufferSize"" and ""socketReceiveBufferSize"" configuration parameters. This closes #994.

commit 40d4b6ac6a71ed541d20018cf7deb2fb9b9bbb9b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-05T08:35:26Z

    IGNITE-3834: Fixed a problem with BinaryMarshaller handles resolution.

commit 42963e6c99e9b282972e6ad67a813a8038cf580f
Author: Alexander Paschenko <apaschenko@gridgain.com>
Date:   2016-09-05T11:10:39Z

    IGNITE-3817: Fixed binary object re-build with missing schema.

commit df8163f1ad3a390bb8d51b0eb2f378b5b3663025
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T11:15:59Z

    IGNITE-3743: ODBC: Added procedure call escape sequence support. This closes #1008.

commit e3533010b584ba986196f9c7dbc36359aebd829e
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-05T12:02:07Z

    IGNITE-3819: ODBC: Improved error logging. This closes #1024.

commit 008cf64429f40635e396a71f2c0aaf184077ff2b
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T12:17:53Z

    IGNITE-3741: ODBC: Added character escape support to expression parser. This closes #1004.

commit bf9371a3ddb020209a6b031e11282706e19c58cb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-05T14:05:05Z

    IGNITE-3611: IGFS: Slight refactoring to listPaths() and listFiles() methods.

commit 2c397d2fb8851b25aa5f0a5589ad1deffbe7eee9
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T14:38:47Z

    IGNITE-2629: ODBC: Requests are now processed asynchronously in separate thread pool. This closes #996.

commit 355082958b476009179254df9be20e225179cb7c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-09-05T15:06:27Z

    IGNITE-2833: GridCacheTtlManager pending queue retention size optimization.

commit 8970b3e3a36b18274b451fddf365627ba23459d6
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-05T15:15:11Z

    IGNITE-3628: ODBC: Added ability to configure page size in DSN, changed default value from 32 to 1024. This closes #1014.

commit e23a94fbab4040f60b7a8ef3638aaebe4b9ba5f6
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-06T08:34:14Z

    Fixed GridQueryParsingTest.

commit 385355a157993f4d78ced551bbaa168181748a7d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-06T09:09:38Z

    GridNearOptimisticTxPrepareFuture: fixed javadoc warning.

commit bdc1b10cabcefb6684adcdb22bb6106e44148516
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-06T11:45:01Z

    IGNITE-2208 Queries with object arguments doesn't work wth BinaryMarshaller: use 'toBinary' for arguments conversion.

commit 4f8fcb8990653d618f594820f8a8edaf805a2799
Author: isapego <isapego@gridgain.com>
Date:   2016-09-06T17:48:25Z

    IGNITE-3705: Fixes for MSVC 14.0

----
;;;","06/Sep/16 18:58;isapego;Done.;;;","12/Sep/16 08:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1038
;;;","19/Sep/16 10:45;krybakova;cl : Command line warning D9025: overriding '/sdl-' with '/GS-'  still exists;;;","18/Oct/16 15:23;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1169

    IGNITE-3705: Fixed compiliation warnings.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3705

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1169.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1169
    
----
commit a4c63ae113931615e940ada2411ebce32dba5db8
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-09-30T07:45:13Z

    IGNITE-3998: IGFS: Enabled IgfsAbstractSelfTest.testCreateConsistencyMultithreaded. This closes #1129.

commit a12298c0baf19407f3110ba3c4f0aab88b67946d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-30T08:00:51Z

    IGNITE-3868: ODBC: Fixed connection string parsing. This closes #1051.

commit 5e7ef8644ad824b87d4797e59133eb783ff8b098
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:37:25Z

    Merge branch 'ignite-1.6.9' into ignite-1.6.10

commit 59b46d3e6ea073d054ca2262d676b055a74bbb1f
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:40:04Z

    IGNITE-2881: Fixed SPI queries.

commit 0b66d2d7b695cf370a4b8a717844ad67742c6090
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-03T09:04:03Z

    ignite-3601 Do not check version on commit for read-only serializable transactions.

commit 9f211e413332931f0fb1190744ddd7c7f38fd213
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-03T09:26:12Z

    IGNITE-3645: IGFS: Local secondary: Implemented update() operation. This closes #1003.

commit fa698d6fcfde0006423ef009337dbef58ac62515
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T10:33:12Z

    Fixed TcpDiscoverySnapshotHistoryTest intermittent failures caused by multicast IP finder.

commit bba019fd5076412ca43c10a32fd300b6031ccd0b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T14:25:20Z

    IGNITE-3980: Processed failing tests in query suites. This closes #1137.

commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit 23461b8d33922772ef8e7217e9e87b3f3b0b37b1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T07:14:59Z

    IGNITE-4001: Timeouts for threads in Ignite pools. This closes #1130.

commit b94b0aeae4c42b1d35128c6b1de97e3fa318d497
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-06T07:22:50Z

    IGNITE-3163 IGFS: Added working directory support to IgniteHadoopIgfsSecondaryFileSystem. This closes #1030. This closes #1058. This closes #1132.

commit e6317e01fa8a0de03e15dcdd84a575c6b06ce701
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T09:03:48Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect. This closes #903. This closes #1145.

commit 952be8b995050b34379006dd6e739da3fe3b49e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2016-10-07T12:00:09Z

    Squashed commit of the following:
    
    commit 566881b695b8bc00e618fe9a9b4c86a8fd563cc1
    Author: sboikov <sboikov@gridgain.com>
    Date:   Fri Oct 7 13:08:38 2016 +0300
    
        minor
    
    commit 7fe88a1cb21f794ee55a176ab36d895cbf916528
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Oct 6 11:11:24 2016 +0300
    
        ignite-update-notifier fix after review
    
        (cherry picked from commit a10d2ff)
    
    commit f2de749f958a3b18dc479f8a5517d7bf9362b933
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Oct 4 12:12:08 2016 +0300
    
        ignite-2079-2 optimize import and change url path
    
        (cherry picked from commit 830a3cf)
    
    commit 0d1be85ad55b0aa91224690d6c112ae92e8bc0a9
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Sep 29 19:54:54 2016 +0300
    
        update-notifier remove parse xml, now parse like properties
    
        (cherry picked from commit 9ecaa29)
    
    commit e43bca6fb4528a7fc0dcb804a74fca1c59d7468b
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Sep 27 17:07:21 2016 +0300
    
        remove dom parser
    
        (cherry picked from commit d1653b2)

commit b9c776a8423471706ecb1dc6176b38f23e799077
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-10T08:52:57Z

    IGNITE-3235 Failed to initialize primitive boolean cache property of superclass

commit f9a0676fad7fd6c23e3c91c10d7e0412ccb27c06
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T07:23:01Z

    IGNITE-4041: Created separate processor for thread pools and refactored IO manager. This closes #1150.

commit 9a6cfce659df40b0a4624f19fd91c217b74bafea
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-10-11T10:59:57Z

    IGNITE-4014 Fixed ""Transaction hangs if entry processor failed during serialization"". This closes #1148.

commit 1938a17b01fac1e08c30011180bbcc3ed7374d83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-11T11:50:18Z

    IGNITE-3948: Fixed a bug causing TTL manager to continue tracking of evicted entries. This closes #1101.

commit 60d27547dfc6bd27c6d39cbcc523d0d1e872a821
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T11:51:00Z

    Merge remote-tracking branch 'upstream/ignite-1.6.10' into ignite-1.6.10

commit 359a392f1c53217c691c4c40762c51fd330666e2
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes
    
    (cherry picked from commit a5c85ca)

commit 01ca6db70933fb7f50f161a80cde9647e68a3710
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-10-11T13:18:40Z

    Merge remote-tracking branch 'origin/ignite-1.6.10' into ignite-1.6.10

commit 0659bebe04dc9c0b0a163bc95061519c553e678c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T11:49:36Z

    IGNITE-3972: Fixed a bug causing continuous queries to be lost for ATOMIC cache when key's primary node leaves topology. This closes #1133.

commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T12:44:08Z

    IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.

commit 2ab094e08373dc6667af44d48a38b4f044953a79
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-12T13:48:51Z

    IGNITE-2355: Hadoop: added ability to configure multiple job tracker addresses. This closes #1153.

commit eaf8ae246cc799c1353332fcac05cb3a8efab02c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-12T16:57:09Z

    IGNITE-4034 Get rid of specialized methods in platform targets

commit b1ec58f716ece3a5866dd654ebc707bef67caf57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-10-13T05:58:22Z

    IGNITE-4066 Fixed NPE.

commit 447e07c0bb5af75bce6a14612606904e4e3d9705
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-14T08:40:41Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL

commit 7adfbcf1ee7bbe0beb95fa82749a2e04449de8fa
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-14T14:48:14Z

    IGNITE-4060: Fixed a bug in RoundRobinLoadBalancing API causing exception when running closures after client node reconnect. This closes #1157.

commit 80abd1b72e4fc7b0b95212e7f53c700c0fe21156
Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
Date:   2016-10-14T16:33:07Z

    GG-11360 - Implement SQL queries cancellation (#18)
    
    * GG-11360 Merged IGNITE-2680 to ignite-1.6.3.
    
    * GG-11360 Test cleanup.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Added test for forever-running query cancellation on node restart.
    
    * GG-11360 Fixing race.
    
    * GG-11360 Added test for forever-running query cancellation on node stop.
    
    * GG-11360 Cleanup.
    
    * GG-11360 Support for local query cancellation/timeout.
    
    * GG-11360 Increase test duration.
    
    * GG-11360 Remove redundant catch block.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * Merge remote-tracking branch 'remotes/gg/ignite-1.6.10' into ignite-gg-11360
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.

commit 43ac3f5d5e8ab664e07f26d99be34f284f7941dd
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-17T08:26:12Z

    IGNITE-4054: Hadoop: added map-reduce plan debug output.

commit d3f042b9ba6c605500ab7155c40a41850babefdb
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-17T09:28:31Z

    Fixed indexing test in according to changes from #80abd1b.

----
;;;","18/Oct/16 18:02;isapego;Fixed.;;;","19/Oct/16 08:34;vozerov;Reviewed the fix. Looks good to me.;;;","22/Nov/16 11:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1169
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema import utility: missing index type setter in java code generator,IGNITE-3702,12997767,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,17/Aug/16 00:44,22/Aug/16 03:39,14/Jul/23 06:20,19/Aug/16 12:00,1.6,,,1.8,wizards,,,,,0,,,,"XML generator has such setter, but Java - no.",,anovikov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Aug 22 03:39:24 UTC 2016,,,,,,,,,,"0|i32ef3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Aug/16 08:30;kuaw26;Andrey please review my changes in branch ignite-3702.
And if OK resolve to Pavel for QA under most popular databases (at least H2 and Orac).

Also added missing test for cache config generation.;;;","18/Aug/16 09:18;anovikov;Reviewed. All fine, except CacheConfig.txt which contains duplicated methods, incorrect javadocs. Please check generation and tests.;;;","18/Aug/16 10:39;kuaw26;Please test.

To test you will need a table with index on more than one field.
You need to check that generated CacheConfig.java is correct (open in IDEA for example).;;;","19/Aug/16 12:00;pkonstantinov;Successfully tested in branch.;;;","22/Aug/16 03:39;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreatedExpiryPolicy doesn't work if entry is loaded from store,IGNITE-3699,12997690,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,vkulichenko,vkulichenko,16/Aug/16 19:40,04/Jul/19 21:49,14/Jul/23 06:20,24/Jan/17 11:45,1.7,,,2.0,cache,,,,,1,,,,"According to JCache spec, {{ExpiryPolicy.getExpiryForCreation()}} must be triggered on {{get()}} operation if the entry is loaded from the store. Currently this is not happening.

Test reproducing the issue is attached.",,aakhmedov,avinogradov,githubbot,hagmonk,sboikov,vkulichenko,,,,,,,"dspavlov commented on issue #1011: `IGNITE-3699: CreatedExpiryPolicy doesn't work if entry is loaded from…
URL: https://github.com/apache/ignite/pull/1011#issuecomment-508581742
 
 
   
   IGNITE-3699 | Resolved
   Feel free to reopen if needed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:49;githubbot;600","dspavlov commented on pull request #1011: `IGNITE-3699: CreatedExpiryPolicy doesn't work if entry is loaded from…
URL: https://github.com/apache/ignite/pull/1011
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:49;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,IGNITE-2375,,,,,,,,,,,,,,,,,"16/Aug/16 19:40;vkulichenko;LoadWithExpiryTest.java;https://issues.apache.org/jira/secure/attachment/12823976/LoadWithExpiryTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jan 23 10:24:55 UTC 2017,,,,,,,,,,"0|i32dxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/16 02:00;githubbot;GitHub user amirakhmedov opened a pull request:

    https://github.com/apache/ignite/pull/1011

    `IGNITE-3699: CreatedExpiryPolicy doesn't work if entry is loaded from…

    … store

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/amirakhmedov/ignite IGNITE-3699

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1011.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1011
    
----
commit 431bdb068604f1809573bb6526fbdfb09af01cdd
Author: Amir Akhmedov <amir.akhmedov@gmail.com>
Date:   2016-08-31T01:37:44Z

    IGNITE-3699: CreatedExpiryPolicy doesn't work if entry is loaded from store

----
;;;","01/Sep/16 23:16;vkulichenko;[~aakhmedov], here are my comments.

# I don't like that you used the existing test and replaced {{invoke}} with {{get}}. Please create new test instead for {{get}} and make sure that {{invoke}} also works properly. Overall, you should increase code coverage, not reduce it.
# Can you please explain the change in {{GridCacheAdapter}}?;;;","02/Sep/16 02:53;aakhmedov;[~vkulichenko], thank you for your comments.
1. Totally agree with you, will update the PR for this case.
2. In case of Atomic cache {{GridCacheAdapter.getAllAsync0}} is called. In this method if cache does not have a specified key it loads the value from store and creates a cache entry for the key-value pair. At this place I'm setting the TTL for this cache entry.;;;","06/Sep/16 03:54;aakhmedov;[~vkulichenko], I updated PR. Reverted back tests for {{invoke}} and fixed ttl calculation for {{Transactional}} cache. Can you please review it and let me know. Thanks.;;;","21/Sep/16 19:57;hagmonk;I came here and created a JIRA account just to say that this patch applies cleanly, and resolves the issue for me. It was going to be a serious problem if my CacheStore backed cache could not be managed with an expiry policy! I tested the patch using a CreatedExpiryPolicy and ModifiedExpiryPolicy. I applied the patch against bcbe8cc4492449957ff983976f8f16e090c0b239.;;;","20/Oct/16 18:06;hagmonk;What's the update on this issue? Will it be integrated into Ignite 1.8.0? I'd like to stop maintaining my own Ignite branch :);;;","15/Nov/16 11:09;sboikov;Hi Amir,

I reviewed your changes, have few comments:
- first, it does not compile with JDK7 (GridCacheAdapter.getAllAsync0 - parameter 'expiry' is not final). Please switch to JDK7. Did you run tests on TeamCity, I think now all tests should fail because of compilation error? We need execute all cache suites before mering this fix.
- change in 'getAllAsync0'  is not correct: method 'versionedValue' changes entry's value only if version check pass, so if it returns 'null' you can't change ttl. Correct fix is pass ttl (or ExpiryPolicy) to versionedValue and update ttl inside the same 'sychronized' block where version check is executed.
- I do not understand change GridDhtTxPrepareFuture, for what scenario this change is needed?

Thanks;;;","28/Nov/16 20:41;aakhmedov;Hi Semen,

I updated PR with corresponding changes:

1. Switched JDK to version 7 and ran TeamCity tests. Some of them are failing but from test's history I see that they are also failing on master

2. Now {{getAllAsync0}} calculates the ttl and passes it to {{versionedValue}}

3. The change in GridDhtTxPrepareFuture was done to fix IGNITE-821. But I realized that it's not correct fix and reverted back the changes.

Please let me know if you have any comments

Thanks.;;;","09/Dec/16 11:21;sboikov;Hi Amir,

Thank you for fixing comments, I did some corrections and merged fix into master.

But this fix is not complete, please take a look at my changes in 'testGetReadThrough', if you uncomment line 'keys.add(backupKeys(cache, 1, 100_000).get(0));' test will fail. Currenly if we request remote key then access ttl is computed locally and sent in GridNearSingleGetRequest/GridNearGetRequest. To properly handle case when entry is loaded from store as result of 'get' we need add 'createTtl' field in GridNearSingleGetRequest/GridNearGetRequest, the same should be done for GridNearLockRequest/GridDhtLockRequest. 

Also we need add more tests: test for 'getAll', execute get inside optimistic/pessimistic transactions, test when expiry policy is not set in configuration, but specified using IgniteCache.withExpiryPolicy.

Thanks!;;;","12/Jan/17 09:51;avinogradov;Amir, 
since this issue is critical, I'm going to fix the rest of the issues.
Currently I'm already have most of these fixes done and going to merge them in nearest days.
Please let me know in case you're already work on these fixes. I will be a good case to check both implementations before merge.;;;","23/Jan/17 10:24;sboikov;Hi Anton,

I reviewed your changes, look good. One minor comment: in test please restore case when 'get' is called outside of explicit transaction.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Java type mapping does not work with nullable types,IGNITE-3696,12997601,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,16/Aug/16 14:44,18/Aug/16 16:36,14/Jul/23 06:20,18/Aug/16 16:36,1.6,,,1.8,platforms,,,,,0,.net,,,"See JavaTypes class. We should probably map nullables there too.
Java has everything nullable by default, need to explain to the users that anything can be null underneath.

Make sure to test this with [QuerySqlField].

Workaround is to use manual QueryEntity configuration and specify either non-nullable .NET type, or the Java type name.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-08-16 14:44:36.0,,,,,,,,,,"0|i32de7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgfsLocalSecondaryFileSystemDualAsyncSelfTest.testAppendConsistencyMultithreaded hangs.,IGNITE-3694,12997537,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vozerov,vozerov,16/Aug/16 09:57,21/Mar/18 12:17,14/Jul/23 06:20,22/Aug/16 14:17,1.7,,,1.8,igfs,,,,,0,,,,Root cause is unknown. Need to investigate.,,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/16 09:58;vozerov;Ignite_Tests_Ignite_IGFS_5547.log;https://issues.apache.org/jira/secure/attachment/12823854/Ignite_Tests_Ignite_IGFS_5547.log",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 21 12:17:41 UTC 2018,,,,,,,,,,"0|i32czz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Aug/16 09:58;vozerov;Sample thread dump attached.;;;","16/Aug/16 16:57;tledkov-gridgain;The cause: the acquire fileId locks:
{code}
java.lang.AssertionError: File lock should prevent stream creation on a not-closed-yet file.
        at org.apache.ignite.internal.processors.igfs.IgfsImpl.newBatch(IgfsImpl.java:349)
        at org.apache.ignite.internal.processors.igfs.IgfsImpl.access$1600(IgfsImpl.java:118)
        at org.apache.ignite.internal.processors.igfs.IgfsImpl$16.call(IgfsImpl.java:1091)
        at org.apache.ignite.internal.processors.igfs.IgfsImpl$16.call(IgfsImpl.java:1074)
        at org.apache.ignite.internal.processors.igfs.IgfsImpl.safeOp(IgfsImpl.java:1760)
        at org.apache.ignite.internal.processors.igfs.IgfsImpl.append(IgfsImpl.java:1074)
        at org.apache.ignite.internal.processors.igfs.IgfsImpl.append(IgfsImpl.java:1065)
        at org.apache.ignite.internal.processors.igfs.IgfsAbstractSelfTest$13.run(IgfsAbstractSelfTest.java:2241)
        at org.apache.ignite.testframework.GridTestUtils$8.call(GridTestUtils.java:1055)
{code};;;","18/Aug/16 12:04;tledkov-gridgain;Root cause: 
The file lock is released before the batch is finished at the  *IgfsOutputStreamImpl.close()*.
In this case the *IgfsMetaManager.appendDual* acquires the file lock before the previous batch is finished.
;;;","18/Aug/16 12:06;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/967

    IGNITE-3694 IgfsLocalSecondaryFileSystemDualAsyncSelfTest.testAppendConsistencyMultithreaded hangs

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3694

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/967.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #967
    
----
commit 1d0cbb45cd61c5c8e6ec926d7e629eb94111b32f
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2016-08-11T05:43:50Z

    IGNITE-3618: Client can not load data after server restarts. This closes #941.

commit 1139a9f76b5d37073261d729a15b1fbec674d48d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-11T05:47:48Z

    Added missing license.

commit 0b4ffdbcce63e5ce53572f71af967cff300d5670
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-14T15:18:40Z

    IGNITE-2852: Fixed TreeMap and TreeSet serialization.

commit 89bce0fc5cb3dba56626c7088e607d0b25c3353c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-30T10:14:16Z

    IGNITE-3021: IGFS: Fixed failiing IgfsStreamsSelfTest.testCreateFileColocated() test. Failure as caused by misconfiguration.

commit 78aa065b4c7b05381b1fa31159b74969ec4a2bfe
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:35Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit f87ca482420fc1e6ffcb000a227717142d24e270
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:41Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit 9ddf9d846f52a4e8fc433643409993884c70ce37
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T13:00:45Z

    IGNITE-466: IGFS: Added ""IgfsMode mode(IgfsPath)"" method.

commit dc81069ba9ebb88bc11cf6917e8733cc1f6de2fb
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2016-08-02T08:11:24Z

    IGNITE-3343: IGFS: Secondary file system is not queried for statuses during MKDIRS and CREATE operations. This closes #896.

commit ae54e36f27719f46d1d276f62a977c3f8d053b44
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-04T14:04:41Z

    IGNITE-3331 IGFS: Route client tasks to primary node when metadata co-location is enabled. This closes #921.

commit 970137b1db7dc6c5e546581e22e428ae15c86513
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:32Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit 4d876a7560060c892908da447178e97bfe12ca9c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:43Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit f5a040a01280c654df1fc4789cc39ff1ac2d32a4
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-09T07:01:56Z

    IGNITE-3332: IGFS: Optimized file unlock routine with help of a client callable. This closes #916.

commit 5cf3bea32a25ccc78641f083aa7f1ac81b4187ba
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-15T10:40:41Z

    IGNITE-1926: IGFS: Implemented local secondary file system.

commit 278633eced6d8039b5be4a18eefe6c65650aba4f
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-08-15T11:27:22Z

    IGNITE-3688: Fixed visiblity issue in GridCacheIoManager.idxClsHandlers.

commit 09a3922d57f9a4c8fbe6c1056f3ea128869c250e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-16T09:52:09Z

    IGNITE-3692: IGFS: Test fixes.

commit 476081b9171b1b8e5ec0a1ffd7e87092da3601d6
Author: Tikhonov Nikolay <tikhonovnicolay@gmail.com>
Date:   2016-08-17T11:31:20Z

    Fixed isReadFromBackup behaviour for transaction. This closes #955.

commit 15f1aee4050b6072279296c7b097a9e5dbf5104a
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-18T12:06:04Z

    IGNITE-3694 IgfsLocalSecondaryFileSystemDualAsyncSelfTest.testAppendConsistencyMultithreaded hangs.

----
;;;","18/Aug/16 13:17;tledkov-gridgain;[Tests results|http://149.202.210.143:8111/project.html?projectId=IgniteTests&branch_IgniteTests=pull%2F967%2Fhead];;;","21/Mar/18 12:17;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/967
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgfsLocalSecondaryFileSystemDualAsyncSelfTest.testFormat fails.,IGNITE-3693,12997535,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vozerov,vozerov,16/Aug/16 09:54,23/Aug/16 11:25,14/Jul/23 06:20,22/Aug/16 14:37,1.7,,,1.8,igfs,,,,,0,,,,"Sample failure: http://149.202.210.143:8111/viewLog.html?buildId=299667&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteGgfs

Stack trace:
{code}
java.lang.AssertionError: null
    at org.apache.ignite.internal.processors.igfs.IgfsAbstractSelfTest.testFormat(IgfsAbstractSelfTest.java:1079)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1760)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
    at org.apache.ignite.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1698)
    at java.lang.Thread.run(Thread.java:745)
------- Stdout: -------
[09:18:08,853][INFO ][main][root] >>> Starting test: IgfsLocalSecondaryFileSystemDualAsyncSelfTest#testFormat <<<
[09:18:08,873][INFO ][main][root] >>> Stopping test: IgfsLocalSecondaryFileSystemDualAsyncSelfTest#testFormat in 19 ms <<<
------- Stderr: -------
[09:18:08,872][ERROR][main][root] Test failed.
java.lang.AssertionError
    at org.apache.ignite.internal.processors.igfs.IgfsAbstractSelfTest.testFormat(IgfsAbstractSelfTest.java:1079)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1760)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
    at org.apache.ignite.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1698)
    at java.lang.Thread.run(Thread.java:745)
{code}",,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 23 11:25:15 UTC 2016,,,,,,,,,,"0|i32czj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Aug/16 12:07;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/960

    IGNITE-3693 IgfsLocalSecondaryFileSystemDualAsyncSelfTest.testFormat fails.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3693

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/960.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #960
    
----
commit 1d0cbb45cd61c5c8e6ec926d7e629eb94111b32f
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2016-08-11T05:43:50Z

    IGNITE-3618: Client can not load data after server restarts. This closes #941.

commit 1139a9f76b5d37073261d729a15b1fbec674d48d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-11T05:47:48Z

    Added missing license.

commit 0b4ffdbcce63e5ce53572f71af967cff300d5670
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-14T15:18:40Z

    IGNITE-2852: Fixed TreeMap and TreeSet serialization.

commit 89bce0fc5cb3dba56626c7088e607d0b25c3353c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-30T10:14:16Z

    IGNITE-3021: IGFS: Fixed failiing IgfsStreamsSelfTest.testCreateFileColocated() test. Failure as caused by misconfiguration.

commit 78aa065b4c7b05381b1fa31159b74969ec4a2bfe
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:35Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit f87ca482420fc1e6ffcb000a227717142d24e270
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:41Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit 9ddf9d846f52a4e8fc433643409993884c70ce37
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T13:00:45Z

    IGNITE-466: IGFS: Added ""IgfsMode mode(IgfsPath)"" method.

commit dc81069ba9ebb88bc11cf6917e8733cc1f6de2fb
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2016-08-02T08:11:24Z

    IGNITE-3343: IGFS: Secondary file system is not queried for statuses during MKDIRS and CREATE operations. This closes #896.

commit ae54e36f27719f46d1d276f62a977c3f8d053b44
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-04T14:04:41Z

    IGNITE-3331 IGFS: Route client tasks to primary node when metadata co-location is enabled. This closes #921.

commit 970137b1db7dc6c5e546581e22e428ae15c86513
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:32Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit 4d876a7560060c892908da447178e97bfe12ca9c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:43Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit f5a040a01280c654df1fc4789cc39ff1ac2d32a4
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-09T07:01:56Z

    IGNITE-3332: IGFS: Optimized file unlock routine with help of a client callable. This closes #916.

commit 5cf3bea32a25ccc78641f083aa7f1ac81b4187ba
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-15T10:40:41Z

    IGNITE-1926: IGFS: Implemented local secondary file system.

commit 278633eced6d8039b5be4a18eefe6c65650aba4f
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-08-15T11:27:22Z

    IGNITE-3688: Fixed visiblity issue in GridCacheIoManager.idxClsHandlers.

commit 09a3922d57f9a4c8fbe6c1056f3ea128869c250e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-16T09:52:09Z

    IGNITE-3692: IGFS: Test fixes.

commit e70259070109f1bb068651a48e39fe8433c61a3d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-16T12:03:54Z

    IGNITE-3693 IgfsLocalSecondaryFileSystemDualAsyncSelfTest.testFormat fails

----
;;;","16/Aug/16 12:17;tledkov-gridgain;Root cause: IgfsOutputStreamImpl#write is asynchronous. So, with DUAL_ASYNC mode the IgfsFile.info().length() returns the not final size of the file in spite of output stream has been closed.;;;","23/Aug/16 11:25;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/960
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: Hangs in local secondary file system tests.,IGNITE-3692,12997513,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,16/Aug/16 08:17,16/Aug/16 09:53,14/Jul/23 06:20,16/Aug/16 09:53,1.7,,,1.8,igfs,,,,,0,,,,Caused by bad tests design. Need to rework it.,,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-08-16 08:17:48.0,,,,,,,,,,"0|i32cun:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Click on error feedback reset value in input.,IGNITE-3686,12997249,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,anovikov,anovikov,15/Aug/16 08:16,03/Oct/16 06:01,14/Jul/23 06:20,28/Sep/16 09:19,1.7,,,1.8,wizards,,,,,0,,,,"Step to reproduce:
1) Create a new cluster
2) Open Node Filter section
3) Choose 'Specified Nodes' option
4) Enter invalid value in Node IDs field.
5) Click on error icon.

Value will be reset and editor will be hidden.",,anovikov,Dmitriyff,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Oct 03 06:01:42 UTC 2016,,,,,,,,,,"0|i32b7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Sep/16 03:44;Dmitriyff;added fix. pls check it;;;","28/Sep/16 09:19;anovikov;Reviewed. Merged. Pavel, need test: click on feedback icon in tables.;;;","03/Oct/16 06:01;pkonstantinov;Now incorrect value doesn't reset and user can edit it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
H2 Debug console does not show list of tables.,IGNITE-3685,12997244,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergi,sergi,sergi,15/Aug/16 07:37,15/Aug/16 13:49,14/Jul/23 06:20,15/Aug/16 13:48,,,,,,,,,,0,,,,"Exception thrown:
{code}
General error: ""java.lang.UnsupportedOperationException""; SQL statement: 
SELECT UPPER(VALUE) FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [50000-191] HY000/50000 
org.h2.jdbc.JdbcSQLException: General error: ""java.lang.UnsupportedOperationException""; SQL statement: 
SELECT UPPER(VALUE) FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [50000-191] 
    at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) 
    at org.h2.message.DbException.get(DbException.java:168) 
    at org.h2.message.DbException.convert(DbException.java:295) 
    at org.h2.command.Command.executeQuery(Command.java:213) 
    at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:110) 
    at org.h2.bnf.context.DbContents.readContents(DbContents.java:136) 
    at org.h2.server.web.WebApp.tables(WebApp.java:697) 
    at org.h2.server.web.WebApp.process(WebApp.java:225) 
    at org.h2.server.web.WebApp.processRequest(WebApp.java:170) 
    at org.h2.server.web.WebThread.process(WebThread.java:133) 
    at org.h2.server.web.WebThread.run(WebThread.java:89) 
    at java.lang.Thread.run(Thread.java:745) 
Caused by: java.lang.UnsupportedOperationException 
    at org.apache.ignite.internal.processors.query.h2.opt.GridH2Row.setKey(GridH2Row.java:101) 
    at org.h2.table.MetaTable.add(MetaTable.java:1982) 
    at org.h2.table.MetaTable.generateRows(MetaTable.java:940) 
    at org.h2.index.MetaIndex.find(MetaIndex.java:50) 
    at org.h2.index.BaseIndex.find(BaseIndex.java:132) 
    at org.h2.index.IndexCursor.find(IndexCursor.java:169) 
    at org.h2.table.TableFilter.next(TableFilter.java:460) 
    at org.h2.command.dml.Select.queryFlat(Select.java:541) 
    at org.h2.command.dml.Select.queryWithoutCache(Select.java:654) 
    at org.h2.command.dml.Query.query(Query.java:322) 
    at org.h2.command.dml.Query.query(Query.java:309) 
    at org.h2.command.dml.Query.query(Query.java:36) 
    at org.h2.command.CommandContainer.query(CommandContainer.java:110) 
    at org.h2.command.Command.executeQuery(Command.java:201) 
    ... 8 more
{code}",,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-08-15 07:37:49.0,,,,,,,,,,"0|i32b6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Don't hide a tooltip on mouse hover,IGNITE-3684,12997234,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,mafanasiev,mafanasiev,15/Aug/16 06:22,22/Sep/16 09:06,14/Jul/23 06:20,22/Sep/16 08:05,1.6,,,1.8,wizards,,,,,0,,,,Make a tooltips visible on hover to use links in content.,,anovikov,mafanasiev,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 22 09:06:53 UTC 2016,,,,,,,,,,"0|i32b4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Sep/16 07:57;mafanasiev;Fixed. Please review.;;;","22/Sep/16 07:50;anovikov;I don't like this fix. Reworked with decorator. Maxim, please review.;;;","22/Sep/16 08:05;mafanasiev;Reviewed. Merged. Please test.;;;","22/Sep/16 09:06;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Fix dropdown popup position,IGNITE-3683,12997232,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,mafanasiev,mafanasiev,15/Aug/16 06:16,02/Sep/16 02:51,14/Jul/23 06:20,01/Sep/16 10:25,1.6,,,1.8,wizards,,,,,0,,,,,,anovikov,kuaw26,mafanasiev,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/16 06:17;mafanasiev;screen.png;https://issues.apache.org/jira/secure/attachment/12823655/screen.png",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 02 02:51:29 UTC 2016,,,,,,,,,,"0|i32b47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/16 09:40;mafanasiev;Fixed. Please review.;;;","01/Sep/16 10:25;anovikov;Reviewed. Merged. Pavel, please test.;;;","01/Sep/16 10:28;kuaw26;Pavel, how to reproduce: many quick clicks on dropdown (compare production and staging, fixed on staging).;;;","02/Sep/16 02:51;pkonstantinov;Successfully tested on staging.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C++: Add documentation and example for the distributed joins,IGNITE-3674,12996454,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,dmagda,dmagda,dmagda,10/Aug/16 23:30,10/Nov/16 11:32,14/Jul/23 06:20,10/Nov/16 00:00,1.7,,,1.8,platforms,,,,,0,,,,"Igor, please add a documentation about the distributed joins that has been released recently. You can refer to the Java counterpart:
https://apacheignite.readme.io/docs/sql-queries#distributed-joins

In addition, please add a distributed join example. In Java we simply added it into {{CacheQueryExample}} extending the latter.",,dmagda,isapego,pgarg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 10 11:32:44 UTC 2016,,,,,,,,,,"0|i326bj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Aug/16 17:07;dmagda;[~isapego], please assign the ticket on [~pgarg] asking for the documentation review and editing after the latter is ready and posted on readme.io.;;;","28/Oct/16 10:40;isapego;Ready for review: https://apacheignite-cpp.readme.io/v1.7/docs/sql-queries#distributed-joins;;;","09/Nov/16 23:58;pgarg;Added TOC to the page.;;;","10/Nov/16 11:32;isapego;Cool. Thanks, Prachi.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P2P doesn't work for remote filter and filter factory.,IGNITE-3653,12995644,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmekhanikov,ntikhonov,ntikhonov,08/Aug/16 12:39,02/Jul/19 13:51,14/Jul/23 06:20,02/Jul/19 13:47,1.6,,,2.8,cache,,,,,5,,,,Remote filter and filter factory classes were not deployed on nodes which join to cluster after their initialization. Test attached.,,dmekhanikov,DmitriyGovorukhin,githubbot,ignitetcbot,NSAmelchev,Pavlukhin,tonysze,,,,,,"pavlukhin commented on pull request #4566: IGNITE-3653 Fix P2P class loading for remote filter and filter factory in CQs.
URL: https://github.com/apache/ignite/pull/4566#discussion_r299076761
 
 

 ##########
 File path: modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryPeerClassLoadingTest.java
 ##########
 @@ -77,6 +76,13 @@ public void testRemoteFilterFactoryServer2() throws Exception {
         check(""server1"", ""server2"", ""server3"");
     }
 
+    /**
+     * @throws Exception If failed.
+     */
+    public void testRemoteFilterFactoryFromClientToServer() throws Exception {
 
 Review comment:
   Should it be marked with `@Test` annotation?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jul/19 15:01;githubbot;600","asfgit commented on pull request #4566: IGNITE-3653 Fix P2P class loading for remote filter and filter factory in CQs.
URL: https://github.com/apache/ignite/pull/4566
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/19 13:51;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,IGNITE-8528,,,,,IGNITE-9181,,,,,,"08/Aug/16 12:40;ntikhonov;CCP2PTest.patch;https://issues.apache.org/jira/secure/attachment/12822568/CCP2PTest.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 02 13:47:36 UTC 2019,,,,,,,,,,"0|i321br:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 05:32;tonysze;In Ignite 2.3.0, I have added the following line in org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.register (line number 317):

{code}        p2pUnmarshal(nodeId, ctx);{code}

Just before:

{code}        final CacheEntryEventFilter filter = getEventFilter();{code}

Afterward, the RemoteFilter can be loaded, *PROVIDED* that the RemoteFilterFactory class is already available on the Server node. Continuous Query also seems working and can fail over between server nodes.

If the RemoteFilterFactory class is not available on the server node, there would be another exception. Also, I haven't ran the full set of test cases yet, so not sure if it may introduce other problems.

;;;","17/Aug/18 14:38;githubbot;GitHub user dmekhanikov opened a pull request:

    https://github.com/apache/ignite/pull/4566

    IGNITE-3653 Fix P2P class loading for remote filter and filter factory in CQs.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3653

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4566.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4566
    
----
commit 48ce5e66e199c1a3c2593d40e0cb7a8e61d279c3
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-08-17T12:18:01Z

    IGNITE-3653 Add tests.

commit 31a81d8d3d3cdccb58b8d98f11d3a55fdfe281d6
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-08-17T14:32:04Z

    IGNITE-3653 Call p2pUnmarshal() before registering CQ handler on data exchange.

----
;;;","30/Oct/18 14:47;githubbot;Github user dmekhanikov closed the pull request at:

    https://github.com/apache/ignite/pull/4566
;;;","30/Oct/18 14:50;githubbot;GitHub user dmekhanikov reopened a pull request:

    https://github.com/apache/ignite/pull/4566

    IGNITE-3653 Fix P2P class loading for remote filter and filter factory in CQs.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3653

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4566.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4566
    
----
commit f33c53d8895d5b9764fc3daddc213aa0f530e06d
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-08-17T12:18:01Z

    IGNITE-3653 Add tests.

commit c598082d504f6b9f8bde4e020be3e4960da9b7ff
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-08-17T14:32:04Z

    IGNITE-3653 Call p2pUnmarshal() before registering CQ handler on data exchange.

commit 5a0423aaab7f9c36552da5464ce143750bb385fd
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-09-05T12:21:45Z

    IGNITE-3653 Use GridToStringBuilder for CacheContinuousQueryDeployableObject.

commit d7ffa09674ddc3780ae3a9c6cade63cc4e0c7bc7
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-09-06T08:13:23Z

    IGNITE-3653 Check that P2P class loading is enabled.

commit 6531f2a28504586cc3294aa71ca6f4a871e5cf42
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-10-19T12:36:26Z

    IGNITE-3653 Exclude bytes from CacheContinuousQueryDeployableObject.toString

----
;;;","20/Nov/18 17:44;NSAmelchev;Hi, [~dmekhanikov].

I would ask you about one problem in continuous queries. 

Discovery protocol with mutable messages has a problem: 
When _GridContinuousProcessor.processStartRequest_ processes the _StartRoutineDiscoveryMessage_ message it sends some other messages for unmarshal (when peerClsLoading enabled). It may lead to deadlock disco threads (IGNITE-10238). 
It is not possible to take this out to the system pool because the modified message needs to be sent across the ring.

Will your changes fix the problem?;;;","21/Nov/18 19:05;dmekhanikov;[~NSAmelchev],

I'm currently working on a similar problem, but regarding continuous queries being deployed to joining nodes.

This is pretty similar to the problem, that you described, because I'm moving deserialization to a system thread pool and making it asynchronous. But I'm not going to fix the problem with processing of _StartRoutineDiscoveryMessage_ under this ticket.

I think, work on IGNITE-10238 should be started after this ticket is resolved. I'm implementing mechanisms for asynchronous P2P class loading, and the same challenge will arise in another ticket.;;;","21/Nov/18 19:38;dmekhanikov;[~NSAmelchev],

I took another look at the _GridContinuousProcessor.processStartRequest_ procedure, and now I doubt, that you can do CQ deployment asynchronously from processing of the discovery message. Deployment result is written into the discovery message, that is being processed, so deployment should happen before the message is passed further. I'm afraid, this ticket doesn't address this issue,;;;","22/Nov/18 09:16;NSAmelchev;[~dmekhanikov], thanks for looking at this issue! I'll continue discussing this problem in IGNITE-10238. ;;;","13/Jun/19 14:38;ignitetcbot;{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Platform .NET (Core Linux){color} [[tests 3 TIMEOUT |https://ci.ignite.apache.org/viewLog.html?buildId=4108742]]

{color:#d04437}Platform .NET{color} [[tests 3 TIMEOUT |https://ci.ignite.apache.org/viewLog.html?buildId=4108744]]
* exe: CacheQueriesRestartServerTest.Test_ScanQueryAfterClientReconnect_ReturnsResults(False)

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4102688&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","13/Jun/19 14:43;dmekhanikov;I prepared a patch for this issue: [https://github.com/apache/ignite/pull/4566]

Invocation to {{p2pMarshal}} on continuous query handlers were missing in a few places. Also now peer class loading of remote filters is postponed till the moment when the node joins the topology.

Please review.;;;","01/Jul/19 08:31;DmitriyGovorukhin;[~dmekhanikov] Looks good for me. ;;;","01/Jul/19 15:02;Pavlukhin;[~dmekhanikov], I left a small [comment|https://github.com/apache/ignite/pull/4566#pullrequestreview-256381353] on GitHub regarding enabling one test.;;;","01/Jul/19 15:36;dmekhanikov;[~Pavlukhin], good catch, thanks. Fixed.;;;","02/Jul/19 13:47;DmitriyGovorukhin;[~dmekhanikov] Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOeverflowError in BinaryObject.toString(),IGNITE-3635,12995356,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vkulichenko,vkulichenko,vkulichenko,05/Aug/16 21:52,21/Sep/16 21:31,14/Jul/23 06:20,16/Sep/16 22:00,1.7,,,1.8,binary,,,,,0,,,,"If the object field is a collection or map and one the elements in the collection is that object (circular reference), stack overflow happens in {{toString}} method. This happens because handles which are tracked when {{toString}} is called, are lost when {{Collection.toString()}} is called. We should add special handling for collections and maps and print the out manually, without delegating to their {{toString()}} method.

Test attached.",,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Aug/16 21:52;vkulichenko;Test.java;https://issues.apache.org/jira/secure/attachment/12822381/Test.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 21 21:31:32 UTC 2016,,,,,,,,,,"0|i31zjr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Sep/16 22:00;vkulichenko;Added special handling to {{BinaryObject.toString()}} method for object arrays, collections and maps.;;;","21/Sep/16 09:38;vozerov;Reopened as another stack overflow was found there when {{IgniteUuid}} which is {{Iterable}} is in the object.;;;","21/Sep/16 21:31;vkulichenko;Fix for {{IgniteUuid}} looks good to me. In case other similar cases exist, let's address them separately.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SpringCacheManager should support null values,IGNITE-3634,12995333,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vkulichenko,vkulichenko,vkulichenko,05/Aug/16 20:29,06/Aug/16 01:08,14/Jul/23 06:20,06/Aug/16 01:08,1.7,,,1.8,spring,,,,,0,,,,"Currently {{SpringCache.put()}} will fail if method marked with {{@Cacheable}} returns {{null}}. We should wrap {{null}} in a special value and save it in cache, so that next time the method is called, it is returned without executing the method.",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-08-05 20:29:41.0,,,,,,,,,,"0|i31zen:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: Metadata co-location doesn't work for PARTITIONED cache.,IGNITE-3631,12995193,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,05/Aug/16 12:04,05/Aug/16 12:05,14/Jul/23 06:20,05/Aug/16 12:05,1.6,,,1.8,igfs,,,,,0,,,,,,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-08-05 12:04:50.0,,,,,,,,,,"0|i31yjj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make GridCacheTtlManager singleton,IGNITE-3621,12994547,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,EdShangGG,EdShangGG,03/Aug/16 10:41,10/Oct/19 13:11,14/Jul/23 06:20,27/Sep/16 11:24,1.6,,,2.8,cache,,,,,0,performance,,,"Now every cache has own TTL manager, which creates CleanupWorker = new extra thread. This can cause to extra hundreds of threads (redundant context switches = performance penalty).

Also, under IGNITE-3513 every put can enter critical section to notify worker. Obviously, it is not good from performance point of view.

So, my proposal is next:
1. Expiration should be done on every cache action (on exit thread which updates cache should invoke {{expire}}).
2. TtlManager will exist only in one instance.
3. CleanupWorker will be the only backup if there is no cache activity. It will wake up with some period to check for work (500 ms, for example).

Moreover, now we keep on-heap pending entries even if a cache is kept off-head. At least, this issue needs discussion.",,amartianov,amashenkov,githubbot,sboikov,,,,,,,,,"dspavlov commented on issue #1066: IGNITE-3621 Make GridCacheTtlManager singleton
URL: https://github.com/apache/ignite/pull/1066#issuecomment-514731768
 
 
   
   IGNITE-3621 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:46;githubbot;600","dspavlov commented on pull request #1066: IGNITE-3621 Make GridCacheTtlManager singleton
URL: https://github.com/apache/ignite/pull/1066
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,IGNITE-3513,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 27 11:24:07 UTC 2016,,,,,,,,,,"0|i31ujz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Sep/16 15:18;amartianov;[~ascherbakov], could you please reassign this issue to me (if you don't have progress on it);;;","14/Sep/16 16:05;amartianov;I suggest we should keep separate TtlManager-s for each cache (in order to manage queues of pending entries of different caches separately) but extract CleanupWorker and related logic in shared component.
Working this way.;;;","15/Sep/16 12:49;githubbot;GitHub user amartianov opened a pull request:

    https://github.com/apache/ignite/pull/1066

    IGNITE-3621 Make GridCacheTtlManager singleton

    Use single Ttl Cleanup Worker thread for all caches

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3621

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1066.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1066
    
----
commit dc4fb203ea0a98f77b3aeddaccc02ef02f7cc554
Author: Andrey Martianov <amartianov@gridgain.com>
Date:   2016-09-15T07:35:58Z

    IGNITE-3621 use single Ttl Cleanup Worker thread for all caches

----
;;;","15/Sep/16 14:11;amartianov;Cleanup worker and related logic extracted into shared GridCacheSharedTtlCleanupManager. Single worker thread are started only if at least one cache created with 'isEagerTtl' flag set. This worker checks caches on expired entries every 500 ms.;;;","15/Sep/16 15:44;sboikov;Hi Andrey,

I reviewed your changes, fix looks good, I'll merge it soon. Just one issue - do not forget to add apache license header in all new source files. 

Thanks!;;;","15/Sep/16 16:22;amashenkov;Single cleanup worker checks all caches consequently and cleanup only fixed number of records.

What If we reduce this limit (e.g. down to 10 or even set time limit) in CleanupWorker main thread to make it more responsive. But if expire() method returns true in main thread that would means we need cleanup cache more aggressively using background cleaners in separate threads.;;;","15/Sep/16 16:59;amartianov;[~sboikov], Thanks! 

[~amashenkov], Entries expiration is checked on every cache action (in way as point #1 of description says) and processed in threads performed those actions. So I suppose we don't need additional cleaner threads.
CleanupWorker really helps only in case if it isn't any cache activity for some time. And I think in this case it will be enough.;;;","27/Sep/16 11:24;sboikov;Reviewed, merged into master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client can not load data after server restarts,IGNITE-3618,12994273,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,v.pyatkov,v.pyatkov,02/Aug/16 12:32,13/Dec/16 13:37,14/Jul/23 06:20,11/Aug/16 05:44,1.6,,,1.8,general,,,,,0,,,,"Start {{TestServer}} and {{TestCache}}
After client has printed ""Sleep"", need to restart server
Wait topology update and client will be reconnect
Type enter in client console and you will see in client console ""No object in cache""
Server throws exception:
{noformat}
Caused by: class org.apache.ignite.binary.BinaryObjectException: Cannot find metadata for object with compact footer: -995427962
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.getOrCreateSchema(BinaryReaderExImpl.java:1687)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:255)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:168)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.reader(BinaryObjectImpl.java:572)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.reader(BinaryObjectImpl.java:585)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.hasField(BinaryObjectImpl.java:395)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$BinaryProperty.value(GridQueryProcessor.java:1990)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$RowDescriptor.columnValue(IgniteH2Indexing.java:2513)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2AbstractKeyValueRow.java:289)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2IndexBase.compareRows(GridH2IndexBase.java:119)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.java:248)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.java:49)
	at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeapSnapTreeMap.java:1350)
	at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeapSnapTreeMap.java:1346)
	at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.java:2102)
	at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.updateUnderRoot(GridOffHeapSnapTreeMap.java:2034)
	at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.update(GridOffHeapSnapTreeMap.java:1915)
	at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.put(GridOffHeapSnapTreeMap.java:1864)
	at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.put(GridOffHeapSnapTreeMap.java:108)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.put(GridH2TreeIndex.java:403)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpdate(GridH2Table.java:405)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update(GridH2Table.java:339)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.store(IgniteH2Indexing.java:539)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.store(GridQueryProcessor.java:700)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.store(GridCacheQueryManager.java:407)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.updateIndex(GridCacheMapEntry.java:4024)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerSet(GridCacheMapEntry.java:1244)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:802)
	... 29 more
{noformat}",,dparhonin,githubbot,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Aug/16 10:24;v.pyatkov;ClientReconnectTest.java;https://issues.apache.org/jira/secure/attachment/12821807/ClientReconnectTest.java","02/Aug/16 12:33;v.pyatkov;src.zip;https://issues.apache.org/jira/secure/attachment/12821601/src.zip",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Dec 13 13:37:05 UTC 2016,,,,,,,,,,"0|i31sv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Aug/16 14:00;v.pyatkov;I have not reproduce the issue in single JVM, but [attached|^ClientReconnectTest.java] test, where I attempt.
I think it may be useful.;;;","03/Aug/16 10:32;v.pyatkov;The test, which attached, reproduce the issue if put it to ignite-indexing.
The exception was thrown because client cached metodata (about object type) from internal map (see at {{CacheObjectBinaryProcessorImpl#clientMetaDataCache}}).;;;","10/Aug/16 09:35;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/941

    IGNITE-3618 - Client can not load data after server restarts

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-3618

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/941.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #941
    
----
commit cc31b0516522f03ccb6a6ce8b439aba26d86cd9f
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2016-08-10T09:33:49Z

    IGNITE-3618 - Client can not load data after server restarts

----
;;;","22/Aug/16 03:27;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/941
;;;","13/Dec/16 13:37;dparhonin;The same exception can be observed when trying to call a remote service after the whole cluster restart.
I can reproduce the error on Apache Ignite 1.8 too.

2016-12-13 09:42:53,636 DEBUG - Task result received for a6896ff9-ab3f-4fde-8482-b9c876d54c82@c6a68b54-9630-4715-b8a6-c50d861bccb5 [ru.depsy.pricinggrid.client.AbstractSession] [sys-#51%pricingGridServer%] {}
2016-12-13 09:42:53,636 ERROR - The calibration has failed [ru.depsy.server.zerocice.MyServiceI] [sys-#51%pricingGridServer%] {}
class org.apache.ignite.compute.ComputeUserUndeclaredException: Failed to execute job due to unexpected runtime exception [jobId=97c4a87f851-39d922a0-b23e-49be-b70a-f31d130a6ee6, ses=GridJobSessionImpl [ses=GridTaskSessionImpl [taskName=ru.depsy.pricinggrid.client.ignite.IgniteTask, dep=SharedDeployment [rmv=false, super=GridDeployment [ts=1481622173293, depMode=SHARED, clsLdr=GridDeploymentClassLoader [id=c390097f851-a52881e1-10b0-4332-a609-79deb560c69c, singleNode=false, nodeLdrMap={39d922a0-b23e-49be-b70a-f31d130a6ee6=46c4a87f851-39d922a0-b23e-49be-b70a-f31d130a6ee6}, p2pTimeout=5000, usrVer=0, depMode=SHARED, quiet=false], clsLdrId=c390097f851-a52881e1-10b0-4332-a609-79deb560c69c, userVer=0, loc=false, sampleClsName=ru.depsy.pricinggrid.client.ignite.IgniteTask, pendingUndeploy=false, undeployed=false, usage=1]], taskClsName=ru.depsy.pricinggrid.client.ignite.IgniteTask, sesId=67c4a87f851-39d922a0-b23e-49be-b70a-f31d130a6ee6, startTime=1481622172731, endTime=9223372036854775807, taskNodeId=39d922a0-b23e-49be-b70a-f31d130a6ee6, clsLdr=GridDeploymentClassLoader [id=c390097f851-a52881e1-10b0-4332-a609-79deb560c69c, singleNode=false, nodeLdrMap={39d922a0-b23e-49be-b70a-f31d130a6ee6=46c4a87f851-39d922a0-b23e-49be-b70a-f31d130a6ee6}, p2pTimeout=5000, usrVer=0, depMode=SHARED, quiet=false], closed=false, cpSpi=null, failSpi=null, loadSpi=null, usage=1, fullSup=true, subjId=39d922a0-b23e-49be-b70a-f31d130a6ee6, mapFut=IgniteFuture [orig=GridFutureAdapter [resFlag=0, res=null, startTime=1481622173293, endTime=0, ignoreInterrupts=false, state=INIT]]], jobId=97c4a87f851-39d922a0-b23e-49be-b70a-f31d130a6ee6]]
	at org.apache.ignite.internal.processors.job.GridJobWorker.handleThrowable(GridJobWorker.java:607)
	at org.apache.ignite.internal.processors.job.GridJobWorker.initialize(GridJobWorker.java:427)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1089)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1766)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1238)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:866)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:106)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:829)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.binary.BinaryObjectException: Cannot find metadata for object with compact footer: -771298812
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.getOrCreateSchema(BinaryReaderExImpl.java:1709)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:278)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:177)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.readField(BinaryReaderExImpl.java:1683)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:639)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:776)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1481)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.readField(BinaryReaderExImpl.java:1683)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:639)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:776)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1481)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.readField(BinaryReaderExImpl.java:1683)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:639)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:776)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1481)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.readField(BinaryReaderExImpl.java:1683)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:639)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:776)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1481)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.readField(BinaryReaderExImpl.java:1683)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:639)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:776)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1481)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.deserialize(GridBinaryMarshaller.java:298)
	at org.apache.ignite.internal.binary.BinaryMarshaller.unmarshal(BinaryMarshaller.java:109)
	at org.apache.ignite.internal.processors.job.GridJobWorker.initialize(GridJobWorker.java:409)
	... 9 more
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node sometimes fails to detect broken connection,IGNITE-3606,12993557,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,krybakova,sboikov,sboikov,29/Jul/16 15:02,28/Aug/17 16:39,14/Jul/23 06:20,01/Aug/17 11:41,,,,2.3,general,,,,,0,,,,"Here is test reproducing issue https://github.com/rossdanderson/IgniteDeadlock.

When I run this test observe this sequence:
- server starts
- client starts
- server sends 2000 messages to client, on client node communication backpressure pauses reads
- server gets write timeout and closes socket
- for some reason client does not detect that existing connection was broken and thinks that connection is still established (most probably because reads are paused and node does not try to access connection)
- when server tries to re-connec, client sees that connection already established and rejects connection, so server constantly tries to reconnect and does not exit from reconnect loop:
{noformat}
""main"" prio=6 tid=0x0000000001f4a000 nid=0x3588 waiting on condition [0x00000000021ed000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.ignite.internal.util.IgniteUtils.sleep(IgniteUtils.java:7414)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.reserveClient(TcpCommunicationSpi.java:2055)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage0(TcpCommunicationSpi.java:1970)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage(TcpCommunicationSpi.java:1936)
	at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1304)
	at org.apache.ignite.internal.managers.communication.GridIoManager.sendOrderedMessage(GridIoManager.java:1540)
{noformat}
",,krybakova,ross.anderson,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 11:39;krybakova;logs.zip;https://issues.apache.org/jira/secure/attachment/12879813/logs.zip",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 01 11:40:23 UTC 2017,,,,,,,,,,"0|i31og7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 11:40;krybakova;Verified in 1.9 - issue is not reproduced. Logs are attached.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Read-only optimistic transaction shouldn't throw an exception if entry version was not changed.,IGNITE-3601,12993274,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ascherbakov,ascherbakov,28/Jul/16 16:07,24/Jul/19 17:40,14/Jul/23 06:20,03/Oct/16 10:14,,,,1.8,,,,,,0,,,,"Concurrent read only transactions reading the same key throw unexpected IgniteTxOptimisticCheckedException. 

They shouldn't do what because entry version was not changed.

See the reproducer in the attachment.",,AndreyVel,ascherbakov,githubbot,ntikhonov,sboikov,v.pyatkov,yzhdanov,,,,,,"dspavlov commented on issue #1001: IGNITE-3601 Read-only optimistic transaction shouldn't throw an excep…
URL: https://github.com/apache/ignite/pull/1001#issuecomment-514729678
 
 
   
   IGNITE-3601 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:40;githubbot;600","dspavlov commented on pull request #1001: IGNITE-3601 Read-only optimistic transaction shouldn't throw an excep…
URL: https://github.com/apache/ignite/pull/1001
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 17:40;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/16 16:08;ascherbakov;Test.java;https://issues.apache.org/jira/secure/attachment/12820721/Test.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Oct 03 10:14:39 UTC 2016,,,,,,,,,,"0|i31mpb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Aug/16 09:09;AndreyVel;Added test testConcurrentTxGet to CacheGetEntryAbstractTest
Run unit tests CacheGetEntryOptimisticSerializableSeltTest - 4 tests fail

Please, make review changes. Pull request https://github.com/apache/ignite/pull/915;;;","02/Aug/16 09:21;yzhdanov;[~ntikhonov], can you please take a look at the test and merge it to master. Then I would ask [~sboikov] to take a look. Seems Ignite has some issues in optimistic serializable txs.;;;","02/Aug/16 11:17;ntikhonov;[~AndreyVel],
I've done minor changes in your pull request and merged tests to master. Thank you for your contribution!;;;","29/Aug/16 12:34;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/1001

    IGNITE-3601 Read-only optimistic transaction shouldn't throw an excep…

    …tion if entry version was not changed.
    
    Read only serializable transactions are commiting without check.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-3601

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1001.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1001
    
----
commit 173577e4ee0c1ac853d9c66e3f1f5f5f7d888733
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2016-08-29T12:31:02Z

    IGNITE-3601 Read-only optimistic transaction shouldn't throw an exception if entry version was not changed.
    Read only serializable transactions are commiting without check.

----
;;;","05/Sep/16 14:20;v.pyatkov;I found incorrect behavior of the getAndPutIfAbsent  method of cache in transaction. By that reason the task has not be fixed yet.
[~sboikov] could you please look it?;;;","19/Sep/16 15:24;sboikov;In tx cache putIfAbsent does not properly handle case when old value is loaded from remote node, implemented fix, need verify TC.;;;","03/Oct/16 10:14;sboikov;Finalized fix for putIfAbsent, merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: MessagingTest.TestRemoteListenMultithreaded fails,IGNITE-3600,12993250,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,28/Jul/16 14:11,28/Jul/16 16:12,14/Jul/23 06:20,28/Jul/16 16:12,1.7,,,1.7,platforms,,,,,0,,,,Consistently fails on TC in master,,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jul 28 16:12:00 UTC 2016,,,,,,,,,,"0|i31mjz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/16 14:24;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/905

    IGNITE-3600 .NET: MessagingTest.TestRemoteListenMultithreaded fails

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3600

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/905.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #905
    
----
commit b7072d7052e2ec8471ef0bbc39dd2d647a17e944
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-28T14:16:06Z

    Merge remote-tracking branch 'community/ignite-1.6.3' into ignite-1.6.3

commit c9bcac21010c8228c52218d461a90f93a1f25f86
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-28T14:20:20Z

    Update test

commit 3a6d8a1c2672987df3a704f7c01e8867fa53d537
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-28T14:23:15Z

    Disable all tests except messaging

----
;;;","28/Jul/16 14:35;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/905
;;;","28/Jul/16 14:37;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/906

    IGNITE-3600 .NET: MessagingTest.TestRemoteListenMultithreaded fails

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3600

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/906.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #906
    
----
commit cb8daf429c3fc2b7b85c6c28e6fd1f942391e068
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-28T14:35:58Z

    Update test

----
;;;","28/Jul/16 16:06;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/906
;;;","28/Jul/16 16:12;ptupitsyn;merged to ignite-1.7 and master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteConfiguration.igniteWorkDir has no effect,IGNITE-3597,12993185,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ptupitsyn,ptupitsyn,28/Jul/16 08:52,04/Oct/16 11:11,14/Jul/23 06:20,04/Oct/16 11:10,1.5.0.final,,,1.8,general,,,,,0,,,,"U.setWorkDirectory method ensures that work dir is set only once.

If there are multiple nodes in a process, or a node is stopped and then started, IgniteConfiguration.igniteWorkDir is ignored.",,amashenkov,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3593,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Oct 03 12:13:19 UTC 2016,,,,,,,,,,"0|i31m5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Aug/16 06:18;vozerov;Andrew, 
Ticket is not implemented at all. ;;;","04/Aug/16 06:24;vozerov;Sorry for missing description, I forgot to move it here from dev list discussion. Essentially, we need to do the following:
1) When Ignite is about to start, we must resolve it's work directory and put it to {{IgniteConfiguration.workDirectory}} field.
Relevant code pieces: {{IgnitionEx$IgniteNamedInstance.intializeConfiguration}}.
Note that we should not put anything to static variables.

2) Rework all places (I see 18) where {{IgniteUtils.resolveWorkDirectory}} is called. Now it should accept three arguments: 
- instance's work dir you set on the step 1;
- path;
- ""delIfExists"" flag.

The main challenge here is to get the first argument in all the places where {{IgniteUtils.resolveWorkDirectory}} is called.;;;","05/Aug/16 09:11;amashenkov;GitHub Pull request available;;;","08/Aug/16 09:47;amashenkov;GitHub Pull Reqeust #920 available;;;","08/Aug/16 12:18;vozerov;Andrew, my comments:
1) UriDeploymentSpi - asteriks are not allowed in imports according to our code conventions.
2) UriDeploymentSpi.addDefaultUri() - semantically different lines must be delimited by an empty line.
3) HadoopTestTaskContext - I do not understand TODOs meaning.
4) HadoopUtils.jobLocalDir - line has more than 120 characters 
5) Missing Apache header
6) GridAbstractTest - work directory must be cleaned up in beforeTestsStarted().;;;","11/Aug/16 12:39;amashenkov;Done.;;;","23/Aug/16 13:19;vozerov;Andrew, my comments:
1) I do not see a place where new finally resolved work directory is set to {{IgniteConfiguration}}.
2) Why IgniteUtils.getValidWorkDir() doesn't use Ignite home as it was before (see old method {{IgniteUtils.setWorkDirectory}}?
3) {{MarshallerContextImpl}} - why do we set workDir in methods {{onContinuousProcessorStarted()}} and {{onMarshallerCacheStarted()}}? Looks like this is not needed.
4) {{IgniteTestResources}} - unused field {{workDir}}.;;;","27/Sep/16 10:05;vozerov;Adopted implementation to current branch state (mainly Hadoop changes). 
PR: #1121.;;;","03/Oct/16 08:15;vozerov;Tests almost ready. Need to re-run several suites before merge.;;;","03/Oct/16 12:13;vozerov;Almost all tests are fine. The last suspicious guy is ""Ignite Cache Full API Multi JVM"". Need to rerun it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: IgniteConfiguration.WorkDirectory has no effect,IGNITE-3593,12992916,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,vozerov,ptupitsyn,ptupitsyn,27/Jul/16 12:42,09/Nov/16 08:39,14/Jul/23 06:20,06/Oct/16 09:04,1.6,,,1.8,platforms,,,,,0,,,,"Temporary marshaller is created during startup, it sets the work dir, and it can't be changed after that (static state).",,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3597,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 09 08:39:08 UTC 2016,,,,,,,,,,"0|i31khr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jul/16 15:55;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/903

    IGNITE-3593 .NET: Fix IgniteConfiguration.WorkDirectory having no effect

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3593

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/903.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #903
    
----

----
;;;","28/Jul/16 06:24;vozerov;Pavel, my comments:
1) I believe it should be fixed in Java first. Otherwise, when it is finally fixed in Java nobody will notify you about that and we will end up with semi-correct solution forever. Moreover, having several nodes in a single process is not only about tests. This could occur normally when integrating with other frameworks, when running inside application servers, etc.. We should implement it correctly right away. You may create a ticket for Java issue (as I understand, we need to add the same property to {{IgniteConfiguration.java}}), and see if someone can pick it.
2) I am not sure that CPP code still works after your changes to JNI layer.
;;;","11/Aug/16 15:01;ptupitsyn;Ok, let's wait for the IGNITE-3597 and then just add tests in .NET to make sure it works.;;;","05/Oct/16 08:49;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/903
;;;","05/Oct/16 08:53;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1145

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3593

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1145.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1145
    
----
commit a4c63ae113931615e940ada2411ebce32dba5db8
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-09-30T07:45:13Z

    IGNITE-3998: IGFS: Enabled IgfsAbstractSelfTest.testCreateConsistencyMultithreaded. This closes #1129.

commit a12298c0baf19407f3110ba3c4f0aab88b67946d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-30T08:00:51Z

    IGNITE-3868: ODBC: Fixed connection string parsing. This closes #1051.

commit 5e7ef8644ad824b87d4797e59133eb783ff8b098
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:37:25Z

    Merge branch 'ignite-1.6.9' into ignite-1.6.10

commit 59b46d3e6ea073d054ca2262d676b055a74bbb1f
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:40:04Z

    IGNITE-2881: Fixed SPI queries.

commit 0b66d2d7b695cf370a4b8a717844ad67742c6090
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-03T09:04:03Z

    ignite-3601 Do not check version on commit for read-only serializable transactions.

commit 9f211e413332931f0fb1190744ddd7c7f38fd213
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-03T09:26:12Z

    IGNITE-3645: IGFS: Local secondary: Implemented update() operation. This closes #1003.

commit fa698d6fcfde0006423ef009337dbef58ac62515
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T10:33:12Z

    Fixed TcpDiscoverySnapshotHistoryTest intermittent failures caused by multicast IP finder.

commit bba019fd5076412ca43c10a32fd300b6031ccd0b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T14:25:20Z

    IGNITE-3980: Processed failing tests in query suites. This closes #1137.

commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit 7ea12d00351fdd73592c1709bf8bd596a471977e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-05T08:44:43Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect

commit dc93ad581ad127f2e2efc261cf15a498354679ed
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-05T08:48:59Z

    Fix test

----
;;;","05/Oct/16 08:54;ptupitsyn;Test added in .NET, seems fine.;;;","09/Nov/16 08:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1145
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Self-joins do not work in LINQ,IGNITE-3591,12992847,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,27/Jul/16 08:30,27/Jul/16 12:27,14/Jul/23 06:20,27/Jul/16 12:27,1.6,,,1.7,platforms,,,,,0,.net,,,"When joining the table on itself, the same table alias is used, leading to ambiguous column name error.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-07-27 08:30:10.0,,,,,,,,,,"0|i31k2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dependency to outdated Lucene 3.5.0,IGNITE-3562,12992168,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,veita,veita,25/Jul/16 07:29,12/Sep/18 16:46,14/Jul/23 06:20,11/Jul/17 19:29,1.6,,,2.1,general,,,,,0,full-text-search,important,,"Ignite 1.6.0 comes with Lucene 3.5.0 core as dependency, which dates back to the year 2011.

This makes it difficult to integrate with newer software.",,amashenkov,githubbot,liqweed,ptupitsyn,veita,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4547,,,,,,,,,,IGNITE-9495,,,,,,,,IGNITE-5371,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 12 06:50:37 UTC 2017,,,,,,,,,,"0|i31fvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/May/17 17:04;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1987

    IGNITE-3562: Updated updated Lucene version.

    updated to 4.10.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3562

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1987.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1987
    
----
commit f41b8322ffd704c30df5e4b6727b9b29522be3fc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-05-22T16:31:40Z

    Lucene dependency upgraded to version 4.10.4

----
;;;","22/May/17 17:11;amashenkov;Lucene dependency version updated to 4.10.4.
Waiting for TC tests.;;;","23/May/17 15:06;amashenkov;Tests looks good after upgrade to 4.10.4.

Upgrading to latest Lucene version 5.5.2 seems to be much easy 
if it made in 2 steps: 3.5.0 -> 4.x -> 5.x 
;;;","24/May/17 10:33;amashenkov;Dependency to Lucene updated up to 5.5.2 version.
TC test looks fine.;;;","30/May/17 09:45;vozerov;[~amashenkov], my comments:
1) {{GridLuceneIndex.query}} - is it ok that we use deprecated methods? Can we switch to non-deprecated counterparts?
2) {{GridLuceneInputStream.slice}} - please refactor to avoid anonymous classes.;;;","02/Jun/17 14:41;ptupitsyn;Investigated failures in .NET with latest master.
* Each test does {{cache.Clear()}} in the teardown
* One of the previous tests puts 20000 items into cache
* {{TestTextQuery}} observes data from previous test even though {{cache.IsEmpty}} is true

It seems like Lucene index is not cleared on {{cache.Clear()}}. We should add a test in Java to reproduce the problem first of all.;;;","05/Jun/17 18:53;amashenkov;I've port .Net test to java.
So, it was easy to find a usage of wrong lucene field type (it was doc uid).
;;;","05/Jul/17 11:48;amashenkov;PR updated to latest master. Conflicts resolved.;;;","10/Jul/17 10:21;vozerov;[~amashenkov], I see several conflicts with release branch. Could you please merge it and check if tests are ok?;;;","10/Jul/17 15:12;amashenkov;Conflicts has been resolved.
Waiting for TC tests.;;;","11/Jul/17 09:22;amashenkov;[~vozerov],
TC tests look fine.;;;","12/Jul/17 06:50;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1987
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unify type descriptor removal and destruction in IgniteH2Indexing,IGNITE-3560,12992019,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,sergi,sergi,23/Jul/16 06:37,27/Jul/16 10:47,14/Jul/23 06:20,26/Jul/16 07:42,,,,1.7,,,,,,0,,,,"Currently I see at least 3 places where we have to deal with table destruction:

1. unregisterCache() -> Schema.onDrop()
2. unregisterType() -> removeTable()
3. stop()

We need to refactor them to call the same logic which has to always do the following steps:
1. dataTables.remove()
2. GridH2Table.destroy()
3. U.closeQuiet(TableDescriptor.luceneIdx)
",,kromulan,sboikov,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3516,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 27 10:47:28 UTC 2016,,,,,,,,,,"0|i31eyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jul/16 06:40;sergi;The original reported issue is IGNITE-3516.;;;","25/Jul/16 08:40;kromulan;To me it seems that stop() and removeTable already deal with these issues or am I missing something ?;;;","25/Jul/16 13:46;sboikov;Hi Sergi,

I moved cleanup logic in new method TableDescriptor.onDrop and added some tests. Could you please review? Changes are in branch ignite-3560 (compare with master).

Thanks;;;","26/Jul/16 07:38;sergi;[~sboikov]

I pushed one minor change, otherwise looks good, please merge!;;;","26/Jul/16 07:42;sboikov;Merged into master (commit #44cabd8).;;;","26/Jul/16 07:43;sergi;[~kromulan]

You are missing the fact that the same thing was done in 3 different places differently and there were no tests for correct clean up. The error you've reported happened because of that. Now we are ok.;;;","27/Jul/16 10:47;kromulan;Yes that is true, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Affinity task hangs when Collision SPI produces a lot of job rejections & Failover SPI produces many attempts,IGNITE-3558,12991810,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,tledkov-gridgain,tledkov-gridgain,22/Jul/16 13:10,08/Sep/17 10:42,14/Jul/23 06:20,08/Sep/17 10:42,,,,2.3,compute,,,,,0,,,,"The test to reproduce:
{{IgniteCacheLockPartitionOnAffinityRunWithCollisionSpiTest.testJobFinishing}}

*Root cause*
{{GridJobExecuteResponse}} isn't set from target node because there is a confusion with {{GridJobWorker}} instances in the {{CollisionContext}}.

*Suggestion*
The method {{GridJobProcessor.CollisionJobContext.cancel()}}
use {{passiveJobs.remove(jobWorker.getJobId(), jobWorker)}}. 
*passiveJobs* is a ConcurrentHashMap and {{GridJobWorker.equals()}} implements as a equation of jobId.

So, when two thread try to cancel the two workers with *the same jobIds* we have the case:
- thread0 remove jobWorker0 & cancel jobWorker0.
- thread0 put jobWorker1 (because jobWorker0 already removed);
- thread1: (has a copy of jobWorker0) and try to cancel it.
- thread1: remove jobWorker1 instead of jobWorker0 (because jobId is used to identify);
- thread1: doesn't send ExecuteResponse because jobWorker0 has been canceled.

*Proposal*
Try to use system default equals for the GridJobWorker",,tledkov-gridgain,vozerov,yzhdanov,,,,,,,,,,"Modify the GridJobWorker. The tests are passed locally. Run at the TC;05/Dec/16 15:20;tledkov-gridgain;10800",,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,IGNITE-2310,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 06 10:58:51 UTC 2017,,,,,,,,,,"0|i31dnz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Dec/16 15:29;tledkov-gridgain;Pull request to run tests: [pull/1326|https://github.com/apache/ignite/pull/1326]
[Tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1326%2Fhead];;;","16/Feb/17 11:49;tledkov-gridgain;[[~vozerov], [~sboikov] please review the patch.;;;","05/Sep/17 07:05;vozerov;[~tledkov-gridgain], [~sboikov], any more comments here? Are we going implement anything as a part of this ticket?;;;","06/Sep/17 10:46;yzhdanov;I am ok with the changes.

[~tledkov-gridgain] please rerun team city and let's proceed.;;;","06/Sep/17 10:58;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F1326%2Fhead] are OK with me.

[~vozerov], please take a look.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid message send retry with GridTcpNioCommunicationClient,IGNITE-3547,12991777,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,sboikov,sboikov,22/Jul/16 10:55,19/Aug/16 07:41,14/Jul/23 06:20,19/Aug/16 07:41,,,,1.8,general,,,,,0,,,,"GridTcpNioCommunicationClient.sendMessage returns 'retry = true' if message send failed with IOException, after this the same client is used to retry send. But this client will contain already closed sessio, so sendMessage will always fail. Need remove old client and try create new one before retrying send.",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 19 07:41:03 UTC 2016,,,,,,,,,,"0|i31dgn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Aug/16 07:41;sboikov;Fixed (commit #a20ca35).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visrocmd returns emty list of caches,IGNITE-3541,12991745,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,22/Jul/16 09:09,22/Jul/16 11:19,14/Jul/23 06:20,22/Jul/16 11:19,1.6,,,1.7,visor,,,,,0,,,,"1. Start 3 nodes grid with attached config (copy in root fabric directory)
{{bin/ignite.sh visor.xml}}
2. Execute visorcmd with attached batch file
{{bin/ignitevisorcmd.sh visor.bat}}

",,pkonstantinov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jul/16 09:10;skozlov;visor.bat;https://issues.apache.org/jira/secure/attachment/12819578/visor.bat","22/Jul/16 09:10;skozlov;visor.xml;https://issues.apache.org/jira/secure/attachment/12819579/visor.xml",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 22 09:54:17 UTC 2016,,,,,,,,,,"0|i31d9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jul/16 09:54;pkonstantinov;Due to some changes of processing of batch mode, we need to change  bat-file:
open -cpath=visor.xml
cache -id8=@n0 -a
quit
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify build instructions to increase PermGen,IGNITE-3517,12991207,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,avinogradov,mstump,mstump,20/Jul/16 18:45,21/Jul/16 08:06,14/Jul/23 06:20,21/Jul/16 08:06,,,,,build,documentation,,,,0,,,,"When building, maven will OOM after exhausting PermGen. The getting started instructions page should be updated to increase PermGen size before building.

{{export MAVEN_OPTS=""-Xmx2g -XX:MaxPermSize=1024m""}}

{code}
Exception in thread ""main"" java.lang.OutOfMemoryError: PermGen space
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClassFromSelf(ClassRealm.java:401)
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:42)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	at org.eclipse.sisu.inject.MildElements.iterator(MildElements.java:74)
	at org.eclipse.sisu.inject.RankedBindings.remove(RankedBindings.java:68)
	at org.eclipse.sisu.inject.InjectorBindings.unsubscribe(InjectorBindings.java:96)
	at org.eclipse.sisu.inject.RankedBindings.remove(RankedBindings.java:117)
	at org.eclipse.sisu.inject.DefaultBeanLocator.remove(DefaultBeanLocator.java:122)
	at org.eclipse.sisu.inject.DefaultBeanLocator.remove(DefaultBeanLocator.java:156)
	at org.eclipse.sisu.plexus.ClassRealmManager.realmDisposed(ClassRealmManager.java:156)
	at org.codehaus.plexus.classworlds.ClassWorld.disposeRealm(ClassWorld.java:100)
	at org.apache.maven.plugin.DefaultExtensionRealmCache.flush(DefaultExtensionRealmCache.java:150)
	at org.apache.maven.plugin.DefaultExtensionRealmCache.dispose(DefaultExtensionRealmCache.java:167)
	at org.eclipse.sisu.plexus.PlexusLifecycleManager.dispose(PlexusLifecycleManager.java:373)
	at org.eclipse.sisu.plexus.PlexusLifecycleManager.unmanage(PlexusLifecycleManager.java:173)
	at org.codehaus.plexus.DefaultPlexusContainer.dispose(DefaultPlexusContainer.java:590)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:313)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
{code}",,avinogradov,dmagda,mstump,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jul 21 08:06:31 UTC 2016,,,,,,,,,,"0|i319xz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jul/16 18:53;dmagda;[~avinogradov], please take a look at this issue and provide your thoughts.;;;","21/Jul/16 08:06;avinogradov;Done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when stopping IgniteSemaphore and no method has been called previously to initialize semaphore with initializeSemaphore().,IGNITE-3515,12991101,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kromulan,kromulan,kromulan,20/Jul/16 12:39,22/Jul/16 12:09,14/Jul/23 06:20,22/Jul/16 11:54,1.6,,,1.7,data structures,,,,,0,,,,IgniteSemaphore stop() method does not check if internal synchronization object 'sync' is null hence null pointer exception is thrown.,,dmagda,githubbot,kromulan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,Fri Jul 22 12:09:19 UTC 2016,,,,,,,,,,"0|i319an:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jul/16 12:46;githubbot;GitHub user kromulan opened a pull request:

    https://github.com/apache/ignite/pull/875

    IGNITE-3515

    Null check for sync object added to IgniteSemaphore implementation stop method.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/kromulan/ignite IGNITE-3515

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/875.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #875
    
----
commit b72e5788e735f8ed34add648638450ba3f51bbca
Author: Krome Plasma <remi.malnar@tetryon.net>
Date:   2016-07-20T12:41:26Z

    IgniteSemaphore implementation stop method null check

----
;;;","20/Jul/16 14:08;kromulan;Simple test:

@Test
public void test ()
{
 try (Ignite ignite = Ignition.start())
 {
  ignite.semaphore(""REMI"", 100, true, true);
 }
};;;","20/Jul/16 18:49;dmagda;Krome,

Please add the test to {{IgniteSemaphoreAbstractSelfTest}} test class and update the pull-request.

After that check ""... Data Structures"" related tests on TeamCity as its said at the very end of this documentation
https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-1.CreateGitHubpull-request

I do understand that validation on TeamCity may look redundant but this will help you getting to know with the Ignite dev process.;;;","21/Jul/16 11:54;kromulan;[~dmagda] it's not possible for me to make a test for this as Ignite wraps exception and cannot catch it in the test and fail the test. I was also discussing this with [~vladisav].

In IgniteKernel:

   catch (Throwable e) {
                    errOnStop = true;

                    U.error(log, ""Failed to pre-stop processor: "" + comp, e);

                    if (e instanceof Error)
                        throw e;
                }

As you can see exception is not rethrown in case of NPE.;;;","21/Jul/16 11:58;dmagda;However the exception is printed out to the logger output, correct? In such a case you can use {{GridStringLogger}} in the test that will help to check that there is no {{NPE}} when your fixed is applied. Look for {{GridStringLogger}} usages to see how it's being used in the tests.;;;","21/Jul/16 13:02;kromulan;[~dmagda] Done, please recheck.;;;","22/Jul/16 09:22;kromulan;Updated pull request.;;;","22/Jul/16 11:54;dmagda;Thanks for the contribution!

I've reviewed and merged your changes.;;;","22/Jul/16 12:09;githubbot;Github user kromulan closed the pull request at:

    https://github.com/apache/ignite/pull/875
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CPP: JVM crash on ""Failed to start SPI"" exception.",IGNITE-3514,12991098,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,isapego,isapego,20/Jul/16 12:24,11/Jan/17 12:55,14/Jul/23 06:20,16/Dec/16 16:45,1.6,,,2.0,platforms,,,,,0,cpp,,,"On invalid {{discoverySpi}} configuration JVM may crash (i.e. specify negative {{socketTimeout}}). This is probably caused by the attempted call on some platform callback which is null in C++.

{noformat}
Failed to start manager: GridManagerAdapter [enabled=true, name=o.a.i.i.managers.discovery.GridDiscoveryManager]
class org.apache.ignite.IgniteCheckedException: Failed to start SPI: TcpDiscoverySpi [addrRslvr=null, sockTimeout=-300, ackTimeout=5000, reconCnt=10, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false]
        at org.apache.ignite.internal.managers.GridManagerAdapter.startSpi(GridManagerAdapter.java:270)
        at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.start(GridDiscoveryManager.java:681)
        at org.apache.ignite.internal.IgniteKernal.startManager(IgniteKernal.java:1571)
        at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:901)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1739)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1589)
        at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1042)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:549)
        at org.apache.ignite.internal.processors.platform.PlatformAbstractBootstrap.start(PlatformAbstractBootstrap.java:43)
        at org.apache.ignite.internal.processors.platform.PlatformIgnition.start(PlatformIgnition.java:76)
Caused by: class org.apache.ignite.spi.IgniteSpiException: SPI parameter failed condition check: sockTimeout > 0
        at org.apache.ignite.spi.IgniteSpiAdapter.assertParameter(IgniteSpiAdapter.java:344)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.spiStart(TcpDiscoverySpi.java:1757)
        at org.apache.ignite.internal.managers.GridManagerAdapter.startSpi(GridManagerAdapter.java:267)
        ... 9 more
[15:17:45,584][SEVERE][main][IgniteKernal%grid-0] Got exception while starting (will rollback startup routine).
class org.apache.ignite.IgniteCheckedException: Failed to start manager: GridManagerAdapter [enabled=true, name=org.apache.ignite.internal.managers.discovery.GridDiscoveryManager]
        at org.apache.ignite.internal.IgniteKernal.startManager(IgniteKernal.java:1576)
        at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:901)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1739)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1589)
        at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1042)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:549)
        at org.apache.ignite.internal.processors.platform.PlatformAbstractBootstrap.start(PlatformAbstractBootstrap.java:43)
        at org.apache.ignite.internal.processors.platform.PlatformIgnition.start(PlatformIgnition.java:76)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to start SPI: TcpDiscoverySpi [addrRslvr=null, sockTimeout=-300, ackTimeout=5000, reconCnt=10, maxAckTimeout=600000, forceSrvMode=false, clientReconnectDisabled=false]
        at org.apache.ignite.internal.managers.GridManagerAdapter.startSpi(GridManagerAdapter.java:270)
        at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.start(GridDiscoveryManager.java:681)
        at org.apache.ignite.internal.IgniteKernal.startManager(IgniteKernal.java:1571)
        ... 7 more
Caused by: class org.apache.ignite.spi.IgniteSpiException: SPI parameter failed condition check: sockTimeout > 0
        at org.apache.ignite.spi.IgniteSpiAdapter.assertParameter(IgniteSpiAdapter.java:344)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.spiStart(TcpDiscoverySpi.java:1757)
        at org.apache.ignite.internal.managers.GridManagerAdapter.startSpi(GridManagerAdapter.java:267)
        ... 9 more
[15:17:45,594][SEVERE][main][IgniteKernal%grid-0] Failed to stop component (ignoring): GridManagerAdapter [enabled=true, name=o.a.i.i.managers.discovery.GridDiscoveryManager]
java.lang.NullPointerException
        at org.apache.ignite.spi.discovery.tcp.internal.TcpDiscoveryNodesRing.clear(TcpDiscoveryNodesRing.java:400)
        at org.apache.ignite.spi.discovery.tcp.ServerImpl.spiStop0(ServerImpl.java:458)
        at org.apache.ignite.spi.discovery.tcp.ServerImpl.spiStop(ServerImpl.java:359)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.spiStop(TcpDiscoverySpi.java:1858)
        at org.apache.ignite.internal.managers.GridManagerAdapter.stopSpi(GridManagerAdapter.java:298)
        at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.stop(GridDiscoveryManager.java:1334)
        at org.apache.ignite.internal.IgniteKernal.stop0(IgniteKernal.java:1991)
        at org.apache.ignite.internal.IgniteKernal.stop(IgniteKernal.java:1860)
        at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:953)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1739)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1589)
        at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1042)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:549)
        at org.apache.ignite.internal.processors.platform.PlatformAbstractBootstrap.start(PlatformAbstractBootstrap.java:43)
        at org.apache.ignite.internal.processors.platform.PlatformIgnition.start(PlatformIgnition.java:76)
[15:17:45] Ignite node stopped wih ERRORS [name=grid-0, uptime=00:00:02:446]
unknown location(0): fatal error in ""TestRemoveAllKeys"": memory access violation occurred at address 0xffffffff, while attempting to  read inaccessible data
{noformat}",,githubbot,isapego,krybakova,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 11 12:55:44 UTC 2017,,,,,,,,,,"0|i3199z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/16 19:47;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1354

    IGNITE-3514: Fixed JVM crash.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3514

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1354.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1354
    
----
commit fd219cb5cb8b96fb925694e0fe8402b4bd66f369
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-12-15T19:44:37Z

    IGNITE-3514: Fixed JVM crash.

----
;;;","15/Dec/16 19:48;isapego;Ready for review.;;;","16/Dec/16 08:27;ptupitsyn;Not sure I understand exact problem and the fix. Is there a test to check that invalid configuration is handled gracefully?

> probably caused by the attempted call on some platform callback which is null in C++
In such cases {{ThrowOnMissingHandler}} is called, so we would see that in the log.;;;","16/Dec/16 13:25;isapego;Pavel, OK, I did not describe an issue and solution yesterday, this is my fault.

The issue is that we tried to delete the same value twice on failure - first in {{IgniteEnvironment}}, when receiving {{ON_STOP}} message from Java, and then in ""else"" branch, which handles node start failure. So I have removed the second delete, which solved the issue.

You are also right about the test. I'm going to add it.;;;","16/Dec/16 15:30;ptupitsyn;Looks good, see minor comment.;;;","16/Dec/16 15:40;isapego;Added test.;;;","16/Dec/16 16:42;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1354
;;;","16/Dec/16 16:44;ptupitsyn;Merged to master.;;;","11/Jan/17 12:55;krybakova;verified in 1.8.2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup worker is placed in the Thread's waiting queue using Thread.sleep method,IGNITE-3513,12991083,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sboikov,dmagda,dmagda,20/Jul/16 10:44,03/Aug/16 10:43,14/Jul/23 06:20,03/Aug/16 08:16,1.6,,,1.7,,,,,,0,,,,"There is a bug in current implementation of {{GridCacheTtlManager#CleanupWorker}}.

Refer to the implementation's code snippet and the details below.

{code}
EntryWrapper first = pendingEntries.firstx();

 if (first != null) {
   long waitTime = first.expireTime - U.currentTimeMillis();

   if (waitTime > 0)
      U.sleep(waitTime);
 }
{code}

1. Put first item with TTL = 1 hour. CleanupWorker will go to sleep for 1 hour.

2. Put second item with TTL = 1 minute. Since 
CleanupWorker's thread sleeps now, second item will not be expired at the time.

NOTE: This scenario is easily to reproducible if first and second items are put into cache asynchronously. If try to put them in same thread one-by-one expiration may work fine.
",,agura,dmagda,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 29 14:19:35 UTC 2016,,,,,,,,,,"0|i3196n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jul/16 10:58;sboikov;Andrey, please take a look, it seems this was broken after your commit in GridCacheTtlManager: #b58e1ac.;;;","20/Jul/16 12:06;agura;{{CleanupWorker}} is just a helper worker that should expire entries in case when no cache operations in progress. {{GridCacheTtlManager.expire()}} method should be invoked from {{GridCacheUtils.unwindEvicts()}} method after every operation. 

May be there is some race or case where {{unwindEvicts()}} can be not invoked.;;;","20/Jul/16 12:09;dmagda;[~agura], imagine the case when you placed two entries in the cache with TTLs as in the description and that you're waiting for EXPIRED events. If there are no cache updates happen during a minute (TTL of the second placed entry) then you won't get EXPIRED event in time. This should be fixed.;;;","21/Jul/16 18:27;agura;I see two possible solutions:

  * {{CleanupWorker}} can sleep for little periods of time and periodically call {{expire()}} method.
  * {{GridCacheTtlManager.addTrackedEntry()}} method can check some volatile field with nearest expiration time and notify {{CleanupWorker}} in case when added entry has expiration time less than nearest expiration time. It requires usage of synchronization for {{wait/notify}} and can lead to contention in case when added entries have decreasing sequence of expiration time values. See commit https://github.com/apache/ignite/pull/880/commits/f3261b50f17848339b141a900f8c97a61bdbc7ca It requires performance testing.;;;","25/Jul/16 14:30;EdShangGG;At the moment I have written benchmark for {{LockSupport.park/unpark}} and {{Object.wait/notify}}. The results are similar. So, I am going to write integration test to measure [~agura] solution compared to previous one.;;;","25/Jul/16 14:52;agura;Did you test situation with constantly decreasing expiration time? It should lead to contention on mutex in case with wait/notify.;;;","25/Jul/16 17:43;EdShangGG;I have some thoughts about how to resolve this issue.

I have written this [benchmark|https://gist.github.com/EdShangGG/9152d7273f9b92049861ab2e96c74d81].

Results (ops/us) :

||Threads||Park||Unpark||Wait||Notify||
|2|2.404|3.762|0.013|5.627|
|4|2.054|3.579|0.005|5.816|
|8|1.400|3.545|0.001|6.140|
|16|0.645|4.736|0.001|5.899|
|32|0.310|5.299|10⁻⁴|6.226|
|64|0.145|5.592|10⁻⁵|6.138|

Also, I have measured cost of {{ConcurrentSkipListSet}} invocations. It's cheap enough, lower than 1 us even in high contended mode (adding, getting first, 32 threads).

||Solution||Pros||Cons||
|{{wait/notify}}|-  better performance than {{park/unpark}}
* no extra cost in comparision with {{sleep}}|- delay between adding/updating entry and its handling can be more that tens of milliseconds in high-contented mode 
* some slow down of adding entry in comparision with {{sleep}}|
|{{park/unpark}}|- low delay between adding/updating entry and its handling (up to tens of microseconds)
* no extra cost in comparision with {{sleep}}|- some slow down of adding entry in comparision with {{sleep}}
-  worse performance than {{wait/notify}}|
|{{sleep}}| * no slow donw of adding entry |- extra work (will check periodically independent on data)
* millisecond resolution between checks|

[~agura], please, take a look. Can you suggest which solution we should realize? ;;;","26/Jul/16 05:31;agura;From my point of view this benchmark is too synthetic. It would be better measure throughput of real cache operations with different solutions. Make sure that JVM has enough memory during measurements.;;;","26/Jul/16 18:15;EdShangGG;I have implemented all 3 solutions and have written benchmark which calls put on a cache. Also, cache was set up by different ExpiryPolicy:
# Every call will return longer duration (will not cause to tll manager call)
# Every call will return shorter duration (will cause to ttl manager call almost on every put)
# The same for ~25% of put 
# The same for ~50% of put 
# The same for ~75% of put 

Result for *1* ExpriryPolicy:
|Thread|Sleep|Wait|Park|
|1|95.774 ± 9.485|100.619 ± 3.311|95.328 ± 2.900|
|2|159.367 ± 2.406|156.041 ± 21.609 |146.707 ± 30.226 |
|8|320.103 ± 13.563|363.244 ± 21.972 |304.689 ± 33.815 |
|32|325.425 ± 21.158|338.598 ± 47.244 |293.312 ± 163.217|

Result for *2* ExpriryPolicy:
|Thread|Sleep|Wait|Park|
|1|96.531 ± 6.131 |74.079 ± 11.475|79.409 ± 7.601 |
|2|160.328 ± 4.564 |141.114 ± 17.923|136.221 ± 19.689 |
|8|303.050 ± 87.307 |312.677 ± 12.250 |296.855 ± 33.939 |
|32|331.613 ± 12.203|326.083 ± 43.221 |311.397 ± 54.398 |

Confident intervals are too wide. I will run this benchmark at night.
;;;","27/Jul/16 09:02;EdShangGG;Night benchmark run (sleep duration - 10ms, numbers - ops/ms).

Result for *1* ExpriryPolicy:
|Thread|Sleep|Wait|Park|
|2|161.508 ± 1.308|170.009 ± 2.791|163.672 ± 2.856|
|4|263.062 ± 3.680|274.452 ± 3.191|263.886 ± 5.375|
|8|328.178 ± 4.100|378.947 ± 24.256|327.398 ± 8.166|
|16|331.939 ± 3.376|367.014 ± 6.759|324.264 ± 30.517|
|32|340.865 ± 3.612|370.433 ± 2.863|341.507 ± 4.826|


Result for *2* ExpriryPolicy:
|Thread|Sleep|Wait|Park|
|2|167.343 ± 2.423|148.122 ± 2.108|141.759 ± 4.842|
|4|260.494 ± 2.344|251.488 ± 5.418|221.650 ± 1.996|
|8|333.675 ± 3.024|325.235 ± 3.193|330.027 ± 3.249|
|16|336.898 ± 4.852|344.233 ± 4.319|335.587 ± 3.450|
|32|346.102 ± 3.045|351.342 ± 3.727|339.795 ± 4.816|

Result for *3* ExpriryPolicy:
|Thread|Sleep|Wait|Park|
|2|163.042 ± 3.640|155.299 ± 1.977|150.011 ± 3.164|
|4|257.366 ± 3.600|256.394 ± 2.352|227.143 ± 2.704|
|8|330.468 ± 4.112|329.907 ± 24.981|318.291 ± 4.997|
|16|326.528 ± 3.263|345.385 ± 2.834|326.629 ± 3.275|
|32|336.828 ± 4.916|352.499 ± 3.689|331.759 ± 6.301|

Result for *4* ExpriryPolicy:
|Thread|Sleep|Wait|Park|
|2|165.767 ± 3.107|152.139 ± 1.882|142.256 ± 2.534|
|4|263.421 ± 3.162|249.717 ± 4.320|220.386 ± 3.418|
|8|332.505 ± 2.498|330.995 ± 4.075|319.970 ± 3.628|
|16|331.850 ± 3.934|342.258 ± 2.591|328.169 ± 3.960|
|32|342.669 ± 3.990|351.790 ± 3.482|335.425 ± 2.636|

Result for *5* ExpriryPolicy:
|Thread|Sleep|Wait|Park|
|2|161.109 ± 3.544|144.023 ± 1.787|140.389 ± 3.822|
|4|262.874 ± 4.848|252.311 ± 5.104|216.460 ± 3.625|
|8|335.351 ± 4.769|325.620 ± 3.335|326.554 ± 3.145|
|16|337.047 ± 3.524|342.082 ± 2.526|327.885 ± 13.494|
|32|337.168 ± 3.587|354.922 ± 4.035|336.269 ± 3.266|;;;","28/Jul/16 16:51;EdShangGG;[~sboikov] Please, take a look https://github.com/apache/ignite/pull/907.

Solution with {{wait/notify}} was chosen.;;;","29/Jul/16 08:21;sboikov;Eduard,

I did review, have few comments:
- in GridCacheTtlManagerNotificationTest you use internal event API, can this be changed to use public API?
- could you please also add multithreaded test verifying fix, something similar to your GridCacheTtlManagerNotificationTest: 20 threads concurently do put, 10 threads use small expire time, 10 threads use large expire time, when all puts are done expire event for small expire time should be received on time
- did you compare performance with/without your fix?

Thanks!;;;","29/Jul/16 14:19;EdShangGG;Benchmark result (16 thread, ops/ms):
||Version||100%||50%||0%||
|ignite-3513|331.856 ± 6.707|331.423 ±7.889|351.278 ± 11.186|
|ignite-1.6.3|345.594 ± 4.178|341.676 ± 8.279|351.402 ± 5.065|

A multithreaded test was added. 
GridCacheTtlManagerNotificationTest was rewritten on public API usage.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: IBinaryObject.ToBuilder loses type name,IGNITE-3512,12991069,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ptupitsyn,ptupitsyn,20/Jul/16 09:53,22/Jul/16 16:10,14/Jul/23 06:20,22/Jul/16 12:13,1.5.0.final,,,1.7,platforms,,,,,0,,,,"Steps to reproduce:
* Create a builder for a string type name, set field, put to cache
* On another node, read this object, call ToBuilder, call Build

Type name is not propagated with metadata, which leads to assertion error (with -ea) or ""Two binary types have duplicate type ID [typeId=949122880, typeName1=Security, typeName2=null]]"" error.

Unit test:
{code}
        [Test]
        public void Test()
        {
            using (var grid1 = Ignition.Start(TestUtils.GetTestConfiguration()))
            using (var grid2 = Ignition.Start(new IgniteConfiguration(TestUtils.GetTestConfiguration(false)) {GridName = ""grid2""}))
            {
                var cache1 = grid1.CreateCache<int, int>(""cache"").WithKeepBinary<int, IBinaryObject>();
                var obj1 = grid1.GetBinary().GetBuilder(""myType"").SetField(""myField"", ""val"").Build();
                cache1[1] = obj1;

                var cache2 = grid2.GetCache<int, int>(""cache"").WithKeepBinary<int, IBinaryObject>();
                var obj2 = cache2[1];
                var val = obj2.GetField<string>(""myField"");
                var obj2Ex = grid2.GetBinary().GetBuilder(obj2).SetField(""myField"", val + ""_modified"").Build();

                cache2[2] = obj2Ex;
            }
        }
{code}

Workaround is to register the type by name on start:
{code}
BinaryConfiguration = new BinaryConfiguration
{
    Types = new[] {""myType""}
}
{code}",,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3504,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 22 16:10:26 UTC 2016,,,,,,,,,,"0|i3193j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jul/16 11:43;ptupitsyn;Another problem, apparently, is that field type can also be lost when Build is called without modifying any fields, but only reading them.;;;","21/Jul/16 16:26;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/879

    IGNITE-3512 .NET: IBinaryObject.ToBuilder loses type name

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3512

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/879.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #879
    
----
commit 11c7e8fe53461f84924e5c29893865191f236c8c
Author: Anton Vinogradov <av@apache.org>
Date:   2016-07-20T08:31:14Z

    Documentation fix

commit 9b55658749d0e2a869bbb3614034d8aa1f0e95c1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-20T11:14:50Z

    IGNITE-3405: IGFS: Restricted path modes interleaving, so that now only DUAL -> PRIMARY and DUAL -> PROXY paths are possible.

commit 6c5218f4d67c8e247f59dbe8deb58b51db2954a2
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-20T11:15:11Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.2' into gridgain-7.6.2

commit c25cd4600bd7254d051048034ad4781deb833aae
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-21T14:11:12Z

    IGNITE-3512 .NET: IBinaryObject.ToBuilder loses type name

commit e4a95a3927d8cac0dd2839d4f483f50b691015cc
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-21T14:15:01Z

    wip

commit 0e8547b81033fc3fe053121460830fde22b88529
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-21T14:35:48Z

    Fix metadata propagation

commit 3a7f35ea56a320cccfd275cafdef557764c59d14
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-21T14:36:25Z

    wip

commit 77e706ce5e4541d1c4c555caca647574e650e607
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-21T14:39:54Z

    wip

commit 14d99f50e906490bc5342dd673c520fc9cb5b033
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-21T15:23:47Z

    synopsis

commit 8af51e7013123388b122c5618c71254ce63d740c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-21T15:32:23Z

    Fix meta update

commit b3152299deb10d3a4d89f8e288bafd115904aae5
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-21T15:43:53Z

    wip

----
;;;","22/Jul/16 11:09;vozerov;Pavel,
I do not like the idea of passing {{IBinaryType}} to {{BinaryFullTypeDescriptor}}. Instead, just extract required fields from type and pass it to type descriptor constructor with 4 arguments. 
Otherwise it looks very weird: {{IBinaryType}} is volatile entity. Some of it's fields are constant, but some may change over time (e.g. field's list). I do not like the idea of passing mutable entity which may vary from call to call to immutable descriptor. This makes code harder to understand.

Another point - will it work with planned dynamic type registration feature? You register type descriptor with serializer and several other fields set to {{null}}. Does it fit in you implementation of IGNITE-2703?;;;","22/Jul/16 11:52;ptupitsyn;Ctor call fixed, good point.

Yes, it should fit into IGNITE-2703, actually I've copied a piece of code from there.;;;","22/Jul/16 16:10;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/879
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Fix AffinityFunctionBase namespace and package description,IGNITE-3511,12990759,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,19/Jul/16 13:06,19/Jul/16 13:12,14/Jul/23 06:20,19/Jul/16 13:12,1.6,,,1.7,platforms,,,,,0,,,,,,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-07-19 13:06:56.0,,,,,,,,,,"0|i3176n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
misspelling and broken URL on Ignite features page,IGNITE-3507,12990728,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,pgarg,romario13@gmail.com,romario13@gmail.com,19/Jul/16 11:22,29/Aug/16 19:29,14/Jul/23 06:20,29/Aug/16 19:29,,,,,documentation,,,,,0,,,,"https://ignite.apache.org/features.html

1. ""Memached Support""

should be MemCached Support

2. link to Semaphore (Docs for this feature) are broken - 404
https://apacheignite.readme.io/docs/distributed-semaphore
",,dmagda,romario13@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Aug 04 19:15:18 UTC 2016,,,,,,,,,,"0|i316zr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Aug/16 19:15;dmagda;[~pgarg], please fix the issues listed in the ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObject keys can't be reused because of partition caching.,IGNITE-3505,12990718,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmagda,ascherbakov,ascherbakov,19/Jul/16 10:52,22/Jul/16 11:22,14/Jul/23 06:20,22/Jul/16 11:22,1.6,,,1.7,,,,,,0,,,,"BinaryObject can't be reused as key between caches because it's
actual implementation BinaryObjectImpl implements KeyCacheObject and
due to the fact caches partition, which is not recalculated later.

See org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.partition:

{code}
if (key instanceof KeyCacheObject && ((KeyCacheObject)key).partition() != -1)
            return ((KeyCacheObject)key).partition();
{code}

The issue can be reproduced with the following code:

{code}
public static void main(String[] args) throws IgniteException {
        IgniteConfiguration cfg = new IgniteConfiguration();
        cfg.setDiscoverySpi(new TcpDiscoverySpi().setIpFinder(new TcpDiscoveryVmIpFinder(true)));
        Ignite ignite = Ignition.start(cfg);
        CacheConfiguration<BinaryObject, BinaryObject> cfg1 = new
            CacheConfiguration<>(""Cache 1"");
        cfg1.setCacheMode(CacheMode.PARTITIONED);
        cfg1.setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL);

        IgniteCache<BinaryObject, BinaryObject> cache1 =
            ignite.getOrCreateCache(cfg1).withKeepBinary();

        CacheConfiguration<BinaryObject, BinaryObject> cfg2 = new
            CacheConfiguration<>(""Cache 2"");
        cfg2.setCacheMode(CacheMode.REPLICATED);

        cfg2.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
        IgniteCache<BinaryObject, BinaryObject> cache2 =
            ignite.getOrCreateCache(cfg2);

        BinaryObjectBuilder keyBuilder = ignite.binary().builder(""keyType"")
                .setField(""F1"", ""V1"").hashCode(""V1"".hashCode());

        BinaryObjectBuilder valBuilder = ignite.binary().builder(""valueType"")
                .setField(""F2"", ""V2"")
                .setField(""F3"", ""V3"");

        BinaryObject key = keyBuilder.build();
        BinaryObject val = valBuilder.build();

        cache1.put(key, val);
        cache2.put(key, val); // error

        System.out.println(cache1.get(key)); // error
        System.out.println(cache2.get(key)); 
    }
{code}

Corresponding user list thread: http://apache-ignite-users.70518.x6.nabble.com/Adding-a-binary-object-to-two-caches-fails-with-FULL-SYNC-write-mode-configured-for-the-replicated-ce-tp6343p6366.html",,agoncharuk,ascherbakov,dmagda,shahamit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/16 14:02;dmagda;3505.patch;https://issues.apache.org/jira/secure/attachment/12819093/3505.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 22 11:21:53 UTC 2016,,,,,,,,,,"0|i316xj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jul/16 14:02;dmagda;Fixed. Checking with TC.

Patch with the changes is attached to the ticket.;;;","21/Jul/16 05:32;dmagda;[~agoncharuk], please review the minor changes. Use the attached patch for review. TC looks good.;;;","21/Jul/16 12:20;agoncharuk;Denis,

Looks good to me.;;;","22/Jul/16 11:21;dmagda;Thanks, merged the changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: IBinaryObjectBuilder setter methods do not work,IGNITE-3504,12990716,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,19/Jul/16 10:48,25/Jul/16 13:20,14/Jul/23 06:20,25/Jul/16 13:20,1.6,,,1.7,platforms,,,,,0,.net,,,"SetShortField and other such methods are not tested and do not work properly.

Workaround is to use generic SetField method.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3512,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jul 25 13:20:27 UTC 2016,,,,,,,,,,"0|i316x3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jul/16 11:55;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/892

    IGNITE-3504 .NET: Fix IBinaryObjectBuilder setter methods

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3504

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/892.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #892
    
----
commit 6ab2eff21b8662f5063beb56e9985eb09efc0b0a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-22T12:38:46Z

    IGNITE-3504 .NET: Improve IBinaryObjectBuilder test coverage

commit 4a05f547f4d690b804faff5709fb567fa0a93c65
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-22T16:06:28Z

    wip

commit 2e3380fe1d4cf9b3471c3f47589a2d46ae6b4edd
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T10:13:41Z

    Merge remote-tracking branch 'remotes/upstream/master' into ignite-3504

commit a2e26b97e64a1e5e4e6dbf3dc189e10b4850923d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T10:43:14Z

    wip

commit d16c68435560015ff960a3f664e7a6cae748763f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T10:47:50Z

    wip

commit e16699889dd4a4aa82d907d2856b3b1e53cb1110
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T10:55:19Z

    wip array tests

commit 0f9f45adbf62140d405a08beb982ba210eebc7a3
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T11:02:56Z

    wip

commit 68cc59f9a0abd276d84d21f20956068d63aa5e84
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T11:05:57Z

    wip

commit 0144f1b2ab9ab452be106fcfcc3ff1c8f48fe1e7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T11:16:41Z

    fix test

commit ad4ee63b86a7f2657b59990195c57b33abf45da8
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T11:29:27Z

    wip

commit 6d97d7202431b8f209585552fd5e49c5a42f895d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T11:43:28Z

    wip tests

commit 0eec10babae23be9898687b861d55fce1811bbdb
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T11:50:07Z

    wip tests

commit e00b5c83d0db9b6027396040f1fa086147688471
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T11:53:22Z

    tests done, IBinaryObjectBuilder is fully covered

----
;;;","25/Jul/16 13:20;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/892
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Allow type name without assembly for type properties in app.config,IGNITE-3491,12990294,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,18/Jul/16 08:31,26/Sep/16 12:13,14/Jul/23 06:20,26/Sep/16 12:13,1.6,,,1.8,platforms,,,,,0,.net,,,,,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3485,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 26 11:58:32 UTC 2016,,,,,,,,,,"0|i314bj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Sep/16 11:06;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1115

    IGNITE-3491 .NET: Allow type name without assembly for type properties in app.config

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3491

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1115.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1115
    
----
commit 38d1d0491ab9e6858a58b90d0e5d892d9fc0e284
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-26T08:04:56Z

    IGNITE-3876: ODBC: Better handling of NULL values for output parameters. This closes #1099.

commit 548fe6a3fe4d38caebe3b45366f3e812b035d006
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-26T09:05:07Z

    IGNITE-3333: IGFS: Now it is possible to use ATOMIC cache for data blocks when fragmentizer it disabled. This closes #1108.

commit 8032fc2c8a7cf9f404eb75c65164bb2900aab79d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-26T09:31:30Z

    IGNITE-3912: Hadoop: Implemented new class loading architecture for embedded execution mode.

commit dd77c37473da80f04b579c8fc92441cac8ec9fc2
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-09-26T10:59:51Z

    IGNITE-3491 .NET: Allow type name without assembly for type properties in app.config

----
;;;","26/Sep/16 11:58;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/1115
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Web console: Refactoring server side code to services, append tests",IGNITE-3490,12990288,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,anovikov,anovikov,18/Jul/16 08:11,28/Jul/16 10:28,14/Jul/23 06:20,28/Jul/16 10:28,,,,,,,,,,0,,,,"Move code from routes to services.
serve/routes/clusters.js -> serve/services/cluster.js
serve/routes/igfs.js -> serve/services/igfs.js
...

For example use serve/routes/cache.js -> serve/services/cache.js
For test use as example test/backend/unit/CacheService.test.js",,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jul 28 10:28:31 UTC 2016,,,,,,,,,,"0|i314a7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jul/16 07:07;vsisko;Implemented services for agent download, cluster, cache, domain model and igfs.
Implemented tests for cluster, cache, domain model and igfs services.;;;","27/Jul/16 07:15;anovikov;Refactored route to service.
Please review: notebook, signin, signout, email, agent download.;;;","28/Jul/16 06:13;vsisko;Tested. Problems not found.;;;","28/Jul/16 10:28;anovikov;Reviewed. Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node started within SpringCacheManager does not inject Spring resources,IGNITE-3476,12989261,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sboikov,vkulichenko,vkulichenko,13/Jul/16 21:56,26/Jul/16 10:14,14/Jul/23 06:20,26/Jul/16 10:12,1.6,,,1.7,spring,,,,,0,,,,"{{SpringCacheManager}} uses {{Ignition.start(..)}} methods to start the node and therefore this node is not application context aware. {{@SpringResource}} and {{@SpringApplicationContextResource}} annotations do not work.

To fix this, {{SpringCacheManager}} should implement {{ApplicationContextAware}} interface and start the node using {{IgniteSpring.start(..)}} methods, providing the application context.",,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jul 25 11:24:01 UTC 2016,,,,,,,,,,"0|i30xxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jul/16 21:56;vkulichenko;{{SpringTransactionManager}} should be also fixed in the same way.;;;","22/Jul/16 13:43;EdShangGG;# Now {{SpringCacheManager}} and {{SpringTransactionManager}} implement {{ApplicationContextAware}} interface.
# {{Ignition.start}} calls were replaced by {{IgniteSpring.start}} calls. 
# New tests were added, which test this issue.

Link to PR:
https://github.com/apache/ignite/pull/885;;;","25/Jul/16 07:32;sboikov;Hi Eduard,

I revewed your fix, there were some issues I fixed, please take a look:
- missed apache headers (please setup this in your IDE)
- all tests should be added in some suite, otherwise they are not executed on TeamCity

I see that SpringCacheManager/SpringTransactionManager can be configured with cfgPath or cfg, could you please extend your tests to verify both cases?

Thanks;;;","25/Jul/16 11:24;EdShangGG;Hi Semen.

Thank you for your fixes. I have added new tests for testing configuration of {{SpringCacheManager}}/{{SpringTransactionManager}} by cfgPath.

Please, take a look.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Grid hung during load test with warning ""Failed to wait for partition map exchange""",IGNITE-3474,12989115,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sboikov,krybakova,krybakova,13/Jul/16 13:34,19/Mar/18 21:12,14/Jul/23 06:20,20/Jul/17 08:22,1.6,,,,,,,,,2,,,,"During load test grid hung:
{noformat}
[09:22:17,688][WARN ][exchange-worker-#137%null%][GridCachePartitionExchangeManager] Failed to wait for partition map exchange [topVer=AffinityTopologyVersion [topVer=97, minorTopVer=0], node=0fe0c0f2-65e1-4ad5-a8c9-92db997fcb7d]. Dumpin
g pending objects that might be the cause:
...
{noformat}
See attached file with more info from logs.

Notes:
The issue was also reproduced with IGNITE-3239 fixed. So, IGNITE-3239 doesn't seem to be a root cause. 

Configs:
1)
 - Benchmark name: IgniteCacheRandomOperationBenchmark 
 - Operations: put, put_all, get, get_all, invoke, invoke_all, remove, remove_all, put_if_absent, replace
- Heap: 4Gb for servers, 1Gb for clients
- 80 clients, 20 servers, 8 hosts
- Number of caches: 100
- Preload amount 250K
- Key range 500K
- Types of caches (atomicity mode): different (atomic, transactional)
- Types of caches (tiered storage mode): different (onheap without eviction, onheap with eviction, offheap_tired, offheap_values)
- Types of caches (indexing): different (with and without indexes)
- Types of caches (cache mode): different (partitioned, replicated)
- Backups count: 1
- Duration: 1h

2) 
- Benchmark name: IgniteCacheRandomOperationBenchmark 
- Operations: scan_query, sql_query, continuous_query
- Heap: 4Gb for servers, 1Gb for clients
- 20 clients, 80 servers, 8 hosts
- Number of caches: 12
- Types of caches (atomicity mode): different (atomic, transactional)
- Types of caches (tiered storage mode): different (onheap without eviction, onheap with eviction, offheap_tired, offheap_values)
- Types of caches (indexing): different (with and without indexes)
- Types of caches (cache mode): different (partitioned, replicated)
- Backups count: 1
- Duration: 1h

Attachments:
- part of log with the problem (for one of the servers) for config #2
- xml configs and property file that were used to run yardstick for config #2

Complete logs can be provided on demand.",,anuj_kumar@vertisage.com,cameronbraid,ghughal,jaipal_543,krybakova,MarkSummers,sboikov,ustas,varun,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/16 15:00;krybakova;132548_id2_172.25.1.33_part.log;https://issues.apache.org/jira/secure/attachment/12839572/132548_id2_172.25.1.33_part.log","18/Nov/16 14:54;krybakova;ignite-base-load-config.xml;https://issues.apache.org/jira/secure/attachment/12839569/ignite-base-load-config.xml","18/Nov/16 14:54;krybakova;run-load.properties;https://issues.apache.org/jira/secure/attachment/12839570/run-load.properties","18/Nov/16 14:54;krybakova;run-load.xml;https://issues.apache.org/jira/secure/attachment/12839571/run-load.xml",,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 19 21:12:39 UTC 2018,,,,,,,,,,"0|i30x1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/16 11:14;ustas;I reproduced this issue on ignite-1.7.0;;;","06/Dec/16 15:35;MarkSummers;Me too with 1.7.0;;;","19/Jan/17 18:21;ghughal;Same here, with 1.7.0.;;;","27/Mar/17 08:29;anuj_kumar@vertisage.com;I am facing this issue in 1.9. Second node couldn't join the cluster gives this error.
Failed to wait for partition map exchange;;;","18/Apr/17 07:41;jaipal_543;We are also facing the similar issue with  1.9. other nodes couldn't be able to join the cluster throwing this exception - 
Failed to wait for partition map exchange [topVer=AffinityTopologyVersion [topVer=8, minorTopVer=0], node=c42fa3d6-001c-461f-a071-af8d36a5a17a]. Dumping pending objects that might be the cause:;;;","21/Jun/17 06:29;sboikov;Hi Ksenia,

It looks like we do have hangs anymore in load test not with latest releases? Can we closed this issue?

Thanks!;;;","03/Jul/17 13:10;krybakova;[~sboikov] Semen, 
I've checked scenario #2 with 20 clients and 64 servers - issue is still there.
;;;","20/Jul/17 08:24;krybakova;Checked with version 2.1 - not reproduced, close the issue,;;;","19/Mar/18 21:12;varun;Hi Everyone,

Do we know the Jira that fixed this problem? I just wanted it for reference;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jdbc getTables() returns catalog as null,IGNITE-3467,12988841,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkouznet,aboudnik,aboudnik,12/Jul/16 20:19,14/Nov/18 12:30,14/Jul/23 06:20,14/Nov/18 12:27,1.6,2.6,,2.8,jdbc,,,,,0,usability,,,"Then some jdbc query tool uses null values as catalog name. An H2 database returns word ""DATABASE"" in CATALOG column, and then correctly resolves a fully-qualified name. I would recommend to do the same for these metadata.",,aboudnik,githubbot,ignitetcbot,pkouznet,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-10005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 14 12:30:46 UTC 2018,,,,,,,,,,"0|i30vcn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/18 12:55;githubbot;GitHub user pavel-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/5061

    IGNITE-3467: Return ""DATABASE"" as catalog name.

    Instead of returning ""null"" we now return ""DATABASE"" string constant.
    Changes affect only jdbc v2 and thin driver (no changes in server code).
    Also tests have been update according to the new behaviour.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3467

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5061.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5061
    
----
commit 815807fa8155e884d25fb8437c554c3743583a30
Author: Pavel Kuznetsov <palmihal@...>
Date:   2018-10-23T13:41:10Z

    ignite-3467: Return ""DATABASE"" as catalog name.
    
    Instead of returning ""null"" we now return ""DATABASE"" string constant.
    Changes affect only jdbc v2 and thin driver (no changes in server code).
    Also tests have been update according to the new behaviour.

commit a1cb69590d63c6e89f90e99c6f9fd57e6d5dc427
Author: Pavel Kuznetsov <palmihal@...>
Date:   2018-10-24T12:54:43Z

    ignite-3467: Added assertion message.

----
;;;","24/Oct/18 13:02;pkouznet;SQL tests run : https://ci.ignite.apache.org/viewQueued.html?itemId=2155612;;;","24/Oct/18 13:03;pkouznet;[~tledkov-gridgain] Could you please take a look at the patch?;;;","25/Oct/18 12:17;vozerov;[~pkouznet], my comments:
# {{JdbcThinDatabaseMetadata.CATALOG_NAME}} - I think it is better to use ""IGNITE"". It reflects what product is, ""DATABASE"" is too vague. The same for {{JdbcDatabaseMetadata.CATALOG_NAME}}
# {{JdbcThinDatabaseMetadata.columnRow}} - from what I see there are 24 rows, not 23
# We need to add tests for {{""""}} catalog - according to JDBC spec it should return empty set;;;","26/Oct/18 17:30;pkouznet;[~vozerov] Thank you, I've updated pull request.
RunAll https://ci.ignite.apache.org/viewQueued.html?itemId=2170131;;;","13/Nov/18 12:28;vozerov;[~pkouznet], please provide MTCGA bot ""visa"" confirming successful TC run.;;;","13/Nov/18 13:53;pkouznet;Merged master into branch. Issued RunAll using bot, waiting for visa comment.;;;","13/Nov/18 18:39;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Inspections: Core{color} [[tests 0 BuildFailureOnMetric |https://ci.ignite.apache.org/viewLog.html?buildId=2308382]]

{color:#d04437}ZooKeeper (Discovery) 4{color} [[tests 5|https://ci.ignite.apache.org/viewLog.html?buildId=2308385]]
* ZookeeperDiscoverySpiTestSuite4: IgniteCachePutRetryAtomicSelfTest.testPutAsyncStoreEnabled - 0,0% fails in last 100 master runs.

{color:#d04437}ZooKeeper (Discovery) 3{color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=2308384]]
* ZookeeperDiscoverySpiTestSuite3: GridCacheReplicatedNodeRestartSelfTest.testRestartWithTxEightNodesTwoBackups - 0,0% fails in last 100 master runs.

{color:#d04437}Platform .NET{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2308372]]
* exe: ServicesTest.TestWithKeepBinaryClient - 0,0% fails in last 100 master runs.

{color:#d04437}PDS (Direct IO) 2{color} [[tests 4|https://ci.ignite.apache.org/viewLog.html?buildId=2308364]]
* IgnitePdsNativeIoTestSuite2: IgniteUidAsConsistentIdMigrationTest.testStartTwoOldStyleNodes - 0,0% fails in last 100 master runs.
* IgnitePdsNativeIoTestSuite2: IgniteUidAsConsistentIdMigrationTest.testRestartOnExistingOldStyleId - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 6{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2308352]]
* IgniteCacheTestSuite6: CacheExchangeMergeTest.testMergeExchangeCoordinatorChange4 - 0,0% fails in last 100 master runs.

{color:#d04437}Continuous Query 3{color} [[tests 5|https://ci.ignite.apache.org/viewLog.html?buildId=2308357]]
* IgniteCacheQuerySelfTestSuite5: IgniteCacheContinuousQueryBackupQueueTest.testManyQueryBackupQueue - 0,0% fails in last 100 master runs.

{color:#d04437}Cache (Full API){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2308343]]

{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2308386&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","14/Nov/18 12:28;vozerov;[~pkouznet], merged to master.;;;","14/Nov/18 12:30;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/5061
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java crash: problematic frame org.apache.ignite.internal.binary.BinaryObjectImpl.hashCode(),IGNITE-3465,12988739,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,krybakova,krybakova,12/Jul/16 14:51,19/Jul/16 15:13,14/Jul/23 06:20,19/Jul/16 15:12,,,,,,,,,,0,,,,"During streaming load test some of JVMs crashed while logging info about ""Failed to wait for partition map exchange"" problem
{noformat}
[01:05:23,949][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Failed to wait for partition map exchange [topVer=AffinityTopologyVersion [topVer=61, minorTopVer=0], node=4f7b195a-62e3-4c32-b496-4a98de50b277]. Dumping
[01:05:23,949][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Ready affinity version: AffinityTopologyVersion [topVer=60, minorTopVer=0]
[01:05:24,107][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Last exchange future: GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode
[01:05:24,108][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Pending exchange futures:
[01:05:24,108][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Last 10 exchange futures (total: 48):
[01:05:24,109][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=7291b03d-ce91
[01:05:24,110][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=739ab624-7bce
[01:05:24,111][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=93572383-07e8
[01:05:24,111][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=3c24caa1-d4b2
[01:05:24,112][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=e762044c-8ccc
[01:05:24,118][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=5ffbe144-f843
[01:05:24,119][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=28199123-fa5b
[01:05:24,119][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=14d27ae8-ee26
[01:05:24,120][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=fea5c90e-0467
[01:05:24,120][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=a5370f23-42bc
[01:05:24,122][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Pending transactions:
[01:05:24,767][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtTxRemote [nearNodeId=fea5c90e-0467-462a-8755-928b539fb278, rmtFutId=a52022ed551-938a204f-bf03-451b-8425-be7047673bf6, nearXidVer=GridCacheVers
[01:05:24,769][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtTxRemote [nearNodeId=739ab624-7bce-4e4b-81cc-3696f65247bd, rmtFutId=ddfe12ed551-15e1d48c-8146-44ac-8d7b-370ea34fa44b, nearXidVer=GridCacheVers
[01:05:24,771][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] >>> GridDhtTxRemote [nearNodeId=5ffbe144-f843-4ad1-9ade-688a18f0f872, rmtFutId=401f12ed551-62727d5b-0dd3-48a0-bb04-72f7363ec19b, nearXidVer=GridCacheVers
[01:05:24,771][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Pending explicit locks:
[01:05:24,771][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Pending cache futures:
[01:05:24,771][WARN ][exchange-worker-#96%null%][GridCachePartitionExchangeManager] Pending atomic cache futures:
[01:05:24,786][WARN ][exchange-worker-#96%null%][TcpCommunicationSpi] Communication SPI recovery descriptors:
    [key=ClientKey [nodeId=14d27ae8-ee26-49a3-a7b5-6d1482850f21, order=54], msgsSent=181, msgsAckedByRmt=176, msgsRcvd=234, lastAcked=224, reserveCnt=1, descIdHash=952738531]
    [key=ClientKey [nodeId=5ffbe144-f843-4ad1-9ade-688a18f0f872, order=56], msgsSent=131, msgsAckedByRmt=128, msgsRcvd=168, lastAcked=160, reserveCnt=1, descIdHash=1038418485]
    [key=ClientKey [nodeId=876bec01-deea-4db8-a5ad-9159864ecae9, order=13], msgsSent=88, msgsAckedByRmt=88, msgsRcvd=88, lastAcked=88, reserveCnt=1, descIdHash=99878226]
    [key=ClientKey [nodeId=e762044c-8ccc-45d4-bd15-703baced868e, order=57], msgsSent=122, msgsAckedByRmt=112, msgsRcvd=128, lastAcked=128, reserveCnt=1, descIdHash=1468616075]
    [key=ClientKey [nodeId=e0454859-339d-4dd4-9766-bb96e71200c5, order=41], msgsSent=136, msgsAckedByRmt=128, msgsRcvd=165, lastAcked=160, reserveCnt=1, descIdHash=2000817554]
    [key=ClientKey [nodeId=93572383-07e8-4a6b-9482-642af1b87281, order=59], msgsSent=177, msgsAckedByRmt=176, msgsRcvd=186, lastAcked=176, reserveCnt=1, descIdHash=294201705]
    [key=ClientKey [nodeId=a5370f23-42bc-449d-93f7-83b04ea13668, order=52], msgsSent=282, msgsAckedByRmt=272, msgsRcvd=279, lastAcked=272, reserveCnt=1, descIdHash=1140700541]
    [key=ClientKey [nodeId=75627e99-8f2c-40e3-a0ba-79e28c1b4c32, order=44], msgsSent=139, msgsAckedByRmt=128, msgsRcvd=196, lastAcked=192, reserveCnt=1, descIdHash=1167475818]
    [key=ClientKey [nodeId=52f6e634-4ab7-4018-802f-c6f6cf7c9d3f, order=16], msgsSent=195, msgsAckedByRmt=192, msgsRcvd=197, lastAcked=192, reserveCnt=1, descIdHash=207990487]
    [key=ClientKey [nodeId=cd11646a-d9df-4611-bcc5-9b9625dd588b, order=17], msgsSent=187, msgsAckedByRmt=176, msgsRcvd=187, lastAcked=176, reserveCnt=3, descIdHash=1740221340]
    [key=ClientKey [nodeId=408d0657-3342-48c4-9ba0-883fba5ecea8, order=42], msgsSent=179, msgsAckedByRmt=176, msgsRcvd=205, lastAcked=192, reserveCnt=1, descIdHash=1712625195]
    [key=ClientKey [nodeId=aa52c200-1686-4985-acd7-7aadad71d874, order=50], msgsSent=89, msgsAckedByRmt=80, msgsRcvd=122, lastAcked=112, reserveCnt=1, descIdHash=1368331624]
    [key=ClientKey [nodeId=3c24caa1-d4b2-4827-9a12-be3472c09f2a, order=58], msgsSent=70, msgsAckedByRmt=64, msgsRcvd=55, lastAcked=48, reserveCnt=1, descIdHash=147228845]
    [key=ClientKey [nodeId=47935631-2877-4d7d-be19-08333ae87942, order=49], msgsSent=86, msgsAckedByRmt=80, msgsRcvd=112, lastAcked=112, reserveCnt=1, descIdHash=574036571]
    [key=ClientKey [nodeId=28199123-fa5b-4fa3-98d3-ee5c449662b0, order=55], msgsSent=151, msgsAckedByRmt=144, msgsRcvd=221, lastAcked=208, reserveCnt=1, descIdHash=1336106473]
    [key=ClientKey [nodeId=2c1893ad-ffe9-4f5f-92d2-5ecf38080337, order=43], msgsSent=76, msgsAckedByRmt=64, msgsRcvd=205, lastAcked=192, reserveCnt=1, descIdHash=1852478679]
    [key=ClientKey [nodeId=fff86516-4034-43af-b417-0d845f49c142, order=47], msgsSent=134, msgsAckedByRmt=128, msgsRcvd=135, lastAcked=128, reserveCnt=1, descIdHash=391243747]
    [key=ClientKey [nodeId=796d2fe8-4598-4794-9ec3-53ff3e4f1630, order=1], msgsSent=62, msgsAckedByRmt=61, msgsRcvd=112, lastAcked=112, reserveCnt=1, descIdHash=38728715]
    [key=ClientKey [nodeId=e4d6fe30-29da-4958-8a8b-f50c5c8c8f3f, order=2], msgsSent=62, msgsAckedByRmt=62, msgsRcvd=62, lastAcked=62, reserveCnt=1, descIdHash=225967964]
    [key=ClientKey [nodeId=c7955df7-d6ef-4a8e-976a-059eb644fa10, order=45], msgsSent=185, msgsAckedByRmt=176, msgsRcvd=244, lastAcked=240, reserveCnt=1, descIdHash=1092483052]
    [key=ClientKey [nodeId=6d9b4404-561d-475e-a9e2-4c854b2d10e7, order=28], msgsSent=159, msgsAckedByRmt=144, msgsRcvd=159, lastAcked=144, reserveCnt=1, descIdHash=377473114]
    [key=ClientKey [nodeId=bc0e61c1-fe0e-432e-bafa-6c159fcab4d9, order=6], msgsSent=0, msgsAckedByRmt=0, msgsRcvd=20, lastAcked=20, reserveCnt=1, descIdHash=523933760]
    [key=ClientKey [nodeId=739ab624-7bce-4e4b-81cc-3696f65247bd, order=60], msgsSent=43, msgsAckedByRmt=43, msgsRcvd=12, lastAcked=12, reserveCnt=1, descIdHash=1071751620]
    [key=ClientKey [nodeId=38ffbc41-33ac-4c5f-9569-197cefa678b3, order=48], msgsSent=161, msgsAckedByRmt=160, msgsRcvd=190, lastAcked=176, reserveCnt=1, descIdHash=1984129951]
    [key=ClientKey [nodeId=fea5c90e-0467-462a-8755-928b539fb278, order=53], msgsSent=151, msgsAckedByRmt=144, msgsRcvd=179, lastAcked=176, reserveCnt=1, descIdHash=1146015841]
    [key=ClientKey [nodeId=78d09665-9ded-4d1c-a46d-11a212af90fa, order=46], msgsSent=162, msgsAckedByRmt=160, msgsRcvd=192, lastAcked=192, reserveCnt=1, descIdHash=307409744]
    [key=ClientKey [nodeId=072afa77-8869-446a-8454-36e47956ede9, order=51], msgsSent=49, msgsAckedByRmt=49, msgsRcvd=18, lastAcked=18, reserveCnt=1, descIdHash=1937396373]

#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007fb6853771c4, pid=12976, tid=140414314960640
#
# JRE version: Java(TM) SE Runtime Environment (7.0_80-b15) (build 1.7.0_80-b15)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# J 1501 C2 org.apache.ignite.internal.binary.BinaryObjectImpl.hashCode()I (15 bytes) @ 0x00007fb6853771c4 [0x00007fb685377180+0x44]
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again
#
# An error report file with more information is saved as:
# hs_err_pid12976.log
[thread 140414317065984 also had an error]
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#
{noformat}

Load test config:
- Benchmark name: IgniteCacheRandomOperationBenchmark
- Operations: preloading (streaming)
- Heap: 8Gb for servers, 4Gb for clients
- 20 clients, 40 servers
- Preload amount: 8M
- Number of caches: 12
- Types of caches (atomicity mode): different (atomic, transactional)
- Types of caches (tiered storage mode)	: different (onheap without eviction, onheap with eviction, offheap_tired, offheap_values)
- Types of caches (indexing): different (with and without indexes)
- Types of caches (cache mode): partitioned
- Backups count: 1

Attachments:
- Error report file hs_err_pid12976.log
- xml configs and property file that were used to run yardstick",,krybakova,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/16 14:56;krybakova;hs_err_pid12976.log;https://issues.apache.org/jira/secure/attachment/12817445/hs_err_pid12976.log","12/Jul/16 14:53;krybakova;ignite-base-load-config.xml;https://issues.apache.org/jira/secure/attachment/12817441/ignite-base-load-config.xml","12/Jul/16 14:53;krybakova;run-load.properties;https://issues.apache.org/jira/secure/attachment/12817442/run-load.properties","12/Jul/16 14:53;krybakova;run-load.xml;https://issues.apache.org/jira/secure/attachment/12817443/run-load.xml",,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 19 15:12:42 UTC 2016,,,,,,,,,,"0|i30uq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jul/16 15:12;sboikov;Looks like crash happened at the moment when ignite tried to call 'toString' for non initialized BinaryObject (possible when object is in process of reading from socket). Added check in 'toString' to avoid crash. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: Entry placed on C++ side is not found on Java side,IGNITE-3455,12987784,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmagda,dmagda,dmagda,08/Jul/16 13:25,01/Aug/16 15:19,14/Jul/23 06:20,01/Aug/16 15:19,,,,,cache,platforms,,,,0,cpp,,,"If a custom key is used for cache values then the following scenario doesn't work:
- value is placed on C++ side;
- value is read on Java side (value is not found here).

Reverse direction is not workable as well.

HashCode is implemented properly in C++ and Java.

Fast debugging showed that a partition and primary node is calculated properly. Looks like that there is a serialization related issue that leads to the situation when ""equals"" fails during an object lookup.",,dmagda,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/16 14:40;isapego;cpp.zip;https://issues.apache.org/jira/secure/attachment/12816832/cpp.zip","08/Jul/16 13:27;dmagda;java.zip;https://issues.apache.org/jira/secure/attachment/12816822/java.zip",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Aug 01 15:10:47 UTC 2016,,,,,,,,,,"0|i30pbr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jul/16 13:27;dmagda;[~isapego], please attach C++ part of the code.;;;","08/Jul/16 14:40;isapego;Added C++ files.;;;","08/Jul/16 19:15;isapego;Ok, It seems C++ and Java {{DFId}} types have different type ids. This seems to be a cause - when I have changed C++ method {{BinaryType<area51::ignite::DFId>::GetTypeId()}} to return the same type id it all began to work. I'll examine this issue further.;;;","11/Jul/16 06:06;dmagda;[~isapego], know I see what should be going on. Type ID is serialized as a part of object's byte array. It means that ""equals"" will fail when we try to get an object from a Java side because the Java key will have a different type ID in its serialized byte array.

So seems that there is no issue at all. We have to update our C++ docs showing what must be defined to avoid such exception in the future. 

Also could you add a test that will check the scenario of this ticket (cache is updated on C++ side and data is retrieved from Java)?;;;","11/Jul/16 09:11;isapego;[~dmagda] I'll try to make such a test, although it does not seem like an easy thing to do.;;;","11/Jul/16 09:28;dmagda;Igor, try to talk to [~ptupitsyn] on how this is done on .Net side. Probably he would suggest something.;;;","11/Jul/16 12:14;isapego;On the closer look, seems like root cause is the following string in config:
{code:xml}
<bean id=""ignite.cfg"" class=""org.apache.ignite.configuration.IgniteConfiguration"">
	<property name=""binaryConfiguration"">
		<bean class=""org.apache.ignite.configuration.BinaryConfiguration"">
			<property name=""idMapper"">
				<bean class=""org.apache.ignite.binary.BinaryBasicIdMapper"">
					<property name=""lowerCase"" value=""false""/>
				</bean>
			</property>
		</bean>
	</property>
</bean>
{code}

In C++ predefined function {{GetBinaryStringHashCode}} always uses lower-case version of string to calculate hash. So when {{BinaryBasicIdMapper}} is configured to use non-lowercase algorithm, hashes for the same type names are going to be different for C++ and Java nodes.;;;","11/Jul/16 12:15;dmagda;The issue was in the fact that C++ always gets the type ID from a type name in the lower case form ignoring BinaryBasicIdMapper settings. Setting the setting to the following parameter fixed the issue

{code}
                <property name=""idMapper"">
                    <bean class=""org.apache.ignite.binary.BinaryBasicIdMapper"">
                        <property name=""lowerCase"" value=""true""/>
                    </bean>
                </property>
{code}

Igor, please do the following as a part of this ticket:

- update readme.io adding information on how {{BinaryConfiguration}} must be configured in case of the heterogeneous cluster ;
- add the tests.;;;","12/Jul/16 15:55;dmagda;Finally we could reproduce the following interoperability issue. If to perform the first put of a value of a particular type into a cache from C++ side and try to get this value from Java side right after that trying to deserialize it then {{BinaryContext.descriptorForTypeId}} won't be able to locate ""typeId""->""className"" mapping throwing the exception.

This happens because all the types that are defined in {{BinaryConfiguration}} are not registered in the marshaller cache. This action is postponed by the time when {{BinaryContext.descriptorForClass}} is called for the first time. However {{BinaryContext.descriptorForClass}} is called for {{BinaryObjectImpl}} and not for a specific Java type that is know to Java side.

This situation must be handled on Java side improving {{BinaryContext}} implementation.
;;;","18/Jul/16 07:48;dmagda;Fixed the issue on Java side. Checking the changes with TC
https://github.com/apache/ignite/pull/872;;;","18/Jul/16 12:31;dmagda;Fixed, merged.;;;","18/Jul/16 12:31;dmagda;[~isapego], please update the documentation and after that we're ok to close the ticket.;;;","20/Jul/16 13:39;isapego;[~dmagda], updated.;;;","20/Jul/16 18:42;dmagda;Igor, thanks.

Comments from my side.

1. I would rename the page to ""Platform Interoperability"" as it's done for .Net [1] and place it under ""Basic Concept"" section.

2. In this section [2] it's better to split ""Tab"" based examples (Java, C++ and XML) on step-by-step guidance: a) this is what must be done on C++ side; b) this is exemple code for Java; c) and this is XML configuration for C++ while that is for Java.

[1] https://apacheignite-net.readme.io/docs/platform-interoperability
[2] https://apacheignite-cpp.readme.io/docs/cross-platform-interoperability#defining-cross-platform-type;;;","21/Jul/16 10:18;isapego;[~dmagda],

Thanks for your comments. I've tried to improve documentation according to your comments.;;;","01/Aug/16 15:05;dmagda;[~isapego], did you have a chance to apply changes on the documentation side? Can this ticket be closed?;;;","01/Aug/16 15:10;isapego;[~dmagda], yes I've added the changes you have mentioned. I believe, we can close the ticket now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong count returned by count distinct and similar queries.,IGNITE-3448,12987531,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,ascherbakov,ascherbakov,07/Jul/16 16:38,17/Jan/17 13:31,14/Jul/23 06:20,19/Oct/16 18:26,1.7,,,1.8,sql,,,,,0,,,,"Partitioned cache is deployed on 3 nodes.
The code below outputs incorrect counts: 
14
14

{code}
       IgniteCache<Integer, Value> cache = grid(0).cache(null);

        cache.put(0, new Value(""v1""));
        cache.put(3, new Value(""v1""));
        cache.put(5, new Value(""v1""));
        cache.put(9, new Value(""v1""));

        cache.put(1, new Value(""v3""));
        cache.put(15, new Value(""v3""));
        cache.put(8, new Value(""v3""));

        cache.put(2, new Value(""v5""));
        cache.put(12, new Value(""v5""));

        cache.put(4, new Value(""v2""));
        cache.put(6, new Value(""v2""));

        cache.put(7, new Value(""v6""));

        cache.put(10, new Value(""v7""));

        cache.put(11, new Value(""v8""));

        cache.put(13, new Value(""v4""));
        cache.put(14, new Value(""v4""));

        QueryCursor<List<?>> qry = cache.query(new SqlFieldsQuery(""select count(distinct str) from Value""));

        for (List<?> objects : qry)
            System.out.println(objects.get(0));

        qry = cache.query(new SqlFieldsQuery(""select count(*) from (select 1 from Value group by str)""));

        for (List<?> objects : qry)
            System.out.println(objects.get(0));
       
{code}
",,amashenkov,ascherbakov,githubbot,sergi,shahamit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2143,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jan 17 13:31:15 UTC 2017,,,,,,,,,,"0|i30nsn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Oct/16 15:18;amashenkov;It seems DISTINCT in Aggregate functions is not supported as a grouping in inner queries.;;;","18/Oct/16 17:56;amashenkov;Distinct aggregates splits incorrectly if we have no collocated group by. We miss uniqueness check across nodes on Map step, and  as a consequence we have wrong numbers on Reduce step.

At first, we check if there is at least one aggregate with distinct. 
If so we can not propagate aggregates to map step queries, but compute aggregates on reduce step. Same goes for grouping if non collocated groups are used.

DISTINCT in MIN and MAX aggregates does not affect result, but MIN and MAX should be processed like other aggregates if there is another (non MIN or MAX) aggregate with distinct in query.

I've fixed the issue. Please let me know if i missed something.
;;;","18/Oct/16 17:59;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1170

    IGNITE-3448: Wrong count returned by count distinct and similar queries.

    Fixed. 
    Aggregates with DISTINCT work correctly with non collocated grouping.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3448

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1170.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1170
    
----
commit 2a52cc136f3eb10178f85365a724a6f465891562
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-18T17:16:33Z

    Implemented

commit 1820e952ef8932e0440ee18a811470e07b4be94c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-18T17:49:55Z

    Minor fix

----
;;;","18/Oct/16 20:33;sergi;Overall looks good to me. Though there are few things we need to fix:

1. Fix review comments on GitHub
2. I think we need tests with mixed distinct/non-distinct aggregates to make sure they do not interfere with each other.


;;;","18/Oct/16 22:23;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1170
;;;","18/Oct/16 22:32;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1171

    IGNITE-3448: Wrong count returned by count distinct and similar queries.

    fixed

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3448

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1171.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1171
    
----
commit 6b8020d3ffef55039d0afa55ed5925d9fdb914d2
Author: Sergi Vladykin <sergi@vladykin.com>
Date:   2016-07-13T17:19:25Z

    ignite-3254 - fixed
    (cherry picked from commit 4d2be72)

commit 11c7e8fe53461f84924e5c29893865191f236c8c
Author: Anton Vinogradov <av@apache.org>
Date:   2016-07-20T08:31:14Z

    Documentation fix

commit 9b55658749d0e2a869bbb3614034d8aa1f0e95c1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-20T11:14:50Z

    IGNITE-3405: IGFS: Restricted path modes interleaving, so that now only DUAL -> PRIMARY and DUAL -> PROXY paths are possible.

commit 6c5218f4d67c8e247f59dbe8deb58b51db2954a2
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-20T11:15:11Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.2' into gridgain-7.6.2

commit 0f1a0ccdbfc44658ee76024fc06ca39d81efc0a8
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-07-22T11:19:03Z

    IGNITE-3505: BinaryObject keys can't be reused because of partition caching.

commit ce53491daa67639397582ab8ba53e15195af9cdb
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-22T12:13:42Z

    IGNITE-3512: .NET: Fixed a bug in BinaryBuilder causing type name to be lost.

commit 7fb03c7ca0e4f64ff1629404f0b34d3d7a6e2bf1
Author: Alexandre Boudnik <alexandre_boudnik@epam.com>
Date:   2016-07-22T15:40:47Z

     IGNITE-3389 metadata result set throws NPE when closed - fixed

commit 3aaef96a5d2754613c8f7d24ff3045c258fad7d3
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2016-07-22T11:03:50Z

    IGNITE-3446 Visor CMD: improve usability for batch mode.
    (cherry picked from commit 71ef652)

commit c075ab33254b7178c6e6b0a7b16801e787189ced
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-25T05:54:05Z

    IGNITE-3530: IGFS: Added missing ""setTimes"" method to IgfsSeconadryFileSystem.

commit 9ecccc7c559342fcc6b67457f7456d6af2c084d8
Author: Alexandre Boudnik <alexandre_boudnik@epam.com>
Date:   2016-07-22T15:40:47Z

     IGNITE-3389 metadata result set throws NPE when closed - fixed

commit fd50502a95f23c5a664c0e5e43f42a9709a0eef8
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-07-25T10:53:41Z

    Merge branches 'gridgain-7.6.2' and 'ignite-1.6.3' of https://github.com/gridgain/apache-ignite into ignite-1.6.3

commit 6917ec403816416a6cbc7eb0a5a3696b692059e0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-07-25T13:12:51Z

    IGNITE-3504 .NET: Fix IBinaryObjectBuilder setter methods

commit ac31334b1072a810bc7f8e0e782ec6e84a9edd66
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-07-26T09:54:32Z

    IGNITE-3569 - Set copyOnRead property to FALSE for marshaller cache.

commit 14e33530de4a17f35f6aa665676c36db598937ef
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2016-07-26T09:46:05Z

    IGNITE-3476 Node started within SpringCacheManager does not inject Spring resources
    (cherry picked from commit a39770a)

commit f3e4f78fc96c98f4376ff86ab3e76ba54d6b09a4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-07-26T12:48:36Z

    Print debug information on 'waitForRent' timeout.
    (cherry picked from commit 7cf26d9)

commit 9d07e3e7a34d1cbe67a9656630bc6215cd213f0a
Author: sboikov <sboikov@gridgain.com>
Date:   2016-07-27T06:19:12Z

    ignite-3300 Fixed issue with partition value changing stored in KeyCacheObject.
    (cherry picked from commit a441bb9)

commit 4979c870735698dc51ce2c0db350a0f35c9b8b0e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-07-27T09:12:39Z

    Collector task do not honor node filters for caches and IGFS.

commit 7b3d1963cb7240ce3f59f5c9f81965bf5730bad0
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-07-29T09:03:20Z

    Fixed compatibility.

commit 4f27a47b81314b2eb52a5bc5b1d938bb586ae2aa
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2016-08-01T17:25:54Z

    IGNITE-3513 Cleanup worker is placed in the Thread's waiting queue using Thread.sleep method

commit ae23dab0af8caaccd3db1dca8e435b57b8844a31
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-08-03T10:10:03Z

    Visor: scan cache with filter.

commit a90d05b30f39da001156fdd4053790f8cd352406
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-04T05:00:15Z

    IGNITE-3408 - Provided basic implementation of AddressResolver

commit d945a5dd89b01f05a59e2b02fb86c1007736aff9
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-08-04T15:37:37Z

    version changed to: 1.6.4

commit 00f47d78216db5de75dda2a1b5fef2c1e65d9871
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-06T01:04:01Z

    IGNITE-3634 - SpringCacheManager should support null values

commit 018001011daff723d120834da7b4f57bad7f8f71
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-05-27T12:16:27Z

    IGNITE-2310 Lock cache partition for affinityRun/affinityCall execution

commit b9d9d84f4fcaf7f025b480769b612fc63b5082f4
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-09T11:04:47Z

    IGNITE-3659: Added special test suite to handle ignored tests.

commit e23aba4b060a9dfbee20384550a49274a479ac00
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-09T11:05:17Z

    Merge remote-tracking branch 'upstream/ignite-1.6.5' into ignite-1.6.5

commit d1a3904c8c8ed4a6cf750a2caa4e2e06cc471698
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-09T13:23:34Z

    IGNITE-2310 Lock cache partition for affinityRun/affinityCall execution -  add javadoc for test

commit e1262b2f2f4fb57fa8a75f6008f9e005ad07b5df
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-08-09T22:56:49Z

    Fixed copy constructor in ConnectorConfiguration

commit 151dfa7878d7d013cd93fac9d627bbdeb1ef8e18
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-10T06:48:29Z

    Revert ""version changed to: 1.6.4""
    
    This reverts commit d945a5dd89b01f05a59e2b02fb86c1007736aff9.

commit ff3e00caa892a7399622711b620fcb4dcfbbfb56
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-08-10T13:21:52Z

    IGNITE-3272 Fixed ""Memory consumption in ContinuousQueryHandler"". This close #930.

----
;;;","17/Jan/17 13:31;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1171
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
put/get value by AffinityKey,IGNITE-3447,12987405,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,samaitra,boliza,boliza,07/Jul/16 08:10,21/Dec/16 20:46,14/Jul/23 06:20,25/Oct/16 16:14,1.6,,,,cache,,,,,0,,,,"code is :

IgniteCache<Object, Address> ac = ignite.getOrCreateCache(""address"");
AffinityKey<String> ak1 = new AffinityKey<>(""mok"");
AffinityKey<String> ak2 = new AffinityKey<>(""mok"", ""mok"");
ac.put(ak1, new Address(""west""));
ac.put(ak2, new Address(""east""));

when ac.put(ak1, new Address(""west""));

throw exception:
Exception in thread ""main"" java.lang.NullPointerException
	at org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction.partition(RendezvousAffinityFunction.java:428)
	at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.partition(GridCacheAffinityManager.java:206)
	at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.primary(GridCacheAffinityManager.java:278)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.mapSingleUpdate(GridNearAtomicSingleUpdateFuture.java:601)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.map(GridNearAtomicSingleUpdateFuture.java:517)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.mapOnTopology(GridNearAtomicSingleUpdateFuture.java:433)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.map(GridNearAtomicAbstractUpdateFuture.java:202)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$22.apply(GridDhtAtomicCache.java:1007)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$22.apply(GridDhtAtomicCache.java:1005)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.asyncOp(GridDhtAtomicCache.java:703)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAsync0(GridDhtAtomicCache.java:1005)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.putAsync0(GridDhtAtomicCache.java:475)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync(GridCacheAdapter.java:2506)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.put(GridDhtAtomicCache.java:452)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2180)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.put(IgniteCacheProxy.java:1165)","jdk1.8 ,mac OS EI",boliza,dmagda,samaitra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 21 20:46:14 UTC 2016,,,,,,,,,,"0|i30n0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Oct/16 16:15;samaitra;This defect has been fixed in this following PR.

https://github.com/apache/ignite/pull/926

This defect is duplicate of https://issues.apache.org/jira/browse/IGNITE-3263;;;","21/Dec/16 20:46;dmagda;Duplicate of https://issues.apache.org/jira/browse/IGNITE-3263;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for odbc-example should be updated,IGNITE-3444,12987218,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,vozerov,vsidorova,vsidorova,06/Jul/16 17:09,05/Aug/16 09:52,14/Jul/23 06:20,20/Jul/16 11:27,1.6,,,1.7,documentation,odbc,,,,0,,,,"---------------------------------------------
DESCRIPTION
---------------------------------------------
# After user Install ignite odbc driver according to platforms\cpp\odbc\README.txt he/she should add directories with libignite-odbc.so to the LD_LIBRARY_PATH (this information is in platforms\cpp\odbc\README.txt - it's OK). As a rule, it will be done once 
# After that user can build and run odbc-example and this action could happens many times and this can be done much later after driver installation 
# Therefore LD_LIBRARY_PATH could be reseted and it will not be enough the platforms/cpp/examples/README.txt for odbc-example running

---------------------------------------------
PROPOSAL
---------------------------------------------
Add information about  adding path to libignite-odbc.so to the LD_LIBRARY_PATH into ""Running examples on Linux"" part of the platforms/cpp/examples/README.txt
For example, this text:
{noformat}
* Make sure path to libignite-odbc.so is added to LD_LIBRARY_PATH (usually it is /usr/local/lib)
{noformat}
",,githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 05 09:52:51 UTC 2016,,,,,,,,,,"0|i30luv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/16 17:24;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/856

    IGNITE-3444: Updated documentation for odbc-example.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-3444

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/856.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #856
    
----
commit d26a588686bee379aacd8ec2d14d0e04e026da78
Author: isapego <igorsapg@gmail.com>
Date:   2016-07-06T17:23:27Z

    IGNITE-3444: Updated documentation for odbc-example.

----
;;;","06/Jul/16 17:26;isapego;Updated. Final string looks like
{noformat}
 * Also for odbc-example make sure that path to ignite libraries is added to LD_LIBRARY_PATH (usually it is /usr/local/lib).
{noformat};;;","05/Aug/16 09:52;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/856
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Services: ServiceTopologyCallable is executed before system cache is started,IGNITE-3440,12987182,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmagda,dmagda,dmagda,06/Jul/16 15:03,08/Aug/16 15:17,14/Jul/23 06:20,13/Jul/16 11:28,1.6,,,1.7,,,,,,0,,,,"In rare cases it's possible to get the following exception

{code}
[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-0] 2016-07-01 16:03:54,120 22971 INFO  [com.workday.fabric.ignite.management.QuorumEventDispatcher] Storage count changed - oldvalue: 3 - newvalue: 4 
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 2016-07-01 16:03:54,242 1492  ERROR [org.apache.ignite.internal.processors.job.GridJobWorker] Failed to execute job [jobId=ac1b337a551-b26cd969-888f-4580-a2cb-ad10019da322, ses=GridJobSessionImpl [ses=GridTaskSessionImpl [taskName=o.a.i.i.processors.service.GridServiceProcessor$ServiceTopologyCallable, dep=LocalDeployment [super=GridDeployment [ts=1467389033352, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@14dad5dc, clsLdrId=989b337a551-b26cd969-888f-4580-a2cb-ad10019da322, userVer=0, loc=true, sampleClsName=java.lang.String, pendingUndeploy=false, undeployed=false, usage=0]], taskClsName=o.a.i.i.processors.service.GridServiceProcessor$ServiceTopologyCallable, sesId=9c1b337a551-33dedfed-ef93-405c-af02-cd37d7426df9, startTime=1467389034118, endTime=9223372036854775807, taskNodeId=33dedfed-ef93-405c-af02-cd37d7426df9, clsLdr=sun.misc.Launcher$AppClassLoader@14dad5dc, closed=false, cpSpi=null, failSpi=null, loadSpi=null, usage=1, fullSup=false, subjId=33dedfed-ef93-405c-af02-cd37d7426df9, mapFut=IgniteFuture [orig=GridFutureAdapter [resFlag=0, res=null, startTime=1467389034228, endTime=0, ignoreInterrupts=false, lsnr=null, state=INIT]]], jobId=ac1b337a551-b26cd969-888f-4580-a2cb-ad10019da322]] 

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 2016-07-01 16:03:54,242 1492  ERROR [org.apache.ignite.internal.processors.job.GridJobWorker] Failed to execute job [jobId=ac1b337a551-b26cd969-888f-4580-a2cb-ad10019da322, ses=GridJobSessionImpl [ses=GridTaskSessionImpl [taskName=o.a.i.i.processors.service.GridServiceProcessor$ServiceTopologyCallable, dep=LocalDeployment [super=GridDeployment [ts=1467389033352, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@14dad5dc, clsLdrId=989b337a551-b26cd969-888f-4580-a2cb-ad10019da322, userVer=0, loc=true, sampleClsName=java.lang.String, pendingUndeploy=false, undeployed=false, usage=0]], taskClsName=o.a.i.i.processors.service.GridServiceProcessor$ServiceTopologyCallable, sesId=9c1b337a551-33dedfed-ef93-405c-af02-cd37d7426df9, startTime=1467389034118, endTime=9223372036854775807, taskNodeId=33dedfed-ef93-405c-af02-cd37d7426df9, clsLdr=sun.misc.Launcher$AppClassLoader@14dad5dc, closed=false, cpSpi=null, failSpi=null, loadSpi=null, usage=1, fullSup=false, subjId=33dedfed-ef93-405c-af02-cd37d7426df9, mapFut=IgniteFuture [orig=GridFutureAdapter [resFlag=0, res=null, startTime=1467389034228, endTime=0, ignoreInterrupts=false, lsnr=null, state=INIT]]], jobId=ac1b337a551-b26cd969-888f-4580-a2cb-ad10019da322]] 
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] class org.apache.ignite.IgniteException: null

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] class org.apache.ignite.IgniteException: null
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2V2.execute(GridClosureProcessor.java:2007)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2V2.execute(GridClosureProcessor.java:2007)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:509)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:509)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6484)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6484)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:503)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:503)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:456)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:456)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1101)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1101)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1772)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1772)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1058)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1058)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:836)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:836)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:104)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:104)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:799)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:799)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at java.lang.Thread.run(Thread.java:745)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at java.lang.Thread.run(Thread.java:745)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] Caused by: java.lang.NullPointerException

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] Caused by: java.lang.NullPointerException
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.service.GridServiceProcessor.serviceTopology(GridServiceProcessor.java:662)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.service.GridServiceProcessor.serviceTopology(GridServiceProcessor.java:662)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.service.GridServiceProcessor.access$3800(GridServiceProcessor.java:106)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.service.GridServiceProcessor.access$3800(GridServiceProcessor.java:106)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceTopologyCallable.call(GridServiceProcessor.java:1798)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceTopologyCallable.call(GridServiceProcessor.java:1798)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceTopologyCallable.call(GridServiceProcessor.java:1774)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.service.GridServiceProcessor$ServiceTopologyCallable.call(GridServiceProcessor.java:1774)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2V2.execute(GridClosureProcessor.java:2004)

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2V2.execute(GridClosureProcessor.java:2004)
[16:03:54] :				 [testQuorumEvents] [Test Output]
[FabricRunner-7] 	... 14 more

[16:03:54] :		 [:fabric-tests:test]     [FabricRunner-7] 	... 14 more
[16:03:54] :				 [testQuorumEvents] [Test Output]
{code}

The exception happens because {{ServiceTopologyCallable}} gets access to the system cache that hasn't been started yet. The callable has to postpone its execution until the cache is up and ready.",,agoncharuk,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2983,,,,,,,,,,,,,,,,,"08/Jul/16 16:52;dmagda;ignite-3440.diff;https://issues.apache.org/jira/secure/attachment/12816854/ignite-3440.diff",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 12 21:37:32 UTC 2016,,,,,,,,,,"0|i30lmv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/16 15:11;dmagda;[~vkulichenko], [~agoncharuk],

Please review the fix. The changes are minor and attached in the diff file.

BTW, will such a fix work for caches which have SYNC rebalance mode (like the utility cache)?;;;","08/Jul/16 02:37;agoncharuk;Denis,

I would prefer if we waited for the system cache asynchronously using holdcc and resumecc. Even though is not likely, we still may have some sort of deadlock due to blocking wait. What do you think?;;;","08/Jul/16 14:00;dmagda;[~agoncharuk], good point!

I've reimplemented the fix using continuation API. Also I decided to use a timeout avoiding indefinite waits. Please see updated patch file.

The pull-request has been created (https://github.com/apache/ignite/pull/862) as well but it contains much more changes. Checking on TC.;;;","08/Jul/16 14:05;dmagda;[~vkulichenko], it would be perfect if you find the time for review because I'm modifying the code that was originally written by you.;;;","11/Jul/16 12:16;dmagda;TC looks good.;;;","12/Jul/16 21:37;agoncharuk;Denis,

Looks good to merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple IGFS on the same caches.,IGNITE-3432,12987115,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vsisko,vsisko,06/Jul/16 10:40,22/Nov/16 11:40,14/Jul/23 06:20,07/Nov/16 06:17,1.6,,,1.8,igfs,,,,,0,,,,"# Configure grid with two IGFSs which use the same caches.
# Run two server nodes. 
#* Topology is runned. Written data marked in both IGFSs.
# Run client node.
#* On node start showed validation message that two IGFSs cannot use the same caches.",,githubbot,tledkov-gridgain,vozerov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3625,,,,,,,,,,,"19/Oct/16 10:32;vsisko;test2IGFS-client.xml;https://issues.apache.org/jira/secure/attachment/12834134/test2IGFS-client.xml","19/Oct/16 10:32;vsisko;test2IGFS-server.xml;https://issues.apache.org/jira/secure/attachment/12834135/test2IGFS-server.xml",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 11:40:33 UTC 2016,,,,,,,,,,"0|i30l7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/16 14:02;tledkov-gridgain;The scenario isn't reproduced. 
Please clarify your point about the scenario. Where is the problem at the *p.2* or at the *p.3*?

- The problem had already fixed if one at the *p.2*. This is invalid configuration. 
The {{IgniteCheckedException(""Data/Meta cache names should be different for different IGFS instances configuration"")}} will be thrown.
- The issue is invalid if the problem at the *p.3*.;;;","19/Oct/16 09:45;vsisko;Now I see next behaviour (seel configs in attachments):
# Server node is started successfully. It contain two IGFS instances where second is unavailable.
# Client node is failed on start with exception: 
{code}
class org.apache.ignite.IgniteCheckedException: Meta cache names should be different for different IGFS instances configuration (fix configuration or set -DIGNITE_SKIP_CONFIGURATION_CONSISTENCY_CHECK=true system property) [metaCacheName=igfs-meta, locNodeId=53722f5a-8505-4bd9-91af-7b4a7324eb50, rmtNodeId=6b9e1371-84f1-4b2c-856b-33be541bf039, locIgfsName=other, rmtIgfsName=igfs]
	at org.apache.ignite.internal.processors.igfs.IgfsProcessor.checkIgfsOnRemoteNode(IgfsProcessor.java:400)
	at org.apache.ignite.internal.processors.igfs.IgfsProcessor.onKernalStart(IgfsProcessor.java:198)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:940)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1761)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1595)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1041)
	at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:963)
{code}
# Also is not runned second server node. Look like check of IGFS caches exists only on comparison of configurations on node connect.

I think that *p.1* is incorrect. That create grid that is not available for client nodes.;;;","01/Nov/16 15:14;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1201

    IGNITE-3432  Multiple IGFS on the same caches.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3432

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1201.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1201
    
----
commit a4c63ae113931615e940ada2411ebce32dba5db8
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-09-30T07:45:13Z

    IGNITE-3998: IGFS: Enabled IgfsAbstractSelfTest.testCreateConsistencyMultithreaded. This closes #1129.

commit a12298c0baf19407f3110ba3c4f0aab88b67946d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-30T08:00:51Z

    IGNITE-3868: ODBC: Fixed connection string parsing. This closes #1051.

commit 5e7ef8644ad824b87d4797e59133eb783ff8b098
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:37:25Z

    Merge branch 'ignite-1.6.9' into ignite-1.6.10

commit 59b46d3e6ea073d054ca2262d676b055a74bbb1f
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T07:40:04Z

    IGNITE-2881: Fixed SPI queries.

commit 0b66d2d7b695cf370a4b8a717844ad67742c6090
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-03T09:04:03Z

    ignite-3601 Do not check version on commit for read-only serializable transactions.

commit 9f211e413332931f0fb1190744ddd7c7f38fd213
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-03T09:26:12Z

    IGNITE-3645: IGFS: Local secondary: Implemented update() operation. This closes #1003.

commit fa698d6fcfde0006423ef009337dbef58ac62515
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T10:33:12Z

    Fixed TcpDiscoverySnapshotHistoryTest intermittent failures caused by multicast IP finder.

commit bba019fd5076412ca43c10a32fd300b6031ccd0b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-03T14:25:20Z

    IGNITE-3980: Processed failing tests in query suites. This closes #1137.

commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit 23461b8d33922772ef8e7217e9e87b3f3b0b37b1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T07:14:59Z

    IGNITE-4001: Timeouts for threads in Ignite pools. This closes #1130.

commit b94b0aeae4c42b1d35128c6b1de97e3fa318d497
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-06T07:22:50Z

    IGNITE-3163 IGFS: Added working directory support to IgniteHadoopIgfsSecondaryFileSystem. This closes #1030. This closes #1058. This closes #1132.

commit e6317e01fa8a0de03e15dcdd84a575c6b06ce701
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T09:03:48Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect. This closes #903. This closes #1145.

commit 952be8b995050b34379006dd6e739da3fe3b49e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2016-10-07T12:00:09Z

    Squashed commit of the following:
    
    commit 566881b695b8bc00e618fe9a9b4c86a8fd563cc1
    Author: sboikov <sboikov@gridgain.com>
    Date:   Fri Oct 7 13:08:38 2016 +0300
    
        minor
    
    commit 7fe88a1cb21f794ee55a176ab36d895cbf916528
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Oct 6 11:11:24 2016 +0300
    
        ignite-update-notifier fix after review
    
        (cherry picked from commit a10d2ff)
    
    commit f2de749f958a3b18dc479f8a5517d7bf9362b933
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Oct 4 12:12:08 2016 +0300
    
        ignite-2079-2 optimize import and change url path
    
        (cherry picked from commit 830a3cf)
    
    commit 0d1be85ad55b0aa91224690d6c112ae92e8bc0a9
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Sep 29 19:54:54 2016 +0300
    
        update-notifier remove parse xml, now parse like properties
    
        (cherry picked from commit 9ecaa29)
    
    commit e43bca6fb4528a7fc0dcb804a74fca1c59d7468b
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Sep 27 17:07:21 2016 +0300
    
        remove dom parser
    
        (cherry picked from commit d1653b2)

commit b9c776a8423471706ecb1dc6176b38f23e799077
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-10T08:52:57Z

    IGNITE-3235 Failed to initialize primitive boolean cache property of superclass

commit f9a0676fad7fd6c23e3c91c10d7e0412ccb27c06
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T07:23:01Z

    IGNITE-4041: Created separate processor for thread pools and refactored IO manager. This closes #1150.

commit 9a6cfce659df40b0a4624f19fd91c217b74bafea
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-10-11T10:59:57Z

    IGNITE-4014 Fixed ""Transaction hangs if entry processor failed during serialization"". This closes #1148.

commit 1938a17b01fac1e08c30011180bbcc3ed7374d83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-11T11:50:18Z

    IGNITE-3948: Fixed a bug causing TTL manager to continue tracking of evicted entries. This closes #1101.

commit 60d27547dfc6bd27c6d39cbcc523d0d1e872a821
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T11:51:00Z

    Merge remote-tracking branch 'upstream/ignite-1.6.10' into ignite-1.6.10

commit 359a392f1c53217c691c4c40762c51fd330666e2
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes
    
    (cherry picked from commit a5c85ca)

commit 01ca6db70933fb7f50f161a80cde9647e68a3710
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-10-11T13:18:40Z

    Merge remote-tracking branch 'origin/ignite-1.6.10' into ignite-1.6.10

commit 0659bebe04dc9c0b0a163bc95061519c553e678c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T11:49:36Z

    IGNITE-3972: Fixed a bug causing continuous queries to be lost for ATOMIC cache when key's primary node leaves topology. This closes #1133.

commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T12:44:08Z

    IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.

commit 2ab094e08373dc6667af44d48a38b4f044953a79
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-12T13:48:51Z

    IGNITE-2355: Hadoop: added ability to configure multiple job tracker addresses. This closes #1153.

commit eaf8ae246cc799c1353332fcac05cb3a8efab02c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-12T16:57:09Z

    IGNITE-4034 Get rid of specialized methods in platform targets

commit b1ec58f716ece3a5866dd654ebc707bef67caf57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-10-13T05:58:22Z

    IGNITE-4066 Fixed NPE.

commit 447e07c0bb5af75bce6a14612606904e4e3d9705
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-14T08:40:41Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL

commit 7adfbcf1ee7bbe0beb95fa82749a2e04449de8fa
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-14T14:48:14Z

    IGNITE-4060: Fixed a bug in RoundRobinLoadBalancing API causing exception when running closures after client node reconnect. This closes #1157.

commit 80abd1b72e4fc7b0b95212e7f53c700c0fe21156
Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
Date:   2016-10-14T16:33:07Z

    GG-11360 - Implement SQL queries cancellation (#18)
    
    * GG-11360 Merged IGNITE-2680 to ignite-1.6.3.
    
    * GG-11360 Test cleanup.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Added test for forever-running query cancellation on node restart.
    
    * GG-11360 Fixing race.
    
    * GG-11360 Added test for forever-running query cancellation on node stop.
    
    * GG-11360 Cleanup.
    
    * GG-11360 Support for local query cancellation/timeout.
    
    * GG-11360 Increase test duration.
    
    * GG-11360 Remove redundant catch block.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * Merge remote-tracking branch 'remotes/gg/ignite-1.6.10' into ignite-gg-11360
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.

commit 43ac3f5d5e8ab664e07f26d99be34f284f7941dd
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-17T08:26:12Z

    IGNITE-4054: Hadoop: added map-reduce plan debug output.

commit d3f042b9ba6c605500ab7155c40a41850babefdb
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-17T09:28:31Z

    Fixed indexing test in according to changes from #80abd1b.

----
;;;","01/Nov/16 15:16;tledkov-gridgain;[Tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1201%2Fhead];;;","06/Nov/16 14:18;vozerov;Taras,

Fix looks good to me, but there is some garbage files: 
{{SQL-slow.sql}}
{{idea-settings.jar}}
{{QQQTest.java}}
{{HadoopTest.java}}

Please remove them and go ahead with merge.;;;","22/Nov/16 11:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1201
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpCommunicationSpi: potential message lost during reconnect,IGNITE-3428,12986801,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,05/Jul/16 12:40,14/Dec/16 10:56,14/Jul/23 06:20,06/Jul/16 14:11,,,,1.8,general,,,,,0,,,,"Added test reproducing lost message during reconnect: IgniteCacheMessageRecoveryIdleConnection. 

It is possible that method 'send' finished, then connection closed, there are unacknowledged messages, but communication does not try to reconnect (if there are no others messages to be sent to this node).

Looks like there are at least 2 issues:
- 'onDisconnected' checks result of 'clients.remove(id, rmv)' to trigger reconnect. this is not saf (e.g. client is removed when session is closed on idle timeout)
- 'onDisconnected' checks that messagesFutures() collection is not empty, but 'onDisconnected' is erroneously called before all futures are polled from closing session (GridNioService.AbstractNioClientWorker.close)",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 06 14:11:51 UTC 2016,,,,,,,,,,"0|i30jaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/16 14:11;sboikov;Fixed in master (commit #e9a508e).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect result of IgfsGlobalSpaceTask for unlimited IGFS,IGNITE-3423,12986766,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vsisko,vsisko,05/Jul/16 10:16,12/Sep/16 08:26,14/Jul/23 06:20,07/Sep/16 14:13,1.6,,,1.8,igfs,,,,,0,,,,"Expected that result will contain configured IGFS space limit or 0 when IGFS space is unlimited. 
Now for unlimited IGFS wrong value is returned. ",,githubbot,tledkov-gridgain,vozerov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 12 08:26:51 UTC 2016,,,,,,,,,,"0|i30j2n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Sep/16 11:08;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1032

    IGNITE-3423  Incorrect result of IgfsGlobalSpaceTask for unlimited IGFS

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3423

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1032.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1032
    
----
commit 12fd4976f482ebc43831754645e34042c9073b2d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-08-25T09:29:04Z

    Fixed GridQueryParsingTest.

commit 12f532986677c30a716f73aeaa7d3587dd701f55
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-01T14:05:15Z

    Merge remote-tracking branch 'remotes/community/ignite-1.6.6' into ignite-1.6.7

commit ae7765329fd6f7d50d13183d13626f39c5682334
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-09-02T15:01:12Z

    IGNITE-2208 - Queries with object arguments doesn't work wth BinaryMarshaller.

commit 7a84ab6a9163ca31fbcfcc6d7ff27e06bf9babef
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:05:16Z

    IGNITE-3827: Removed double marshalling of keys in DataStreamerImpl.addData(Map) method.

commit 7bb961fd0a2e78334d33b6bc279c4edc323c246a
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:05:54Z

    Merge remote-tracking branch 'upstream/ignite-1.6.7' into ignite-1.6.7

commit e3c4868d6737e5a0f0b90f99666242865add750c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-02T15:23:09Z

    IGNITE-3829: Optimized affinity key field name handling.

commit e9c797fd964727882ad6f40f2a452b17ae7c857e
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:47:40Z

    IGNITE-2946: CPP: Optimized GetNext() method for cursors. This closes #992.

commit c992213274ec5872ef7ce359efa51e26003424ad
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:49:42Z

    IGNITE-3760: ODBC: Added tests for supported SQL92 string functions. This closes #1006.

commit d06eaa2344a753e08d1e3cb00e6b4ab83c6a9a01
Author: isapego <isapego@gridgain.com>
Date:   2016-09-04T13:52:04Z

    IGNITE-3801: ODBC: Added tests for OUTER JOIN. This closes #1027.

commit f8ae67456703e63e3afc9bb5c21d81d576d59448
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-04T14:09:08Z

    IGNITE-3651 IGFS: Implemented ""usedSpaceSize()"" operation for local secondary file system. This closes #1009.

commit fc2fe7bf1905675258d40932a4ff649156c17488
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-04T14:12:35Z

    IGNITE-3646: IGFS: Added test for symlinked mkdirs on local secondary file system. This closes #1013.

commit df37a8e1652b7765aa50986660d9e29aac5142e0
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-05T11:07:29Z

    IGNITE-3423 Incorrect result of IgfsGlobalSpaceTask for unlimited IGFS

----
;;;","05/Sep/16 12:26;vozerov;Taras, my comments:

1) It looks like the fix itself must be encapsulated in the method {{IgfsContext.maxSpaceSize}}.
2) {{IgfsTestMaxSizeTest}} - invalid naming, word {{test}} is written two times. It should be something like {{IgfsMaxSizeSelfTest}}.
3) Test class is not added to test suite, so it will not run on TeamCity.

Vladimir.;;;","06/Sep/16 02:43;tledkov-gridgain;Fixed. Please take a look;;;","12/Sep/16 08:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1032
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoverySpi: lots of duplicated node failed messages,IGNITE-3418,12986712,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,05/Jul/16 04:11,29/Nov/18 17:07,14/Jul/23 06:20,06/Jul/16 14:11,1.6,,,1.7,general,,,,,0,,,,"Currently in TcpDiscoverySpi there is safety check called when discovery worker thread is idle: if node from 'failed list' still in ring then send 'node failed' message for such node ('ServerImpl.checkFailedNodesList'). This can lead to lots of duplicated unnecessary messages. 
This check should be changed: need send event only once and only in case when node which marked node as failed left cluster.",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-10249,IGNITE-10198,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 06 14:11:09 UTC 2016,,,,,,,,,,"0|i30iqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/16 14:11;sboikov;Fixed in master (commit #2e65beb).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cassandra packages have no descriptions,IGNITE-3417,12986603,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,04/Jul/16 14:00,10/Oct/19 13:11,14/Jul/23 06:20,13/Jul/16 05:56,1.6,,,2.8,documentation,,,,,0,,,,Generated javadoc (overview-summary.html) has no decriptions for Cassandra package,,dmagda,githubbot,irudyak,skozlov,,,,,,,,,"dspavlov commented on issue #851: IGNITE-3417 Cassandra packages have no descriptions
URL: https://github.com/apache/ignite/pull/851#issuecomment-487272584
 
 
   https://issues.apache.org/jira/browse/IGNITE-3417 is closed, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Apr/19 09:59;githubbot;600","dspavlov commented on pull request #851: IGNITE-3417 Cassandra packages have no descriptions
URL: https://github.com/apache/ignite/pull/851
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Apr/19 09:59;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,IGNITE-1371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 13 00:48:14 UTC 2016,,,,,,,,,,"0|i30i2n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/16 03:25;githubbot;GitHub user irudyak opened a pull request:

    https://github.com/apache/ignite/pull/851

    IGNITE-3417 Cassandra packages have no descriptions

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/irudyak/ignite ignite-3417

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/851.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #851
    
----
commit e09eacc745bdba4fca34f23f8589faa1b51afd86
Author: Igor <irudyak@gmail.com>
Date:   2016-07-05T03:19:11Z

    added javadocs for Cassandra packages

----
;;;","06/Jul/16 16:40;dmagda;[~irudyak], thanks! I've merged your changes into the master.

[~skozlov], please validate the fix.;;;","13/Jul/16 00:48;irudyak;Probably it makes sense to change ticket status to ""CLOSED""  ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node is not started if continuous query remote filter class is not found,IGNITE-3413,12986322,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vkulichenko,vkulichenko,01/Jul/16 20:55,28/Sep/16 02:31,14/Jul/23 06:20,18/Jul/16 13:33,1.6,,,1.7,cache,,,,,0,,,,"Test attached.

The scenario is the following:
* First node starts with the special attribute and creates a cache with the node filter that allows to deploy it only on nodes with this attribute.
* Continuous query with a remote filter is executed.
* Second node without the attribute is started. It doesn't have the remote filter class, the factory throws an exception and the node doesn't start at all, regardless of the fact that it doesn't even has the cache.",,al.psc,jasonman107,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3984,,,,,,"01/Jul/16 20:56;vkulichenko;ContQueryTest.java;https://issues.apache.org/jira/secure/attachment/12815817/ContQueryTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 28 01:54:42 UTC 2016,,,,,,,,,,"0|i30gc7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jul/16 23:16;vkulichenko;Also need to check the similar scenario, but when the factory class doesn't exist as well on the second node.;;;","07/Jul/16 17:18;al.psc;Patch available. Please advise.
Its idea is quite simple - log and ignore NoClassDefErrors early.
I also checked the code and saw that possible ClassNotFoundExceptions on filter factory deserialization should not be an issue because there already is the code that catches, ignores and logs such exceptions (see org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi#onExchange, lines 1714-1725).;;;","08/Jul/16 02:37;vkulichenko;[~al.psc], where is a pull request or a patch for the fix?;;;","08/Jul/16 07:33;sboikov;Alexander, I looked at your changes. Ignore exception on filter creation is wrong. Instead we should fix continous query registration logic and do not try to register query if cache does not exist on node.;;;","08/Jul/16 08:18;al.psc;Valentin, it's in the branch ignite-3413.
Semen, thanks. OK, I will look into it. At first I fixed it in the same way that factory deserialization exceptions are handled.
;;;","11/Jul/16 14:05;al.psc;I have pushed my fixes, branch ignite-3413, PR #865 https://github.com/apache/ignite/pull/865/. Please advise.;;;","12/Jul/16 06:59;sboikov;Reviewed, looks good, I just did few style corrections, please take a look.

This is not directly related to this fix, but it seems we do not have tests for continuous queries where cache filter is used. Could you please add such test:
- start 6 server nodes, 1 client
- start partitioned and replicated caches with filter excluding half of nodes
- start continuous queries from all nodes + register listeners using JCache API cache.registerCacheEntryListener
- do some cache puts, verify continuous query listeners receive updates

Thanks;;;","13/Jul/16 00:58;al.psc;Done, please have a look.;;;","18/Jul/16 13:33;sboikov;Looks good, merged.;;;","28/Sep/16 01:54;jasonman107;Hi Alexander, fixing this seem to have introduced a NullPointerException in a slightly different scenario.  I have filed issue IGNITE-3984 with the description of a scenario I encountered.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP REST: query commands without pageSize failed with NPE,IGNITE-3407,12986045,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,samaitra,anovikov,anovikov,01/Jul/16 02:59,17/May/19 14:33,14/Jul/23 06:20,15/Aug/16 12:14,1.6,,,1.8,general,,,,,0,,,,"org/apache/ignite/internal/processors/rest/handlers/query/QueryCommandHandler.java:125

Need return response with error.",,agura,anovikov,githubbot,samaitra,,,,,,,,,"dspavlov commented on issue #927: IGNITE-3407 HTTP REST: query commands without pageSize failed with NPE
URL: https://github.com/apache/ignite/pull/927#issuecomment-493475920
 
 
   https://issues.apache.org/jira/browse/IGNITE-3407 is closed, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 14:33;githubbot;600","dspavlov commented on pull request #927: IGNITE-3407 HTTP REST: query commands without pageSize failed with NPE
URL: https://github.com/apache/ignite/pull/927
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 14:33;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Aug 15 12:20:50 UTC 2016,,,,,,,,,,"0|i30emv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Aug/16 08:57;githubbot;GitHub user samaitra opened a pull request:

    https://github.com/apache/ignite/pull/927

    IGNITE-3407 HTTP REST: query commands without pageSize failed with NPE

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/samaitra/ignite IGNITE-3407

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/927.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #927
    
----
commit a267e2e4419361d16307f96a3e2c124cdad4fccf
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-08-07T08:53:54Z

    IGNITE-3407 HTTP REST: query commands without pageSize failed with NPE

commit 193ae8458aff60120f22ba45807590d950f1ae3a
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-08-07T08:55:16Z

    IGNITE-3407 HTTP REST: query commands without pageSize failed with NPE

----
;;;","09/Aug/16 11:58;agura;[~samaitra] Thank you for contribution. I have a few comments about your changes:

  * Checkinf of {{pageSize}} parameter occures after query was performed and iterator was returned. Better place for checking this parameter is {{QueryCommandHandler.handleAsync()}} method for all cases except of {{CLOSE_SQL_QUERY}}. Earlier parameters verification allows to avoid redundant objects allocations and remote calls.
  * Use {{GridRestCommandHandlerAdapter.missingParameter()}} method in order to create error message. See usages of this method.
  * {{IgniteCheckedException}} should be thrown instead of {{IgniteException}} in case of mandatory parameter is missing. Again see usages of {{GridRestCommandHandlerAdapter.missingParameter()}} method.
  * Apache Ignite should compile under Java 7. {{GridQueryCommandHandlerTest}} class contains {{Class.getTypeName()}} calls. There is no such method in Java 7.
  * Use {{GridAbstractTest.getConfiguration(String gridName)}} method in order to configure Ignite instances in tests. See usages of this method in other test classes.

Could you please fix this comments?;;;","09/Aug/16 18:29;samaitra;[~agura]

Hi Andrey,

Thank you for reviewing the PR. I will update the PR changes.

Regards
Saikat;;;","14/Aug/16 07:27;samaitra;[~agura]

Hi Andrey,

I have updated the PR based on review comments.

Please review and let me know your feedback.

Regards
Saikat;;;","14/Aug/16 15:50;agura;Saikat, change looks good. But I think that additional exception handling is redundant because each {{callLocalSafe()}} call returns future with exception if query failed. Just return instance of {{GridFinishFuture}} with exception in case of {{pageSize}} is {{null}} and delegate exception handling to upper level (remove additional exception handling):

{code}
    if (pageSize == null)
        return new GridFinishedFuture<>(
                new IgniteCheckedException(GridRestCommandHandlerAdapter.missingParameter(""pageSize""))
        );
{code};;;","15/Aug/16 06:39;samaitra;[~agura]

Hi Andrey,

Thank you for reviewing the PR. I have made the changes in the PR. Please review and let me know if any change is required.

Regards
Saikat;;;","15/Aug/16 10:28;agura;Looks good to me. Will be merged into master branch soon.

Thanks again, Saikat.;;;","15/Aug/16 12:14;agura;Merged into master branch.;;;","15/Aug/16 12:20;samaitra;[~agura]

Thank you Andrey.

Regards
Saikat;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interceptor and continuous query can get incorrect old value during rebalancing,IGNITE-3406,12985949,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vkulichenko,vkulichenko,01/Jul/16 00:54,01/Aug/19 22:01,14/Jul/23 06:20,20/Sep/16 09:53,1.7,,,1.8,cache,,,,,0,,,,"During the rebalancing the old value passed to interceptor or continuous query can't be wrong due to scenarios described below.

Scenario 1.
# New node joins.
# Update request arrives to the new node before the entry for the same key is rebalanced to this node.
# Listeners are notified with {{null}} old value.

In this case we should use {{GridDhtForceKeysRequest}} to get the old value.

Scenario 2.
# Entry is updated on primary node.
# New backup node joins and the entry with already updated value is rebalanced from the primary node.
# Update request arrives to this new backup node.
# Listeners are notified with the old value which is the same as new value.

In this case we should send the old value with the update request in case there is ongoing rebalancing and cache has interceptor configured or continuous queries registered.",,avk47,dkarachentsev,githubbot,sboikov,vkulichenko,,,,,,,,"dspavlov commented on issue #1022: IGNITE-3406 - Interceptor and continuous query can get incorrect old …
URL: https://github.com/apache/ignite/pull/1022#issuecomment-517473882
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600","dspavlov commented on issue #925: IGNITE-3406 - Interceptor and continuous query can get incorrect old …
URL: https://github.com/apache/ignite/pull/925#issuecomment-517473862
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600","dspavlov commented on pull request #925: IGNITE-3406 - Interceptor and continuous query can get incorrect old …
URL: https://github.com/apache/ignite/pull/925
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600","dspavlov commented on pull request #1022: IGNITE-3406 - Interceptor and continuous query can get incorrect old …
URL: https://github.com/apache/ignite/pull/1022
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 09 14:21:19 UTC 2016,,,,,,,,,,"0|i30ein:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jul/16 01:19;vkulichenko;Probably {{GridDhtForceKeysRequest}} is not needed here, because sending the old value with update will cover both scenarios. This needs to be tested.;;;","27/Jul/16 07:23;dkarachentsev;Able to reproduce only first case, only for interceptor, and only for TRANSACTIONAL cache. Fix requires deeper investigation of how tx cache works.;;;","05/Aug/16 16:09;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/925

    IGNITE-3406 - Interceptor and continuous query can get incorrect old …

    …value during rebalancing
    
    - Fix interceptor beforePup() on rebalancing.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3406

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/925.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #925
    
----
commit 07d83af08fc328eff06485cd5404e8f7c70d706e
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-08-05T12:36:38Z

    IGNITE-3406 - Interceptor and continuous query can get incorrect old value during rebalancing
    
    - Fix interceptor beforePup() on rebalancing.

----
;;;","29/Aug/16 09:58;sboikov;Hi Dmitry,

I reviewed fix, have some comments:
- for tx cache you also need pass old value in innerRemove
- please improve tests you added to use remove, invoke, getAndPut, putIfAbsent operations, and test offheap cache as well
- I did some minor changes it ignite-3406, please take a look

Thanks!;;;","01/Sep/16 14:00;sboikov;Hi,

What is the reason you changed IgniteTxEntry.oldVal to TxEntryValueHolder? Why CacheObject can not be used?;;;","01/Sep/16 14:50;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/1022

    IGNITE-3406 - Interceptor and continuous query can get incorrect old …

    …value during rebalancing

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3406-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1022.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1022
    
----

----
;;;","02/Sep/16 15:25;dkarachentsev;Semen, because I need also store flag that indicates whether value present and oldValueOnPrimary() flag is not suitable for invokes: It is set even when no rebalancing encountered and in interceptor we are getting null previous value.;;;","09/Sep/16 14:21;dkarachentsev;PR [#1050|https://github.com/apache/ignite/pull/1050];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: Do not allow DUAL -> PRIMARY -> DUAL modes interleaving.,IGNITE-3405,12985723,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,30/Jun/16 11:29,20/Jul/16 11:16,14/Jul/23 06:20,20/Jul/16 11:15,1.6,,,1.7,igfs,,,,,0,,,,"Currently we allow almost any combinations of path modes. This appears to be wrong. Consider the following scenario:

1) /dir1 -> PRIMARY
2) /dir1/dir2 -> DUAL

It is impossible to support this scenario properly because {{dir1}} will be created in both file systems anyway, but primary and secondary representation will be ""detached"" from each other.

Instead, we should allow only DUAL -> PRIMARY and DUAL -> PROXY transitions. Any other combinations doesn't make sense.",,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 20 10:44:44 UTC 2016,,,,,,,,,,"0|i30d4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jun/16 11:32;vozerov;Implementation notes:
1) Paths must be validated on start. Corresponding tests must be added.
2) Review {{IgfsImpl.checkConflictWithPrimary()}} - probably this method should go away.
3) Review {{IgfsModeResolver.resolveChildrenModes()}} usages inside IgfsImpl. Probably we will not need it anymore.;;;","01/Jul/16 17:14;iveselovskiy;https://github.com/apache/ignite/pull/845;;;","01/Jul/16 19:34;vozerov;Looks very complex and inefficient to me. Basically, we should implement very simple thing: 
1) There is a set of paths.
2) We should compare each path with each other and see if they are compatible.
3) We should do that *once and only once* on node start. Never ever after that.

Also remember that user will not have many specific paths. In most common case we are talking about 1-2-3, no more than that. In very rare cases it will be ~10 paths. In some fantastic case it will be 100-1000. But even in this case the most simple 2 nested loops will be enough to start the node fast enough.
Also {{IgfsPath}} is already comparable. So why to bother with additional comparator which splits the string into tokens (i.e. iterate over string, generate garbage, etc. ?).

Please rework it to simple static method which will be called only once on node startup. It's result will be passed to {{IgfsModesResolver}}.
;;;","04/Jul/16 09:42;iveselovskiy;{quote} simple 2 nested loops will be enough {quote}
yes, my solution also uses 2 nested loops, just in my solution this loop is splitted into 2 separate methods. So, please clarify, what is complex and inefficient, and how we can reduce that?
Please note that my algorithm also fixes possible user's mistakes, e.g. if both ""/a/b"" and ""/a/b/c"" declared to be PRIMARY, it will remove the latter, since this is a subpath that is already PRIMARY.

{quote}  IgfsPath is already comparable.{quote}
Yes, but the default #compareTo() is implemented as String comparison. Here we need depth comparison, which is different. E.g. strings 
x=""/a/k"", y=""/b/c/d"", z=""/z"" are string-compared as (x,y,z) , while depth-compared as (z,x,y).
What I may suggest to speed up this comparator, is to use path1.depth() - path2.depth() , #depth() method implemented very fast.

{quote} once and only once on node start. {quote}
yes, this is a good point, I will move path filtering into IgfsImpl(Ctx) constructor.
;;;","05/Jul/16 07:34;vozerov;Ivan, my comments:
1) {{IgfsMode.canContain()}} should be moved to {{IgfsUtils}}. No need to set it to public API.
2) {{IgfsImpl.SHALLOW_FIRST_PATH_DEPTH_CMP}} violate ""equals"" contract. Please ensure that it return zero only for equal paths. Otherwise we will end up with dangerous iterator which cannot be used, e.g. inside {{TreeMap}}. 
3) {{IgfsModeResolver}} - constructor should not throw checked exception as we only perform assignments there. Also you should revert corresponding changes inside two {{IgniteHadoopFileSystem}} classes.
4) {{IgfsModeResolver.startsWith}} is not needed as we already have {{IgfsPath.isSubDirectoryOf}}.;;;","05/Jul/16 12:54;iveselovskiy;fixed.
the comparator is converted to anonymous inner class object to make it clear that it will never be used it in any sorted collection.  ;;;","20/Jul/16 10:44;vozerov;Test results: http://149.202.210.143:8111/viewLog.html?buildId=285189&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteHadoop

Need to investigate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache partitions task should return public entries information only.,IGNITE-3403,12985709,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,30/Jun/16 10:18,05/Jul/16 04:38,14/Jul/23 06:20,04/Jul/16 17:25,1.7,,,1.7,wizards,,,,,0,,,,Partitions information include data about internal cache entries.,,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 05 04:38:29 UTC 2016,,,,,,,,,,"0|i30d1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jun/16 10:22;vsisko;Changed to collect only information about public entries. ignite-3403;;;","04/Jul/16 17:25;kuaw26;Fixed in master, please test.;;;","05/Jul/16 04:38;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: TestPutGetAsyncMultithreaded failure,IGNITE-3395,12984941,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,29/Jun/16 10:43,29/Jun/16 12:45,14/Jul/23 06:20,29/Jun/16 12:45,1.6,,,1.7,platforms,,,,,0,,,,"In PR 835
http://149.202.210.143:8111/viewLog.html?buildId=273385",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 29 12:08:20 UTC 2016,,,,,,,,,,"0|i30b2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jun/16 12:08;ptupitsyn;Stack trace:
{code}
java.lang.NullPointerException
	at org.apache.ignite.internal.binary.BinaryTypeProxy.affinityKeyFieldName(BinaryTypeProxy.java:80)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.affinityKey(CacheObjectBinaryProcessorImpl.java:677)
	at org.apache.ignite.internal.processors.cache.CacheDefaultBinaryAffinityKeyMapper.affinityKey(CacheDefaultBinaryAffinityKeyMapper.java:47)
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.affinityKey(GridAffinityAssignmentCache.java:376)
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.partition(GridAffinityAssignmentCache.java:362)
	at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.partition(GridCacheAffinityManager.java:193)
	at org.apache.ignite.internal.processors.cache.GridCacheSwapManager.readAndRemove(GridCacheSwapManager.java:672)
	at org.apache.ignite.internal.processors.cache.GridCacheSwapManager.readAndRemove(GridCacheSwapManager.java:875)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.unswap(GridCacheMapEntry.java:564)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.unswap(GridCacheMapEntry.java:500)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.enlistWriteEntry(IgniteTxLocalAdapter.java:2313)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.enlistWrite(IgniteTxLocalAdapter.java:1964)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.putAsync0(IgniteTxLocalAdapter.java:2855)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.putAsync(IgniteTxLocalAdapter.java:1850)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$33.op(GridCacheAdapter.java:2561)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.asyncOp(GridCacheAdapter.java:4563)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$AsyncOpRetryFuture.execute(GridCacheAdapter.java:5184)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.asyncOp(GridCacheAdapter.java:4487)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync0(GridCacheAdapter.java:2559)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync(GridCacheAdapter.java:2536)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync(GridCacheAdapter.java:2522)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.put(IgniteCacheProxy.java:1130)
	at org.apache.ignite.internal.processors.platform.cache.PlatformCache.processInStreamOutLong(PlatformCache.java:285)
	at org.apache.ignite.internal.processors.platform.PlatformAbstractTarget.inStreamOutLong(PlatformAbstractTarget.java:72)
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to load data from Oracle DB with type TIMESTAMP(6),IGNITE-3394,12984782,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,29/Jun/16 06:26,19/Jul/16 04:32,14/Jul/23 06:20,14/Jul/16 03:06,1.7,,,1.7,cache,,,,,0,,,,"To test:
# Run Oracle database.
# Create user.
# Create table by script:
{code}
create table ""<user_name>"".""TEST"" (
  ""A"" INTEGER PRIMARY KEY, 
  ""B"" TIMESTAMP,
  ""C"" TIMESTAMP(0),
  ""D"" TIMESTAMP(1),
  ""E"" TIMESTAMP(2),
  ""F"" TIMESTAMP(3),
  ""G"" TIMESTAMP(4),
  ""H"" TIMESTAMP(5),
  ""J"" TIMESTAMP(6),
  ""K"" TIMESTAMP(7),
  ""L"" TIMESTAMP(8),
  ""M"" TIMESTAMP(9)
);
{code}
# Fill table by script:
{code}
INSERT INTO ""<user_name>"".""TEST"" VALUES (1, 
  TO_TIMESTAMP('10-SEP-0214:10:10','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.1','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.12','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.123','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.1234','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.12345','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.123456','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.1234567','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.12345678','DD-MON-RRHH24:MI:SS.FF'),
  TO_TIMESTAMP('10-SEP-0214:10:10.123456789','DD-MON-RRHH24:MI:SS.FF')
);
{code}
# Open Gridgain Web Console: https://console.gridgain.com/. 
# Import model from database on Model page.
# Create cluster on Cluster page and link with autogenerated cache.
# Download project code on Summary page.
# In class ServerNodeCodeStartup change code of main function to: 
{code}
Ignite ignite = Ignition.start(ServerConfigurationFactory.createConfiguration());
ignite.cache(""TestCache"").loadCache(null);
{code}
# Run node by using ServerNodeCodeStartup.main function.
- Node should run without exceptions.
# Return to GridGain Web Console and go to SQL page.
# Execute query for data extraction from TestCache cache,  f.e: 
{code}
Select b,d,f,h,k,m FROM ""TestCache"".Test
{code}


http://apache-ignite-users.70518.x6.nabble.com/argument-type-mismatch-of-oracle-TIMESTAMP-field-when-call-loadCache-td5935.html",,anovikov,kuaw26,pkonstantinov,ustas,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jul/16 02:26;vsisko;IGNITE_3394_Add_conversation_oracle_timestamp_type_to_java_type.patch;https://issues.apache.org/jira/secure/attachment/12815666/IGNITE_3394_Add_conversation_oracle_timestamp_type_to_java_type.patch","13/Jul/16 07:56;vsisko;IGNITE_3394_Added_jdbc_data_mapper_.patch;https://issues.apache.org/jira/secure/attachment/12817617/IGNITE_3394_Added_jdbc_data_mapper_.patch",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 19 04:32:33 UTC 2016,,,,,,,,,,"0|i30aon:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jun/16 07:08;vsisko;Implemented convertation of Oracle specific TIMESTAMP to java.sql.Timestamp. ignite-3394;;;","07/Jul/16 07:43;kuaw26;Vasiliy, please rework fix as discussed here: http://apache-ignite-developers.2346864.n4.nabble.com/Custom-transformer-for-CacheJdbcPojoStore-td9664.html

Introduce JdbcTypesTransformer class and move all logic there.
And use this class as default if user does not specify custom transformer.

See JdbcTypeHasher usage as example.;;;","13/Jul/16 08:13;vsisko;In JDBC store a separated data mapper has been added. 
Default implementation of mapper include solution for currently known issues.;;;","14/Jul/16 03:06;anovikov;Reviewed.
data mapper -> types transformer.

Pavel, please test.;;;","15/Jul/16 07:58;pkonstantinov;Ilya,  could you please build staging from the branch ignite-3394. ;;;","15/Jul/16 08:02;ustas;Ok;;;","15/Jul/16 10:05;pkonstantinov;Successfully tested in branch as described in description;;;","19/Jul/16 04:32;anovikov;Reviewed. Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mvn build warning,IGNITE-3393,12984548,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,syzer,syzer,28/Jun/16 23:58,06/Jul/16 09:47,14/Jul/23 06:20,06/Jul/16 09:46,,,,,,,,,,0,,,,"command `mvn build`
yeilds:

{code}
[INFO] Scanning for projects...
[WARNING]
[WARNING] Some problems were encountered while building the effective model for org.apache.ignite:ignite-spring:jar:1.7.0-SNAPSHOT
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: com.h2database:h2:jar -> duplicate declaration of version ${h2.version} @ line 121, column 21
[WARNING]
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING]
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING]
[INFO] ------------------------------------------------------------------------
{code}",mac os,githubbot,shroman,syzer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 06 09:46:23 UTC 2016,,,,,,,,,,"0|i30a9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/16 07:39;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/853

    IGNITE-3393: Maven build warning on duplicate dependency declaration

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/853.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #853
    
----
commit 34b62610bd4e3be34946b8df943fb26111c8805a
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-07-06T07:25:19Z

    IGNITE-3393: Maven build warning on duplicate dependency declaration

----
;;;","06/Jul/16 09:44;githubbot;Github user shroman closed the pull request at:

    https://github.com/apache/ignite/pull/853
;;;","06/Jul/16 09:46;shroman;TC ok, merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
metadata result set throws NPE when closed,IGNITE-3389,12984421,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,aboudnik,aboudnik,28/Jun/16 16:50,16/May/19 21:26,14/Jul/23 06:20,12/Jul/16 20:04,1.6,1.7,,1.7,clients,jdbc,odbc,sql,,0,easyfix,,,"Need to handle when ResultSet has no cursor. It happened only with client JDBC. This code throws NPE:

{code}
    public void testMetadataResultSetClose() throws Exception {
        try (Connection conn = DriverManager.getConnection(BASE_URL)) {
            try (ResultSet tables = conn.getMetaData().getTables(null, null, ""%"", null)) {
                int columnCount = tables.getMetaData().getColumnCount();
                while (tables.next())
                    for (int i = 0; i < columnCount; i++)
                        tables.getObject(i + 1);
            }
        }
    }
{code}",,aboudnik,agura,dmagda,githubbot,,,,,,,,,"dspavlov commented on issue #838: IGNITE-3389 metadata result set throws NPE when closed - fixed
URL: https://github.com/apache/ignite/pull/838#issuecomment-493237932
 
 
   https://issues.apache.org/jira/browse/IGNITE-3389 is closed, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:26;githubbot;600","dspavlov commented on pull request #838: IGNITE-3389 metadata result set throws NPE when closed - fixed
URL: https://github.com/apache/ignite/pull/838
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:26;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,7200,6000,1200,16%,7200,6000,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 22 16:49:34 UTC 2016,,,,,,,,,,"0|i309kv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jun/16 18:32;githubbot;GitHub user aboudnik opened a pull request:

    https://github.com/apache/ignite/pull/838

    IGNITE-3389 metadata result set throws NPE when closed - fixed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/aboudnik/ignite IGNITE-3389

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/838.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #838
    
----
commit 43de601a31d44ed56b88b63e212287201db86902
Author: Alexandre Boudnik <alexandre_boudnik@epam.com>
Date:   2016-06-28T18:29:09Z

    IGNITE-3389 metadata result set throws NPE when closed - fixed

----
;;;","14/Jul/16 06:07;dmagda;[~agura], please review the changes. We want them to be committed in the nearest release. Refer to the discussion on the dev list under ""Apache Ignite - New Release"" title.;;;","22/Jul/16 16:49;agura;LGTM. Thanks. Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor legacy common-module.js to simple pieces.,IGNITE-3375,12984327,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,kuaw26,kuaw26,28/Jun/16 11:07,13/Jul/16 06:14,14/Jul/23 06:20,30/Jun/16 04:35,1.6,,,1.7,wizards,,,,,0,,,,We need to refactor non maintainable legacy code to small maintainable pieces.,,anovikov,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 13 06:14:53 UTC 2016,,,,,,,,,,"0|i308zz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jun/16 11:01;kuaw26;Please review my refactorings. In branch ignite-3375;;;","30/Jun/16 03:21;anovikov;Alexey, please fix and merge:
* Focus.go -> Focus.move
* enter-focus-next -> on-enter-focus
* Remove javatype function from legacy utils.;;;","30/Jun/16 04:35;kuaw26;Please do smoke test of web console on staging after refactoring.;;;","01/Jul/16 07:00;vsisko;# Not work password confirmation.
# Invalid message on SQL page when agent is not connected to topology. 
# input.setSelectionRange is not a function at retain-selection.directive.js:57
## Create model and add field.
## Open field to edit and go by tab to second field.
## Press space.
;;;","04/Jul/16 09:30;kuaw26;Fixed 1, 2 and 3. Please retest on staging.;;;","05/Jul/16 11:08;vsisko;1, 2, 3 Tested. Not reproduced.
Pavel. Please execute smoke test of console. Especially check fields with input dropdown variants.;;;","13/Jul/16 06:14;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteDataStreamer: pre-loading starvation if multiple streamers preload the same cache,IGNITE-3372,12983743,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dmagda,dmagda,dmagda,27/Jun/16 11:35,28/Jun/16 06:54,14/Jul/23 06:20,28/Jun/16 06:54,,,,,,,,,,0,,,,"If to start preloading a cache from multiple streamers on a node that owns partitions that are being preloaded then we will get performance degradation at some point in cases if:

- BinaryMarshaller is used;
- an entry key is a custom object for which we store data in metadata cache.

The main reason according to the thread dumps attached is a race-condition around 
{{org.apache.ignite.internal.processors.cache.GridCacheMapEntry.obsolete(GridCacheMapEntry.java:2888)}}

To improve the performance both {{GridDhtPartitionTopologyImpl.onRemove}} and {{GridDhtPartitionTopologyImpl.onAdded}} must reuse a partition number that is hold in entry.
",,dmagda,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/16 11:36;dmagda;jstack2.log;https://issues.apache.org/jira/secure/attachment/12813639/jstack2.log",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 28 06:54:39 UTC 2016,,,,,,,,,,"0|i306gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jun/16 11:58;dmagda;GitHub user dmagda opened a pull request:

   https://github.com/apache/ignite/pull/831

   ignite-3372: IgniteDataStreamer: pre-loading starvation if multiple streamers preload the same cache



You can merge this pull request into a Git repository by running:

   $ git pull https://github.com/gridgain/apache-ignite ignite-3372

Alternatively you can review and apply these changes as the patch at:

   https://github.com/apache/ignite/pull/831.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

   This closes #831
;;;","27/Jun/16 11:59;sboikov;Reviewed change, looks good.;;;","27/Jun/16 12:21;dmagda;Checking with TC;;;","28/Jun/16 06:54;dmagda;Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: BinaryReflectiveSerializer raw mode does not work with DateTime fields,IGNITE-3364,12982668,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,24/Jun/16 12:18,10/May/17 08:12,14/Jul/23 06:20,24/Jun/16 14:01,1.6,,,1.7,platforms,,,,,0,,,,"BinaryReflectiveSerializer emits non-raw action for DateTime members when they are marked with [QuerySqlField].

This is an unlikely scenario in production, since [QuerySqlField] does not make sense in raw mode. However, one of the users was experimenting with modes and encountered this issue.
The workaround is to implement IBinarizable in raw mode manually.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 24 14:02:28 UTC 2016,,,,,,,,,,"0|i3014f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Jun/16 13:17;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/830

    IGNITE-3364 .NET: Fix BinaryReflectiveSerializer raw mode for DateTime members marked with QuerySqlField

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3364

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/830.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #830
    
----
commit 00588ea8b7296984f339298c7ee66a48410b82ab
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-24T12:39:24Z

    IGNITE-3364 .NET: BinaryReflectiveSerializer raw mode does not work with DateTime fields

commit 94b4f5ff4a27c2af057f961e48a60302ad6b4570
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-24T12:41:30Z

    wip tests

commit 908820c3f1b15336b87898850a571e264bd8bf02
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-24T12:49:56Z

    wip tests

commit 2191fc78b45730c7cea5e29be6affc548ac0e279
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-24T12:52:30Z

    wip tests

commit beafdbe2e80050fc52d5cffa44b4cc645908e73d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-24T12:56:21Z

    Fix the raw issue

commit 787aa18cb043444e6c0bdca3adcce34993af665e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-24T12:57:04Z

    wip

commit 9b6f3ffea39035b810fb45e7f6693a6f7f5f13d6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-24T13:11:25Z

    Update tests, add explanation

----
;;;","24/Jun/16 14:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/830
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service is not redeployed after a node is left topology,IGNITE-3361,12982584,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,dmagda,dmagda,24/Jun/16 06:45,22/Jul/16 13:07,14/Jul/23 06:20,22/Jul/16 13:07,1.6,,,1.7,,,,,,0,,,,"In attach you will find an example demonstrating the issue when a service is not being redeployed after several nodes are started and stopped.

The stack trace of the issue is the following

{code}
Exception in thread ""main"" class org.apache.ignite.IgniteException: Failed to find deployed service: DummyService
	at org.apache.ignite.internal.processors.service.GridServiceProxy$ProxyInvocationHandler.invoke(GridServiceProxy.java:168)
	at com.sun.proxy.$Proxy24.foo(Unknown Source)
	at org.apache.ignite.examples.SingletonServiceLostAfterToplogyChangeMain.failingSequence(SingletonServiceLostAfterToplogyChangeMain.java:95)
	at org.apache.ignite.examples.SingletonServiceLostAfterToplogyChangeMain.main(SingletonServiceLostAfterToplogyChangeMain.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
{code}",,avk47,dmagda,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jun/16 06:45;dmagda;SingletonServiceLostAfterToplogyChangeMain.java;https://issues.apache.org/jira/secure/attachment/12813012/SingletonServiceLostAfterToplogyChangeMain.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 22 13:07:10 UTC 2016,,,,,,,,,,"0|i300lr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jun/16 12:59;sboikov;Looks like this is incorrect condition in GridServiceProcessor:reassign
{noformat}
if (!used.contains(e.getKey())) {
    if (e.getValue() < maxPerNodeCnt) {
        e.setValue(e.getValue() + 1);

        if (--remainder == 0)
            break;
    }
}
{noformat}

With the attached test maxPerNodeCnt=0 which means unlimited, but check 'if (e.getValue() < maxPerNodeCnt)' fails and service is not redeployed.;;;","22/Jul/16 13:07;sboikov;Fixed in master (commit 55e616f).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: Invalid max space size validation.,IGNITE-3354,12981894,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,22/Jun/16 14:26,22/Jun/16 14:30,14/Jul/23 06:20,22/Jun/16 14:30,1.6,,,1.7,igfs,,,,,0,,,,"Currently {{IgfsProcessor}} incorrectly validates max space when OFFHEAP is enabled. 
This validation appears to be very hard to be done right, so let's just remove it as it has little to no value at all.",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-06-22 14:26:43.0,,,,,,,,,,"0|i2zwlb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: Out-of-igfs-space exception is lost.,IGNITE-3353,12981876,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,22/Jun/16 13:15,22/Jun/16 13:50,14/Jul/23 06:20,22/Jun/16 13:49,1.6,,,1.7,igfs,,,,,0,,,,"Two problems with space calculation:
1) If out-of-space exception is thrown, there is no guarantees that relevant output stream will notice it, because {{onDone()}} method removes relevant future.
2) Currently if max space is set to zero, we attempt to calculate it on our own, using {{0.8 * heapSize}} metrics. This is terribly wrong for OFFHEAP cache. ",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-06-22 13:15:23.0,,,,,,,,,,"0|i2zwhb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop: HadoopClassLoader leaks to IGFS thread pool.,IGNITE-3351,12981822,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,22/Jun/16 09:15,22/Jun/16 09:18,14/Jul/23 06:20,22/Jun/16 09:18,1.6,,,1.7,hadoop,igfs,,,,0,,,,"We have dedicated thread pool to process IGFS messages. Threads are created on demand. This pool could be used from a class owned by {{HadoopClassLoader}}. In this case this classloader will be set as context classloader for the thread, what might lead to a leak. 

To fix that we should simply pre-start IGFS threads.",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-06-22 09:15:42.0,,,,,,,,,,"0|i2zw5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Cache store is not destroyed on DestroyCache,IGNITE-3340,12980829,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,20/Jun/16 12:25,23/Jun/16 16:41,14/Jul/23 06:20,23/Jun/16 16:41,1.1.4,,,1.7,platforms,,,,,0,.net,,,"cacheStoreDestroy platform callback should be called whenever owner cache is destroyed.
See stopLifecycleAware call in GridcacheProcessor.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 23 16:41:07 UTC 2016,,,,,,,,,,"0|i2zqkv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jun/16 16:19;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/827

    IGNITE-3340 .NET: Fix cache store release on cache destroy

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3340

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/827.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #827
    
----
commit c40ee2d4381a4eea01978edc5f2999b7a632d74f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-23T14:40:52Z

    IGNITE-3340 .NET: Cache store is not destroyed on DestroyCache - wip

commit 9ed1b033168ffa69f0766e080238e231a4971135
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-23T14:55:25Z

    wip

commit 019ddfc438c80153fe6ac4c1d7f68b8a6b7721f0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-06-23T15:07:38Z

    Add handle test

----
;;;","23/Jun/16 16:41;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/827
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get() in explicit READ_COMMITTED transaction on OFFHEAP_TIERED cache copies data from offheap to onheap.,IGNITE-3339,12980801,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dkarachentsev,dkarachentsev,20/Jun/16 10:32,24/Jun/16 23:35,14/Jul/23 06:20,24/Jun/16 23:35,1.6,,,1.7,cache,,,,,0,,,,"On OFFHEAP_TIERED TRANSACTIONAL cache:
1. Put entry.
2. Cache size equals 1 and iterator returns one entry.
3. Open PESSIMISTIC READ_COMMITED transaction.
4. get() that value.
5. Commit transaction.
6. Cache size now equals 2 and iterator returns two identical entries.

By fast investigation was found that after put() operation value goes to offheap. After get() operation in explicit transaction the same value appears in onheap and offheap iterators. As a result user sees two the same entries.

Pull request with test that reproduces the bug:
https://github.com/apache/ignite/pull/817",,dkarachentsev,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 24 23:34:25 UTC 2016,,,,,,,,,,"0|i2zqen:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/16 10:35;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/817

    IGNITE-3339 - get() in explicit READ_COMMITTED transaction on OFFHEAP…

    …_TIERED cache copies data from offheap to onheap.
    
    Test.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3339

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/817.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #817
    
----
commit 4a620790f4c5c2e2f6dcb93fdc9bca9f7faf1f90
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-06-20T10:33:50Z

    IGNITE-3339 - get() in explicit READ_COMMITTED transaction on OFFHEAP_TIERED cache copies data from offheap to onheap.
    
    Test.

----
;;;","24/Jun/16 23:34;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/817
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST HTTP: metadata command returns all caches even if a cache name is passed to request,IGNITE-3337,12980193,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,skozlov,skozlov,17/Jun/16 13:43,29/Jun/16 11:13,14/Jul/23 06:20,29/Jun/16 11:12,,,,,,,,,,0,,,,"Request: {{http://localhost:8080/ignite?cmd=metadata&cacheName=replicated_cache}}

Reply:
{noformat}
{
  ""error"": """",
  ""response"": [
    {
      ""cacheName"": ""partitioned_cache"",
      ""fields"": {},
      ""indexes"": {},
      ""keyClasses"": {},
      ""types"": [],
      ""valClasses"": {}
    },
    {
      ""cacheName"": ""replicated_cache"",
      ""fields"": {},
      ""indexes"": {},
      ""keyClasses"": {},
      ""types"": [],
      ""valClasses"": {}
    }
  ],
  ""sessionToken"": """",
  ""successStatus"": 0
}
{noformat}
",,anovikov,githubbot,samaitra,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 29 11:12:12 UTC 2016,,,,,,,,,,"0|i2zmnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jun/16 15:23;githubbot;GitHub user samaitra opened a pull request:

    https://github.com/apache/ignite/pull/816

    IGNITE-3337 REST HTTP: metadata command returns all caches even if a cache name is passed to request

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/samaitra/ignite IGNITE-3337

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/816.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #816
    
----
commit ab37ea39cc862338b09bb82d99a34e64ada1f1a5
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-06-19T12:44:49Z

    IGNITE-3337 REST HTTP: metadata command returns all caches even if a cache name is passed to request

commit d0fd29ffb06c3fe46232221ed3e07c4ab5cceb89
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-06-19T15:19:17Z

    IGNITE-3337 REST HTTP: metadata command returns all caches even if a cache name is passed to request

commit 3543270900331dd10beee8140dff6bbd4a21f700
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-06-19T15:20:41Z

    IGNITE-3337 REST HTTP: metadata command returns all caches even if a cache name is passed to request

----
;;;","20/Jun/16 18:20;samaitra;[~axet] [~skozlov]

As discussed the cacheName param is deprecated and metadata command returns all caches even if a cache name is passed.

more info http://apache-ignite-developers.2346864.n4.nabble.com/IGNITE-3337-td9491.html;;;","23/Jun/16 06:57;anovikov;Saikat, I reviewed your pull request and find following:
* Argument type for MetadataTask may be Void;
* We already have test for metadata command in org.apache.ignite.internal.processors.rest.JettyRestProcessorAbstractSelfTest#testMetadata please check it and add more tests.;;;","28/Jun/16 20:23;samaitra;[~anovikov]

Hello Andrey,

As discussed I have made the changes in the PR. Please review and let me know if you have any feedback.

Regards
Saikat;;;","29/Jun/16 11:08;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/816
;;;","29/Jun/16 11:12;anovikov;Looks good to me, reviewed and merged to master.
Thanks, Saikat!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoveryZookeeperIpFinder uses INFO logging without isInfoEnabled() check,IGNITE-3334,12980168,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vkulichenko,vkulichenko,vkulichenko,17/Jun/16 11:48,17/Jun/16 12:01,14/Jul/23 06:20,17/Jun/16 12:01,1.6,,,1.7,zookeeper,,,,,0,,,,"This leads to the warnings in case INFO is disabled:
{noformat}
[org.apache.ignite.spi.discovery.tcp.ipfinder.zk.TcpDiscoveryZookeeperIpFinder] Logging at INFO level without checking if INFO level is enabled
{noformat}",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 17 12:01:50 UTC 2016,,,,,,,,,,"0|i2zmhr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jun/16 12:01;vkulichenko;Fixed in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Map-reduce query waits for rebalancing forever when it's disabled.,IGNITE-3326,12979777,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,sergi,ascherbakov,ascherbakov,16/Jun/16 11:16,13/Jan/17 09:42,14/Jul/23 06:20,13/Jan/17 09:42,,,,,,,,,,0,,,,"The code below doesn't print anything:

{code}
public static void main(String[] args) throws IgniteException {
        Ignite start = Ignition.start(new IgniteConfiguration());
        CacheConfiguration<Integer, Person> cfg = new CacheConfiguration<>();
        cfg.setRebalanceMode(CacheRebalanceMode.NONE);
        cfg.setCacheMode(CacheMode.PARTITIONED);
        cfg.setName(""test"");
        cfg.setIndexedTypes(Integer.class, Person.class);
        IgniteCache<Integer, Person> cache = start.createCache(cfg);
        cache.put(1, new Person(1L, ""Test 1"", ""Test 1""));
        cache.put(2, new Person(1L, ""Test 2"", ""Test 2""));
        cache.put(3, new Person(1L, ""Test 3"", ""Test 3""));

        QueryCursor<Cache.Entry<Integer, Person>> query = cache.query(new SqlQuery<Integer, Person>(Person.class, ""_key >= 0""));
        List<Cache.Entry<Integer, Person>> all = query.getAll();

        System.out.println(all);
    }
{code}

Suggested fix: disable reservation if rebalancing is disabled.
In GridMapQueryExecutor.reservePartitions add

if (cctx.isLocal() || !cctx.rebalanceEnabled())
        continue;
",,ascherbakov,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3132,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 13 09:42:42 UTC 2017,,,,,,,,,,"0|i2zk33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jun/16 10:38;ascherbakov;PR: https://github.com/apache/ignite/pull/813;;;","13/Jan/17 09:42;sergi;Merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Improve CompiledQuery in LINQ provider,IGNITE-3325,12979733,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,16/Jun/16 09:22,10/May/17 08:12,14/Jul/23 06:20,23/Aug/16 09:53,1.6,,,1.8,platforms,,,,,0,.net,,,"User reported that the following code fails with ""Error compiling query: all compiled query arguments should come from enclosing delegate parameters.""
{code}
Func<int,int,int,IQueryCursor<ICacheEntry<int, OrderEntity>>> qry = 
                CompiledQuery.Compile((int x, int y,int z) => orderCache.AsCacheQueryable().Where(e => e.Value.OrderId % x == z).Take(y));
{code}

Other limitations are:
* Embedded parameters are not supported
* Maximum number of parameters is 8

We should provide additional additional method to compile a delegate which takes an array of args.",,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 23 11:25:46 UTC 2016,,,,,,,,,,"0|i2zjtb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/16 15:52;ptupitsyn;There are other corner cases, like using same lambda argument twice in the query.
To solve all the limitations once and for all, we should change the API from {code}Compile(Func<T1, IQueryable<T>> query){code} to {code}Compile(Expression<Func<T1, IQueryable<T>>> query){code}
This will allow to analyse expression in full detail and substitute arguments in any order, and allow constants.

Old methods should be kept to preserve backwards compatibility.
Add a new class CompiledQuery2 (numeric suffix is according to Framework Design Guidelines https://msdn.microsoft.com/en-us/library/ms229045(v=vs.110).aspx).;;;","11/Aug/16 11:56;ptupitsyn;* CompiledQuery class deprecated
* CompiledQuery2 class added with all the same methods, but taking Expression<Func> instead of raw Func<>. For most use cases the transition will not require code changes.
** Fixes Skip/Take and similar issues
** Allows embedded arguments (specify constant literals directly, e.g. .Where(x < 5))
** Allows using the same argument multiple times
* Compile(IQueryable query) overload added
** Allows any number of arguments
** Allows compiling existing queries (no requirement to provide an expression)
** Allows ""query builder"" pattern where LINQ expression is constructed step by step;;;","11/Aug/16 11:57;ptupitsyn;Vladimir, please have a look at API change.;;;","15/Aug/16 13:49;vozerov;Pavel,

Looks good to me. Please prepare pull request.;;;","15/Aug/16 15:16;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/958

    IGNITE-3325 .NET: Improve CompiledQuery in LINQ provider

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3325-1.6.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/958.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #958
    
----
commit 1d0cbb45cd61c5c8e6ec926d7e629eb94111b32f
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2016-08-11T05:43:50Z

    IGNITE-3618: Client can not load data after server restarts. This closes #941.

commit 1139a9f76b5d37073261d729a15b1fbec674d48d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-11T05:47:48Z

    Added missing license.

commit 0b4ffdbcce63e5ce53572f71af967cff300d5670
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-14T15:18:40Z

    IGNITE-2852: Fixed TreeMap and TreeSet serialization.

commit 89bce0fc5cb3dba56626c7088e607d0b25c3353c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-30T10:14:16Z

    IGNITE-3021: IGFS: Fixed failiing IgfsStreamsSelfTest.testCreateFileColocated() test. Failure as caused by misconfiguration.

commit 78aa065b4c7b05381b1fa31159b74969ec4a2bfe
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:35Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit f87ca482420fc1e6ffcb000a227717142d24e270
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T10:15:41Z

    IGNITE-826: Removed HadoopHashMapSelfTest.testAllocation() as it tested nothing.

commit 9ddf9d846f52a4e8fc433643409993884c70ce37
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-07-21T13:00:45Z

    IGNITE-466: IGFS: Added ""IgfsMode mode(IgfsPath)"" method.

commit dc81069ba9ebb88bc11cf6917e8733cc1f6de2fb
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2016-08-02T08:11:24Z

    IGNITE-3343: IGFS: Secondary file system is not queried for statuses during MKDIRS and CREATE operations. This closes #896.

commit ae54e36f27719f46d1d276f62a977c3f8d053b44
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-04T14:04:41Z

    IGNITE-3331 IGFS: Route client tasks to primary node when metadata co-location is enabled. This closes #921.

commit 970137b1db7dc6c5e546581e22e428ae15c86513
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:32Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit 4d876a7560060c892908da447178e97bfe12ca9c
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-05T12:05:43Z

    IGNITE-3631: IGFS: Now metadata co-location is used for PARTITIONED cache as well.

commit f5a040a01280c654df1fc4789cc39ff1ac2d32a4
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-08-09T07:01:56Z

    IGNITE-3332: IGFS: Optimized file unlock routine with help of a client callable. This closes #916.

commit 5cf3bea32a25ccc78641f083aa7f1ac81b4187ba
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-08-15T10:40:41Z

    IGNITE-1926: IGFS: Implemented local secondary file system.

commit 278633eced6d8039b5be4a18eefe6c65650aba4f
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-08-15T11:27:22Z

    IGNITE-3688: Fixed visiblity issue in GridCacheIoManager.idxClsHandlers.

commit 5a01c5b459f3004901cb07991c943574978b2bb7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-08-15T15:11:11Z

    IGNITE-3325 .NET: Improve CompiledQuery in LINQ provider

commit e0cf561b34f32016e153e7fa1c0bc1d4ec56a976
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-08-15T15:15:02Z

    Fix merge

----
;;;","15/Aug/16 15:19;ptupitsyn;Vladimir, PR created.;;;","23/Aug/16 09:53;vozerov;Pavel,

Fix is good to merge. Please go ahead. I would only ask you to create a ticket to remove deprecation for 2.0.;;;","23/Aug/16 11:02;ptupitsyn;There is a ticket to remove all deprecated code: IGNITE-3539;;;","23/Aug/16 11:11;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/958
;;;","23/Aug/16 11:25;ptupitsyn;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: schema name must be unique for each cache,IGNITE-3318,12979276,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,15/Jun/16 07:32,06/Oct/16 03:24,14/Jul/23 06:20,04/Oct/16 03:20,1.7,,,1.8,,,,,,0,,,,"Currently we don't check that schema name is unique.
Just clone cache with schema name ans Save.",,anovikov,kuaw26,pkonstantinov,vsidorova,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 06 03:23:57 UTC 2016,,,,,,,,,,"0|i2zhcn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/16 10:07;vsisko;Implemented check of the same cache SQL schema names in one cluster on save of cache and save of cluster. ignite-3318;;;","17/Jun/16 03:15;kuaw26;Looks good for me. Please test on staging.;;;","21/Jun/16 14:24;vsidorova;It works not good now: during clone cache with schema name only new cache name is proposed. After user click ""Confirm"" the ""Save"" button is disabled for new (cloned) cache. So at this moment we have two similar schema name. The cache SQL schema name checking will activate only after user make some changes and try to save cache. ;;;","22/Jun/16 03:32;kuaw26;I tested with two caches and also nothing checked.
Also we need to change schema name on clone.;;;","23/Jun/16 10:56;vsisko;Fixed internal links between object in case of new objects creation. That should fix check.;;;","23/Jun/16 17:52;kuaw26;Vasiliy, it seems that you forget to add code that will change schema name on ""clone"".
Logic should be almost the same as we change cache name.;;;","24/Jun/16 05:19;vsisko;Implemented reset of schema name in clone object how a most possible value.;;;","24/Jun/16 13:35;vsidorova;It is not user-friendly to reset schema name during cloning without any warning. Is it possible to add message like this: ""Found cache ""blablabla"" in cluster ""blablabla"" with the same SQL schema name ""blablabla"". SQL schema name will be reseted""? If it is easier for you make the same message during cache saving (action: reset Schema name after this warning and after saving  user could write new name);;;","27/Jun/16 10:32;vsisko;Added showing of message when SQL query name is cleared. 
Fixed case when clusters are not selected.
ignite-3318;;;","28/Sep/16 09:42;anovikov;Reviewed. Merged. Pavel, please test.;;;","03/Oct/16 05:53;pkonstantinov;I think we need to fix validator for schema name before we close this issue.
Currently it is allowable to set the value of this field to """""""" (just several quotes).;;;","04/Oct/16 03:20;vsisko;Please create separated issue if need.;;;","06/Oct/16 03:23;pkonstantinov;https://issues.apache.org/jira/browse/IGNITE-4038 created.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Test] HadoopMapReduceEmbeddedSelfTest.testMultiReducerWholeMapReduceExecution flakily fails.,IGNITE-3312,12979037,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,iveselovskiy,iveselovskiy,14/Jun/16 17:46,28/Jun/16 08:45,14/Jul/23 06:20,15/Jun/16 13:03,,,,,hadoop,,,,,0,test,,,"HadoopMapReduceEmbeddedSelfTest.testMultiReducerWholeMapReduceExecution fails with ~20% probability . 
Failure cause is either the 1st or 2nd marked line in the following code (org.apache.ignite.internal.processors.igfs.IgfsMetaManager#create) :
{code}
                            // Check: can we overwrite it?
                            if (!overwrite)
                                throw new IgfsPathAlreadyExistsException(""Failed to create a file: "" + path); // ***** #1

                            // Check if file already opened for write.
                            if (oldInfo.lockId() != null)
                                throw new IgfsException(""File is already opened for write: "" + path); // ***** #2
{code}

Diagnostic shows that the same file really attempted to be created several times on one thread.

Situation #2 reproducible with the following stack when IGFS is used as a secondary fs:
{code}
Hadoop-task-efea2ae1-09cb-4c49-9465-dcbbedee1835_1-REDUCE-2-0-#679%hadoop.HadoopMapReduceEmbeddedSelfTest2%@20675, prio=5, in group 'ignite', status: 'RUNNING'
          at org.apache.ignite.internal.processors.igfs.IgfsMetaManager.create(IgfsMetaManager.java:2857)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl$15.call(IgfsImpl.java:1051)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl$15.call(IgfsImpl.java:1019)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl.safeOp(IgfsImpl.java:1823)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl.create0(IgfsImpl.java:1019)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl.create(IgfsImpl.java:990)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc$15.apply(HadoopIgfsInProc.java:359)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc$15.apply(HadoopIgfsInProc.java:357)
          at org.apache.ignite.igfs.IgfsUserContext.doAs(IgfsUserContext.java:49)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc.create(HadoopIgfsInProc.java:357)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper$15.apply(HadoopIgfsWrapper.java:258)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper$15.apply(HadoopIgfsWrapper.java:255)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper.withReconnectHandling(HadoopIgfsWrapper.java:310)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper.create(HadoopIgfsWrapper.java:255)
          at org.apache.ignite.hadoop.fs.v1.IgniteHadoopFileSystem.create(IgniteHadoopFileSystem.java:632)
          at org.apache.ignite.hadoop.fs.IgniteHadoopIgfsSecondaryFileSystem.create(IgniteHadoopIgfsSecondaryFileSystem.java:406)
          at org.apache.ignite.internal.processors.igfs.IgfsSecondaryFileSystemCreateContext.create(IgfsSecondaryFileSystemCreateContext.java:87)
          at org.apache.ignite.internal.processors.igfs.IgfsMetaManager.create(IgfsMetaManager.java:2922)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl$15.call(IgfsImpl.java:1051)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl$15.call(IgfsImpl.java:1019)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl.safeOp(IgfsImpl.java:1823)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl.create0(IgfsImpl.java:1019)
          at org.apache.ignite.internal.processors.igfs.IgfsImpl.create(IgfsImpl.java:990)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc$15.apply(HadoopIgfsInProc.java:359)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc$15.apply(HadoopIgfsInProc.java:357)
          at org.apache.ignite.igfs.IgfsUserContext.doAs(IgfsUserContext.java:54)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc.create(HadoopIgfsInProc.java:357)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper$15.apply(HadoopIgfsWrapper.java:258)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper$15.apply(HadoopIgfsWrapper.java:255)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper.withReconnectHandling(HadoopIgfsWrapper.java:310)
          at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper.create(HadoopIgfsWrapper.java:255)
          at org.apache.ignite.hadoop.fs.v1.IgniteHadoopFileSystem.create(IgniteHadoopFileSystem.java:632)
          at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:906)
          at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:799)
          at org.apache.hadoop.mapred.TextOutputFormat.getRecordWriter(TextOutputFormat.java:123)
          at org.apache.ignite.internal.processors.hadoop.v1.HadoopV1OutputCollector.<init>(HadoopV1OutputCollector.java:68)
          at org.apache.ignite.internal.processors.hadoop.v1.HadoopV1Task$1.<init>(HadoopV1Task.java:73)
          at org.apache.ignite.internal.processors.hadoop.v1.HadoopV1Task.collector(HadoopV1Task.java:72)
          at org.apache.ignite.internal.processors.hadoop.v1.HadoopV1ReduceTask.run(HadoopV1ReduceTask.java:65)
          at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.run(HadoopV2TaskContext.java:249)
          at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.runTask(HadoopRunnableTask.java:201)
          at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call0(HadoopRunnableTask.java:144)
          at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask$1.call(HadoopRunnableTask.java:116)
          at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask$1.call(HadoopRunnableTask.java:114)
          at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.runAsJobOwner(HadoopV2TaskContext.java:544)
          at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call(HadoopRunnableTask.java:114)
          at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call(HadoopRunnableTask.java:46)
          at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopExecutorService$2.body(HadoopExecutorService.java:186)
          at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
          at java.lang.Thread.run(Thread.java:745)

{code}


situation #1 also happens when IGFS plays role of the 2ndary file system with the following stack :
{code}
  72 Hadoop-task-aebecef6-5cf2-4b66-9674-9fd8644e1183_1-REDUCE-0-0-#368%hadoop.HadoopMapReduceEmbeddedSelfTest0%@14531, prio=5, in group 'ignite', status: 'RUNNING'
  73           at org.apache.ignite.internal.processors.igfs.IgfsMetaManager.create(IgfsMetaManager.java:2853)
  74           at org.apache.ignite.internal.processors.igfs.IgfsImpl$15.call(IgfsImpl.java:1051)
  75           at org.apache.ignite.internal.processors.igfs.IgfsImpl$15.call(IgfsImpl.java:1019)
  76           at org.apache.ignite.internal.processors.igfs.IgfsImpl.safeOp(IgfsImpl.java:1823)
  77           at org.apache.ignite.internal.processors.igfs.IgfsImpl.create0(IgfsImpl.java:1019)
  78           at org.apache.ignite.internal.processors.igfs.IgfsImpl.create(IgfsImpl.java:990)
  79           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc$15.apply(HadoopIgfsInProc.java:359)
  80           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc$15.apply(HadoopIgfsInProc.java:357)
  81           at org.apache.ignite.igfs.IgfsUserContext.doAs(IgfsUserContext.java:49)
  82           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc.create(HadoopIgfsInProc.java:357)
  83           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper$15.apply(HadoopIgfsWrapper.java:258)
  84           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper$15.apply(HadoopIgfsWrapper.java:255)
  85           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper.withReconnectHandling(HadoopIgfsWrapper.java:310)
  86           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper.create(HadoopIgfsWrapper.java:255)
  87           at org.apache.ignite.hadoop.fs.v1.IgniteHadoopFileSystem.create(IgniteHadoopFileSystem.java:632)
  88           at org.apache.ignite.hadoop.fs.IgniteHadoopIgfsSecondaryFileSystem.create(IgniteHadoopIgfsSecondaryFileSystem.java:406)
  89           at org.apache.ignite.internal.processors.igfs.IgfsSecondaryFileSystemCreateContext.create(IgfsSecondaryFileSystemCreateContext.java:87)
  90           at org.apache.ignite.internal.processors.igfs.IgfsMetaManager.create(IgfsMetaManager.java:2922)
  91           at org.apache.ignite.internal.processors.igfs.IgfsImpl$15.call(IgfsImpl.java:1051)
  92           at org.apache.ignite.internal.processors.igfs.IgfsImpl$15.call(IgfsImpl.java:1019)
  93           at org.apache.ignite.internal.processors.igfs.IgfsImpl.safeOp(IgfsImpl.java:1823)
  94           at org.apache.ignite.internal.processors.igfs.IgfsImpl.create0(IgfsImpl.java:1019)
  95           at org.apache.ignite.internal.processors.igfs.IgfsImpl.create(IgfsImpl.java:990)
  96           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc$15.apply(HadoopIgfsInProc.java:359)
  97           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc$15.apply(HadoopIgfsInProc.java:357)
  98           at org.apache.ignite.igfs.IgfsUserContext.doAs(IgfsUserContext.java:54)
  99           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc.create(HadoopIgfsInProc.java:357)
 100           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper$15.apply(HadoopIgfsWrapper.java:258)
 101           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper$15.apply(HadoopIgfsWrapper.java:255)
 102           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper.withReconnectHandling(HadoopIgfsWrapper.java:310)
 103           at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsWrapper.create(HadoopIgfsWrapper.java:255)
 104           at org.apache.ignite.hadoop.fs.v1.IgniteHadoopFileSystem.create(IgniteHadoopFileSystem.java:632)
 105           at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:906)
 106           at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:887)
 107           at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:784)
 108           at org.apache.hadoop.mapreduce.lib.output.TextOutputFormat.getRecordWriter(TextOutputFormat.java:132)
 109           at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2Task.prepareWriter(HadoopV2Task.java:103)
 110           at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2ReduceTask.run0(HadoopV2ReduceTask.java:57)
 111           at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2Task.run(HadoopV2Task.java:54)
 112           at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.run(HadoopV2TaskContext.java:249)
 113           at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.runTask(HadoopRunnableTask.java:201)
 114           at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call0(HadoopRunnableTask.java:144)
 115           at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask$1.call(HadoopRunnableTask.java:116)
 116           at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask$1.call(HadoopRunnableTask.java:114)
 117           at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.runAsJobOwner(HadoopV2TaskContext.java:544)
 118           at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call(HadoopRunnableTask.java:114)
 119           at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call(HadoopRunnableTask.java:46)
 120           at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopExecutorService$2.body(HadoopExecutorService.java:186)
 121           at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
 122           at java.lang.Thread.run(Thread.java:745)

{code} ",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-06-14 17:46:43.0,,,,,,,,,,"0|i2zg13:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite does not wait for dynamically created caches in SYNC rebalance mode,IGNITE-3305,12978550,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,14/Jun/16 00:29,15/Jun/16 00:40,14/Jul/23 06:20,15/Jun/16 00:40,1.6,,,1.7,cache,,,,,0,,,,"See GridCacheProcessor#onKernalStart():
{code}
// Wait for caches in SYNC preload mode.
for (CacheConfiguration cfg : ctx.config().getCacheConfiguration()) {
{code}",,agoncharuk,avk47,krosenvold,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 15 00:40:35 UTC 2016,,,,,,,,,,"0|i2zewv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jun/16 00:53;agoncharuk;Added {{org.apache.ignite.internal.processors.cache.distributed.replicated.IgniteCacheSyncRebalanceModeSelfTest}} reproducing the issue.;;;","15/Jun/16 00:40;agoncharuk;TC passed, changes merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix parameter error in class GridServiceProcessor,IGNITE-3304,12977976,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,F7753,F7753,F7753,12/Jun/16 14:47,16/May/19 21:24,14/Jul/23 06:20,13/Jun/16 10:40,1.6,,,1.6,,,,,,0,,,,"Method `serviceProxy` in Class `org.apache.ignite.internal.processors.service.GridServiceProcessor` seems missing type paramter ""T"".",,dmagda,F7753,githubbot,,,,,,,,,,"dspavlov commented on issue #795: IGNITE-3304 Add missing type parameter in serviceProxy
URL: https://github.com/apache/ignite/pull/795#issuecomment-493237310
 
 
   https://issues.apache.org/jira/browse/IGNITE-3304 is closed, closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:24;githubbot;600","dspavlov commented on pull request #795: IGNITE-3304 Add missing type parameter in serviceProxy
URL: https://github.com/apache/ignite/pull/795
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:24;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 13 10:40:33 UTC 2016,,,,,,,,,,"0|i2zcnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jun/16 14:51;githubbot;GitHub user f7753 opened a pull request:

    https://github.com/apache/ignite/pull/795

    IGNITE-3304 Add missing type parameter in serviceProxy

    Method `serviceProxy` in Class `org.apache.ignite.internal.processors.service.GridServiceProcessor` seems missing type paramter ""T"", added it. 
    Also add a  cast in method `serviceProxy` in  class `org.apache.ignite.internal.IgniteServicesImpl`.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/f7753/ignite fix_type

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/795.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #795
    
----
commit e26649a91caf6a270ac6635c21362da6e0a73bfd
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-06-12T14:43:41Z

    add missing type parameter in serviceProxy

----
;;;","13/Jun/16 10:40;dmagda;Thanks for the contribution! I've merged your changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException: -1 during capitalization benchmark running,IGNITE-3300,12977606,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,krybakova,krybakova,krybakova,10/Jun/16 13:23,28/Jul/16 10:11,14/Jul/23 06:20,27/Jul/16 06:25,1.7,,,1.7,general,,,,,0,,,,"Test config:
1 client, 16 servers
warmup 60
duration 1h
preload 5M
operations: capitalization benchmark
backups count 1

After ~30 min after start the following errors occur at the driver:
{noformat}
[08:42:51,367][ERROR][sys-#5%null%][GridTaskWorker] Failed to obtain remote job result policy for result from ComputeTask.result(..) method (will fail the whole task): GridJobResultImpl [job=C4V2 [r=o.a.i.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure@41013d64], sib=GridJobSiblingImpl [sesId=bfb21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, jobId=51c21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, nodeId=79226bcc-651f-4af7-8d39-fd4019b7708c, isJobDone=false], jobCtx=GridJobContextImpl [jobId=51c21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, timeoutObj=null, attrs={}], node=TcpDiscoveryNode [id=79226bcc-651f-4af7-8d39-fd4019b7708c, addrs=[10.20.0.216, 127.0.0.1], sockAddrs=[fosters-216/10.20.0.216:47501, /10.20.0.216:47501, /127.0.0.1:47501], discPort=47501, order=5, intOrder=5, lastExchangeTime=1465485122287, loc=false, ver=1.7.0#20160603-sha1:82573436, isClient=false], ex=class o.a.i.compute.ComputeUserUndeclaredException: Failed to execute job due to unexpected runtime exception [jobId=51c21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, ses=GridJobSessionImpl [ses=GridTaskSessionImpl [taskName=o.a.i.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure, dep=LocalDeployment [super=GridDeployment [ts=1465485111989, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@6da264f1, clsLdrId=cee28b53551-79226bcc-651f-4af7-8d39-fd4019b7708c, userVer=0, loc=true, sampleClsName=java.lang.String, pendingUndeploy=false, undeployed=false, usage=0]], taskClsName=o.a.i.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure, sesId=bfb21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, startTime=1465486810898, endTime=9223372036854775807, taskNodeId=a8d91d06-89bd-41a5-8b4f-6a02416dfc63, clsLdr=sun.misc.Launcher$AppClassLoader@6da264f1, closed=false, cpSpi=null, failSpi=null, loadSpi=null, usage=1, fullSup=false, subjId=a8d91d06-89bd-41a5-8b4f-6a02416dfc63, mapFut=IgniteFuture [orig=GridFutureAdapter [resFlag=0, res=null, startTime=1465486811180, endTime=0, ignoreInterrupts=false, state=INIT]]], jobId=51c21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63]], hasRes=true, isCancelled=false, isOccupied=true]
class org.apache.ignite.IgniteException: Remote job threw user exception (override or implement ComputeTask.result(..) method if you would like to have automatic failover for this exception).
        at org.apache.ignite.compute.ComputeTaskAdapter.result(ComputeTaskAdapter.java:101)
        at org.apache.ignite.internal.processors.task.GridTaskWorker$3.apply(GridTaskWorker.java:912)
        at org.apache.ignite.internal.processors.task.GridTaskWorker$3.apply(GridTaskWorker.java:905)
        at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6491)
        at org.apache.ignite.internal.processors.task.GridTaskWorker.result(GridTaskWorker.java:905)
        at org.apache.ignite.internal.processors.task.GridTaskWorker.onResponse(GridTaskWorker.java:801)
        at org.apache.ignite.internal.processors.task.GridTaskProcessor.processJobExecuteResponse(GridTaskProcessor.java:995)
        at org.apache.ignite.internal.processors.task.GridTaskProcessor$JobMessageListener.onMessage(GridTaskProcessor.java:1220)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.compute.ComputeUserUndeclaredException: Failed to execute job due to unexpected runtime exception [jobId=51c21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, ses=GridJobSessionImpl [ses=GridTaskSessionImpl [taskName=org.apache.ignite.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure, dep=LocalDeployment [super=GridDeployment [ts=1465485111989, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@6da264f1, clsLdrId=cee28b53551-79226bcc-651f-4af7-8d39-fd4019b7708c, userVer=0, loc=true, sampleClsName=java.lang.String, pendingUndeploy=false, undeployed=false, usage=0]], taskClsName=org.apache.ignite.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure, sesId=bfb21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, startTime=1465486810898, endTime=9223372036854775807, taskNodeId=a8d91d06-89bd-41a5-8b4f-6a02416dfc63, clsLdr=sun.misc.Launcher$AppClassLoader@6da264f1, closed=false, cpSpi=null, failSpi=null, loadSpi=null, usage=1, fullSup=false, subjId=a8d91d06-89bd-41a5-8b4f-6a02416dfc63, mapFut=IgniteFuture [orig=GridFutureAdapter [resFlag=0, res=null, startTime=1465486811180, endTime=0, ignoreInterrupts=false, state=INIT]]], jobId=51c21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63]]
        at org.apache.ignite.internal.processors.job.GridJobWorker.handleThrowable(GridJobWorker.java:607)
        at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:551)
        at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:456)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1161)
        at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1766)
        ... 7 more
Caused by: javax.cache.CacheException: class org.apache.ignite.IgniteCheckedException: Failed to execute SQL query.
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryLocalFields(GridQueryProcessor.java:983)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:689)
        at org.apache.ignite.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure.run(IgniteCapitalizationBenchmark.java:246)
        at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C4V2.execute(GridClosureProcessor.java:2206)
        at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:509)
        at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6459)
        at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:503)
        ... 11 more
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to execute SQL query.
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:847)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:870)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryFields(IgniteH2Indexing.java:738)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor$7.applyx(GridQueryProcessor.java:965)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor$7.applyx(GridQueryProcessor.java:959)
        at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:1769)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryLocalFields(GridQueryProcessor.java:959)
        ... 17 more
Caused by: org.h2.jdbc.JdbcSQLException: General error: ""java.lang.ArrayIndexOutOfBoundsException: -1""; SQL statement:
SELECT _key FROM ""deposit"".Deposit WHERE affKey=? [50000-175]
        at org.h2.message.DbException.getJdbcSQLException(DbException.java:332)
        at org.h2.message.DbException.get(DbException.java:161)
        at org.h2.message.DbException.convert(DbException.java:284)
        at org.h2.command.Command.executeQuery(Command.java:208)
        at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:106)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:844)
        ... 24 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: -1
        at java.util.ArrayList.elementData(ArrayList.java:400)
        at java.util.ArrayList.get(ArrayList.java:413)
        at org.apache.ignite.internal.processors.affinity.GridAffinityAssignment.get(GridAffinityAssignment.java:152)
        at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.nodes(GridAffinityAssignmentCache.java:387)
        at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.nodes(GridCacheAffinityManager.java:251)
        at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.primary(GridCacheAffinityManager.java:287)
        at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.primary(GridCacheAffinityManager.java:278)
        at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.primary(GridCacheAffinityManager.java:302)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$7$3.apply(IgniteH2Indexing.java:1730)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2IndexBase$FilteringIterator.accept(GridH2IndexBase.java:251)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2IndexBase$FilteringIterator.accept(GridH2IndexBase.java:200)
        at org.apache.ignite.internal.util.lang.GridFilteredIterator.hasNext(GridFilteredIterator.java:59)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Cursor.next(GridH2Cursor.java:59)
        at org.h2.index.IndexCursor.next(IndexCursor.java:274)
        at org.h2.table.TableFilter.next(TableFilter.java:359)
        at org.h2.command.dml.Select.queryFlat(Select.java:527)
        at org.h2.command.dml.Select.queryWithoutCache(Select.java:632)
        at org.h2.command.dml.Query.query(Query.java:297)
        at org.h2.command.dml.Query.query(Query.java:284)
        at org.h2.command.dml.Query.query(Query.java:36)
        at org.h2.command.CommandContainer.query(CommandContainer.java:91)
        at org.h2.command.Command.executeQuery(Command.java:196)
        ... 26 more
Finishing main test [ts=1465486971375, date=Thu Jun 09 08:42:51 PDT 2016]
ERROR: Shutting down benchmark driver to unexpected exception.
{noformat}

At the servers:
{noformat}
[08:42:51,383][ERROR][pub-#12%null%][GridJobWorker] Failed to execute job due to unexpected runtime exception [jobId=74c21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, ses=GridJobSessionImpl [ses=GridTaskSessionImpl [taskName=o.a.i.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure, dep=LocalDeployment [super=GridDeployment [ts=1465485109866, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@40914272, clsLdrId=6c628b53551-aa875cfe-4e8c-4f21-bdb4-aed0d3b56764, userVer=0, loc=true, sampleClsName=java.lang.String, pendingUndeploy=false, undeployed=false, usage=0]], taskClsName=o.a.i.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure, sesId=bfb21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63, startTime=1465486810898, endTime=9223372036854775807, taskNodeId=a8d91d06-89bd-41a5-8b4f-6a02416dfc63, clsLdr=sun.misc.Launcher$AppClassLoader@40914272, closed=false, cpSpi=null, failSpi=null, loadSpi=null, usage=1, fullSup=false, subjId=a8d91d06-89bd-41a5-8b4f-6a02416dfc63, mapFut=IgniteFuture [orig=GridFutureAdapter [resFlag=0, res=null, startTime=1465486811190, endTime=0, ignoreInterrupts=false, state=INIT]]], jobId=74c21563551-a8d91d06-89bd-41a5-8b4f-6a02416dfc63]]
javax.cache.CacheException: class org.apache.ignite.IgniteCheckedException: Failed to execute SQL query.
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryLocalFields(GridQueryProcessor.java:983)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:689)
        at org.apache.ignite.yardstick.cache.load.IgniteCapitalizationBenchmark$ScanQueryBroadcastClosure.run(IgniteCapitalizationBenchmark.java:246)
        at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C4V2.execute(GridClosureProcessor.java:2206)
        at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:509)
        at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6459)
        at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:503)
        at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:456)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1161)
        at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1766)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to execute SQL query.
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:847)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:870)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryFields(IgniteH2Indexing.java:738)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor$7.applyx(GridQueryProcessor.java:965)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor$7.applyx(GridQueryProcessor.java:959)
        at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:1769)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryLocalFields(GridQueryProcessor.java:959)
        ... 17 more
Caused by: org.h2.jdbc.JdbcSQLException: General error: ""class org.apache.ignite.IgniteException: Thread got interrupted while trying to acquire index lock.""; SQL statement:
SELECT _key FROM ""deposit"".Deposit WHERE affKey=? [50000-175]
        at org.h2.message.DbException.getJdbcSQLException(DbException.java:332)
        at org.h2.message.DbException.get(DbException.java:161)
        at org.h2.message.DbException.convert(DbException.java:284)
        at org.h2.command.Command.executeQuery(Command.java:208)
        at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:106)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:844)
        ... 24 more
Caused by: class org.apache.ignite.IgniteException: Thread got interrupted while trying to acquire index lock.
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.lock(GridH2Table.java:241)
        at org.h2.table.TableFilter.lock(TableFilter.java:145)
        at org.h2.command.dml.Select.queryWithoutCache(Select.java:618)
        at org.h2.command.dml.Query.query(Query.java:297)
        at org.h2.command.dml.Query.query(Query.java:284)
        at org.h2.command.dml.Query.query(Query.java:36)
        at org.h2.command.CommandContainer.query(CommandContainer.java:91)
        at org.h2.command.Command.executeQuery(Command.java:196)
        ... 26 more
Caused by: java.lang.InterruptedException
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(AbstractQueuedSynchronizer.java:1244)
        at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.tryLock(ReentrantReadWriteLock.java:1115)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.lock(GridH2Table.java:237)
        ... 33 more
{noformat}",,krybakova,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jul 28 10:10:41 UTC 2016,,,,,,,,,,"0|i2zadb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Jul/16 20:00;sboikov;From the code I see that most probably this is related to optimization implemented in 1.6 release: key partition can be stored in internal KeyCacheObject (or BinaryObjectImpl). Also what looks like a bug if we use existing BinaryObject as a key it's partition can be set as -1 (and later correct partition will be re-calculated), due to race in GridCacheAffinityManager.partition this temporary invalid value '-1' could be used as partition number -> this could cause ArrayIndexOutOfBoundsException. I was not able to reproduce this in unit test, but it seems it was the only possible reason for such error.
Fix is ready, need verify TeamCity and then can verify fix using benchmark where this issue reproduced.;;;","27/Jul/16 06:25;sboikov;Ksenia,

I merged fix for this issue in master, could you please re-run benchmark where this issue was found?

Thanks!;;;","28/Jul/16 10:10;krybakova;verified;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AWS bootstrap scripts patch for Ignite-Cassandra ,IGNITE-3293,12977434,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,irudyak,irudyak,irudyak,09/Jun/16 23:53,10/Aug/16 19:27,14/Jul/23 06:20,05/Aug/16 04:46,1.6,1.7,,1.8,cache,,,,,0,,,,"New version of AWS bootstrap script having:

1) Gaglia monitoring
2) Allows to manually trigger tests execution multiple times on the same ifstastructure",,githubbot,irudyak,kuaw26,ntikhonov,ustas,vsidorova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1371,,,,,,,,,,,,,,"07/Jul/16 11:32;ustas;aws-linux-fail.zip;https://issues.apache.org/jira/secure/attachment/12816614/aws-linux-fail.zip","03/Aug/16 13:22;ustas;fail-03-08-cassandra-tests.zip;https://issues.apache.org/jira/secure/attachment/12821836/fail-03-08-cassandra-tests.zip","13/Jul/16 14:24;ustas;logs-aws-linux-1307.zip;https://issues.apache.org/jira/secure/attachment/12817686/logs-aws-linux-1307.zip","14/Jul/16 14:05;ustas;logs-aws-linux-fail-1407.zip;https://issues.apache.org/jira/secure/attachment/12817949/logs-aws-linux-fail-1407.zip","01/Jul/16 12:50;ustas;logs-cassandra-ignite.zip;https://issues.apache.org/jira/secure/attachment/12815747/logs-cassandra-ignite.zip","02/Aug/16 11:35;ustas;logs-gail-ignite-cass-0208.zip;https://issues.apache.org/jira/secure/attachment/12821569/logs-gail-ignite-cass-0208.zip",,,,,,,,,,,,,,,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,Fri Aug 05 04:46:54 UTC 2016,,,,,,,,,,"0|i2z9b3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/16 23:54;irudyak;Patch;;;","10/Jun/16 00:06;irudyak;Created a pull request https://github.com/apache/ignite/pull/789 to master;;;","10/Jun/16 00:10;irudyak;All the changes merged with the master branch from upstream and available in: https://github.com/irudyak/ignite/tree/ignite-3293;;;","10/Jun/16 19:02;githubbot;GitHub user irudyak opened a pull request:

    https://github.com/apache/ignite/pull/794

    IGNITE-3293 AWS bootstrap scripts patch for Ignite-Cassandra

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/irudyak/ignite ignite-3293

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/794.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #794
    
----
commit a725b5f16d9b6fb4363432710cb87d420b2c8a88
Author: Igor <irudyak@gmail.com>
Date:   2016-06-10T00:03:09Z

    fix for ignite-3293

commit 7ba18f937fcd4d54ba156397d893731588a04f4e
Author: Igor <irudyak@gmail.com>
Date:   2016-06-10T04:04:21Z

    shell scripts to recreate Cassandra artifacts on each load tests execution

----
;;;","15/Jun/16 15:23;kuaw26;Igor, I do some review on your AWS bootstrap scripts.

Very impressive amount of work was done, but from my point of view we need to fix following issues:
1) Please write some REDAME.txt or DEVNOTES.txt in ""modules/cassandra/src/test/bootstrap/aws"" that will describe how this all should be used.
Ideally one should take this step-by-step instruction and be able to run tests on AWS.

2) Please add more comments in all *.sh files some of them are quite well commented, some of them has no comments at all.

3) Take a look at cassandra-bootstrap.sh and please make configurable setting like this:
   AWS_CLI_DOWNLOAD_URL=https://s3.amazonaws.com/aws-cli/awscli-bundle.zip
   JDK_DOWNLOAD_URL=http://download.oracle.com/otn-pub/java/jdk/8u77-b03/jdk-8u77-linux-x64.tar.gz
   TESTS_PACKAGE_DONLOAD_URL=s3://bucket/folder/ignite-cassandra-tests-1.6.0-SNAPSHOT.zip
Please look for all such places. By the way, why ""ignite-cassandra-tests-1.6.0-SNAPSHOT.zip"" ?

4) Also I found hardcoded IP addresses like : http://169.254.169.254 in ""modules/cassandra/src/test/bootstrap/aws/common.sh""
  It is OK to have such addresses? I think they also should be configurable.;;;","15/Jun/16 21:00;irudyak;Alexey,

1) All user related documentation is already available on Ignite website: https://apacheignite.readme.io/docs/aws-infrastructure-deployment

2) I added more comments to all shell scripts.

3) By the nature of AWS bootstrap scripts it's not possible to store all these variables AWS_CLI_DOWNLOAD_URL, JDK_DOWNLOAD_URL and TESTS_PACKAGE_DONLOAD_URL in one place - cause every bootstrap script should be self contained. As you may also found there are several absolutely same functions which I just copy and pasted among cassandra-bootstrap.sh, ignite-bootstrap.sh, tests-bootstrap.sh & master-bootstrap.sh scripts. That's because of the same limitation. However I moved as much as it was possible common functions and configuration settings into common.sh and env.sh scripts. These scripts are downloaded from S3 with the tests package once all the required pre-requisites (JDK, AWS CLI and etc.) installed on EC2 node by bootstrap script.

4) This is hardcoded static IP address inside Amazon Cloud, where they are hosting their metadata service. It provides REST API and allows each EC2 instance to get information about itself: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html

;;;","16/Jun/16 09:21;kuaw26;Igor, 

How user will know about docs on https://apacheignite.readme.io ?
Let's add a couple of lines in README.txt with link to docs?

As about variables - I'm not an AWS expert and will ask Nik Tikhonov to review this part.
Also we will try to run scripts on AWS and will provide feedback.;;;","16/Jun/16 09:22;kuaw26;Nik, please review AWS related scripts.;;;","17/Jun/16 09:55;ntikhonov;Igor,

AWS scripts looks good for me. Now we try to deploy the framework on AWS. I'll post the result here.;;;","17/Jun/16 22:02;irudyak;I also added README.txt;;;","20/Jun/16 15:44;ustas;Igor, 

I tried to deploy the framework on AWS and got the following problems:
* Framework doesn't work with Red Hat Enterprise Linux 7.2 (HVM), SSD Volume Type - ami-775e4f16. It can't create tags for instances.
* I can't get report.txt in S3_TESTS_SUMMARY. All instances started, on S3 created success directories, Ganglia works. Looks like the test didn't finish. ;;;","22/Jun/16 04:48;irudyak;Ilya,

Just want to check - are you using role-based authorization in AWS? The thing is that the role you are assigning to EC2 instances should have permissions to add tags to the instances you are going to create.

Probably you didn't get report.txt cause you used default Load Test settings, according to which it takes about 20min for all Load Tests to complete and only when all tests completed the report will be generated.

As for RHEL - could you provide more details regarding the problem with this OS? I previously checked framework with Amazon Linux, but perhaps there could be some nuances with RHEL.;;;","22/Jun/16 08:51;ustas;Igor,

Yes, I created new role with sufficient permissions for create tags and started instances with this role.

I waited about 30-40 min after test started but report didn't appear. Is it ok?

When I had a problem with RHEL I also switched to Amazon Linux and on new instances it works without any changes in scripts/role/other settings.
I guess cassandra-bootstrap.sh can't correct setup AWSCLI on RHEL because when I go to instance and try to execute manually command from common.sh: 
{noformat}
ec2-create-tags $INSTANCE_ID --tag ""Name"" =""CASSANDRA"" --region ""us-west-2""
{noformat}
where
{noformat}
INSTANCE_ID=$(curl http://169.254.169.254/latest/meta-data/instance-id) 
{noformat}
system can't find any ec2-* commands.
;;;","23/Jun/16 07:02;irudyak;Ilya,

The reason why you didn't see report.txt is because Cassandra failed to setup and Load Test simply wasn't executed. The reason is in ""CASSANDRA_DOWNLOAD_URL"" property from env.sh - it points to the URL ""http://www-eu.apache.org/dist/cassandra/3.5/apache-cassandra-3.5-bin.tar.gz"" which is not valid anymore, cause Cassandra established new release 3.7. I changes this property to URL from Cassandra binaries archive ""http://archive.apache.org/dist/cassandra/3.5/apache-cassandra-3.5-bin.tar.gz"" and now it should work.

As for RHEL, I changed ""ec2-create-tags"" to more generic command ""aws ec2 create-tags"" and it works now. Nevertheless there are some problems with missed rpm packages in RHEL which are required for Ganglia. Because of this framework still fails on RHEL. 

As for now I committed both changes to ""IGNITE-3293"" branch and framework should work with Amazon Linux. I'll fix the problem with RHEL in the near future.;;;","23/Jun/16 08:26;ustas;Igor,

I noticed that link in env.sh is invalid and replaced it to:
{noformat}
http://www-eu.apache.org/dist/cassandra/3.6/apache-cassandra-3.6-bin.tar.gz
{noformat}
Should it work?;;;","24/Jun/16 07:05;irudyak;Yep, it should work. Please also check that IGNITE_DOWNLOAD_URL & TESTS_PACKAGE_DONLOAD_URL from env.sh point to correct URLs.

If you'll run into any issues could you please trigger logs collection(https://apacheignite.readme.io/docs/aws-infrastructure-deployment#triggering-logs-collection). After that, logs from all EC2 instances will be uploaded into folder on S3, specified by S3_LOGS_ROOT from env.sh. You can download all these logs (aws s3 sync <s3_folder> <local_folder>), archive them into zip file and attach it to this ticket. Such a way it will be easier for me to find reason of the problem.

By the way, I made some useful modifications to logs collection logic and committed them to ""ignite-3293"" branch. Please update you sources from this branch before trying next attempt.;;;","24/Jun/16 08:28;ustas;Igor, thanks! 
I wil re-check these links, enable logging and will re-test it in the near future.

;;;","01/Jul/16 01:14;irudyak;Ilya,

I also added some fixes to support deployment on Red Hat Enterprise Linux 7.2 (ami-775e4f16). All the fixes were committed to ""ignite-3293"" branch.

For some of deployments you can also find strange behavior of Ganglia UI - it sometimes shows Ganglia master node as a member of one of the cluster(Cassandra, Ignite, Tests) and shows its state as down. There is a known issue (https://sourceforge.net/p/ganglia/mailman/message/4797311, https://sourceforge.net/p/ganglia/mailman/message/8661991) I'll try to find some workaround for it.;;;","01/Jul/16 12:49;ustas;Igor,

Please take a look at logs in attachment. I still can't get summary report - t-summary.zip.
;;;","01/Jul/16 15:34;irudyak;Ilya,

It looks like you didn't properly setup role-based authentication/authorization for one of Ignite nodes (ip-172-31-28-242.us-west-2.compute.internal). It just failed to perform s3 operation like this:

*aws s3 ls s3://cassandra-test-1313/framework_metadata/ignite/first-node-lock*

and such an error was reported:

*Unable to locate credentials. You can configure credentials by running ""aws configure"".*

With properly setup role based authentication AWS CLI doesn't need any credentials.;;;","05/Jul/16 22:35;irudyak;Ilya,

Did you have a chance to check the recommendation?;;;","07/Jul/16 11:32;ustas;Igor,

I tried to deploy and run load tests on Amazon Linux (ami-6869aa05) and on Red Hat Enterprise Linux 7.2 (ami-2051294a).
On Red Hat test finished successfully - all nodes started, tests executed, generated summary report, but on Amazon Linux test did't start.
I attached all logs and scripts. This problem was reproduced 3 times: cleared bucket, re-upload all artifacts.;;;","07/Jul/16 17:50;irudyak;Ilya,

Could you please attach logs? The zip archive you attached contains system state and  metadata info, but not logs. According to your *env.sh* logs should be in *s3://buck-cassandra-1/test1/logs*. Just trigger logs collection and after that create a zip archive of this folder.;;;","07/Jul/16 22:08;irudyak;Ilya,

It also looks like you are using kind of non standard Amazon Linux image (ami-6869aa05). Here is what AWS tells me about this image:

*aws ec2 describe-images --image-ids ami-6869aa05*

*A client error (InvalidAMIID.NotFound) occurred when calling the DescribeImages operation: The image id '[ami-6869aa05]' does not exist*

Probably that's your custom private image. I previously tested the framework with Amazon Linux using this standard image: ami-f303fb93;;;","11/Jul/16 07:52;ustas;Igor,

That all that contains my bucket. There isn't logs directory.
Amazon Linux image is public and it is default aws image. I also got error when tried to get information about this image:
{noformat} 
aws ec2 describe-images --image-ids ami-6869aa05
A client error (InvalidAMIID.NotFound) occurred when calling the DescribeImages operation: The image id '[ami-6869aa05]' does not exist
{noformat}
because in different regions AMI has different ids.
In us-east-1 it's ""ami-6869aa05"":
{noformat}
aws ec2 describe-images --image-ids ""ami-6869aa05"" --region us-east-1
{
    ""Images"": [
        {
            ""CreationDate"": ""2016-06-22T06:10:37.000Z"",
            ""OwnerId"": ""137112412989"",
            ""ImageId"": ""ami-6869aa05"",
            ""State"": ""available"",
            ""VirtualizationType"": ""hvm"",
            ""ImageLocation"": ""amazon/amzn-ami-hvm-2016.03.3.x86_64-gp2"",
            ""ImageType"": ""machine"",
            ""SriovNetSupport"": ""simple"",
            ""RootDeviceName"": ""/dev/xvda"",
            ""Name"": ""amzn-ami-hvm-2016.03.3.x86_64-gp2"",
            ""Description"": ""Amazon Linux AMI 2016.03.3 x86_64 HVM GP2"",
            ""ImageOwnerAlias"": ""amazon"",
            ""RootDeviceType"": ""ebs"",
            ""BlockDeviceMappings"": [
                {
                    ""DeviceName"": ""/dev/xvda"",
                    ""Ebs"": {
                        ""VolumeType"": ""gp2"",
                        ""DeleteOnTermination"": true,
                        ""Encrypted"": false,
                        ""SnapshotId"": ""snap-25dd2ac1"",
                        ""VolumeSize"": 8
                    }
                }
            ],
            ""Architecture"": ""x86_64"",
            ""Hypervisor"": ""xen"",
            ""Public"": true
        }
    ]
}

 {noformat}


in us-west-2 - ""ami-7172b611"" :

{noformat}
aws ec2 describe-images --image-ids ""ami-7172b611"" --region us-west-2
{
    ""Images"": [
        {
            ""Name"": ""amzn-ami-hvm-2016.03.3.x86_64-gp2"",
            ""VirtualizationType"": ""hvm"",
            ""RootDeviceName"": ""/dev/xvda"",
            ""Architecture"": ""x86_64"",
            ""OwnerId"": ""137112412989"",
            ""ImageLocation"": ""amazon/amzn-ami-hvm-2016.03.3.x86_64-gp2"",
            ""State"": ""available"",
            ""RootDeviceType"": ""ebs"",
            ""ImageOwnerAlias"": ""amazon"",
            ""Hypervisor"": ""xen"",
            ""CreationDate"": ""2016-06-22T09:19:44.000Z"",
            ""ImageId"": ""ami-7172b611"",
            ""BlockDeviceMappings"": [
                {
                    ""DeviceName"": ""/dev/xvda"",
                    ""Ebs"": {
                        ""SnapshotId"": ""snap-d465048a"",
                        ""VolumeType"": ""gp2"",
                        ""VolumeSize"": 8,
                        ""Encrypted"": false,
                        ""DeleteOnTermination"": true
                    }
                }
            ],
            ""Public"": true,
            ""SriovNetSupport"": ""simple"",
            ""ImageType"": ""machine"",
            ""Description"": ""Amazon Linux AMI 2016.03.3 x86_64 HVM GP2""
        }
    ]
}

{noformat}

You can find this image (Amazon Linux AMI 2016.03.3 (HVM), SSD Volume Type) in EC2->Launch instances->Quick start section.;;;","13/Jul/16 00:26;irudyak;Ilya,

Thanks for specifying details - it really helped! For these Amazon Linux images (ami-7172b611, ami-6869aa05) there was a problem with ""netty-all"" transitive dependency which was by mistake included into test jars lib directory.

I fixed the issue, merged my changes with the latest source from upstream and committed everything to the same branch ""ignite-3293"". Try it once again :-);;;","13/Jul/16 14:23;ustas;Igor,

Test failed again. I attached logs.;;;","14/Jul/16 05:43;irudyak;Ilya,

Have you updated your source code from ignite-3293 branch and created and uploaded to S3 new package once again? It looks like you are using old version, cause it should be detailed error stack trace in the log. It also  again failed at the same point (Cassandra tables recreation).

What EC2 image did you use? Could you please trigger logs collection (https://apacheignite.readme.io/docs/aws-infrastructure-deployment#triggering-logs-collection), cause you only attached some metadata and bootstrap logs. Once you triggered logs collection, just wait about 1min. After that, logs from all EC2 instances will be uploaded into folder on S3, specified by S3_LOGS_ROOT from env.sh;;;","14/Jul/16 14:04;ustas;Igor,

I re-build ignite-cassandra-tests and apache-ignite-fabric and re-checked all scripts/configs once again. Logs you can find in attachment
Image - the same amazon linux (us-west-2 -> ami-7172b611; us-east-1 -> ami-6869aa05 ).
Why does not enabled logging by default?;;;","17/Jul/16 06:49;irudyak;Ilya,

According to logs, it looks like you had two issues on Tests node ip-172-31-23-30.us-west-2.compute.internal:

1) The same problem like previously - role-based authentication/authorization wasn't properly setup and such an error was reported: *Unable to locate credentials. You can configure credentials by running ""aws configure"".*

2) It failed to get Ganglia from github and such an error was reported: *fatal: unable to access 'https://github.com/ganglia/monitor-core.git/': Could not resolve host: github.com*. This could be a problem with a network. To prevent such kind of problems I slightly modified a script, to perform 10 attempts (with time-outs) to download Ganglia from Github.

Regarding doing logging automatically - good point. Also included it into this branch. Now logs are automatically uploaded from all EC2 instances to S3 each 30 seconds.

Also added some enhancement to Cassandra deployment, it now can take advantage of using different HDDs for data files, commit log and caches. All you need to do, is just specify multiple HDDs once configuring your EC2 instances. Cassandra bootstrap script will automatically detect such drives. All additional drives will be partitioned, formatted and mounted. Moreover Cassandra will be configured to use all available drives.
	
All the changes were committed to ""ignite-3293"" branch. ;;;","18/Jul/16 09:41;ustas;Igor,

1) Where should I configure credentials? On all cassandra/ignite/test hosts? 
I add AmazonS3FullAccess, AmazonEC2FullAccess, AdministratorAccess policies for my role. Should I add something else?;;;","19/Jul/16 05:43;irudyak;Ilya,

If you granted all the mentioned permissions for the IAM role which you assigned to EC2 instances it should work fine. Probably it was kind of temporary EC2 network failure, cause otherwise I don't see the reason why it wasn't able to resolve github host. 

By the way did you use the same security group for all EC2 instances? As another reason of the failure it could be that the security group you used for this particular instance forbid all outgoing traffic to public network. In a such case it simply wasn't able to access github server.

Could you please try one more run.

;;;","22/Jul/16 23:52;irudyak;Ilya,

Did you have a chance to check it one more time?;;;","28/Jul/16 22:20;irudyak;Ilya,

Do you have any updates?;;;","02/Aug/16 11:35;ustas;Igor,
 
I re-build and  re-tested it several time. 
Configuration:
- 3 cassandra instances
- 3 ignite instances
- 2 test instances
- Amazon Linux AMI 2016.03.3 (HVM), SSD Volume Type - ami-6869aa05
- instance type- c4.2xlarge
-  ""All permit"" security group for all instances.

Cassandra and ignite started successfully but one test failed again with error ""Failed to recreate Cassandra artifacts""

I attached all logs. Please take a look on it.
;;;","02/Aug/16 18:20;irudyak;Ilya,

Did you use the latest version from Git? According to the logs, you again have a problem with ""netty-all"" transitive dependency which was previously resolved.;;;","03/Aug/16 13:21;ustas;Igor,

You a right. Sorry. As I understand latest commit is:
{noformat}
commit f41060473465f4843a2e28c42d52b3ab97cbf8ed
Author: Igor <irudyak@gmail.com>
Date:   Tue Aug 2 17:01:31 2016 -0700

    minor fix - ""netty-all"" removed from cassandra-all artifact exclusions

diff --git a/modules/cassandra/pom.xml b/modules/cassandra/pom.xml
index 91a8507..9fc880b 100644
--- a/modules/cassandra/pom.xml
+++ b/modules/cassandra/pom.xml
{noformat}
Right?

I've rebuilt ignite-cassandra-tests and ran ""ignite"" tests with 3 ignite and cassandra nodes and with 2 tests nodes. All work fine. 
But when I tried to change TESTS_TYPE to ""cassandra"" then got 2 new errors.

Ignite error:
{noformat}
Check your system clock
[ERROR] Failed to configure ganglia-core
[ERROR]-----------------------------------------------------
[ERROR] Failed to start ignite node
[ERROR]-----------------------------------------------------
upload: ../ignite-cassandra-tests/bootstrap/start_result to s3://qa-is-cass/test1/ignite/failure/ip-172-31-0-27.ec2.internal/__error__
[INFO] Removing ignite node registration from: s3://qa-is-cass/test1/ignite/discovery/ip-172-31-0-27.ec2.internal
[INFO] Node registration actually haven't been previously created
Aug 03 12:59:32 cloud-init[2723]: util.py[WARNING]: Failed running /var/lib/cloud/instance/scripts/part-001 [1]
Aug 03 12:59:32 cloud-init[2723]: cc_scripts_user.py[WARNING]: Failed to run module scripts-user (scripts in /var/lib/cloud/instance/scripts)
Aug 03 12:59:32 cloud-init[2723]: util.py[WARNING]: Running module scripts-user (<module 'cloudinit.config.cc_scripts_user' from '/usr/lib/python2.7/dist-packages/cloudinit/config/cc_scripts_user.pyc'>) failed
{noformat}

Cassandra error:
{noformat}
[INFO] Removing cassandra node registration from: s3://qa-is-cass/test1/cassandra/discovery/ip-172-31-0-233.ec2.internal
[INFO] Node registration actually haven't been previously created
[INFO] Trying to get first node lock: s3://qa-is-cass/test1/cassandra/first-node-lock
[INFO] Checking for the first node lock: s3://qa-is-cass/test1/cassandra/first-node-lock
[INFO] First node lock doesn't exist

[ERROR] Failed to create first node lock: s3://qa-is-cass/test1/cassandra/first-node-lock
[ERROR]-----------------------------------------------------
[ERROR] Failed to start cassandra node
[ERROR]-----------------------------------------------------
Completed 1 part(s) with ... file(s) remaining
[ERROR] Failed to drop report folder: s3://qa-is-cass/test1/cassandra/failure/ip-172-31-0-233.ec2.internal

[ERROR] Failed to export node start result to: s3://qa-is-cass/test1/cassandra/failure/ip-172-31-0-233.ec2.internal/__error__
[INFO] Removing cassandra node registration from: s3://qa-is-cass/test1/cassandra/discovery/ip-172-31-0-233.ec2.internal
[INFO] Node registration actually haven't been previously created
{noformat}

Started only 2 ignite and cassandra nodes (should be 3).
I didn't change roles, policies, time zones and anithing else (except TESTS_TYPE) after ""ignite"" tests.

Please take a look on logs at attachment.
;;;","04/Aug/16 07:00;irudyak;Ilya,

It actually not the problem of ""cassandra"" test type. According to the logs there are couple of problems:

1) Cassandra node failed to bootstrap because of ""upload failed: opt/ignite-cassandra-tests/bootstrap/first-node-lock to s3://qa-is-cass/test1/cassandra/first-node-lock Unable to locate credentials"". It looks like there is a problem with permissions for ""s3://qa-is-cass/test1/cassandra"" folder or with role based authentication.

2) Ignite node failed to bootstrap because of ""checking whether build environment is sane... configure: error: newly created file is older than distributed files!"". The problem happened while trying to build Ganglia agent from source code. The reason for this is that EC2 node time was out of sync while it's started, however ntp was installed. I added additional logic to handle this by refreshing ntpd service.

All the changes were committed to ""ignite-3293"" branch.;;;","04/Aug/16 10:18;ustas;Igor,

I've re-tested your changes. Load tests work fine.  ;;;","04/Aug/16 10:53;kuaw26;Ilya, Igor

So it seems I could merge to master?;;;","04/Aug/16 11:12;ustas;Alexey, 

I think - yes, we can merge.;;;","05/Aug/16 04:46;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/794
;;;","05/Aug/16 04:46;kuaw26;Merged to master.;;;"
A reference to HadoopClassLoader may be held in IGFS service pool threads after Job finish.,IGNITE-3285,12977165,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,iveselovskiy,iveselovskiy,09/Jun/16 09:24,28/Jun/16 08:47,14/Jul/23 06:20,28/Jun/16 08:46,1.6,,,1.7,igfs,,,,,0,,,,"Memory profiling shows that an instance of HadoopClassLoader used for Hadoop job may still be referenced after that job finish. This happens for 2 reasons. 

1) When a new thread in IGFS pool is created by a thread that has HadoopClassLoader as the current context class loader, this class loader inherently propagated as a context class loader to the created thread:
{code}
java.lang.Throwable: #### 00igfs-#85%null%.<init>: set hadoop class loader: HadoopClassLoader [name=hadoop-task-6b4d1037-65df-4e83-a7f8-7338e13ab1cf_1-SETUP-0]. Current cl = HadoopClassLoader [name=hadoop-task-6b4d1037-65df-4e83-a7f8-7338e13ab1cf_1-SETUP-0]
        at org.apache.ignite.thread.IgniteThread.<init>(IgniteThread.java:83)
        at org.apache.ignite.thread.IgniteThread.<init>(IgniteThread.java:62)
        at org.apache.ignite.thread.IgniteThreadFactory$1.<init>(IgniteThreadFactory.java:62)
        at org.apache.ignite.thread.IgniteThreadFactory.newThread(IgniteThreadFactory.java:62)
        at java.util.concurrent.ThreadPoolExecutor$Worker.<init>(ThreadPoolExecutor.java:610)
        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:924)
        at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1360)
        at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:132)
        at org.apache.ignite.internal.processors.igfs.IgfsDataManager.callIgfsLocalSafe(IgfsDataManager.java:1133)
        at org.apache.ignite.internal.processors.igfs.IgfsDataManager.processBatch(IgfsDataManager.java:1024)
        at org.apache.ignite.internal.processors.igfs.IgfsDataManager.access$2500(IgfsDataManager.java:100)
        at org.apache.ignite.internal.processors.igfs.IgfsDataManager$BlocksWriter.storeDataBlocks(IgfsDataManager.java:1416)
        at org.apache.ignite.internal.processors.igfs.IgfsDataManager.storeDataBlocks(IgfsDataManager.java:538)
        at org.apache.ignite.internal.processors.igfs.IgfsOutputStreamImpl.storeDataBlock(IgfsOutputStreamImpl.java:193)
        at org.apache.ignite.internal.processors.igfs.IgfsOutputStreamAdapter.sendData(IgfsOutputStreamAdapter.java:252)
        at org.apache.ignite.internal.processors.igfs.IgfsOutputStreamAdapter.write(IgfsOutputStreamAdapter.java:135)
        at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsInProc.writeData(HadoopIgfsInProc.java:440)
        at org.apache.ignite.internal.processors.hadoop.igfs.HadoopIgfsOutputStream.write(HadoopIgfsOutputStream.java:112)
        at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
        at java.io.BufferedOutputStream.write(BufferedOutputStream.java:126)
        at org.apache.hadoop.fs.FSDataOutputStream$PositionCache.write(FSDataOutputStream.java:58)
        at java.io.DataOutputStream.write(DataOutputStream.java:107)
        at org.apache.hadoop.io.SequenceFile$Writer.append(SequenceFile.java:1333)
        at org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat$1.write(SequenceFileOutputFormat.java:83)
        at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2Context.write(HadoopV2Context.java:144)
        at org.apache.hadoop.mapreduce.lib.map.WrappedMapper$Context.write(WrappedMapper.java:112)
        at org.apache.hadoop.examples.RandomTextWriter$RandomTextMapper.map(RandomTextWriter.java:140)
        at org.apache.hadoop.examples.RandomTextWriter$RandomTextMapper.map(RandomTextWriter.java:102)
        at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:145)
        at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2MapTask.run0(HadoopV2MapTask.java:74)
        at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2Task.run(HadoopV2Task.java:54)
        at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.run(HadoopV2TaskContext.java:249)
        at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.runTask(HadoopRunnableTask.java:201)
        at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call0(HadoopRunnableTask.java:144)
        at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask$1.call(HadoopRunnableTask.java:116)
        at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask$1.call(HadoopRunnableTask.java:114)
        at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.runAsJobOwner(HadoopV2TaskContext.java:544)
        at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call(HadoopRunnableTask.java:114)
        at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call(HadoopRunnableTask.java:46)
        at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopExecutorService$2.body(HadoopExecutorService.java:186)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.lang.Thread.run(Thread.java:745)
{code} 

2. java.lang.Thread#inheritedAccessControlContext field after new thread construction may have reference to the parent Thread context class loader through the java.security.ProtectionDomain#classloader field.

{code}
this     - value: org.apache.ignite.internal.processors.hadoop.HadoopClassLoader #2
 <- classloader     - class: java.security.ProtectionDomain, value: org.apache.ignite.internal.processors.hadoop.HadoopClassLoader #2
  <- [4]     - class: java.security.ProtectionDomain[], value: java.security.ProtectionDomain #123 
   <- context     - class: java.security.AccessControlContext, value: java.security.ProtectionDomain[] #67 (8 items)
    <- inheritedAccessControlContext (thread object)     - class: org.apache.ignite.thread.IgniteThreadFactory$1, value: java.security.AccessControlContext #105 
{code}


Note that strictly speaking these references do not form leak , since number of threads in the pool is limited by a constant. Nevertheless, it should be fixed since means not effective memory usage.
 
Currently we suggest to fix this simply be pre-creating all the threads in igfs service pool.",,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 28 08:47:28 UTC 2016,,,,,,,,,,"0|i2z7nb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/16 10:57;iveselovskiy;https://github.com/gridgain/apache-ignite/pull/8;;;","09/Jun/16 13:50;iveselovskiy;https://github.com/apache/ignite/pull/787;;;","28/Jun/16 08:47;vozerov;Duplicate to IGNITE-3351.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop: NPE when mappings are not set in BasicUserNameMapper.,IGNITE-3274,12976780,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,08/Jun/16 08:49,08/Jun/16 08:51,14/Jul/23 06:20,08/Jun/16 08:50,1.6,,,1.7,hadoop,,,,,0,,,,We simply forgot null check there.,,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-06-08 08:49:46.0,,,,,,,,,,"0|i2z59z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL query parse error on map query side,IGNITE-3273,12976493,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ascherbakov,ascherbakov,07/Jun/16 15:34,23/Apr/18 12:58,14/Jul/23 06:20,14/Jun/16 18:48,,,,1.8,sql,,,,,0,,,,"Distributed SQL query cannot be parsed on map side if it contains left join.
The same local query works without any error.
Replacing left join with inner join removes the error.
See the attachment for the reproducer.

{noformat}
[10:40:58,850][ERROR][main][GridMapQueryExecutor] Failed to execute local query: GridQueryRequest [reqId=1, pageSize=1024, space=P, qrys=[GridCacheSqlQuery [qry=SELECT
PERSON._KEY __C0,
PERSON._VAL __C1,
PERSON.NAME __C2,
PERSON.ID __C3,
PERSON.DEPID __C4,
DEP._KEY __C5,
DEP._VAL __C6,
DEP.NAME __C7,
DEP.ID __C8,
DEP.ORGID __C9,
ORG._KEY __C10,
ORG._VAL __C11,
ORG.NAME __C12,
ORG.ID __C13
FROM P.PERSON 
 INNER JOIN D.DEPARTMENT DEP 
 LEFT OUTER JOIN O.ORG ORG 
 ON ORG.ID = DEP.ORGID
WHERE DEP.ID = P.PERSON.DEPID, params=[], paramIdxs=[], paramsSize=0, cols={__C0=GridSqlType [type=4, scale=0, precision=10, displaySize=11, sql=INTEGER], __C1=GridSqlType [type=19, scale=0, precision=2147483647, displaySize=2147483647, sql=OTHER], __C2=GridSqlType [type=13, scale=0, precision=2147483647, displaySize=2147483647, sql=VARCHAR], __C3=GridSqlType [type=4, scale=0, precision=10, displaySize=11, sql=INTEGER], __C4=GridSqlType [type=4, scale=0, precision=10, displaySize=11, sql=INTEGER], __C5=GridSqlType [type=4, scale=0, precision=10, displaySize=11, sql=INTEGER], __C6=GridSqlType [type=19, scale=0, precision=2147483647, displaySize=2147483647, sql=OTHER], __C7=GridSqlType [type=13, scale=0, precision=2147483647, displaySize=2147483647, sql=VARCHAR], __C8=GridSqlType [type=4, scale=0, precision=10, displaySize=11, sql=INTEGER], __C9=GridSqlType [type=4, scale=0, precision=10, displaySize=11, sql=INTEGER], __C10=GridSqlType [type=4, scale=0, precision=10, displaySize=11, sql=INTEGER], __C11=GridSqlType [type=19, scale=0, precision=2147483647, displaySize=2147483647, sql=OTHER], __C12=GridSqlType [type=13, scale=0, precision=2147483647, displaySize=2147483647, sql=VARCHAR], __C13=GridSqlType [type=4, scale=0, precision=10, displaySize=11, sql=INTEGER]}, alias=null]], topVer=AffinityTopologyVersion [topVer=1, minorTopVer=0], extraSpaces=[D, O], parts=null]
class org.apache.ignite.IgniteCheckedException: Failed to parse SQL query: SELECT
PERSON._KEY __C0,
PERSON._VAL __C1,
PERSON.NAME __C2,
PERSON.ID __C3,
PERSON.DEPID __C4,
DEP._KEY __C5,
DEP._VAL __C6,
DEP.NAME __C7,
DEP.ID __C8,
DEP.ORGID __C9,
ORG._KEY __C10,
ORG._VAL __C11,
ORG.NAME __C12,
ORG.ID __C13
FROM P.PERSON 
 INNER JOIN D.DEPARTMENT DEP 
 LEFT OUTER JOIN O.ORG ORG 
 ON ORG.ID = DEP.ORGID
WHERE DEP.ID = P.PERSON.DEPID
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:828)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:870)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onQueryRequest(GridMapQueryExecutor.java:454)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onMessage(GridMapQueryExecutor.java:184)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.send(GridReduceQueryExecutor.java:1065)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:572)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$2.iterator(IgniteH2Indexing.java:971)
	at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:61)
	at org.apache.ignite.internal.processors.cache.QueryCursorImpl.getAll(QueryCursorImpl.java:73)
	at org.apache.ignite.internal.processors.cache.distributed.replicated.Example2.main(Example2.java:40)
Caused by: org.h2.jdbc.JdbcSQLException: Column ""DEP.ORGID"" not found; SQL statement:
SELECT
PERSON._KEY __C0,
PERSON._VAL __C1,
PERSON.NAME __C2,
PERSON.ID __C3,
PERSON.DEPID __C4,
DEP._KEY __C5,
DEP._VAL __C6,
DEP.NAME __C7,
DEP.ID __C8,
DEP.ORGID __C9,
ORG._KEY __C10,
ORG._VAL __C11,
ORG.NAME __C12,
ORG.ID __C13
FROM P.PERSON 
 INNER JOIN D.DEPARTMENT DEP 
 LEFT OUTER JOIN O.ORG ORG 
 ON ORG.ID = DEP.ORGID
WHERE DEP.ID = P.PERSON.DEPID [42122-175]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:332)
	at org.h2.message.DbException.get(DbException.java:172)
	at org.h2.message.DbException.get(DbException.java:149)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:144)
	at org.h2.expression.Comparison.optimize(Comparison.java:179)
	at org.h2.command.dml.Select.setEvaluatableRecursive(Select.java:958)
	at org.h2.command.dml.Select.preparePlan(Select.java:937)
	at org.h2.command.dml.Select.prepare(Select.java:834)
	at org.h2.command.Parser.prepareCommand(Parser.java:240)
	at org.h2.engine.Session.prepareLocal(Session.java:436)
	at org.h2.engine.Session.prepareCommand(Session.java:379)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.prepareStatement(IgniteH2Indexing.java:359)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:825)
	... 9 more
{noformat}",,ascherbakov,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/16 15:35;ascherbakov;Example2.java;https://issues.apache.org/jira/secure/attachment/12808697/Example2.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 14 18:48:58 UTC 2016,,,,,,,,,,"0|i2z3i7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jun/16 18:48;sergi;merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory consumption in ContinuousQueryHandler,IGNITE-3272,12976483,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ntikhonov,ntikhonov,ntikhonov,07/Jun/16 15:08,11/Aug/16 13:53,14/Jul/23 06:20,11/Aug/16 13:53,1.6,,,1.8,cache,,,,,0,,,,On backup nodes events put in queue with value and key. For filtered events need to store only update counter and partition. In attached test which should pass with -Xmx2g -Xms2g,,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/16 15:10;ntikhonov;IgniteCacheContinuousQueryBackupQueueTest.java;https://issues.apache.org/jira/secure/attachment/12808694/IgniteCacheContinuousQueryBackupQueueTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Aug 10 11:41:00 UTC 2016,,,,,,,,,,"0|i2z3fz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jun/16 16:38;ntikhonov;Implemented that in backup queue don't saved key and value for filtered events.;;;","14/Jun/16 10:41;sboikov;Reviewed, I think 'isFiltered()' check is needed in CacheContinuousQueryEntry.writeTo. Why it was removed?

Thanks;;;","14/Jun/16 10:48;ntikhonov;Thank you for your review!

Yes, you're right. This condition still useful for some cases. I'll recover these  changes.;;;","18/Jul/16 12:21;ntikhonov;In case when remote filter always returns {{false}}, queue on backup may consumes a significant size of memory. I guess that queue on backup nodes might be squashed in this case.;;;","08/Aug/16 18:23;ntikhonov;Implemented that for filtered events doesn't create CacheContinuousQueryEntry. That allowed to decrease memory consumption in several times.;;;","10/Aug/16 11:41;ntikhonov;Set {{null}} in unnecessary fields in {{CacheContinuousQueryEntry}} which stored in backup queue. It allows decrease memory consumption.
https://github.com/apache/ignite/pull/930;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Benchmark driver stops working when one of servers left grid and backupcount 0,IGNITE-3269,12976467,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,oleg-ostanin,krybakova,krybakova,07/Jun/16 14:22,26/Dec/18 09:19,14/Jul/23 06:20,24/Dec/18 15:57,1.7,,,2.8,yardstick,,,,,0,,,,"Test config: 4 hosts with 4 clients and 1 server each, backup count = 0.
During the test one of the servers was killed. After that one of the clients
stopped working:

{noformat}
[15:31:45,248][WARN ][sys-#27%null%][TcpCommunicationSpi] Connect timed out (consider increasing 'failureDetectionTimeout' configuration property) [addr=fosters-216/10.20.0.216:47100, failureDetectionTimeout=10000]
[15:31:45,256][WARN ][sys-#27%null%][TcpCommunicationSpi] Failed to connect to a remote node (make sure that destination node is alive and operating system firewall is disabled on local and remote hosts) [addrs=[fosters-216/10.20.0.216:4
[15:31:45,276][WARN ][disco-event-worker-#52%null%][GridDiscoveryManager] Node FAILED: TcpDiscoveryNode [id=f5bcc4d3-aa56-4e51-8672-e799a42990a6, addrs=[10.20.0.216, 127.0.0.1], sockAddrs=[fosters-216/10.20.0.216:47500, /10.20.0.216:4750
[15:31:45,324][INFO ][disco-event-worker-#52%null%][GridDiscoveryManager] Topology snapshot [ver=22, servers=3, clients=16, CPUs=64, heap=150.0GB]
ERROR: The benchmark of random operation failed.
Type '--help' for usage.
Finishing main test [ts=1465252305413, date=Mon Jun 06 15:31:45 PDT 2016]
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=9c7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
Type '--help' for usage.
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=6f7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=ff7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
org.apache.ignite.cache.CacheServerNotFoundException: Failed to map keys for cache (all partition nodes left the grid) [topVer=AffinityTopologyVersion [topVer=21, minorTopVer=0], cache=tx-offheap]
        at org.apache.ignite.internal.processors.cache.GridCacheUtils.convertToCacheException(GridCacheUtils.java:1468)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.cacheException(IgniteCacheProxy.java:1972)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.get(IgniteCacheProxy.java:914)
        at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.doGet(IgniteCacheRandomOperationBenchmark.java:670)
        at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.executeRandomOperation(IgniteCacheRandomOperationBenchmark.java:518)
        at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.access$900(IgniteCacheRandomOperationBenchmark.java:83)
        at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark$2.call(IgniteCacheRandomOperationBenchmark.java:628)
        at org.apache.ignite.yardstick.IgniteBenchmarkUtils.doInTransaction(IgniteBenchmarkUtils.java:52)
        at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.executeInTransaction(IgniteCacheRandomOperationBenchmark.java:619)
        at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.test(IgniteCacheRandomOperationBenchmark.java:153)
        at org.yardstickframework.impl.BenchmarkRunner$2.run(BenchmarkRunner.java:176)
        at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.internal.cluster.ClusterTopologyServerNotFoundException: Failed to map keys for cache (all partition nodes left the grid) [topVer=AffinityTopologyVersion [topVer=21, minorTopVer=0], cache=tx-offheap]
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.serverNotFoundError(GridPartitionedSingleGetFuture.java:660)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.mapKeyToNode(GridPartitionedSingleGetFuture.java:343)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.map(GridPartitionedSingleGetFuture.java:204)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.access$300(GridPartitionedSingleGetFuture.java:66)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture$4.run(GridPartitionedSingleGetFuture.java:723)
        at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6515)
        at org.apache.ignite.internal.processors.closure.GridClosureProcessor$1.body(GridClosureProcessor.java:803)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        ... 1 more
class org.apache.ignite.IgniteCheckedException: Transaction has been already completed.
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=ff7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
class org.apache.ignite.IgniteCheckedException: Transaction has been already completed.
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=558413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=ff7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
class org.apache.ignite.IgniteCheckedException: Transaction has been already completed.
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=558413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=ff7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
class org.apache.ignite.IgniteCheckedException: Transaction has been already completed.
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=558413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=ff7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
class org.apache.ignite.IgniteCheckedException: Transaction has been already completed.
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=558413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=ff7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
class org.apache.ignite.IgniteCheckedException: Transaction has been already completed.
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=558413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=ff7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
class org.apache.ignite.IgniteCheckedException: Transaction has been already completed.
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[15:31:45] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=ff7413d2551-758034b3-0248-4d62-b901-be86d119183c, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:700)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:644)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:607)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:135)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:133)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
...
{noformat}
Complete log is attached.

Expected behaviour: client prints some error message in log, but continues performing the test.",,agura,krybakova,oleg-ostanin,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/16 14:26;krybakova;failed_client_log.zip;https://issues.apache.org/jira/secure/attachment/12808685/failed_client_log.zip",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 24 15:57:21 UTC 2018,,,,,,,,,,"0|i2z3cf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Nov/16 12:38;krybakova;Similar case:
ignite-1.8, 80 clients and 20 servers, backup count=1:
{noformat}
[15:23:36,733][INFO ][grid-timeout-worker-#7%null%][IgniteKernal]
Metrics for local node (to disable set 'metricsLogFrequency' to 0)
    ^-- Node [id=215e4b73, name=null, uptime=00:19:16:915]
    ^-- H/N/C [hosts=8, nodes=100, CPUs=128]
    ^-- CPU [cur=1.53%, avg=2%, GC=0%]
    ^-- Heap [used=437MB, free=57.23%, comm=1024MB]
    ^-- Non heap [used=44MB, free=65.29%, comm=47MB]
    ^-- Public thread pool [active=0, idle=0, qSize=0]
    ^-- System thread pool [active=0, idle=32, qSize=0]
    ^-- Outbound messages queue [size=0]
[15:23:37,029][WARN ][grid-nio-worker-1-#10%null%][TcpCommunicationSpi] Failed to process selector key (will close): GridSelectorNioSessionImpl [selectorIdx=1, queueSize=0, writeBuf=java.nio.DirectByteBuffer[pos=0 lim=32768 cap=32768], r
eadBuf=java.nio.DirectByteBuffer[pos=0 lim=32768 cap=32768], recovery=GridNioRecoveryDescriptor [acked=46848, resendCnt=0, rcvCnt=46758, sentCnt=46860, reserved=true, lastAck=46752, nodeLeft=false, node=TcpDiscoveryNode [id=d4069148-449b
-41ee-b772-d5586265f23f, addrs=[127.0.0.1, 172.25.1.38], sockAddrs=[/172.25.1.38:47500, /127.0.0.1:47500], discPort=47500, order=102, intOrder=101, lastExchangeTime=1480508020664, loc=false, ver=1.8.0#20161129-sha1:d0e0eaac, isClient=fal
se], connected=true, connectCnt=1, queueLimit=5120, reserveCnt=1], super=GridNioSessionImpl [locAddr=/172.25.1.35:37134, rmtAddr=/172.25.1.38:47100, createTime=1480508073194, closeTime=0, bytesSent=52124554, bytesRcvd=24331807, sndSchedT
ime=1480508617009, lastSndTime=1480508617019, lastRcvTime=1480508616898, readsPaused=false, filterChain=FilterChain[filters=[GridNioCodecFilter [parser=o.a.i.i.util.nio.GridDirectParser@76ae88f4, directMode=true], GridConnectionBytesVeri
fyFilter], accepted=false]]
[15:23:37,030][WARN ][grid-nio-worker-1-#10%null%][TcpCommunicationSpi] Closing NIO session because of unhandled exception [cls=class o.a.i.i.util.nio.GridNioException, msg=Connection reset by peer]
[15:23:37,089][WARN ][tcp-comm-worker-#1%null%][TcpCommunicationSpi] Connect timed out (consider increasing 'failureDetectionTimeout' configuration property) [addr=/172.25.1.38:47100, failureDetectionTimeout=30000]
[15:23:37,090][WARN ][tcp-comm-worker-#1%null%][TcpCommunicationSpi] Failed to connect to a remote node (make sure that destination node is alive and operating system firewall is disabled on local and remote hosts) [addrs=[/172.25.1.38:4
7100, /127.0.0.1:47100]]
[15:23:37] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=3204e25b851-d7870206-d4cd-4c35-a749-d1d9b5b628bc, tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
pped=false, needCheckBackup=null, hasRemoteLocks=true, thread=<failed to find active thread 299>, mappings=IgniteTxMappingsImpl [], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[], explicitLock=false,
super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxStateImpl [activeCacheIds=GridLongList [idx=3, arr=[3716,107944136,-535738254]], txMap={IgniteTxKey [key=o.a.i.yardstick.cache.lo
ad.model.key.Identifier [idHash=454392180, hash=-1688540165, id=1663029, code=id 1663029], cacheId=3716]=IgniteTxEntry [key=o.a.i.yardstick.cache.load.model.key.Identifier [idHash=454392180, hash=-1688540165, id=1663029, code=id 1663029]
, cacheId=3716, partId=5, txKey=IgniteTxKey [key=o.a.i.yardstick.cache.load.model.key.Identifier [idHash=454392180, hash=-1688540165, id=1663029, code=id 1663029], cacheId=3716], val=[op=CREATE, val=o.a.i.yardstick.cache.model.Account [i
dHash=517520528, hash=216730851, balance=1663029]], prevVal=[op=CREATE, val=o.a.i.yardstick.cache.model.Account [idHash=517520528, hash=216730851, balance=1663029]], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictEx
pireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=o.a.i.yardstick.cache.load.mod
el.key.Identifier [idHash=454392180, hash=-1688540165, id=1663029, code=id 1663029], val=null, startVer=1480614477546, ver=GridCacheVersion [topVer=91987517, time=1480508616519, order=1480614477371, nodeOrder=1], hash=-1688540165, extras
=null, flags=0]]], prepared=0, locked=true, nodeId=5650c65d-918a-4a27-af67-14d995de536b, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time
=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1690740, hasValBytes=false], cacheId=107944136]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1690740, hasValBytes=false], cacheId=107944136, part
Id=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1690740, hasValBytes=false], cacheId=107944136], val=[op=DELETE, val=null], prevVal=[op=DELETE, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireT
ime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1690740, ha
sValBytes=false], val=null, startVer=1480614477560, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477331, nodeOrder=12], hash=1690740, extras=null, flags=0]]], prepared=0, locked=true, nodeId=4b092c35-1577-48f1-
ae3c-7edd4138de60, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=
KeyCacheObjectImpl [val=112205, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=112205, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=112205, hasValBy
tes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], fil
tersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=112205, hasValBytes=false], val=o.a.i.yardstick.cache.model.Account [idHash=6587437
46, hash=1027965626, balance=112205], startVer=1480614477561, ver=GridCacheVersion [topVer=91987517, time=1480508341078, order=1480605489332, nodeOrder=20], hash=1449620069, extras=null, flags=0]]], prepared=0, locked=true, nodeId=94abd5
a8-4557-4d97-bdbf-6240a734b8c9, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], Igni
teTxKey [key=KeyCacheObjectImpl [val=1162431, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1162431, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1
162431, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null,
 filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1162431, hasValBytes=false], val=null, startVer=1480614477562, ver=
GridCacheVersion [topVer=91987517, time=1480508616564, order=1480614480087, nodeOrder=20], hash=1992247094, extras=null, flags=0]]], prepared=0, locked=true, nodeId=94abd5a8-4557-4d97-bdbf-6240a734b8c9, locMapped=false, expiryPlc=null, t
ransferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1174231, hasValBytes=false],
cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1174231, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1174231, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, v
al=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDe
tachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1174231, hasValBytes=false], val=null, startVer=1480614477563, ver=GridCacheVersion [topVer=91987517, time=1480508616568, order=14806
14480101, nodeOrder=5], hash=1993228275, extras=null, flags=0]]], prepared=0, locked=true, nodeId=4d743535-0684-42bb-94fa-4d5373f9dcc2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null,
 xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=118536, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=11853
6, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=118536, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], ent
ryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapE
ntry [key=KeyCacheObjectImpl [val=118536, hasValBytes=false], val=null, startVer=1480614477564, ver=GridCacheVersion [topVer=91987517, time=1480508608044, order=1480614212713, nodeOrder=11], hash=1449801792, extras=null, flags=0]]], prep
ared=0, locked=true, nodeId=4f7e0f8b-a895-4971-84e3-bcb80d3fbc24, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1
480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1207848, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1207848, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTx
Key [key=KeyCacheObjectImpl [val=1207848, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1207848, hasValBytes=false], val=null, startVer=1480614477565, ver=GridCacheVersion [topVer=91987517, time=1480508616619, order=1480614483083, nodeOrder=16], hash=2015487956, extras=null, flags=0]]], prepared=0, locked=true, nodeId=143f09ca-6fab-4c85-aaff-5f023a17ece2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1242788, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1242788, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1242788, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1242788, hasValBytes=false], val=null, startVer=1480614477566, ver=GridCacheVersion [topVer=91987517, time=1480508616615, order=1480614483239, nodeOrder=18], hash=2019032248, extras=null, flags=0]]], prepared=0, locked=true, nodeId=7e96fb15-50ac-47f7-a0cf-6827b808f744, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1265966, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1265966, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1265966, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1265966, hasValBytes=false], val=null, startVer=1480614477567, ver=GridCacheVersion [topVer=91987517, time=1480508616626, order=1480614483416, nodeOrder=6], hash=2020970521, extras=null, flags=0]]], prepared=0, locked=true, nodeId=94619cb7-cb3f-4a60-bc22-2681f933c37a, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1284801, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1284801, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1284801, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1284801, hasValBytes=false], val=null, startVer=1480614477568, ver=GridCacheVersion [topVer=91987517, time=1480508616635, order=1480614483598, nodeOrder=4], hash=2022786620, extras=null, flags=0]]], prepared=0, locked=true, nodeId=a2ef8fdd-35e4-4731-805e-f0292dba9085, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1317631, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1317631, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1317631, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1317631, hasValBytes=false], val=null, startVer=1480614477569, ver=GridCacheVersion [topVer=91987517, time=1480508616649, order=1480614484494, nodeOrder=2], hash=2045038668, extras=null, flags=0]]], prepared=0, locked=true, nodeId=a394b7ab-d6b3-4cd8-9b4f-8efef17957a0, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1432033, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1432033, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1432033, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1432033, hasValBytes=false], val=null, startVer=1480614477570, ver=GridCacheVersion [topVer=91987517, time=1480508616691, order=1480614485503, nodeOrder=7], hash=2075360142, extras=null, flags=0]]], prepared=0, locked=true, nodeId=26199f94-1405-402e-a52e-c8c232d4dc93, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1464612, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1464612, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1464612, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1464612, hasValBytes=false], val=null, startVer=1480614477571, ver=GridCacheVersion [topVer=91987517, time=1480508616704, order=1480614486144, nodeOrder=2], hash=2078195990, extras=null, flags=0]]], prepared=0, locked=true, nodeId=a394b7ab-d6b3-4cd8-9b4f-8efef17957a0, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1505597, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1505597, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1505597, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1505597, hasValBytes=false], val=null, startVer=1480614477572, ver=GridCacheVersion [topVer=91987517, time=1480508616746, order=1480614487216, nodeOrder=13], hash=2101313098, extras=null, flags=0]]], prepared=0, locked=true, nodeId=89f23db4-4835-479a-b552-4f3b7a2a1264, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1509945, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1509945, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1509945, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1509945, hasValBytes=false], val=null, startVer=1480614477573, ver=GridCacheVersion [topVer=91987517, time=1480508616750, order=1480614487286, nodeOrder=9], hash=2101435949, extras=null, flags=0]]], prepared=0, locked=true, nodeId=adc11bfc-5326-433a-9430-c6bc32c679f9, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1525290, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1525290, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1525290, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1525290, hasValBytes=false], val=null, startVer=1480614477574, ver=GridCacheVersion [topVer=91987517, time=1480508616752, order=1480614487368, nodeOrder=5], hash=2103157250, extras=null, flags=0]]], prepared=0, locked=true, nodeId=4d743535-0684-42bb-94fa-4d5373f9dcc2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1532049, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1532049, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1532049, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1532049, hasValBytes=false], val=null, startVer=1480614477575, ver=GridCacheVersion [topVer=91987517, time=1480508616752, order=1480614487432, nodeOrder=9], hash=2103989330, extras=null, flags=0]]], prepared=0, locked=true, nodeId=adc11bfc-5326-433a-9430-c6bc32c679f9, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1535605, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1535605, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1535605, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1535605, hasValBytes=false], val=null, startVer=1480614477576, ver=GridCacheVersion [topVer=91987517, time=1480508616753, order=1480614487451, nodeOrder=7], hash=2104084341, extras=null, flags=0]]], prepared=0, locked=true, nodeId=26199f94-1405-402e-a52e-c8c232d4dc93, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1545573, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1545573, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1545573, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1545573, hasValBytes=false], val=null, startVer=1480614477577, ver=GridCacheVersion [topVer=91987517, time=1480508616754, order=1480614487465, nodeOrder=5], hash=2105007116, extras=null, flags=0]]], prepared=0, locked=true, nodeId=4d743535-0684-42bb-94fa-4d5373f9dcc2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1550926, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1550926, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1550926, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1550926, hasValBytes=false], val=null, startVer=1480614477578, ver=GridCacheVersion [topVer=91987517, time=1480508616758, order=1480614487471, nodeOrder=1], hash=2105785374, extras=null, flags=0]]], prepared=0, locked=true, nodeId=5650c65d-918a-4a27-af67-14d995de536b, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1567455, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1567455, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1567455, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1567455, hasValBytes=false], val=null, startVer=1480614477579, ver=GridCacheVersion [topVer=91987517, time=1480508616760, order=1480614487790, nodeOrder=20], hash=2106912719, extras=null, flags=0]]], prepared=0, locked=true, nodeId=94abd5a8-4557-4d97-bdbf-6240a734b8c9, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1591928, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1591928, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1591928, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1591928, hasValBytes=false], val=null, startVer=1480614477580, ver=GridCacheVersion [topVer=91987517, time=1480508616810, order=1480614489088, nodeOrder=19], hash=2109509251, extras=null, flags=0]]], prepared=0, locked=true, nodeId=017cbadc-cc88-4995-b008-18482f75025c, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1656353, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1656353, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1656353, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1656353, hasValBytes=false], val=null, startVer=1480614477581, ver=GridCacheVersion [topVer=91987517, time=1480508616935, order=1480614492609, nodeOrder=3], hash=2134587595, extras=null, flags=0]]], prepared=0, locked=true, nodeId=b3e4f19e-a359-4649-8040-f0139e0ba1bc, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1703739, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1703739, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1703739, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1703739, hasValBytes=false], val=null, startVer=1480614477582, ver=GridCacheVersion [topVer=91987517, time=1480508616945, order=1480614492877, nodeOrder=15], hash=-2136453740, extras=null, flags=0]]], prepared=0, locked=true, nodeId=5640dff9-f585-45e3-bfc5-850365f74bac, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1706847, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1706847, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1706847, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1706847, hasValBytes=false], val=null, startVer=1480614477583, ver=GridCacheVersion [topVer=91987517, time=1480508616945, order=1480614492895, nodeOrder=9], hash=-2136363377, extras=null, flags=0]]], prepared=0, locked=true, nodeId=adc11bfc-5326-433a-9430-c6bc32c679f9, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=171015, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=171015, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=171015, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=171015, hasValBytes=false], val=o.a.i.yardstick.cache.model.Person1 [idHash=945522298, hash=171015, val1=171015], startVer=1480614477584, ver=GridCacheVersion [topVer=91987416, time=0, order=0, nodeOrder=1], hash=1455129513, extras=null, flags=0]]], prepared=0, locked=true, nodeId=94619cb7-cb3f-4a60-bc22-2681f933c37a, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1735928, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1735928, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1735928, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1735928, hasValBytes=false], val=null, startVer=1480614477585, ver=GridCacheVersion [topVer=91987517, time=1480508616948, order=1480614492933, nodeOrder=12], hash=-2133621705, extras=null, flags=0]]], prepared=0, locked=true, nodeId=4b092c35-1577-48f1-ae3c-7edd4138de60, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1758443, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1758443, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1758443, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1758443, hasValBytes=false], val=null, startVer=1480614477586, ver=GridCacheVersion [topVer=91987517, time=1480508616948, order=1480614492952, nodeOrder=20], hash=-2131690038, extras=null, flags=0]]], prepared=0, locked=true, nodeId=94abd5a8-4557-4d97-bdbf-6240a734b8c9, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=1892566, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=1892566, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=1892566, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=1892566, hasValBytes=false], val=null, startVer=1480614477587, ver=GridCacheVersion [topVer=91987517, time=1480508616951, order=1480614493049, nodeOrder=3], hash=-2099544523, extras=null, flags=0]]], prepared=0, locked=true, nodeId=b3e4f19e-a359-4649-8040-f0139e0ba1bc, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=257975, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=257975, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=257975, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=257975, hasValBytes=false], val=o.a.i.yardstick.cache.model.Account [idHash=14274686, hash=223338103, balance=257975], startVer=1480614477588, ver=GridCacheVersion [topVer=91987416, time=0, order=0, nodeOrder=1], hash=1482099203, extras=null, flags=0]]], prepared=0, locked=true, nodeId=26199f94-1405-402e-a52e-c8c232d4dc93, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=296298, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=296298, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=296298, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=296298, hasValBytes=false], val=null, startVer=1480614477589, ver=GridCacheVersion [topVer=91987517, time=1480508577134, order=1480613223582, nodeOrder=18], hash=1485756834, extras=null, flags=0]]], prepared=0, locked=true, nodeId=7e96fb15-50ac-47f7-a0cf-6827b808f744, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=311640, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=311640, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=311640, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=311640, hasValBytes=false], val=null, startVer=1480614477590, ver=GridCacheVersion [topVer=91987517, time=1480508554555, order=1480612459295, nodeOrder=19], hash=1506852543, extras=null, flags=0]]], prepared=0, locked=true, nodeId=017cbadc-cc88-4995-b008-18482f75025c, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=316145, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=316145, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=316145, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=316145, hasValBytes=false], val=o.a.i.yardstick.cache.model.Account [idHash=1543962785, hash=679715961, balance=316145], startVer=1480614477591, ver=GridCacheVersion [topVer=91987416, time=0, order=0, nodeOrder=1], hash=1506996698, extras=null, flags=0]]], prepared=0, locked=true, nodeId=143f09ca-6fab-4c85-aaff-5f023a17ece2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=356344, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=356344, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=356344, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=356344, hasValBytes=false], val=null, startVer=1480614477592, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477592, nodeOrder=72], hash=1510692703, extras=null, flags=0]]], prepared=0, locked=false, nodeId=d4069148-449b-41ee-b772-d5586265f23f, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=383068, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=383068, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=383068, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=383068, hasValBytes=false], val=null, startVer=1480614477593, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477593, nodeOrder=72], hash=1513371076, extras=null, flags=0]]], prepared=0, locked=false, nodeId=b3e4f19e-a359-4649-8040-f0139e0ba1bc, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=405321, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=405321, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=405321, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=405321, hasValBytes=false], val=null, startVer=1480614477594, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477594, nodeOrder=72], hash=1534674393, extras=null, flags=0]]], prepared=0, locked=false, nodeId=d4069148-449b-41ee-b772-d5586265f23f, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=478926, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=478926, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=478926, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=478926, hasValBytes=false], val=null, startVer=1480614477595, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477595, nodeOrder=72], hash=1541234184, extras=null, flags=0]]], prepared=0, locked=false, nodeId=4d743535-0684-42bb-94fa-4d5373f9dcc2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=482088, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=482088, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=482088, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=482088, hasValBytes=false], val=null, startVer=1480614477596, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477596, nodeOrder=72], hash=1541970498, extras=null, flags=0]]], prepared=0, locked=false, nodeId=017cbadc-cc88-4995-b008-18482f75025c, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=510491, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=510491, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=510491, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=510491, hasValBytes=false], val=null, startVer=1480614477597, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477597, nodeOrder=72], hash=1564079288, extras=null, flags=0]]], prepared=0, locked=false, nodeId=7e96fb15-50ac-47f7-a0cf-6827b808f744, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=539569, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=539569, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=539569, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=539569, hasValBytes=false], val=null, startVer=1480614477598, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477598, nodeOrder=72], hash=1566195325, extras=null, flags=0]]], prepared=0, locked=false, nodeId=94619cb7-cb3f-4a60-bc22-2681f933c37a, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=547871, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=547871, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=547871, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=547871, hasValBytes=false], val=null, startVer=1480614477599, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477599, nodeOrder=72], hash=1567062170, extras=null, flags=0]]], prepared=0, locked=false, nodeId=5650c65d-918a-4a27-af67-14d995de536b, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=572222, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=572222, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=572222, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=572222, hasValBytes=false], val=null, startVer=1480614477600, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477600, nodeOrder=72], hash=1569677858, extras=null, flags=0]]], prepared=0, locked=false, nodeId=a394b7ab-d6b3-4cd8-9b4f-8efef17957a0, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=622803, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=622803, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=622803, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=622803, hasValBytes=false], val=null, startVer=1480614477601, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477601, nodeOrder=72], hash=1593695109, extras=null, flags=0]]], prepared=0, locked=false, nodeId=eb375913-7181-4714-a502-364ff54a1ad1, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=658259, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=658259, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=658259, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=658259, hasValBytes=false], val=null, startVer=1480614477602, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477602, nodeOrder=72], hash=1596638813, extras=null, flags=0]]], prepared=0, locked=false, nodeId=a2ef8fdd-35e4-4731-805e-f0292dba9085, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=711870, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=711870, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=711870, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=711870, hasValBytes=false], val=null, startVer=1480614477603, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477603, nodeOrder=72], hash=1621371162, extras=null, flags=0]]], prepared=0, locked=false, nodeId=89f23db4-4835-479a-b552-4f3b7a2a1264, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=746002, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=746002, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=746002, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=746002, hasValBytes=false], val=null, startVer=1480614477604, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477604, nodeOrder=72], hash=1624282777, extras=null, flags=0]]], prepared=0, locked=false, nodeId=4d743535-0684-42bb-94fa-4d5373f9dcc2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=755680, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=755680, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=755680, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=755680, hasValBytes=false], val=null, startVer=1480614477605, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477605, nodeOrder=72], hash=1625182519, extras=null, flags=0]]], prepared=0, locked=false, nodeId=4d743535-0684-42bb-94fa-4d5373f9dcc2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=846490, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=846490, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=846490, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=846490, hasValBytes=false], val=null, startVer=1480614477606, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477606, nodeOrder=72], hash=1652916049, extras=null, flags=0]]], prepared=0, locked=false, nodeId=4d743535-0684-42bb-94fa-4d5373f9dcc2, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=911018, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=911018, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=911018, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=911018, hasValBytes=false], val=null, startVer=1480614477607, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477607, nodeOrder=72], hash=1678621598, extras=null, flags=0]]], prepared=0, locked=false, nodeId=94abd5a8-4557-4d97-bdbf-6240a734b8c9, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=961423, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=961423, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=961423, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=961423, hasValBytes=false], val=null, startVer=1480614477608, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477608, nodeOrder=72], hash=1683243073, extras=null, flags=0]]], prepared=0, locked=false, nodeId=89f23db4-4835-479a-b552-4f3b7a2a1264, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=990055, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=990055, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=990055, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=990055, hasValBytes=false], val=null, startVer=1480614477609, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477609, nodeOrder=72], hash=1685980096, extras=null, flags=0]]], prepared=0, locked=false, nodeId=5650c65d-918a-4a27-af67-14d995de536b, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]], IgniteTxKey [key=KeyCacheObjectImpl [val=994840, hasValBytes=false], cacheId=-535738254]=IgniteTxEntry [key=KeyCacheObjectImpl [val=994840, hasValBytes=false], cacheId=-535738254, partId=-1, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=994840, hasValBytes=false], cacheId=-535738254], val=[op=DELETE, val=null], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtDetachedCacheEntry [super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=994840, hasValBytes=false], val=null, startVer=1480614477610, ver=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477610, nodeOrder=72], hash=1686106912, extras=null, flags=0]]], prepared=0, locked=false, nodeId=a2ef8fdd-35e4-4731-805e-f0292dba9085, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72]]}], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72], writeVer=null, implicit=false, loc=true, threadId=299, startTime=1480508616516, nodeId=215e4b73-b60c-460b-9154-2949d5de1059, startVer=GridCacheVersion [topVer=91987517, time=1480508616520, order=1480614477545, nodeOrder=72], endVer=null, isolation=READ_COMMITTED, concurrency=PESSIMISTIC, timeout=0, sysInvalidate=false, sys=false, plc=2, commitVer=null, finalizing=NONE, preparing=false, invalidParts=null, state=ROLLED_BACK, timedOut=false, topVer=AffinityTopologyVersion [topVer=102, minorTopVer=1], duration=606ms, onePhaseCommit=false], size=52]]], commit=false, mappings=IgniteTxMappingsImpl [], trackable=true, finishOnePhaseCalled=false, innerFuts=[FinishFuture[node=143f09ca-6fab-4c85-aaff-5f023a17ece2, loc=false, done=true], FinishFuture[node=a2ef8fdd-35e4-4731-805e-f0292dba9085, loc=false, done=true], FinishFuture[node=5650c65d-918a-4a27-af67-14d995de536b, loc=false, done=false], FinishFuture[node=adc11bfc-5326-433a-9430-c6bc32c679f9, loc=false, done=true], FinishFuture[node=94619cb7-cb3f-4a60-bc22-2681f933c37a, loc=false, done=false], FinishFuture[node=5640dff9-f585-45e3-bfc5-850365f74bac, loc=false, done=true], FinishFuture[node=b3e4f19e-a359-4649-8040-f0139e0ba1bc, loc=false, done=true], FinishFuture[node=94abd5a8-4557-4d97-bdbf-6240a734b8c9, loc=false, done=true], FinishFuture[node=a394b7ab-d6b3-4cd8-9b4f-8efef17957a0, loc=false, done=false], FinishFuture[node=eb375913-7181-4714-a502-364ff54a1ad1, loc=false, done=true], FinishFuture[node=4f7e0f8b-a895-4971-84e3-bcb80d3fbc24, loc=false, done=false], FinishFuture[node=26199f94-1405-402e-a52e-c8c232d4dc93, loc=false, done=false], FinishFuture[node=4b092c35-1577-48f1-ae3c-7edd4138de60, loc=false, done=true], FinishFuture[node=017cbadc-cc88-4995-b008-18482f75025c, loc=false, done=true], FinishFuture[node=7e96fb15-50ac-47f7-a0cf-6827b808f744, loc=false, done=false], FinishFuture[node=4d743535-0684-42bb-94fa-4d5373f9dcc2, loc=false, done=false], FinishFuture[node=89f23db4-4835-479a-b552-4f3b7a2a1264, loc=false, done=true]], super=GridCompoundIdentityFuture [super=GridCompoundFuture [rdc=o.a.i.i.util.lang.GridFunc$27@738cb650, initFlag=1, lsnrCalls=3, done=false, cancelled=false, err=null, futs=[false, true, false, false, false, true, false, false, false, true, false, false, false, false, false, false, true]]]]class org.apache.ignite.IgniteCheckedException: Transaction has been already completed.
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:786)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:728)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:687)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:157)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:155)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:827)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:369)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:293)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:95)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:238)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1082)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:710)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:102)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:673)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
<15:23:37><benchmark-worker-34><yardstick> The benchmark of random operation failed.
java.lang.NullPointerException
        at org.apache.ignite.yardstick.IgniteBenchmarkUtils.doInTransaction(IgniteBenchmarkUtils.java:69)
        at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.executeInTransaction(IgniteCacheRandomOperationBenchmark.java:665)
        at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.test(IgniteCacheRandomOperationBenchmark.java:152)
        at org.yardstickframework.impl.BenchmarkRunner$2.run(BenchmarkRunner.java:176)
        at java.lang.Thread.run(Thread.java:745)
{noformat};;;","12/Dec/18 10:33;oleg-ostanin;[~agura] Please review: https://github.com/apache/ignite/pull/5644;;;","20/Dec/18 12:16;agura;[~oleg-ostanin] What is the intention of benchmarking cluster when we have lost partitions? IMHO, ignoring situations like this is bad idea.;;;","20/Dec/18 13:49;skozlov;[~agura] The lost partiton logic should be covered by the policy and on the user side. For some test cases the lost data is an expected behavior (and data can be restored from an external source);;;","20/Dec/18 14:00;agura;[~skozlov] My point here is benchmark results will not have any sense in case of data loss. So it should be configurable behaviour of ignite-yardstick. If you are agree with expected behaviour in description I'll merge the change.;;;","24/Dec/18 15:57;agura;[~oleg-ostanin] LGTM. Merged to master branch. Thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Java and .NET nodes with default configs can not join,IGNITE-3267,12976416,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,07/Jun/16 12:03,19/Apr/17 12:11,14/Jul/23 06:20,18/Apr/17 10:24,1.6,,,2.0,platforms,,,,,0,.net,,,".NET sets BinaryConfiguration explicitly, while Java has 'null'. Need to find a way to fix this.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2398,,,,,,,,,,,,,,,IGNITE-5028,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 18 10:24:23 UTC 2017,,,,,,,,,,"0|i2z313:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/17 12:24;ptupitsyn;This will probably be resolved in IGNITE-2398;;;","18/Apr/17 10:24;ptupitsyn;Verified that {{ignite.bat}} and {{Apache.Ignite.exe}} can join without any config changes on current master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Affinity function must check for null keys,IGNITE-3263,12976294,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,samaitra,dmagda,dmagda,07/Jun/16 05:04,04/Jul/17 20:38,14/Jul/23 06:20,16/Aug/16 23:23,1.6,,,1.8,,,,,,0,community,,,"AffinityFunction implementations must check for {{null}} keys and through meaningful exceptions in such a cases.

As an example the following code trows NPE since the keys is not validated

{code}
Cache<AffinityKey&lt;String>, Person> personCache = ..;
personCache.get(new AffinityKey<>(key, affKey)); // returns value
personCache.get(new AffinityKey<>(key)); // throws NPE

Exception in thread ""main"" java.lang.NullPointerException
        at
org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction.partition(RendezvousAffinityFunction.java:428)
        at
org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.partition(GridCacheAffinityManager.java:206)
        at
org.apache.ignite.internal.processors.cache.GridCacheContext.toCacheKeyObject(GridCacheContext.java:1801)
        at
org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.get(GridDhtAtomicCache.java:339)
        at
org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:4650)
        at
org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:1391)
        at
org.apache.ignite.internal.processors.cache.IgniteCacheProxy.get(IgniteCacheProxy.java:907)
        at
my.apache.ignite.examples.collocation.CacheCollocationExample.main(CacheCollocationExample.java:69)
{code}",,dmagda,githubbot,samaitra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 04 20:38:44 UTC 2017,,,,,,,,,,"0|i2z29z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Aug/16 16:59;githubbot;GitHub user samaitra opened a pull request:

    https://github.com/apache/ignite/pull/926

    IGNITE-3263 Affinity function must check for null keys

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/samaitra/ignite IGNITE-3263

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/926.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #926
    
----
commit 4a09b4598b8a0210af45bf738d634768fa9619a3
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-08-05T16:49:28Z

    IGNITE-3263 Affinity function must check for null keys

commit 88d85f5572df6040e924a7024c9906238a005392
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-08-05T16:51:13Z

    Merge remote-tracking branch 'upstream/master' into IGNITE-3263

commit 7bfac77cb6ef0099b45151733d66457186c87cc5
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-08-05T16:58:10Z

    IGNITE-3263 Affinity function must check for null keys

----
;;;","08/Aug/16 22:08;dmagda;Saikat, thanks for taking care of this issue. I have the following comments:

1) Please use the following error message {{""Null key is passed for a partition calculation. Make sure that an affinity key that is used is initialized properly.""}}. Next, instead of {{IgniteException}} I would suggest using {{IllegalArgumentException}}.

2) The issue has to be fixed for all the affinity functions provided out of the box: {{RendezvousAffinityFunction}} and {{FairAffinityFunction}}.

3) Add a test to validate the fix into {{AbstractAffinityFunctionSelfTest}} and make sure everything works fine for all our affinity functions.

4) According to pull request you've added the following {{examples/src/main/java/org/apache/ignite/examples/datagrid/CacheAffinityPutGetExample.java}}. I'm not sure why you did this but it looks wrong to me. Please remove these changes. ;;;","09/Aug/16 18:27;samaitra;[~dmagda]

Hi Denis,

Thank you for reviewing the PR. I will update the changes. The reason I added CacheAffinityPutGetExample.java is to demonstrate that the changes are tested as I had challenges to reproduce this exception using unit test.

Regards
Saikat;;;","13/Aug/16 21:19;samaitra;[~dmagda]

Hi Denis,

I have updated the PR with review comments. I have added 2 model test class Person and Organization and used them in test to demonstrate that unit tests are passing with the Null check.

Another observation is the tests  are passing and NPE is reproducible for Ignite instance but the NPE is not reproducible in IgniteTestGrid.

Please review and share your feedback.

Regards
Saikat;;;","15/Aug/16 18:04;dmagda;[~samaitra],

I would create even more simple tests for both affinity functions when you will directly get a reference to an affinity function and call {{partition(key)}} method making sure that there is no more {{NPE}}. You can refer to the other tests from {{AbstractAffinityFunctionSelfTest}} to see how the reference is retrieved. So basically there is no need to develop such complex tests with caches & business models like you did.

Please simplify the tests and the changes will be ready for the merge.

;;;","16/Aug/16 16:03;samaitra;[~dmagda]

Thank you Denis. I have updated the tests.

Please review and let me know if any further changes are required.

Regards,
Saikat;;;","16/Aug/16 23:23;dmagda;Saikat, I've merged your changes. Thanks!;;;","04/Jul/17 20:38;githubbot;Github user samaitra closed the pull request at:

    https://github.com/apache/ignite/pull/926
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Implement test runner ,IGNITE-3262,12976286,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,Dmitriyff,Dmitriyff,07/Jun/16 04:18,28/Sep/16 03:12,14/Jul/23 06:20,28/Sep/16 03:12,1.7,,,1.8,,,,,,0,,,,,,anovikov,Dmitriyff,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 28 03:12:04 UTC 2016,,,,,,,,,,"0|i2z287:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jun/16 10:49;githubbot;GitHub user Dmitriyff opened a pull request:

    https://github.com/apache/ignite/pull/823

    IGNITE-3262 develope user auth test

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3262

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/823.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #823
    
----
commit b5f594124dbdc75525bdd2c92fc49b9e126e60ab
Author: ashutak <ashutak@gridgain.com>
Date:   2016-05-18T17:47:26Z

    ignite-3056: Service implementation class is required even if it's not expected to be deployed on current node (fixed)

commit c9416ed9b58bbb2287e896cc5860177939c4b3ed
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-20T09:54:55Z

    Fixed IGNITE-3004 ""Implement config variations test for ContinuousQueries""

commit 1ebbd57b74eef1abeb99fa9427667da17db9d01a
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-23T06:52:43Z

    ignite-2528 Removed cache blocking operations from kernal write lock.
    
    This closes #730
    (cherry picked from commit f83a5f7)

commit 40a27e714d0bf62a26a35c90c68a020dbf0256c7
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-23T04:28:55Z

    IGNITE-3175 BigDecimal fields are not supported if query is executed from IgniteRDD
    (cherry picked from commit f2b390a)

commit 8e49e7013ea378c3040e1aa2d9494196d0833e40
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-23T16:42:45Z

    ignite-2899 Fixed issues with 'keepBinary' handling. This closes #593.
    (cherry picked from commit ee7e2c7)

commit 07611bd19beaf73a54f0627a6d8a71c3a1a09874
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-23T21:07:05Z

    ignite-2620 Fixed entry expiration handling
    (cherry picked from commit 46892c7)

commit 54e432e9bb6927351ea45d85b94965925a8351c7
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-23T18:08:14Z

    ignite-2899 Fixed issues with 'keepBinary' handling, added test.
    (cherry picked from commit e47440d)

commit c8269da30a1d55f06531857c52d254268056e84e
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-24T08:14:03Z

    ignite-2620: Need override 'unswap' for detached entry.
    (cherry picked from commit f7b376b)

commit e1ec0dedab0221b53dd11f2854c8c88b2641d147
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-24T11:31:43Z

    IGNITE-2865 Continuous query event passed to filter should be immutable for users. This closes #744.
    (cherry picked from commit 046657b)

commit 727afc87dce6c26756b56620c2aaccc3a3d0117e
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-05-25T05:29:00Z

    IGNITE-2667: Allow to start caches in PRIVATE and ISOLATED deployment modes when BinaryMarshaller is used

commit 183620cd31095dcd92471927cccf8741e3b63ed7
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-25T06:47:14Z

    IGNITE-3168 Added idle timeout property.

commit 30aa287b881d4f9dc3fd5eec9840eab8d9a20828
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-24T13:57:20Z

    ignite-2620 Skip empty entries in GridCacheMapEntry.onTtlExpired
    (cherry picked from commit 6fc274a)

commit e2db87bb1b6c71d7978af17e9f2005ba1c661ab4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-25T07:06:43Z

    Added trace logging for entry/offheap updates.
    (cherry picked from commit 9b2767f)

commit 6fcc7a41d8676956983792717483318b85781479
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-05-25T09:54:40Z

    IGNITE-2538 - IgniteRDD count() and isEmpty() method use IgniteCache API

commit e274d44a37fd1269e7a3a5f0000e1ee6139fd0b0
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-26T11:57:52Z

    IGNITE-3188: Binary marshaller doesn't unmarshal a void type (added tests)

commit 6687e2bfb9627ce08c1c258527e2927606a500ed
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T08:48:00Z

    review IGNITE-2708 Need to validate that SPIs are started only once
    (cherry picked from commit cd063da)

commit 40a41fc50bdb73d50e2aa13da8203784be98e38a
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T08:59:02Z

    reverting review IGNITE-2708 Need to validate that SPIs are started only once
    (cherry picked from commit bf561e1)

commit d05786d8bfc8177223b6db9a98bd3c8170b6bcf1
Author: Ryan Zhao <ryan.zhao.cs@gmail.com>
Date:   2016-05-13T09:00:43Z

    review IGNITE-2708 Need to validate that SPIs are started only once (commit with proper author)
    (cherry picked from commit 98338ff)

commit 9d937ca34775f39b46568eb3fca4585ce00a0fb1
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T09:54:01Z

    review IGNITE-2708 Need to validate that SPIs are started only once (added logic to protect properly started grids)
    (cherry picked from commit b8d624a)

commit edc2947d7340cac4a3c90fa726c23d5d47798ab9
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-25T10:07:03Z

    IGNITE-3191: IGFS: Improved error logging for operations in dual mode.

commit 2f1747d726da87b67f6c5323b3e64762d56398cb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-27T11:40:17Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.1' into gridgain-7.6.1

commit 1bb8b647264593034659b7db929c2664dec603e1
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-27T11:21:01Z

    ignite-3116 Fixed NodeStoppingException in GridDhtGetFuture.
    (cherry picked from commit 303d3ca)

commit 47c575c8696d51b675a16aa260ec9d398e0a68e9
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-30T09:42:37Z

    Added benchmark property file.

commit 00e2dda9a850f74178ee893a3acf74ddc30d4a13
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-30T11:45:38Z

    Updated benchmark property file.

commit a28e16e24adb0a03df959830517db84d2505c481
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-05-31T07:01:46Z

    IGNITE-3190: OffHeap cache metrics doesn't work properly for OFFHEAP_TIRED mode.
    Reviewed and merged by Denis Magda (dmagda@gridgain.com)
    (cherry picked from commit 7533dfc)

commit 56c605622dbecf71f3ee87cc41a16d2ee87e92d3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-26T08:15:48Z

    IGNITE-3200: Resolved classloader leak.

commit a815067a0e8e7cfc9f49c57efe2b2eba562e9071
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T07:23:00Z

    IGNITE-3202: Hadoop: Implemented user name mappers.

commit 421cf03b03276d0ab6c32ef6665d547746446dfc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T07:40:24Z

    7.5.24: Added missing JavaDocs.

commit 167e47781f65c056b9d273eea52d268bc9a8fa0b
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-31T10:50:06Z

    IGNITE-2708: fix tests that don't create unique IndexingSPI per node
    (cherry picked from commit f90e424)

commit 21bdf3148f05481d86e77e13b282ac44c6c3a059
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T10:54:32Z

    Added pacajge info for java.org.apache.ignite.hadoop.util package.

----
;;;","01/Jul/16 07:18;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/823
;;;","28/Sep/16 03:12;anovikov;Reviewed. Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AffinityKey is not stored in the metadata cache,IGNITE-3261,12976095,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,dmagda,dmagda,06/Jun/16 14:37,17/Jun/16 08:22,14/Jul/23 06:20,17/Jun/16 08:22,1.5.0.final,,,1.7,cache,,,,,0,community,important,,"Presently we don't register predefined and system classes in metadata cache which can lead to significant performance drops when these types used as keys.

As an example we have {{AffinityKey}} class. It's not registered in the metadata cache and as a result client nodes don't update their {{CacheObjectBinaryProcessorImpl.clientMetaDataCache}}. After that when a client node needs to get {{AffinityKey}} metadata using {{CacheObjectBinaryProcessorImpl.metadata(typeId)}} it will always call metadata cache and this is a bottleneck. The drop can be significant because this method is called from methods like {{GridAffinityProcessor.mapKeyToPrimaryAndBackups}}.

In attach you can find a simple benchmark that shows how slower a result if AffinityKey is used.

As a solution we can register {{AffinityKey}} and other system and predefined classes (?) in the metadata cache.
",,dmagda,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/16 14:38;dmagda;Ignite-MarshallBenchmark.zip;https://issues.apache.org/jira/secure/attachment/12808402/Ignite-MarshallBenchmark.zip",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 17 08:22:17 UTC 2016,,,,,,,,,,"0|i2z11r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/16 07:23;sboikov;I do not think it makes sense to store all predefined types in metadata cache, this potentially can break something (at least all registered types are visible via IgniteBinary.types, this is not desirable for internal classes). We can do this for AffinityKey since this is public API class, but it should be done only on first usage.;;;","17/Jun/16 08:22;sboikov;Fixed in master (commit #150b5c9).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Valid SQL index configuration is not accepted in certain cases,IGNITE-3254,12976036,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergi,ascherbakov,ascherbakov,06/Jun/16 11:56,13/Jul/16 17:23,14/Jul/23 06:20,13/Jul/16 17:23,,,,1.7,general,,,,,0,,,,"In certain cases involving inheritance valid SQL configuration is not accepted when run under java 8. See example in the attachment.

The reason is the different behavior of getDeclaredMethods in
java 7 and java 8, leading to duplication of indexes in latter.

More details here:
http://stackoverflow.com/questions/27013542/getdeclaredmethods-behaving-differently-in-java-7-vs-java-8",java 8,ascherbakov,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/16 11:57;ascherbakov;Example.java;https://issues.apache.org/jira/secure/attachment/12808360/Example.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 13 17:23:02 UTC 2016,,,,,,,,,,"0|i2z0on:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jul/16 12:41;sergi;I think the fix must be relatively easy: if we have duplications possible because of generated bridges we have to pick method with the most specific return type. If return types do not belong to the same type hierarchy, then throw exception.;;;","13/Jul/16 17:23;sergi;merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: adding a new cache from Model screen doesn't work,IGNITE-3253,12975880,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,06/Jun/16 04:40,16/Jun/16 10:58,14/Jul/23 06:20,16/Jun/16 07:14,,,,1.7,UI,,,,,0,,,,"# create several caches
# open Model screen and add a new (first) model, do not save
# click on Add link on Caches label - the first of existing cache will be opened instead of creation a new cache item.
",,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 16 10:58:21 UTC 2016,,,,,,,,,,"0|i2z0g7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/16 07:14;kuaw26;Fixed all screens where (add) linked object is present: clusters, caches, IGFS, models.;;;","16/Jun/16 10:58;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: add validator to Package field in Import metadata dialog,IGNITE-3252,12975875,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,pkonstantinov,pkonstantinov,06/Jun/16 03:36,21/Jun/16 02:59,14/Jul/23 06:20,20/Jun/16 17:13,,,,1.7,,,,,,0,,,,"Currently this field shows error message in case of invalid value, but the field has no red frame and triangle.",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 21 02:59:13 UTC 2016,,,,,,,,,,"0|i2z0f3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/16 10:01;kuaw26;Added validator. Please test on staging.;;;","20/Jun/16 10:48;vsisko;Invalid tooltip when package is empty.;;;","20/Jun/16 17:13;kuaw26;Fixed on staging;;;","21/Jun/16 02:59;vsisko;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: unexpected 'Unsaved changes',IGNITE-3249,12975864,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,pkonstantinov,pkonstantinov,06/Jun/16 02:35,22/Jun/16 10:39,14/Jul/23 06:20,22/Jun/16 06:19,,,,1.7,UI,,,,,0,,,,"# remove all clusters
# create new cluster
# save
# change Discovery to Static, DON""T save
# remove
# add new cluster - unexpected 'unsaved changes'",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 22 10:39:00 UTC 2016,,,,,,,,,,"0|i2z0cn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jun/16 06:19;kuaw26;Fixed on staging.;;;","22/Jun/16 10:39;vsisko;Tested. Dialog with unsaved changes is not appear.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Arrays do not deserialize properly,IGNITE-3240,12975194,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,dmagda,ptupitsyn,ptupitsyn,02/Jun/16 15:16,06/Jun/16 11:57,14/Jul/23 06:20,06/Jun/16 11:57,1.1.4,,,1.7,binary,cache,,,,0,,,,"Code to reproduce:

{code}
IgniteCache<Integer, String[]> cache = ignite.getOrCreateCache(CACHE_NAME);
cache.put(1, new String[]{""hello"", ""world""});
String[] res = cache.get(1);
{code}

The bug is in CacheObjectContext.unwrapBinariesInArrayIfNeeded method, which always produces a new array.

We should check for basic types somehow and skip this conversion.

Generally, we NEVER want to change the type of the array, so the fix may be:
{code}
if (arr.getClass().getComponentType() != Object.class)
    return arr;
{code}",,dmagda,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1915,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 06 11:57:08 UTC 2016,,,,,,,,,,"0|i2yw8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jun/16 11:15;dmagda;Fixed the issue for classes like Strings, Date, BigDecimal, etc. Checking on TC.

However the current fix is not enough for all possible custom arrays. More effort is needed to provide the general fix. Opened the ticket for this IGNITE-3244. ;;;","03/Jun/16 11:24;githubbot;GitHub user dmagda opened a pull request:

    https://github.com/apache/ignite/pull/777

    IGNITE-3240: fixed serialization of String and other primitive arrays

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3240

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/777.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #777
    
----
commit 718384690d2e07de7bc4135eeb1e66098892f78c
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-06-03T11:18:18Z

    IGNITE-3240: fixed serialization of String and other primitive arrays by CacheObjectBinaryProcessorImpl

----
;;;","06/Jun/16 07:44;githubbot;Github user dmagda closed the pull request at:

    https://github.com/apache/ignite/pull/777
;;;","06/Jun/16 11:57;dmagda;Merged to the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Failed to write class name to file xxxxx.classname"" error when several clients and server are running at one host",IGNITE-3239,12975173,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,agura,krybakova,krybakova,02/Jun/16 14:17,09/Aug/16 09:46,14/Jul/23 06:20,17/Jun/16 11:51,1.7,,,1.7,,,,,,0,,,,"During load test with 4 clients and 1 server per host (total 4 servers) the following errors occur on server and client sides:

{noformat}
[06:02:28,418][ERROR][marshaller-cache-#96%null%][MarshallerContextImpl] Failed to write class name to file [id=1023271795, clsName=o.a.i.yardstick.cache.load.model.key.Identifier, file=/home/gridgain/krybakova/opts-set-b-0-m-client-rev-3c3ed056-date-0206-060158/yardstick/work/marshaller/1023271795.classname]
java.io.IOException: Resource deadlock avoided
        at sun.nio.ch.FileDispatcherImpl.lock0(Native Method)
        at sun.nio.ch.FileDispatcherImpl.lock(FileDispatcherImpl.java:90)
        at sun.nio.ch.FileChannelImpl.lock(FileChannelImpl.java:1052)
        at org.apache.ignite.internal.MarshallerContextImpl$ContinuousQueryListener.onUpdated(MarshallerContextImpl.java:236)
        at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.onEntryUpdate(CacheContinuousQueryHandler.java:769)
        at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.access$700(CacheContinuousQueryHandler.java:91)
        at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler$1.onEntryUpdated(CacheContinuousQueryHandler.java:412)
        at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryManager.onEntryUpdated(CacheContinuousQueryManager.java:343)
        at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryManager.onEntryUpdated(CacheContinuousQueryManager.java:250)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:2167)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAtomicCache.java:2250)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1644)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1484)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processNearAtomicUpdateRequest(GridDhtAtomicCache.java:2945)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$600(GridDhtAtomicCache.java:129)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$5.apply(GridDhtAtomicCache.java:260)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$5.apply(GridDhtAtomicCache.java:258)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:624)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:322)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:246)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:83)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:205)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
{noformat}",,agura,krybakova,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 17 11:51:38 UTC 2016,,,,,,,,,,"0|i2yw3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jun/16 18:10;agura;I need more informaton for problem analysis. But it seems that actually there are no any deadlocks. In some cases OS makes wrong assumptions about deadlock existance because tries to detect deadlock on processes (not threads) level. So if different threads in one process lock some files and different threads in other process trying to lock the same files it is possible that OS will detect deadlock. See for example https://gist.github.com/harrah/4714661

As work around we can use {{tryLock}} method and repeat in case of fail instead of using blocking {{lock}} method.;;;","16/Jun/16 17:46;agura;PR created: https://github.com/apache/ignite/pull/808
Please review.;;;","17/Jun/16 11:11;sboikov;Looks good, just change ThreadLocalRandom8 to java.util.concurrent.ThreadLocalRandom.;;;","17/Jun/16 11:51;agura;Done.
Merged into master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc Warning due to cassandra libs usage,IGNITE-3238,12975136,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,irudyak,avinogradov,avinogradov,02/Jun/16 11:37,10/Jun/16 09:36,14/Jul/23 06:20,10/Jun/16 09:19,1.6,,,1.7,,,,,,0,,,,"I found following at Ignite 1.6 build log:
{code} [WARNING] Javadoc Warnings
 [WARNING] warning: /home/teamcity/.m2/repository/org/apache/cassandra/cassandra-all/3.3/cassandra-all-3.3.jar(org/apache/cassandra/service/CassandraDaemon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
 [WARNING] It is recommended that the compiler be upgraded.{code} 
seems this warning related to https://issues.apache.org/jira/browse/IGNITE-1371. 
Command to gain this is:
{code} mvn clean package -DskipTests{code} 
also you can use this TeamCity task: http://149.202.210.143:8111/viewType.html?buildTypeId=IgniteTests_RatJavadoc
Need to fix it without using JDK 8.",,avinogradov,irudyak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3237,,,,,,IGNITE-1371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 10 09:36:25 UTC 2016,,,,,,,,,,"0|i2yvvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jun/16 22:07;irudyak;Actually ""cassandra-all-3.3.jar"" is used only in Unit tests. It's compiled with Java 8, cause this version of embedded Cassandra requires Java 8. 

Thus the more generic question is - what should we do with unit tests for ignite-cassandra module? The thing is that such unit tests could only be executed when you are using Java 8 and fail with Java 7.;;;","07/Jun/16 07:27;avinogradov;Igor,
Tests should be executed for any Java >=7.

But command (release)
{code} mvn clean package -DskipTests{code} 
runs no tests, so, seems, we can change dependency's scope to test and it will not cause warning. 
Could you please check it?;;;","07/Jun/16 20:59;irudyak;Ok, fix is available in ""ignite-3238"" branch: https://github.com/irudyak/ignite/tree/ignite-3238

It is already updated and merged with the latest changes from upstream repository.;;;","08/Jun/16 06:57;avinogradov;Igor, I've created pull request from you branch to apache ignite master and see a lot of changes, is it ok?
PR: https://github.com/apache/ignite/pull/783/files;;;","08/Jun/16 22:47;irudyak;That's ok. This branch also includes bugfixes to AWS bootstrap scripts which were not included into 1.6 release;;;","09/Jun/16 07:50;avinogradov;Igor, 
Issue can't be resolved until it merged to master branch.
Merge should contain only changes related to this issue.
Please prepare pull request to master branch with required changes, then check it brings no warnings at TeamCity.

After that Issue status can be set to ""Patch Available"".

Then committer will check and merge changes and change status to ""Resolved"".

And after that committer will check master branch and close issue in case no problems found. 
;;;","09/Jun/16 23:46;irudyak;Hi Anton,

I recreated ""ignite-3238"" branch once again. Now it contains only changes specific to this ticket. Can't create pull request to ""master"" branch of upstream repository, probably I don't have rights for this or you should cancel your previous request first.;;;","10/Jun/16 00:49;irudyak;By the way, what build configuration should I run in TeamCity?;;;","10/Jun/16 01:03;irudyak;It's definitely a problem of the previous pull request you created. Util you close it, I can create a new one from the branch having the same name.;;;","10/Jun/16 08:56;avinogradov;Igor, Thanks for branch recreation. 
I closed pull request I've made before and created new.
Now I see only changes related to this task.

TeamCity Task should be checked is specified at Issue description.
I checked it at your branch: http://149.202.210.143:8111/viewLog.html?buildId=261612&tab=buildResultsDiv&buildTypeId=IgniteTests_RatJavadoc
And it works instead of original master branch: http://149.202.210.143:8111/viewLog.html?buildId=260834&tab=buildResultsDiv&buildTypeId=IgniteTests_RatJavadoc
Thanks for your contribution, that's really important fix, I'll merge your changes.;;;","10/Jun/16 09:19;avinogradov;Merged to master.;;;","10/Jun/16 09:36;avinogradov;Master fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to initialize primitive boolean cache property of superclass,IGNITE-3235,12975117,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,avinogradov,sergey.lemekhov,sergey.lemekhov,02/Jun/16 10:44,10/Oct/16 08:53,14/Jul/23 06:20,10/Oct/16 08:53,1.5.0.final,,,1.8,cache,,,,,0,,,,"When a superclass of a cache class contains a primitive boolean field marked with {{@QuerySqlField}} annotation the cache initialization fails with an exception:
{{org.apache.ignite.IgniteCheckedException: Failed to initialize property '<propertyName>' for key class '<key class>' and value class 'value class'. Make sure that one of these classes contains respective getter method or field.}}

For example:
{code}
public class Base {
       @QuerySqlField
        private boolean flag;

        public boolean isFlag() {
            return flag;
        }

        public void setFlag(boolean flag) {
            this.flag = flag;
        }
    }

public class Derived extends Base {
        private String field;

        public String getField() {
            return field;
        }

        public void setField(String field) {
            this.field = field;
        }
    }
{code}

This related to method {{org.apache.ignite.internal.processors.query.GridQueryProcessor#buildClassProperty(boolean, java.lang.Class<?>, java.lang.String, java.lang.Class<?>, java.util.Map<java.lang.String,java.lang.String>, org.apache.ignite.internal.processors.cache.CacheObjectContext)}}.
Method expects that all fields accessors start with ""get"" but for primitive boolean fields usually the ""is"" prefix is used.",,avinogradov,sboikov,sergey.lemekhov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 27 11:34:55 UTC 2016,,,,,,,,,,"0|i2yvrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jun/16 14:49;avinogradov;Sergey, 

Seems that every field defined at superclass cause same issue.
Did you check that Boolean works?;;;","06/Jun/16 11:55;avinogradov;Found that it doesn't matter what type of field specified. Boolean and boolean cause same error.
Going to fix this by addition superclass check at field set up.;;;","06/Jun/16 12:19;sergey.lemekhov;Anton, the type doesn't matter indeed. The problem goes away when I add getFlag() method instead of isFlag(). So the method naming causes the issue.;;;","06/Jun/16 12:25;avinogradov;Sergey, 
Is it assumption or you checked it?
Please see my fix : https://github.com/gridgain/apache-ignite/commit/7b3f4944dd4feb92cf88ae13f4ad0818b1a4f159
It solves this problem without fixing buildClassProperty method. Am I missed something?;;;","06/Jun/16 13:58;sergey.lemekhov;Anton, currently there are three ways of creating {{ClassProperty}} in {{GridQueryProcessor#buildClassProperty}} method:
* using {{java.lang.Class#getMethod}} with a string ""get"" + propertyName as argument
* if it fails then {{java.lang.Class#getDeclaredField}} with propertyName as argument
* if it fails then {{java.lang.Class#getMethod}} with propertyName as argument is used

The first approach doesn't work if the field accessor name doesn't start with 'get' ('is' for instance) because this prefix is the only hardcoded option, and the second approach doesn't work for fields in superclass. The third one doesn't work if there is no method with the same name as field. Therefore there are two ways to fixing this as well - either try 'is' prefix for boolean fields (for the first approach) or try calling {{getDeclaredField}} on the superclass.
So the fix you made works.;;;","23/Jun/16 08:09;avinogradov;Sergey,

Thanks for comments.
I've updated fix to solve all cases, please check changes: https://github.com/gridgain/apache-ignite/compare/gridgain-7.5.27...gridgain:ignite-3235
Please let me know in case I've missed something.;;;","27/Sep/16 11:34;sboikov;Reviewed, looks good to me. Anton, please merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
External addresses are not registered in IP finder,IGNITE-3230,12974905,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,vkulichenko,vkulichenko,01/Jun/16 18:53,22/Jun/16 10:03,14/Jul/23 06:20,22/Jun/16 10:03,1.6,,,1.7,general,,,,,0,,,,"If a user configures {{AddressResolver}}, addresses returned by it are not registered in shared IP finders. So the only way to configure discovery in case is using static IP finder.",,avinogradov,ntikhonov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 22 10:03:28 UTC 2016,,,,,,,,,,"0|i2yug7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jun/16 09:03;ntikhonov;Changes looks good for me.;;;","22/Jun/16 10:03;avinogradov;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
un existing link in Class GridCacheStoreValueBytesSelfTest,IGNITE-3229,12974829,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,F7753,F7753,F7753,01/Jun/16 15:12,03/Jun/16 08:57,14/Jul/23 06:20,03/Jun/16 08:57,,,,,,,,,,0,,,,Class GridCacheStoreValueBytesSelfTest' s annotation has linked to an un existing  method  `org.apache.ignite.configuration.CacheConfiguration#isStoreValueBytes()`,,dmagda,F7753,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 03 08:57:42 UTC 2016,,,,,,,,,,"0|i2ytzb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jun/16 15:24;githubbot;GitHub user f7753 opened a pull request:

    https://github.com/apache/ignite/pull/770

    IGNITE-3229 un existing link in Class GridCacheStoreValueBytesSelfTest

    Class GridCacheStoreValueBytesSelfTest' s annotation has linked to an un existing  method  `org.apache.ignite.configuration.CacheConfiguration#isStoreValueBytes()`. Change it to `org.apache.ignite.configuration.CacheConfiguration#isStoreKeepBinary()`

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/f7753/ignite fix_link

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/770.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #770
    
----
commit d14fdfcf7a4cc65fb21084b974ee6fdba640a458
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-06-01T15:20:27Z

    fix the unexisted link isStoreValueBytes to isStoreKeepBinary

----
;;;","03/Jun/16 08:57;dmagda;[~F7753], thanks for the contribution! I merged your changes.;;;","03/Jun/16 08:57;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/770
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I/O bottleneck on server/client cluster configuration,IGNITE-3220,12974172,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,ascherbakov,ascherbakov,31/May/16 09:57,30/Dec/16 13:28,14/Jul/23 06:20,30/Dec/16 13:28,,,,2.0,clients,,,,,0,performance,,,"Steps to reproduce:
# start 1 server and 1 client nodes in single JVM. Do cache.put(randomKey) from 16 threads. Get N ops/sec.
# start 1 server and 2 client nodes in single JVM. Do cache.put(randomKey) from 16 threads picking up random client of 2. Get 2*N ops/sec.

One of the possible reasons of this is the IO approach. Currently, all direct marshallable messages are marshalled and unmarshalled in a single NIO thread which is in charge for the connection this message goes to or comes from.

Possible fix may be:
# move direct marshalling from user & system threads to make it parallel
## after all user objects are marshalled, direct marshallable message should be able to provide the size of the resulting message 
## communication should allocate rather big direct byte buffer per connection
## user or system thread that wants to send message should request a chunk (256 or 512) for writing direct message to
## thread can request another chunk from communication (communication should try allocating chunk next to already allocated), if chunk cannot be expanded thread may allocate buffer locally and finish marshalling to it.
## set of buffers can be written to sock channel with {{java.nio.channels.SocketChannel#write(java.nio.ByteBuffer[], int, int)}}
## amount of info written to the soket should be even to some value, e.g. 256 or 512 bytes. Free space should be sent as well.
## each chunk (i.e. 256 or 512 bytes) written to socket should have local thread ID in the very beginning.
# move direct UN-marshalling from NIO hreads to make it parallel
## data is read by chunks, first thread ID of the chunk should be analyzed and chunk should be submitted to striped thread pool for unmarshalling
## after message is unmarshalled it gets processed in the way it is done now.

NOTE: As a further idea we can try to do user object marshalling directly to per-connection buffer and switch thread to process another message until chunk is flushed (similar to job continuation approach).",,agoncharuk,ascherbakov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Oct 11 11:01:31 UTC 2016,,,,,,,,,,"0|i2yqaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/16 12:12;agoncharuk;We should benchmark it first before doing a large refactoring. It should be fairly easy to benchmark if we have a pool of buffers and each thread will take a buffer, marshall a message to this buffer, then submit it to NIO thread to write. NIO thread will return the buffer to the pool after writing.;;;","11/Oct/16 11:01;sboikov;Hi Yakov,

I implemented several changes in IO code (branch ignite-comm-opts2):
- now instead of one connection between nodes we create separate read/write connections
- it is possible to have multiple read/write connection pairs (configured via TcpCommunicationSpi.connectionsPerNode)
- for TcpCommunicationSpi I got rid of future creation for each message send
- did optimization in GridNioServer to reduce number of selector.wakeup calls
- also added IgniteIoTestMessage so that we can more easily test IO performance

Also in addition to these changes in branch ignite-comm-opts2-park I tried to further reduce number of 'selector,wakeup' and use park/unpark when it is possible. Locally I have ~10% improvment, but when test this on aws get opposite results.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to deduplicate addresses registered in the IP finder,IGNITE-3216,12974034,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,vkulichenko,vkulichenko,30/May/16 18:42,16/Jun/16 11:37,14/Jul/23 06:20,16/Jun/16 11:37,1.6,,,1.7,general,,,,,0,,,,"{{IgniteUtils.toSocketAddresses(...)}} method can produce the collection with duplicated addresses in some cases (e.g., if one of hostnames is provided as an IP). We should deduplicate the list before returning it (most likely we should simply use {{Set}} instead).",,avinogradov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 16 11:37:40 UTC 2016,,,,,,,,,,"0|i2ypfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jun/16 14:15;vkulichenko;Anton,

Why do we need the {{F.viewSetReadOnly}} call there? Can we avoid it? I would prefer to remove usages of {{F.}} where possible.;;;","08/Jun/16 15:25;avinogradov;I replaced usage of F.viewSetReadOnly(...) by Collections.unmodifiableCollection(...)
Will check TeamCity.;;;","09/Jun/16 13:57;avinogradov;TeamCity failed. Collections.unmodifiableSet should be used. But I found no reasons to make collection unmodified.
So, will check TeamCity with returning res.;;;","10/Jun/16 09:07;avinogradov;TeamCity passed.;;;","14/Jun/16 15:16;vkulichenko;{{viewSetReadOnly}} is not used anymore, so I would prefer to remove it completely. Otherwise, looks good.;;;","16/Jun/16 11:37;avinogradov;Merged to master ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: 'false' value in the caches list of cluster,IGNITE-3213,12973935,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,30/May/16 10:30,31/May/16 06:28,14/Jul/23 06:20,30/May/16 12:48,1.7,,,1.7,UI,,,,,0,,,,"# remove all caches and clusters
# add new cluster, save
# open Caches page, add new cache,  save (cache has linked with cluster automatically)
# open Clusters page - list of caches contains 'false' value",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue May 31 06:28:34 UTC 2016,,,,,,,,,,"0|i2yotr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/May/16 12:02;vsisko;Fixed save of linked objects: cluster, cache, igfs, domain;;;","30/May/16 12:48;kuaw26;Fixed on staging.;;;","31/May/16 06:28;pkonstantinov;Tested on staging.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to wait for affinity assignment change during affinityCall failover,IGNITE-3209,12973381,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,vkulichenko,vkulichenko,27/May/16 10:13,15/Jun/16 15:06,14/Jul/23 06:20,15/Jun/16 15:05,1.6,,,1.7,compute,,,,,0,,,,"{{AlwaysFailoverSpi.failover()}} method makes several attempts (5 by default) to get new primary node for the affinity key. Affinity assignment takes time, so there is a big chance to make all these attempts before new node is returned.

We need to add discovery event that initiated failover to {{FailoverContext}} and wait for affinity is assigned.",,agura,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 15 15:05:51 UTC 2016,,,,,,,,,,"0|i2ylev:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jun/16 17:13;agura;Fixed. TC looks good. Please review.;;;","15/Jun/16 08:10;sboikov;Reviewed,

I have one concern: it seems that synchronization could be broken by this change: GridTaskWorker.onResponse process response while GridJobResultImpl.setOccupied is 'true', but now occupied flag can be reset (line 901) and then response can be processed asynchronously by affinity future listener.

Also I added one more test to check affinityCall from client node where affinity cache is not configured.;;;","15/Jun/16 15:05;agura;Fixed and merged into master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: Ignite C++ can not be compiled with g++ 4.4.7,IGNITE-3205,12973058,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,isapego,isapego,26/May/16 13:08,05/Aug/16 09:51,14/Jul/23 06:20,23/Jun/16 12:42,1.6,,,1.7,platforms,,,,,0,,,,"Ignite C++ can not be compiled with particular compiler version. Version details:
{noformat}
g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16)
Copyright (C) 2010 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
{noformat}",,githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 05 09:51:20 UTC 2016,,,,,,,,,,"0|i2yjf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/May/16 13:56;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/759

    IGNITE-3205: Fixed compiliation for the G++-4.4.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-3205

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/759.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #759
    
----
commit a100fe34b168f79bc630a9244461545435dee56d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-05-26T13:54:53Z

    IGNITE-3205: Fixed compiliation for the G++-4.4.

----
;;;","26/May/16 15:24;isapego;Fixed. TC passed.;;;","05/Aug/16 09:51;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/759
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OverlappingFileLockException in marshaller context,IGNITE-3197,12972716,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,AndreyVel,vkulichenko,vkulichenko,25/May/16 13:37,23/Aug/16 03:52,14/Jul/23 06:20,23/Aug/16 03:51,1.6,,,1.8,general,,,,,0,important,,,"{{MarshallerContextImpl}} uses static locks to avoid writing to the same file concurrently. But if Ignite is running embedded in managed environment (e.g., application server), it's possible that there will be two clients loaded by different  class loaders. In this case they will not share these static locks and therefore they can try to acquire the file lock for the same file, causing the {{OverlappingFileLockException}}:

{noformat}
[#|2016-05-17T08:02:21.950+0100|SEVERE|glassfish3.1.2|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=291;_ThreadName=Thread-2;|java.nio.channels.OverlappingFileLockException
 at sun.nio.ch.SharedFileLockTable.checkList(FileLockTable.java:255)
 at sun.nio.ch.SharedFileLockTable.add(FileLockTable.java:152)
 at sun.nio.ch.FileChannelImpl.lock(FileChannelImpl.java:1011)
 at org.apache.ignite.internal.MarshallerContextImpl$ContinuousQueryListener.onUpdated(MarshallerContextImpl.java:239)
 at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.notifyCallback(CacheContinuousQueryHandler.java:655)
 at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.processNotification(GridContinuousProcessor.java:967)
 at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.access$1900(GridContinuousProcessor.java:94)
 at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor$8.onMessage(GridContinuousProcessor.java:612)
 at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1058)
 at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:104)
 at org.apache.ignite.internal.managers.communication.GridIoManager$GridCommunicationMessageSet.unwind(GridIoManager.java:2295)
 at org.apache.ignite.internal.managers.communication.GridIoManager.unwindMessageSet(GridIoManager.java:1018)
 at org.apache.ignite.internal.managers.communication.GridIoManager.access$1900(GridIoManager.java:104)
 at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:987)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
 at java.lang.Thread.run(Thread.java:745)
|#]
{noformat}

It's actually harmless, but the logs are flooded with the errors.",,agura,AndreyVel,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Tue Aug 23 03:51:59 UTC 2016,,,,,,,,,,"0|i2yhb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Aug/16 18:23;AndreyVel;Error was reproduced - one JVM and more then 1 class loader.;;;","11/Aug/16 16:31;AndreyVel;Hello, need same help, created draft pull request https://github.com/apache/ignite/pull/945

1 For unit test MarshallerContextImpl what is best source name?
Temporary used class MarshallerContextTestLock

2 Method MarshallerContextImpl.tryChanelLock what timeout is optimal now 3 sec.
Maybe there are other ideas for locking file?

3. Is there are best solution for class loading and executing in thread
MarshallerContextImpl.ContinuousQueryListener.onUpdated ?

Test reproduced if
- comment lock usage line 295 //Lock lock = fileLock(fileName);
- replace line FileLock fileLock = tryChanelLock(out.getChannel());
to original FileLock fileLock = out.getChannel().lock();;;;","11/Aug/16 23:43;vkulichenko;Andrey,

I'm a bit confused. If you take a look at current version in master [1], it already uses {{tryLock}} in {{fileLock(FileChannel ch, boolean shared)}} method. Having said that, your diff looks weird. Can you check this?

Basically, I think you just need to catch {{OverlappingFileLockException}} in the mentioned {{fileLock(..)}} method and do nothing (debug log message would be useful though). Additionally, when writing, I don't think we have to wait at all and can exit right away, because we can assume that two nodes will write the same content. But this needs to be tested carefully.

You can name the test {{MarshallerContextLockingSelfTest}}.

[1] https://github.com/apache/ignite/blob/master/modules/core/src/main/java/org/apache/ignite/internal/MarshallerContextImpl.java;;;","12/Aug/16 13:48;AndreyVel;Added unit test and minor changes in ContinuousQueryListener.onUpdated

Please, make review changes. Pull request
https://github.com/apache/ignite/pull/954;;;","14/Aug/16 15:03;agura;Val, Andrey,

I don't think that ignoring of this exception is good idea. Different classloader lead to different instances of {{GridStripedLock}}. Whether we can somehow avoid this (e.g. common classloader)?;;;","15/Aug/16 08:04;AndreyVel;We can avoid OverlappingFileLockException exception if put line 
FileLock fileLock = ch.tryLock(0L, Long.MAX_VALUE, shared);
to try/catch section. Additional we can add same timeout to prevent timeless cycle.

;;;","15/Aug/16 22:14;vkulichenko;Andrey, why do you think we can't ignore the exception? What is your concern?;;;","16/Aug/16 09:48;agura;I thought about collisions on typeId but any soluion (ignoring, right synchronization, repeatable write) will hide it. So may be ignoring is suitable solution for our case.;;;","16/Aug/16 17:26;vkulichenko;Agree. Actually, I'm not sure it's even possible, because we should check for collisions when updating the meta cache.;;;","23/Aug/16 03:51;vkulichenko;Merged with minor changes. Thanks, Andrey!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Marshaling works wrong for the BigDecimals that have negative scale,IGNITE-3196,12972713,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,daradurvs,isapego,isapego,25/May/16 13:26,10/Oct/17 14:58,14/Jul/23 06:20,10/Feb/17 13:53,1.6,,,2.0,binary,,,,,1,,,,"Current marshalling procedure of the {{BigDecimal}} assumes that the scale of the {{BigDecimal}} value is always more than or equal to zero. However, scale [can be negative|https://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#scale()].

This leads to invalid results if we try to marshal-unmarshal {{BigDecimal}} that has a negative scale.",,daradurvs,githubbot,isapego,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Oct 10 14:58:45 UTC 2017,,,,,,,,,,"0|i2yhaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jan/17 14:41;githubbot;GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/1473

    IGNITE-3196

    We shouldn't check sign at serialization, because the used approach:
    BigInteger intVal = val.unscaledValue();
    byte[] vals = intVal.toByteArray();
    #toByteArray() - already including at least one sign bit, which is (ceil((this.bitLength() + 1)/8)). (This representation is compatible with the (byte[]) constructor.)
    
    Therefore, at deserialization we just read  byte[] vals and scale, also we use default constructor which will define a sign from byte[] vals.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-3196

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1473.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1473
    
----
commit 48fab04f4a8b48a1f6ff0a632d56075c855b62e5
Author: daradurvs <daradurvs@gmail.com>
Date:   2017-01-26T17:21:01Z

    ignite-3196: serialization of BigDecimal is simplified

commit 91327c3797fb1ea8702cf8e2ce34998819c0c8c9
Author: daradurvs <daradurvs@gmail.com>
Date:   2017-01-27T09:50:32Z

    ignite-3196: fix old serialization method (it is better, serialized object has the smaller size)

commit f3d2297d9db4e773003eeea800ae37843ce79f14
Author: daradurvs <daradurvs@gmail.com>
Date:   2017-01-27T11:48:53Z

    ignite-3196: ""negative scale with RoundingMode"" tests are added

----
;;;","27/Jan/17 14:45;daradurvs;Fixed.
[ci-tests|http://ci.ignite.apache.org/viewQueued.html?itemId=435594];;;","30/Jan/17 12:31;isapego;[~daradurvs], actually, as this change affects marshaling, I believe it is going to break platforms interoperability. You can see this in CI - some .Net and C++ tests fail.;;;","30/Jan/17 17:34;daradurvs;[~isapego], thanks for your note!

I can fix the bug without changes in other platforms, but that will be workaround.

I will repair logic on .NET and C++ clients, because it was based on the wrong approach of decimal Java-marshalling.

Do you agree with me?;;;","31/Jan/17 09:40;isapego;Yes, this is what should be done, I believe.;;;","06/Feb/17 10:19;ptupitsyn;.NET changes look good to me.;;;","10/Feb/17 13:20;vozerov;Changes looks good to me. Though, it would be useful to have negative test in .NET ensuring that exception is thrown as expected. 
[~ptupitsyn], how difficult would be to have such test?;;;","10/Feb/17 13:53;ptupitsyn;Added .NET test, works as expected (throws exception on negative scale value).

Merged to ignite-2.0.;;;","10/Feb/17 15:34;githubbot;Github user daradurvs closed the pull request at:

    https://github.com/apache/ignite/pull/1473
;;;","18/Aug/17 14:25;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2484

    Backport IGNITE-3196

    Add support for BigDecimals with negative scale in BinaryMarshaller

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-1.7.15

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2484.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2484
    
----
commit a62a0136d295486d95c6e2ab5bba88270d831753
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-02T16:07:45Z

    GG-11655 - Fix merge

commit 348593986b56ddfcec4a4455e49d9b279eae4dc8
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-05T10:28:03Z

    Merge branch 'ignite-1.7.3' into ignite-1.7.4

commit 175da6b7e394dd76c27d5155ff98a5b2ef03bb9d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-07T06:16:58Z

    IGNITE-3432:  check data/meta cache names are different for different IGFS instances. This closes #1201

commit ead15193899d08f41491166003cabed0560f0c59
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T07:49:03Z

    IGNITE-4028 Get rid of OP_META in PlatformAbstractTarget
    
    This closes #1192

commit 40ef2f5ae42826fe8fd077e3013e8f55c8512bdd
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-07T09:09:41Z

    ignite-4178 support permission builder

commit df670c7d64046d282c053f296c47a4743c58c8b1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T09:40:00Z

    IGNITE-4118 .NET: Optimistic transaction example
    
    This closes #1200

commit 474f22fda4c7cf4d7b2623c451cd7c10f0d8c636
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T09:55:20Z

    IGNITE-4119 .NET: add TransactionDeadlockException

commit fc7ce5a4d72145f2e8a86debeda264ef0a5b37e3
Author: isapego <isapego@gridgain.com>
Date:   2016-11-07T10:26:05Z

    IGNITE-4090: Added flags so stdint and limits can be used in C++.

commit a98804a249496ba9bafbc96daa7aaf25b3d36724
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-07T11:00:00Z

    IGNITE-4113: Added tests. Added Statement::Set/GetAttribute.

commit b1c7c9bb95c900083702d0ba0362edf3aea5a7b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-07T12:40:36Z

    GG-11360 - Implement SQL queries cancellation
    Fix for commit 80abd1b: for distributed joins need always send cancel request.

commit 319014de075c80fb15e58172cc24e35ce16b56cf
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T14:53:40Z

    IGNITE-4132 .NET: Improve BinaryConfiguration documentation

commit 950bad474ef29f9b808e74034c49a69d57eb2740
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:03:34Z

    GG-11655 - Restore service compatibility with releases before 1.5.30.

commit 3d19bfc2b66574e3945ce17c7a4dfe77d0070b8d
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:04:36Z

    Merge remote-tracking branch 'origin/ignite-1.6.11' into ignite-1.6.11

commit 1612b6d66fed032182a41e90da71e6b986ae087b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T11:07:54Z

    .NET: Fix minor analysis warnings

commit e821dc0083003bc81058b1cb223d8a8a2ee44daf
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:09:21Z

    IGNITE-2079 (revert commit) GridCacheIoManager eats exception trail if it falls into the directed case

commit c2c82ca44befe4570325dd6cf2ba885e0d90596c
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:10:10Z

    Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11

commit 865bbcf0f41a0c4944e0928f1758d43a0eae82c5
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:18:29Z

    Revert ""Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11""
    
    This reverts commit c2c82ca44befe4570325dd6cf2ba885e0d90596c, reversing
    changes made to e821dc0083003bc81058b1cb223d8a8a2ee44daf.

commit 9726421ff9efb2b19813b2fd6ad27a3728b5ab1a
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:59:00Z

      Revert  Revert  Merge remote-tracking branch 'professional/ignite-1.6.11'

commit 5a3a1960fff1dcf32961c45c0ba5149d6748d2fc
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-08T14:36:35Z

    Added license header.

commit f697fb5786fb4ce15f581c465ff0dcb3d2bb7b14
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T16:13:48Z

    IGNITE-4185 .NET: Fix NullReferenceException in IgniteOutputCacheProvider when igniteConfiguration is missing

commit 69487f2c375010737311af65750a519b403fc17f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T16:38:28Z

    .NET: Fix error messages when IgniteConfigurationSection content is missing

commit d88f422aeb02738d676d86ce416551b805ad154e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-11-09T07:25:38Z

    GG-11028 Fixed resolving of host name.

commit ac660dcaa5bf8eb20e7dd4e442e97c1cf548a827
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T12:29:06Z

    IGNITE-4183: ODBC Fixed null-values fetching issue.

commit cdae2ab76d403aef9a0bd209fc7497dc6cfdfc08
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T13:25:30Z

    IGNITE-3873: Added WiX script to generate ODBC installer.

commit 1093819ac0f3e7a0faacde59919117b8977e6d5b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T15:19:01Z

    IGNITE-4201: Fixed version fix maven step.

commit bac0cba7fddd412dfbff98163afbc15d81d5e0d4
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-10T06:02:41Z

    ignite-4044  always authenticate local node

commit 26daa57ca82254d68ac04a7b33223c6eb5ade0e4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-10T08:17:29Z

    Fixed javadoc.

commit 8b59f4e76138e08e80aa219c1a9cf0c3df6fdb4b
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-10T11:43:00Z

    Backport commit of the following:
    
    commit 612eb3daffe608995aac28eed019b3e6ef9d66d3
    Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
    Date:   Fri Aug 19 13:28:39 2016 +0300
    
        ignite-2795 Support 'copyOnRead' for SQL queries

commit b7499828c928e02e8e554f960f3754e4d08bfbe0
Author: Anton Vinogradov <av@apache.org>
Date:   2016-11-10T13:10:21Z

    IGNITE-500 CacheLoadingConcurrentGridStartSelfTest fails (DataStreamer data loss at unstable topology in !allowOverwrite mode fixed)

commit baa752660c6eddf27d15a812252b01b5872385de
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-11-10T15:47:09Z

    IGNITE-4208: Hadoop: Fixed a bug preventing normal secondary file system start. This closes #1228.

----
;;;","18/Aug/17 14:36;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2485

    Backport IGNITE-3196

     support for BigDecimals with negative scale in BinaryMarshaller

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-1.9.6

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2485.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2485
    
----
commit bb3ff120e6995431d10439243d8b163712de0e0e
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.
    
    (cherry picked from commit ba6227b)

commit 960e454b4b68c76ed94ca58a3ee9a9d8e79c2039
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T07:28:15Z

    IGNITE-2466 - Use current NIO back pressure mechanism to limit received messages. Mark them process only when backups acknowledged.
    
    (cherry picked from commit 220db88)

commit 207ccaa1ff5a021a25dc779b5b2d7bfdb0f3b647
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.
    
    (cherry picked from commit ba6227b)
    
    (cherry picked from commit bb3ff12)

commit 5fbbc37669bcf0557a98d8ab70c3dbb79ebcd340
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T12:01:02Z

    IGNITE-4917: Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller . This closes #1736.
    
    (cherry picked from commit b8e3d1b)

commit 315ff38eeef96f12954d6ff39c84d58b2b959667
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4879: Fixed System pool starvation while partition evicting.

commit 89e9dbe484312c251f02c9fbe9698c3ac2e03df8
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-10T13:36:33Z

    Fix org.apache.ignite.internal.processors.cache.expiry
        .IgniteCacheExpiryPolicyAbstractTest#testNearExpiresWithCacheStore

commit 01ceeb13420b68edf12b0262fe0991e84c085dd8
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4863: Disallow change RootLogger log-level if it can have negative effect on other loggers. This closes #1687.

commit 02b194268071b179d291b28472cef5d587e7558a
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-11T09:00:59Z

    Fix missing test resource directory for
    org.apache.ignite.spi.discovery.tcp
        .TcpDiscoveryNodeAttributesUpdateOnReconnectTest.testReconnect

commit 20016a20f780eb3c21f249d3cb74d08018c4eea5
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-11T11:54:06Z

    Fix org.apache.ignite.internal.processors.cache.expiry
        .IgniteCacheExpiryPolicyAbstractTest#testNearExpiresWithCacheStore

commit 6d12bd4b9fbded5e5862b5c3d89b05a5ddd11755
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-03-21T14:54:51Z

    IGNITE-4200: Added copying of the C++ binaries.
    
    (cherry picked from commit 8b3860f)

commit 0f7ef74216fab64f5d1d2b6d432b552b7fe40d2f
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.

commit 465084da5b00dcfc056d338f5d0a24875ca2af08
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.
    
    (cherry picked from commit 0f7ef74)

commit a20c307df1dd000309a273ef93231fdc41a2a81c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-13T06:31:17Z

    IGNITE-4891 - Fix. Key is deserialized during transactional get() even if withKeepBinary is set
    
    (Backport from master)

commit 630558dfeb373f237057e394e8f2f63230d59dab
Author: vladisav <vladisavj@gmail.com>
Date:   2017-04-13T10:24:42Z

    ignite-4173 IgniteSemaphore with failoverSafe enabled doesn't release permits in case permits owner node left topology
    
    Backport from master.
    
    (cherry picked from commit 76485fc)

commit 870b752c095ed3776e91a65b99763142b9f2ebc0
Author: Vladisav Jelisavcic <vladisavj@gmail.com>
Date:   2017-04-11T11:09:12Z

    ignite-1977 - fixed IgniteSemaphore fault tolerance.
    
    Backport from master.
    
    (cherry picked from commit 902bf42)

commit cd0b92950c6691c6fc1a26cb4f7e55f5ee459298
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2017-04-13T12:52:20Z

    ignite-4946 GridCacheP2PUndeploySelfTest became failed
    
    (cherry picked from commit d298e75)

commit 241e9291dbe43138be1c027a3d8d1b7e3ed9b4dd
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T06:36:10Z

    Merge branch 'ignite-1.9.1-p1' into ignite-1.9.2

commit 405ce563fb7c35627c6e1bb0b68f423ba089c6f2
Author: Dmitriy Shabalin <dmitriyff@gmail.com>
Date:   2017-04-14T10:55:38Z

    IGNITE-4068 Added common primitive for buttons group. Refactored existing button groups.
    (cherry picked from commit e5200c2)

commit 60cf48dc175fa288cd74d1189f0e992c9a16dc99
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-04-14T11:00:47Z

    IGNITE-4886 Catch all errors.
    (cherry picked from commit 7e8d9e8)

commit 81c3ed4c0511841f7056677db6063b4eb8d2def0
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-04-14T11:18:23Z

    IGNITE-4896 Rewored GridClientNodeBean serialization.
    (cherry picked from commit a025268)

commit 4a1415ad01ff9fde30d5c7c02e6d938f1515178d
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.
    
    (cherry picked from commit 0f7ef74)

commit e206b9f1fd3dbf927f940d558144a4796479ed5d
Author: vsisko <vsisko@gridgain.com>
Date:   2017-04-14T11:32:30Z

    IGNITE-4871 Added Kubernetes IP finder to Cluster configuration screen.
    (cherry picked from commit f978ff2)

commit 4518f51f4c1c29517d518f5e44f5d70d17c51170
Author: sboikov <sboikov@gridgain.com>
Date:   2017-04-14T13:38:46Z

    Added IgniteGetFromComputeBenchmark.

commit b22738080101536a8af1ed60e70d693897e9bc7c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T14:54:02Z

    ignite-4173 Fix test. Permits must be released on node fail.
    
    (cherry picked from commit 1f867c6)

commit 41c5288606710b9c42983780ac7464a746d09eb0
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T14:56:25Z

    Merge remote-tracking branch 'origin/ignite-1.8.6' into ignite-1.8.6

commit 1985496ea98f4d7112a0b99727297427f343e9b2
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-17T07:20:41Z

    Add missed license headers.

commit ae794ab45b22abe1e570d5d29661396ea7c0f951
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-17T10:40:28Z

    IGNITE-4159 Fix version.

commit bf1049741f7a64728bd433f78262ba273f969848
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-17T16:00:30Z

    IGNITE-4954 - Configurable expiration timeout for Cassandra session. This closes #1785.

commit 86c49514c64225059a31912fdccadc6dc68a8397
Author: sboikov <sboikov@gridgain.com>
Date:   2017-04-18T08:15:44Z

    ignite-4932 For offheap_tiered cache first try read value without cache entry creation

commit aca67066ceaf762fcd44ef0715a4ba0f941226a8
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-18T09:23:28Z

    Merge branch 'ignite-1.8.5-p1' into ignite-1.8.6

----
;;;","18/Aug/17 14:36;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2485
;;;","18/Aug/17 14:57;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2484
;;;","18/Aug/17 14:57;githubbot;GitHub user alamar reopened a pull request:

    https://github.com/apache/ignite/pull/2484

    Backport IGNITE-3196

    Add support for BigDecimals with negative scale in BinaryMarshaller

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-1.7.15

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2484.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2484
    
----
commit a62a0136d295486d95c6e2ab5bba88270d831753
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-02T16:07:45Z

    GG-11655 - Fix merge

commit 348593986b56ddfcec4a4455e49d9b279eae4dc8
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-05T10:28:03Z

    Merge branch 'ignite-1.7.3' into ignite-1.7.4

commit 175da6b7e394dd76c27d5155ff98a5b2ef03bb9d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-07T06:16:58Z

    IGNITE-3432:  check data/meta cache names are different for different IGFS instances. This closes #1201

commit ead15193899d08f41491166003cabed0560f0c59
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T07:49:03Z

    IGNITE-4028 Get rid of OP_META in PlatformAbstractTarget
    
    This closes #1192

commit 40ef2f5ae42826fe8fd077e3013e8f55c8512bdd
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-07T09:09:41Z

    ignite-4178 support permission builder

commit df670c7d64046d282c053f296c47a4743c58c8b1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T09:40:00Z

    IGNITE-4118 .NET: Optimistic transaction example
    
    This closes #1200

commit 474f22fda4c7cf4d7b2623c451cd7c10f0d8c636
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T09:55:20Z

    IGNITE-4119 .NET: add TransactionDeadlockException

commit fc7ce5a4d72145f2e8a86debeda264ef0a5b37e3
Author: isapego <isapego@gridgain.com>
Date:   2016-11-07T10:26:05Z

    IGNITE-4090: Added flags so stdint and limits can be used in C++.

commit a98804a249496ba9bafbc96daa7aaf25b3d36724
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-07T11:00:00Z

    IGNITE-4113: Added tests. Added Statement::Set/GetAttribute.

commit b1c7c9bb95c900083702d0ba0362edf3aea5a7b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-07T12:40:36Z

    GG-11360 - Implement SQL queries cancellation
    Fix for commit 80abd1b: for distributed joins need always send cancel request.

commit 319014de075c80fb15e58172cc24e35ce16b56cf
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T14:53:40Z

    IGNITE-4132 .NET: Improve BinaryConfiguration documentation

commit 950bad474ef29f9b808e74034c49a69d57eb2740
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:03:34Z

    GG-11655 - Restore service compatibility with releases before 1.5.30.

commit 3d19bfc2b66574e3945ce17c7a4dfe77d0070b8d
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:04:36Z

    Merge remote-tracking branch 'origin/ignite-1.6.11' into ignite-1.6.11

commit 1612b6d66fed032182a41e90da71e6b986ae087b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T11:07:54Z

    .NET: Fix minor analysis warnings

commit e821dc0083003bc81058b1cb223d8a8a2ee44daf
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:09:21Z

    IGNITE-2079 (revert commit) GridCacheIoManager eats exception trail if it falls into the directed case

commit c2c82ca44befe4570325dd6cf2ba885e0d90596c
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:10:10Z

    Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11

commit 865bbcf0f41a0c4944e0928f1758d43a0eae82c5
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:18:29Z

    Revert ""Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11""
    
    This reverts commit c2c82ca44befe4570325dd6cf2ba885e0d90596c, reversing
    changes made to e821dc0083003bc81058b1cb223d8a8a2ee44daf.

commit 9726421ff9efb2b19813b2fd6ad27a3728b5ab1a
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:59:00Z

      Revert  Revert  Merge remote-tracking branch 'professional/ignite-1.6.11'

commit 5a3a1960fff1dcf32961c45c0ba5149d6748d2fc
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-08T14:36:35Z

    Added license header.

commit f697fb5786fb4ce15f581c465ff0dcb3d2bb7b14
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T16:13:48Z

    IGNITE-4185 .NET: Fix NullReferenceException in IgniteOutputCacheProvider when igniteConfiguration is missing

commit 69487f2c375010737311af65750a519b403fc17f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T16:38:28Z

    .NET: Fix error messages when IgniteConfigurationSection content is missing

commit d88f422aeb02738d676d86ce416551b805ad154e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-11-09T07:25:38Z

    GG-11028 Fixed resolving of host name.

commit ac660dcaa5bf8eb20e7dd4e442e97c1cf548a827
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T12:29:06Z

    IGNITE-4183: ODBC Fixed null-values fetching issue.

commit cdae2ab76d403aef9a0bd209fc7497dc6cfdfc08
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T13:25:30Z

    IGNITE-3873: Added WiX script to generate ODBC installer.

commit 1093819ac0f3e7a0faacde59919117b8977e6d5b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T15:19:01Z

    IGNITE-4201: Fixed version fix maven step.

commit bac0cba7fddd412dfbff98163afbc15d81d5e0d4
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-10T06:02:41Z

    ignite-4044  always authenticate local node

commit 26daa57ca82254d68ac04a7b33223c6eb5ade0e4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-10T08:17:29Z

    Fixed javadoc.

commit 8b59f4e76138e08e80aa219c1a9cf0c3df6fdb4b
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-10T11:43:00Z

    Backport commit of the following:
    
    commit 612eb3daffe608995aac28eed019b3e6ef9d66d3
    Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
    Date:   Fri Aug 19 13:28:39 2016 +0300
    
        ignite-2795 Support 'copyOnRead' for SQL queries

commit b7499828c928e02e8e554f960f3754e4d08bfbe0
Author: Anton Vinogradov <av@apache.org>
Date:   2016-11-10T13:10:21Z

    IGNITE-500 CacheLoadingConcurrentGridStartSelfTest fails (DataStreamer data loss at unstable topology in !allowOverwrite mode fixed)

commit baa752660c6eddf27d15a812252b01b5872385de
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-11-10T15:47:09Z

    IGNITE-4208: Hadoop: Fixed a bug preventing normal secondary file system start. This closes #1228.

----
;;;","10/Oct/17 14:58;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2484
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated,IGNITE-3195,12972701,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,dmagda,dmagda,25/May/16 12:34,13/Apr/20 18:13,14/Jul/23 06:20,28/Aug/19 10:30,,,,2.8,cache,,,,,0,iep-16,,,"Presently it's considered that the maximum number of threads that has to process all demand and supply messages coming from all the nodes must not be bigger than {{IgniteConfiguration.rebalanceThreadPoolSize}}.

Current implementation relies on ordered messages functionality creating a number of topics equal to {{IgniteConfiguration.rebalanceThreadPoolSize}}.

However, the implementation doesn't take into account that ordered messages, that correspond to a particular topic, are processed in parallel for different nodes. Refer to the implementation of {{GridIoManager.processOrderedMessage}} to see that for every topic there will be a unique {{GridCommunicationMessageSet}} for every node.

Also to prove that this is true you can refer to this execution stack 
{noformat}
java.lang.RuntimeException: HAPPENED DEMAND
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$5.apply(GridCachePartitionExchangeManager.java:378)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$5.apply(GridCachePartitionExchangeManager.java:364)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:622)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:320)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$300(GridCacheIoManager.java:81)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$OrderedMessageListener.onMessage(GridCacheIoManager.java:1125)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:105)
	at org.apache.ignite.internal.managers.communication.GridIoManager$GridCommunicationMessageSet.unwind(GridIoManager.java:2456)
	at org.apache.ignite.internal.managers.communication.GridIoManager.unwindMessageSet(GridIoManager.java:1179)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1900(GridIoManager.java:105)
	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:1148)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

All this means that in fact the number of threads that will be busy with replication activity will be equal to {{IgniteConfiguration.rebalanceThreadPoolSize}} x number_of_nodes_participated_in_rebalancing",,andmed,ascherbakov,avinogradov,dmagda,dpavlov,ignitetcbot,ivan.glukos,jokser,mmuzaf,vozerov,xtern,zstan,"anton-vinogradov commented on pull request #6573: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6573
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/19 15:47;githubbot;600","anton-vinogradov commented on issue #6573: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6573#issuecomment-511351717
 
 
   obsolete
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jul/19 10:35;githubbot;600","anton-vinogradov commented on pull request #6573: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6573
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jul/19 10:35;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688
 
 
   Signed-off-by: Anton Vinogradov <av@apache.org>
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jul/19 10:51;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305752579
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/IgnitionEx.java
 ##########
 @@ -1572,6 +1572,9 @@ public GridSpringResourceContext springContext() {
         /** Query executor service. */
         private ThreadPoolExecutor schemaExecSvc;
 
+        /** Query executor service. */
 
 Review comment:
   Copy-paste misprint, I think we should fix it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 09:30;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305757614
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
 ##########
 @@ -179,7 +179,9 @@ Object topic() {
 
     /**
      * @param topic Topic.
+     * @deprecated Useless.
 
 Review comment:
   I think we should describe here, why it is not used anymore.
   Since it's only internal API, should we just remove it without deprecation?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 09:42;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305762930
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -459,79 +449,59 @@ private void requestPartitions(final RebalanceFuture fut, GridDhtPreloaderAssign
 
                 U.log(log, ""Prepared rebalancing [grp="" + grp.cacheOrGroupName()
                     + "", mode="" + cfg.getRebalanceMode() + "", supplier="" + node.id() + "", partitionsCount="" + parts.size()
-                    + "", topVer="" + fut.topologyVersion() + "", localParallelism="" + locStripes
-                    + "", rmtParallelism="" + rmtStripes + "", parallelism="" + rmtTotalStripes + ""]"");
+                    + "", topVer="" + fut.topologyVersion() + ""]"");
             }
 
-            final List<IgniteDhtDemandedPartitionsMap> stripePartitions = new ArrayList<>(stripes);
-            for (int i = 0; i < stripes; i++)
-                stripePartitions.add(new IgniteDhtDemandedPartitionsMap());
+            if (!parts.isEmpty()) {
+                // Create copy of demand message with new striped partitions map.
+                final GridDhtPartitionDemandMessage demandMsg = d.withNewPartitionsMap(parts);
 
-            // Reserve one stripe for historical partitions.
-            if (parts.hasHistorical()) {
-                stripePartitions.set(stripes - 1, new IgniteDhtDemandedPartitionsMap(parts.historicalMap(), null));
-
-                if (stripes > 1)
-                    stripes--;
-            }
+                final int topicId = 0;
 
-            // Distribute full partitions across other stripes.
-            Iterator<Integer> it = parts.fullSet().iterator();
-            for (int i = 0; it.hasNext(); i++)
-                stripePartitions.get(i % stripes).addFull(it.next());
+                demandMsg.topic(rebalanceTopic);
+                demandMsg.rebalanceId(fut.rebalanceId);
+                demandMsg.timeout(grp.preloader().timeout());
 
-            for (int stripe = 0; stripe < rmtTotalStripes; stripe++) {
-                if (!stripePartitions.get(stripe).isEmpty()) {
-                    // Create copy of demand message with new striped partitions map.
-                    final GridDhtPartitionDemandMessage demandMsg = d.withNewPartitionsMap(stripePartitions.get(stripe));
-
-                    demandMsg.topic(rebalanceTopics.get(stripe));
-                    demandMsg.rebalanceId(fut.rebalanceId);
-                    demandMsg.timeout(grp.preloader().timeout());
-
-                    final int topicId = stripe;
-
-                    IgniteInternalFuture<?> clearAllFuture = clearFullPartitions(fut, demandMsg.partitions().fullSet());
-
-                    // Start rebalancing after clearing full partitions is finished.
-                    clearAllFuture.listen(f -> ctx.kernalContext().closure().runLocalSafe(() -> {
-                        if (fut.isDone())
-                            return;
-
-                        try {
-                            ctx.io().sendOrderedMessage(node, rebalanceTopics.get(topicId),
-                                demandMsg.convertIfNeeded(node.version()), grp.ioPolicy(), demandMsg.timeout());
+                IgniteInternalFuture<?> clearAllFuture = clearFullPartitions(fut, demandMsg.partitions().fullSet());
 
-                            // Cleanup required in case partitions demanded in parallel with cancellation.
-                            synchronized (fut) {
-                                if (fut.isDone())
-                                    fut.cleanupRemoteContexts(node.id());
-                            }
+                // Start rebalancing after clearing full partitions is finished.
+                clearAllFuture.listen(f -> ctx.kernalContext().closure().runLocalSafe(() -> {
+                    if (fut.isDone())
+                        return;
 
-                            if (log.isInfoEnabled())
-                                log.info(""Started rebalance routine ["" + grp.cacheOrGroupName() +
-                                    "", topVer="" + fut.topologyVersion() +
-                                    "", supplier="" + node.id() + "", topic="" + topicId +
-                                    "", fullPartitions="" + S.compact(stripePartitions.get(topicId).fullSet()) +
-                                    "", histPartitions="" + S.compact(stripePartitions.get(topicId).historicalSet()) + ""]"");
+                    try {
+                        if (log.isInfoEnabled())
+                            log.info(""Starting rebalance routine ["" + grp.cacheOrGroupName() +
+                                "", topVer="" + fut.topologyVersion() +
+                                "", supplier="" + node.id() + "", topic="" + topicId +
+                                "", fullPartitions="" + S.compact(parts.fullSet()) +
+                                "", histPartitions="" + S.compact(parts.historicalSet()) + ""]"");
+
+                        ctx.io().sendOrderedMessage(node, rebalanceTopic,
+                            demandMsg.convertIfNeeded(node.version()), grp.ioPolicy(), demandMsg.timeout());
 
 Review comment:
   I think the newly created `GridIoPolicy.REBALANCE_POOL` should be used here, not the group one. WDYT?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 09:55;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305766251
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
 ##########
 @@ -351,25 +342,26 @@ private IgniteCheckedException stopError() {
     }
 
     /** {@inheritDoc} */
-    @Override public void handleSupplyMessage(int idx, UUID id, final GridDhtPartitionSupplyMessage s) {
-        if (!enterBusy())
-            return;
+    @Override public void handleSupplyMessage(UUID id, final GridDhtPartitionSupplyMessage s) {
+        if (demander.prepareSupplyMessage(s)) {
+            ctx.kernalContext().closure().runLocalSafe(() -> {
 
 Review comment:
   We don't need `runLocalSafe` here, we should use `GridIoPolicy.REBALANCE_POOL` at the moment of message sending (for demander and supplier). 
   Such a technique doesn't free the `PUBLIC_POOL` threads and when it will be a really busy rebalance messages will stuck on it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:03;githubbot;600","Mmuzaf commented on issue #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#issuecomment-513734603
 
 
   I see, that we are still adding a batch of `cctx.io().addOrderedCacheGroupHandler` size `getRebalanceThreadPoolSize`.  Why we still need different handlers for the Rebalance messages since we are not using splitting by `topic` technique?
   
   
   See: `org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java:438`
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:24;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305775144
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -111,8 +112,8 @@
     /** Last exchange future. */
     private volatile GridDhtPartitionsExchangeFuture lastExchangeFut;
 
-    /** Cached rebalance topics. */
-    private final Map<Integer, Object> rebalanceTopics;
+    /** Cache rebalance topic. */
+    private final Object rebalanceTopic;
 
 Review comment:
   I think this can be completely removed. It used only as a `stub` here. Isn't it?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:28;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305775886
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -459,79 +449,59 @@ private void requestPartitions(final RebalanceFuture fut, GridDhtPreloaderAssign
 
                 U.log(log, ""Prepared rebalancing [grp="" + grp.cacheOrGroupName()
                     + "", mode="" + cfg.getRebalanceMode() + "", supplier="" + node.id() + "", partitionsCount="" + parts.size()
-                    + "", topVer="" + fut.topologyVersion() + "", localParallelism="" + locStripes
-                    + "", rmtParallelism="" + rmtStripes + "", parallelism="" + rmtTotalStripes + ""]"");
+                    + "", topVer="" + fut.topologyVersion() + ""]"");
             }
 
-            final List<IgniteDhtDemandedPartitionsMap> stripePartitions = new ArrayList<>(stripes);
-            for (int i = 0; i < stripes; i++)
-                stripePartitions.add(new IgniteDhtDemandedPartitionsMap());
+            if (!parts.isEmpty()) {
 
 Review comment:
   I'd recommend here to use such way:
   
   ```
   if (parts.isEmpty())
      return;
   ```
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:30;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305776449
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -459,79 +449,59 @@ private void requestPartitions(final RebalanceFuture fut, GridDhtPreloaderAssign
 
                 U.log(log, ""Prepared rebalancing [grp="" + grp.cacheOrGroupName()
                     + "", mode="" + cfg.getRebalanceMode() + "", supplier="" + node.id() + "", partitionsCount="" + parts.size()
-                    + "", topVer="" + fut.topologyVersion() + "", localParallelism="" + locStripes
-                    + "", rmtParallelism="" + rmtStripes + "", parallelism="" + rmtTotalStripes + ""]"");
+                    + "", topVer="" + fut.topologyVersion() + ""]"");
             }
 
-            final List<IgniteDhtDemandedPartitionsMap> stripePartitions = new ArrayList<>(stripes);
-            for (int i = 0; i < stripes; i++)
-                stripePartitions.add(new IgniteDhtDemandedPartitionsMap());
+            if (!parts.isEmpty()) {
+                // Create copy of demand message with new striped partitions map.
+                final GridDhtPartitionDemandMessage demandMsg = d.withNewPartitionsMap(parts);
 
 Review comment:
   We don't need to do a copy message here. Isn't it?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:32;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305776454
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
 ##########
 @@ -179,7 +179,9 @@ Object topic() {
 
     /**
      * @param topic Topic.
+     * @deprecated Useless.
 
 Review comment:
   Removal will cause incompatibility with older nodes.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:32;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305779374
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -111,8 +112,8 @@
     /** Last exchange future. */
     private volatile GridDhtPartitionsExchangeFuture lastExchangeFut;
 
-    /** Cached rebalance topics. */
-    private final Map<Integer, Object> rebalanceTopics;
+    /** Cache rebalance topic. */
+    private final Object rebalanceTopic;
 
 Review comment:
   Kept because of compatibility reasons.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:40;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305779836
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -459,79 +449,59 @@ private void requestPartitions(final RebalanceFuture fut, GridDhtPreloaderAssign
 
                 U.log(log, ""Prepared rebalancing [grp="" + grp.cacheOrGroupName()
                     + "", mode="" + cfg.getRebalanceMode() + "", supplier="" + node.id() + "", partitionsCount="" + parts.size()
-                    + "", topVer="" + fut.topologyVersion() + "", localParallelism="" + locStripes
-                    + "", rmtParallelism="" + rmtStripes + "", parallelism="" + rmtTotalStripes + ""]"");
+                    + "", topVer="" + fut.topologyVersion() + ""]"");
             }
 
-            final List<IgniteDhtDemandedPartitionsMap> stripePartitions = new ArrayList<>(stripes);
-            for (int i = 0; i < stripes; i++)
-                stripePartitions.add(new IgniteDhtDemandedPartitionsMap());
+            if (!parts.isEmpty()) {
 
 Review comment:
   This will cause code refactoring and merge issues.
   Since goal it to perform merge to older versions, that's not a good idea to refactor anything.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:41;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r305780918
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -459,79 +449,59 @@ private void requestPartitions(final RebalanceFuture fut, GridDhtPreloaderAssign
 
                 U.log(log, ""Prepared rebalancing [grp="" + grp.cacheOrGroupName()
                     + "", mode="" + cfg.getRebalanceMode() + "", supplier="" + node.id() + "", partitionsCount="" + parts.size()
-                    + "", topVer="" + fut.topologyVersion() + "", localParallelism="" + locStripes
-                    + "", rmtParallelism="" + rmtStripes + "", parallelism="" + rmtTotalStripes + ""]"");
+                    + "", topVer="" + fut.topologyVersion() + ""]"");
             }
 
-            final List<IgniteDhtDemandedPartitionsMap> stripePartitions = new ArrayList<>(stripes);
-            for (int i = 0; i < stripes; i++)
-                stripePartitions.add(new IgniteDhtDemandedPartitionsMap());
+            if (!parts.isEmpty()) {
+                // Create copy of demand message with new striped partitions map.
+                final GridDhtPartitionDemandMessage demandMsg = d.withNewPartitionsMap(parts);
 
 Review comment:
   Seems, here we have some sync trick. 
   This should be refactored and checked at another issue.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:44;githubbot;600","anton-vinogradov commented on issue #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#issuecomment-513740856
 
 
   > I see, that we are still adding a batch of `cctx.io().addOrderedCacheGroupHandler` size `getRebalanceThreadPoolSize`. Why we still need different handlers for the Rebalance messages since we are not using splitting by `topic` technique?
   > 
   > See: `org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java:438`
   
   We have to support request from older nodes.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:46;githubbot;600","anton-vinogradov commented on issue #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#issuecomment-513740856
 
 
   > I see, that we are still adding a batch of `cctx.io().addOrderedCacheGroupHandler` size `getRebalanceThreadPoolSize`. Why we still need different handlers for the Rebalance messages since we are not using splitting by `topic` technique?
   > 
   > See: `org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java:438`
   
   We have to support requests from older nodes.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:46;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r307655400
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
 ##########
 @@ -179,7 +179,9 @@ Object topic() {
 
     /**
      * @param topic Topic.
+     * @deprecated Useless.
 
 Review comment:
   I think we should place exactly your words for deprecated annotation description.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 09:09;githubbot;600","Mmuzaf commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r307656200
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -459,79 +449,59 @@ private void requestPartitions(final RebalanceFuture fut, GridDhtPreloaderAssign
 
                 U.log(log, ""Prepared rebalancing [grp="" + grp.cacheOrGroupName()
                     + "", mode="" + cfg.getRebalanceMode() + "", supplier="" + node.id() + "", partitionsCount="" + parts.size()
-                    + "", topVer="" + fut.topologyVersion() + "", localParallelism="" + locStripes
-                    + "", rmtParallelism="" + rmtStripes + "", parallelism="" + rmtTotalStripes + ""]"");
+                    + "", topVer="" + fut.topologyVersion() + ""]"");
             }
 
-            final List<IgniteDhtDemandedPartitionsMap> stripePartitions = new ArrayList<>(stripes);
-            for (int i = 0; i < stripes; i++)
-                stripePartitions.add(new IgniteDhtDemandedPartitionsMap());
+            if (!parts.isEmpty()) {
 
 Review comment:
   Why we should keep such a thing in the master branch only for `not having problems with cherry-pick`? I think we can do it here.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 09:11;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r307660444
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -459,79 +449,59 @@ private void requestPartitions(final RebalanceFuture fut, GridDhtPreloaderAssign
 
                 U.log(log, ""Prepared rebalancing [grp="" + grp.cacheOrGroupName()
                     + "", mode="" + cfg.getRebalanceMode() + "", supplier="" + node.id() + "", partitionsCount="" + parts.size()
-                    + "", topVer="" + fut.topologyVersion() + "", localParallelism="" + locStripes
-                    + "", rmtParallelism="" + rmtStripes + "", parallelism="" + rmtTotalStripes + ""]"");
+                    + "", topVer="" + fut.topologyVersion() + ""]"");
             }
 
-            final List<IgniteDhtDemandedPartitionsMap> stripePartitions = new ArrayList<>(stripes);
-            for (int i = 0; i < stripes; i++)
-                stripePartitions.add(new IgniteDhtDemandedPartitionsMap());
+            if (!parts.isEmpty()) {
+                // Create copy of demand message with new striped partitions map.
+                final GridDhtPartitionDemandMessage demandMsg = d.withNewPartitionsMap(parts);
 
 Review comment:
   fixed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 09:21;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r307660621
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
 ##########
 @@ -459,79 +449,59 @@ private void requestPartitions(final RebalanceFuture fut, GridDhtPreloaderAssign
 
                 U.log(log, ""Prepared rebalancing [grp="" + grp.cacheOrGroupName()
                     + "", mode="" + cfg.getRebalanceMode() + "", supplier="" + node.id() + "", partitionsCount="" + parts.size()
-                    + "", topVer="" + fut.topologyVersion() + "", localParallelism="" + locStripes
-                    + "", rmtParallelism="" + rmtStripes + "", parallelism="" + rmtTotalStripes + ""]"");
+                    + "", topVer="" + fut.topologyVersion() + ""]"");
             }
 
-            final List<IgniteDhtDemandedPartitionsMap> stripePartitions = new ArrayList<>(stripes);
-            for (int i = 0; i < stripes; i++)
-                stripePartitions.add(new IgniteDhtDemandedPartitionsMap());
+            if (!parts.isEmpty()) {
+                // Create copy of demand message with new striped partitions map.
+                final GridDhtPartitionDemandMessage demandMsg = d.withNewPartitionsMap(parts);
 
 Review comment:
   fixed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 09:22;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688#discussion_r307661047
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
 ##########
 @@ -179,7 +179,9 @@ Object topic() {
 
     /**
      * @param topic Topic.
+     * @deprecated Useless.
 
 Review comment:
   Let's leave this to future refactoring.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 09:23;githubbot;600","anton-vinogradov commented on pull request #6688: IGNITE-3195 Rebalancing: IgniteConfiguration.rebalanceThreadPoolSize is wrongly treated
URL: https://github.com/apache/ignite/pull/6688
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Aug/19 10:28;githubbot;600",,0,14400,,,0,14400,,,,,,IGNITE-11862,,,,,,,,,IGNITE-12117,IGNITE-12252,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,"Defaults changes to threads = 4, prefetch = 3",false,,,,,,,,,,,,,,,,,,,9223372036854775807,,Docs Required,,Thu Aug 29 06:54:46 UTC 2019,,,,,,,,,,"0|i2yh7r:",9223372036854775807,Merged to the master branch.,,,,,,,,,,,,,,,,,,,,"28/Sep/17 13:12;vozerov;Moved to 2.4 due to inactivity.;;;","23/Apr/18 17:14;dpavlov;[~dmagda], [~vozerov], sorry, but I am not able to find patch and/or PR here, so I cancel patch.

Please set status to PA once patch is ready and mentioned in ticket;;;","05/Jul/19 07:14;zstan;look like we clash the same problem on blt change:

{code:java}
2019-07-04 06:29:03.649[WARN ][sys-#328%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#328%DPL_GRID%DplGridNodeName% for timeout(ms)=16335
2019-07-04 06:29:03.649[WARN ][sys-#326%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#326%DPL_GRID%DplGridNodeName% for timeout(ms)=13438
2019-07-04 06:29:03.649[WARN ][sys-#277%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#277%DPL_GRID%DplGridNodeName% for timeout(ms)=11609
2019-07-04 06:29:03.649[WARN ][sys-#331%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#331%DPL_GRID%DplGridNodeName% for timeout(ms)=18009
2019-07-04 06:29:03.649[WARN ][sys-#321%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#321%DPL_GRID%DplGridNodeName% for timeout(ms)=15557
2019-07-04 06:29:03.650[WARN ][sys-#307%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#307%DPL_GRID%DplGridNodeName% for timeout(ms)=27938
2019-07-04 06:29:03.649[WARN ][sys-#316%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#316%DPL_GRID%DplGridNodeName% for timeout(ms)=12189
2019-07-04 06:29:03.649[WARN ][sys-#311%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#311%DPL_GRID%DplGridNodeName% for timeout(ms)=11056
2019-07-04 06:29:03.650[WARN ][sys-#295%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#295%DPL_GRID%DplGridNodeName% for timeout(ms)=20848
2019-07-04 06:29:03.649[WARN ][sys-#290%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#290%DPL_GRID%DplGridNodeName% for timeout(ms)=14816
2019-07-04 06:29:03.649[WARN ][sys-#332%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#332%DPL_GRID%DplGridNodeName% for timeout(ms)=14110
2019-07-04 06:29:03.649[WARN ][sys-#298%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#298%DPL_GRID%DplGridNodeName% for timeout(ms)=10028
2019-07-04 06:29:03.650[WARN ][sys-#304%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#304%DPL_GRID%DplGridNodeName% for timeout(ms)=19855
2019-07-04 06:29:03.650[WARN ][sys-#331%DPL_GRID%DplGridNodeName%][o.a.i.i.p.c.p.pagemem.PageMemoryImpl] Parking thread=sys-#331%DPL_GRID%DplGridNodeName% for timeout(ms)=41277

... and so on
{code}

;;;","05/Jul/19 08:15;avinogradov;Folks, we have a lot of problems with rebalance
1) uncontrolled rebalance thread pool size
2) during long rebalance possible situation that some threads do nothing but some have a long queue
3) code looks bad and should be refactored (simplified!), a see a lot of things checked 2+ times at different places, some check and actions are useless.

Currently I'm in refactoring stage. Just removed 1/2 of code and now it able to understand how it works :) ;;;","18/Jul/19 08:22;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4347484&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","18/Jul/19 08:26;avinogradov;[~Mmuzaf], [~xtern]
I've prepared the PoC. Please prereview the code.
Going to perform benchmarks on real environment after your check.;;;","22/Jul/19 09:34;mmuzaf;[~avinogradov]

Sure, I will take a look, shortly!;;;","26/Jul/19 05:57;ignitetcbot;{panel:title=Branch: [pull/6688/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4394852&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","26/Jul/19 06:33;avinogradov;[~Mmuzaf], [~xtern]

I've finished the implementation.
Changes:
- defaults: threads:4, prefetch = 3
- got rid of any sync during the preloading except lazy sync before partition own.
- new thread pool added

Limitations:
- historical rebalance still executing in ""1 thread per supplier"" way, without thread count limitation (like it was before).
It seems to be the proper way since historical rebalance is small and should be applied asap.;;;","19/Aug/19 12:47;avinogradov;[~Mmuzaf], [~xtern]

I've updated the PR.

Now, we have 2 thread pools for rebalance (any objections?).
1) Plain thread pool used to handle supplied messages in case they are not historical.
2) Striped pool used to handle historical supply messages and all demand messages. 
Striped pool hashed by node id.

It looks like we able to get rig of striped pool in future, but for now it looks like a good and simple solution.
Historical rebalance can be reordered in case we'll invent tombstones for removes.
Supplier also theoretically able to be rewritten.;;;","21/Aug/19 09:48;ignitetcbot;{panel:title=Branch: [pull/6688/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4522863&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","21/Aug/19 11:58;avinogradov;Folks, 
I've benchmarked the solution. 
1 huge partition was rebalanced from one node to another using 4 threads, both nodes were started at same JVM at my laptop.
It took *170* seconds at master and *95* at my branch.
Speedup mostly caused by *unstriped* pool usage at a demand node.
This does not mean that regular rebalance will be speeded up twice, but this means that case with a long rebalancing of final partitions now solved.

Also, 
I've improved striped pool to be eliminated on inactivity, the unstriped pool had this feature before.
So you'll never see rebalance-*-thread at thread-dumps in case your cluster performed no rebalance the last time.

[~Jokser], 
Could you please join the review?;;;","27/Aug/19 10:00;ascherbakov;[~avinogradov]

I'll take a look.;;;","27/Aug/19 16:39;ascherbakov;[~avinogradov]

Overall fix looks good, but I think we could improve it.

1. Looks like it's safe to remove ordering for historical rebalance because after IGNITE-10078 rmvQeue for partition is no longer cleared during rebalance and removals cannot be lost.
Given what, we could use single thread pool for historical and full rebalance and parallelize historical rebalance on supplier side same as full.
This is right thing to do because from user side of view there is no difference between full and historical rebalance and they can happen simultaneously.
Note, proper fix for writing tombstones is on the way [1]

2. Looks like current implementation for detecting partition completion on concurrent processing using *queued* and *processed* is flawed.
Consider the scenario:
Demander sends initial demand request for single partition.
Supplier replies with 2 total supply messages which are starting to process in parallel.
2-d message is last.
2-d message started to process first, increments *queued* to N (number of entries in message)
2-d message finished processing, incrementing *processed* to N.
Because this is last message partition will be owned before other messages are applied.

[1] https://issues.apache.org/jira/browse/IGNITE-11704;;;","28/Aug/19 09:54;avinogradov;Discussed privately with [~ascherbakov].

1) Historical rebalance semantic was not changed due to data foss found at TeamCity regression.
Issue IGNITE-12117 created to un-stripe it.

2) Reordering is not possible during messages registration since ordered topic used, so no problem here.

3) It is possible to have X2 load in the following cases:
3.1 node supplies and demands simultaneously
3.2 node demands in a historical and regular way simultaneously
that seems to be not a production case 
3.1 can be solved by baseline and good affinity
3.2 almost impossible at a real environment to have some partition rebalanced using historical rebalance when others should be rebalanced using a regular one.;;;","28/Aug/19 09:58;ignitetcbot;{panel:title=Branch: [pull/6688/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4537951&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","28/Aug/19 10:28;mmuzaf;[~avinogradov],

All the minor issues have been discussed with you privately and resolved. 
Changes look good to me, please go ahead.;;;","28/Aug/19 13:57;ascherbakov;[~avinogradov]

1. This theoretically should work. I'm going to contribute a bunch of follow-up fixes by IGNITE-12038 very soon, let's check TC again after.
2. OK, looks like ordered messages should provide necessary ordering.

No more objections from me, thanks.;;;","28/Aug/19 15:05;jokser;[~avinogradov]
I have a question regarding the completed change. Why 2 thread-pools is used for rebalancing? Why it's worse if we leave the only a striped pool for all messages? ;;;","29/Aug/19 05:40;avinogradov;[~Jokser]
Only striped pool will provide bad a performance.
See benchmark results above.;;;","29/Aug/19 06:54;avinogradov;Forgot to record this:

Solution merged to the master branch.;;;",,,,,,,,,,,,,,,,,,,,,,
Leaks at the GridCacheQueryManager on iterator canceling,IGNITE-3192,12972654,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,tledkov-gridgain,tledkov-gridgain,25/May/16 09:15,27/May/16 12:57,14/Jul/23 06:20,27/May/16 12:57,1.6,,,1.7,,,,,,0,,,,"When cancel request and scan request are processed with a race the GridFutureAdapter object isn't removed form the  GridCacheQueryManager.qryIters submaps.

The problem is reproduced occasionally by the test:  [GridCacheAtomicNearEnabledPrimaryWriteOrderMultiNodeFullApiSelfTest.testIgniteCacheIterator|http://149.202.210.143:8111/viewLog.html?buildId=250124&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteCacheFullApi]",,githubbot,sboikov,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 27 12:56:56 UTC 2016,,,,,,,,,,"0|i2ygxb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/May/16 11:01;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/754

    IGNITE-3192  Leaks at the GridCacheQueryManager on iterator canceling

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3192

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/754.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #754
    
----
commit 9ccae8520f406607b5d47044bdfc5fcac6d9d57f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-05-24T11:38:36Z

    IGNITE-3192  Leaks at the GridCacheQueryManager on iterator canceling

----
;;;","25/May/16 11:46;tledkov-gridgain;Patch is available. Please take a look at the pull request;;;","25/May/16 12:24;tledkov-gridgain;LinkedHashMap of (requestId, GridFutureAdapter) is replaced with {{GridCacheQueryManager.CanceledKeyMap}}.
It is used to prevent put new key/value pair into the map when the cancel message has been already processed.

;;;","26/May/16 09:13;sboikov;Reviewed, it seems that for cancelled query put in map is prevented, but query still will be executed, need fix this as well. ;;;","27/May/16 07:53;tledkov-gridgain;Review issue is fixed. Query execution is skipped in specified case. Please take a look.
Tests [results|http://149.202.210.143:8111/viewLog.html?buildId=253136] on the branch;;;","27/May/16 12:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/754
;;;","27/May/16 12:56;sboikov;Reviewed, looks good, merged into master (commit d01a305).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObjectBuilder: binary schema id depends on the order of fields addition,IGNITE-3191,12972643,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,dmagda,dmagda,25/May/16 08:35,16/Feb/17 12:10,14/Jul/23 06:20,15/Nov/16 09:43,1.7,,,1.8,binary,,,,,0,,,,"Presently if an object is created using BinaryObjectBuilder then several BinarySchemes can be generated for the same set of fields in case when fields are added in a different order.

This happens because {{LinkedHashMap}} is used underneath. However we should rely on order-free structure like {{TreeMap}}.
",,andmed,dmagda,dsetrakyan,githubbot,tledkov-gridgain,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2626,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 15 10:44:45 UTC 2016,,,,,,,,,,"0|i2yguv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jun/16 00:28;dsetrakyan;Any reason why {{LinkedHashMap}} was chosen initially?;;;","01/Jun/16 09:00;vozerov;{{TreeMap}} is slower than {{LinkedHashMap}}, and we didn't consider many distinct field combinations as a common use case.

Moreover, even now I don't understand well why we should bother with changing everything from unordered to ordered structure.;;;","29/Jun/16 11:46;dmagda;[~vozerov], the ordered structure makes sense because otherwise the user need to preserve order on how the fields are set during an object construction. If the order varies from time to time it will lead to the situation when a new scheme is created for every unique combination.;;;","14/Sep/16 22:38;vkulichenko;Another issue caused by using {{LinkedHashMap}} in the builder is wrong equals. If the same set of fields is added with the same values, but in different order, objects will not be equal, because we compare byte arrays.

We should use {{TreeMap}} in builder and also sort fields in the {{BinaryClassDescriptor}}, so that serialization of a POJO is also consistent.;;;","14/Sep/16 23:07;vkulichenko;Made changes in branch {{ignite-3191}}.;;;","15/Sep/16 11:51;vozerov;In general changes looks fine in terms that they should not break logic and performance. But this appears to be a partial fix to me. We have the same issue with {{Binarilyzable}}. Pseudo code:
{code}
class MyClass {
    writeBinary(Writer w) {
        w.write(""B"", b);
        w.write(""A"", a);
    }
}
{code}
And then:
{code}
BinaryObject obj1 = toBinary(new MyClass(a, b)); // Not sorted
BinaryObject obj2 = builder(""MyClass"").setField(""B"", b).setField(""A"", a).build(); // Sorted

assertEquals(obj1, obj2); // Returns ""false"".
{code};;;","16/Sep/16 19:43;vkulichenko;Vladimir,

Agree. Do you have any thoughts on how we can address it?;;;","29/Sep/16 00:55;vkulichenko;Issue with {{Binarylizable}} looks complicated, so I think we should come back to it separately. I merged the fix as-is.;;;","03/Oct/16 07:23;vozerov;Re-opened ticket because new mode appears to be incompatible with previous protocol versions. As a result it could be impossible to read data created in previous Ignite versions.;;;","31/Oct/16 10:04;tledkov-gridgain;Root cause:
at the {{BinaryContext.registerUserClassDescriptor}} metadata is not updated on deserialize. 

So, the fail case is:
1. *New node* writes object to the cache, update system cache & local maps with *new-schema*;
2. *Old node* reads the object from binary. Create local {{BinaryClassDescriptor}} with *old-schema* as a stable schema. *New-chema* is available at the schemes registry. Does't update metadata (doesn't merge *old-schema* & *new-schema*);
3. *Old node* writes object to the cache. The new {{BinaryClassDescriptor}} isn't created because the descriptor is added to the local maps at the *step* 2. The stable *old-schema* is used.
4. *New-node* cannot deserialize the object with *old-shema*.

The suggestion fix from Vladimir updates metadata on the *step 3*. 
So, in case the object has been created on the old node then the object is created on the new-node all works properly because new node updates the system cache with *new-schema*.

Conclusion:
1. I guess we have to fix the metadata & system caches update on the *step 2* (when the local instance of the {{BinaryClassDescriptor}} is created the first.) to prevent this problem in the future.
2. The fix for fields ordering should be switched by system property until the backward compatibility is required.
;;;","31/Oct/16 11:11;tledkov-gridgain;According with the IGNITE-1377 Vladimir's fix is properly. We cannot update metadata on deserialization.;;;","31/Oct/16 13:57;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1197

    IGNITE-3191  BinaryObjectBuilder: binary schema id depends on the order of fields addition

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3191

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1197.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1197
    
----
commit 75997afc762aff0581e53adc25c3efa329f48c6e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-15T10:23:44Z

    Hadoop: Removed invalid test.

commit 3a28545e8c404e9b8dacd93ba1275a1919fb1d9e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-15T10:24:07Z

    Merge remote-tracking branch 'upstream/ignite-1.6.8' into ignite-1.6.8

commit 3a94f27e6bdee1672a2a94faf0b5b63ab218b476
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-15T10:58:38Z

    IGNITE-3902: Hadoop: fixed incorrect context classloader management.

commit 0dc9713ac3124c0ea34d949271a813c992873656
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-15T11:01:19Z

    IGNITE-3906: Hadoop: implemented additional user libs facility.

commit 2474e2b331da34e16acc7a69c4703335e67b142e
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-09-15T01:40:38Z

    IGNITE-3421: Add ability to configure maxIterCnt property in GridCacheQueryManager. - Fixes #1055.
    
    Signed-off-by: shtykh_roman <rshtykh@yahoo.com>

commit ebf354c568d0802b7eed1cc6b9d251941dbce014
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-09-16T11:32:13Z

    IGNITE-3907 Fixed ""Incorrect initialization CQ when node filter configured for cache""

commit c0b2b4797be4f250f6f1304ff27d45c72154608a
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-09-16T21:59:35Z

    IGNITE-3635 - Fixed StackOverflowError thrown from BinaryObject.toString()

commit c24cabafd69804b3ac8e2c08895c9b9b9597a7f3
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-09-16T21:59:51Z

    Merge remote-tracking branch 'community/ignite-1.6.8' into ignite-1.6.8

commit 147ab9c08f6ac7edecf656b23d8b25bfab91becf
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-09-19T10:58:41Z

    IGNITE-3406 - Interceptor and continuous query get correct old value during rebalancing.

commit c3eff6b6c7817f83f07afcff8784ec6aa9473876
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-09-19T13:18:14Z

    IGNITE-3406 - Fix incorrect patch.

commit 9b72d18dd94ec1383653f00474c102804c02790a
Author: Anton Vinogradov <av@apache.org>
Date:   2016-09-19T15:07:20Z

    IGNITE-1525 Return value for cache operation can be lost with onePhaseCommit

commit 780bf23d5c89452dd062be4fab9e2e56d50bb9e2
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-19T15:19:33Z

    ignite-3810 Fixed hang in FileSwapSpaceSpi when too large value is stored

commit c1372ce2f0633968036fcfb079718214605c3350
Author: sboikov <sboikov@gridgain.com>
Date:   2016-09-20T08:39:37Z

    Client discovery: wait during join if receive RES_CONTINUE_JOIN, RES_WAIT.

commit 5a35ee9dad194b3009151b79f0ebd3976bb8fd22
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-20T09:10:55Z

    IGNITE-3859:  IGFS:  Support direct PROXY mode invocation in the open method, add proxy mode to IgfsInputStreamImpl
    This closes #1065. This closes #1083.

commit 135f0a8a39fb6895fada18d210260deebfb9426d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-21T07:33:11Z

    Added missing header to BinaryObjectToStringSelfTest.

commit b3ba8b886bd6e582a860d836da093918dc521745
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-21T08:20:07Z

    Merge branch ignite-1.6.8 into ignite-1.6.9.

commit 4ee52f0a50d9cf8bc64a277f2d02600a832d6ca6
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-21T08:37:52Z

    IGNITE-3936 Added check for already processed key types on load cache. Added info message about started/finished load cache. Improved exceptions messages.

commit 16b82b77f00dff8e525c8cc68d3387de107c78d1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-21T09:35:07Z

    IGNITE-3635: Additional fix for stack overflow in binary objects.

commit e3827a40bcbd54664cc0688e8e6ec57e4e328172
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-09-21T23:07:02Z

    IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method

commit f4cd72bdeee32c2cda0fa7ecbfcf5df1a06a35f1
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-22T07:34:01Z

    Merge branch ignite-1.6.8 into ignite-1.6.9.

commit 0d5ee7887be03295133704227133d619898b6abf
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-22T07:36:50Z

    IGNITE-3937 implemented support for unsigned types in MySQL.

commit a97483a4ce2c00bd0cca025c4ef4bfa181897aa9
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-22T07:51:05Z

    IGNITE-3858 IGFS: Support direct PROXY mode invocation in methods: create / append. This closes #1070. This closes #1084.

commit 63888bd99b8a84cc961b226efba9964dcc292f4c
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-22T09:22:40Z

    IGNITE-3938 Implemented escaping for SQL identifiers. Added tests for escaped mode.

commit 9666dc49d704c32a4b0b4b7920af62b78af69298
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-09-23T03:18:15Z

    IGNITE-3937 implemented support for unsigned types in MySQL. Minor fix.

commit 29f508b17eb383a1c910c72e7d5056564acc37c2
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-23T07:59:55Z

    IGNITE-3925: Output process ID to the log on node start.

commit 40f647258a10fa8b42ac6fda67d6fa4db71b8100
Author: Anton Vinogradov <av@apache.org>
Date:   2016-09-08T15:58:31Z

    IGNITE-3874 sync putIfAbsent forever blocked on all nodes after one node is stopped

commit 062ecd75908131084e27883f3f160f3504e92165
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-09-23T11:05:17Z

    IGNITE-3931: IGFS: Test fixes for PROXY mode. This closes #1102.

commit 4ff401b555f067dbbdf810f1a43228d174d2f238
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-23T11:05:27Z

    Merge remote-tracking branch 'upstream/ignite-1.6.9' into ignite-1.6.9

commit 14959f2efea43046a1a2e5c1978fc27a156f5a7a
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-09-26T07:12:45Z

    IGNITE-3925: Removed unnecessary ""log.isInfoEnabled()"" check during PID printout.

commit 38d1d0491ab9e6858a58b90d0e5d892d9fc0e284
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-09-26T08:04:56Z

    IGNITE-3876: ODBC: Better handling of NULL values for output parameters. This closes #1099.

----
;;;","31/Oct/16 14:12;tledkov-gridgain;[Tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1197%2Fhead];;;","06/Nov/16 18:22;vozerov;Review comments:
1) {{BinaryClassDescriptor}} - {{import com.sun.tools.jdi.LinkedHashMap}}?
2) Should {{BinaryObjectBuilderImpl}} really consult to {{IGNITE_BINARY_SORT_OBJECT_FIELDS}} property? I think this is unnecessary and we can always use {{TreeMap}}.
3) {{FIELDS_SORTED_ORDER}} - obvious duplication. Please move this constant to {{BinaryUtils}} and re-use from multiple places.
4) Inefficient code - why do we always allocate {{TreeMap}}?
{code}
Map<Object, BinaryFieldAccessor> fields0 = new TreeMap<>();

if (!FIELDS_SORTED_ORDER)
    fields0 = new LinkedHashMap();
{code}
5) {{BinaryClassDescriptor.schema()}} - unusaed method.
6) Inefficient code, as it might cause additional map lookup. It is better to use volatile boolean flag here:
{code}
if (userType && schemaReg.schema(stableSchema.schemaId()) == null) ...
{code};;;","14/Nov/16 09:19;vozerov;Fixed review comments. Waiting for test results.;;;","15/Nov/16 10:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1197
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
OffHeap cache metrics doesn't work properly for OFFHEAP_TIRED mode,IGNITE-3190,12972424,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,v.pyatkov,v.pyatkov,24/May/16 15:52,31/May/16 07:10,14/Jul/23 06:20,31/May/16 07:10,,,,,,,,,,0,,,,"Simple configuration cache with OffHeap tiered (statistics must be enabled) never increase of get from OffHeap (CacheMetrics#getOffHeapGets always 0)

{code}
cache.put(46744, ""val 46744"");
cache.get(46744);
{code}

{noformat}
2016-05-24 14:19:31 INFO  ServerNode:78 - Swap put 0 get 0 (0, 0) entries count 0
2016-05-24 14:19:31 INFO  ServerNode:81 - OffHeap put 1 get 0 (0, 0) entries count 1
2016-05-24 14:19:31 INFO  ServerNode:84 - OnHeap put 1 get 1 (1, 0)
{noformat}",,dmagda,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/May/16 11:09;v.pyatkov;755.patch;https://issues.apache.org/jira/secure/attachment/12806338/755.patch","26/May/16 10:28;dmagda;755.patch;https://issues.apache.org/jira/secure/attachment/12806334/755.patch",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue May 31 07:10:36 UTC 2016,,,,,,,,,,"0|i2yfin:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/May/16 11:39;v.pyatkov;https://github.com/apache/ignite/pull/755
I am added some change in metrics calculation.
Could anyone review it?
;;;","26/May/16 10:28;dmagda;Vlad, looks good to me.

However, please move all your tests into already existed {{CacheLocalOffHeapAndSwapMetricsSelfTest}}. You just need to set different cache mode (OFFHEAP_TIRED) and rename your methods.

;;;","26/May/16 10:28;dmagda;Just in case attached your patch file.;;;","26/May/16 11:09;v.pyatkov;I added the change and created a new patch (in attachment).
Please review again.;;;","31/May/16 07:10;dmagda;Vlad, thanks, merged your changes into the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary marshaller doesn't unmarshal a void type,IGNITE-3188,12972315,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ntikhonov,ntikhonov,24/May/16 08:11,10/May/17 08:15,14/Jul/23 06:20,26/May/16 12:01,1.6,,,1.6,cache,,,,,0,important,,,"The following code snippet failed with binary marshaller:
{noformat}
BinaryMarshaller marsh = (BinaryMarshaller)ignite.configuration().getMarshaller();
Map<Object, Object> map = new HashMap<>();
map.put(Void.class, Void.TYPE);
byte[] bytes = marsh.marshal(map);
marsh.unmarshal(bytes, null);
{noformat}

Got exception:
{noformat}
class org.apache.ignite.binary.BinaryObjectException: Failed to unmarshal object with optimized marshaller
	at org.apache.ignite.internal.binary.BinaryUtils.doReadOptimized(BinaryUtils.java:1555)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1631)
	at org.apache.ignite.internal.binary.BinaryUtils.doReadObject(BinaryUtils.java:1568)
	at org.apache.ignite.internal.binary.BinaryUtils.deserializeOrUnmarshal(BinaryUtils.java:1915)
	at org.apache.ignite.internal.binary.BinaryUtils.doReadMap(BinaryUtils.java:1899)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1596)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.deserialize(GridBinaryMarshaller.java:298)
	at org.apache.ignite.internal.binary.BinaryMarshaller.unmarshal(BinaryMarshaller.java:112)
	at org.apache.ignite.internal.processors.cache.BinarySerializationQuerySelfTest.testPlain(BinarySerializationQuerySelfTest.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1723)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
	at org.apache.ignite.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1661)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to find class with given class loader for unmarshalling (make sure same versions of all classes are available on all nodes or enable peer-class-loading): sun.misc.Launcher$AppClassLoader@36d98810
	at org.apache.ignite.marshaller.optimized.OptimizedMarshaller.unmarshal(OptimizedMarshaller.java:225)
	at org.apache.ignite.internal.binary.BinaryUtils.doReadOptimized(BinaryUtils.java:1552)
	... 17 more
Caused by: java.lang.ClassNotFoundException: void
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:274)
	at org.apache.ignite.internal.util.IgniteUtils.forName(IgniteUtils.java:8213)
	at org.apache.ignite.internal.MarshallerContextAdapter.getClass(MarshallerContextAdapter.java:185)
	at org.apache.ignite.marshaller.optimized.OptimizedMarshallerUtils.classDescriptor(OptimizedMarshallerUtils.java:270)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readClass(OptimizedObjectInputStream.java:353)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:305)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:364)
	at org.apache.ignite.marshaller.optimized.OptimizedMarshaller.unmarshal(OptimizedMarshaller.java:219)
	... 18 more
{noformat}",,dmagda,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 26 12:01:20 UTC 2016,,,,,,,,,,"0|i2yeuf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/May/16 12:01;dmagda;The issue has already been fixed before. Added missing tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Test] org.apache.ignite.internal.processors.igfs.IgfsProcessorValidationSelfTest#testInvalidEndpointTcpPort fails on master,IGNITE-3186,12972084,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,iveselovskiy,iveselovskiy,23/May/16 14:54,15/Jun/16 12:31,14/Jul/23 06:20,15/Jun/16 12:31,1.7,,,1.7,igfs,,,,,0,,,,"There is no such problem in 1.6 release, test only fails on master branch .

Root cause is that an SPI now does not allow to start one instance more than once.
Test does 3 checks, but uses one configuration instance for all them. First check passes, than the 2nd attempts to start the node, but unexpected error happens when an already started Spi is attempted to start.

Caused by: class org.apache.ignite.IgniteCheckedException: SPI has already been started (always create new configuration instance for each starting Ignite instances) [spi=TcpCommunicationSpi [connectGate=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$ConnectGateway@ceb47b, srvLsnr=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$2@2aaf7a7, locAddr=127.0.0.1, locHost=localhost/127.0.0.1, locPort=45050, locPortRange=100, shmemPort=48100, directBuf=true, directSndBuf=false, idleConnTimeout=30000, connTimeout=5000, maxConnTimeout=600000, reconCnt=10, sockSndBuf=32768, sockRcvBuf=32768, msgQueueLimit=1024, slowClientQueueLimit=0, nioSrvr=null, shmemSrv=IpcSharedMemoryServerEndpoint [port=48100, tokDirPath=ipc/shmem, size=262144, tokDir=/mnt/tc_disk/temp/buildTmp/ignite/work/ipc/shmem/10fe89ee-1969-4aab-b91c-bb415b45c001-15910, locNodeId=10fe89ee-1969-4aab-b91c-bb415b45c001, gridName=g1, omitOutOfResourcesWarn=true, pid=15910, closed=true], tcpNoDelay=true, ackSndThreshold=16, unackedMsgsBufSize=0, sockWriteTimeout=2000, lsnr=null, boundTcpPort=-1, boundTcpShmemPort=48100, selectorsCnt=4, addrRslvr=null, rcvdMsgsCnt=0, sentMsgsCnt=0, rcvdBytesCnt=0, sentBytesCnt=0, ctxInitLatch=java.util.concurrent.CountDownLatch@2668f64f[Count = 0], stopping=true, metricsLsnr=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$3@3502d03c]]
    at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:956)
    at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1736)
    at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1589)
    at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1042)
    at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:569)
    at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:516)
    at org.apache.ignite.Ignition.start(Ignition.java:322)
    ... 11 more",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/16 16:11;iveselovskiy;ignite-3186.patch;https://issues.apache.org/jira/secure/attachment/12805656/ignite-3186.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 23 16:09:24 UTC 2016,,,,,,,,,,"0|i2ydfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/May/16 16:09;iveselovskiy;attaching patch since github does not work;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop: Improve Hadoop JAR search logic.,IGNITE-3185,12972083,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,23/May/16 14:42,01/Jul/16 12:40,14/Jul/23 06:20,01/Jul/16 12:40,1.5.0.final,,,1.7,hadoop,,,,,0,,,,"*Problem*
Currently our {{HadoopClassLoader}} is trying to find common/hdfs/mapred JARs automatically if {{HADOOP_HOME}} is set. However, it checks only for standard Apache Hadoop distribution paths (/share/hadoop/*). For other distributions (CDH, HDP), user has to bother with additional env variables manually.

*Solution*
Try to search for the following folders as well:
$HADOOP_HOME/hadoop
$HADOOP_HOME/hadoop-hdfs
$HADOOP_HOME/hadoop-mapreduce

If all these folders are found, then this is either HDP or CDH deployment and we can create the classpath without additional env vars.",,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 29 15:19:08 UTC 2016,,,,,,,,,,"0|i2ydf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/16 18:54;iveselovskiy;As I understand, in case of almost all non-apache distributions the hdfs & mapred homes are not sub-folders of HADOOP_HOME. 
HADOOP_HOME by its original sense represents hadoop client base folder (${HADOOP_HOME}/bin/hadoop executable file assumed to exist). 
So, common , hdfs and mapred base folders typically have some common root , but this root is not a value of HADOOP_HOME.
E.g. out docs v1.0 say ( http://apacheignite.gridgain.org/v1.0/docs/installing-on-hortonworks-hdp ) :
{code}
HDP=/usr/hdp/current
export HADOOP_HOME=$HDP/hadoop-client/
export HADOOP_COMMON_HOME=$HDP/hadoop-client/
export HADOOP_HDFS_HOME=$HDP/hadoop-hdfs-client/ 
export HADOOP_MAPRED_HOME=$HDP/hadoop-mapreduce-client/
{code}

Note that more late version of that page defines HADOOP_HOME differently ( https://apacheignite-fs.readme.io/docs/installing-on-hortonworks-hdp ): here HADOOP_HOME is not a client home folder. 

I would suggest to implement solution described in IGNITE-483 , item ""2)"": specify a directory location profile for each supported distribution. The user will just need to chose the right profile name to get correct layout.;;;","27/Jun/16 16:07;iveselovskiy;https://github.com/apache/ignite/pull/834;;;","28/Jun/16 13:16;vozerov;Ivan,
Please confirm that current solution works various deployments. ;;;","29/Jun/16 15:04;iveselovskiy;Vladimir, code works.

My comments on the suggested solution.
1) I would not recommend to probe invalid locations (I mean probes like ""Probe for CDH with HADOOP_HOME set to parent directory.""). I understand that this is to cover former mistake in documentation, but if user has an invalid env setting, he'd better get an error message and understand it, because otherwise other parts of the system may malfunction.
2) If HADOOP_HOME is set to an existing directory, but no probed combination exists, user gets error message like ""Failed to resolve Hadoop classpath because HADOOP_HOME environment variable points to invalid directory: /usr/hdp/current/hadoop-client"". I would suggest to make it more exact, since the directory is not ""invalid"".
3) If HADOOP_HOME/PREFIX is not set, absolute standard distributions (HDP, CDH, BigTop) locations are not probed. This is a bit strange, since HADOOP_HOME is not mandatory at all (IGNITE-3184).;;;","29/Jun/16 15:19;vozerov;I'll improve points 1 and 2.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop: HADOOP_HOME should not be required if all other environment variables are set.,IGNITE-3184,12972078,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,23/May/16 14:31,27/Jun/16 10:48,14/Jul/23 06:20,27/Jun/16 10:48,1.5.0.final,,,1.7,hadoop,,,,,0,,,,"*Problem*
Ignite internals require three pieces to create correct Hadoop classpath:
1) Path to common JARs;
2) Path to HDFS JARs;
3) Path map-reduce JARs.

These three paths could be set with environment variables HADOOP_COMMON_HOME, HADOOP_HDFS_HOME and HADOOP_MAPRED_HOME respectively. 

When all of them are set, HADOOP_HOME is no longer needed, but we will throw an exception in this case. We should not do that.

*Solution*
Throw exception only in case we cannot resolve any of these paths.",,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 24 07:54:07 UTC 2016,,,,,,,,,,"0|i2yddz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/16 17:56;iveselovskiy;https://github.com/apache/ignite/pull/810

tested both on Linux & Windows.;;;","20/Jun/16 17:49;iveselovskiy;Implemented approach of pure-java classpath composition : https://github.com/apache/ignite/pull/818 .;;;","21/Jun/16 11:51;iveselovskiy;found a problem in patch: need to return reading of /etc/default/hadoop file functionality.;;;","21/Jun/16 12:51;iveselovskiy;fixed: returned reading of /etc/default/hadoop file. ;;;","24/Jun/16 07:54;iveselovskiy;fixed by review results.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ScanQuery and localEntries are ignored keepBinary flag in OFFHEAP_TIERED mode,IGNITE-3183,12972054,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,ntikhonov,ntikhonov,23/May/16 13:11,10/May/17 08:15,14/Jul/23 06:20,02/Jun/16 14:08,1.6,,,1.7,cache,,,,,0,important,,,{{ScanQuery}} and {{localEntries}} method returns iterator which contains deserialized entries but they have been called with withKeepBinary flag. Reproducible test attached.,,avinogradov,dmagda,ntikhonov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/16 13:14;ntikhonov;CacheKeepBinaryIterationTest.java;https://issues.apache.org/jira/secure/attachment/12805625/CacheKeepBinaryIterationTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Fri May 27 14:18:36 UTC 2016,,,,,,,,,,"0|i2yd8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/May/16 05:31;dmagda;The issue is only related to keys. Everything works fine for values. If not to use custom objects as the keys then the tests would pass.;;;","24/May/16 10:06;ntikhonov;In case {{localEntries}} the issue is releted to values and keys.;;;","25/May/16 06:35;ntikhonov;Anton, 
Could you please improve attached test? Would be greate if you add more variation of cache configuration (with swap, store and etc). ;;;","25/May/16 08:11;sboikov;Anton,

Please also add tests for these cases:
- localEntries when there are entries in near cache
- localEntries with different CachePeekMode
- use 'keepBinary' but key/values are primitive types;;;","26/May/16 11:12;avinogradov;Proposals implemented, please review.;;;","27/May/16 11:16;sboikov;Reviewed, I didn't like that method 'context.keepBinary' which is based on thread-local variable is called from random places, I changed this to call it once in GridCacheAdapter and pass to all 'terators' methods, please take a look at my changes.

Also it isn't clear why key and value are handled differently in 'GridCacheQueryManager.scanIterator', could you please explain this?;;;","27/May/16 14:18;avinogradov;Semen,

That's behavior was not changed. 
Previously object deserialised at AbstractLazySwapEntry.key() ignoring keepBinary flag.
Now it deserialised at org/apache/ignite/internal/processors/cache/query/GridCacheQueryManager.java:1160;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Compute jobs execute on client nodes,IGNITE-3182,12972017,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,23/May/16 10:08,16/Jun/16 12:05,14/Jul/23 06:20,16/Jun/16 12:05,1.6,,,1.7,,,,,,0,,,,"* One server node, one client node, Broadcast from client node results in both nodes executing the closure
* Need to check the behavior with 2 servers, 2 clients, broadcast from server and client",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 16 12:04:41 UTC 2016,,,,,,,,,,"0|i2yd0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/May/16 16:38;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/748

    IGNITE-3182 Compute jobs execute on client nodes

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3182

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/748.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #748
    
----
commit 25ae4aa997e2dc68f16b1cf236ce7c8d5939f87f
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-23T15:14:43Z

    IGNITE-3182 Compute jobs execute on client nodes

commit add05af2e33cf48d7e5963ef9643f011bcd155e6
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-23T15:21:15Z

    wip

commit 349c6f102bcb51aee1714077120142b326f5f87b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-23T15:26:28Z

    Refactor default prj check

----
;;;","24/May/16 15:02;ptupitsyn;* ForServers propagated
* Issue solved the same way as it is in Java: call ForServers in Ignite.GetCompute and GetServices;;;","16/Jun/16 12:04;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/748
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to create gc log for each client separately [ yardstick-ignite ],IGNITE-3176,12971140,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,ustas,ustas,19/May/16 12:56,07/Jul/17 10:00,14/Jul/23 06:20,07/Jul/17 10:00,1.6,,,2.1,clients,general,,,,0,,,,"In case when started more than one client/server on one host yardstick re-write GC logs.

GC options contain in *.properties files:
{noformat}
now0=`date +'%H%M%S'`
# JVM options.
JVM_OPTS=${JVM_OPTS}"" -DIGNITE_QUIET=false""
# Uncomment to enable concurrent garbage collection (GC) if you encounter long GC pauses.
JVM_OPTS=${JVM_OPTS}"" \
-Xloggc:./gc${now0}.log \
-XX:+PrintGCDetails \
-verbose:gc \
-XX:+UseParNewGC \
-XX:+UseConcMarkSweepGC \
-XX:+UseTLAB \
-XX:NewSize=128m \
-XX:MaxNewSize=128m \
-XX:MaxTenuringThreshold=0 \
-XX:SurvivorRatio=1024 \
-XX:+UseCMSInitiatingOccupancyOnly \
-XX:CMSInitiatingOccupancyFraction=60 \
{noformat}

As you can see here will be created 1 log file and if you start another driver/server with the same properties file will be re-write.",,Chandresh Pancholi,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/16 10:45;ustas;benchmark.properties;https://issues.apache.org/jira/secure/attachment/12839153/benchmark.properties",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 07 10:00:00 UTC 2017,,,,,,,,,,"0|i2y7lj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Sep/16 06:35;Chandresh Pancholi;I tried reproducing the issue. Below are the steps
1. Run bin/benchmark-run-all.sh config/benchmark.properties in one terminal with 2 server hosts
2.Run bin/benchmark-run-all.sh config/benchmark.properties in another terminal with 2 server hosts

I have got 4 diff GC log file.

Let me know incase i missed any steps to reproduce it.
;;;","16/Nov/16 10:44;ustas;[~Chandresh Pancholi]
I told about a little different use case:
1. Set in properties file number of servers and drivers (drivers are clients if we set --client parameter, please take a look at attachment) e.g:
{noformat}
# Comma-separated list of the hosts to run BenchmarkServers on. 2 nodes on local host are enabled by default.
SERVER_HOSTS=localhost,localhost,localhost

# Comma-separated list of the hosts to run BenchmarkDrivers on. 1 node on local host is enabled by default.
DRIVER_HOSTS=localhost,localhost
{noformat}

2. bin/benchmark-run-all.sh config/benchmark.properties only in one terminal.

In this case we receive 2 gc files.;;;","07/Jul/17 10:00;ustas;This problem fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BigDecimal fields are not supported if query is executed from IgniteRDD,IGNITE-3175,12971068,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vkulichenko,vkulichenko,19/May/16 08:29,14/Jun/16 08:24,14/Jul/23 06:20,23/May/16 04:32,1.5.0.final,,,1.7,spark,,,,,0,,,,"If one of the fields participating in the query is {{BigDecimal}}, the query will fail when executed from {{IgniteRDD}} with the following error:
{noformat}
scala.MatchError: 1124757 (of class java.math.BigDecimal)
	at org.apache.spark.sql.catalyst.CatalystTypeConverters$StructConverter.toCatalystImpl(CatalystTypeConverters.scala:255)
	at org.apache.spark.sql.catalyst.CatalystTypeConverters$StructConverter.toCatalystImpl(CatalystTypeConverters.scala:250)
	at org.apache.spark.sql.catalyst.CatalystTypeConverters$CatalystTypeConverter.toCatalyst(CatalystTypeConverters.scala:102)
	at org.apache.spark.sql.catalyst.CatalystTypeConverters$StructConverter.toCatalystImpl(CatalystTypeConverters.scala:260)
	at org.apache.spark.sql.catalyst.CatalystTypeConverters$StructConverter.toCatalystImpl(CatalystTypeConverters.scala:250)
	at org.apache.spark.sql.catalyst.CatalystTypeConverters$CatalystTypeConverter.toCatalyst(CatalystTypeConverters.scala:102)
	at org.apache.spark.sql.catalyst.CatalystTypeConverters$$anonfun$createToCatalystConverter$2.apply(CatalystTypeConverters.scala:401)
	at org.apache.spark.sql.SQLContext$$anonfun$6.apply(SQLContext.scala:492)
	at org.apache.spark.sql.SQLContext$$anonfun$6.apply(SQLContext.scala:492)
	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)
	at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)
	at org.apache.spark.sql.execution.aggregate.TungstenAggregationIterator.processInputs(TungstenAggregationIterator.scala:505)
	at org.apache.spark.sql.execution.aggregate.TungstenAggregationIterator.<init>(TungstenAggregationIterator.scala:686)
	at org.apache.spark.sql.execution.aggregate.TungstenAggregate$$anonfun$doExecute$1$$anonfun$2.apply(TungstenAggregate.scala:95)
	at org.apache.spark.sql.execution.aggregate.TungstenAggregate$$anonfun$doExecute$1$$anonfun$2.apply(TungstenAggregate.scala:86)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$20.apply(RDD.scala:710)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$20.apply(RDD.scala:710)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:306)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:270)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:306)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:270)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:73)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:41)
	at org.apache.spark.scheduler.Task.run(Task.scala:89)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:213)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

Most likely this is caused by the fact that {{IgniteRDD.dataType()}} method doesn't honor {{BigDecimal}} and returns {{StructType}} by default. We should fix this and check other possible types as well.",,githubbot,sboikov,tledkov-gridgain,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3077,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 07 14:52:07 UTC 2016,,,,,,,,,,"0|i2y75j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/16 16:04;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/736

    IGNITE-3175 BigDecimal fields are not supported if query is executed from IgniteRDD

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/736.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #736
    
----
commit 4fa840399bd2580ff313f05ea8ea905677df1749
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-05-19T16:03:56Z

    IGNITE-3175 BigDecimal fields are not supported if query is executed from IgniteRDD

----
;;;","23/May/16 04:32;sboikov;Merged fix into master (commit f2b390a).;;;","23/May/16 07:43;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/736
;;;","24/May/16 08:10;tledkov-gridgain;java.math.BigDecimal class is added to the RDD type mapping.
The test for all supported types is created.;;;","01/Jun/16 18:59;vkulichenko;I'm reopening the ticket, because looks like {{BigDecimal}} is not the only unsupported type. The same exception fails at least for {{java.sql.Date}}.

Taras, as you were fixing this, can you please take a look and check what other types can be problematic?;;;","02/Jun/16 09:36;sboikov;I see H2 also has support for java.sql.Time, java.util.UUID, arrays (see org.h2.value.ValueArray). Need check if these types make sense for IgniteRDD.;;;","02/Jun/16 10:39;vkulichenko;I also don't see {{java.lang.Char}} there.;;;","02/Jun/16 13:53;tledkov-gridgain;Unfortunately, java.sql.Time, java.util.UUID, arrays and other types don't belong to the conjunction of the H2 type wrappers & spark type set. 
See more:
[Spark doc|https://spark.apache.org/docs/1.3.0/sql-programming-guide.html#data-types]. 
[H2 doc|http://www.h2database.com/html/datatypes.html]

So, it look like we can fix only issue with java.sql.Date. Also we have some problems with other non-primitive structured types.;;;","02/Jun/16 13:56;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/775

    IGNITE-3175 BigDecimal fields are not supported if query is executed …

    …from IgniteRDD: fix java.sql.Date mapping

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/775.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #775
    
----
commit e56dd3401e04d8dc7800c9de8b7884fbbdf2180f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-06-02T13:56:20Z

    IGNITE-3175 BigDecimal fields are not supported if query is executed from IgniteRDD: fix java.sql.Date mapping

----
;;;","02/Jun/16 14:05;tledkov-gridgain;Please take a look;;;","06/Jun/16 13:59;vkulichenko;Taras,

The change looks good to me, I merged it into master.

Can you provide more info on what is not working now and which types are problematic? Do we have corresponding tests? I think this should go to the dev list, I will resolve the ticket.

Thanks!;;;","07/Jun/16 14:52;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/775
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Provide error messages for incorrect Apache.Ignite.exe command line arguments,IGNITE-3169,12970785,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,18/May/16 14:48,28/Nov/16 13:50,14/Jul/23 06:20,28/Nov/16 13:50,1.1.4,,,1.9,platforms,,,,,0,.net,,,Make sure invalid argument names and values are not ignored/swallowed,,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4135,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 28 13:49:15 UTC 2016,,,,,,,,,,"0|i2y5en:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/16 17:05;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1287

    IGNITE-3169 .NET: Provide error messages for incorrect Apache.Ignite.exe command line arguments

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3169

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1287.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1287
    
----
commit 06c21e5c93c7f2b02c5e681bfe02feac854a27d7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T12:02:32Z

    Add failure on unknown argument

commit cbcc6dd219df309f798fa9cd6ea56c035610af57
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T14:11:54Z

    Add empty args validation

commit d99ebe4493b1e180f783a6290b272574392cc21a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T14:30:14Z

    wip tests

commit b1c65cc4a4aa117604c12295099dc6eb4a12bd67
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T14:52:27Z

    wip tests

commit d7dc96c6718091a6f223e4fdf9464a29d877792d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T14:55:05Z

    tests

commit b804326ede37e7421275eed1a4c7bf972a83cce2
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T15:02:03Z

    wip

commit 62460472b4860a81c35ad943020881168dd3c69d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T16:36:44Z

    wip test

commit 9fd8166b5e3cb1d2ff6c9e890de299731aa0c2c7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T16:45:35Z

    more tests

commit b1d453ea870d030e32f21fabff5de98c285a341c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T16:55:30Z

    wip

commit dc760dce03fb19ec2145a30f5bcd63a971b0419f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-25T17:00:32Z

    Tests done

----
;;;","28/Nov/16 13:49;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1287
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebSession: NPE is possible in WebSessionV2 ctor.,IGNITE-3162,12970680,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,18/May/16 08:51,28/Jun/16 13:23,14/Jul/23 06:20,28/Jun/16 13:23,1.5.0.final,,,1.7,websession,,,,,0,,,,"Constructor of {{WebSessoinV2}} accept both genuine session and {{WebSessionEntity}}. Both of them are nullable. If real values are nulls, NPE will be thrown. We need to rework that.",,dkarachentsev,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 18 13:28:20 UTC 2016,,,,,,,,,,"0|i2y4rj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/May/16 13:28;dkarachentsev;Branch ignite-3162;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoveryZookeeperIpFinder doesn't properly handle client reconnections,IGNITE-3153,12970343,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,vkulichenko,vkulichenko,17/May/16 12:29,16/Jun/16 11:38,14/Jul/23 06:20,16/Jun/16 11:37,1.5.0.final,,,1.7,general,,,,,0,,,,"The exception below is possible when client reconnects and ZooKeeper IP finder is used. Most likely this is caused by the fact that {{initGuard}} is flipped back to {{false}} when the context is destroyed and new curator instance is not created during the reconnect.

This should be fixed and test coverage for this scenario should be improved.

{noformat}
    2016-05-16 12:00:59,096 5786  ERROR org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi Runtime error caught during grid runnable execution: IgniteSpiThread [name=tcp-client-disco-reconnector-#5%Default%] 
    java.lang.IllegalStateException: Cannot be started more than once
        at org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:237)
        ...
        at org.apache.ignite.spi.discovery.tcp.ipfinder.zk.TcpDiscoveryZookeeperIpFinder.init(TcpDiscoveryZookeeperIpFinder.java:144)
        at org.apache.ignite.spi.discovery.tcp.ipfinder.zk.TcpDiscoveryZookeeperIpFinder.getRegisteredAddresses(TcpDiscoveryZookeeperIpFinder.java:169)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.registeredAddresses(TcpDiscoverySpi.java:1603)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.resolvedAddresses(TcpDiscoverySpi.java:1552)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl.joinTopology(ClientImpl.java:475)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl.access$900(ClientImpl.java:118)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$Reconnector.body(ClientImpl.java:1175)
        at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{noformat}",,avinogradov,iijima_satoshi,shroman,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 16 11:38:09 UTC 2016,,,,,,,,,,"0|i2y2ov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/16 05:54;shroman;[~vkulichenko] Seems you forgot to paste the details of the exception ;);;;","30/May/16 18:45;vkulichenko;Thanks, Roman! I added the trace.;;;","08/Jun/16 13:21;avinogradov;I wonder how can happen context destroy and then reconnect, except race at node stop.
Seems that correct solution is to remove 
        if (!initGuard.compareAndSet(true, false))
            return;
at onSpiContextDestroyed
This will fix the problem, I think.;;;","08/Jun/16 14:51;vkulichenko;Anton,

I was under impression that {{onSpiContextDestroyed}} can be called on client disconnect. If this is not true, I think you're right. But the usage of {{initGuard}} should be revisited in any case.;;;","16/Jun/16 11:38;avinogradov;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client node's addresses are registered in IP finder,IGNITE-3152,12970341,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,vkulichenko,vkulichenko,17/May/16 12:03,22/Jun/16 10:03,14/Jul/23 06:20,22/Jun/16 10:03,1.5.0.final,,,1.7,general,,,,,0,important,,,"Currently client node register its addresses in IP finder and never deregisters them. Also looks like coordinator address is also not removed.

The simple test that shows this behavior is attached.",,avinogradov,leveyj,ntikhonov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/16 12:04;vkulichenko;Test.java;https://issues.apache.org/jira/secure/attachment/12804397/Test.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Wed Jun 22 10:03:48 UTC 2016,,,,,,,,,,"0|i2y2of:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/16 16:15;leveyj;From testing it seems the client is connecting to the grid, and then a server node is registering the client's addresses with Zookeeper - the client itself was not responsible for the addresses being registered with Zookeeper. Even after the client disconnects, the addresses are persisted because the server which registered them is still connected to Zookeeper.;;;","08/Jun/16 14:22;vkulichenko;Anton,

Client node can work in forced server mode. I think we should register addresses in this case.

See {{TcpDiscoveryIpFinderAdapter.discoveryClientMode()}} and its usages on how this can be properly checked.;;;","08/Jun/16 16:23;avinogradov;{{node.isClient()}} checks that {{clientRouterNodeId != null}}
Which should means this client node not in forceServerMode, correct?

So, {{!node.isClient()}} will exclude only client nodes at client mode.;;;","10/Jun/16 10:01;avinogradov;I've updated test to ensure it works.;;;","14/Jun/16 15:25;vkulichenko;Yes, you're right, but this means that one the places in the code is incorrect :) Why we have the {{TcpDiscoveryIpFinderAdapter.discoveryClientMode()}} method then?

I'm actually not sure that it's correct to return {{false}} from {{ClusterNode.isClient()}} method in case it's actually a client, but with forced server mode on discovery level.

Should this be discussed on dev@?;;;","20/Jun/16 15:28;avinogradov;Semantic of {{ClusterNode.isClient()}} is:
{{Tests whether or not this node is connected to cluster as a client.}}
and it's properly used to detect is another node joined to server topology or not. 

{{TcpDiscoveryIpFinderAdapter.discoveryClientMode()}}
Used at joining node. Similar check used at {{org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi#spiStart}}

So, basicly, {{TcpDiscoveryIpFinderAdapter.discoveryClientMode()}} is a cause and {{ClusterNode.isClient()}} is an effect.
Seems both method is reqired, and both works correct.;;;","22/Jun/16 09:19;ntikhonov;{{ClusterNode.isClient()}} returns {{false}} for client node with enabled {{forceServerMode}} flag. I don't see reason why ip finder shouldn't register such nodes. Any nodes can join to it (include node with client discovery). Changes look good for me. ;;;","22/Jun/16 10:03;avinogradov;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using IgniteCountDownLatch sometimes drives to dead lock.,IGNITE-3151,12970333,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,v.pyatkov,v.pyatkov,17/May/16 11:10,16/Jun/16 09:48,14/Jul/23 06:20,15/Jun/16 15:55,,,,,,,,,,0,,,,"Run several serve node (recoment use count of CPU - 1).
Wait update topology.
Run client

After some iteration exception will thrown (In my case it take place after around 10K iteration).",,dmagda,githubbot,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/16 11:20;v.pyatkov;igniteBugShot.zip;https://issues.apache.org/jira/secure/attachment/12804393/igniteBugShot.zip",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 16 09:48:10 UTC 2016,,,,,,,,,,"0|i2y2mn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/May/16 15:18;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/768

    IGNITE-3151

    Using IgniteCountDownLatch sometimes drives to dead lock.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-3151

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/768.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #768
    
----
commit 53bbc1bbd9342e23c8eb57692f5b93dd273e3e03
Author: vdpyatkov <vpyatkov@gridgain.com>
Date:   2016-05-31T15:12:28Z

    IGNITE-3151
    Using IgniteCountDownLatch sometimes drives to dead lock.

----
;;;","31/May/16 15:56;v.pyatkov;The issue with deadlock no longer occurs.
Could anyone review?;;;","01/Jun/16 11:53;v.pyatkov;Description of change:
I drew attention:
1) {{await}} method creates local *CountDownLatch* and wait it ({{internalLatch}}).
2) but {{onUpdate}} works without synchronization with initializing of local CountDownLatch ({{initializeLatch}}).
Hence {{onUpdate}} may will pass after count of latch will got and before return latch from *Callable* closure.

I added wait of creation ({{initLatch}}) of local latch if the process had started ({{initGuard}}) already and removed transaction which hold lock on count of latch key.;;;","03/Jun/16 05:15;dmagda;Vlad, I've reviewed your changes. Please refer to my notes in the pull-request.

Actually I don't get why this lead to the deadlock, can you explain? Also does it make sense to check latches current values in your test?;;;","07/Jun/16 15:24;v.pyatkov;[~dmagda] I update my pull request.
Could you please view it again?;;;","10/Jun/16 08:58;dmagda;[~v.pyatkov] Please see my review notes in the pull-request.

Aslo I would add the same test but when a half of the nodes are client nodes. Client nodes receive update notifications a bit later and we must be sure that your fix didn't break anything.;;;","14/Jun/16 07:43;githubbot;Github user vldpyatkov closed the pull request at:

    https://github.com/apache/ignite/pull/768
;;;","14/Jun/16 07:49;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/796

    IGNITE-3151 I rework fixation, so that there was no deadlock.

    IGNITE-3151
    Using IgniteCountDownLatch sometimes drives to dead lock.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-3151

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/796.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #796
    
----
commit 9b96febaeaa3e7858827c1d14330dc774723e305
Author: vdpyatkov <vpyatkov@gridgain.com>
Date:   2016-06-14T07:43:12Z

    I rework fixation, so that there was no deadlock.

----
;;;","15/Jun/16 15:55;dmagda;Vlad, thanks a lot for the contribution. I've done the final review and merged your changes.;;;","16/Jun/16 09:48;githubbot;Github user vldpyatkov closed the pull request at:

    https://github.com/apache/ignite/pull/796
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No description for package org.apache.ignite.cache.jta.websphere in javadoc,IGNITE-3148,12970288,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ustas,ustas,ustas,17/May/16 07:56,19/May/16 11:27,14/Jul/23 06:20,17/May/16 12:08,1.6,,,1.6,documentation,,,,,0,,,,"Need to add description for package
{noformat} org.apache.ignite.cache.jta.websphere {noformat}
in javadoc.
",,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 19 11:27:38 UTC 2016,,,,,,,,,,"0|i2y2cn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/16 11:27;ustas;Fix confirmed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C++: UTF-16 surrogate symbols are not serialized properly,IGNITE-3140,12969939,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,dmagda,dmagda,16/May/16 08:39,05/Aug/16 09:52,14/Jul/23 06:20,28/Jun/16 09:37,1.5.0.final,,,1.7,platforms,,,,,0,,,,"There is an issue with serialization of a surrogate symbol with {{BinaryMarshaller}}. On Java side String's serialization logic was improved to support all the cases. Refer to IGNITE-3098.

C++ serialization logic has to be updated as well. Please refer to the algorithm located in ignite-3098 branch in the following places:
- {{BinaryUtils.utf8BytesToStr}} - serialization
- {{BinaryUtils.strToUtf8Bytes}} - deserialization
- {{IgniteSystemProperties.IGNITE_BINARY_MARSHALLER_USE_STRING_SERIALIZATION_VER_2}} controls which version of serialization logic to use (old or new).
",,dmagda,githubbot,isapego,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3098,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 05 09:52:27 UTC 2016,,,,,,,,,,"0|i2y073:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/16 14:39;isapego;We do not deal with the UTF-16 in C++ code. We expect user to provide us strings in a valid UTF-8 format.
Added test with malformed UTF-8 string where we are expecting an exception.;;;","16/May/16 17:47;dmagda;Igor,

In case of heterogeneous cluster (Java and C++ nodes) C++ side won't be able to properly deserialize surrogate symbols from a String serialized on Java side if the new algo (from IGNITE-3098) is used. This is the reason why we should rewrite strings serialization on logic on C++ side as well.;;;","16/May/16 18:34;isapego;Denis,

C++ uses UTF-8 encoding right now and as long as Java and .NET nodes would write strings in UTF-8 we are not going to have any problems with deserialization. On the C++ side we just copy those received string bytes without performing any complex processing and use it as string. As long as it is valid UTF-8 data (and in our Binary protocol it is) everything is going to work just fine.;;;","17/May/16 04:40;dmagda;Igor,

The new serialization algorithm on Java side serializes all symbols that are bigger than 0x07FF in 3 bytes.
It means that if there is a valid surrogate pair in a String like this one {{0xD801, 0xDC37}} then the new algorithm will use 6 bytes to code it while basic UTF-8 coders/decoders will use only 4 bytes. C++ side won't be able to properly deserialize {{0xD801, 0xDC37}} on its side because it will be encoded in 6 bytes.

Try to serialize this String on C++ side. It should be encoded in 4 bytes while the new Java algorithm encodes it in 6 bytes.
{noformat}        
str = new String(new char[] {0xD801, 0xDC37});
{noformat}

;;;","17/May/16 09:57;isapego;Denis,

According to [wikipedia|https://en.wikipedia.org/wiki/UTF-8#Description], code points between {{U+0800}} and {{U+FFFF}} are serialized using 3 bytes in UTF-8, so everything seems to be according to specification in our case. Though these code points themselves may be considered invalid by some of the implementations, encoding is still valid.

C++ standard itself does not specify string encoding in any way and does not include functions to operate encodings so there is no such thing as serialization in encoding sense on C++ side. It means that if you put something (no matter what) in C++ string it is going to be operable as C++ standard does not specify string encoding. In C++ string is just a sequence of characters of a specified size. So I simply can't serialize UTF-16 string on the C++ side unless I write serialization algorithm by myself or if I'm not going to use some third party implementation.;;;","17/May/16 11:47;isapego;Ok, I get it. It seems like our new method {{BinaryUtils.utf8BytesToStr}} does not really support all valid UTF-8 strings. I'll add related test and see how C++ can deal with that.;;;","17/May/16 13:25;isapego;Ok, it seems like {{BinaryUtils.utf8BytesToStr}} does not implement conversion of 4-byte UTF-8 to UTF-16 surrogate pairs. I believe we should implement it on Java side. Except for that, everything seems to be OK from C++ point of view.;;;","17/May/16 14:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/723
;;;","23/Jun/16 12:45;vozerov;Igor,

I see lots conflicts there. Please resolve them and assign back to me.;;;","23/Jun/16 12:56;vozerov;My fault, returning back to review.;;;","23/Jun/16 13:13;vozerov;No, it fails still. Please re-merge.;;;","24/Jun/16 12:17;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/829

    IGNITE-3140: Added tests for string format validity.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-3140

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/829.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #829
    
----
commit 9ca608aa8cf91d546dfa08dd7f560d42047b1c3d
Author: isapego <isapego@gridgain.com>
Date:   2016-06-23T16:53:32Z

    IGNITE-3140: Added tests for string format validity.

commit 41e8d703d45b532c0169f523672fe7ab5291bb87
Author: isapego <isapego@gridgain.com>
Date:   2016-06-23T17:00:55Z

    IGNTIE-3140: Minor fix for test.

commit f70ef622cb05159da99786697a533260bae57929
Author: isapego <isapego@gridgain.com>
Date:   2016-06-24T12:14:25Z

    IGNITE-3140: Fix for JVM reloading.

----
;;;","24/Jun/16 13:51;isapego;Re-merged and added test.;;;","05/Aug/16 09:52;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/829
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: UTF-16 surrogate symbols are not serialized properly,IGNITE-3139,12969938,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,dmagda,dmagda,16/May/16 08:37,16/Jun/16 14:40,14/Jul/23 06:20,16/Jun/16 14:40,1.5.0.final,,,1.7,platforms,,,,,0,,,,"There is an issue with serialization of a surrogate symbol with {{BinaryMarshaller}}. On Java side String's serialization logic was improved to support all the cases. Refer to IGNITE-3098.

.Net serialization logic has to be updated as well. Please refer to the algorithm located in ignite-3098 branch in the following places:
- {{BinaryUtils.utf8BytesToStr}} - serialization
- {{BinaryUtils.strToUtf8Bytes}} - deserialization
- {{IgniteSystemProperties.IGNITE_BINARY_MARSHALLER_USE_STRING_SERIALIZATION_VER_2}} controls which version of serialization logic to use (old or new).

",,dmagda,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3098,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 16 14:40:35 UTC 2016,,,,,,,,,,"0|i2y06v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/16 14:02;ptupitsyn;https://github.com/apache/ignite/pull/721;;;","17/May/16 04:48;dmagda;Pavel, modified the code on Java side slightly and pushed changes into ignite-3098 branch. Left comments in your PR regarding what have to be updated on .Net side.;;;","17/May/16 14:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/721
;;;","16/Jun/16 12:33;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/809

    IGNITE-3139 .NET: UTF-16 surrogate symbols are not serialized properly

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3139

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/809.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #809
    
----
commit 74c051230b906897babbcb6553af60e2af1b44a0
Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
Date:   2016-05-12T12:47:01Z

    IGNITE-3098: UTF-16 surrogate pairs are not properly serialized by BinaryMarshaller

commit 76717fd348a51ae597cb2bc99b9672994dde3264
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-13T05:24:37Z

    IGNITE-3098: compilation fix

commit 99b8830e3af4a9dd596374fc21e5fb6d79ada083
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-13T05:40:02Z

    Merge remote-tracking branch 'remotes/origin/ignite-1.6' into ignite-3098

commit d43b71c526d2ee0ac8a40bb52bbdbbaa8c595f13
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-16T08:08:11Z

    IGNITE-3098: improvements

commit 9e167073fd51b78870b8f62e867518b1f540a080
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-16T08:11:10Z

    Merge remote-tracking branch 'remotes/origin/ignite-1.6' into ignite-3098

commit 9c7824829da5f6994f4c302cc39f03ac897d6616
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T09:16:59Z

    IGNITE-3139 .Net: UTF-16 surrogate symbols are not serialized properly

commit d466a081249670feff843514453de85443b86251
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T09:18:10Z

    test added

commit 3c4e122d5e8c41d5ca051dd82e95e191bcd3dc9a
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T09:29:13Z

    wip

commit fa48e3dd6df615465c2447b5efa7ce9efdabdde5
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T09:36:10Z

    Refactor string writes

commit 4196e1ff0fd3536027add755ad51b796afc47d79
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T09:55:54Z

    wip

commit 42d892816507280d3a5897210221591bc88f6430
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T10:00:28Z

    wip

commit d1d52b3940bb122778783bbbb3360c8acb788763
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T10:08:58Z

    wip

commit 3f9326e9824f1c6573ac02d372645185de685d8b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T10:13:24Z

    wip

commit da494d0a43284ca2d6d2594f7d58145c017e05f7
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T10:44:40Z

    wip

commit 91d079a4b1625ec70c1159656bd2a0839f815b93
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T10:49:19Z

    Fix length calculation - tests work

commit e6980ac51a886dae54be9a5e1f0e61893d310360
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T10:53:13Z

    wip

commit d879325317bcfee02aca5d72bea23c69bcd74899
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T10:56:37Z

    wip

commit 162a1bedd9b89c3b3e40acc456aa7a79e8a64771
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T11:12:20Z

    wip cleanup

commit cbb7ecb323b3e87432c74e082f92a30531c9c7fb
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T11:14:09Z

    wip tests

commit f606c71466f388aed1cdaf407ec278f5f0cf21eb
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T11:23:26Z

    wip

commit d6abe080978eea34b6067971ca557453a245c6dc
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T11:26:23Z

    wip

commit 0dc1f9d1343c4bee96f28b2223723ebaa4a4a3d1
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T11:54:19Z

    wip

commit 5d1960cca587efd8a1cce72a75404d5c9bd39dab
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T12:21:23Z

    wip

commit af3d2ebfe28d1263240ba4b342cbc15dab3a2565
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T12:26:01Z

    wip

commit d97813a72cd6ba7607b1feb387b546ccfd00a117
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T12:33:40Z

    wip

commit efc80b43b7cc69ed17cbc225adb654299634ea1b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T12:55:49Z

    wip

commit 5ff788dbe3b6c5bb1559fb261d3141bdfb904ebf
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T13:08:14Z

    Finally, test works, damn it

commit 2439812546ea14f5a191881b5c59ccaed4af123a
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T13:11:42Z

    Check special strings with Java

commit 53999e33c771caad5cfccad386f62dcea6af53a4
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T13:13:44Z

    wip

commit 1407152178c29e43efbb382d585f4d80fd5df264
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-05-16T13:30:09Z

    failure test added

----
;;;","16/Jun/16 14:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/809
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to get a reference to a cache inside TX on a node that is filtered out by a node filter,IGNITE-3133,12969530,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,dmagda,dmagda,13/May/16 13:21,13/Oct/16 15:22,14/Jul/23 06:20,13/Oct/16 15:11,1.5.0.final,,,1.8,cache,,,,,0,,,,"It's impossible to get a reference to a cache (Ignite.cache(""name"")) inside of a transaction on a node that is filtered out with CacheConfiguration.nodeFilter (doesn't hold cache data). The following exception happens.

{noformat}
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readExternalizable(OptimizedObjectInputStream.java:527)
	... 32 more
Caused by: java.io.InvalidObjectException: Failed to find cache for name: red_cache
	at org.apache.ignite.internal.processors.cache.GridCacheContext.readResolve(GridCacheContext.java:2051)
	... 37 more
Caused by: java.lang.IllegalStateException: Failed to find cache for name: red_cache
	at org.apache.ignite.internal.processors.cache.GridCacheContext.readResolve(GridCacheContext.java:2046)
	... 37 more
{noformat}

To reproduce:
- start ExampleNodeStartup
- start attached CacheNodeFilterExample",,dmagda,DmitriyGovorukhin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/May/16 13:23;dmagda;CacheNodeFilter.java;https://issues.apache.org/jira/secure/attachment/12803857/CacheNodeFilter.java","13/May/16 13:23;dmagda;CacheNodeFilterExample.java;https://issues.apache.org/jira/secure/attachment/12803858/CacheNodeFilterExample.java",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 13 15:22:47 UTC 2016,,,,,,,,,,"0|i2xxo7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Oct/16 15:13;DmitriyGovorukhin;It is not issue, it expected behavior, because first call to cache cannot be in transaction.;;;","13/Oct/16 15:22;DmitriyGovorukhin;Issue in code, because if use cache in clouse compute, cache will serialize too. See try { } scope.
{code:title=CacheNodeFilterExample.java|borderStyle=solid}
              ignite.compute().broadcast(new IgniteRunnable() {
                      @IgniteInstanceResource
                      Ignite ignite;

                      @Override public void run() {
                      IgniteTransactions txs = ignite.transactions();

                      try (Transaction tx = txs.txStart()) {

                        IgniteCache<Integer, Integer> cache = ignite.cache(RED_ONLY_CACHE);

                        cache.put(1, 2);
                        }

                        // Size must be 0 on the nodes where the cache is not deployed.
                        System.out.println(""Red cache local size: "" + cache.localSize());
                  }
              });;
{code}
Correct code.
{code:title=CacheNodeFilterExample.java|borderStyle=solid}
               ignite.compute().broadcast(new IgniteRunnable() {
                      @IgniteInstanceResource
                      Ignite ignite;

                      @Override public void run() {
                      IgniteTransactions txs = ignite.transactions();

                      try (Transaction tx = txs.txStart()) {

                        IgniteCache<Integer, Integer> cache = ignite.cache(RED_ONLY_CACHE);

                        cache.put(1, 2);

                        System.out.println(""Red cache local size: "" + cache.localSize());
                       }
                  }
              });;
{code}
           ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cancel force key futures when node stops,IGNITE-3116,12968230,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,sboikov,sboikov,12/May/16 08:19,16/May/16 07:13,14/Jul/23 06:20,16/May/16 07:13,,,,1.6,cache,,,,,0,,,,When node stops need cancel GridDhtForceKeysFutures (like all others cache futures) to prevent potential hangs.,,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 16 07:13:11 UTC 2016,,,,,,,,,,"0|i2xpp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/16 07:13;sboikov;Fixed in ignite-1.6 (commit db8a9b2).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
List of ODBC minor issues,IGNITE-3115,12967489,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,vozerov,vsidorova,vsidorova,11/May/16 16:23,17/May/16 04:02,14/Jul/23 06:20,16/May/16 12:33,1.6,,,1.6,odbc,,,,,0,,,,"There is the list of minor issues for ODBC feature:

1. Win7:

1.1 install_amd64.cmd ODBC driver installator: 

      1.1.1 The final script output always is ""32-bit driver can not be found: """""". It's not necessary to find  32-bit driver. Please, fix it
      1.2.1 It's possible to write path to the folder into registry. Please, add path-to-file validation into the script

1.2 Win Administrative Tools GUI:

      1.2.1 DNS settings for Apache Ignite ODBC driver should be disabled (as this is not implemented yet)

1.3 Documentation:

      1.3.1 Please, add  information that odbc should be building  individual into ""Building binaries:"" part of the IGNITE_HOME/platforms/cpp/DEVNOTES.txt
      1.3.2 Please relocate instruction ""Most likely you will need OS administrator privileges to execute these scripts."" before run install script in the ""Installing ODBC driver on Windows"" part of  the IGNITE_HOME/platforms/cpp/odbc/README.txt

2. Ubuntu - documentation:

2.1 It will be more user-friendly to mention that path to libignite-odbc.so  should be in the LD_LIBRARY_PATH environment variable in the ""Running examples on Linux"" part of the IGNITE_HOME/platforms/cpp/examples/README.txt
2.2 The command
{noformat}
* libtoolize && aclocal && autoheader && automake --add-missing && autoreconf
{noformat}
is absent in the ""Running examples on Linux"" part of the IGNITE_HOME/platforms/cpp/examples/README.txt

3. Please, make the same changes in the documentation on the readme.io","Ubuntu 14.04, Win7",githubbot,isapego,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue May 17 04:02:56 UTC 2016,,,,,,,,,,"0|i2xl4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/May/16 16:53;isapego;Ready. TC suits have passed.;;;","16/May/16 08:50;vozerov;Igor,

Where can I find the patch?;;;","16/May/16 10:46;isapego;Vladimir, here is the pull request - https://github.com/apache/ignite/pull/714. I have no idea why did not git picked it up.;;;","17/May/16 04:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/714
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Help for tasks/events should be rephrased,IGNITE-3107,12967358,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,skozlov,skozlov,skozlov,11/May/16 10:08,17/Jun/16 13:38,14/Jul/23 06:20,12/May/16 04:39,1.6,,,1.6,visor,,,,,0,,,,"{noformat}
 |       | of Event Storage SPI that is responsible for temporary storage of generated   |
 |       | events on each node can also affect the functionality of this command.        |
 |       |                                                                               |
-|       | By default - all events are enabled and Ignite stores last 10,000 local       |
+|       | By default - all events are disabled and Ignite stores last 10,000 local      |
 |       | events on each node. Both of these defaults can be changed in configuration.  |
 +---------------------------------------------------------------------------------------+{noformat}",,kuaw26,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 12 04:39:00 UTC 2016,,,,,,,,,,"0|i2xkbj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/May/16 04:39;kuaw26;Fixed documentation issue. Merged into ignite-1.6 and master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Yardstick can't parse /config/queries.txt with license header,IGNITE-3106,12967342,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ustas,ustas,ustas,11/May/16 09:16,11/May/16 12:44,14/Jul/23 06:20,11/May/16 11:05,1.6,,,1.6,general,,,,,0,,,,"File yardstick/config/queries.txt contains queries that used for load tests. 
Yardstick can't parse this file with this license header:
{noformat}
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the ""License""); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{noformat}

Yardstick reads line in upper case and tried to execute it as query:
{noformat}
ERROR: Shutting down benchmark driver to unexpected exception.
Type '--help' for usage.
javax.cache.CacheException: class org.apache.ignite.IgniteException: Failed to parse query: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<------>at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:674)
<------>at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.doSqlQuery(IgniteCacheRandomOperationBenchmark.java:858)
<------>at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.executeRandomOperation(IgniteCacheRandomOperationBenchmark.java:553)
<------>at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.executeOutOfTx(IgniteCacheRandomOperationBenchmark.java:495)
<------>at org.apache.ignite.yardstick.cache.load.IgniteCacheRandomOperationBenchmark.test(IgniteCacheRandomOperationBenchmark.java:158)
<------>at org.yardstickframework.impl.BenchmarkRunner$2.run(BenchmarkRunner.java:176)
<------>at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteException: Failed to parse query: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<------>at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryTwoStep(GridQueryProcessor.java:811)
<------>at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:665)
<------>... 6 more
{noformat}
",,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 11 12:44:05 UTC 2016,,,,,,,,,,"0|i2xk7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/16 12:44;ustas;Fix confirmed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: ContinuousQueryAbstractTest.TestCallback fails sporadically,IGNITE-3105,12966869,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,10/May/16 15:46,16/Jun/16 12:01,14/Jul/23 06:20,16/Jun/16 12:01,1.6,,,1.7,platforms,,,,,0,,,,"Failure rate is quite low, but there is certainly a problem. Try to run in a loop.

{code}
Test(s) failed.   Expected: <Apache.Ignite.Core.Tests.Cache.Query.Continuous.ContinuousQueryAbstractTest+BinarizableEntry>
  But was:  null

   at NUnit.Framework.Assert.That(Object actual, IResolveConstraint expression, String message, Object[] args)
   at Apache.Ignite.Core.Tests.Cache.Query.Continuous.ContinuousQueryAbstractTest.CheckCallbackSingle(Int32 expKey, BinarizableEntry expOldVal, BinarizableEntry expVal, Int32 timeout) in c:\BuildAgent\work\c6bd605b1bad5b0f\modules\platforms\dotnet\Apache.Ignite.Core.Tests\Cache\Query\Continuous\ContinuousQueryAbstractTest.cs:line 945
   at Apache.Ignite.Core.Tests.Cache.Query.Continuous.ContinuousQueryAbstractTest.CheckCallbackSingle(Int32 expKey, BinarizableEntry expOldVal, BinarizableEntry expVal) in c:\BuildAgent\work\c6bd605b1bad5b0f\modules\platforms\dotnet\Apache.Ignite.Core.Tests\Cache\Query\Continuous\ContinuousQueryAbstractTest.cs:line 926
   at Apache.Ignite.Core.Tests.Cache.Query.Continuous.ContinuousQueryAbstractTest.CheckCallback(Boolean loc) in c:\BuildAgent\work\c6bd605b1bad5b0f\modules\platforms\dotnet\Apache.Ignite.Core.Tests\Cache\Query\Continuous\ContinuousQueryAbstractTest.cs:line 240
   at Apache.Ignite.Core.Tests.Cache.Query.Continuous.ContinuousQueryAbstractTest.TestCallback() in c:\BuildAgent\work\c6bd605b1bad5b0f\modules\platforms\dotnet\Apache.Ignite.Core.Tests\Cache\Query\Continuous\ContinuousQueryAbstractTest.cs:line 199
------- Stderr: -------
Test started: ContinuousQueryAbstractTest.TestCallback
{code}",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 16 11:54:39 UTC 2016,,,,,,,,,,"0|i2xhb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jun/16 16:59;ptupitsyn;Reproduced locally by running whole ContinuousQueryAtomiclNoBackupTest in a loop.
The issue is after we do {code}cache1.GetAndPut(key2, Entry(key2 + 1));{code}. Even though GetAndPut returns proper old value, inside CheckCallbackSingle we get null old value.;;;","07/Jun/16 09:22;ptupitsyn;Setting lateAffinityAssignment to false (default = true) fixes the issue.;;;","07/Jun/16 09:23;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/782

    IGNITE-3105 .NET: Fix ContinuousQueryAbstractTest.TestCallback sporadic failures

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3105

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/782.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #782
    
----
commit 869e7ba71d03e9ab3e28e184cf6530aeeed64425
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T14:50:10Z

    trying to reproduce

commit 794dfd764f1c79546024250bab31ce8ba6172106
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T14:58:38Z

    wip

commit 06a24a70556cdc42c4cfe09a8af96777b182c8d6
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T15:14:31Z

    Reproduces!

commit c4f09fe92417b86cf2592ca236a73fad1c8294ef
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T15:14:40Z

    wip

commit 3f1cd6146e003f1eb73ff401d2ac23715e639b04
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T15:15:52Z

    wip

commit 6bf954095a3a3b07c57493c54c312e7c111533a0
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T15:17:07Z

    wip

commit d3f28c73212c1c253849ebea25272948169ec18e
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T15:18:26Z

    wip

commit 406c907b85fb994104c91728b4f0961faf7914a2
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T15:54:10Z

    Add console output

commit 5fb4e418e503e858032969044306f762c84cc34c
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T15:54:49Z

    wip

commit c90d9dde038f19dff07a96025a087c2cfc53b452
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T15:55:44Z

    wip

commit be9f2abdddc0896cb4289ec397fe2b8fa9a4ece6
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-06T16:20:48Z

    wip

commit bcc6baf53168aef7f89ab4040d5de98284921f66
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-07T09:17:45Z

    Fix late aff assignment

commit 5337bc675105bf8fabd7f2baab910a87fb4bc198
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-06-07T09:21:22Z

    cleanup

----
;;;","16/Jun/16 11:54;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/782
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add documentation for pluggable affinity functions,IGNITE-3104,12966761,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pgarg,dmagda,dmagda,10/May/16 14:25,10/May/16 21:02,14/Jul/23 06:20,10/May/16 20:54,,,,,,,,,,0,,,,"Documentation must contain information at least on the following:
- puggability;
- Rendezvous affinity function and its parameters;
- Fair affinity function and its parameters.
",,dmagda,dsetrakyan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue May 10 19:16:01 UTC 2016,,,,,,,,,,"0|i2xgn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/May/16 19:16;dsetrakyan;Affinity function has been documented for 1.5:
https://apacheignite.readme.io/docs/affinity-collocation#affinity-function

Need to update it for 1.6 and close this ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UTF-16 surrogate pairs are not properly serialized by BinaryMarshaller,IGNITE-3098,12965877,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,dmagda,dmagda,08/May/16 05:26,17/May/16 13:25,14/Jul/23 06:20,17/May/16 13:25,,,,,,,,,,0,important,,,"BinaryMarshaller is unable to properly serialize surrogate symbols (read here [1] paragraph ""invalid code points"") because it relies on {{String.getBytes(""UTF-8"")}} method [2].

However Optimized and JDK marshalers can properly handle this symbols since they rely on {{ObjectOutputStream.writeUTF()}} method.

[1] https://en.wikipedia.org/wiki/UTF-8
[2] https://community.oracle.com/thread/1164397?start=0&tstart=0
",,ascherbakov,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3139,IGNITE-3140,,,,,,,,,,"08/May/16 05:27;dmagda;StringTest.java;https://issues.apache.org/jira/secure/attachment/12802864/StringTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue May 17 13:25:04 UTC 2016,,,,,,,,,,"0|i2xb93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/May/16 05:27;dmagda;Attaching the test.;;;","10/May/16 16:18;ascherbakov;Pull request https://github.com/apache/ignite/pull/699
Waiting for test results.;;;","10/May/16 16:49;ascherbakov;Patch ready.
Waiting for review.;;;","12/May/16 12:50;dmagda;[~ascherbakov], thanks for the contribution. Your changes look good. Modified them a bit and now checking everything with TC.;;;","17/May/16 13:25;dmagda;Merged to ignite-1.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Common library is disabled in solution for the Release configuration,IGNITE-3096,12965606,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,isapego,isapego,06/May/16 14:07,11/May/16 02:53,14/Jul/23 06:20,10/May/16 13:44,1.5.0.final,,,1.6,platforms,,,,,0,,,,"There is a bug in Apache.Ignite.sln: it does not include common library in Release|x64 and Release|x86 configurations.",,githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 11 02:53:24 UTC 2016,,,,,,,,,,"0|i2x9kn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/May/16 14:09;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/695

    IGNITE-3096: .NET Solution fixed.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-3096

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/695.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #695
    
----
commit 09b470422acecab33cba15708ab50d17cf5b6eb9
Author: isapego <isapego@gridgain.com>
Date:   2016-05-06T14:07:52Z

    IGNITE-3096: .NET Solution fixed.

----
;;;","06/May/16 14:09;isapego;Fixed.;;;","11/May/16 02:53;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/695
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop: exception during split on missing file.,IGNITE-3093,12965565,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,06/May/16 11:50,06/May/16 13:26,14/Jul/23 06:20,06/May/16 13:25,1.5.0.final,,,1.6,hadoop,,,,,0,,,,"*Problem*
See {{IgniteHadoopMapReducePlanner.nodeForSplit}} method. If we operate on IGFS file and it is not in the file system yet, call to {{IgfsImpl.affinity}} will throw an exception. But this is a valid case for Hadoop.

*Solution*
Check whether file exist prior to calling {{affinity}}.
",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-05-06 11:50:04.0,,,,,,,,,,"0|i2x9bj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in IgniteH2Indexing prepared statements cache ,IGNITE-3090,12965488,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dmagda,dmagda,06/May/16 04:15,18/May/16 08:17,14/Jul/23 06:20,16/May/16 08:01,1.5.0.final,,,1.6,,,,,,0,community,important,,"IgniteH2Indexing caches prepared statements in {{stmtCache}} that uses Threads as keys. Under they high load when there are many Threads the cache can grow significantly. Plus if a Thread is terminated its prepared statements are not get cleaned introducing a memory leak. 

A special background Thread should be introduced that will iterate over {{stmCache}} performing the following:
- cleaning records for terminated Threads;
- cleaning records of the Threads that were not used for a long time. A special configuration parameter can be set.

",,dmagda,githubbot,sboikov,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 18 08:17:03 UTC 2016,,,,,,,,,,"0|i2x8uf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/May/16 14:48;tledkov-gridgain;Add the cleanupStmtCache() method that is called periodically by the GridTimeoutProcessor.
Please take a look at the pull request.;;;","12/May/16 15:08;tledkov-gridgain;[Patch|https://github.com/apache/ignite/pull/712] is available;;;","13/May/16 16:03;tledkov-gridgain;Review issues are fixed. Please take a look;;;","16/May/16 08:01;sboikov;Merged into ignite-1.6 (commit #38d9e91).;;;","18/May/16 08:17;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/712
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebSessions: session objects are deserialized on the server.,IGNITE-3087,12965178,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,05/May/16 05:59,17/May/16 10:59,14/Jul/23 06:20,17/May/16 10:59,1.5.0.final,,,1.6,websession,,,,,0,important,,,"*Problem*
1) {{WebSession}} and {{WebSessionListener$AttributesProcessor}} classes are {{Externalizable}}, so {{OptimziedMarshaller}} is used.
2) Both these classes pass objects directly. It means that even if force them to work through {{BinaryMarshaller}}, objects will be deserialized still. We need to rework this logic somehow.",,dkarachentsev,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 11 17:31:16 UTC 2016,,,,,,,,,,"0|i2x6xj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/16 17:31;dkarachentsev;* All session attributes and parameters are marshaled and unmarshaled on client side now, so it actually doesn't matter which marshaller to use. 

* Besides this fix also changed logic for session processing to meet API requirements. 

* Added parameter to enable compatibility mode with previous releases.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
We need to fix UI blinking in special case,IGNITE-3079,12964898,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,kuaw26,kuaw26,04/May/16 07:09,06/Jun/16 03:08,14/Jul/23 06:20,03/Jun/16 08:32,1.6,,,1.7,wizards,,,,,0,,,,"In case when two components share same slot, but only one is visible at the any moment. When state is changed there some blink is visible. After some investigation it seems that ng-animate is the root of problem. We need to fix this somehow.",,Dmitriyff,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 06 03:08:05 UTC 2016,,,,,,,,,,"0|i2x57b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jun/16 04:32;Dmitriyff;test animation on
1) modal 
2) tooltips
3) dropdown
4) panels
5) overlay loading 
6) message info/error
7) field error custom validation message (popover);;;","06/Jun/16 03:08;pkonstantinov;Tested on staging;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteRDD data frame does not handle object fields,IGNITE-3077,12964029,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,nizhikov,agoncharuk,agoncharuk,30/Apr/16 01:13,22/Feb/18 10:19,14/Jul/23 06:20,22/Feb/18 10:17,1.5.0.final,,,2.5,spark,,,,,0,bigdata,,,"Added a corresponding test to IgniteRDDSpec

I am not sure what causing this failure because sql returns a proper result set on the Ignite side, and it cannot be converted to DataFrame row. Spark dev list consultation needed most likely.",,agoncharuk,githubbot,neoramon,nizhikov,veejayendraa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3175,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 22 10:19:28 UTC 2018,,,,,,,,,,"0|i2wzuf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Feb/18 09:24;githubbot;GitHub user nizhikov opened a pull request:

    https://github.com/apache/ignite/pull/3556

    IGNITE-3077: Test fixed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nizhikov/ignite IGNITE-3077

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3556.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3556
    
----
commit 0ca135a02aaad79260af140a709e0b2fcb60cab0
Author: Nikolay Izhikov <nizhikov@...>
Date:   2018-02-22T09:24:10Z

    IGNITE-3077: Test fixed

----
;;;","22/Feb/18 10:01;nizhikov;Test fixed and unmuted. 
No changes in production code.
I run only RDD suites on TC.

Spark RDD 2.10 - https://ci.ignite.apache.org/viewLog.html?buildId=1106947&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteRddSpark210
Spark RDD - https://ci.ignite.apache.org/viewLog.html?buildId=1106948&tab=queuedBuildOverviewTab;;;","22/Feb/18 10:19;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3556
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible thread starvation due to rebalancing,IGNITE-3073,12963780,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,vkulichenko,vkulichenko,29/Apr/16 07:33,04/May/16 11:27,14/Jul/23 06:20,04/May/16 11:27,1.5.0.final,,,1.6,cache,,,,,0,,,,"We're currently rebalancing the utility cache in the system pool. This can cause starvation, for example in this scenario:

# Start several nodes and a cache with indexing configured.
# Continuously load the system with puts.
# Add one more node. It will join and will start processing put requests immediately.
# For each request, indexing processor will try to get binary metadata and will block on utility cache rebalance future. This will block all threads in the system pool.
# Utility cache rebalancing will be scheduled but will never start, because all threads in system pool are blocked.

I think we should rebalance utility cache synchronously in exchange worker, like we do with the marshaller cache.",,sboikov,tledkov-gridgain,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 04 11:21:01 UTC 2016,,,,,,,,,,"0|i2wyb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Apr/16 15:47;tledkov-gridgain;The test _IgniteCacheStarvationOnRebalanceTest_ is added to [branch|https://github.com/gridgain/apache-ignite/commit/984645db92f5f43e5ea08f85a6ccfa3cb5473630];;;","04/May/16 11:21;sboikov;There is no need to wait on utility cache rebalance future to get metadata, fixed in master (commit f3eb94e).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimize transactions that do not acquire any locks,IGNITE-3057,12962852,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vkulichenko,vkulichenko,27/Apr/16 01:29,04/May/16 06:00,14/Jul/23 06:20,04/May/16 06:00,1.5.0.final,,,1.6,cache,,,,,0,,,,"There are cases when a transaction did not acquire any locks (e.g., optimistic read-only transaction). In this case we can simply remove transaction from the local transaction manager, but we are going through all the steps, like prepare and commit/rollback.

This optimization can give serious benefit in read-most use cases, like caching.",,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 04 06:00:29 UTC 2016,,,,,,,,,,"0|i2wsmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/16 11:09;sboikov;Valentin,

I reviewed your changes, for 'get' inside serializable transactions we need to check that entry version did not change when tx is comitted, so 'fast finish'  path can not be used. I fixed this and also added sanity test for 'fast finish' txs.;;;","04/May/16 06:00;sboikov;Merged into master (commit fc0dd9a).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service implementation class is required even if it's not expected to be deployed on current node,IGNITE-3056,12962750,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ashutak,vkulichenko,vkulichenko,26/Apr/16 21:25,28/Jun/16 18:43,14/Jul/23 06:20,09/Jun/16 14:53,1.5.0.final,,,1.7,managed services,,,,,0,community,customer,important,"Currently the service instance is deserialized as part of {{GridServiceDeployment}} and {{GridServiceAssignment}} classes. Need to check if it's possible to deserialize only node filter first, and then deserialize the service itself only if needed. This will allow to use cluster groups with services and deploy the classes accordingly.",,ashutak,dmagda,githubbot,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2091,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Thu Jun 09 14:52:54 UTC 2016,,,,,,,,,,"0|i2wrzr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Apr/16 13:42;ashutak;[~vkulichenko] I've assigned ticket to yourself. Let me know if you have any objections.

I already created tests to reproduce the issue and started investigating the problem.;;;","05/May/16 18:23;ashutak;A simple fix is to create {{LazyServiceConfiguration}} (before putting inside {{GridServiceDeployment}}) that has user provided {{Service}} as bytes and has {{Service}} field as transient. As a result, it's not required to have service class on all nodes and service deserialization happens only on nodes according to filter. I've tried the fix and all works as well.

But the simple fix is not backward compatible.

Also we cannot modify old (create new) classes {{GridServiceDeploymentKey}} and {{GridServiceDeployment}} (cannot put new keys/values in sys-cache).

Algorithm do the following:
- node that do deploy put to sys-cache {{GridServiceDeploymentKey}} and {{GridServiceDeployment}} pair.
- {{DeploymentListener}} listen for updates and if it finds {{GridServiceDeploymentKey}} and we are on oldest node then it creates and puts at sys-cache {{GridServiceAssignmentsKey}} and {{GridServiceAssignments}} pair.
- {{AssignmentListener}} listen for updates and if it finds {{GridServiceAssignmentsKey}} then it deploys service on local node according to information at {{GridServiceAssignments}}. Also, if node that initiated the deployment see proper assignment, then the node completes future.

The problem is that the oldest node can know nothing about user's Service class. As a result {{Ignite.deploy()}} method on user's node hangs forever (because the future will be never completed).

To keep backward compatibility, we have to process {{GridServiceDeployment}} on oldest node if it has information about service class (as it work now) or process on oldest node according to {{nodeFilter}} (that have to know about user's service). The problems is how to understand whether the oldest node have processed successfully assignment or not.;;;","06/May/16 16:43;githubbot;GitHub user ashutakGG opened a pull request:

    https://github.com/apache/ignite/pull/696

    Ignite services with different class loaders (Ignite 3056)

    https://issues.apache.org/jira/browse/IGNITE-3056

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3056-service-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/696.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #696
    
----
commit 74a9e72fe819d62d5435fd03341d1c15dc1c6d43
Author: ashutak <ashutak@gridgain.com>
Date:   2016-04-28T15:05:43Z

    ignite-3056: added test

commit 0f8d0afeb989ca10951f3b87a303a071e3bf9f7c
Author: ashutak <ashutak@gridgain.com>
Date:   2016-04-28T17:34:14Z

    ignite-3056: potential fix with broken backword compatibility

commit 18fdcfab482c8bd528a57d5d3d1cb3cf9e1d0a1c
Author: ashutak <ashutak@gridgain.com>
Date:   2016-04-29T11:04:24Z

    ignite-3056: revert fix

commit 14391782c36e857a438575bd819c72b4956ee378
Author: ashutak <ashutak@gridgain.com>
Date:   2016-04-29T11:10:10Z

    ignite-3056: clean up

commit 7eaad5fbca168cb32430d73f5dcd9e67030cee3e
Author: ashutak <ashutak@gridgain.com>
Date:   2016-04-29T15:13:35Z

    ignite-3056: test (no pass...)

commit a8f1df1f6ebbe2647ee6d3d04017efbfae3f0bb5
Author: ashutak <ashutak@gridgain.com>
Date:   2016-04-29T15:42:20Z

    ignite-3056: added test reproducible test

commit ac52be0038680708209400aefcaf80e458942069
Author: ashutak <ashutak@gridgain.com>
Date:   2016-05-06T09:37:46Z

    ignite-3056: test works

commit f52ecaa0f839c2404c6e8525ae0d5b8cc12cc04a
Author: ashutak <ashutak@gridgain.com>
Date:   2016-05-06T10:21:49Z

    ignite-3056: finished with 1 class loader tests

commit 05283c46e07d50194bf9f1b19bc1f1b5fe17a1d0
Author: ashutak <ashutak@gridgain.com>
Date:   2016-05-06T15:53:51Z

    ignite-3056: fixed and added tests

commit 45dd971b4878c440db3903626281868a0642e2af
Author: ashutak <ashutak@gridgain.com>
Date:   2016-05-06T16:42:35Z

    ignite-3056: rework tests

----
;;;","06/May/16 16:46;ashutak;Added to new method on Ignite interface {{deployLazy(ServiceCfg)}}. Is should be used to solve the issue and if cluster does not have old nodes.;;;","10/May/16 13:03;sboikov;Artem,

I reviewed your fix, did several changes, please take a look.

Instead of adding new method 'deployLazy' let's add special system property, something like 'service_compatibility_mode'.('false' by default). If this property is 'true' then old ServiceConfiguration class is used, otherwise we use new 'lazy' configuration class. All nodes in cluster should have the same value of this propery (see for example how simila logic is implemented for IgniteSystemProperties.IGNITE_OPTIMIZED_MARSHALLER_USE_DEFAULT_SUID ).

Thanks!;;;","11/May/16 03:21;vkulichenko;Agree with Semen. Adding new method looks dirty, because it's really hard to understand its purpose. System property is better, but if it's {{false}} by default, we should make sure that {{true}} value on new nodes and no value on old nodes are compatible and pass the consistency check.;;;","11/May/16 13:25;githubbot;GitHub user ashutakGG opened a pull request:

    https://github.com/apache/ignite/pull/700

    Ignite services with different class loaders (ignite 3056)

    New PR for https://issues.apache.org/jira/browse/IGNITE-3056. Branch based on ignite-1.6.0

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3056-1.6.0

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/700.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #700
    
----
commit e52706ce12428647467fb192560bc0df72cf95ee
Author: ashutak <ashutak@gridgain.com>
Date:   2016-05-11T13:21:41Z

    ignite-3056: implemented

----
;;;","11/May/16 13:26;githubbot;Github user ashutakGG closed the pull request at:

    https://github.com/apache/ignite/pull/696
;;;","11/May/16 16:15;ashutak;Added SERVICE_COMPATIBILITY_ENABLED system property in suggested way.
Added consistency tests on the property.
Fixed a bug with injection to lazy configuration. 

Waiting for TC.;;;","12/May/16 14:52;ashutak;TC looks good (after fix at one assertion).
;;;","18/May/16 06:15;sboikov;Reviewed, looks good.;;;","20/May/16 20:41;dmagda;[~ashutak], can this ticket be closed?;;;","09/Jun/16 14:52;sboikov;Fix is merged into master (commit #b5f5941).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteDataStreamer can't be timed out,IGNITE-3055,12962695,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,v.pyatkov,vkulichenko,vkulichenko,26/Apr/16 18:28,13/Jul/16 12:31,14/Jul/23 06:20,13/Jul/16 12:31,1.5.0.final,,,1.7,streaming,,,,,0,community,customer,important,"In current implementation there is no way to timeout the data streamer. Specifically, {{addData()}} can hang on the parallel operations semaphore and {{close()}} can infinitely wait on one of the futures to complete.

We should introduce the configurable timeout and fail any data streamer operation if it's exceeded.",,dmagda,v.pyatkov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Wed Jul 13 12:31:41 UTC 2016,,,,,,,,,,"0|i2wrnj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jul/16 07:23;dmagda;Vlad, please take a look at my review notes in the pull-request in addition consider the following:

1) Total timeout must be applied in this part of {{doFlush}} method as well

{code}
             for (int i = 0; i < activeFuts0.size(); i++) {
                 IgniteInternalFuture f = activeFuts0.get(i);
 
                 if (f == null)
                     doneCnt++;
                 else if (f.isDone()) {
                     f.get();
 
                     doneCnt++;
 
                     activeFuts0.set(i, null);
                 }
                 else
                     break;
             }
{code}

2) In {{closeEx}} method you must use {{busyLock.tryBlock(timeout)}} instead of  {{busyLock.block();}}.

3) Test cases:
- check that timeout happens on {{addData}} methods;
- check that timeout happens on {{flush}} and {{close}} methods.

To emulate the timeout you can provide your own implementation of {{StreamReceiver}} setting it with {{IgniteDataStreamer.receiver}} method. Inside of receiver's implementation you can perform timeout emulation.
;;;","08/Jul/16 19:23;v.pyatkov;Thank [~dmagda]

Added pull reuest: https://github.com/apache/ignite/pull/864

I not noticed in the comments.
I think it redundant about 1 and 2.
1 - activeFuts will by done alvays when buffer future has done (becasu it done on listener on future of buffer)
2 - busyLock must by using in try - finaly block. Put time waiting on busyLock only will hid an other exception.
Unit test I will add in nearest time (about 3).;;;","11/Jul/16 07:59;v.pyatkov;I have added unit tests.
[~dmagda] would you please review changes again?;;;","11/Jul/16 08:56;dmagda;Vlad, thanks! I've reviewed and provided final minor comments from my side.

However, since you've updated the public API please send an email to the dev list getting a final approve from the community. Mention that you have added {{timeout}} method to the data streamer interface and {{TimeoutException}}.;;;","12/Jul/16 10:49;v.pyatkov;Changes in public API:

# Added {{IgniteDataStreamer.timeout(long)}} and {{IgniteDataStreamer.timeout()}} methods to establish timeout on streamer operations. Default value is -1, means unlimited time.
# Added new TimeoutException (inherited IgniteException). The exception will thrown when timeout will be reached (may be take place in {{IgniteDataStreamer.addData(..)}}, {{IgniteDataStreamer.close()}} and {{IgniteDataStreamer.flash()}} operations).;;;","13/Jul/16 12:31;dmagda;Thanks, Vlad, I've merged the changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Exception on cache event deserialization,IGNITE-3052,12962226,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ptupitsyn,ptupitsyn,25/Apr/16 12:27,27/Apr/16 08:25,14/Jul/23 06:20,27/Apr/16 08:25,1.1.4,,,1.6,platforms,,,,,0,,,,"Deserialization fails on LockId for some of the cache events.
To reproduce: subscribe to all cache events, add local listener, put to cache, run under debugger to see the error. 
Or run EventsTest under the debugger.

This exception gets swallowed on Java side, and results in event not being delivered to .NET listener.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 27 08:25:22 UTC 2016,,,,,,,,,,"0|i2worb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Apr/16 15:28;ptupitsyn;There is a `org.apache.ignite.internal.processors.cache.version.GridCacheVersion` object in the lockId field.
It is being written using optimized marshaller (due to BinaryClassDescriptor.useOptimizedMarshaller flag) and can't be read on .NET side.;;;","26/Apr/16 09:31;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/671

    IGNITE-3052 .NET: Deprecate CacheEvent.LockId

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-3052

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/671.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #671
    
----
commit 2d5a843268e142f2406d6002be42fd8e32bde8c5
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-26T08:36:44Z

    IGNITE-3052 .NET: Deprecate CacheEvent.LockId

commit 2a85fd1543189d6bfa478e49e5c69603c82b5279
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-26T09:30:37Z

    IGNITE-3052 .NET: Deprecate CacheEvent.LockId

----
;;;","26/Apr/16 09:33;ptupitsyn;Looks like LockId is of no value to the user. I've marked it obsolete and removed java value propagation.;;;","27/Apr/16 08:25;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/671
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cluster: Binary configuration - focus should be set to TypeName on new type,IGNITE-3047,12962184,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,kuaw26,kuaw26,25/Apr/16 09:07,27/Apr/16 04:14,14/Jul/23 06:20,27/Apr/16 04:10,,,,1.6,wizards,,,,,0,,,,"Steps to reproduce:
1) Go to Clusters screen.
2) Go to Binary configuration
3) Click ""+"" on type configuration - focus not in first field.",,anovikov,kuaw26,mafanasiev,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 27 04:14:12 UTC 2016,,,,,,,,,,"0|i2wohz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/16 02:54;mafanasiev;Fixed autofocus directive, corrected test parameter directive.;;;","27/Apr/16 03:13;anovikov;Reviewed. Merged.;;;","27/Apr/16 03:27;anovikov;Pavel, please test.;;;","27/Apr/16 04:01;pkonstantinov;Incorrect - cursor is set in the Serializer instead of Type Name.
Verified in FF and Chrome.;;;","27/Apr/16 04:14;pkonstantinov;Correct after staging was updated to new logic.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scala API doc missed on ignite.apache.org,IGNITE-3042,12960700,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,21/Apr/16 10:42,10/May/16 09:37,14/Jul/23 06:20,04/May/16 14:14,1.5.0.final,,,1.6,,,,,,0,,,,"https://ignite.apache.org has APi docs for java, .Net and C++ and scala API doc should be uploaded as well",,avinogradov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue May 10 09:37:10 UTC 2016,,,,,,,,,,"0|i2wfw7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/May/16 14:14;avinogradov;Scaladoc already uploaded. Added slaladoc to Docs page header.
;;;","10/May/16 09:37;skozlov;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimize internally used ContinuousQueries,IGNITE-3038,12960640,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,21/Apr/16 07:49,17/Jun/16 08:37,14/Jul/23 06:20,17/Jun/16 08:37,,,,1.7,,,,,,0,,,,"There are several issues:
- even if for server nodes queries are local they still send custom discovery messages (probably this should be fixed not only for internal queries)
- ideally client nodes also should not send discovery messages since queries are always started, so they can be statically configured
- GridServiceProcessor starts two queries, looks like only one can be used
- marshaller cache query is started before GridCachePartitionExchangeManager.onKernalStart, this can slowdown exchange process (not an issue is previous items are fixed)",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 17 08:37:46 UTC 2016,,,,,,,,,,"0|i2wfiv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jun/16 08:37;sboikov;Implemented optimizations to do not send unnecessary discovery messages to start internal continuous queries (commits #dc71125, #e5fcebb).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recent JDBC discovery changes cause errors for Postgres and Microsoft SQL Server databases,IGNITE-3035,12960394,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,peter.griffiths,peter.griffiths,20/Apr/16 16:37,21/Jun/17 11:08,14/Jul/23 06:20,22/Apr/16 09:36,1.6,,,1.6,jdbc,,,,,0,,,,"The changes introduced by IGNITE-1993 to the TcpDiscoveryJdbcIpFinder  class to introduce Oracle compatibility cause errors when Postgres or Microsoft SQL Server are used as the database.  No such issues were encountered using either database before.

The first node to join a grid succeeds and creates the IP table in the database, but any further node attempting to join the grid throws the following error (for Postgres):
{code}
Failed to register local node address in IP finder on start (retrying every 2000 ms).: class org.apache.ignite.spi.IgniteSpiException: Failed to initialize DB schema.
...
Caused by: org.postgresql.util.PSQLException: ERROR: current transaction is aborted, commands ignored until end of transaction block
{code}

The same behaviour occurs when using Microsoft SQL Server, but it throws a different error.",,dmagda,githubbot,kuaw26,peter.griffiths,pkonstantinov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 26 02:32:05 UTC 2016,,,,,,,,,,"0|i2we0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Apr/16 17:21;peter.griffiths;The errors were happening as the dbm.getTables() call failed to determine the table's existence due to the Oracle required upper case query.  The system then tried to create the IP table twice, but failed both times since it already existed.;;;","20/Apr/16 20:43;githubbot;GitHub user peter-griffiths opened a pull request:

    https://github.com/apache/ignite/pull/660

    IGNITE-3035 Postgres mssql JDBC discovery fix

    Updated the TcpDiscoveryJdbcIpFinder class to work with Postgres and Microsoft SQL Server while maintaining the fix for Oracle databases introduced with IGNITE-1993.  
    
    The issue stemmed from the fact that the DatabaseMetaData.getTables(...) table name value has to be upper case for Oracle, but ran case sensitively for other databases such as Postgres.  This meant the TcpDiscoveryJdbcIpFinder  always failed to correctly determine if the ""TBL_ADDRS"" table already existed before trying and failing to create it again.  The table creation failures caused an aborted transaction and subsequent SQL queries to fail with ""ERROR: current transaction is aborted, commands ignored until end of transaction block"". 
    
    The fix is to create the and table in the database in upper case.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/peter-griffiths/ignite ignite-3035-postgres-mssql

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/660.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #660
    
----

----
;;;","20/Apr/16 20:44;peter.griffiths;Updated the TcpDiscoveryJdbcIpFinder class to work with Postgres and Microsoft SQL Server while maintaining the fix for Oracle databases introduced with IGNITE-1993.

The issue stemmed from the fact that the DatabaseMetaData.getTables(...) table name value has to be upper case for Oracle, but ran case sensitively for other databases such as Postgres. This meant the TcpDiscoveryJdbcIpFinder always failed to correctly determine if the ""TBL_ADDRS"" table already existed before trying and failing to create it again. The table creation failures caused an aborted transaction and subsequent SQL queries to fail with ""ERROR: current transaction is aborted, commands ignored until end of transaction block"".

The fix is to create the and table in the database in upper case.;;;","21/Apr/16 10:38;kuaw26;I will take a look PR shortly and test with Pavel Konstantinov on main RDBMS.;;;","22/Apr/16 09:35;pkonstantinov;Successfully tested with the following db servers: DB2, Oracle, SQL Server, PostgreSQL, MySql, H2;;;","22/Apr/16 09:51;kuaw26;Semen, I reviewed PR.
Looks good for me.
Could you approve merge to master?
I created branch origin\ignite-3035 from master and applied PR to it.;;;","25/Apr/16 20:24;sboikov;Looks good.;;;","26/Apr/16 02:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/660
;;;","26/Apr/16 02:32;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoveryImpl.registerLocalNodeAddress() has an infinite loop,IGNITE-3027,12960109,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,yzhdanov,vkulichenko,vkulichenko,19/Apr/16 20:10,28/Apr/16 11:37,14/Jul/23 06:20,28/Apr/16 11:37,1.5.0.final,,,1.6,general,,,,,0,,,,"If {{IpFinder.initializeLocalAddresses}} always throws an exception, the join process will hang forever even if there is {{joinTimeout}} configured. This can happen, for example, with ZooKeeper finder if provided credentials are incorrect.

We should make sure that {{joinTimeout}} is honored in this case as well.",,vkulichenko,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Apr 28 11:37:02 UTC 2016,,,,,,,,,,"0|i2wc93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Apr/16 11:37;yzhdanov;Fixed in master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible deadlock in services when Spring is used,IGNITE-3024,12959822,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vkulichenko,vkulichenko,18/Apr/16 23:32,22/Jul/16 13:10,14/Jul/23 06:20,22/Jul/16 13:10,1.5.0.final,,,1.7,managed services,,,,,0,community,customer,important,"Resource injection in service processor happens inside synchronized block (see {{redeploy()}} method). During injection Spring will acquire its global bean factory lock:
{noformat}
""srvc-deploy-#54%xxx%"":
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:187)
	- waiting to lock <0x00000006c03e2290> (a java.util.concurrent.ConcurrentHashMap)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:173)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:240)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:956)
	at org.apache.ignite.internal.processors.resource.GridResourceSpringBeanInjector.inject(GridResourceSpringBeanInjector.java:65)
	at org.apache.ignite.internal.processors.resource.GridResourceIoc.injectInternal(GridResourceIoc.java:172)
	at org.apache.ignite.internal.processors.resource.GridResourceIoc.inject(GridResourceIoc.java:97)
	at org.apache.ignite.internal.processors.resource.GridResourceProcessor.inject(GridResourceProcessor.java:510)
	at org.apache.ignite.internal.processors.service.GridServiceProcessor.copyAndInject(GridServiceProcessor.java:957)
	at org.apache.ignite.internal.processors.service.GridServiceProcessor.redeploy(GridServiceProcessor.java:873)
	- locked <0x000000077ffd4e50> (a java.util.ArrayList)
	at org.apache.ignite.internal.processors.service.GridServiceProcessor.access$4400(GridServiceProcessor.java:94)
	at org.apache.ignite.internal.processors.service.GridServiceProcessor$AssignmentListener$1.run0(GridServiceProcessor.java:1348)
	at org.apache.ignite.internal.processors.service.GridServiceProcessor$BusyRunnable.run(GridServiceProcessor.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}
If some Spring bean creates a service proxy during initialization, we can get a deadlock:
{noformat}
""localhost-startStop-1"":
	at org.apache.ignite.internal.processors.service.GridServiceProcessor.serviceContext(GridServiceProcessor.java:613)
	- waiting to lock <0x000000077ffd4e50> (a java.util.ArrayList)
	at org.apache.ignite.internal.processors.service.GridServiceProcessor.serviceProxy(GridServiceProcessor.java:633)
	at org.apache.ignite.internal.IgniteServicesImpl.serviceProxy(IgniteServicesImpl.java:232)
	...
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	- locked <0x00000006c03e2290> (a java.util.concurrent.ConcurrentHashMap)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1120)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1044)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:457)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:435)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:559)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:169)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	- locked <0x00000006c03e2290> (a java.util.concurrent.ConcurrentHashMap)
	...
{noformat}
We should make sure that injections are not happening inside other locks.",,dmagda,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Mon May 09 06:20:38 UTC 2016,,,,,,,,,,"0|i2wahb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Apr/16 06:36;vkulichenko;Made a fix in branch {{ignite-3024}} - moved resource injection out of synchronized block. Next step is to create a test that reproduces original issue to make sure that the fix works.;;;","28/Apr/16 09:24;sboikov;I see that service 'cancel' is also called while lock on 'ctxs' is held, I think it makes sense to fix this as well.;;;","29/Apr/16 11:01;sboikov;Comitted in ignite-3024 test reproducing deadlock (test fails in master, pass in ignite-3024).;;;","09/May/16 06:20;dmagda;Can this ticket be closed?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename keyBackups to Backups for performance advices printed out on a node,IGNITE-3023,12959668,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,jcfiorenzano,skozlov,skozlov,18/Apr/16 14:39,16/May/19 21:24,14/Jul/23 06:20,12/May/16 09:14,1.5.0.final,,,1.7,general,,,,,0,newbie,,,"The node prints out following message:
{noformat}
[16:56:45,431][INFO][main][IgniteKernal]   ^-- Decrease number of backups (set 'keyBackups' to 0)
{noformat}
But we use {{backup}} property in configuration file or {{setBackups}} method in java code.",,githubbot,jcfiorenzano,skozlov,yzhdanov,,,,,,,,,"dspavlov commented on pull request #691: IGNITE-3023
URL: https://github.com/apache/ignite/pull/691
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:24;githubbot;600","dspavlov commented on issue #691: IGNITE-3023
URL: https://github.com/apache/ignite/pull/691#issuecomment-493237224
 
 
   https://issues.apache.org/jira/browse/IGNITE-3023 is closed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:24;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 12 09:14:32 UTC 2016,,,,,,,,,,"0|i2w9j3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/May/16 06:42;githubbot;GitHub user jcfiorenzano opened a pull request:

    https://github.com/apache/ignite/pull/691

    IGNITE-3023

    Rename keyBackups to Backups for performance advices printed out of a node, due to the name of the property in the configuration file is Backups instead of keyBackups

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jcfiorenzano/ignite ignite-3023

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/691.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #691
    
----
commit a2845a4d598b24af8f410fa9743705b1dbff58c6
Author: jcfiorenzano <jcfiorenzano23@gmail.com>
Date:   2016-05-05T20:35:01Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit caebcb746377505da3d65252243e5d12401bf94a
Author: jcfiorenzano <jcfiorenzano23@gmail.com>
Date:   2016-05-06T06:31:10Z

    Rename keyBackups to Backups for performance advices printed out on a node - Fixes #3023

----
;;;","06/May/16 06:56;jcfiorenzano;  https://github.com/apache/ignite/pull/691.patch;;;","12/May/16 09:14;yzhdanov;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test org.apache.ignite.internal.processors.igfs.IgfsStreamsSelfTest#testCreateFileColocated fails sometimes.,IGNITE-3021,12959609,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,iveselovskiy,iveselovskiy,18/Apr/16 10:31,30/Jun/16 10:32,14/Jul/23 06:20,30/Jun/16 10:14,ignite-1.4,,,1.7,igfs,,,,,0,,,,"Test org.apache.ignite.internal.processors.igfs.IgfsStreamsSelfTest#testCreateFileColocated fails sometimes on master branch:
{code}
------- Stderr: -------
[15:16:32,400][ERROR][main][root] Test failed.
junit.framework.AssertionFailedError: expected:<1> but was:<2>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.Assert.assertEquals(Assert.java:241)
    at junit.framework.TestCase.assertEquals(TestCase.java:409)
    at org.apache.ignite.internal.processors.igfs.IgfsStreamsSelfTest.testCreateFileColocated(IgfsStreamsSelfTest.java:237)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1759)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
    at org.apache.ignite.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1697)
    at java.lang.Thread.run(Thread.java:745)
{code}

The problem is that data cache rebalancing happens during the test, that causes data blocks affinity calculation to be not reproducible: block that initially maps to 0-th node after some time maps to a different node.

Suggested fix is to switch off automatic rebelancing, and do the rebalancing manually only once upon the test beginning.",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 30 10:32:37 UTC 2016,,,,,,,,,,"0|i2w95z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Apr/16 17:53;iveselovskiy;Fact is that sometimes topology changes happen during the test (this can be detected by getting the AffinityTopologyVersion in the begining and in the end of the test), but even if we filter out such cases, the test still fails sometimes. Also data cache rebalancing may affect the situation, but manual rebalancing in the beginning also does not completely fix the issue.
Needs deeper investigation.;;;","30/Jun/16 10:32;iveselovskiy;Invocation in the test beginning {code}awaitPartitionMapExchange();{code} or 
{code}        IgniteConfiguration cfg = ....
        cfg.setLateAffinityAssignment(false);
{code}
when making the configuration solves the problem. Reason is that before initial partition map exchange affinity function considers one node to be backup of another, so it may really return 2 nodes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache affinity calculation is slow with large nodes number,IGNITE-3018,12959543,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,sboikov,sboikov,18/Apr/16 06:10,14/Apr/20 14:44,14/Jul/23 06:20,13/Apr/17 11:56,,,,2.0,cache,,,,,0,important,,,"With large number of cache server nodes (> 200)  RendezvousAffinityFunction and FairAffinityFunction work pretty slow .

For RendezvousAffinityFunction.assignPartitions can take hundredes of milliseconds, for FairAffinityFunction it can take seconds.

For RendezvousAffinityFunction most time is spent in MD5 hash calculation and nodes list sorting. As optimization we can try to cache {partion, node} MD5 hash or try another hash function. Also several minor optimizations are possible (avoid unncecessary allocations, only one thread local 'get', etc).",,dsetrakyan,githubbot,ihorps,sboikov,tledkov-gridgain,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3905,,,,IGNITE-12896,,IGNITE-4765,,,,,IGNITE-4756,,,,,,"14/Mar/17 16:25;tledkov-gridgain;003.png;https://issues.apache.org/jira/secure/attachment/12858700/003.png","14/Mar/17 16:25;tledkov-gridgain;004.png;https://issues.apache.org/jira/secure/attachment/12858701/004.png","14/Mar/17 16:25;tledkov-gridgain;008.png;https://issues.apache.org/jira/secure/attachment/12858702/008.png","14/Mar/17 16:25;tledkov-gridgain;016.png;https://issues.apache.org/jira/secure/attachment/12858703/016.png","14/Mar/17 16:25;tledkov-gridgain;064.png;https://issues.apache.org/jira/secure/attachment/12858704/064.png","14/Mar/17 16:25;tledkov-gridgain;100.png;https://issues.apache.org/jira/secure/attachment/12858705/100.png","14/Mar/17 16:25;tledkov-gridgain;128.png;https://issues.apache.org/jira/secure/attachment/12858706/128.png","14/Mar/17 16:25;tledkov-gridgain;200.png;https://issues.apache.org/jira/secure/attachment/12858707/200.png","14/Mar/17 16:25;tledkov-gridgain;256.png;https://issues.apache.org/jira/secure/attachment/12858708/256.png","14/Mar/17 16:25;tledkov-gridgain;400.png;https://issues.apache.org/jira/secure/attachment/12858709/400.png","14/Mar/17 16:25;tledkov-gridgain;600.png;https://issues.apache.org/jira/secure/attachment/12858710/600.png","14/Mar/17 16:09;tledkov-gridgain;balanced.003.png;https://issues.apache.org/jira/secure/attachment/12858689/balanced.003.png","14/Mar/17 16:09;tledkov-gridgain;balanced.004.png;https://issues.apache.org/jira/secure/attachment/12858690/balanced.004.png","14/Mar/17 16:09;tledkov-gridgain;balanced.008.png;https://issues.apache.org/jira/secure/attachment/12858691/balanced.008.png","14/Mar/17 16:09;tledkov-gridgain;balanced.016.png;https://issues.apache.org/jira/secure/attachment/12858692/balanced.016.png","14/Mar/17 16:09;tledkov-gridgain;balanced.064.png;https://issues.apache.org/jira/secure/attachment/12858693/balanced.064.png","14/Mar/17 16:09;tledkov-gridgain;balanced.100.png;https://issues.apache.org/jira/secure/attachment/12858694/balanced.100.png","14/Mar/17 16:09;tledkov-gridgain;balanced.128.png;https://issues.apache.org/jira/secure/attachment/12858695/balanced.128.png","14/Mar/17 16:09;tledkov-gridgain;balanced.200.png;https://issues.apache.org/jira/secure/attachment/12858696/balanced.200.png","14/Mar/17 16:09;tledkov-gridgain;balanced.256.png;https://issues.apache.org/jira/secure/attachment/12858697/balanced.256.png","14/Mar/17 16:09;tledkov-gridgain;balanced.400.png;https://issues.apache.org/jira/secure/attachment/12858698/balanced.400.png","14/Mar/17 16:09;tledkov-gridgain;balanced.600.png;https://issues.apache.org/jira/secure/attachment/12858699/balanced.600.png",,22.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 21 12:16:49 UTC 2018,,,,,,,,,,"0|i2w8rb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Apr/16 08:55;tledkov-gridgain;New implementation use the cache for MD5 hash & cache of serialization results of a node's resolvers.
Approximates times of call the RendezvousAffinityFunction.assignPartitions. The test replaces the last node 500 times:

Test 100 nodes. Old: 74 ms +/- 11.202 ms; New: 24 ms +/- 8.604 ms;
Test 200 nodes. Old: 152 ms +/- 15.816 ms; New: 64 ms +/- 13.450 ms;
Test 300 nodes. Old: 231 ms +/- 16.516 ms; New: 103 ms +/- 15.008 ms;
Test 400 nodes. Old: 310 ms +/- 18.549 ms; New: 181 ms +/- 28.094 ms;
Test 500 nodes. Old: 385 ms +/- 15.571 ms; New: 264 ms +/- 36.831 ms;
Test 600 nodes. Old: 464 ms +/- 16.210 ms; New: 383 ms +/- 73.448 ms;
;;;","27/Apr/16 08:59;tledkov-gridgain;Use 32/64 bits [Wang/Jenkins hash|https://gist.github.com/badboy/6267743] and build-in hashCode()  for ClusterNode hash object for instead of MD5.
Approximates times of call the RendezvousAffinityFunction.assignPartitions. The test replaces the last node 30 times for 10 instances of affinity function (total 300 times).

64 bits implementation packs partition number and node.hashCode() to long and [mixes|https://gist.github.com/badboy/6267743#64-bit-mix-functions] the long key:

Test 100 nodes. Old: 78 ms +/- 11.386 ms; New: 17 ms +/- 7.483 ms;
Test 200 nodes. Old: 153 ms +/- 13.065 ms; New: 36 ms +/- 9.309 ms;
Test 300 nodes. Old: 233 ms +/- 12.855 ms; New: 57 ms +/- 10.343 ms;
Test 400 nodes. Old: 314 ms +/- 11.572 ms; New: 80 ms +/- 10.349 ms;
Test 500 nodes. Old: 395 ms +/- 13.838 ms; New: 101 ms +/- 7.118 ms;
Test 600 nodes. Old: 476 ms +/- 15.727 ms; New: 123 ms +/- 10.732 ms;


32 bits implementation hashes partition number and node.hashCode() to int and [mixes|https://gist.github.com/badboy/6267743#using-multiplication-for-hashing]) the integer key:

Test 100 nodes. Old: 74 ms +/- 10.611 ms; New: 17 ms +/- 7.490 ms;
Test 200 nodes. Old: 149 ms +/- 13.397 ms; New: 37 ms +/- 9.592 ms;
Test 300 nodes. Old: 227 ms +/- 12.745 ms; New: 57 ms +/- 10.110 ms;
Test 400 nodes. Old: 307 ms +/- 13.166 ms; New: 81 ms +/- 10.890 ms;
Test 500 nodes. Old: 385 ms +/- 16.531 ms; New: 103 ms +/- 9.490 ms;
Test 600 nodes. Old: 467 ms +/- 18.128 ms; New: 128 ms +/- 12.157 ms;
;;;","27/Apr/16 14:46;tledkov-gridgain;The results of the test with backups = 2, pairs of neighbors nodes, and option excludeNeighbors=true.
(The new implementation contains minor performance fixes)

Test 100 nodes. Old: 78 ms +/- 10.406 ms; New: 15 ms +/- 6.390 ms;
Test 200 nodes. Old: 154 ms +/- 13.137 ms; New: 34 ms +/- 8.860 ms;
Test 300 nodes. Old: 233 ms +/- 13.691 ms; New: 56 ms +/- 11.526 ms;
Test 400 nodes. Old: 316 ms +/- 16.706 ms; New: 78 ms +/- 10.508 ms;
Test 500 nodes. Old: 397 ms +/- 19.009 ms; New: 105 ms +/- 10.445 ms;
Test 600 nodes. Old: 475 ms +/- 19.000 ms; New: 133 ms +/- 12.245 ms;

The results looks like the effect of minor performance fixes is within the measurement error.;;;","27/Apr/16 17:20;dsetrakyan;Hi Taras, the results look very promising.  Can you explain the reason why we depend on the number of nodes at all here? Why is the time not the same for 100 and 600 nodes?;;;","28/Apr/16 07:40;tledkov-gridgain;Dmitriy, because current implementation sorts the list of hash(partition_number, Node). The list size == nodes_count. Also quantity of such lists equals partitions count.

So the algorithm sorts partitions_count lists.;;;","29/Apr/16 09:42;tledkov-gridgain;I propose to switch algorithm to bucket based in case of large node count.
It can improve performance of affinity function for large node count.;;;","04/May/16 12:52;tledkov-gridgain;The results of the test the bucket based implementation:

Test 63 nodes. Old: 49 ms +/- 10.377 ms; New: 2 ms +/- 5.966 ms; <-- the threshold nodes count to switch on bucket based calculation
Test 100 nodes. Old: 77 ms +/- 10.279 ms; New: 1 ms +/- 2.149 ms;
Test 200 nodes. Old: 154 ms +/- 13.921 ms; New: 1 ms +/- 2.165 ms;
Test 300 nodes. Old: 233 ms +/- 14.627 ms; New: 1 ms +/- 2.675 ms;
Test 400 nodes. Old: 314 ms +/- 16.676 ms; New: 2 ms +/- 2.520 ms;
Test 500 nodes. Old: 397 ms +/- 18.704 ms; New: 2 ms +/- 2.775 ms;
Test 600 nodes. Old: 477 ms +/- 18.628 ms; New: 2 ms +/- 2.841 ms;
;;;","04/May/16 15:14;tledkov-gridgain;Please take a look at the attached heatmaps. The node distributions of affinity function with MD5 hash & Wang hash with bucket based algorithm are compared for 3, 64, 100, 128, 200, ..., 600 nodes.

Horizontally: node's order (primary node, backup0, backup 1);
Vertically: all nodes from topology;
Z-order: count of node is placed in the specified order (e.g. node is primary nodes) for all partitions.
;;;","05/May/16 00:00;dsetrakyan;Taras, I am not sure what these heat maps represent, but I do like the performance results. Can we rerun them together with latest Ignite master to get the complete performance picture?;;;","05/May/16 07:28;tledkov-gridgain;Sure, but I don't catch 'complete performance picture'. Do you mean a specific benchmark?;;;","29/Dec/16 14:00;tledkov-gridgain;I've implemented two realization of the rendezvous affinity function:
- One is the full compatible with current and contains several performance fix (the recommendations for this fix are described at the IGNITE-3905 by Andrey & Alex). 
- Another is based on 32/64 bits Wang/Jenkins hash and build-in hashCode() for ClusterNode hash object for instead of MD5 (see above).

Also *Fair* affinity function is benchmarking together.

The results look like {{FairAffinityFunction}} provides the best performance for large nodes count.

Benchmark case: create base topology contains N nodes and change topology: add/remove one node.

|| Nodes ||      Fair          ||    Rendezvous (old)       ||    Rendezvous (compat)   ||     FastRendezvous   ||
|*10*    | 9.7 ms +/- 21.020 ms |  5.6 ms +/- 3.551 ms       | 5.3 ms +/- 3.674 ms      | 1.4 ms +/- 1.391 ms    |
|*100*   | 1.1 ms +/- 2.035 ms  |  52.3 ms +/- 9.569 ms      | 37.0 ms +/- 8.756 ms     | 5.2 ms +/- 3.468 ms    |
|*200*   | 0.9 ms +/- 1.202 ms  |  105.8 ms +/- 8.682 ms     | 75.1 ms +/- 12.888 ms    | 9.0 ms +/- 4.026 ms    |
|*300*   | 1.5 ms +/- 2.194 ms  |  163.8 ms +/- 13.147 ms    | 111.8 ms +/- 14.388 ms   | 14.1 ms +/- 6.257 ms   |
|*400*   | 2.0 ms +/- 2.447 ms  |  222.2 ms +/- 15.378 ms    | 146.9 ms +/- 12.616 ms   | 18.9 ms +/- 7.656 ms   |
|*500*   | 1.1 ms +/- 1.010 ms  |  283.5 ms +/- 15.329 ms    | 184.5 ms +/- 12.529 ms   | 22.5 ms +/- 7.070 ms   |
|*600*   | 4.3 ms +/- 2.887 ms  |  345.2 ms +/- 19.667 ms    | 223.9 ms +/- 15.834 ms   | 28.2 ms +/- 8.213 ms   |

;;;","17/Feb/17 12:51;tledkov-gridgain;[~yzhdanov], [~sboikov] , please review the [patch|https://github.com/apache/ignite/pull/684].;;;","21/Feb/17 09:54;tledkov-gridgain;Waits for TC [test results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F684%2Fhead] after removing back compatibility for {{RendezvousAffinityFunction}}.;;;","22/Feb/17 13:47;tledkov-gridgain;Chi^2 test:

|| Nodes ||  Fair   ||  Rendezvous (old)    ||   FastRendezvous   ||
|*5*     | 0.000004 | 0.003618    |  0.002531 |
|*64*    | 0.000000 | 0.063599    | 0.077637  |
|*100*   | 0.001740 | 0.113892    | 0.115036  |
|*128*   | 0.000000 | 0.121094    | 0.125732  |
|*200*   | 0.004028 | 0.203918    | 0.216888  |
|*256*   | 0.000000 | 0.248535    | 0.269531  |
|*300*   | 0.020813 | 0.280594    | 0.287460  |
|*400*   | 0.037598 | 0.361847    | 0.396179  |
|*500*   | 0.010895 | 0.501083    | 0.504898  |
|*600*   | 0.071167 | 0.589584    | 0.617050  |
;;;","27/Feb/17 09:50;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/684
;;;","27/Feb/17 09:51;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1575

    IGNITE-3018: RendezvousAffinityFunction performance tuning

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3018

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1575.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1575
    
----
commit ed35a9eb6f02771c5996209a1e19a4b0557309b6
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-02-27T09:49:31Z

    IGNITE-3018: RendezvousAffinityFunction performance tuning

----
;;;","27/Feb/17 09:55;tledkov-gridgain;Pull request: [PR 1575|https://github.com/apache/ignite/pull/1575]
Code review: [IGNT-CR-107|http://reviews.ignite.apache.org/ignite/review/IGNT-CR-107];;;","07/Mar/17 13:19;tledkov-gridgain;Tests [results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1600%2Fhead] with partition balancer. Partition balancer try to make partition distribution closer to even distribution.;;;","15/Mar/17 13:32;tledkov-gridgain;Core review with partitions balancer: [IGNT-CR-137|http://reviews.ignite.apache.org/ignite/review/IGNT-CR-137];;;","21/Mar/17 11:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1575
;;;","27/Mar/17 14:04;tledkov-gridgain;TC [results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1647%2Fhead]

Tests results are OK with me. I don't see significant difference of the tests results between the master branch and the patch.;;;","10/Apr/17 15:10;tledkov-gridgain;Average count of primary partitions to migrate when one node leaves (test does about 100 topology changes, AF configured with 1K partitions).
NB: For pure-Rendezvous AF this value is 0.0.
For FairAF this value  <1.0 

|| Nodes ||      Parts to migrate          ||
| 2   | 13.8 |
| 3   | 13.4 |
| 4   | 18.1 |
| 6   | 17.5 |
| 8   | 16.8 |
| 10  | 19.4 |
| 64  | 26.3 |
| 100 | 6.1  |
| 200 | 3.8  |
| 300 | 3.9  |
| 400 | 2.7  |
| 500 | 0.6  |
| 600 | 1.8  |
;;;","11/Apr/17 08:18;yzhdanov;[~tledkov-gridgain], can you please update the table with migrating backups count. I am assuming that migration will result in actual rebalancing. E.g. if node A has primary partition # 1 on topology X and on X+1 it has it as a backup then no actual rebalancing happens.;;;","11/Apr/17 14:18;tledkov-gridgain;Tables below contains average count of partitions to rebalance (new assignment contains a node that doesn't exist in the previous assignment)
(2 backups, 1024 partitions)
|| Nodes ||      Fair (total)         ||     Fair (parts on stable nodes)         ||    Rendezvous (total)    ||Rendezvous (parts on stable nodes)    ||
| *3*  | 988.3|397.2 | 729.3 |  459.3 |
| *4*  | 790.7|563.1 | 638.3 |  392.3 |
| *6*  | 408.3|243.8 | 447.0 |  257.9 |
| *8*  | 322.8|195.8 | 380.2 |  235.7 |
| *10* | 270.8|156.2 | 314.1 |  194.7 |
| *64* | 47.2 |31.2  | 135.1 |  149.9 |

(2 backups, 10240 partitions)
|| Nodes ||      Fair (total)         ||     Fair (parts on stable nodes)         ||    Rendezvous (total)    ||Rendezvous (parts on stable nodes)    ||
| *100* | 324.7| 184.4| 570.5|425.1|
| *200* | 157.6| 96.6 | 769.1|692.6|
| *300* | 114.7| 62.3 | 935.7|285.9|
| *400* | 79.2 | 44.4 | 336.3|318.4|
| *500* | 63.0 | 34.9 | 277.3|256.7|
| *600* | 54.0 | 30.1 | 175.8|142.7|
;;;","12/Apr/17 12:22;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1779

    IGNITE-3018  Cache affinity calculation is slow with large nodes number

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3018

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1779.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1779
    
----
commit ed35a9eb6f02771c5996209a1e19a4b0557309b6
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-02-27T09:49:31Z

    IGNITE-3018: RendezvousAffinityFunction performance tuning

commit 3a6d17c2250158b54e3573af23b9b1534c3c8e92
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-02-27T10:57:36Z

    IGNITE-3018: fix review issues

commit db5512b65ce273d955ecd1c2381ade84491895ad
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-03-02T14:32:04Z

    Merge branch 'ignite-2.0' into ignite-3018

commit 163c05b6cea25aec0ca3b4ae4552338ed683631f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-12T12:18:14Z

    Merge branch '_master' into ignite-3018
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/cache/affinity/rendezvous/RendezvousAffinityFunction.java

commit 3695d960597a5fdbebf43bf9a3bb57f85f4f394b
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-12T12:18:57Z

    IGNITE-3018: special assignment calculation for replicated cache

commit 9dfed00ba8be7676dc427f329fb9f557f71d4d21
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-12T12:21:37Z

    IGNITE-3018: exchange fix

----
;;;","12/Apr/17 12:23;tledkov-gridgain;Patch without balancer: [PR1779|https://github.com/apache/ignite/pull/1779]
Branch {{ignite-3018}}
Waits for TC [results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1779%2Fhead];;;","13/Apr/17 11:56;yzhdanov;merged to master;;;","13/Apr/17 13:08;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/1779
;;;","21/Mar/18 12:16;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/1647
;;;",,,,,,,,,,,,,,
Fix GridGain references in Javadoc,IGNITE-3015,12959346,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,matthoffman,matthoffman,16/Apr/16 02:38,26/Apr/16 03:49,14/Jul/23 06:20,26/Apr/16 03:49,1.6,,,,,,,,,0,,,,"There are a number of references to GridGain classes still in Ignite's Javadoc, like GridCompute* and GridNode. 
Not a big deal, but kind of nice to clean up. 

discussed (briefly) here: http://apache-ignite-developers.2346864.n4.nabble.com/clean-up-some-GridGain-references-in-javadoc-td8488.html",,dmagda,githubbot,kuaw26,matthoffman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 26 03:49:50 UTC 2016,,,,,,,,,,"0|i2w7jj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Apr/16 02:42;githubbot;GitHub user matthoffman opened a pull request:

    https://github.com/apache/ignite/pull/650

    IGNITE-3015 - Clean up some GridGain references in Javadoc

    There's actually at least one instance here that isn't in javadoc:  [VisorTopologyCommand.scala]( https://github.com/apache/ignite/compare/master...matthoffman:fix-javadoc?expand=1#diff-42ef001f2f672329b5ff1f83ca68606dL155). A couple are in log messages, and the rest are in comments.
    
    I'm sure I didn't get them all, but it's at least a fair number.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/matthoffman/ignite fix-javadoc

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/650.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #650
    
----
commit 575358fa67983d539c1d515e7ff85fcfd93e821b
Author: Matt Hoffman <matt.hoffman@lucidworks.com>
Date:   2016-04-15T14:35:30Z

    Updating some outdated class names in javadoc.
    
    These include:
     - GridCompute* (removing the ""Grid"")
     - GridNode ( -> ClusterNode)

commit 4f2858e865360c8bb47e05b13a5785216f53788c
Author: Matt Hoffman <matt.hoffman@lucidworks.com>
Date:   2016-04-15T18:50:42Z

    Merge remote-tracking branch 'origin/master' into fix-javadoc

----
;;;","16/Apr/16 02:42;matthoffman;Pull request:  https://github.com/apache/ignite/pull/650;;;","26/Apr/16 03:48;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/650
;;;","26/Apr/16 03:49;kuaw26;Looks good. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
querySql sometimes fails in Ignite RDD embedded mode test,IGNITE-3009,12958846,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ascherbakov,ascherbakov,14/Apr/16 13:44,20/May/16 08:14,14/Jul/23 06:20,20/May/16 06:18,1.5.0.final,,,1.7,spark,,,,,0,,,,"JavaEmbeddedIgniteRDDSelfTest.testQueryObjectsFromIgnite
occasionally fails in the line 215 on the objectSql query

If a cache size request is made before query(currently code is commented), all works fine",,ascherbakov,githubbot,sboikov,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 20 08:14:52 UTC 2016,,,,,,,,,,"0|i2w4gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/16 09:32;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/734

    IGNITE-3009  querySql sometimes fails in Ignite RDD embedded mode test

    sets the overwrite=true data streamer's flag for the tests

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3009

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/734.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #734
    
----
commit 72dca2a7e9e2c9493e218cbb6ebd2600eb66fdcd
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-05-19T09:31:04Z

    IGNITE-3009  querySql sometimes fails in Ignite RDD embedded mode test; sets the overwrite=true data streamer's flag for the tests

----
;;;","19/May/16 09:33;tledkov-gridgain;Patch is available. Please take a look;;;","20/May/16 06:18;sboikov;Test was changed to use streamer with allowOverwrite=true to avoid known  issue with allowOverwrite=false on unstable topology (commit b6583fb3).;;;","20/May/16 08:14;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/734
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agent detection is not working in case of local deployment (DEV) with gulp connect,IGNITE-3008,12958809,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,kuaw26,kuaw26,14/Apr/16 11:25,15/Apr/16 07:00,14/Jul/23 06:20,15/Apr/16 02:55,1.6,,,1.6,wizards,,,,,0,,,,,,anovikov,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 15 07:00:37 UTC 2016,,,,,,,,,,"0|i2w48f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/16 02:55;anovikov;Add websocket proxy for gulp connect task.
Alexey, please check. Need execute npm install before.
;;;","15/Apr/16 07:00;kuaw26;Tested. Fix confirmed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement config variations test for ContinuousQueries,IGNITE-3004,12958744,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ntikhonov,sboikov,sboikov,14/Apr/16 06:44,20/May/16 11:17,14/Jul/23 06:20,20/May/16 09:55,,,,1.7,cache,,,,,0,,,,"Need implement test for continuous qeries with configuration variations. 
Make sure these points are covered (in addition to nodes number/cache modes and configuration paramers variaions):
- different key/values types (see IgniteConfigVariationsAbstractTest.runInAllDataModes)
- keepBinary mode
- with/without filters
- ContinuousQuery API and IgniteCache.registerCacheEntryListener
- async/sync listener and filter
- all cache update operations
- CacheEntryListenerConfiguration.isSynchronous true/false",,githubbot,ntikhonov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 20 10:01:09 UTC 2016,,,,,,,,,,"0|i2w3tz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Apr/16 15:23;ntikhonov;Added CacheContinuousQueryVariationsTest tests for this scenarios. Submitted task on TC.;;;","21/Apr/16 15:01;ntikhonov;Added test on asynhronus callbacks and suite on TC.;;;","17/May/16 13:00;githubbot;GitHub user ntikhonov opened a pull request:

    https://github.com/apache/ignite/pull/726

    IGNITE-3004 Added variations tests.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-3004

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/726.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #726
    
----
commit aac85f1dee54a1eb0e3df570f0b515590076a4a0
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-17T12:46:21Z

    IGNITE-3004 Added variations tests.

----
;;;","18/May/16 12:05;sboikov;Reviewed, my commetns:
- please also add single node test
- please rename IgniteContinuousQueryVarSuite -> IgniteContinuousQueryConfigVariationsSuite to be consistent with others suites
- correct fix for 'removeOffheap' in GridCacheMapEntry is call it after interceptor is called
;;;","19/May/16 17:14;ntikhonov;Thank you for your review!
I've fixed notes. Got green TC. Could you please look again?;;;","19/May/16 20:20;sboikov;Good to merge.;;;","20/May/16 10:01;githubbot;Github user ntikhonov closed the pull request at:

    https://github.com/apache/ignite/pull/726
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
It is allowable to set incorrect big value for Port range,IGNITE-2991,12958411,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,13/Apr/16 08:41,28/Apr/16 04:36,14/Jul/23 06:20,28/Apr/16 03:05,,,,1.6,wizards,,,,,0,,,,I think the maximum possible value should be set to 65535,,anovikov,mafanasiev,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Apr 28 04:36:49 UTC 2016,,,,,,,,,,"0|i2w1rz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/16 06:13;mafanasiev;Refactor ipaddress directive, added port and port range check.;;;","27/Apr/16 11:18;mafanasiev;Fixed bug with double "":"". For port value added check for integer.;;;","28/Apr/16 03:05;anovikov;Reviewed. Merged.;;;","28/Apr/16 04:36;pkonstantinov;Tested on staging.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Failed to update keys on primary node (UnsupportedOperationException).,IGNITE-2982,12958207,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,v.pyatkov,v.pyatkov,12/Apr/16 18:51,13/May/16 07:20,14/Jul/23 06:20,13/May/16 07:20,1.5.0.final,,,,,,,,,0,,,,"Batch of operation (putAll, removeAll, invokeAll) are failing when rebuild index.
{noformat}
java.lang.UnsupportedOperationException
	at org.apache.ignite.internal.binary.BinaryObjectOffheapImpl.cacheObjectType(BinaryObjectOffheapImpl.java:341)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2ValueCacheObject.getBytesNoCopy(GridH2ValueCacheObject.java:109)
	at org.h2.store.Data.getValueLen(Data.java:1001)
	at org.h2.store.Data.getValueLen(Data.java:878)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2KeyValueRowOffheap.onUnswap(GridH2KeyValueRowOffheap.java:256)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpdate(GridH2Table.java:425)
	at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update(GridH2Table.java:340)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.remove(IgniteH2Indexing.java:587)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.remove(GridQueryProcessor.java:1014)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.remove(GridCacheQueryManager.java:432)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.clearIndex(GridCacheMapEntry.java:3828)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:2429)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAtomicCache.java:2151)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1543)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1418)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.mapSingle(GridNearAtomicUpdateFuture.java:457)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.access$1400(GridNearAtomicUpdateFuture.java:72)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$UpdateState.map(GridNearAtomicUpdateFuture.java:931)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.mapOnTopology(GridNearAtomicUpdateFuture.java:417)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.map(GridNearAtomicUpdateFuture.java:283)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$21.apply(GridDhtAtomicCache.java:951)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$21.apply(GridDhtAtomicCache.java:949)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.asyncOp(GridDhtAtomicCache.java:691)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsync0(GridDhtAtomicCache.java:949)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.invokeAllAsync(GridDhtAtomicCache.java:802)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.invokeAll(GridDhtAtomicCache.java:730)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.invokeAll(IgniteCacheProxy.java:1605)
	at org.apache.ignite.internal.processors.cache.AtomicBinaryOffheapBatchTest.testBatchOperations(AtomicBinaryOffheapBatchTest.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1759)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
	at org.apache.ignite.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1697)
	at java.lang.Thread.run(Thread.java:745)
{noformat}
Cache contains more the one indexed types.
All configuration of cache:
{code}
<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
   <property name=""name"" value=""query-offheap"" />
   <property name=""cacheMode"" value=""PARTITIONED"" />
   <property name=""atomicityMode"" value=""ATOMIC"" />
   <property name=""swapEnabled"" value=""false"" />
   <property name=""memoryMode"" value=""OFFHEAP_TIERED"" />
   <property name=""indexedTypes"">
      <list>
         <value>java.lang.Integer</value>
         <value>org.apache.ignite.yardstick.cache.model.Organization</value>
         <value>java.lang.Integer</value>
         <value>org.apache.ignite.yardstick.cache.model.Person</value>
      </list>
   </property>
</bean>
{code}",,ascherbakov,dmagda,sboikov,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2952,"15/Apr/16 08:32;v.pyatkov;Main3.java;https://issues.apache.org/jira/secure/attachment/12798923/Main3.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 13 07:20:46 UTC 2016,,,,,,,,,,"0|i2w0in:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/16 04:55;dmagda;Vlad, as I see you already created a test that reproduces this issue - {{AtomicBinaryOffheapBatchTest}}.
Please add such important info to the ticket the next time so that the one who will be working on the ticket don't need to reproduce the issue on its own.

I would like to ask you to talk to [~ashutak] and add such a test for different cache configurations (cache modes, sync types, Externalizeble, Serializable, etc..) using our new test framework. This may help to reveal other issues.

Presently I removed {{AtomicBinaryOffheapBatchTest}} from the SQL test suite because it should be added to another one.;;;","14/Apr/16 05:03;dmagda;So, well this issue is reproduced only when several keys and values types are pre-configured for a single cache.;;;","15/Apr/16 08:17;v.pyatkov;This issue has reproduced even to define one indexed type. You can see this in attachment.;;;","15/Apr/16 08:32;v.pyatkov;Attachment has been updated.;;;","15/Apr/16 18:30;ascherbakov;Added non-threaded test reproducing the issue.
The issue seems to be related to enabled on-heap row cache.
https://github.com/ascherbakoff/ignite/commit/5ce7904cf548ba15519bac37841bd2fbf949710c;;;","30/Apr/16 10:48;ascherbakov;I've refactored attached code to several smaller tests repoducing some bad cache behavior then indexing is enabled. 
Was able to fix first of them.
Working on others.;;;","04/May/16 12:22;ascherbakov;Started the discussion on the dev list with the topic ""Cache errors with enabled indexing""
to clarify next steps on this issue.;;;","06/May/16 13:55;ascherbakov;Submitted patch for batch remove fix.;;;","12/May/16 12:12;ascherbakov;Refactored tests to single and multiple cache value types.;;;","12/May/16 12:50;sboikov;Reviewed changes, more correct fix it to check that BinaryObjectOffheapImpl is not passed to indexing in GridCacheMapEntry (fixed this). Need check TC.;;;","13/May/16 07:20;sboikov;Merged into ignite-1.6 (commit b4a5d37).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Download page must not link to snapshots / nightly builds,IGNITE-2980,12958098,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,sebb,sebb,12/Apr/16 12:48,18/Aug/16 15:54,14/Jul/23 06:20,13/Apr/16 13:48,,,,,,,,,,0,,,,"Nightly builds / snapshots which are not formal releases should not be linked from the main download page.

Such builds have not been voted on and should only be used by developers who should be made aware that the code is without any guarantees,

Nightly builds are not formal ASF releases, and must not be promoted to the general public.

See [1] second para. The second sentence states:

""Do not include any links on the project website that might encourage non-developers to download and use nightly builds, snapshots, release candidates, or any other similar package.""

[1] http://www.apache.org/dev/release.html#what
",https://ignite.apache.org/download.cgi#apache_ignite_nighly_download,avinogradov,dsetrakyan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 26 00:56:09 UTC 2016,,,,,,,,,,"0|i2vzuf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Apr/16 13:01;avinogradov;Sebb,

Each release listed at https://ignite.apache.org/download.cgi passed ASF Vote process.
Even 1.0.0-RC3 and 1.5.0-b1.;;;","12/Apr/16 13:16;sebb;But not the following:

Jenkins Nightly Builds:

    last successful build
;;;","13/Apr/16 13:48;avinogradov;Download page fixed.;;;","25/Apr/16 23:41;dsetrakyan;Sebb, can we include a nightly build link with proper text around it, stating that it is not an official release of Ignite and is meant only for the developers?;;;","25/Apr/16 23:49;sebb;I don't think that is in the spirit of the guidance.

It's important that Nightly builds are not promoted to the general public, so they should be on pages that are clearly intended for developers only. The main download page is not such a page.;;;","25/Apr/16 23:51;dsetrakyan;Agree. We have a developer section on the website. Would it be OK to include it here? https://ignite.apache.org/community/contribute.html;;;","26/Apr/16 00:56;sebb;I think that would be OK, so long as there are plenty of warnings that the downloads are not tested etc and come with no guarantees.

It might be better to have a separate page linked from the contribute page.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: CacheQueriesTest.TestSqlQueryLocal fails sporadically on TC,IGNITE-2972,12957703,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ptupitsyn,ptupitsyn,11/Apr/16 13:26,12/Apr/16 12:10,14/Jul/23 06:20,12/Apr/16 12:10,1.6,,,1.6,platforms,,,,,0,,,,We run local query and expect the same result as from non-local query.,,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 12 12:10:26 UTC 2016,,,,,,,,,,"0|i2vxev:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Apr/16 14:58;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/633

    IGNITE-2972 .NET: Fix CacheQueriesTest.TestSqlQueryLocal sporadic failure

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2972

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/633.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #633
    
----
commit 407548f5f7ea1bdc6fac64798338cbb300abd374
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T14:29:29Z

    Fixing tests

commit d6416c82891bab74e2f114155502917e67261a0b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T14:34:02Z

    Fixing tests

commit 4f036ac8852c8c5bcdaac1552a792720eccd836b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T14:56:02Z

    Fix late affinity assignment

----
;;;","11/Apr/16 15:02;ptupitsyn;Actual fix is  {code}<property name=""lateAffinityAssignment"" value=""false""/>{code}
Late assignment causes different affinity results during rebalancing.

Other changes are minor fixes.;;;","12/Apr/16 12:10;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/633
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: CompiledQuery fails with embedded const parameters,IGNITE-2970,12957639,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,ptupitsyn,ptupitsyn,11/Apr/16 09:04,11/Apr/16 11:43,14/Jul/23 06:20,11/Apr/16 11:43,1.6,,,1.6,platforms,,,,,0,,,,"This works:
{code}
var qry = CompiledQuery.Compile((int x) => cache.Where(x => x.Key < x));
qry(5).GetAll();
{code}

And this fails:
{code}
var qry = CompiledQuery.Compile(() => cache.Where(x => x.Key < 5));
qry().GetAll();
{code}",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 11 11:43:02 UTC 2016,,,,,,,,,,"0|i2vx0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Apr/16 10:24;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/629

    IGNITE-2970 .NET: Fix CompiledQuery parameter validation

    All CompiledQuery parameters must come from the enclosing func arguments.
    Constants are not allowed. There was a shortcut for zero and one arg compiled query that excluded the validation.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2970

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/629.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #629
    
----
commit 4712730476e192fb841768ad62db91678c6aafcf
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T09:08:18Z

    IGNITE-2970 .NET: CompiledQuery fails with embedded const parameters

commit 49994810c1058490601e30f67e36257aa3e56f4f
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T09:21:19Z

    wip

commit 53a2515547dee7adb0ec97dd5bbee78622327a29
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T09:36:33Z

    wip

commit e6073468d71d97e318daacb3360cbadb480975d7
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T09:52:35Z

    wip

commit aa72ee49398e23a78b38ae9a611274483d9bf480
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T10:16:08Z

    wip

commit 027a1782e8a16d777438f73ae7fe8649c4680463
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T10:18:20Z

    wip

commit 8a23f4d0328b9397aac82347c2404c867b49efbf
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-11T10:19:27Z

    wip

----
;;;","11/Apr/16 10:26;ptupitsyn;Allowing constants within compiled query will unnecessarily complicate compilation.
This should not be a problem for users (rare use case, easy workaround). 

I've fixed validation check for zero and one arg compiled queries, so the exception is ""Error compiling query: all compiled query arguments should come from enclosing delegate"".;;;","11/Apr/16 11:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/629
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop tests: in case of Hadop download failure do not delete all the install directory,IGNITE-2966,12957213,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,iveselovskiy,iveselovskiy,08/Apr/16 13:42,11/Apr/16 09:57,14/Jul/23 06:20,11/Apr/16 09:57,1.6,,,1.6,hadoop,,,,,0,,,,"Hadoop distribution is downloaded automatically for Hadoop tests. Several download URLs are tried. In case of failure download is cleaned up and next URL is tried.
But due to bug in org.apache.ignite.testsuites.IgniteHadoopTestSuite , line 333  all the install directory is deleted, while only the component whose download is failed should be deleted.

Due to this problem tests fail on 'master' branch on public TC, e.g.: http://204.14.53.153/viewLog.html?buildTypeId=IgniteTests_IgniteHadoop&buildId=224064",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 08 13:50:20 UTC 2016,,,,,,,,,,"0|i2vudz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/16 13:50;iveselovskiy;https://github.com/apache/ignite/pull/626

fix tested on public TC. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to read class name from file on deserialization,IGNITE-2965,12957184,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,sboikov,sboikov,08/Apr/16 11:01,11/Apr/16 14:58,14/Jul/23 06:20,11/Apr/16 14:42,,,,1.6,general,,,,,0,,,,"I added test MarshallerCacheJobRunNodeRestartTest from time to reproducing error 'Failed to read class name from file' during during deserialization.

This is some issue with marshaller cache: it is updated usign putIfAbsent method, now its implementation has a race and sometimes it can exit before value is updated on backup node. As a workaround for marshaller cache I usggest using 'getAndPut' instead of 'putIfAbsent (just need implement 'tryGetAndPut' method which will not wait for topology changes).

Also let's make error message in MarshallerContextImpl.className more informative.",,avinogradov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 11 14:58:28 UTC 2016,,,,,,,,,,"0|i2vu7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/16 15:49;avinogradov;Implemented, waiting for TeamCity check.;;;","11/Apr/16 07:30;avinogradov;branch is ignite-2965;;;","11/Apr/16 14:06;sboikov;Reviewed, looks good.;;;","11/Apr/16 14:58;avinogradov;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Please delete old releases from mirroring system,IGNITE-2964,12957173,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,sebb,sebb,08/Apr/16 10:37,19/Aug/16 11:19,14/Jul/23 06:20,13/Apr/16 13:27,,,,,,,,,,0,,,,"To reduce the load on the ASF mirrors, projects are required to delete old releases [1]

Please can you remove all non-current releases?

Thanks!

[1] http://www.apache.org/dev/release.html#when-to-archive
",https://dist.apache.org/repos/dist/release/ignite/,avinogradov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 19 11:19:40 UTC 2016,,,,,,,,,,"0|i2vu53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Apr/16 12:12;avinogradov;Sebb, 

Currently we allow user to download all releases from some mirrors, not only from https://dist.apache.org/repos/dist/release/ignite/
Please see https://ignite.apache.org/download.cgi for details.
Is it possible to provide mirrors for https://archive.apache.org/dist/ignite/ ?;;;","12/Apr/16 12:33;sebb;The 3rd party mirrors cannot be expected to carry all versions of all ASF software.
The rule is therefore that only currently maintained releases are made available via the ASF mirror system.

Previous releases are always available from the archive server, but it is not expected that many people will need them.
Users should be directed to the currently maintained release(s).
The download page can link to archived releases, but it should be made clear that these are not the current recommended releases.

The https://dist.apache.org/repos/dist/release/ignite/ is *not* to be used for external downloads; it is only intended as a staging area for the ASF mirror system.;;;","13/Apr/16 13:27;avinogradov;Old releases deleted.
Download page updated.;;;","18/Aug/16 16:04;sebb;The download page has been updated to point to the archive server for releases before 1.7.0, but the download dist area still contains 1.6.0 and 1.5.0-final.

https://dist.apache.org/repos/dist/release/ignite/1.5.0.final/
https://dist.apache.org/repos/dist/release/ignite/1.6.0/

Please remove these.;;;","18/Aug/16 16:07;sebb;Also the download page still points to https://dist.apache.org/repos/dist/release/ignite/.

Downloads must use the ASF mirror system. See:

http://www.apache.org/dev/release-download-pages#links;;;","19/Aug/16 09:27;avinogradov;Sebb, 
- I removed previous releases.
- Updated download page
- Updated Release Process wiki: https://cwiki.apache.org/confluence/display/IGNITE/Release+Process;;;","19/Aug/16 11:19;sebb;Thanks! Looks good now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Schema Import has to use full class names in fields map.,IGNITE-2958,12956510,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ashutak,ashutak,06/Apr/16 14:37,27/Apr/16 06:37,14/Jul/23 06:20,10/Apr/16 16:30,,,,1.6,,,,,,0,community,,,"The issue based on the user thread: http://apache-ignite-users.70518.x6.nabble.com/Unexpected-SQL-error-when-running-sql-with-conditions-td3899.html.

{{CodeGenerator}} cuts of ""java.lang"" package for basic types. As a result SQL cannot understand a type of objects and queries like {{where id > 100}} failed with an exception like below
{noformat}
[17:31:32,325][ERROR][sys-#89%jdbc2.MineJdbcPreparedStatementSelfTest0%][GridMapQueryExecutor] Failed to send error message.
class org.apache.ignite.IgniteCheckedException: Failed to send message (node may have left the grid or TCP connection cannot be established due to firewall issues) [node=TcpDiscoveryNode [id=7a2ff77c-652c-4be6-b855-d1fdd53698e3, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:0], discPort=0, order=4, intOrder=4, lastExchangeTime=1459953091890, loc=false, ver=1.6.0#19700101-sha1:00000000, isClient=true], topic=TOPIC_QUERY, msg=GridQueryFailResponse [qryReqId=1, errMsg=class org.apache.ignite.IgniteCheckedException:Failed to execute SQL query.], policy=2]
	at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1290)
	at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1354)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.sendError(GridMapQueryExecutor.java:527)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onQueryRequest(GridMapQueryExecutor.java:501)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onMessage(GridMapQueryExecutor.java:184)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor$2.onMessage(GridMapQueryExecutor.java:159)
	at org.apache.ignite.internal.managers.communication.GridIoManager$ArrayListener.onMessage(GridIoManager.java:2039)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1219)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:847)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:105)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:810)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: class org.apache.ignite.IgniteCheckedException: Failed to execute SQL query.
		at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:832)
		at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:855)
		at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onQueryRequest(GridMapQueryExecutor.java:454)
		... 10 more
	Caused by: org.h2.jdbc.JdbcSQLException: Deserialization failed, cause: ""class org.apache.ignite.binary.BinaryObjectException: Not enough data to read the value [position=1, requiredBytes=4, remainingBytes=0]""; SQL statement:
SELECT
ID __C0
FROM """".ACTIVITY
WHERE ID > 10 [90027-175]
		at org.h2.message.DbException.getJdbcSQLException(DbException.java:332)
		at org.h2.message.DbException.get(DbException.java:161)
		at org.h2.util.Utils.deserialize(Utils.java:413)
		at org.h2.value.ValueJavaObject$NotSerialized.getObject(ValueJavaObject.java:162)
		at org.h2.value.ValueJavaObject$NotSerialized.compareSecure(ValueJavaObject.java:102)
		at org.h2.value.Value.compareTo(Value.java:921)
		at org.h2.engine.Database.compare(Database.java:320)
		at org.h2.expression.Comparison.compareNotNull(Comparison.java:283)
		at org.h2.expression.Comparison.getValue(Comparison.java:254)
		at org.h2.expression.Expression.getBooleanValue(Expression.java:180)
		at org.h2.command.dml.Select.queryFlat(Select.java:529)
		at org.h2.command.dml.Select.queryWithoutCache(Select.java:632)
		at org.h2.command.dml.Query.query(Query.java:297)
		at org.h2.command.dml.Query.query(Query.java:284)
		at org.h2.command.dml.Query.query(Query.java:36)
		at org.h2.command.CommandContainer.query(CommandContainer.java:91)
		at org.h2.command.Command.executeQuery(Command.java:196)
		at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:106)
		at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:829)
		... 12 more
	Caused by: class org.apache.ignite.binary.BinaryObjectException: Not enough data to read the value [position=1, requiredBytes=4, remainingBytes=0]
		at org.apache.ignite.internal.binary.streams.BinaryAbstractInputStream.ensureEnoughData(BinaryAbstractInputStream.java:300)
		at org.apache.ignite.internal.binary.streams.BinaryAbstractInputStream.readInt(BinaryAbstractInputStream.java:127)
		at org.apache.ignite.internal.binary.BinaryUtils.doReadFloatArray(BinaryUtils.java:1117)
		at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1541)
		at org.apache.ignite.internal.binary.GridBinaryMarshaller.deserialize(GridBinaryMarshaller.java:295)
		at org.apache.ignite.internal.binary.BinaryMarshaller.unmarshal(BinaryMarshaller.java:109)
		at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$5.deserialize(IgniteH2Indexing.java:1524)
		at org.h2.util.Utils.deserialize(Utils.java:392)
		... 28 more
Caused by: class org.apache.ignite.spi.IgniteSpiException: Destination node is not in topology: 7a2ff77c-652c-4be6-b855-d1fdd53698e3
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.reserveClient(TcpCommunicationSpi.java:2070)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage0(TcpCommunicationSpi.java:1958)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage(TcpCommunicationSpi.java:1924)
	at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1285)
	... 13 more
{noformat}

Also, we cannot use primitives as fields it will cause the same issue (like {{int}, {{long}}...). As I understand h2 cannot work with java primitives and wrappers should be used.",,ashutak,jan.swaelens,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 27 06:37:50 UTC 2016,,,,,,,,,,"0|i2vq27:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Apr/16 09:47;vsisko;Now full type name generated in query fields.
In query fields primitive types is replaced by conformity Java type.;;;","10/Apr/16 16:30;kuaw26;Looks good for me. Take a look on my changings and submit for QA to Pavel. ;;;","12/Apr/16 07:12;pkonstantinov;Tested generated XML and Java files.;;;","13/Apr/16 04:43;kuaw26;Merged to master. Please test and close.;;;","18/Apr/16 11:05;jan.swaelens;Hello, I managed to test this today (against my originally logged case) and can confirm that this is working now as expected.
Thank you very much.;;;","27/Apr/16 06:37;pkonstantinov;Tested in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Read-through doesn't work for OFFHEAP_TIRED when eviction or expire policy is used,IGNITE-2954,12956439,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,dmagda,dmagda,06/Apr/16 09:29,13/May/16 18:09,14/Jul/23 06:20,13/May/16 18:09,1.5.0.final,,,1.6,cache,,,,,0,important,,,"{{IgniteCacheReadThroughEvictionOffheapTiredSelfTest}} fails for several test cases.

In general we have to add all possible permutations to validate that the read-through works fine for cases when an entry is evicted/removed :
- expire policy;
- eviction policy;
- remove.withSkipStore()",,agoncharuk,dmagda,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 13 18:09:45 UTC 2016,,,,,,,,,,"0|i2vpmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Apr/16 22:05;githubbot;GitHub user agoncharuk opened a pull request:

    https://github.com/apache/ignite/pull/634

    IGNITE-2954 - Added tests for various read-through scenarios

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/agoncharuk/ignite ignite-2954

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/634.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #634
    
----
commit c0f64277ff7199e7a096a61b4b18996b660e39ce
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-04-11T22:03:12Z

    IGNITE-2954 - Added tests for various read-through scenarios

----
;;;","12/May/16 09:19;dmagda;[~agoncharuk], have you merged the fix and tests related to the issue into the master?

If you don't please merge it into the ignite-1.6 and after do a merge from ignite-1.6 into the master.;;;","13/May/16 18:09;agoncharuk;Merged to ignite-1.6 and master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cluster is unstable when there are more than 500 clients,IGNITE-2951,12956398,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vkulichenko,vkulichenko,vkulichenko,06/Apr/16 06:42,07/Apr/16 22:04,14/Jul/23 06:20,07/Apr/16 22:04,1.5.0.final,,,1.6,general,,,,,0,,,,"To reproduce:

# Start three servers with 4GB heap.
# Start 500 clients on parallel.

Server nodes will eventually run out of memory of fail with various exceptions in discovery.",,agoncharuk,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Apr 07 21:46:44 UTC 2016,,,,,,,,,,"0|i2vpdb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Apr/16 21:27;vkulichenko;The following is done:

* Removed serialization buffer from discovery message worker. This fixed OOM issues.
* Fixed race in continuous processor. {{clientInfos}} map was not copied before adding to the message. This could cause concurrent serialization and modification.

Changes are committed to master: https://github.com/apache/ignite/commit/5e266153707021a8866e91dfa3f958066f80fc99;;;","07/Apr/16 21:46;agoncharuk;Changes look good to me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryContext doesn't honor custom loader set through IgniteConfiguration.classLoader,IGNITE-2947,12956091,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dmagda,dmagda,dmagda,05/Apr/16 08:28,06/May/16 21:25,14/Jul/23 06:20,06/May/16 21:25,1.5.0.final,,,1.6,binary,,,,,0,community,important,,"If to register a specific object with {{BinaryTypeConfiguration}} setting its {{typeName}} and load Class of objects of this type using a custom class loader passed to {{IgniteConfiguration.classLoader}} then at {{BinaryContext}} initialization time the context will not properly register this {{BinaryTypeConfiguration}} because it doesn't suppose that the Class of the type can be loaded by the custom class loader

In the code below {{Class.forName}} has to use {{IgniteConfiguration.classLoader}} if the latest is set and fall back to {{dfltLdr}} otherwise.

{noformat}
    @SuppressWarnings(""ErrorNotRethrown"")
    public void registerUserType(String clsName,
        BinaryInternalMapper mapper,
        @Nullable BinarySerializer serializer,
        @Nullable String affKeyFieldName,
        boolean isEnum)
        throws BinaryObjectException {
        assert mapper != null;

        Class<?> cls = null;

        try {
            cls = Class.forName(clsName);
        }
        catch (ClassNotFoundException | NoClassDefFoundError ignored) {
            // No-op.
        }
{noformat} 

Also there are several conditions in {{BinaryContext}} that are done for {{dfltLdr}}. The same conditions have to be executed for {{IgniteConfiguration.classLoader}}.",,agoncharuk,avinogradov,dmagda,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 06 21:25:40 UTC 2016,,,,,,,,,,"0|i2vnhb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/16 08:41;avinogradov;Reviewed by Denis;;;","06/Apr/16 08:42;avinogradov;merged to master;;;","07/Apr/16 09:29;dmagda;Changes looked good to me.;;;","07/Apr/16 11:53;avinogradov;Found that fix is not full. 
Class loaded by external classloader is not stores at appropriate places.
Usage of U.resolveClassLoader(igniteCfg); should solve this.

Fix: https://github.com/apache/ignite/pull/618/commits/799e0806ce20da4ea3b6c9d81ef7b1bacd0bcfb5

;;;","08/Apr/16 10:09;avinogradov;Improved test found that this case is not work for classes loaded by default classloader in case user classloader set.

Written complex test and suggested solution idea (not work because marshaller cache is not ready at node start)
https://github.com/apache/ignite/pull/620/commits/e398c18efe46ce7bf9fdd65442ea8ea75f47fc53

Fixed by Denis by spliting cacheTypes to store separately classes from user and default classloader
https://github.com/apache/ignite/pull/620/commits/6383694a71d3bfd9f844615e44617d686bf7aaa7

Alexey also suggest another fix for my solution ( https://github.com/apache/ignite/pull/620/commits/e398c18efe46ce7bf9fdd65442ea8ea75f47fc53 )
""There is a 'registered' flag in BinaryClassDescriptor that is for some reason set to true in the method that registers configuration-defined types. I believe it should be changed to 'false' since class name is not registered in marshaller context, then it would register the class name during the first serialization. If I change it to 'false', deserialization starts to work in your test, however it fails later on some assertion. Please take a look.""

Going to check it.;;;","08/Apr/16 12:21;avinogradov;Checked Alexey's suggestion 
https://github.com/apache/ignite/pull/624/commits/e6b8e6461a1f3e47b0c6e56be62789fb1a4f1ee0

See no failures. Scheduled TC to check fix.;;;","08/Apr/16 12:39;dmagda;Anton, the fix is not full. You have to merge it at least with my changes.
If run GridBinaryMarshallerCtxDisabledSelfTest with custom loader set in the configuration then the test should fail (see this from your changes).

In any case presently BinaryClassDescriptor with custom serializer and mapper has to be placed in ""userType"" map of every node. Otherwise BinaryConfiguration will mismatch and we should raise (?) an exception on node join.
Thus there is actually no reason to register class in the marshaller context as Alex suggested because every node will already have it in ""userMap"".

If I'm wrong in some point I would discuss this the next week in order to rework the implementaiton further if needed.;;;","08/Apr/16 12:50;avinogradov;Denis, 
GridBinaryMarshallerCtxDisabledSelfTest did not fail after I put
cfg.setClassLoader(getExternalClassLoader());
at org/apache/ignite/internal/binary/GridBinaryMarshallerCtxDisabledSelfTest.java:50;;;","08/Apr/16 12:53;dmagda;Please try to load {{SimpleObject}} used in the test with the custom loader and work with its instance.;;;","08/Apr/16 13:24;avinogradov;Correct, I see failures even if user classloader specified at 
org/apache/ignite/internal/binary/GridBinaryMarshallerCtxDisabledSelfTest.java:70;;;","09/Apr/16 07:34;dmagda;Anton, I have an idea how all this stuff can be fixed once and for all the cases (default loader, configuration loader, deployment loaders).  This can be done at the level of {{MarshallerContextAdapter}} and after that we should be able to get rid off {{BinaryContext.userTypes}} map at all.

Presently {{MarshallerContextAdapter.registerClass()}} doesn't put ""typeId""->""clsName"" mapping to local node map if the registration failed at the cache level. We can always put the mapping (""clsName"",registered) to that map in {{MarshallerContextAdapter}}. After that {{MarshallerContextAdapter.getClass(typeId)}} will always return a class even in tests like {{GridBinaryMarshallerCtxDisabledSelfTest}}.  When {{MarshallerContextAdapter.registerClass()}} is called the next time it will check ""registered"" flag in addition registering the mapping if it has not been done before. 

At the level of {{BinaryContext}} we can use Alexe's suggestion plus remove rudimental ""userTypes"" map. However after removing ""userTypes"" map we should run the benchmarks.;;;","04/May/16 07:49;avinogradov;Denis, please note that master branch currently contains no fixes related to this issue.;;;","04/May/16 16:03;dmagda;- Added the test that fails when IgniteConfiguration.classLoader behaves like an OSGI sweeping class loader
- Setting ""registered"" flag to false for class descriptors of types passed through BinaryTypeConfiguration. Fixed the bug with OSGi like sweeping class loader;

However, there are some other weak places in the code that may not work with OSGi like class loaders. Need more time for investigation and fixing.;;;","05/May/16 05:39;dmagda;Got rid off {{cachedTypes}} map from {{BinaryContext}} and simplified the implementation. Presently there should be no issues with custom loaders set through IgniteConfiguration.classLoader.

Checking changes with TC.;;;","05/May/16 21:01;dmagda;TC looks good. [~agoncharuk] please take a look at the changes that are incorporated in IGNITE-2947 branch.;;;","06/May/16 06:40;vozerov;Changes looks good to me.;;;","06/May/16 06:43;dmagda;Thanks Vladimir. Will run the benchmarks before merging the changes.;;;","06/May/16 21:25;dmagda;Merged to master, no performance drop.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Fix cache store error propagation,IGNITE-2943,12955704,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,04/Apr/16 08:35,13/Jan/17 18:27,14/Jul/23 06:20,18/Aug/16 15:14,1.1.4,,,1.8,platforms,,,,,0,.net,,,Make sure that exceptions in any ICacheStore methods are propagated to the user code properly.,,githubbot,isapego,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 13 18:27:02 UTC 2017,,,,,,,,,,"0|i2vl3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Apr/16 13:22;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/606

    IGNITE-2943 .NET: Fix cache store error propagation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2943

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/606.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #606
    
----
commit 1b8018a424fd4584a50513ca2d47a3ac7fb6e136
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T14:10:55Z

    IGNITE-2943 .NET: Fix cache store error propagation

commit d4123c873961ef8cdcadc0dc65d7bc2e68bf51e8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T14:13:04Z

    wip

commit 8af3e79d6ada529d33c6b92c6118b7efdeabbc1b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T15:54:42Z

    wip

commit 60b68efe616e304473895bee9dcf9b9360ced8d9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T15:59:03Z

    wip

commit 991a077f350d8136b8bc70dd0a42a05a880b2ac9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T16:11:16Z

    wip

commit 7756e155599687f3d07bb17aadffe779d869ccda
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T09:28:35Z

    Merge remote-tracking branch 'remotes/upstream/master' into ignite-2943

commit 18e6f75704b1e5f69c46752fe61a0db891d694f9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T10:25:15Z

    Refactor PlatformCache error propagation

commit d89e5d62fbc9bb0c45cdc144f88138dd4a9e0317
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T12:22:00Z

    wip

commit 23c7661a925c7b761414bb1cf906e9f194d400d1
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T12:48:52Z

    wip

commit 3f770dd3b8e0dca08526ed3f776bf8e72d69fbb3
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:01:49Z

    wip

commit 66e62a97f288ca0d2aea4a397fb3eeddc5d2b789
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:05:50Z

    wip

commit df70025929ca8307b740adc1b6bd6250a8d0f9bb
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:06:38Z

    wip

commit 186e2b31b0b5706411aca357f3f69b7928be5336
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:09:40Z

    wip

----
;;;","06/Apr/16 12:18;ptupitsyn;* Used PlatformNativeException to propagate error
* Sync/async tests added
* sessionEnd causes cache breakage: IGNITE-2955;;;","11/Apr/16 14:06;vozerov;Pavel,

Fix looks too heavy to me. We should not degrade performance of normal operations to propagate error. E.g. {{void put(K, V)} definitely should not require creation of both in and out streams in normal case. 

We need to think about less intrusive solution to the problem.

Vladimir.;;;","12/Apr/16 09:30;ptupitsyn;You are right, there is a 20% performance drop in Apache.Ignite.Benchmarks put/get. 

We can reuse input stream in DoOutInOp to eliminate this overhead.;;;","26/Apr/16 11:30;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/672

    IGNITE-2943 .NET: Fix cache store error propagation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2943-new

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/672.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #672
    
----
commit 1b8018a424fd4584a50513ca2d47a3ac7fb6e136
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T14:10:55Z

    IGNITE-2943 .NET: Fix cache store error propagation

commit d4123c873961ef8cdcadc0dc65d7bc2e68bf51e8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T14:13:04Z

    wip

commit 8af3e79d6ada529d33c6b92c6118b7efdeabbc1b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T15:54:42Z

    wip

commit 60b68efe616e304473895bee9dcf9b9360ced8d9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T15:59:03Z

    wip

commit 991a077f350d8136b8bc70dd0a42a05a880b2ac9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T16:11:16Z

    wip

commit 7756e155599687f3d07bb17aadffe779d869ccda
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T09:28:35Z

    Merge remote-tracking branch 'remotes/upstream/master' into ignite-2943

commit 18e6f75704b1e5f69c46752fe61a0db891d694f9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T10:25:15Z

    Refactor PlatformCache error propagation

commit d89e5d62fbc9bb0c45cdc144f88138dd4a9e0317
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T12:22:00Z

    wip

commit 23c7661a925c7b761414bb1cf906e9f194d400d1
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T12:48:52Z

    wip

commit 3f770dd3b8e0dca08526ed3f776bf8e72d69fbb3
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:01:49Z

    wip

commit 66e62a97f288ca0d2aea4a397fb3eeddc5d2b789
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:05:50Z

    wip

commit df70025929ca8307b740adc1b6bd6250a8d0f9bb
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:06:38Z

    wip

commit 186e2b31b0b5706411aca357f3f69b7928be5336
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:09:40Z

    wip

commit 7822fc1791badf4deaaf0934cf826c4569653671
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:26:37Z

    wip

commit 467895e7a864c10e0f45ca4b7110482341dcaacf
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:41:37Z

    wip

commit 93d4d3b9f1b304fab780fec9441c6760a9d73e55
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:42:42Z

    wip

commit b0b1429a3fc2f4b7c6f2ba7293e6840324232d2d
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:47:03Z

    wip

commit 71b49a4bc719bebc0a9d37caa647ae94c21b6d4a
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:58:30Z

    wip

commit 116e322d039d0d6cfc3d381bbb4c011873b6ce5d
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:01:54Z

    Cache tests fixed

commit 27234bd7d1a9fc4070d2b694c269051ccf515610
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:04:32Z

    wip

commit 6f8dbedee637d6f008319d1d0968d12fdf49c1f0
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:39:51Z

    wip

commit 1a6b618fdd98cfc2d93e6f8ce7fce2de6d65a89b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:41:06Z

    wip

commit 72b1a359e6a9f9bf0cdf8a4a1e82ebd96e984bb5
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:42:09Z

    wip

commit 7d10cffb667a145bc3eb88922c72236d1b99edf6
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:45:36Z

    wip

commit 1da9d9a4b75cc1b678df3d6988f53b95e78b3e96
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:49:23Z

    wip

commit cb5114c52030686aa2ca4a3c4ba7b9064e9f281f
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:58:14Z

    wip

commit 04384dfcf398a8e165c0c9a270629a92a1dbed79
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T15:00:55Z

    wip

commit b4b98a19f33b909762bb2bb50fc7ac971c173fbb
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T15:02:49Z

    wip

commit 3400e4b2453fbdb4dbd2d877f3605b3768ad3603
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T15:04:04Z

    wip

commit fb805b753e9740e43e9c4fec4f73dd92747af5ad
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T16:08:11Z

    wip

----
;;;","26/Apr/16 15:38;ptupitsyn;I've moved all cache operations to reused stream mode. 
Benchmark results: 
* Put: unaffected
* Get: +10%
* GetAsync: 5% (because null result is indicated by return code now);;;","28/Apr/16 07:29;vozerov;Pavel,

It looks like CPP is broken after this change, isn't it? I move it to 1.7 as it is too dangerous for release.;;;","28/Apr/16 13:50;ptupitsyn;Looks like you've reviewed old PR606, please see new PR672.;;;","20/Jul/16 11:22;vozerov;Pavel,

I believe we should merge IGNITE-1433 to master first, and then apply changes with stack traces here. 

Vladimir.;;;","05/Aug/16 08:09;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/606
;;;","09/Aug/16 12:55;ptupitsyn;Merged with master, TC is fine.;;;","15/Aug/16 13:56;vozerov;Pavel, I am OK with patch, but:
1) Please fix styling issues in Java - missing blank lines between code lines in multiple places.
2) Confirm that there are not regressions in CPP suites.

Once p.1 and p.2 are done, patch can be merged safely.;;;","15/Aug/16 15:38;ptupitsyn;Igor, can you please help with C++ part? 
I've changed the way we pass data between platform and Java for cache operations, now single memory chunk is used for both input and output.

You can checkout PR672 to get my changes.;;;","17/Aug/16 14:33;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/965

    IGNITE-2943 .NET: Fix cache store error propagation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-2943

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/965.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #965
    
----
commit 1b8018a424fd4584a50513ca2d47a3ac7fb6e136
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T14:10:55Z

    IGNITE-2943 .NET: Fix cache store error propagation

commit d4123c873961ef8cdcadc0dc65d7bc2e68bf51e8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T14:13:04Z

    wip

commit 8af3e79d6ada529d33c6b92c6118b7efdeabbc1b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T15:54:42Z

    wip

commit 60b68efe616e304473895bee9dcf9b9360ced8d9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T15:59:03Z

    wip

commit 991a077f350d8136b8bc70dd0a42a05a880b2ac9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-04T16:11:16Z

    wip

commit 7756e155599687f3d07bb17aadffe779d869ccda
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T09:28:35Z

    Merge remote-tracking branch 'remotes/upstream/master' into ignite-2943

commit 18e6f75704b1e5f69c46752fe61a0db891d694f9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T10:25:15Z

    Refactor PlatformCache error propagation

commit d89e5d62fbc9bb0c45cdc144f88138dd4a9e0317
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T12:22:00Z

    wip

commit 23c7661a925c7b761414bb1cf906e9f194d400d1
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T12:48:52Z

    wip

commit 3f770dd3b8e0dca08526ed3f776bf8e72d69fbb3
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:01:49Z

    wip

commit 66e62a97f288ca0d2aea4a397fb3eeddc5d2b789
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:05:50Z

    wip

commit df70025929ca8307b740adc1b6bd6250a8d0f9bb
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:06:38Z

    wip

commit 186e2b31b0b5706411aca357f3f69b7928be5336
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:09:40Z

    wip

commit 7822fc1791badf4deaaf0934cf826c4569653671
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:26:37Z

    wip

commit 467895e7a864c10e0f45ca4b7110482341dcaacf
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:41:37Z

    wip

commit 93d4d3b9f1b304fab780fec9441c6760a9d73e55
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:42:42Z

    wip

commit b0b1429a3fc2f4b7c6f2ba7293e6840324232d2d
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:47:03Z

    wip

commit 71b49a4bc719bebc0a9d37caa647ae94c21b6d4a
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T13:58:30Z

    wip

commit 116e322d039d0d6cfc3d381bbb4c011873b6ce5d
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:01:54Z

    Cache tests fixed

commit 27234bd7d1a9fc4070d2b694c269051ccf515610
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:04:32Z

    wip

commit 6f8dbedee637d6f008319d1d0968d12fdf49c1f0
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:39:51Z

    wip

commit 1a6b618fdd98cfc2d93e6f8ce7fce2de6d65a89b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:41:06Z

    wip

commit 72b1a359e6a9f9bf0cdf8a4a1e82ebd96e984bb5
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:42:09Z

    wip

commit 7d10cffb667a145bc3eb88922c72236d1b99edf6
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:45:36Z

    wip

commit 1da9d9a4b75cc1b678df3d6988f53b95e78b3e96
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:49:23Z

    wip

commit cb5114c52030686aa2ca4a3c4ba7b9064e9f281f
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T14:58:14Z

    wip

commit 04384dfcf398a8e165c0c9a270629a92a1dbed79
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T15:00:55Z

    wip

commit b4b98a19f33b909762bb2bb50fc7ac971c173fbb
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T15:02:49Z

    wip

commit 3400e4b2453fbdb4dbd2d877f3605b3768ad3603
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T15:04:04Z

    wip

commit fb805b753e9740e43e9c4fec4f73dd92747af5ad
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-05T16:08:11Z

    wip

----
;;;","17/Aug/16 15:28;isapego;Pavel,

I've adjusted C++ part.;;;","18/Aug/16 15:14;ptupitsyn;Thanks Igor. TC is fine. Merged to master.;;;","18/Aug/16 15:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/672
;;;","13/Jan/17 18:27;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/965
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Use getOrStart in IgniteContext instead of current try-catch structure,IGNITE-2942,12955411,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,agoncharuk,agoncharuk,01/Apr/16 20:29,19/Apr/16 04:13,14/Jul/23 06:20,15/Apr/16 13:06,1.5.0.final,,,,spark,,,,,0,,,,"IgniteContext initialization code will throw an IgniteIllegalStateException in a case when configuration is invalid: start() will throw an exception, exception is caught and, assuming that Ignite instance is already started, Ignition.ignite() is called again.
Need to use getOrStart() method instead.",,agoncharuk,ascherbakov,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2941,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 19 04:12:55 UTC 2016,,,,,,,,,,"0|i2vjan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/16 09:55;ascherbakov;The task is about to be finished. Waiting for TC results right now.

Ignite context currently uses method getOrStart which was added as requested in IGNITE-2941.
In addition to that, I found some other issues.

1) JavaIgniteContext had no option to be used in embedded mode.
Flag ""client"" was not available in the constructor. Added it.

2) Added option to stop all Ignite instances from the driver program.
IgniteContext.close(shutdownIgniteOnWorkers: Boolean = false)
Has no effect on workers

3) There was no test for embedded mode Spark integration.
Added JavaEmbeddedIgniteRDDSelfTest.
The main idea of test is to start Spark in local workers mode, run Ignite on
worker threads ( each thread uses it's own grid instance ), do some grid operations,
shutdown Ignite on workers and the spark context afterwards.;;;","15/Apr/16 13:06;ascherbakov;TC passed.;;;","19/Apr/16 04:12;dmagda;Thanks for the contribution. Reviewed final changes and merged into the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add getOrStart method to ignition,IGNITE-2941,12955410,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,agoncharuk,agoncharuk,01/Apr/16 20:26,19/Apr/16 04:12,14/Jul/23 06:20,15/Apr/16 13:06,1.5.0.final,,,,general,,,,,0,,,,"Currently there is no way to atomically check if an Ignite instance with the given name is started and start it, if it was not started.",,agoncharuk,ascherbakov,dmagda,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2942,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 19 04:12:36 UTC 2016,,,,,,,,,,"0|i2vjaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/16 06:01;dmagda;Probably we should add boolean parameter like {{failIfStarted}} to {{IgnitionEx.start0()}}. If the flag is true (default) then everything will work as presently. Otherwise an existed (old) instance should be returned.

Tests has to be added as well to validate the functionality.;;;","11/Apr/16 14:53;githubbot;GitHub user ascherbakoff opened a pull request:

    https://github.com/apache/ignite/pull/631

    IGNITE-2941

    IGNITE-2941

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ascherbakoff/ignite ignite-2941

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/631.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #631
    
----
commit 84583756b1c49a78471877ee306fbd11f047ffeb
Author: ascherbakoff <alexey.scherbakoff@gmail.com>
Date:   2016-04-11T14:35:40Z

    IGNITE-2941

----
;;;","12/Apr/16 08:25;dmagda;Review notes.

1. Add your test to {{IgniteBasicTestSuite}}. 

2. Added minor comments in the pull request.;;;","12/Apr/16 21:36;ascherbakov;Fixed;;;","15/Apr/16 13:06;ascherbakov;TC passed.;;;","19/Apr/16 04:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/631
;;;","19/Apr/16 04:12;dmagda;Thanks for the contribution. Reviewed final changes and merged into the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: NuGet LINQPad sample does not work in x86 mode,IGNITE-2937,12955264,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ptupitsyn,ptupitsyn,01/Apr/16 10:41,11/Apr/16 11:37,14/Jul/23 06:20,11/Apr/16 11:36,1.6,,,1.6,platforms,,,,,0,,,,"* x64 requirement is still there
* NuGet TC build does not include x86 resource in Apache.Ignite.Core.dll http://ci.ignite.apache.org/viewLog.html?buildId=218981
* Need to run NuGet tests in both x86 and x64 modes",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 11 11:37:08 UTC 2016,,,,,,,,,,"0|i2vidz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Apr/16 11:51;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/596

    IGNITE-2937 .NET: Fix NuGet LINQPad sample

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2397

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/596.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #596
    
----
commit 71c5b44e78749bcb8a24df1565b124407969af65
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-01T11:42:49Z

    IGNITE-2937 .NET: NuGet LINQPad sample does not work in x86 mode

commit 68b63a3216a19e8e99bda6c7c66a576994b13e81
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-01T11:44:53Z

    Fix LINQPad example

commit 1fd26be9dec2c64dee6177a59255716c1f849b7c
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-04-01T11:48:19Z

    IGNITE-2937 Add AnyCPU config to NuGet tests

----
;;;","01/Apr/16 12:08;ptupitsyn;Build logic fixed, LinqPad example fixed, NuGet tests fixed.
Xmx issue in x86 mode will be fixed in IGNITE-2939

New NuGet build with tests in both modes: http://ci.ignite.apache.org/viewLog.html?buildId=219754;;;","11/Apr/16 11:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/596
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
On loading from oracle store incorrect type is returned,IGNITE-2936,12955243,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,01/Apr/16 09:02,28/Apr/16 03:31,14/Jul/23 06:20,04/Apr/16 03:20,1.6,,,1.6,,,,,,0,,,,"Table in Oracle database have column with type DATE. 
In cache for that column JDBC type configuration is configured for type java.sql.Date but returned value has type java.sql.Timestamp.
It is known issue of Oracle JDBC driver https://community.oracle.com/thread/2355464?tstart=0",,a.taini@gmail.com,jan.swaelens,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Apr 28 03:31:58 UTC 2016,,,,,,,,,,"0|i2vi9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Apr/16 10:41;vsisko;Added conversion of Timestamp to Date type. Extended test. ;;;","04/Apr/16 03:20;kuaw26;Pavel, please test with Oracle and other databases.

To test: create table with DATE field insert some rows. Try to load cache from database and execute SQL fields / SCAN queries from cache and check selected data types.;;;","04/Apr/16 10:31;pkonstantinov;Could you please specify a branch for testing? Is that a Ignite master or some other?;;;","04/Apr/16 10:45;pkonstantinov;I see, the branch is 2936.;;;","05/Apr/16 10:45;pkonstantinov;Installed and created a test database and table for:
- Oracle
- H2
- DB2
- MS SQL (in progress)

Left: MySQL, SQLLite, PostreSQL;;;","06/Apr/16 06:25;pkonstantinov;Successfully tested with the following DB's:
- Oracle
- DB2
- MS SQL
- H2
- PostgreSQL
- MySQL;;;","06/Apr/16 10:41;kuaw26;Merged to master. Please, retest and close if all OK.;;;","27/Apr/16 10:15;a.taini@gmail.com;Hi.
Can you confirm the branch? May it be IGNITE-2963 and not IGNITE-2936?;;;","28/Apr/16 03:31;pkonstantinov;Successfully re-tested in master with Oracle.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor cmd: alert does not react on condition switch,IGNITE-2930,12955181,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,01/Apr/16 04:06,11/May/16 11:46,14/Jul/23 06:20,06/May/16 11:41,1.6,,,1.6,wizards,,,,,0,,,," @tracel
{code:xml}
An alert register for ""-cc=gt2"", so that alert should be trigger when ""cc"" (total number of available CPUs in the grid"" is ""gt"" (greater than) 2.

However, I found alert keep trigger when ""cc"" become 1, here's the log showing a cluster of 3 nodes/CPUs, alert still triggerd after removing 2 nodes.

    03/30/16, 18:02:42 | Log started.
    03/30/16, 18:03:02 | H/N/C|3   |3   |3   |^...................|
    03/30/16, 18:03:11 | Alert [id=93d32fb5(@a1), spec=-r -t=15 -cc=gt2, created on=03/30/16, 18:03:10]
    03/30/16, 18:03:22 | H/N/C|3   |3   |3   |^...................|
    03/30/16, 18:03:27 | Alert [id=93d32fb5(@a1), spec=-r -t=15 -cc=gt2, created on=03/30/16, 18:03:10]
    03/30/16, 18:03:33 | H/N/C|2   |2   |2   |^...................|
    03/30/16, 18:03:32 | <visor> => NODE_LEFT: id8=ab8c9433, ip=0:0:0:0:0:0:0:1%lo
    03/30/16, 18:03:42 | H/N/C|1   |1   |1   |^...................|
    03/30/16, 18:03:43 | H/N/C|1   |1   |1   |^...................|
    03/30/16, 18:03:35 | <visor> => NODE_LEFT: id8=4c98fc66, ip=0:0:0:0:0:0:0:1%lo
    03/30/16, 18:03:43 | Alert [id=93d32fb5(@a1), spec=-r -t=15 -cc=gt2, created on=03/30/16, 18:03:10]
    03/30/16, 18:03:59 | Alert [id=93d32fb5(@a1), spec=-r -t=15 -cc=gt2, created on=03/30/16, 18:03:10]
    03/30/16, 18:04:02 | H/N/C|1   |1   |1   |^...................|
    03/30/16, 18:04:15 | Alert [id=93d32fb5(@a1), spec=-r -t=15 -cc=gt2, created on=03/30/16, 18:03:10]
    03/30/16, 18:04:23 | H/N/C|1   |1   |1   |^...................|
    03/30/16, 18:04:32 | Alert [id=93d32fb5(@a1), spec=-r -t=15 -cc=gt2, created on=03/30/16, 18:03:10]
    03/30/16, 18:04:43 | H/N/C|1   |1   |1   |^...................|
    03/30/16, 18:04:48 | Alert [id=93d32fb5(@a1), spec=-r -t=15 -cc=gt2, created on=03/30/16, 18:03:10]
    03/30/16, 18:04:50 | Log stopped.
{code}",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 11 11:46:39 UTC 2016,,,,,,,,,,"0|i2vhvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Apr/16 04:28;vsisko;Fixed argument of function type in condition checker.;;;","04/Apr/16 03:44;kuaw26;Pavel, please test with different conditions.;;;","14/Apr/16 08:39;pkonstantinov;Per-node alert should not be registered on visor's node (daemon node);;;","05/May/16 08:24;vsisko;Not reproduces. Please provide steps to reproduce.;;;","06/May/16 03:22;pkonstantinov;# Use branch 2930
# start ignite cluster with 2 nodes
# start visorcmd
# register alert: alert -r -t=5 -up=gt0
# start logging: log -l
# open work\visor\visor-log

observing:  three alerts, but should be only two
{code}
05/06/16, 10:17:21 | H/N/C|1   |2   |8   |^...................|
05/06/16, 10:17:25 | Alert [id=3e199a34(@a0), spec=-r -t=5 -ut=gt0, created on=05/06/16, 10:16:11]
05/06/16, 10:17:25 | Alert [id=3e199a34(@a0), spec=-r -t=5 -ut=gt0, created on=05/06/16, 10:16:11]
05/06/16, 10:17:25 | Alert [id=3e199a34(@a0), spec=-r -t=5 -ut=gt0, created on=05/06/16, 10:16:11]
05/06/16, 10:17:31 | Alert [id=3e199a34(@a0), spec=-r -t=5 -ut=gt0, created on=05/06/16, 10:16:11]
05/06/16, 10:17:31 | Alert [id=3e199a34(@a0), spec=-r -t=5 -ut=gt0, created on=05/06/16, 10:16:11]
05/06/16, 10:17:31 | Alert [id=3e199a34(@a0), spec=-r -t=5 -ut=gt0, created on=05/06/16, 10:16:11]

{code};;;","06/May/16 06:35;vsisko;Fixed in branch.;;;","06/May/16 11:41;kuaw26;Pavel, please test.;;;","10/May/16 10:45;pkonstantinov;Verified, please merge into a target branch.;;;","11/May/16 02:53;kuaw26;Merged into ignite-1.6 and master.
Please retest and close.;;;","11/May/16 11:46;pkonstantinov;Re-tested in 1.6;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteContext should not have type parameters,IGNITE-2929,12955120,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,F7753,vkulichenko,vkulichenko,31/Mar/16 22:37,04/Jul/16 18:17,14/Jul/23 06:20,04/Jul/16 18:16,1.5.0.final,,,1.7,,,,,,2,,,,"Currently implementation of {{SparkContext}} has type parameters {{[K, V]}} which means that all the RDDs that are created by a particular instance of context have to be of the same type.

Looks like type parameters on {{IgniteContext}} don't make much sense and should be removed. {{fromCache}} method should be parameterized instead.",,dmagda,F7753,githubbot,vkulichenko,vsidorova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jul 04 18:16:47 UTC 2016,,,,,,,,,,"0|i2vhhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/16 15:12;F7753;Hi，
   Val, I am working on this one.can you assign it to me?;;;","19/May/16 16:03;vkulichenko;Hi, feel free to assign tickets to yourself if you're working on them. If you don't have enough permissions, please write an email to dev@ list.;;;","20/May/16 08:07;F7753;Hi,
 Val, I did as you advised, and I can receive the mail just send now for vote for new release of apache ignite. 
 But I still do not have the permit to assign it to myself.;;;jira-users","20/May/16 12:16;vkulichenko;Write an email to the dev@ list and ask for permissions.;;;","20/May/16 16:23;F7753;I did tried two times , this the second time I write the email to dev@ignite.apache.org. And attached my uname. Is that all?;;;","21/May/16 15:14;githubbot;GitHub user f7753 opened a pull request:

    https://github.com/apache/ignite/pull/740

    [IGNITE-2929] IgniteContext should not have type parameters

    Currently implementation of `SparkContext` has type parameters `[K, V]` which means that all the RDDs that are created by a particular instance of context have to be of the same type.
    Type parameters on`IgniteContext` is removed.`fromCache` method is parameterized instead.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/f7753/ignite rdd-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/740.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #740
    
----
commit 069bcf448f2e09d7d7f0080b6803559661bc35af
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-05-21T15:07:02Z

    fix the wrong type parameters of IgniteContext

----
;;;","25/May/16 10:13;vkulichenko;PR looks good, but there is a discussion on the dev@ list regarding the API backward compatibility, which will be broken by this change. Will merge if we decide to proceed with the fix.;;;","04/Jul/16 18:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/740
;;;","04/Jul/16 18:16;vkulichenko;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: CacheLinqTest.TestDateTime fails on ToString,IGNITE-2923,12954926,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ptupitsyn,ptupitsyn,31/Mar/16 11:05,01/Apr/16 05:52,14/Jul/23 06:20,01/Apr/16 05:52,1.6,,,1.6,platforms,,,,,0,,,,"ToString maps to FormatDateTime SQL function, but does not specify time zone.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 01 05:52:53 UTC 2016,,,,,,,,,,"0|i2vgav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/16 12:33;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/591

    IGNITE-2923 .NET: Fix LINQ date formatting

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2923

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/591.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #591
    
----
commit 65fca7dd5b61a0e93991d34f5435aa0156da8e6a
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-31T12:13:35Z

    IGNITE-2923 .NET: CacheLinqTest.TestDateTime fails on ToString

commit 3474c983a9eb1109c9400fd1813bcefe839aab9a
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-31T12:16:13Z

    wip

commit bd79aa917802ff420edd6929187ac0492ae6b396
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-31T12:24:17Z

    wip

commit 2349283b8c9d020cb52cc79f8997cb06aefb9838
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-31T12:30:45Z

    fix date format

----
;;;","01/Apr/16 05:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/591
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ScanQueries over local partitions are not optimal,IGNITE-2921,12954747,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ashutak,dmagda,dmagda,30/Mar/16 20:18,16/May/16 13:40,14/Jul/23 06:20,16/May/16 13:40,1.5.0.final,,,1.6,cache,,,,,0,community,important,performance,"Presently scan queries over local partitions are not executed optimally. 

If to run a scan query over a specific partition (by setting {{query.setPartition(...)}} parameter and or {{query.setLocal(true)}}) and start iterating over entries we will see that the Thread, that iterates over the data, waits for some event to happen.

In fact the Thread waits while a system pool's thread prepares an iterator with entries for it and only after that iterates over the returned result set. The flow looks this way:
- {{GridCacheLocalQueryFuture}} is created;
- when {{QueryCursor.iterator().next}} is called from the app thread (the Thread above), {{GridCacheLocalQueryFuture.execute()}} methods puts closure that will prepare content for the iterator in the system pool.
-  a system Thread execute {{GridCacheQueryManager.runQuery()}} reading all the entries from partition and passing them back to the Thread at line 1553 by calling {{onPageReady(...)}} method.

The other bottleneck is that a system thread gets all the entries and passes them to the Thread which will lead to more garbaged Java heap especially if cache is {{OFFHEAP_TIRED}}.

Run attached test ({{ScanQueryStuff}}) and you will see with Visual VM that most of the time the test spends executing the code from system threads.

Finally, what have to be done:
- if ScanQuery is supposed to be executed locally (setPartition() refers to local partition or setLocal is set to true) then the calling application thread has to iterate over the data avoiding usage of the system pool;
- internal code mustn't read all entries from a partition initially. The iterator has to get one entry next after another. This will be a memory backpressure mechanism especially for {{OFFHEAP_TIRED}}.

My assumption is that the fixed version has to work in a similar way to iteration over local entries - {{cache.localEntries(CachePeekMode.PRIMARY);}}. Run attached {{LocalIteratorStuff}} to see with Visual VM that the application thread is fully utilized and system threads are idle. ",,ashutak,dmagda,sboikov,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Mar/16 20:18;dmagda;LocalIteratorStuff.java;https://issues.apache.org/jira/secure/attachment/12796152/LocalIteratorStuff.java","30/Mar/16 20:18;dmagda;ScanQueryStuff.java;https://issues.apache.org/jira/secure/attachment/12796151/ScanQueryStuff.java",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 16 13:40:33 UTC 2016,,,,,,,,,,"0|i2vf73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/16 08:41;yzhdanov;If it is true that we have several thread switches for local query, than It is really weird. We need to re-approach it.

Note: there is a possible race condition - entry gets moved between swap/offheap/onheap but we still need not to miss it. I am pretty sure now there is a special listener for that - migrated entries are put to special buffer and included into iteration.

While working on this ticket we need to add a setting Query.swapEventsBufferSize() which should set this buffer per query. QueryCursor.iterator().next() should throw exception on buffer overflow. Why I think we need to expose this property? After these changes raw data iteration process can take more time since user logic will be executed for each entry. So, user need to have a way to somehow control this.

I would do these minimal changes now, since after disc store will be ready we will have to return to scan queries again.  ;;;","31/Mar/16 09:04;sboikov;Some comments on 'swap/offheap/onheap' issue mentioned by Yakov:
- now scan query just creates 3 iterators (heap, offheap, swap), and does not handle entries migration, so data really can be missed
- if migrated entries are include into iteration then scan query can return the same entry twice
- in OFFHEAP_TIERED mode entry is not removed from offheap while heap entry is created, so some optimizations can be done for this mode
;;;","01/Apr/16 09:53;sboikov;Artem,

Please take a look at this issue, before fixing please run test and check if these problems exist:
- described threading is really bottleneck 
- we should not creaty copy of all results, this should be done per page;;;","11/Apr/16 18:55;ashutak;Started working on it. 

Via VisualVM I see described in description behavior (with attached tests). Going deep at code to say is it the root cause or not.;;;","12/Apr/16 18:34;ashutak;Did experimental fix (executing local query at user thread). Got performance increase (about 2 times), but still worse than iteration through local entries (about 2 times). Will investigate.;;;","13/Apr/16 18:55;ashutak;PR: https://github.com/apache/ignite/pull/643;;;","13/Apr/16 19:01;ashutak;Rewrote the first version of the fix in more consistent way, added events and statistics support. Will check TC results and adding new tests. Still have {{localEntries()}} performance better than scan query (will continue an investigation).;;;","14/Apr/16 05:42;dmagda;Artem, also please make sure to implement the following point mentioned by Semen - we should not creaty copy of all results, this should be done per page. Because presently the whole partition's data is moved from off-heap to Java heap. This can lead to high CPU utilization by GC and/or OOM.;;;","18/Apr/16 09:15;ashutak;Reviewed with Sam. 

Fixed review comments (using closeable iterators instead of legacy {{CacheQueryFuture}} where it is possible).

Added a couple of config variations tests and fixed several bugs (related to unwrapBinary).

Performans status.
- In OFFHEAP_TIRED mode {{localEntries}} and local {{ScanQuery}} take the same.
- In ONHEAP_TIRED mode local {{ScanQuery}} 2 times slower than {{localEntries}}. Actually, it's even slower than {{ScnaQuery}} in OFFHEAP_MODE. The reason is that Ignite does extra operations with wrapping/unwrapping keys to/from {{KeyCacheObject}} (and we got extra {{unwrapBinary}} operations).;;;","18/Apr/16 18:26;ashutak;Performance issue - resolved. Ignite in OFFHEAP_TIRED mode has optimization for cases when expire policy disabled. Do the same for ONHEAP_TIRED and got expected performance.

Need to review current flow for case with expire policy do we actually should the following algorithm: 
- get key iterator
- get entry by key
- extract value from entry and check expiration.

I think we can iterate throw entries and do a check on expire policy on lower level.

Added more tests and fixed bugs (including not changes related bugs).

Left:
- add more tests + fix found issues
- self-review;;;","20/Apr/16 21:39;ashutak;Finished with tests. Fixed all found issues (including non-related to issue).

Currently, I have a little bit tricky bug with Scan query over partition and fall-tolerance.;;;","26/Apr/16 14:12;ashutak;Fixed Scan query with partition and fail-tolerance case.

Waiting for TC and it will be ready for review.;;;","27/Apr/16 11:22;ashutak;TC showed broken metrics. Fixed metrics.

Run all TC builds.;;;","27/Apr/16 15:46;ashutak;Fixed another issues founded on TC. Run all TC build one more time. Will be ready for review if all will be ok.;;;","29/Apr/16 12:18;sboikov;Hi Artem,

Reviewed your fix, looks good, have some minor comments:
- please change CacheWeakQueryIteratorsHolder to avoid extra AutoCloseable creation (CacheIteratorConverter is already AutoCloseable, CacheQueryFuture also can implement it). 
- scan iterator is wrapped twice in GrdiCacheAdaper.igniteIterator: first in CacheWeakQueryIteratorsHolder and then in GrdiCacheAdaper.igniteIterator, let's keep only one wrapper.
- do we really always need copy nodes collection inside 'nodes(final GridCacheContext<?, ?> cctx, @Nullable final ClusterGroup prj, @Nullable final Integer part)'?
- please take a look at this place in PeekValueExpiryAwareIterator: we call 'unwrapBinaryIfNeeded' for key and value, then it possible that 'unwrapBinaryIfNeeded' is called one more time inside 'checkPredicate'. Can we get rid of one call?
;;;","04/May/16 13:53;ashutak;Fixed review comments. Rerun TC.;;;","13/May/16 13:01;ashutak;TC looks good. Ready for review.;;;","16/May/16 09:40;sboikov;Reviewed, did some minor changes, good to merge.;;;","16/May/16 13:40;ashutak;Merged at 1.6 (0e8072f);;;",,,,,,,,,,,,,,,,,,,,,,,,
Visor CMD: Add ability to attach custom scripts to alerts,IGNITE-2919,12954673,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dmagda,dmagda,30/Mar/16 16:33,13/May/16 06:11,14/Jul/23 06:20,12/May/16 09:19,1.5.0.final,,,1.6,visor,,,,,0,community,important,,"Visor cmd support ""alert"" command that allows to listen on particular triggers (heap usage, nodes count, ...).

If a trigger is fired Visor will print info into the log file. 

However it makes sense specify a custom script that will be triggered when a trigger is fired.",,dmagda,kuaw26,pkonstantinov,vsidorova,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 13 03:17:33 UTC 2016,,,,,,,,,,"0|i2veqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/16 08:16;vsisko;Implemented execution of script on alert. 
To configure use arguments:
*-n* Alert name (opt.).
*-s* Path to script file.
*-i* Minimal interval of script execution that should be passed
Script is executed on unsuccessful check of alert condition after successful. When alert check is unsuccessful longer than interval time script is not executed second time.
To script passed the next arguments: 1) Alert name, 2) alert condition, 3, ...) checked values of alert conditions.

For example for script: {code}alert -t=5 -r -n=Test -nc=gte2 -cc=lte16 -i=15 -s=/home/user/1.sh{code}
with script:
{code:title=1.sh}echo ALERT [$1] CONDITION [$2] alarmed with node count [$3] and cpu count [$4] > test.txt{code}
will generated string: {code}ALERT [Test] CONDITION [-nc=gte2 -cc=lte16] alarmed with node count [2] and cpu count [8]{code};;;","11/May/16 03:12;kuaw26;I merged with master.
Please test as described in IGNITE-2930 and fix VisorAlertCommandSpec.;;;","11/May/16 07:13;vsisko;Tested. Fixed test. Fixed exception handling.;;;","11/May/16 10:27;pkonstantinov;Suppressing works incorrect, the error message printed only once in the visor log.;;;","12/May/16 03:57;vsisko;Fixed. Now alert try to execute script to first success.;;;","12/May/16 08:13;pkonstantinov;Please add info about default timeout for -t and -i options.
After that please assign to committer to merge into the target branch. ;;;","12/May/16 09:19;kuaw26;Merged into ignite-1.6 and master;;;","13/May/16 03:17;pkonstantinov;Re-verified in 1.6;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL query with EXISTS() expression fails on partitioned cache.,IGNITE-2913,12954575,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergi,sergi,sergi,30/Mar/16 09:49,02/Apr/17 12:36,14/Jul/23 06:20,02/Apr/17 12:36,,,,,,,,,,0,,,,"{code}
select name from Person p where exists(select 1 from Organization o where p.orgId = o.id)
{code}
{code}
org.apache.ignite.IgniteCheckedException: Unsupported expression: EXISTS(...
{code}",,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Apr 02 12:36:09 UTC 2017,,,,,,,,,,"0|i2ve4v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Apr/17 12:36;sergi;Merged to master at f726dc483a9e406b0149a6afffc38026b43ccbc5

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClusterGroup.forDaemons does not work,IGNITE-2911,12954566,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,ptupitsyn,ptupitsyn,30/Mar/16 09:03,09/Jun/16 13:21,14/Jul/23 06:20,09/Jun/16 13:21,1.1.4,,,1.7,compute,,,,,0,,,,"* Start a node in daemon mode
* ClusterGroup.forDaemons returns an empty projection

The only existing test for this method only checks for empty result.",,dmagda,githubbot,kuaw26,ptupitsyn,sboikov,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 09 13:20:56 UTC 2016,,,,,,,,,,"0|i2ve2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Apr/16 05:21;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/657

    IGNITE-2911: ClusterGroup.forDaemons to return daemon nodes.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-2911

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/657.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #657
    
----
commit 31b3db8bd74dc49adf8796e7989a9724396e5282
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-04-20T05:13:54Z

    IGNITE-2911: ClusterGroup.forDaemons to return daemon nodes.

----
;;;","21/Apr/16 01:33;shroman;TC looks good.;;;","26/Apr/16 04:07;kuaw26;Semen, I reviewed pull request.

In general looks good for me.

One small change I would do - make ""new DaemonFilter()"" a static variable, as it has no state and could be reused.

Could you also take a look and approve merge to master?
;;;","06/May/16 06:54;dmagda;[~sboikov], could you please do final brief review?;;;","24/May/16 08:05;sboikov;Reviewed, fix is not correct, result of ClusterGroup.nodes() should take into account topology changes, this does not work for this 'forDaemons' implementation, here is test reproducing issues:

{noformat}
    public void testForDaemons() throws Exception {
        assertEquals(4, ignite.cluster().nodes().size());

        ClusterGroup daemons = ignite.cluster().forDaemons();
        ClusterGroup srvs = ignite.cluster().forServers();

        assertEquals(0, daemons.nodes().size());
        assertEquals(2, srvs.nodes().size());

        Ignition.setDaemon(true);

        try (Ignite g = startGrid(NODES_CNT)) {
            Ignition.setDaemon(false);

            try (Ignite g1 = startGrid(NODES_CNT + 1)) {
                assertEquals(1, ignite.cluster().forDaemons().nodes().size());
                assertEquals(3, srvs.nodes().size());
                assertEquals(1, daemons.nodes().size());
            }
        }
    }
{noformat}
;;;","07/Jun/16 02:39;shroman;Changed the fix to take into account topology changes.;;;","09/Jun/16 13:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/657
;;;","09/Jun/16 13:20;sboikov;Looks good, thanks Roman!

Merged into master (commit #51a25fa).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: Metadata update request causes Java Exception.,IGNITE-2900,12953956,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,isapego,isapego,28/Mar/16 12:31,29/Mar/16 07:06,14/Jul/23 06:20,29/Mar/16 07:06,1.5.0.final,,,1.6,platforms,,,,,0,,,,"Call to the {{BinaryTypeUpdaterImpl::Update}} causes exception {{Not enough data to read the value [position=227, requiredBytes=4, remainingBytes=0]}}. Needs to be fixed.",,githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 29 07:06:32 UTC 2016,,,,,,,,,,"0|i2vabj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Mar/16 12:54;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/581

    IGNITE-2900: Fixed exception on type update.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-2900

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/581.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #581
    
----
commit 54bce05075f86cef28e3928fdcd517cb5ff1203d
Author: isapego <isapego@gridgain.com>
Date:   2016-03-28T12:52:56Z

    IGNITE-2900: Fixed exception on type update.

----
;;;","28/Mar/16 13:15;isapego;Fixed. Java side has been expecting compact schema footer. For now always writing zero size compact footer.;;;","29/Mar/16 07:06;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/581
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObject is deserialized before getting passed to CacheInterceptor,IGNITE-2899,12953942,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dmagda,dmagda,28/Mar/16 11:44,23/May/16 17:18,14/Jul/23 06:20,23/May/16 16:50,1.5.0.final,,,1.7,,,,,,0,,,,"If {{CacheInterceptor}} is configured for a cache that stores {{BinaryObjects}} then the objects are always deserialized before being passed to the interceptor body.
Refer to BinaryInterceptorIssue test attached to the ticket to reproduce the following stack trace

{noformat}
java.lang.ClassCastException: org.apache.ignite.examples.tests.BinaryInterceptorIssue$ValidObject cannot be cast to org.apache.ignite.binary.BinaryObject
	at org.apache.ignite.examples.tests.BinaryInterceptorIssue$ValidationInterceptor.onBeforePut(BinaryInterceptorIssue.java:49)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:2309)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAtomicCache.java:2044)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1439)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1314)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.mapSingle(GridNearAtomicUpdateFuture.java:457)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.access$1400(GridNearAtomicUpdateFuture.java:72)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$UpdateState.map(GridNearAtomicUpdateFuture.java:931)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.mapOnTopology(GridNearAtomicUpdateFuture.java:417)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.map(GridNearAtomicUpdateFuture.java:283)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$21.apply(GridDhtAtomicCache.java:1006)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$21.apply(GridDhtAtomicCache.java:1004)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.asyncOp(GridDhtAtomicCache.java:737)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsync0(GridDhtAtomicCache.java:1004)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.putAsync0(GridDhtAtomicCache.java:465)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync(GridCacheAdapter.java:2491)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.put(GridDhtAtomicCache.java:440)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2170)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.put(IgniteCacheProxy.java:1127)
	at org.apache.ignite.examples.tests.BinaryInterceptorIssue.main(BinaryInterceptorIssue.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Exception in thread ""main"" org.apache.ignite.cache.CachePartialUpdateException: Failed to update keys (retry update if possible).: [1]
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.convertToCacheException(GridCacheUtils.java:1577)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.cacheException(IgniteCacheProxy.java:1931)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.put(IgniteCacheProxy.java:1134)
	at org.apache.ignite.examples.tests.BinaryInterceptorIssue.main(BinaryInterceptorIssue.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: class org.apache.ignite.internal.processors.cache.CachePartialUpdateCheckedException: Failed to update keys (retry update if possible).: [1]
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$UpdateState.addFailedKeys(GridNearAtomicUpdateFuture.java:1243)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$UpdateState.onResult(GridNearAtomicUpdateFuture.java:661)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.onResult(GridNearAtomicUpdateFuture.java:344)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$2.apply(GridNearAtomicUpdateFuture.java:460)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$2.apply(GridNearAtomicUpdateFuture.java:458)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1510)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1314)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.mapSingle(GridNearAtomicUpdateFuture.java:457)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.access$1400(GridNearAtomicUpdateFuture.java:72)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$UpdateState.map(GridNearAtomicUpdateFuture.java:931)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.mapOnTopology(GridNearAtomicUpdateFuture.java:417)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.map(GridNearAtomicUpdateFuture.java:283)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$21.apply(GridDhtAtomicCache.java:1006)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$21.apply(GridDhtAtomicCache.java:1004)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.asyncOp(GridDhtAtomicCache.java:737)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsync0(GridDhtAtomicCache.java:1004)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.putAsync0(GridDhtAtomicCache.java:465)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync(GridCacheAdapter.java:2491)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.put(GridDhtAtomicCache.java:440)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2170)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.put(IgniteCacheProxy.java:1127)
	... 6 more
{noformat}

Moreover if to modify the test a bit we will reproduce one more bug when an object type is not being registered with {{BinaryContext}} if the object is being created with {{BinaryObjectBuilder}}. That bug hides the issue described above. Refer to BinaryInterceptorNoTypeIssue to see the following stack trace

{noformat}
[18:09:53,020][ERROR][main][GridDhtAtomicCache] <default> Unexpected exception during cache update
class org.apache.ignite.binary.BinaryObjectException: Failed resolve class for ID: -1092987915
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:626)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1442)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.deserializeValue(BinaryObjectImpl.java:542)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.value(BinaryObjectImpl.java:117)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.value(GridCacheMapEntry.java:2529)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:2306)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAtomicCache.java:2044)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1439)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1314)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.mapSingle(GridNearAtomicUpdateFuture.java:457)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.access$1400(GridNearAtomicUpdateFuture.java:72)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$UpdateState.map(GridNearAtomicUpdateFuture.java:931)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.mapOnTopology(GridNearAtomicUpdateFuture.java:417)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.map(GridNearAtomicUpdateFuture.java:283)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$21.apply(GridDhtAtomicCache.java:1006)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$21.apply(GridDhtAtomicCache.java:1004)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.asyncOp(GridDhtAtomicCache.java:737)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsync0(GridDhtAtomicCache.java:1004)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.putAsync0(GridDhtAtomicCache.java:465)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync(GridCacheAdapter.java:2491)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.put(GridDhtAtomicCache.java:440)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2170)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.put(IgniteCacheProxy.java:1127)
	at org.apache.ignite.examples.tests.BinaryInterceptorNoTypeIssue.main(BinaryInterceptorNoTypeIssue.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to read class name from file [id=-1092987915, file=C:\ignite\incubator-ignite\work\marshaller\-1092987915.classname]
	at org.apache.ignite.internal.MarshallerContextImpl.className(MarshallerContextImpl.java:181)
	at org.apache.ignite.internal.MarshallerContextAdapter.getClass(MarshallerContextAdapter.java:174)
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:610)
	... 28 more
Caused by: java.io.FileNotFoundException: C:\ignite\incubator-ignite\work\marshaller\-1092987915.classname (The system cannot find the file specified)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at org.apache.ignite.internal.MarshallerContextImpl.className(MarshallerContextImpl.java:170)
	... 30 more
{noformat}
",,ashutak,dmagda,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2953,,,,,IGNITE-2971,IGNITE-2973,,,,IGNITE-2909,"28/Mar/16 15:11;dmagda;BinaryInterceptorIssue.java;https://issues.apache.org/jira/secure/attachment/12795634/BinaryInterceptorIssue.java","28/Mar/16 15:11;dmagda;BinaryInterceptorNoTypeIssue.java;https://issues.apache.org/jira/secure/attachment/12795635/BinaryInterceptorNoTypeIssue.java",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 23 17:18:46 UTC 2016,,,,,,,,,,"0|i2va8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Mar/16 12:23;ashutak;I will take care of this issue.

But I need to notice that the attached examples are wrong about using Interceptor: we cannot throw any exception from intercepror methods (see ""This method should not throw any exception."" at {{CacheInterceptor}} javadoc);;;","31/Mar/16 06:11;ashutak;The original case has been fixed. Working on tests and fixes for another cases (get/remove/invoke ops * tx cache).;;;","31/Mar/16 13:11;ashutak;Found that {{BinaryOffheapValue}} leaks to {{EntryProcessor}}'s user code via {{entry.getValue()}}. The issue happens under the following conditions:
- User uses {{cache.withKeepBinary()}}
- invokeAll operation
- ATOMIC cache in OFFHEAP_TIRED data mode

I will fix the founded issue in bounds of this task.;;;","31/Mar/16 13:15;ashutak;I will fix it for both {{getValue()}} and {{getKey()}}. Actually I cannot imagine a case when {{getKey()}} can return offheap value, but to be sure I think we should fix it as well.;;;","31/Mar/16 15:05;ashutak;Found another {{withKeepBinary}} related issue. We have inconsistency for {{IgniteCache.getEntry()}} and {{IgniteCache.getEntries()}}: key of entry returned by first method is the same entry which user set to method, so it can be user object, but keys of entries of second method is {{BinaryObject}}.

I''m not sure which behavior is true.;;;","31/Mar/16 15:26;githubbot;GitHub user ashutakGG opened a pull request:

    https://github.com/apache/ignite/pull/593

    IGNITE-2899 BinaryObject is deserialized before getting passed to CacheInterceptor

    https://issues.apache.org/jira/browse/IGNITE-2899

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2899-interceptor-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/593.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #593
    
----
commit 6ea2764c6b5da15e4460a7e33df36a3a07e48871
Author: ashutak <ashutak@gridgain.com>
Date:   2016-03-31T08:53:36Z

    ignite-2899: fix and test for put-get

commit 4e4726c02c99b405d6e116afb514a4d4319ab15e
Author: ashutak <ashutak@gridgain.com>
Date:   2016-03-31T11:21:41Z

    ignite-2899: invoke

commit bed2a6d635be9b7a06b95d44e48be3d9f3d05691
Author: ashutak <ashutak@gridgain.com>
Date:   2016-03-31T11:23:21Z

    ignite-2899: fix putGet

commit cdbfc53855ed829a3f5ec51a037657bd6ac9b73e
Author: ashutak <ashutak@gridgain.com>
Date:   2016-03-31T12:05:30Z

    ignite-2899: fix putAll

commit 7c266c1f0e03044b3b57745af528dbac6d8681fa
Author: ashutak <ashutak@gridgain.com>
Date:   2016-03-31T15:14:23Z

    ignite-2899: fix invokeAll

commit b2226526da45875872f2577a6631f878acb63cb9
Author: ashutak <ashutak@gridgain.com>
Date:   2016-03-31T15:22:15Z

    ignite-2899: add asserts

----
;;;","01/Apr/16 14:05;ashutak;h4. Found more bugs in process of testing. In process of working on the issue I faces with the following issues *{{withKeepBinary}}* related issues (including issues described above):
1.1. {{BinaryOffheapValue}} leaks to {{EntryProcessor}}'s user code via {{entry.getValue()}}. The issue happens under the following conditions:
- invokeAll operation
- ATOMIC cache in OFFHEAP_TIRED data mode

I will fix it for both {{getValue()}} and {{getKey()}}. Actually I cannot imagine a case when {{getKey()}} can return offheap value, but to be sure I think we should fix it as well.

1.2.We have inconsistency for {{IgniteCache.getEntry()}} and {{IgniteCache.getEntries()}}: key of entry returned by first method is the same entry which user set to method, so it can be user object, but keys of entries of second method is {{BinaryObject}}.

Will fix {{getEntry().getKey()}} to return {{BinaryObject}}.

1.3. {{invoke}} and {{EntryProcessor}} which sets user object as value (not {{BinaryObject}}). Then method {{Interceptor.onBeforePut(Entry e, Object newVal)}} gets {{e.getKey()}} and {{e.getValue()}} as {{BinaryObject}}, {{newVal}} as userObject (for ATOMIC cache) or {{BinaryObject}} (for TRANSACTIONAL cache), but {{Interceptor.onAfterPut(Entry e)}} gets {{e.getKey()}} as {{BinaryObject}} and {{e.getValue}} as user object sometimes, but should be {{BinaryObject}}. The issue can be reproduced only with Atomic cache.
I think it a little bit tricky to use such inconsistent API and not obvious for user where they can get {{BinaryObject}} and where user object.

The same issue can be reproduces for {{invokeAll()}}.

1.4 Not-interceptor-related issues with {{invokeAll}}:
1.4.1 {{invokeAll}} returns result map which contains mixed {{BinaryObjects}} and user objects keys. I guess, that we get user objects keys if that keys processed on local node.
1.4.2 {{invokeAll}} wraps result of {{CacheEntryProcessor.process()}} in {{BinaryObject}} (for remote nodes). Why? I think user should get exactly the same result as {{process}} method returns.
1.5 Not-interceptor-related issues with {{invoke}} on client node with Near cache. {{Cache.withKeepBinary().get()}} returns {{null}} after successful {{put}}/{{invoke}} as long as {{get()}} for normal cache gets value as well.
h4. The following issue related to *basic cache* (not keep binary) and intercepror:
2.1. I was added {{InterceptorCacheConfigVariationsFullApiTestSuite}}, which runs {{IgniteCacheConfigVariationsFullApiTest}} with enabled interceptor. The interceptor just checks that keys and values are not {{BinaryObject}}.
Faced that in some cases Ignite cannot unmarshall binary object to get value at interceptor (issue with enum).
{noformat}
    Suppressed: class org.apache.ignite.IgniteCheckedException: Failed to update keys on primary node.
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateResponse.addFailedKeys(GridNearAtomicUpdateResponse.java:369)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1508)
        ... 22 more
        Suppressed: class org.apache.ignite.binary.BinaryObjectException: Failed to get enum value for ordinal (do you have correct class version?) [cls=org.apache.ignite.testframework.junits.IgniteConfigVariationsAbstractTest$TestEnum, ordinal=9437186, totalValues=3]
            at org.apache.ignite.internal.binary.BinaryEnumCache.get(BinaryEnumCache.java:56)
            at org.apache.ignite.internal.binary.BinaryUtils.doReadEnum(BinaryUtils.java:1516)
            at org.apache.ignite.internal.binary.BinaryReaderExImpl.readEnum0(BinaryReaderExImpl.java:1163)
            at org.apache.ignite.internal.binary.BinaryReaderExImpl.readEnum(BinaryReaderExImpl.java:1140)
            at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.readFixedType(BinaryFieldAccessor.java:812)
            at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:639)
            at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:735)
            at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1449)
            at org.apache.ignite.internal.binary.BinaryObjectImpl.deserializeValue(BinaryObjectImpl.java:542)
            at org.apache.ignite.internal.binary.BinaryObjectImpl.value(BinaryObjectImpl.java:117)
            at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinary(CacheObjectContext.java:257)
            at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinaryIfNeeded(CacheObjectContext.java:148)
            at org.apache.ignite.internal.processors.cache.GridCacheContext.unwrapBinaryIfNeeded(GridCacheContext.java:1769)
            at org.apache.ignite.internal.processors.cache.CacheLazyEntry.getValue(CacheLazyEntry.java:125)
            at org.apache.ignite.internal.processors.cache.CacheLazyEntry.getValue(CacheLazyEntry.java:111)
            at org.apache.ignite.internal.processors.cache.InterceptorCacheConfigVariationsFullApiTest$TestInterceptor.validateEntry(InterceptorCacheConfigVariationsFullApiTest.java:113)
            at org.apache.ignite.internal.processors.cache.InterceptorCacheConfigVariationsFullApiTest$TestInterceptor.onAfterRemove(InterceptorCacheConfigVariationsFullApiTest.java:100)
            at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:2498)
            at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAtomicCache.java:2044)
            at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1439)
            ... 22 more
{noformat};;;","04/Apr/16 17:53;ashutak;1.1 and 1.2 already fixed. 1.4.1 is partially fixed.;;;","05/Apr/16 17:21;ashutak;1.4.1 fixed.

1.4.2 Looks like we need to add one more flag at {{GridCacheReturn}} message to detect whether result should be converted from binary object or not (see org/apache/ignite/internal/processors/cache/GridCacheReturn.java:334). Filed an issue IGNITE-2953.;;;","07/Apr/16 17:22;ashutak;1.5 Fixed

2.1 Found a root cause.Did potential fix, but not sure that it's the best solution. Need a review.;;;","07/Apr/16 19:21;ashutak;Added tests on explicit transactions and got new failures.;;;","08/Apr/16 19:04;ashutak;Fixed new tx tests. Currently have 2 different failures.
# {{InvokeAll}} sometimes return keys as user objects instead of BinaryObjects
# {{Invoke}} fails on internal assert;;;","11/Apr/16 11:36;ashutak;1. Investigated point 1. The issue happens under following conditions:
- User calls {{cache.withKeepBinary().invokeAll(...)}} inside explicite transaction.
- {{EntryProcessor}} DOES NOT call entry.getKey() and returns non-null result.
- At this case Ignite will return map with keys as user objects instead of {{BinaryObjects}}.

It happens because {{GridCacheReturn.addEntryProcessResult(...)}} deserializes cache object before put to result map (in loc=true case). See org/apache/ignite/internal/processors/cache/GridCacheReturn.java:246

2. Filed the separate issue for internal assert: IGNITE-2971.;;;","11/Apr/16 14:09;ashutak;Filed an issue IGNITE-2973 for 1.3.;;;","12/Apr/16 11:24;sboikov;Reviewed, did some minor changes, please take a look.

You left 'TODO' in innerRemove method - better fix is to call swap.removeOffheap at the end of method (please make sure there is not such issue in innerUpdate and innerUpdateLocal). 

Let's also add 'with keep binary' variations test without interceptor (copy of InterceptorWithKeepBinaryCacheTest without interceptor).;;;","21/Apr/16 19:32;ashutak;Fixed swap.removeOffheap for all mentioned 3 methods (waiting for TC).
Fixed/reverted a couple of cases which has been reverted on review.

Have new failed case with near cache and invokeAll that leads to an assertion error. Looks like I got it after merge with master.;;;","24/Apr/16 19:15;ashutak;Fixed issues founded on TC. Now I have issue with .Net and invoke (investigating).;;;","27/Apr/16 15:46;ashutak;Fixed .Net and another issues founded on TC. Run all TC build one more time. Will be ready for review if all will be ok.;;;","05/May/16 06:15;sboikov;Reviewed, looks good, minor comments:
- change in GridCacheAdapter:1413:   'if (ctx.keepBinary() && !ctx.isLocal())' - why '!ctx.isLocal()' is needed here?
- did some changes in IgniteConfigVariationsAbstractTest, please take a look and check tests are not broken;;;","12/May/16 14:59;ashutak;1. Removed isLocal check and run TC. As I remember, some local cache test fails without it.
2. Reviewed and did minor changes.;;;","18/May/16 17:52;ashutak;Fixed p1 in a more right way. 
Waiting for TC results.;;;","19/May/16 20:13;sboikov;Hi, 
- there is 'TODO delete one of isCLient methods' in IgniteConfigVariationsAbstractTest:213, please remove it or fix before merge
- as you told me today there is an issue in 'getEntry' with keepBinary if key is type which is not wrapped into BinaryObject (e.g. Integer), to fix it need change entry creation like this:
{noformat}
 '... new CacheEntryImplEx<>(ctx.keepBinary() ? (K)ctx.unwrapBinaryIfNeeded(key, true, false) : key, t.get1(), t.get2())'
{noformat}
;;;","20/May/16 09:47;ashutak;Semen, 

Thanks for pointing this out! Fixed the second point for both getEntry and getEntryAsync.

Run TC.;;;","23/May/16 16:50;sboikov;Merged fixes into master (commit ee7e2c7).;;;","23/May/16 17:18;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/593
;;;",,,,,,,,,,,,,,,,,,
.NET: Examples fail on 32-bit OS,IGNITE-2882,12952735,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,ptupitsyn,ptupitsyn,23/Mar/16 08:39,25/Mar/16 06:22,14/Jul/23 06:20,25/Mar/16 06:22,1.1.4,,,1.6,platforms,,,,,0,,,,"* Examples fail to start on 32-bit OS due to Xmx1024m
* Error message is not descriptive at all

Need to reduce Xmx and make sure we propagate this error properly.",,githubbot,isapego,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2694,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Mar 25 06:22:20 UTC 2016,,,,,,,,,,"0|i2v2s7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Mar/16 10:08;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/573

    IGNITE-2882 .NET: Fix JNI init error propagation and examples memory usage

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2882

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/573.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #573
    
----
commit e103b24717ddb8b7d11c7f8c2833d46e1405155e
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-23T09:34:44Z

    IGNITE-2882 .NET: Examples fail on 32-bit OS

commit 43edc7482519f809b116a02915bf4b9b3fa56cbb
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-23T09:49:53Z

    wip

commit b678a6ec162c3079f71dde3f5798ff47916b0032
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-23T09:54:42Z

    Fix xmx in examples

commit 4e43302d730e2ba5027dbe364bdf7ab62d9af47a
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-23T09:57:42Z

    wip

commit 2c12d34f798ad8a062b1e5afb23c3570fcd29f03
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-23T10:05:03Z

    Merge remote-tracking branch 'remotes/upstream/master' into ignite-2882

----
;;;","24/Mar/16 13:33;vozerov;.NET part looks good.

Igor,
Could you please review changes in {{java.cpp}}?;;;","24/Mar/16 14:51;isapego;I took a look at C++ part. Seems correct to me.;;;","25/Mar/16 06:22;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/573
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SPI queries not working,IGNITE-2881,12952599,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vkulichenko,vkulichenko,22/Mar/16 21:30,21/Dec/16 17:05,14/Jul/23 06:20,03/Oct/16 07:40,1.5.0.final,,,1.8,cache,,,,,1,,,,"{{SpiQuery}} functionality looks completely broken right now, any query execution fails with the exception shown below. Also I didn't find a single test for it, they should be added.

I'm attaching the simple example that reproduce the issue.

{noformat}
Caused by: class org.apache.ignite.IgniteCheckedException: Received next page request after iterator was removed. Consider increasing maximum number of stored iterators (see GridCacheConfiguration.getMaximumQueryIteratorCount() configuration property).
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.executeFieldsQuery(GridCacheQueryManager.java:666)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.runFieldsQuery(GridCacheQueryManager.java:1168)
	... 7 more
{noformat}",,agoncharuk,amashenkov,avk47,githubbot,ktnowak,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/16 21:30;vkulichenko;SpiQueryTest.java;https://issues.apache.org/jira/secure/attachment/12794856/SpiQueryTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 21 17:05:10 UTC 2016,,,,,,,,,,"0|i2v1xz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Mar/16 22:33;ktnowak;There are a few more potential issues we noticed when using Spi indexing in 1.5.0.final: 

- method query() in IndexingSpi interface returns Iterator<Cache.Entry<?,?>> but elements of type Map.Entry are expected further down the stack (i.e. in IgniteCacheProxy:528). We had to create type that extends both Map.Entry and Cache.Entry to get it working. 

- when IndexingSpi.store() throws an exception on commit, error is not propagated to a client node and transaction ends up with state COMMITTED as if no error occured. In a server node transaction state gets marked as UNKNOWN though. 

- setters in SpiQuery return SqlQuery type (rather than SpiQuery) which means they can't be used in method chaining manner 
;;;","31/Aug/16 18:32;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1015

    IGNITE-2881 SPI queries not working

    ... fixed

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2881

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1015.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1015
    
----

----
;;;","31/Aug/16 18:39;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1015
;;;","31/Aug/16 18:43;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1016

    IGNITE-2881 : SPI queries not working

    ... fixed

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2881

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1016.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1016
    
----
commit 30aa287b881d4f9dc3fd5eec9840eab8d9a20828
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-24T13:57:20Z

    ignite-2620 Skip empty entries in GridCacheMapEntry.onTtlExpired
    (cherry picked from commit 6fc274a)

commit e2db87bb1b6c71d7978af17e9f2005ba1c661ab4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-25T07:06:43Z

    Added trace logging for entry/offheap updates.
    (cherry picked from commit 9b2767f)

commit 6fcc7a41d8676956983792717483318b85781479
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-05-25T09:54:40Z

    IGNITE-2538 - IgniteRDD count() and isEmpty() method use IgniteCache API

commit e274d44a37fd1269e7a3a5f0000e1ee6139fd0b0
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-26T11:57:52Z

    IGNITE-3188: Binary marshaller doesn't unmarshal a void type (added tests)

commit 6687e2bfb9627ce08c1c258527e2927606a500ed
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T08:48:00Z

    review IGNITE-2708 Need to validate that SPIs are started only once
    (cherry picked from commit cd063da)

commit 40a41fc50bdb73d50e2aa13da8203784be98e38a
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T08:59:02Z

    reverting review IGNITE-2708 Need to validate that SPIs are started only once
    (cherry picked from commit bf561e1)

commit d05786d8bfc8177223b6db9a98bd3c8170b6bcf1
Author: Ryan Zhao <ryan.zhao.cs@gmail.com>
Date:   2016-05-13T09:00:43Z

    review IGNITE-2708 Need to validate that SPIs are started only once (commit with proper author)
    (cherry picked from commit 98338ff)

commit 9d937ca34775f39b46568eb3fca4585ce00a0fb1
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T09:54:01Z

    review IGNITE-2708 Need to validate that SPIs are started only once (added logic to protect properly started grids)
    (cherry picked from commit b8d624a)

commit edc2947d7340cac4a3c90fa726c23d5d47798ab9
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-25T10:07:03Z

    IGNITE-3191: IGFS: Improved error logging for operations in dual mode.

commit 2f1747d726da87b67f6c5323b3e64762d56398cb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-27T11:40:17Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.1' into gridgain-7.6.1

commit 1bb8b647264593034659b7db929c2664dec603e1
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-27T11:21:01Z

    ignite-3116 Fixed NodeStoppingException in GridDhtGetFuture.
    (cherry picked from commit 303d3ca)

commit 47c575c8696d51b675a16aa260ec9d398e0a68e9
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-30T09:42:37Z

    Added benchmark property file.

commit 00e2dda9a850f74178ee893a3acf74ddc30d4a13
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-30T11:45:38Z

    Updated benchmark property file.

commit a28e16e24adb0a03df959830517db84d2505c481
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-05-31T07:01:46Z

    IGNITE-3190: OffHeap cache metrics doesn't work properly for OFFHEAP_TIRED mode.
    Reviewed and merged by Denis Magda (dmagda@gridgain.com)
    (cherry picked from commit 7533dfc)

commit 56c605622dbecf71f3ee87cc41a16d2ee87e92d3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-26T08:15:48Z

    IGNITE-3200: Resolved classloader leak.

commit a815067a0e8e7cfc9f49c57efe2b2eba562e9071
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T07:23:00Z

    IGNITE-3202: Hadoop: Implemented user name mappers.

commit 421cf03b03276d0ab6c32ef6665d547746446dfc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T07:40:24Z

    7.5.24: Added missing JavaDocs.

commit 167e47781f65c056b9d273eea52d268bc9a8fa0b
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-31T10:50:06Z

    IGNITE-2708: fix tests that don't create unique IndexingSPI per node
    (cherry picked from commit f90e424)

commit 21bdf3148f05481d86e77e13b282ac44c6c3a059
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T10:54:32Z

    Added pacajge info for java.org.apache.ignite.hadoop.util package.

commit 3ca9febeb2bf53d17b6dea739938cff40c5fa67d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T11:03:48Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.1' into gridgain-7.6.1

commit f175d3c670025bd619ec347dba2a5c5f68f4cc32
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-06-02T13:14:10Z

    IGNITE-2655: AffinityFunction: primary and backup copies in different locations
    Reviewed and merged by Denis Magda (dmagda@gridgain.com)

commit 1da14369c886ed12dbe0fc9b2c4d5a568c76b6b2
Author: Anton Vinogradov <av@apache.org>
Date:   2016-06-02T14:02:09Z

     IGNITE-3183 ScanQuery and localEntries are ignored keepBinary flag in OFFHEAP_TIERED mode

commit e0cf0fcc954a39dad5b0f1969488a7b372ef8f94
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-06-02T16:16:31Z

    1.7.0-SNAPSHOT

commit 91862c7c05bd37e287df1b2b6fb00e5cd2cfbb71
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-06-03T08:55:14Z

    IGNITE-3229: fixing link in Class GridCacheStoreValueBytesSelfTest. This closes #770.

commit 9df1b905cd86384c1d191785d70a8e5c8e741e48
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-06-02T13:03:12Z

    IGNITE-3232 - Inline transformers for IgniteRDD.savePairs and IgniteRDD.saveValues

commit 7fc1a7f8ecba07869f8706091f076079dd83cb8e
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-06-02T19:52:39Z

    IGNITE-3232 - Fixed the number of iterations to find an affinity key.

commit 2485d86f63bb2149e8881d3f48c13fb7784c29b0
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-06-02T13:56:20Z

    IGNITE-3175 BigDecimal fields are not supported if query is executed from IgniteRDD: fix java.sql.Date mapping

commit 8ea0598c6b5ce9e81ccd114df7246ba17e26817e
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-02T06:11:09Z

    IGNITE-3228: Hadoop: workaround/fix for inefficient memory usage.

commit 150e0d3b3ab1b01483b5e44ff28198a51fa35e68
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-02T08:47:38Z

    IGNITE-3228: Minor fix.

commit 0d623830e0d67be5f0874f704155367d2d9de45b
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-06-05T17:57:15Z

    IGFS-3246: IGFS: Infrastructure for client optimizations.

----
;;;","01/Sep/16 13:27;amashenkov;I have no success with reproducing transactional issue. Would you please provide more details, grid configuration or test?;;;","05/Sep/16 07:51;vozerov;Andrey, I see two problems with implementation:
1) {{IgniteCacheProxy}}: we still have a future of type {{CacheQueryFuture<Map.Entry<K, V>> fut}} what looks wrong to me. It seems that the fix must start a bit earlier.
2) Cannot understand TODO and fix in {{GridCacheQueryManager.executeFieldsQuery}}. ;;;","14/Sep/16 11:49;vozerov;Andrew,

In general fix looks fine for me. But I am a bit in doubts about changes in {{IgniteCacheProxy}}. It would be nice if someone with deep cache expertise give additional opinion. 

Also we need to be sure that no regressions are caused by that change.

Vladimir.;;;","28/Sep/16 14:54;agoncharuk;Guys,

The changes look good to me, please go ahead and merge assuming TC passes.;;;","30/Sep/16 08:10;vozerov;Re-running test on TC right now. Will merge if it is fine.;;;","21/Dec/16 17:05;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1016
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: System pool starvation is possible during data block write.,IGNITE-2876,12952378,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,22/Mar/16 09:58,24/Mar/16 10:32,14/Jul/23 06:20,24/Mar/16 10:32,1.5.0.final,,,1.6,igfs,,,,,0,,,,"*Problem*
IGFS has a set of messages to exchange data and signal events between nodes. These are:
- {{IgfsAckMessage}}
- {{IgfsBlocksMessage}}
- {{IgfsDeleteMessage}}
- {{IgfsFragmentizerRequest}}
- {{IgfsFragmentizerResponse}}

Currently these messages are processed in a system pool which is wrong and may lead to starvation, deadlocks and incorrect behavior.

Several examples:
1) {{IgfsBlocksMessage}} handling logic performs ""Cache.putAsync"" operation. This operation involves acquiring of semaphore permit. This semaphore, in turn, can only be released from another thread in the same system pool. As such, all system pool threads could hang on permit acquire forever.
2) In case file system size is exceeded, the same message waits for some time in hope that free space in cache will appear. However, if all system pool threads waits for this point, concurrent block removal cannot proceed, so these threads are doomed to receive {{IgfsOutOfSpaceException}} irrespective of whether they wait or not.

*Solution*
1) Introduce new IO policy for IGFS (see {{GridIoPolicy}}). 
2) Force all IGFS message to be processed with this policy. No backward compatibility is needed.",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-03-22 09:58:19.0,,,,,,,,,,"0|i2v0kv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: IgniteConfiguration.SpringConfigUrl should not be deprecated,IGNITE-2872,12952359,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,ptupitsyn,ptupitsyn,22/Mar/16 08:45,24/Mar/16 14:15,14/Jul/23 06:20,24/Mar/16 14:15,1.6,,,1.6,platforms,,,,,0,,,,"We have deprecated it as part of IGNITE-1906, but this is not correct. 
* Spring config is still a legit mechanism
* Apache.Ignite.exe does not have any other means to provide configuration (to be added in IGNITE-2873)",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 24 14:15:41 UTC 2016,,,,,,,,,,"0|i2v0gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Mar/16 09:55;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/571

    IGNITE-2872 .NET: Undeprecate IgniteConfiguration.SpringConfigUrl

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2872

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/571.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #571
    
----
commit bd9db11f1bdd9fb95a71ee9f95f77a7b019f09b8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-22T09:36:27Z

    IGNITE-2872 .NET: Undeprecate IgniteConfiguration.SpringConfigUrl

----
;;;","24/Mar/16 14:15;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/571
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Attribute-based SQL configuration handles nested indexed field incorrectly,IGNITE-2870,12952079,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,ptupitsyn,ptupitsyn,21/Mar/16 16:11,24/Mar/16 13:54,14/Jul/23 06:20,24/Mar/16 13:54,1.6,,,1.6,platforms,,,,,0,,,,"For nested fields (Employee.Address.Zip, for example)
* QueryEntity.fields expects dot notation: address.zip
* QueryEntity.indexes expects only field name: zip

[QuerySqlField(IsIndexed=true)] results in dot notation in both cases, which causes hang on cache creation.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 24 13:54:54 UTC 2016,,,,,,,,,,"0|i2uyqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Mar/16 17:20;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/568

    IGNITE-2870 .NET: Fix index names for nested fields in attribute-based SQL configuration

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2870

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/568.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #568
    
----
commit 5a54b3c272d9aa0f5500ab649a54599c9aa3b0a8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-21T17:02:13Z

    IGNITE-2870 .NET: Attribute-based SQL configuration handles nested indexed field incorrectly

commit e02c00ac1002e49309776c5926f1ab62fe041d06
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-21T17:18:39Z

    Fix index names

----
;;;","24/Mar/16 13:54;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/568
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need update local store from primary and backups,IGNITE-2864,12951961,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,sboikov,sboikov,21/Mar/16 08:09,13/May/16 15:12,14/Jul/23 06:20,13/May/16 15:12,,,,1.6,cache,,,,,0,,,,"Now cache local store is updated only from primary nodes, this means that data can be lost if primary node is not re-started after crash. Need fix it and update store from primaries and backups if store is local (for both tx and atomic caches).

This test should work:
- cache with 1 backup, two server nodes
- execute cache put for key K
- stop both nodes
- restart only node which was backup for K
- load data from local sore, update for K should be restored
",,avinogradov,dsetrakyan,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 13 08:07:56 UTC 2016,,,,,,,,,,"0|i2uy07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Apr/16 13:12;sboikov;Hi Anton,

I reviewed your changes, have some comments:
- in atomic cache when store is updated on backup you need check 'skipStore' flag (it should be passed in GridDhtAtomicUpdateRequest)
- method IgniteTxRemoteStateAdapter.stores() should return only stores participating in transaction. When fix it, please try to avoid unnesessary iterations if we know in advance that caches participating in tx do not have stores configured.;;;","13/Apr/16 14:16;avinogradov;Semen, 

I fixed issues you've described, please check.;;;","13/Apr/16 19:35;sboikov;Hi Anton,

I have some comments:
- I think correct way to resolve conflict is call CacheVersionConflictResolver since it can do more then just version comparison
- you added 'flags' in GridDhtAtomicUpdateRequest but did not change writeTo/readFrom methods, please fix and add test
- why in IgniteTxRemoteSingleStateImpl.stores you create HashSet with capacity 3 if you know in advance that there is only one store?
- please add tests with near cache and make sure 'batchStoreCommit' is not called for near cache txs
- I think it is possible to implement IgniteTxRemoteStateImpl.stores more efficiently (do not iterate over read entries, avoid any collections creations if there are no stores, etc). Please also run some tx putAll benchmarks in FULL_SYNC mode with backup to make sure there is no performance drop. ;;;","14/Apr/16 15:39;avinogradov;Semen, 

Please check changes. I'll check benchmarks in case everything is ok.

Also, I found method org.apache.ignite.internal.processors.cache.transactions.IgniteTxState#storeUsed
How do you think, should it be imlemented for *RemoteSingleStateImpl?;;;","16/Apr/16 08:04;avinogradov;Partially fixed found on review.

Main problem is conflict resolving in case of local store usage.
This problem exists at current implementation too.
I think that this problem should be solved different from decided on review.

Env:
Each node has local store. 
Local store contains primary and backup partitions.
At node fail store can be used to restore entries.

Problem:
Cluster partially failed, amount of failed node > backups. 

Initial solution:
Restart failed nodes and load entries from local stores after restart.
Resolve conflicts at rebalancing and user requests.

Cons:
A lot of changes required. Difficult to cover all cases. 

Better solution:
Topology validator should be used to prevent work with inconsistent data.
Recover steps:
1) Deny all user requests (admins should do that)
2) Restart all failed nodes.
3) Load all data from all available local stores at stable topology (after final rebalancing finished). 
    All conflicts will be resovled using conflict resolver in this case, correct?
    All entries will be restored since we have backups at local stores. (in case lost stores <= backups)
4) Allow user requests.

Thoughts?;;;","19/Apr/16 01:49;dsetrakyan;Is this feature optional? I think it should be set through configuration and should be turned off by default, because it only makes sense for per-JVM CacheStore and not for centralized databases. If it has been made configurable, what is the name of the configuration property?;;;","19/Apr/16 14:42;avinogradov;Dmitriy, 
As far as I understand we'd like to keep compatibility with previous solution?
I've added flag CacheConfiguration#isLocalStoreUpdateBackups and set it false by default. (can I set it true by default?)
Maybe we have to use System property instead of flag at CacheConfiguration?;;;","20/Apr/16 05:16;sboikov;Reviewed, did few minor changes, good to merge (if everybody agree about this new flag 'isLocalStoreUpdateBackups ').;;;","20/Apr/16 15:31;avinogradov;Eventually I've added system property IGNITE_LOCAL_STORE_KEEPS_PRIMARY_ONLY and set it false by default. It means that new behavior will be active by default.
Also I added more tests for old and new behavior.
In case user will try to combine nodes with versions ""before"" and ""after"" fix with configured local store he will gain warning:
""Since Ignite 1.5.15 Local Store keeps primary and backup partitions. To keep primary partitions only please set system property IGNITE_LOCAL_STORE_KEEPS_PRIMARY_ONLY  to 'true'.""
  ;;;","20/Apr/16 16:01;dsetrakyan;Can you explain why you decided to use a system property instead of regular configuration property?

Also, I am not sure I like the name, because this property is not about the local store, but about the cache store in general. I think it should be named {{isCentralizedStore()}} and should be {{true}} by default. If store is centralized, then there is no need to write backups to the store. On the other hand, if store is local to a node, then it should have both, primary and backup copies for the purpose of recovery.

Do you agree?;;;","21/Apr/16 08:17;avinogradov;Dmitriy,
This property is about local store usage only. It gives you two ways of local store behavoir: to keep backup partitions (new) or no (old). Nothing changed for regular stores.
I discussed solution based on configuration property with Yakov and we've decided that only compatibility flag (system property) should be provided to allow riskless upgrades.
Also, as I wrote before, we've decided to turn new behavior on by default, but inform users by warning that behavior changed.;;;","22/Apr/16 17:01;dsetrakyan;Anton, how do you know if  the CacheStore is local or not?;;;","22/Apr/16 19:50;sboikov;Dmitry, store is local if it has CacheLocalStore annotation.;;;","06/May/16 17:43;dsetrakyan;Let me summarize the new behavior, just so we are on the same page:
# All stores with {{@CacheLocalStore}} annotation will persist primary and backup copies by default.
# This behavior can be turned off if a user adds {{IGNITE_LOCAL_STORE_KEEPS_PRIMARY_ONLY}} system property.
# No new configuration properties have been added.

If the above is correct, then I think this change makes sense.;;;","10/May/16 16:41;avinogradov;Correct.;;;","10/May/16 17:04;dsetrakyan;Sounds good, please remember to update the documentation.;;;","13/May/16 01:59;dsetrakyan;Would be very nice to get it into 1.6 release. Looks like the only thing that is pending is a review. ;;;","13/May/16 08:05;sboikov;Reviewed, looks good (just do not forget to set correct GridCacheStoreManagerAdapter.LOCAL_STORE_KEEPS_PRIMARY_AND_BACKUPS_SINCE before merge).;;;","13/May/16 08:07;avinogradov;Sure, Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in GridUnsafeMap destruct method.,IGNITE-2863,12951708,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,yzhdanov,kromulan,kromulan,19/Mar/16 13:28,29/Mar/16 11:00,14/Jul/23 06:20,25/Mar/16 14:05,,,,1.6,cache,general,,,,0,,,,"There's a memory leak in GridUnsafeMap destruct method() for loop.
The loop's condition is wrong ""binAddr < memCap"" where offset + memCap should be used.",,kromulan,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/16 13:29;kromulan;memoryLeak.patch;https://issues.apache.org/jira/secure/attachment/12794351/memoryLeak.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,Patch,,,,,,,,9223372036854775807,,,,Tue Mar 29 10:39:05 UTC 2016,,,,,,,,,,"0|i2uwwv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Mar/16 13:30;kromulan;I've attached a small patch.;;;","25/Mar/16 14:06;yzhdanov;Thanks for contribution Krome Plasma!;;;","29/Mar/16 10:39;kromulan;No problem. Will post some other issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Do not generate index fields when them is absent in query fields,IGNITE-2856,12951076,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,17/Mar/16 03:15,27/Apr/16 07:32,14/Jul/23 06:20,12/Apr/16 10:58,1.6,,,1.6,UI,wizards,,,,0,,,,"Schema import utility can generate index fields that is exclude from query fields.
Also in index field name should be used java name instead of database name which is showed now",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 27 07:32:56 UTC 2016,,,,,,,,,,"0|i2ut0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/16 07:26;vsisko;Implemented filtration of index fields.
Fixed name of index field to java name.;;;","04/Apr/16 08:40;kuaw26;Please review and test with my changes.
You need to test indexes with one and several fields.;;;","04/Apr/16 09:18;kuaw26;Merged to master. Please test.

To test:

Create table in DB with several indexes: index for one field and index for several fields.
In schema import utility 
# import metadata for this table (all fields) - index should be generated.
# uncheck some fields th UI - index should be generated ONLY if all query fields that specified in index checked in UI.
;;;","06/Apr/16 08:02;pkonstantinov;Unchecked fields still present in QueryEntity in XML configuration.;;;","07/Apr/16 09:46;vsisko;Fixed generation of indexes in XML configuration.;;;","10/Apr/16 16:29;kuaw26;Looks good for me. Please take a look on my changings. Retest and if all OK submit for QA to Pavel.;;;","11/Apr/16 08:37;pkonstantinov;You fixed another place, but I'm sad about QueryEntity in the XML configuration(ignite-type-metadata.xml) and in the Java configuration (CacheConfig.java).;;;","12/Apr/16 10:58;vsisko;Fixed adding of unused fields from query fields. IGNITE-2856;;;","13/Apr/16 03:27;pkonstantinov;Successfully tested in branch.;;;","13/Apr/16 04:42;kuaw26;Merged to master. Please retest and close.;;;","27/Apr/16 07:32;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Job processor should be stopped earlier than service processor,IGNITE-2853,12951035,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vkulichenko,vkulichenko,vkulichenko,16/Mar/16 23:35,17/Mar/16 05:27,14/Jul/23 06:20,17/Mar/16 05:26,1.5.0.final,,,1.6,general,,,,,0,,,,"It's a common use case when a compute job accesses service. Currently, if such job is cancelled, it can't do this gracefully, because service is already stopped.",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 17 05:26:58 UTC 2016,,,,,,,,,,"0|i2usrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/16 05:26;vkulichenko;Fixed in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support of Comparable interface for BinaryObject,IGNITE-2852,12950987,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vkulichenko,vkulichenko,16/Mar/16 20:41,14/Aug/16 15:20,14/Jul/23 06:20,14/Aug/16 15:20,1.5.0.final,,,1.8,binary,,,,,0,,,,"When trying to convert {{TreeMap}} into binary object using {{toBinary}} method, the following exception fails:

{noformat}
Exception in thread ""main"" java.lang.ClassCastException: org.apache.ignite.internal.binary.BinaryObjectImpl cannot be cast to java.lang.Comparable
	at java.util.TreeMap.compare(TreeMap.java:1188)
	at java.util.TreeMap.put(TreeMap.java:531)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.marshalToBinary(CacheObjectBinaryProcessorImpl.java:495)
	at org.apache.ignite.internal.processors.cache.binary.IgniteBinaryImpl.toBinary(IgniteBinaryImpl.java:67)
	at TreeMapTest.main(TreeMapTest.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
{noformat}

This happens because maps are not wrapped into binary objects, therefore we create another {{TreeMap}} and put {{BinaryObject}} instances, which are not {{Comparable}}.",,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Aug 14 15:20:22 UTC 2016,,,,,,,,,,"0|i2usgn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Aug/16 06:05;vozerov;This appears to be pretty tough task. As soon as object is converted to binary form we are no longer able to compare it with another binaries since we lost comparison logic.

Let's keep this ticket on hold for a while, until we came up with clear solution.;;;","14/Aug/16 15:20;vozerov;Fixed by adding special wrappers for these types.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObjectBuilder doesn't properly check metadata,IGNITE-2849,12950815,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dmagda,dmagda,dmagda,16/Mar/16 10:45,24/Mar/16 17:08,14/Jul/23 06:20,24/Mar/16 17:08,1.5.0.final,,,1.6,,,,,,0,community,important,,"There are several cases when {{BinaryObjectBuilder}} doesn't properly check fields metadata when {{build}} method is called.

1) Set {{builder.setField(""name"", null).build()}} and {{builder.setField(""name"", new Date()).build()}} won't check metadata allowing to serialize the object;

2) Metadata is not checked at all if new BinaryObject is assembled from the previous one {{binaries.builder(someBinaryObject).setField().build()}}
",,dmagda,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 24 17:08:47 UTC 2016,,,,,,,,,,"0|i2uref:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Mar/16 13:48;dmagda;Fixed according to the description. Checked with TC. Ready for review.;;;","22/Mar/16 09:22;dmagda;[~vozerov], please review. TC looks good.
The changes are incorporated in ignite-2849 branch.;;;","24/Mar/16 07:50;vozerov;Denis,

Several comments here:
1) I cannot say anything about change to {{CacheJdbcPojoStore}}. Probably someone who developed it should review.
2) BinaryUtils: we cannot change ""Object"" -> ""BinaryObject"". They are essentialy the same thing - Object - written in different forms. ""OBJ"" - is something written as normal class instance, ""BINARY_OBJ"" - something written as builder or binary object. I think this change should be reverted.

The rest looks fine.;;;","24/Mar/16 08:56;dmagda;Vladimir,

Thanks for the review.

1) This modification was required to fix wrong metadata related issue. One of the tests put ""null"" as a value for a field read from the store. After that a non-null value was set for the field but we got wrong metadata exception because Object type is not equal to String type. That's why I switched to the usage of {{BinaryObjectBuilder.setField(String name, @Nullable T val, Class<? super T> type)}}

2) That was required modification to fix the bug when {{BinaryUtils.fieldTypeId(String typeName)}} always returned {{OBJ}} type for both {{OBJ}} and {{BINARY_OBJ}} and this lead to the bugs I revealed after fixing the wrong metadata issue.;;;","24/Mar/16 17:08;dmagda;Took into account review comments (point 2) and merged the changes into the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite OSGI exit code 1 on TC,IGNITE-2848,12950811,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,ashutak,ashutak,16/Mar/16 10:31,16/Mar/16 13:50,14/Jul/23 06:20,16/Mar/16 13:50,,,,,,,,,,0,,,,"http://204.14.53.153/viewLog.html?buildId=208978&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteOSGi

{noformat}
[09:20:59]Step 5/6: Build and run tests OSGi (Maven) (7m:17s)
[09:28:14][Step 5/6] org.apache.ignite:ignite-weblogic-test
[09:28:14][org.apache.ignite:ignite-weblogic-test] Failed to execute goal org.apache.maven.plugins:maven-war-plugin:2.1.1:war (default-war) on project ignite-weblogic-test: Failed to copy file for artifact [org.apache.ignite:ignite-core:jar:1.6.0-SNAPSHOT:compile]
[09:28:16][Step 5/6] Step Build and run tests OSGi (Maven) failed
{noformat}",,ashutak,avinogradov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 16 13:50:01 UTC 2016,,,,,,,,,,"0|i2urdj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Mar/16 13:50;avinogradov;Build splitted to 
1)mvn install -U -Plgpl,examples,-clean-libs,-release -Dmaven.javadoc.skip=true -DskipTests
2)mvn test -U -Plgpl,examples,-clean-libs,-release -Dmaven.test.failure.ignore=true -Dmaven.javadoc.skip=true -DfailIfNoTests=false -Dtest=%TEST_SUITE%;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: ICache.LoadAll method is missing,IGNITE-2844,12950776,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,ptupitsyn,ptupitsyn,16/Mar/16 08:39,23/Mar/16 09:45,14/Jul/23 06:20,23/Mar/16 09:44,1.5.0.final,,,1.6,platforms,,,,,0,,,,"See IgniteCache.loadAll, need the same in .NET.",,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 23 09:45:25 UTC 2016,,,,,,,,,,"0|i2ur5r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/16 15:22;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/562

    IGNITE-2844 .NET: Implement ICache.LoadAll

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2844

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/562.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #562
    
----
commit 125631b041951ffdac21f58b51eb0ded5c4870af
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T13:33:01Z

    IGNITE-2844 .NET: ICache.LoadAll method is missing

commit d06209b4ec9e11e10988b9f810897360f7de9b16
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T07:48:56Z

    Merge remote-tracking branch 'remotes/upstream/master' into ignite-2844

commit c788d96340191cf65189449e946ccc6a3aed4274
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T09:35:22Z

    wip

commit a304ddd283b0994be348f08df45db51371e6fce6
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T09:39:51Z

    wip

commit 55601dcf9657c67c96237728a51408a47596f6e5
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T10:40:43Z

    wip

commit ee5af2ec83a00ec4a9e8a6cb5aa6f89cb9b28091
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T10:44:20Z

    wip

commit 55d3008228a0e61b2eab5db88505d1c84752f4c1
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T10:49:03Z

    test added

commit b5fd8e05baa1a314bdc2a74d7da2925b84ac8c01
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T11:36:50Z

    wip

commit 885b838f37a4734d455234ae5d04ac232c08483b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T11:41:59Z

    wip

commit 1566b6c6bf6e5af6d336cdd016d342e1e43e955c
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T12:03:43Z

    Fix test store

commit 23828c062a0cbecf086b4bedcf0ee5d980d80846
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T12:11:41Z

    cleanup

commit 798881220721901335c42b6551984f0498a766f8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T12:16:38Z

    wip tests

commit 098bc0fd018c0cb29b15a7c2c89e773e5e21489f
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T12:20:31Z

    wip

commit ddf06659f3c7724eeaff9ba46f17a2a49cda2fb2
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-17T15:16:35Z

    Fix overwrite test

----
;;;","21/Mar/16 08:23;vozerov;Pavel,

We need to have synchronous version as well. Otherwise, API looks inconsistent. I understand, that there is no sync method in Java. But Java API is based on jcache spec. These is not jcache in .NET, so we'd better to follow our existing approach when all operations have both sync and async versions.

Vladimir.;;;","21/Mar/16 12:54;ptupitsyn;Done;;;","23/Mar/16 09:45;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/562
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: CacheConfiguration.WriteThrough/ReadThrough properties are missing,IGNITE-2843,12950775,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,ptupitsyn,ptupitsyn,16/Mar/16 08:20,16/Mar/16 10:11,14/Jul/23 06:20,16/Mar/16 10:11,1.6,,,1.6,platforms,,,,,0,,,,CacheConfiguration.WriteThrough/ReadThrough properties are missing,,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2703,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 16 10:11:46 UTC 2016,,,,,,,,,,"0|i2ur5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Mar/16 09:17;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/556

    IGNITE-2843 .NET: Add CacheConfiguration.WriteThrough/ReadThrough properties

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2843

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/556.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #556
    
----
commit 0d5460a4bf36087a483b33b97fa7dd7031558d92
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T08:27:16Z

    IGNITE-2843 .NET: CacheConfiguration.WriteThrough/ReadThrough properties are missing

commit d3b7f6c2c077c364c28915ecd1010481dede6e06
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T08:48:26Z

    wip .net props

commit e13f9a877884b361739e59d029a160e537e06ecc
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T08:50:50Z

    wip

commit 6c299163803aee60fa4d85f3c8aa5fc5e3b65a31
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T08:53:28Z

    wip tests

commit d50a6d2d9e8d12d25fcfb913ef830874534ac2fe
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T08:55:22Z

    Tests done

commit b8ee39171c79bb6a19e9c5fbcdeb418eca8141a1
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T09:12:18Z

    Cache store test added

commit b50e9c6d77dc39ed63b3341bbd4e571c5e92d9f0
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T09:13:50Z

    wip

commit b46db6722939fbf0b60de1734649af4c31241d7e
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-16T09:15:45Z

    Fix store test

----
;;;","16/Mar/16 10:11;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/556
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObjectOffHeapImpl leaked to public code,IGNITE-2835,12950495,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ashutak,dmagda,dmagda,15/Mar/16 12:07,27/Apr/16 15:51,14/Jul/23 06:20,27/Apr/16 15:51,1.5.0.final,,,1.6,,,,,,0,community,important,,"To my knowledge {{BinaryObjectOffHeapImpl}} is considered to be used under some internal lock only to prevent possible offheap pointer movement.

However seems that we made it available to public code. If to start a partitioned cache in {{OFFHEAP_TIRED}} mode, get {{BinaryObject}} from the cache inside of a TX and put the same object back we will get exception like below
{noformat}
[15:00:00,892][WARN ][main][GridNearTxLocal] Set transaction invalidation flag to true due to error [tx=GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMapped=true, needCheckBackup=null, hasRemoteLocks=false, mappings=IgniteTxMappingsImpl [], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxStateImpl [activeCacheIds=GridLongList [idx=1, arr=[-1206548976]], txMap={IgniteTxKey [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976]=IgniteTxEntry [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976], val=[op=UPDATE, val=SomeType [idHash=1337835760, hash=0, field2=name_0, field1=0]], prevVal=[op=UPDATE, val=SomeType [idHash=1337835760, hash=0, field2=name_0, field1=0]], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200871, order=1458043167489], filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtColocatedCacheEntry [super=GridDhtCacheEntry [rdrs=[], locPart=GridDhtLocalPartition [id=0, mapPubSize=0, rmvQueue=GridCircularBuffer [sizeMask=255, idxGen=1], cntr=1, state=OWNING, reservations=0, empty=true, createTime=03/15/2016 15:00:00, mapPubSize=0], super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=0, hasValBytes=true], val=null, startVer=1458043167488, ver=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200890, order=1458043167490], hash=-1484017934, extras=GridCacheObsoleteEntryExtras [obsoleteVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200890, order=1458043167491]], flags=7]]]], prepared=false, locked=true, nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=2, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487]]}], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], writeVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200871, order=1458043167489], implicit=false, loc=true, threadId=1, startTime=1458043200850, nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, startVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], endVer=null, isolation=REPEATABLE_READ, concurrency=PESSIMISTIC, timeout=0, sysInvalidate=true, sys=false, plc=2, commitVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], finalizing=NONE, preparing=false, invalidParts=null, state=UNKNOWN, timedOut=false, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=1], duration=40ms, onePhaseCommit=true], size=1]]], err=class o.a.i.i.transactions.IgniteTxHeuristicCheckedException: Failed to locally write to cache (all transaction entries will be invalidated, however there was a window when entries for this transaction were visible to others): GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMapped=true, needCheckBackup=null, hasRemoteLocks=false, mappings=IgniteTxMappingsImpl [], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxStateImpl [activeCacheIds=GridLongList [idx=1, arr=[-1206548976]], txMap={IgniteTxKey [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976]=IgniteTxEntry [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976], val=[op=UPDATE, val=SomeType [idHash=1337835760, hash=0, field2=name_0, field1=0]], prevVal=[op=UPDATE, val=SomeType [idHash=1337835760, hash=0, field2=name_0, field1=0]], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200871, order=1458043167489], filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtColocatedCacheEntry [super=GridDhtCacheEntry [rdrs=[], locPart=GridDhtLocalPartition [id=0, mapPubSize=1, rmvQueue=GridCircularBuffer [sizeMask=255, idxGen=0], cntr=1, state=OWNING, reservations=0, empty=false, createTime=03/15/2016 15:00:00, mapPubSize=1], super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=0, hasValBytes=true], val=null, startVer=1458043167488, ver=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200317, order=1458043162489], hash=-1484017934, extras=GridCacheMvccEntryExtras [mvcc=GridCacheMvcc [locs=[GridCacheMvccCandidate [nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, ver=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], timeout=0, ts=1458043200860, threadId=1, id=1003, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=1], reentry=null, otherNodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, otherVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], mappedDhtNodes=null, mappedNearNodes=null, ownerVer=null, serOrder=null, key=KeyCacheObjectImpl [val=0, hasValBytes=true], masks=local=1|owner=1|ready=1|reentry=0|used=0|tx=1|single_implicit=0|dht_local=1|near_local=0|removed=0, prevVer=null, nextVer=null]], rmts=null]], flags=6]]]], prepared=false, locked=true, nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=2, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487]]}], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], writeVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200871, order=1458043167489], implicit=false, loc=true, threadId=1, startTime=1458043200850, nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, startVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], endVer=null, isolation=REPEATABLE_READ, concurrency=PESSIMISTIC, timeout=0, sysInvalidate=false, sys=false, plc=2, commitVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], finalizing=NONE, preparing=false, invalidParts=null, state=COMMITTING, timedOut=false, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=1], duration=20ms, onePhaseCommit=true], size=1]]]]
Exception in thread ""main"" class org.apache.ignite.transactions.TransactionHeuristicException: Failed to locally write to cache (all transaction entries will be invalidated, however there was a window when entries for this transaction were visible to others): GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMapped=true, needCheckBackup=null, hasRemoteLocks=false, mappings=IgniteTxMappingsImpl [], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxStateImpl [activeCacheIds=GridLongList [idx=1, arr=[-1206548976]], txMap={IgniteTxKey [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976]=IgniteTxEntry [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976], val=[op=UPDATE, val=SomeType [idHash=1337835760, hash=0, field2=name_0, field1=0]], prevVal=[op=UPDATE, val=SomeType [idHash=1337835760, hash=0, field2=name_0, field1=0]], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200871, order=1458043167489], filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtColocatedCacheEntry [super=GridDhtCacheEntry [rdrs=[], locPart=GridDhtLocalPartition [id=0, mapPubSize=1, rmvQueue=GridCircularBuffer [sizeMask=255, idxGen=0], cntr=1, state=OWNING, reservations=0, empty=false, createTime=03/15/2016 15:00:00, mapPubSize=1], super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=0, hasValBytes=true], val=null, startVer=1458043167488, ver=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200317, order=1458043162489], hash=-1484017934, extras=GridCacheMvccEntryExtras [mvcc=GridCacheMvcc [locs=[GridCacheMvccCandidate [nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, ver=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], timeout=0, ts=1458043200860, threadId=1, id=1003, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=1], reentry=null, otherNodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, otherVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], mappedDhtNodes=null, mappedNearNodes=null, ownerVer=null, serOrder=null, key=KeyCacheObjectImpl [val=0, hasValBytes=true], masks=local=1|owner=1|ready=1|reentry=0|used=0|tx=1|single_implicit=0|dht_local=1|near_local=0|removed=0, prevVer=null, nextVer=null]], rmts=null]], flags=6]]]], prepared=false, locked=true, nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=2, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487]]}], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], writeVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200871, order=1458043167489], implicit=false, loc=true, threadId=1, startTime=1458043200850, nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, startVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], endVer=null, isolation=REPEATABLE_READ, concurrency=PESSIMISTIC, timeout=0, sysInvalidate=false, sys=false, plc=2, commitVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], finalizing=NONE, preparing=false, invalidParts=null, state=COMMITTING, timedOut=false, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=1], duration=20ms, onePhaseCommit=true], size=1]]]
	at org.apache.ignite.internal.util.IgniteUtils$11.apply(IgniteUtils.java:785)
	at org.apache.ignite.internal.util.IgniteUtils$11.apply(IgniteUtils.java:783)
	at org.apache.ignite.internal.util.IgniteUtils.convertException(IgniteUtils.java:877)
	at org.apache.ignite.internal.processors.cache.transactions.TransactionProxyImpl.commit(TransactionProxyImpl.java:264)
	at org.apache.ignite.examples.sber.BinaryObjectOffHeapIssue.main(BinaryObjectOffHeapIssue.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: class org.apache.ignite.internal.transactions.IgniteTxHeuristicCheckedException: Failed to locally write to cache (all transaction entries will be invalidated, however there was a window when entries for this transaction were visible to others): GridNearTxLocal [mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMapped=true, needCheckBackup=null, hasRemoteLocks=false, mappings=IgniteTxMappingsImpl [], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxStateImpl [activeCacheIds=GridLongList [idx=1, arr=[-1206548976]], txMap={IgniteTxKey [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976]=IgniteTxEntry [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976, txKey=IgniteTxKey [key=KeyCacheObjectImpl [val=0, hasValBytes=true], cacheId=-1206548976], val=[op=UPDATE, val=SomeType [idHash=1337835760, hash=0, field2=name_0, field1=0]], prevVal=[op=UPDATE, val=SomeType [idHash=1337835760, hash=0, field2=name_0, field1=0]], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200871, order=1458043167489], filters=[], filtersPassed=false, filtersSet=true, entry=GridDhtColocatedCacheEntry [super=GridDhtCacheEntry [rdrs=[], locPart=GridDhtLocalPartition [id=0, mapPubSize=1, rmvQueue=GridCircularBuffer [sizeMask=255, idxGen=0], cntr=1, state=OWNING, reservations=0, empty=false, createTime=03/15/2016 15:00:00, mapPubSize=1], super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [val=0, hasValBytes=true], val=null, startVer=1458043167488, ver=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200317, order=1458043162489], hash=-1484017934, extras=GridCacheMvccEntryExtras [mvcc=GridCacheMvcc [locs=[GridCacheMvccCandidate [nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, ver=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], timeout=0, ts=1458043200860, threadId=1, id=1003, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=1], reentry=null, otherNodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, otherVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], mappedDhtNodes=null, mappedNearNodes=null, ownerVer=null, serOrder=null, key=KeyCacheObjectImpl [val=0, hasValBytes=true], masks=local=1|owner=1|ready=1|reentry=0|used=0|tx=1|single_implicit=0|dht_local=1|near_local=0|removed=0, prevVer=null, nextVer=null]], rmts=null]], flags=6]]]], prepared=false, locked=true, nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=2, partUpdateCntr=0, serReadVer=null, xidVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487]]}], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], writeVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200871, order=1458043167489], implicit=false, loc=true, threadId=1, startTime=1458043200850, nodeId=993f5733-b014-4a5b-a6d1-934aeec9e9f5, startVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], endVer=null, isolation=REPEATABLE_READ, concurrency=PESSIMISTIC, timeout=0, sysInvalidate=false, sys=false, plc=2, commitVer=GridCacheVersion [topVer=69523200, nodeOrderDrId=1, globalTime=1458043200852, order=1458043167487], finalizing=NONE, preparing=false, invalidParts=null, state=COMMITTING, timedOut=false, topVer=AffinityTopologyVersion [topVer=1, minorTopVer=1], duration=20ms, onePhaseCommit=true], size=1]]]
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:1162)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.finish(GridNearTxLocal.java:738)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxFinishFuture.finish(GridNearTxFinishFuture.java:331)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal$4.apply(GridNearTxLocal.java:838)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal$4.apply(GridNearTxLocal.java:830)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(GridFutureAdapter.java:262)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.listen(GridFutureAdapter.java:225)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.commitAsync(GridNearTxLocal.java:830)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.commitTxAsync(GridCacheAdapter.java:4220)
	at org.apache.ignite.internal.processors.cache.GridCacheSharedContext.commitTxAsync(GridCacheSharedContext.java:619)
	at org.apache.ignite.internal.processors.cache.transactions.TransactionProxyImpl.commit(TransactionProxyImpl.java:256)
	... 6 more
Caused by: java.lang.UnsupportedOperationException
	at org.apache.ignite.internal.binary.BinaryObjectOffheapImpl.prepareForCache(BinaryObjectOffheapImpl.java:358)
	at org.apache.ignite.internal.processors.cacheobject.IgniteCacheObjectProcessorImpl.prepareForCache(IgniteCacheObjectProcessorImpl.java:98)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerSet(GridCacheMapEntry.java:1182)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:1004)
	... 16 more
{noformat}

The test is attached.",,ashutak,dmagda,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/16 12:09;dmagda;BinaryObjectOffHeapIssue.java;https://issues.apache.org/jira/secure/attachment/12793536/BinaryObjectOffHeapIssue.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 27 15:51:01 UTC 2016,,,,,,,,,,"0|i2upfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Mar/16 18:20;githubbot;GitHub user ashutakGG opened a pull request:

    https://github.com/apache/ignite/pull/567

    IGNITE-2835 Binary object off heap impl leak on public API

    Fix.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ashutakGG/incubator-ignite ignite-2835-BinaryObjectOffHeapImpl

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/567.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #567
    
----
commit 2e64d0d7cc51552fffc231cbc850cd615076fb85
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T06:31:58Z

    IGNITE-2258: IGFS: now default path modes could be optionally disabled using FileSystemConfiguration.isInitializeDefaultPathModes() property.

commit 4cd3b3dc2f1fa0f1a9cceb6bf544dd8fb505d7f5
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T09:52:00Z

    IGNITE-2258: Fixed type on getter/setter.

commit 5d58fcbf40fdb9114e4cbb32b72dd9bce7fa38ca
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-01-04T06:47:28Z

    IGNITE-2308: Fixed HadoopClassLoader dependency resolution. This closes #391.

commit 83a19179cee2bb15adc36c2265dd0a3c794b60bb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-04T08:14:58Z

    IGNITE-2218: Fixed a problem with native Hadoop libraries load. This closes #378.

commit 1d7fb5702fa33cf395e797161f3a86a9600921a7
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-05T06:59:31Z

    IGNITE-2206: Hadoop file system creation is now abstracted out using factory interface.

commit a12ec7d08573d5396654a5ba05bb7d873e4c2677
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-06T10:50:48Z

    1.5.2

commit 090a5de6a930c10a3a57a6e28c486fe5c87e028d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T12:50:39Z

    Minor fix.

commit c786820dda7f7cd1849c5593ac24ca9072945887
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-07T13:48:14Z

    IgniteHadoopIgfsSecondaryFileSystem.usrName field is renamed to ""userName"" to preserve backward compatibility.

commit 6ab4ce246316442fa4295f9941c372fea70c24ef
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T06:23:55Z

    IGNITE-2342: Set correct classlader before calling FileSystem.get().

commit 077ab1b3a77fdb1c2c2fd6360fc5b60fda6c50c3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:17:45Z

    IGNITE-2341: Improved warning message when BinaryMarshaller cannot be used. Also it is not shown when ""org.apache.ignite"" classes is in described situation.

commit 86c4816edfd0e983014f136ffc92cde28ec56cca
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:26:03Z

    IGNITE-2340: Improved error thrown when PROXY mode exists, but secondary file system is not IgniteHadoopIgfsSecondaryFileSystem.

commit fc48a8429a84ef6c87ed3225a218d7d3ae617e14
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:48:42Z

    Merge branch 'ignite-1.5.2' into ignite-1.5.3

commit 86740cefe212ed0f506d81056dd8e76de9a31e4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-08T09:32:11Z

    1.5.3-SNAPSHOT

commit 92229d2a6c6ef86772a62cb52b3aa07a55c99d89
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T05:56:34Z

    ignite-2359 Added locking for files used by MarshallerContextImpl. (cherry picked from commit 1d8c4e2)

commit 2e4ce585d5f54502c6511d3425b1cd5fbf0a7f4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-13T10:37:33Z

    1.5.4-SNAPSHOT

commit 6e5f9f0c7d4c86773b1f0cd5c5a673acb58c86c2
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-13T11:42:27Z

    Changed year to 2016 in Copyrights

commit 02dbcfd8ed2701a4f415c8871d0b8fd08bfa0583
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-01-13T13:47:32Z

    IGNITE-2365 - Notify policy if swap or offheap is enabled and rebalanced entry was not preloaded.
    IGNITE-2099 - Fixing custom collections.
    This closes #396

commit 86c2ba2a601e82b824cf17422683e5398a4d8c7d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T15:40:08Z

    ignite-2350 Pass update notifier flag in discovery data (all cluster nodes will have the same notifier status as first cluster node)
    (cherry picked from commit 7175a42)

commit e1a494df400fc37ca04e8d88d1cf20bca02607b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:16:33Z

    Renamed fields to change fields write order (to preserve backward compatibility).
    (cherry picked from commit 2a4adf5)

commit 09f978234b6062afa1e1658d5a6439365a856aca
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:42:44Z

    Merge remote-tracking branch 'origin/ignite-1.5.4' into ignite-1.5.4

commit 30043e7892d0b52dc851ce5ec79c7eb3b7cc44fb
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-14T13:02:50Z

    Added release notes

commit cc3db35925698f1670a8bf1c6a1830c0c9b51290
Author: vershov <vershov@gridgain.com>
Date:   2016-01-14T14:21:56Z

    IGNITE-2032 Unwind undeploys in preloader - Fixes #369.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit a5c85ca7749ae90af2e4a29e2162713b480e40fa
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes

commit 8f32a29c5a7b28b7e1173582f4c7cef5b6d73b27
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-15T11:00:29Z

    1.5.4-SNAPSHOT

commit 6482dc80bf9cdf7aa4f592d9266c6745211b1c4c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-15T12:15:02Z

    ignite-2386 Fixed DiscoverManager to do not increase minor topology version if exchange is not triggered.
    (cherry picked from commit d881417)

commit 4ba6574dfa8077f8de23c8c2663826f81c7fd187
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:15:04Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5e1f287dc83343945b0e47b83ee7724a8e)
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedGetFuture.java
    	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheStoreCollectionTest.java

commit 4b31f4e66c15003cee866a6e5660257346c16c1c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:05:37Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5)

commit 1cf14fcff58c51a628df6309f05be7f0b840d5f8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2015-12-30T10:51:32Z

    IGNITE-2228: .NET: Compute futures could be cancelled.

commit 2f292788cde807d5f1c80cf9fcb8b29cd4e5ee35
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-01-18T10:01:43Z

    IGNITE-2228: Platform compute futures cancellation support. This closes #394.

commit 1f5b4a3c478cdf4049af9600c7abe588c3d226fc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-18T14:24:18Z

    .NET: IgniteFutureCancelledException is marked as serializable.

----
;;;","18/Mar/16 18:21;ashutak;Made a potential fix. Waiting for TC results.;;;","21/Mar/16 20:50;ashutak;Fixed in a more proper way. 
Found tests that should have test this case and reworked them. Almost finished with the tests.
Waiting for TC results.;;;","22/Mar/16 15:35;ashutak;TC looks good. 

Ready for review.;;;","28/Mar/16 11:02;sboikov;Fix looks good, but I think we need better test coverage. Please make sure we have tests for all cache operations which return values:
- get/getAll/getEntries/getAllOutTx
- invoke/invokeAll
- getAndPut
- getAndRemove
- getAndReplace
- getAndPutIfAbsent
- localPeek

For transactional cache need to tests these operations inside explicit transaction (with all tx modes) and with implicit transactions (i.e. just cache.put outside of explicit transaction).

Also please make sure these tests run for both OFFHEAP_TIERED and OFFHEAP_VALUES modes.;;;","31/Mar/16 16:22;githubbot;Github user ashutakGG closed the pull request at:

    https://github.com/apache/ignite/pull/567
;;;","31/Mar/16 16:32;githubbot;GitHub user ashutakGG opened a pull request:

    https://github.com/apache/ignite/pull/594

    Ignite 2835 BinaryObjectOffHeapImpl leaked to public code

    https://issues.apache.org/jira/browse/IGNITE-2835

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2835-BinaryObjectOffHeapImpl

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/594.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #594
    
----
commit 2e64d0d7cc51552fffc231cbc850cd615076fb85
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T06:31:58Z

    IGNITE-2258: IGFS: now default path modes could be optionally disabled using FileSystemConfiguration.isInitializeDefaultPathModes() property.

commit 4cd3b3dc2f1fa0f1a9cceb6bf544dd8fb505d7f5
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T09:52:00Z

    IGNITE-2258: Fixed type on getter/setter.

commit 5d58fcbf40fdb9114e4cbb32b72dd9bce7fa38ca
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-01-04T06:47:28Z

    IGNITE-2308: Fixed HadoopClassLoader dependency resolution. This closes #391.

commit 83a19179cee2bb15adc36c2265dd0a3c794b60bb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-04T08:14:58Z

    IGNITE-2218: Fixed a problem with native Hadoop libraries load. This closes #378.

commit 1d7fb5702fa33cf395e797161f3a86a9600921a7
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-05T06:59:31Z

    IGNITE-2206: Hadoop file system creation is now abstracted out using factory interface.

commit a12ec7d08573d5396654a5ba05bb7d873e4c2677
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-06T10:50:48Z

    1.5.2

commit 090a5de6a930c10a3a57a6e28c486fe5c87e028d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T12:50:39Z

    Minor fix.

commit c786820dda7f7cd1849c5593ac24ca9072945887
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-07T13:48:14Z

    IgniteHadoopIgfsSecondaryFileSystem.usrName field is renamed to ""userName"" to preserve backward compatibility.

commit 6ab4ce246316442fa4295f9941c372fea70c24ef
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T06:23:55Z

    IGNITE-2342: Set correct classlader before calling FileSystem.get().

commit 077ab1b3a77fdb1c2c2fd6360fc5b60fda6c50c3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:17:45Z

    IGNITE-2341: Improved warning message when BinaryMarshaller cannot be used. Also it is not shown when ""org.apache.ignite"" classes is in described situation.

commit 86c4816edfd0e983014f136ffc92cde28ec56cca
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:26:03Z

    IGNITE-2340: Improved error thrown when PROXY mode exists, but secondary file system is not IgniteHadoopIgfsSecondaryFileSystem.

commit fc48a8429a84ef6c87ed3225a218d7d3ae617e14
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:48:42Z

    Merge branch 'ignite-1.5.2' into ignite-1.5.3

commit 86740cefe212ed0f506d81056dd8e76de9a31e4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-08T09:32:11Z

    1.5.3-SNAPSHOT

commit 92229d2a6c6ef86772a62cb52b3aa07a55c99d89
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T05:56:34Z

    ignite-2359 Added locking for files used by MarshallerContextImpl. (cherry picked from commit 1d8c4e2)

commit 2e4ce585d5f54502c6511d3425b1cd5fbf0a7f4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-13T10:37:33Z

    1.5.4-SNAPSHOT

commit 6e5f9f0c7d4c86773b1f0cd5c5a673acb58c86c2
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-13T11:42:27Z

    Changed year to 2016 in Copyrights

commit 02dbcfd8ed2701a4f415c8871d0b8fd08bfa0583
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-01-13T13:47:32Z

    IGNITE-2365 - Notify policy if swap or offheap is enabled and rebalanced entry was not preloaded.
    IGNITE-2099 - Fixing custom collections.
    This closes #396

commit 86c2ba2a601e82b824cf17422683e5398a4d8c7d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T15:40:08Z

    ignite-2350 Pass update notifier flag in discovery data (all cluster nodes will have the same notifier status as first cluster node)
    (cherry picked from commit 7175a42)

commit e1a494df400fc37ca04e8d88d1cf20bca02607b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:16:33Z

    Renamed fields to change fields write order (to preserve backward compatibility).
    (cherry picked from commit 2a4adf5)

commit 09f978234b6062afa1e1658d5a6439365a856aca
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:42:44Z

    Merge remote-tracking branch 'origin/ignite-1.5.4' into ignite-1.5.4

commit 30043e7892d0b52dc851ce5ec79c7eb3b7cc44fb
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-14T13:02:50Z

    Added release notes

commit cc3db35925698f1670a8bf1c6a1830c0c9b51290
Author: vershov <vershov@gridgain.com>
Date:   2016-01-14T14:21:56Z

    IGNITE-2032 Unwind undeploys in preloader - Fixes #369.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit a5c85ca7749ae90af2e4a29e2162713b480e40fa
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes

commit 8f32a29c5a7b28b7e1173582f4c7cef5b6d73b27
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-15T11:00:29Z

    1.5.4-SNAPSHOT

commit 6482dc80bf9cdf7aa4f592d9266c6745211b1c4c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-15T12:15:02Z

    ignite-2386 Fixed DiscoverManager to do not increase minor topology version if exchange is not triggered.
    (cherry picked from commit d881417)

commit 4ba6574dfa8077f8de23c8c2663826f81c7fd187
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:15:04Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5e1f287dc83343945b0e47b83ee7724a8e)
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedGetFuture.java
    	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheStoreCollectionTest.java

commit 4b31f4e66c15003cee866a6e5660257346c16c1c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:05:37Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5)

commit 1cf14fcff58c51a628df6309f05be7f0b840d5f8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2015-12-30T10:51:32Z

    IGNITE-2228: .NET: Compute futures could be cancelled.

commit 2f292788cde807d5f1c80cf9fcb8b29cd4e5ee35
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-01-18T10:01:43Z

    IGNITE-2228: Platform compute futures cancellation support. This closes #394.

commit 1f5b4a3c478cdf4049af9600c7abe588c3d226fc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-18T14:24:18Z

    .NET: IgniteFutureCancelledException is marked as serializable.

----
;;;","04/Apr/16 17:51;ashutak;Added tests as advised on review. Waiting for TC.;;;","05/Apr/16 11:56;githubbot;Github user ashutakGG closed the pull request at:

    https://github.com/apache/ignite/pull/594
;;;","27/Apr/16 15:51;ashutak;Merged at master (f970c11b3be14d3888e4843aca0d8b05ccac9986).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
High memory utilization when OFFHEAP_TIERED mode and expiry policy are enabled.,IGNITE-2833,12950444,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,amashenkov,vozerov,vozerov,15/Mar/16 08:51,21/Dec/16 17:03,14/Jul/23 06:20,06/Sep/16 10:13,1.5.0.final,,,1.8,cache,,,,,0,community,important,,"The problem is originally reported by Neil Wightman: http://apache-ignite-users.70518.x6.nabble.com/Off-Heap-cache-using-lots-of-heap-memory-td3414.html

*Steps to reproduce*
1) Run attached code and XML config. Observe that heap size is about 1Gb.
2) Comment expiry policy setter in the code, run again. Now only 150Mb is consumed.",,amashenkov,githubbot,neilwightman,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-3840,,,,,,,,,,,"15/Mar/16 08:53;vozerov;IgniteExpiryIssue.java;https://issues.apache.org/jira/secure/attachment/12793506/IgniteExpiryIssue.java","15/Mar/16 08:53;vozerov;config.xml;https://issues.apache.org/jira/secure/attachment/12793505/config.xml",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 21 17:03:48 UTC 2016,,,,,,,,,,"0|i2up3z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Sep/16 10:57;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1031

    IGNITE-2833 : GridCacheTtlManager pending queue retention size optimization

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2833

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1031.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1031
    
----
commit e1ec0dedab0221b53dd11f2854c8c88b2641d147
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-24T11:31:43Z

    IGNITE-2865 Continuous query event passed to filter should be immutable for users. This closes #744.
    (cherry picked from commit 046657b)

commit 727afc87dce6c26756b56620c2aaccc3a3d0117e
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-05-25T05:29:00Z

    IGNITE-2667: Allow to start caches in PRIVATE and ISOLATED deployment modes when BinaryMarshaller is used

commit 183620cd31095dcd92471927cccf8741e3b63ed7
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-25T06:47:14Z

    IGNITE-3168 Added idle timeout property.

commit 30aa287b881d4f9dc3fd5eec9840eab8d9a20828
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-24T13:57:20Z

    ignite-2620 Skip empty entries in GridCacheMapEntry.onTtlExpired
    (cherry picked from commit 6fc274a)

commit e2db87bb1b6c71d7978af17e9f2005ba1c661ab4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-25T07:06:43Z

    Added trace logging for entry/offheap updates.
    (cherry picked from commit 9b2767f)

commit 6fcc7a41d8676956983792717483318b85781479
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-05-25T09:54:40Z

    IGNITE-2538 - IgniteRDD count() and isEmpty() method use IgniteCache API

commit e274d44a37fd1269e7a3a5f0000e1ee6139fd0b0
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-26T11:57:52Z

    IGNITE-3188: Binary marshaller doesn't unmarshal a void type (added tests)

commit 6687e2bfb9627ce08c1c258527e2927606a500ed
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T08:48:00Z

    review IGNITE-2708 Need to validate that SPIs are started only once
    (cherry picked from commit cd063da)

commit 40a41fc50bdb73d50e2aa13da8203784be98e38a
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T08:59:02Z

    reverting review IGNITE-2708 Need to validate that SPIs are started only once
    (cherry picked from commit bf561e1)

commit d05786d8bfc8177223b6db9a98bd3c8170b6bcf1
Author: Ryan Zhao <ryan.zhao.cs@gmail.com>
Date:   2016-05-13T09:00:43Z

    review IGNITE-2708 Need to validate that SPIs are started only once (commit with proper author)
    (cherry picked from commit 98338ff)

commit 9d937ca34775f39b46568eb3fca4585ce00a0fb1
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2016-05-13T09:54:01Z

    review IGNITE-2708 Need to validate that SPIs are started only once (added logic to protect properly started grids)
    (cherry picked from commit b8d624a)

commit edc2947d7340cac4a3c90fa726c23d5d47798ab9
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-25T10:07:03Z

    IGNITE-3191: IGFS: Improved error logging for operations in dual mode.

commit 2f1747d726da87b67f6c5323b3e64762d56398cb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-27T11:40:17Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.1' into gridgain-7.6.1

commit 1bb8b647264593034659b7db929c2664dec603e1
Author: sboikov <sboikov@gridgain.com>
Date:   2016-05-27T11:21:01Z

    ignite-3116 Fixed NodeStoppingException in GridDhtGetFuture.
    (cherry picked from commit 303d3ca)

commit 47c575c8696d51b675a16aa260ec9d398e0a68e9
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-30T09:42:37Z

    Added benchmark property file.

commit 00e2dda9a850f74178ee893a3acf74ddc30d4a13
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-05-30T11:45:38Z

    Updated benchmark property file.

commit a28e16e24adb0a03df959830517db84d2505c481
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-05-31T07:01:46Z

    IGNITE-3190: OffHeap cache metrics doesn't work properly for OFFHEAP_TIRED mode.
    Reviewed and merged by Denis Magda (dmagda@gridgain.com)
    (cherry picked from commit 7533dfc)

commit 56c605622dbecf71f3ee87cc41a16d2ee87e92d3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-26T08:15:48Z

    IGNITE-3200: Resolved classloader leak.

commit a815067a0e8e7cfc9f49c57efe2b2eba562e9071
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T07:23:00Z

    IGNITE-3202: Hadoop: Implemented user name mappers.

commit 421cf03b03276d0ab6c32ef6665d547746446dfc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T07:40:24Z

    7.5.24: Added missing JavaDocs.

commit 167e47781f65c056b9d273eea52d268bc9a8fa0b
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-05-31T10:50:06Z

    IGNITE-2708: fix tests that don't create unique IndexingSPI per node
    (cherry picked from commit f90e424)

commit 21bdf3148f05481d86e77e13b282ac44c6c3a059
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T10:54:32Z

    Added pacajge info for java.org.apache.ignite.hadoop.util package.

commit 3ca9febeb2bf53d17b6dea739938cff40c5fa67d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-05-31T11:03:48Z

    Merge remote-tracking branch 'upstream/gridgain-7.6.1' into gridgain-7.6.1

commit f175d3c670025bd619ec347dba2a5c5f68f4cc32
Author: Vladislav Pyatkov <vldpyatkov@gmail.com>
Date:   2016-06-02T13:14:10Z

    IGNITE-2655: AffinityFunction: primary and backup copies in different locations
    Reviewed and merged by Denis Magda (dmagda@gridgain.com)

commit 1da14369c886ed12dbe0fc9b2c4d5a568c76b6b2
Author: Anton Vinogradov <av@apache.org>
Date:   2016-06-02T14:02:09Z

     IGNITE-3183 ScanQuery and localEntries are ignored keepBinary flag in OFFHEAP_TIERED mode

commit e0cf0fcc954a39dad5b0f1969488a7b372ef8f94
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-06-02T16:16:31Z

    1.7.0-SNAPSHOT

commit 91862c7c05bd37e287df1b2b6fb00e5cd2cfbb71
Author: MaBiao <mabiaocas@gmail.com>
Date:   2016-06-03T08:55:14Z

    IGNITE-3229: fixing link in Class GridCacheStoreValueBytesSelfTest. This closes #770.

commit 9df1b905cd86384c1d191785d70a8e5c8e741e48
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2016-06-02T13:03:12Z

    IGNITE-3232 - Inline transformers for IgniteRDD.savePairs and IgniteRDD.saveValues

commit 7fc1a7f8ecba07869f8706091f076079dd83cb8e
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-06-02T19:52:39Z

    IGNITE-3232 - Fixed the number of iterations to find an affinity key.

commit 2485d86f63bb2149e8881d3f48c13fb7784c29b0
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-06-02T13:56:20Z

    IGNITE-3175 BigDecimal fields are not supported if query is executed from IgniteRDD: fix java.sql.Date mapping

----
;;;","05/Sep/16 11:45;amashenkov;Fix affects given test with following results:
* Head size reduced to 0,5 Gb (-70%)
* Heap objects count reduced from 23 to 14 millions (-63%)

GridCacheTtlManager.pendingEntries collection retained size decreased -75,6%;;;","21/Dec/16 17:03;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1031
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: Added multi-node tests for IgfsAbstractSelfTest.,IGNITE-2830,12949896,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,14/Mar/16 14:20,25/Mar/16 14:14,14/Jul/23 06:20,25/Mar/16 14:14,1.5.0.final,,,1.6,igfs,,,,,0,,,,Currently our base tests run in a single-node environment. This is not very valid use case. Let's run it multi-node deployment. This relates only to primary file system.,,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Mar 18 11:58:46 UTC 2016,,,,,,,,,,"0|i2ulr3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Mar/16 11:58;iveselovskiy;https://github.com/apache/ignite/pull/564
Tests on TC are passing except some flaky tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: IgfsMetaManager.updateTimes() must use entry processor for file update.,IGNITE-2828,12949847,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,14/Mar/16 10:52,14/Mar/16 12:58,14/Jul/23 06:20,14/Mar/16 12:58,1.5.0.final,,,1.6,igfs,,,,,0,,,,"Currently we use cache ""put"" and this is less than optimal. Light-weight entry processor should be used instead.",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-03-14 10:52:34.0,,,,,,,,,,"0|i2ulg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Continuous query local listener can be notified with empty list of events,IGNITE-2822,12949721,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ntikhonov,vkulichenko,vkulichenko,13/Mar/16 19:58,15/Aug/16 14:04,14/Jul/23 06:20,05/Apr/16 18:13,1.5.0.final,,,1.8,cache,,,,,0,community,customer,important,"If there are no events, there is no reason to invoke local listener.",,dmagda,ntikhonov,sboikov,v.pyatkov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/16 13:21;ntikhonov;IGNITE-2822-1.patch;https://issues.apache.org/jira/secure/attachment/12797300/IGNITE-2822-1.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Wed Apr 06 13:30:29 UTC 2016,,,,,,,,,,"0|i2uko7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/16 13:57;v.pyatkov;I am complete development and testing this fix.
[~ntikhonov], you had prepared most part of work relevant to continuous query.
Please, review it and give an opinion.;;;","05/Apr/16 10:15;ntikhonov;Thank you for your contibutation!
Vladislav, could you add tests for different cache configurations (ATOMIC, TX, PARTITION, REPLICATED, with store and etc.)?;;;","05/Apr/16 13:19;v.pyatkov;[~ntikhonov], I looked into you comment and added more test cases.
Could you, please, review my commits again.;;;","05/Apr/16 15:23;ntikhonov;Looks good to me.;;;","05/Apr/16 18:12;dmagda;Merged to the master.;;;","06/Apr/16 06:43;sboikov;This fix is not efficient: 'isEmpty()' call creates two iterators (one for collection, another one for view). Can we change 'CacheContinuousQueryHandler.handleEvent' to return already filtered collection and completely avoid views creation?

Nikolay, please take a look.;;;","06/Apr/16 12:06;ntikhonov;Semen,
Thank you for your notes. I've attached patch. Could you please review?;;;","06/Apr/16 12:12;sboikov;I see you still create view. Why not create list of CacheContinuousQueryEvent in handleEvent?;;;","06/Apr/16 13:24;ntikhonov;Semen,
I've attached patch with fix your notes. Could you look again?;;;","06/Apr/16 13:30;sboikov;Looks good now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: Re-create lock relaxed version,IGNITE-2806,12949086,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,iveselovskiy,iveselovskiy,11/Mar/16 13:26,22/Mar/16 09:35,14/Jul/23 06:20,22/Mar/16 09:35,1.6,,,1.6,igfs,,,,,0,,,,"Earlier we had IGFS implementation that seemed to be fast, but was not absolutely correct in terms of synchronization logic. As now we suspect some problems with IGFS performance, we need to create such version of the implementation again.",,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2808,IGNITE-2807,,IGNITE-2809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 21 06:14:05 UTC 2016,,,,,,,,,,"0|i2uinz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Mar/16 18:17;vozerov;We should expose a boolean flag to configuration which will let user to choose consistency level - strict or relaxed.;;;","11/Mar/16 18:18;vozerov;Note that in future we will probably avaluate other ideas, e.g. use of ATOMIC cache. As such, it is worth considering use enum instead of boolean flag. On the other hand, we can use boolean flag for simplicity for now, and deprecate it in future if needed.;;;","17/Mar/16 19:33;iveselovskiy;https://github.com/apache/ignite/pull/547;;;","21/Mar/16 06:08;vozerov;Ivan,

I think we should better isolate changes and avoid duplication of code (which is already pretty complex).;;;","21/Mar/16 06:14;vozerov;Please find alternative implementation in the branch ignite-2806.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Coordinator floods network with partitions full map exchange messages,IGNITE-2801,12949017,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,dmagda,dmagda,11/Mar/16 07:37,30/Mar/16 09:00,14/Jul/23 06:20,30/Mar/16 09:00,1.5.0.final,,,1.6,cache,,,,,0,community,important,,"It is detected that the more machines in the cluster we have and the more caches are started then the more outgoing traffic is produced by a coordinator node.

As an example in the current deployment
- 30 nodes;
- 67 caches;
- caches are empty and the cluster is not used at all (idle).

the coordinator constantly uses 300 Mbit/s of outgoing traffic. In contrast each other node shows constant 10 Mbit/s usage of incoming traffic.

Most likely the reason is that the coordinator indefinitely sends partitions full map for all the caches to all the nodes. This shouldn't happen.

Need to debug the reason of the issue and fix it.
Attached snapshots taken from the coordinator and on of cluster's nodes. Probably they would help.",,avinogradov,dmagda,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-708,,,,,,,,,,,,,,,"11/Mar/16 07:38;dmagda;basic_node.nps;https://issues.apache.org/jira/secure/attachment/12792665/basic_node.nps","11/Mar/16 07:38;dmagda;basic_node.png;https://issues.apache.org/jira/secure/attachment/12792666/basic_node.png","11/Mar/16 07:38;dmagda;coordinator.nps;https://issues.apache.org/jira/secure/attachment/12792667/coordinator.nps","11/Mar/16 07:38;dmagda;coordinator.png;https://issues.apache.org/jira/secure/attachment/12792668/coordinator.png",,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 30 09:00:29 UTC 2016,,,,,,,,,,"0|i2ui9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Mar/16 08:08;vozerov;IGNITE-2799;;;","21/Mar/16 09:28;avinogradov;Reproduced. 

Started 10 nodes with 35 caches. 
Gained 37 MB of GridDhtPartitionsFullMessage per minute -> 49 Mb/s
Rough multiplication to 30 nodes & 65 caches (x6) gives exactly 300Mb/s ;;;","21/Mar/16 14:49;avinogradov;Removal of refreshPartitions(timeout); at org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java:1270 
solves problem by turning off redundand background exchange.

Am I missed something?;;;","21/Mar/16 14:52;dmagda;Quite weird place. [~sboikov], [~agoncharuk] please comment on why do we need this stuff at line 1270;;;","30/Mar/16 09:00;avinogradov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare and finish future never time out,IGNITE-2797,12948975,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,vkulichenko,vkulichenko,11/Mar/16 01:59,29/Aug/16 22:36,14/Jul/23 06:20,29/Aug/16 22:36,1.5.0.final,,,1.8,cache,,,,,0,community,customer,important,"Even if transaction timeout is configured, transaction will not timeout if it's already in prepare state. It will be shown in log as pending transaction and can cause the whole cluster hang.

We need to add a mechanism that will properly timeout prepare and (if possible) finish futures.

Also we can create an event that will be fired if there is a transaction pending for a long time, showing which nodes we are waiting responses from. This will allow user to recover by stopping only these nodes instead of restarting the whole cluster.",,agura,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2854,"17/Mar/16 06:50;vkulichenko;TxTest2.java;https://issues.apache.org/jira/secure/attachment/12793931/TxTest2.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Wed Jul 20 17:50:26 UTC 2016,,,,,,,,,,"0|i2uhzz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/16 15:11;sboikov;As first step added more tests for tx with timeout when 'lock' step fails because of timeout (CacheTxLockTimeoutTest).
One issue found: it seems that GridNearTxFinishRequest for timed out tx can be processed before GridNearLockRequest, in this case lock is not released (see 'testDelayNearLockRequest').;;;","15/Mar/16 21:00;agura;During debugging of hanging tests I found a couple of suspicious places:

1. {{GridDhtTransactionalCacheAdapter.lockAllAsyncInternal()}} method can create {{GridDhtLockFuture}} instance with zero timeout, so timeout object will not be registered and future can be in not completed state.

2. Sometimes test throws {{AssertionError}} from {{GridDhtTransactionalCacheAdapter}} class (see stacktrace below). As result future listener that creates {{GridNearLockResponse}} instances will fail.

{{txState.empty()}} method can return {{true}} in case of exception. Such case happens when {{GridDhtTxLocalAdapter.lockAllAsync()}} method returns {{GridFinishedFuture}} instance after {{checkValid}} method threw exception due to a timeout exceeded. So it's valid case and assertion can be replaced by something like {{assert !t.empty() || e != null}}.

{noformat}
Exception in thread ""sys-#31%distributed.CacheTxLockTimeoutTest0%"" java.lang.AssertionError
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter$10.apply(GridDhtTransactionalCacheAdapter.java:971)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter$10.apply(GridDhtTransactionalCacheAdapter.java:957)
	at org.apache.ignite.internal.util.future.GridEmbeddedFuture$2.applyx(GridEmbeddedFuture.java:125)
	at org.apache.ignite.internal.util.future.GridEmbeddedFuture$AsyncListener1.apply(GridEmbeddedFuture.java:307)
	at org.apache.ignite.internal.util.future.GridEmbeddedFuture$AsyncListener1.apply(GridEmbeddedFuture.java:300)
	at org.apache.ignite.internal.util.future.GridFinishedFuture.listen(GridFinishedFuture.java:138)
	at org.apache.ignite.internal.util.future.GridEmbeddedFuture.<init>(GridEmbeddedFuture.java:89)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtEmbeddedFuture.<init>(GridDhtEmbeddedFuture.java:60)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter.lockAllAsync(GridDhtTransactionalCacheAdapter.java:955)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter.processNearLockRequest(GridDhtTransactionalCacheAdapter.java:562)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter.access$000(GridDhtTransactionalCacheAdapter.java:88)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter$3.apply(GridDhtTransactionalCacheAdapter.java:138)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter$3.apply(GridDhtTransactionalCacheAdapter.java:136)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:582)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:280)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:204)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:80)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:163)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:822)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:785)
{noformat} ;;;","17/Mar/16 06:50;vkulichenko;I also noticed a bug in timeout logic for optimistic transactions. In {{IgniteTxManager.lockMultiple(...)}} method we calculate remaining time incorrectly (see line 1399):
{code}
long remainingTime = U.currentTimeMillis() - (tx.startTime() + tx.timeout());
{code}
In most cases this value will be below zero, and transactions will be rolled back right away even with a long timeout. I'm attaching test that reproduces the issue ({{TxTest2.java}}).;;;","17/Mar/16 18:35;agura;Fixed my findings that mentioned above. For first finding I just throw {{TransactionTimeoutException}} if {{remainingTime == 0}}. Test doesn't hang anymore but many tests failed on TC.

Also fix Val's finding with timeout logic in optimistic transactions. {{TxTest2.java}} doesn't fail anymore. Waiting for TC.;;;","18/Mar/16 13:05;agura;Found on more place where lock can be created without timeout despite transaction has timeout. It is {{IgniteTxLocalAdapter.putAsync0()}} method.

Fixed. Waiting for TC

May be we should throw {{IgniteTxTimeoutCheckedException}} from all places where {{remainingTime()}} or {{lockTimeout()}} methods invoke.;;;","20/Jul/16 17:50;agura;Fixed due to an IGNITE-2968 and  IGNITE-2969 issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE during rebalancing,IGNITE-2796,12948970,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,vkulichenko,vkulichenko,11/Mar/16 01:36,16/Mar/16 10:34,14/Jul/23 06:20,16/Mar/16 10:34,1.5.0.final,,,1.6,cache,,,,,0,community,customer,important,"This exception sometimes appear in logs when topology changes under load:

{noformat}
2016-03-06T08:07:52,500 ERROR [sys-#47%null%] (Slf4jLogger.java:112) - Failed processing message [senderId=ad2315fd-237c-492c-a1c6-7ea69c7f3807, msg=GridDhtPartitionSupplyMessageV2 [updateSeq=35, topVer=AffinityTopologyVersion [topVer=1413, minorTopVer=0], missed=null, msgSize=0, size=1, parts=[718], super=GridCacheMessage [msgId=52249, depInfo=null, err=null, skipPrepare=false, cacheId=1762189895, cacheId=1762189895]]]
java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionDemander$RebalanceFuture.partitionDone(GridDhtPartitionDemander.java:971) ~[ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionDemander$RebalanceFuture.access$1100(GridDhtPartitionDemander.java:751) ~[ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionDemander.handleSupplyMessage(GridDhtPartitionDemander.java:600) ~[ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader.handleSupplyMessage(GridDhtPreloader.java:407) ~[ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$5.apply(GridCachePartitionExchangeManager.java:342) ~[ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$5.apply(GridCachePartitionExchangeManager.java:335) ~[ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:582) [ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:280) [ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$300(GridCacheIoManager.java:80) [ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$OrderedMessageListener.onMessage(GridCacheIoManager.java:1085) [ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.managers.communication.GridIoManager$GridCommunicationMessageSet.unwind(GridIoManager.java:2236) [ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.managers.communication.GridIoManager.unwindMessageSet(GridIoManager.java:1003) [ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1800(GridIoManager.java:103) [ignite-core-1.5.5.jar:1.5.5]
	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:972) [ignite-core-1.5.5.jar:1.5.5]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_51]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_51]
{noformat}

It doesn't seem to break anything, but still has to be fixed.",,avinogradov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2763,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Wed Mar 16 10:34:17 UTC 2016,,,,,,,,,,"0|i2uhyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Mar/16 16:40;avinogradov;Val, 

Could you please specify way of getting this exception?;;;","11/Mar/16 19:24;vkulichenko;Not really, I just saw this in the logs provided by user. All I know is that there were 32 nodes started in parallel with around 20 caches.

It seems to me that this code is incorrect:
{code}
Collection<Integer> parts = remaining.get(nodeId).get2();

if (parts != null) {
    ...
}
{code}
From what I see, {{parts}} can never be null, but the map value can easily be. It actually looks like collection of integers was used as a map value and at some point was replaced with the tuple, but the check was not changed.

I may be missing something, of course.;;;","15/Mar/16 16:22;avinogradov;Val, 

You're absolutelly right. Will replace if (parts ! = null)  with assertion that remaining.get(nodeId)!=null.

Also seems that issue (except code refactoring I've told before) already fixed at IGNITE-2763
;;;","16/Mar/16 10:34;avinogradov;Merged to master, only.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache query cursor do not create value copy,IGNITE-2795,12948919,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vkulichenko,vkulichenko,10/Mar/16 21:44,19/Aug/16 10:33,14/Jul/23 06:20,19/Aug/16 10:32,1.5.0.final,,,1.8,cache,,,,,0,,,,"If entries returned from SQL query are modified, these changes are reflected in the cache.

Test attached.",,ascherbakov,avk47,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/16 21:44;vkulichenko;QueryTest.java;https://issues.apache.org/jira/secure/attachment/12792591/QueryTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 19 10:32:39 UTC 2016,,,,,,,,,,"0|i2uhnj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/16 17:32;ascherbakov;The issue is also reproducible with cache iterator.;;;","06/Jul/16 08:56;ascherbakov;Fixed for SQL queries.

I'm not sure the fix should be used at all, because it'll add performance overhead without any obvious benefits.

PR https://github.com/apache/ignite/pull/854;;;","07/Jul/16 15:43;ascherbakov;Made better fix for SQL queries.;;;","25/Jul/16 06:55;sboikov;Alexei, I reviewed your fix, I think better fix is handle copying during GridQueryNextPageResponse creation: it is more optimal - you never need copy if response is sent to remote node and you do not need reflection hack in GridH2ResultSetIterator. Also please merge latest master, there was minor conflict.;;;","16/Aug/16 16:23;ascherbakov;Sam, thanks for review.

Using GridQueryNextPageResponse won't help us to keep correct read semantics in case of local SQL query.
In that case GridQueryNextPageResponse  is not used at all.

See CacheSqlQueryValueCopySelfTest.testLocalSqlQuery test for details.;;;","17/Aug/16 09:55;sboikov;Alexei,

We must not do copy of data which is sent to remote node. If GridQueryNextPageResponse is not used for local queries, then for local queries copying should be implemented in iterators created in IgniteH2Indexing.queryLocalSqlFields/queryLocalSql.;;;","17/Aug/16 12:26;ascherbakov;Sam,

We already do no data copying before sending it to remote node. 

Concerning copy handling in GridH2ResultSetIterator wrapper for local queries I see only the possibility to use marshaller for producing data copy
by serialize/deserialize process, which is less efficient than current approach requiring only deserialization.

Are you sure we must implement copy handling in such way ?;;;","17/Aug/16 16:12;ascherbakov;Made optimization to do copying only for local node data.;;;","17/Aug/16 16:13;ascherbakov;Waiting for TC.;;;","19/Aug/16 10:32;sboikov;Thanks Alexei, merged into master (commit #612eb3d).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System caches should not use user-defined TransactionConfiguration.,IGNITE-2792,12948756,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,10/Mar/16 11:42,16/Mar/16 08:57,14/Jul/23 06:20,16/Mar/16 08:57,1.5.0.final,,,1.6,cache,,,,,0,,,,"*Problem*
Currently if user set his custom TransactionConfiguration, it will be used not only user public caches, but by internal Ignite caches as well. This could lead to some bad situations, such a transaction timeouts, optimistic exceptions, etc..

*Proposed solution*
Ensure that transactional system caches do not use custom TransactionConfiguraton.",,dkarachentsev,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 15 07:29:56 UTC 2016,,,,,,,,,,"0|i2ugnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/16 14:43;dkarachentsev;https://github.com/apache/ignite/pull/551;;;","15/Mar/16 06:45;vozerov;Dmitry, 

My comments:
1) Code conventions violated: tabs of 8 chars instead of 4, abbreviations in method names (txCfg -> transactionConfiguration()), ""catch"" on the same line as curly braces.
2) Two txCfg() methods in GridCacheAdapter and IgniteTransactionsImpl is obvious code duplication. There should be single method in GridCacheUtils. E.g.:
{code}
TransactionConfiguration transactionConfiguration(@Nullable GridCacheContext ctx, IgniteConfiguration cfg)
{code}
3) Do not create new {{TransactionConfiguration}} on each call. Instead, you should create it once in either static variable or inside shared cache context, and use it.

Vladimir.;;;","15/Mar/16 07:10;dkarachentsev;https://github.com/apache/ignite/pull/551;;;","15/Mar/16 07:19;vozerov;Dmitry,

1) Code conventions are sill violated in IgniteTxConfigCacheSelfTest:
149: unused parameter ""ignite""
152: arguments -> args
156: missing line break
181: redundant line break
228: arguments -> args
229: 8 spaces for tab instead of 4
232: missing line break

2) Moreover, this test appears to be prone to flaky failures because TX timeout is equal to sleep time. You should multiply TX sleep time in several times to make the test stable.

The rest looks fine. Please fix that and re-run tests. Once they are finished, re-assign back to me.

Vladimir.;;;","15/Mar/16 07:29;dkarachentsev;Thanks for the review, Vladimir. All notes are corrected.;;;","15/Mar/16 07:29;dkarachentsev;https://github.com/apache/ignite/pull/551;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Continuous query listener is not notified during concurrent key put.,IGNITE-2791,12948753,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ntikhonov,vozerov,vozerov,10/Mar/16 11:35,22/Mar/16 07:12,14/Jul/23 06:20,22/Mar/16 07:12,1.5.0.final,,,1.6,cache,,,,,0,important,,,"Attached the code reproducing the problem. What is evident from the log, is that that filter was invoked, but the listener was not.",,avk47,ntikhonov,sboikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/16 11:36;vozerov;CacheListenersKillingMe3Main.java;https://issues.apache.org/jira/secure/attachment/12792494/CacheListenersKillingMe3Main.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 22 07:12:35 UTC 2016,,,,,,,,,,"0|i2ugmn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Mar/16 16:17;ntikhonov;If listener registration is happen during cache update in this case may be that a local listener will be ignore this update (on start continuous query it get update counter for this cache update and set the counter as starting), but remote filter will be applied for this update. For avoid this situation need to set a starting update counters to remote filter and ignore this event in filter too.;;;","10/Mar/16 23:47;avk47;Nikolay,

It looks like this condition is treated by CacheContinuousQueryHandler as a duplicate event (as can be seen from the log message: 
{noformat}
DEBUG CacheContinuousQueryHandler - Skip duplicate continuous query message: CacheContinuousQueryEntry [evtType=CREATED, key=KeyCacheObjectImpl [val=1, hasValBytes=true], newVal=CacheObjectImpl [val=null, hasValBytes=true], oldVal=null, cacheId=-1368047377, part=1, updateCntr=1, flags=0, topVer=AffinityTopologyVersion [topVer=2, minorTopVer=1], filteredEvts=null, keepBinary=false]
{noformat}

which is of course wrong since it's not a duplicate. This issue still occurs when the continuous query is defined as local and both the filter and the listener are on the same node.;;;","18/Mar/16 05:58;sboikov; Nikolay,

Your fix doesn't look correct for me: each node calculates primary partitions using locally ready affinity version, this does not guarantee consistentency. All nodes should use the same topology version (topology version of discovery event). I guess we can't not wait for affinity in discovery event listener, so I think correct fix is collect per-node counter maps, and then on client node wait for affinity and do filtering.

Also please add test case in GridCacheContinuousQueryConcurrentTest which will execute the same scenario on changing topology (both server and client nodes should join/leave).

Thanks;;;","22/Mar/16 07:12;ntikhonov;Thanks Semen!
Fixed notes. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpRequest.changeSessionId() won't change session id,IGNITE-2775,12947604,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,shroman,shroman,07/Mar/16 03:24,10/Mar/16 07:44,14/Jul/23 06:20,10/Mar/16 07:44,1.5.0.final,,,1.6,websession,,,,,0,,,,"After
{code}
request.changeSessionId();
{code}
{code}
request.getSession().getId();
{code}
returns the old session id.",,dmagda,githubbot,shroman,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 10 07:38:55 UTC 2016,,,,,,,,,,"0|i2u9jj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Mar/16 08:06;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/539

    IGNITE-2775: Fixed HttpRequest.changeSessionId() to create a new id.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-2775

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/539.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #539
    
----
commit bab1f87dc1bba5545043229591efc34ed0ae38f2
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-03-08T08:04:25Z

    IGNITE-2775: Fixed HttpRequest.changeSessionId() to create a new id.

----
;;;","08/Mar/16 08:24;shroman;TC looks good, except _IgniteWebSessionSelfTestSuite$WebSessionTransactionalSelfTest.testInvalidatedSession_ from the previous fix has to be muted.;;;","09/Mar/16 16:25;dmagda;[~vkulichenko], please review changes done by Roman.;;;","10/Mar/16 05:03;vkulichenko;Looks good to me.;;;","10/Mar/16 05:06;shroman;Thanks a lot, Valentin! I will merge it.;;;","10/Mar/16 07:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/539
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cont. query remote filter requires to be in client nodes class path,IGNITE-2767,12947419,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,dmagda,dmagda,05/Mar/16 05:49,10/May/17 08:13,14/Jul/23 06:20,15/Jun/16 14:22,1.5.0.final,,,1.7,general,,,,,0,,,,"Cont. query remote filter has to be placed to class path of all client nodes otherwise the following exception happens

{noformat}
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas [ ] [1] [tcp-disco-msg-worker-#2%cas-grid%] : Failed to unmarshal discovery data for component: 0 [TcpDiscoverySpi] 
2016-03-04T15:08:24.259Z ERR cas org.apache.ignite.IgniteCheckedException: Failed to find class with given class loader for unmarshalling (make sure same versions of all classes are available 
on all nodes or enable peer-class-loading): sun.misc.Launcher$AppClassLoader@18b4aac2
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.marshaller.jdk.JdkMarshaller.unmarshal(JdkMarshaller.java:108)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.marshaller.AbstractMarshaller.unmarshal(AbstractMarshaller.java:78)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.onExchange(TcpDiscoverySpi.java:1717)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processNodeAddedMessage(ServerImpl.java:3685)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2252)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:5789)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2161)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas Caused by: java.lang.ClassNotFoundException: com.ringcentral.tap_api.ha.RemoteFilterWrapper
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.lang.Class.forName0(Native Method)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.lang.Class.forName(Class.java:348)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.internal.util.IgniteUtils.forName(IgniteUtils.java:8195)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.marshaller.jdk.JdkMarshallerObjectInputStream.resolveClass(JdkMarshallerObjectInputStream.java:54)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1613)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1518)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1774)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.readExternal(CacheContinuousQueryHandler.java:1077)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1840)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1799)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor$DiscoveryDataItem.readExternal(GridContinuousProcessor.java:1623)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1840)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1799)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.internal.util.IgniteUtils.readList(IgniteUtils.java:5158)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.internal.util.IgniteUtils.readCollection(IgniteUtils.java:1619)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor$DiscoveryData.readExternal(GridContinuousProcessor.java:1538)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1840)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1799)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.marshaller.jdk.JdkMarshaller.unmarshal(JdkMarshaller.java:102)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.marshaller.AbstractMarshaller.unmarshal(AbstractMarshaller.java:78)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.onExchange(TcpDiscoverySpi.java:1717)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processNodeAddedMessage(ServerImpl.java:3685)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2252)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:5789)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2161)
2016-03-04T15:08:24.259Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
2016-03-04T15:08:24.297Z rms01-t01-rcs01.lab.nordigy.ru ERR cas [ ] [2] [tcp-disco-msg-worker-#2%cas-grid%] : Failed to unmarshal discovery data for component: 1 [TcpDiscoverySpi] 
2016-03-04T15:08:24.297Z rms01-t01-rcs01.lab.nordigy.ru ERR cas org.apache.ignite.IgniteCheckedException: Failed to find class with given class loader for unmarshalling (make sure same versions of all classes are available on all nodes or enable peer-class-loading): sun.misc.Launcher$AppClassLoader@18b4aac2
2016-03-04T15:08:24.297Z rms01-t01-rcs01.lab.nordigy.ru ERR cas at org.apache.ignite.marshaller.jdk.JdkMarshaller.unmarshal(JdkMarshaller.java:108)
{noformat}

We have to ignore this on client nodes.",,dmagda,v.pyatkov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 15 14:22:39 UTC 2016,,,,,,,,,,"0|i2u8ef:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Mar/16 06:32;vkulichenko;Denis,

As far as I know we only print out the error without stopping the join process. Probably this can be improved form usability standpoint, but it doesn't break anything, right?;;;","05/Mar/16 06:43;dmagda;Val,

Thanks for pointing out to this. Correct, according to the sources the join process won't be terminated. However, right, we have to improve the usability here writing at least more specific messages.;;;","09/Jun/16 14:34;v.pyatkov;I could reproduce the issue in source.
I continue to work tomorrow.;;;","15/Jun/16 14:03;v.pyatkov;I made some changes (https://github.com/apache/ignite/pull/805).
[~dmagda], can you please review?;;;","15/Jun/16 14:22;dmagda;Vlad, thanks.

Slightly modified you fix from usability standpoint. The following warning will be printed instead ""Failed to unmarshal continuous query remote filter on client node. Can be ignored.""

Merged the changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache instance is closed when client disconnects,IGNITE-2766,12947115,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,vkulichenko,vkulichenko,04/Mar/16 22:34,28/May/20 12:53,14/Jul/23 06:20,13/Apr/18 21:50,1.5.0.final,,,2.5,cache,,,,,7,,,,"In case client disconnects and reconnects after network timeout (i.e., with a new ID), all cache instances acquired by this client are closed and are not functional. User has to create a special logic to handle this case.

Cache proxy should be able to handle this automatically.",,damaan,dpavlov,githubbot,ihorps,ilyak,mcherkasov,mmuzaf,ntikhonov,Sawfish,sboikov,vkulichenko,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-13088,,IGNITE-2765,IGNITE-2786,IGNITE-2787,IGNITE-8978,IGNITE-8301,IGNITE-7603,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 03 12:20:27 UTC 2018,,,,,,,,,,"0|i2u6iv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Mar/16 22:41;vkulichenko;{{IgniteClientDisconnectedException}} should also behave consistently, regardless of whether the client was reconnected within network timeout or after it with a new ID. ;;;","09/Mar/16 06:31;sboikov;Now after client reconenct we check that cache still exists and have the same deploymentId (GridCacheProcessor.onReconnected). So even when client reconnects with new ID old caches should work if they were not re-created while client was disconnected. Maybe it can be improved and after reconnect we should ignore deploymentId, but check that cache have the same configuration.;;;","01/Jun/16 08:14;damaan;The issue description refers to ""special logic"" but does not mention how this logic would be implemented. Is there a ""known workaround"" to this problem that users of Ignite 1.5.x can deploy?;;;","06/Oct/17 17:21;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2816

    IGNITE-2766 Essais: Opportunistic reopen cache.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2766

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2816.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2816
    
----
commit 3e8d3e8d756290e749a3f2d2a1a4deba97743a26
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-10-06T17:19:56Z

    IGNITE-2766 Essais: Opportunistic reopen cache.

----
;;;","10/Oct/17 14:50;ilyak;When operation hits a closed cache proxy, instead of throwing exception we should try to retrieve cache with the same name from KernalContext.
If that it successful, we update internal state and serve the operation as if the cache is always open.

Obviously it means that there was a period of time when this cache object won't be valid, we're teaching bad habits a bit, but with common try-catch-wait-retry loops it should work OK.;;;","10/Oct/17 14:51;ilyak;https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2816%2Fhead;;;","10/Oct/17 14:51;ilyak;[~sboikov] please take a look;;;","17/Oct/17 12:55;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2870

    IGNITE-2766 Deterministically reopen cache after client reconnect.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2766ex

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2870.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2870
    
----
commit 843566b74b3afdf78d3ede1a46adc927878c89e2
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-10-17T12:53:05Z

    IGNITE-2766 Deterministically reopen cache after client reconnect bis.

----
;;;","21/Nov/17 15:05;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3077

    IGNITE-2766 Ensure that cache is available after client ID changes.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2766test

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3077.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3077
    
----

----
;;;","22/Nov/17 16:25;ilyak;I cannot reproduce the original problem - cache stays opened and operational after client reconnects with new ID.

I have improved test to check this behavior. Please review.

[~ntikhonov];;;","27/Nov/17 10:08;ntikhonov;[~ilyak],
I've checked and merged your test improvment. Thank you for your contribution!;;;","27/Nov/17 10:09;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/3077
;;;","27/Nov/17 10:09;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2816
;;;","27/Nov/17 10:09;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2870
;;;","19/Jan/18 00:40;mcherkasov;I can reproduce the issue with the following test:

 
{code:java}
import java.util.Arrays;
import org.apache.ignite.Ignite;
import org.apache.ignite.IgniteCache;
import org.apache.ignite.Ignition;
import org.apache.ignite.configuration.CacheConfiguration;
import org.apache.ignite.configuration.IgniteConfiguration;
import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;
import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder;
import org.jetbrains.annotations.NotNull;

public class ReconnectClient {
    private static int id;

    public static void main(String[] args) throws InterruptedException {
        Ignition.setClientMode(false);

        Ignite server = Ignition.start(getConfiguration());

        Ignition.setClientMode(true);
        Ignite client = Ignition.start(getConfiguration());

        IgniteCache<String, String> cache = client.cache(""TEST"");

        cache.put(""Hello"", ""World"");

        server.close();

        Thread.sleep(2_000);

        Ignition.setClientMode(false);
        server = Ignition.start(getConfiguration());

        Thread.sleep(4_000);

        System.out.println(cache.get(""Hello""));
        cache.put(""Ping"", ""Pong"");

        System.out.println(""DONE"");
    }

    @NotNull private static IgniteConfiguration getConfiguration() {
        IgniteConfiguration cfg = new IgniteConfiguration();

        TcpDiscoveryVmIpFinder finder = new TcpDiscoveryVmIpFinder(true);
        finder.setAddresses(Arrays.asList(""localhost:47500..47600""));

        cfg.setIgniteInstanceName(""test"" + id++);

        cfg.setCacheConfiguration(new CacheConfiguration(""TEST""));

        cfg.setDiscoverySpi( new TcpDiscoverySpi().setIpFinder(finder));
        return cfg;
    }
}
{code}
 ;;;","19/Jan/18 09:25;ilyak;Yes, now I can see what is the real issue. It is as follows:
{code:java}
Exception in thread ""main"" java.lang.IllegalStateException: class org.apache.ignite.internal.processors.cache.CacheStoppedException: Failed to perform cache operation (cache is stopped): TEST
    at org.apache.ignite.internal.processors.cache.GridCacheGateway.enter(GridCacheGateway.java:164)
    at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.onEnter(GatewayProtectedCacheProxy.java:1656)
    at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.get(GatewayProtectedCacheProxy.java:659)
    at ReconnectClient.main(ReconnectClient.java:36)
Caused by: class org.apache.ignite.internal.processors.cache.CacheStoppedException: Failed to perform cache operation (cache is stopped): TEST
    ... 4 more{code}
while IgniteClientDisconnectedException is expected!;;;","19/Jan/18 09:27;ilyak;No, I still don't get it.

-New Ignite cluster just doesn't have the 'TEST' cache.-

Even if it did, it would be a different cache (if not for persistence). Eventually with a different cache config. I will try to update the test with a working example.;;;","19/Jan/18 10:02;ilyak;""Client node was reconnected after it was already considered failed by the server topology (this could happen after all servers restarted or due to a long network outage between the client and servers). All continuous queries and remote event listeners created by this client will be unsubscribed, consider listening to EVT_CLIENT_NODE_RECONNECTED event to restore them.""

I guess that means cache proxies are no longer good either.;;;","19/Jan/18 22:23;vkulichenko;[~ilyak], I believe that if cache with corresponding name still exists after restart (either because it's configured statically on server startup, or because persistence is used), proxy should continue to provide access to this cache. Configuration will be changed rarely in this case, but even if it does change, I don't see much harm. If there are any specific scenarios that would not work properly with this approach, can you please share them?

If cache doesn't exist after restart, exception is obviously correct behavior, although the message should be more clear I think.;;;","22/Jan/18 15:30;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3417

    IGNITE-2766 Opportunistically reopen cache after client reconnect.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2766

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3417.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3417
    
----
commit a70620ca6398ba151541b5ff92c7f941eea07527
Author: Ilya Kasnacheev <ilya.kasnacheev@...>
Date:   2018-01-22T15:29:36Z

    IGNITE-2766 Opportunistically reopen cache after client reconnect.

----
;;;","22/Jan/18 15:33;ilyak;[~vkulichenko] So I have this commit stashed already (see above), I was hesistant to push it thru due to unclear requirements.

You can merge it to master if tests pass.

https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&branch_IgniteTests24Java8=pull%2F3417%2Fhead;;;","23/Jan/18 23:47;vkulichenko;[~ilyak], is there a test for the case discussed here?;;;","25/Jan/18 09:54;ilyak;[~vkulichenko] you can note that [ClientReconnectAfterClusterRestartTest.java|https://github.com/apache/ignite/pull/3417/files#diff-1e38a182668eb3491803ab6ce69e7262] test is changed in my commit, so it becomes test case for current issue.;;;","01/Feb/18 14:56;ilyak;Current patch is postponed due to IGNITE-7603 scenario failing every time. Should incorporate fix.;;;","10/Apr/18 13:34;ilyak;[~vkulichenko] please review amended fix;;;","13/Apr/18 21:50;vkulichenko;Merged to {{master}} and {{ignite-2.5}}. [~ilyak], thanks for contribution!;;;","13/Apr/18 21:51;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3417
;;;","17/Apr/18 14:31;dpavlov;Folks, please pay attention to failure: [https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&testNameId=5567963579403368730&branch=%3Cdefault%3E&tab=testDetails]

Seems this is related. [~ilyak], could you please check?;;;","17/Apr/18 15:10;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3853

    IGNITE-2766 Fix .net test.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2766net

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3853.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3853
    
----
commit 5fbed1f4e48b9666a983d23ce22c5d51bebede7d
Author: Ilya Kasnacheev <ilya.kasnacheev@...>
Date:   2018-04-17T15:09:20Z

    IGNITE-2766 Fix .net test.

----
;;;","17/Apr/18 16:54;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3853
;;;","17/Apr/18 17:17;mmuzaf;[~ilyak], [~dpavlov]

Due to changes of this issue, we've broked muted flaky test. I've created JIRA for fixing it.
 Please, see my changes an PR with my small fix
 https://issues.apache.org/jira/browse/IGNITE-8301;;;","28/Apr/18 14:06;xtern;Hello [~ilyak], [~vkulichenko].
I'm faced with the fact that now IgniteCacheRestartingException can be thrown after IgniteCache#destroy method was called on the server node when we continue working with this cache asynchronously. Seems it's not right because we destroying cache.
How do yout think - is it ok to change GatewayProtectedCacheProxy#onEnter from
{code:java}
checkProxyIsValid(gate(), true) // tryRestart = true
{code}
to something like
{code:java}
checkProxyIsValid(gate(), context().localNode().isClient()) // tryRestart = true only on client node
{code}
?

I checked tests ClientReconnectAfterClusterRestartTest, IgniteCacheQueryCacheDestroySelfTest and they works well with such change.
;;;","03/May/18 12:20;ilyak;[~xtern] You can definitely do that. Shame on me it isn't implemented this way in the first place.;;;",,,,,,,,,,
WebSessionFilter doesn't survive client reconnect,IGNITE-2765,12947113,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,vkulichenko,vkulichenko,04/Mar/16 22:11,14/Mar/16 08:18,14/Jul/23 06:20,14/Mar/16 08:16,1.5.0.final,,,1.6,websession,,,,,0,community,customer,important,"If a {{WebSessionFilter}} is started with an embedded client, it is not functional after the client disconnects and reconnects. Any operation throws the exception below.

{noformat}
java.lang.IllegalStateException: Cache has been closed or destroyed: WebCache
 at org.apache.ignite.internal.processors.cache.GridCacheGateway.enter(GridCacheGateway.java:160)
 at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.onEnter(IgniteCacheProxy.java:1958)
 at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.get(IgniteCacheProxy.java:855)
 at org.apache.ignite.cache.websession.WebSessionFilter.doFilter0(WebSessionFilter.java:341)
{noformat}

We should get a new instance of the cache when the exception is thrown.",,avinogradov,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2766,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Mon Mar 14 08:18:31 UTC 2016,,,,,,,,,,"0|i2u6if:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Mar/16 22:36;vkulichenko;This issue will be fixed automatically when IGNITE-2766 is fixed. But probably it's better to apply quick and easy fix here, because it seems to be more critical (there is no workaround for {{WebSessionFilter}}).;;;","05/Mar/16 18:54;vkulichenko;The same issue exists in {{SpringCache}}.

Hibernate L2 cache should be also checked.;;;","10/Mar/16 04:45;vkulichenko;Created separate tickets for Spring cache and Hibernate L2 cache:

https://issues.apache.org/jira/browse/IGNITE-2786
https://issues.apache.org/jira/browse/IGNITE-2787;;;","10/Mar/16 14:47;githubbot;GitHub user avinogradovgg opened a pull request:

    https://github.com/apache/ignite/pull/543

    IGNITE-2765

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2765

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/543.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #543
    
----
commit 2e64d0d7cc51552fffc231cbc850cd615076fb85
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T06:31:58Z

    IGNITE-2258: IGFS: now default path modes could be optionally disabled using FileSystemConfiguration.isInitializeDefaultPathModes() property.

commit 4cd3b3dc2f1fa0f1a9cceb6bf544dd8fb505d7f5
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T09:52:00Z

    IGNITE-2258: Fixed type on getter/setter.

commit 5d58fcbf40fdb9114e4cbb32b72dd9bce7fa38ca
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-01-04T06:47:28Z

    IGNITE-2308: Fixed HadoopClassLoader dependency resolution. This closes #391.

commit 83a19179cee2bb15adc36c2265dd0a3c794b60bb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-04T08:14:58Z

    IGNITE-2218: Fixed a problem with native Hadoop libraries load. This closes #378.

commit 1d7fb5702fa33cf395e797161f3a86a9600921a7
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-05T06:59:31Z

    IGNITE-2206: Hadoop file system creation is now abstracted out using factory interface.

commit a12ec7d08573d5396654a5ba05bb7d873e4c2677
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-06T10:50:48Z

    1.5.2

commit 090a5de6a930c10a3a57a6e28c486fe5c87e028d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T12:50:39Z

    Minor fix.

commit c786820dda7f7cd1849c5593ac24ca9072945887
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-07T13:48:14Z

    IgniteHadoopIgfsSecondaryFileSystem.usrName field is renamed to ""userName"" to preserve backward compatibility.

commit 6ab4ce246316442fa4295f9941c372fea70c24ef
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T06:23:55Z

    IGNITE-2342: Set correct classlader before calling FileSystem.get().

commit 077ab1b3a77fdb1c2c2fd6360fc5b60fda6c50c3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:17:45Z

    IGNITE-2341: Improved warning message when BinaryMarshaller cannot be used. Also it is not shown when ""org.apache.ignite"" classes is in described situation.

commit 86c4816edfd0e983014f136ffc92cde28ec56cca
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:26:03Z

    IGNITE-2340: Improved error thrown when PROXY mode exists, but secondary file system is not IgniteHadoopIgfsSecondaryFileSystem.

commit fc48a8429a84ef6c87ed3225a218d7d3ae617e14
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:48:42Z

    Merge branch 'ignite-1.5.2' into ignite-1.5.3

commit 86740cefe212ed0f506d81056dd8e76de9a31e4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-08T09:32:11Z

    1.5.3-SNAPSHOT

commit 92229d2a6c6ef86772a62cb52b3aa07a55c99d89
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T05:56:34Z

    ignite-2359 Added locking for files used by MarshallerContextImpl. (cherry picked from commit 1d8c4e2)

commit 2e4ce585d5f54502c6511d3425b1cd5fbf0a7f4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-13T10:37:33Z

    1.5.4-SNAPSHOT

commit 6e5f9f0c7d4c86773b1f0cd5c5a673acb58c86c2
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-13T11:42:27Z

    Changed year to 2016 in Copyrights

commit 02dbcfd8ed2701a4f415c8871d0b8fd08bfa0583
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-01-13T13:47:32Z

    IGNITE-2365 - Notify policy if swap or offheap is enabled and rebalanced entry was not preloaded.
    IGNITE-2099 - Fixing custom collections.
    This closes #396

commit 86c2ba2a601e82b824cf17422683e5398a4d8c7d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T15:40:08Z

    ignite-2350 Pass update notifier flag in discovery data (all cluster nodes will have the same notifier status as first cluster node)
    (cherry picked from commit 7175a42)

commit e1a494df400fc37ca04e8d88d1cf20bca02607b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:16:33Z

    Renamed fields to change fields write order (to preserve backward compatibility).
    (cherry picked from commit 2a4adf5)

commit 09f978234b6062afa1e1658d5a6439365a856aca
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:42:44Z

    Merge remote-tracking branch 'origin/ignite-1.5.4' into ignite-1.5.4

commit 30043e7892d0b52dc851ce5ec79c7eb3b7cc44fb
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-14T13:02:50Z

    Added release notes

commit cc3db35925698f1670a8bf1c6a1830c0c9b51290
Author: vershov <vershov@gridgain.com>
Date:   2016-01-14T14:21:56Z

    IGNITE-2032 Unwind undeploys in preloader - Fixes #369.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit a5c85ca7749ae90af2e4a29e2162713b480e40fa
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes

commit 8f32a29c5a7b28b7e1173582f4c7cef5b6d73b27
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-15T11:00:29Z

    1.5.4-SNAPSHOT

commit 6482dc80bf9cdf7aa4f592d9266c6745211b1c4c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-15T12:15:02Z

    ignite-2386 Fixed DiscoverManager to do not increase minor topology version if exchange is not triggered.
    (cherry picked from commit d881417)

commit 4ba6574dfa8077f8de23c8c2663826f81c7fd187
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:15:04Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5e1f287dc83343945b0e47b83ee7724a8e)
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedGetFuture.java
    	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheStoreCollectionTest.java

commit 4b31f4e66c15003cee866a6e5660257346c16c1c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:05:37Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5)

commit 1cf14fcff58c51a628df6309f05be7f0b840d5f8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2015-12-30T10:51:32Z

    IGNITE-2228: .NET: Compute futures could be cancelled.

commit 2f292788cde807d5f1c80cf9fcb8b29cd4e5ee35
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-01-18T10:01:43Z

    IGNITE-2228: Platform compute futures cancellation support. This closes #394.

commit 1f5b4a3c478cdf4049af9600c7abe588c3d226fc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-18T14:24:18Z

    .NET: IgniteFutureCancelledException is marked as serializable.

----
;;;","11/Mar/16 00:46;vkulichenko;Anton,

I reviewed the changes and have couple of comments:

* When cache is recreated, it's possible that it lready has a different configuration than before. I think you should move all the code on lines 239-265 to {{initCache()}} method and call it inside {{init()}}, as well as instead of {{reinitCache()}}.
* I don't like that we wait on reconnect and retry futures indefinitely. This can cause HTTP request to hang for a long time, or even forever. I think we should have a configurable time out there (e.g., 5sec by default). If it times out, we can throw the exception right away without retrying.

Otherwise looks good!;;;","14/Mar/16 08:16;avinogradov;Val, I've fixed code according to your comments and merged to master;;;","14/Mar/16 08:18;githubbot;Github user avinogradovgg closed the pull request at:

    https://github.com/apache/ignite/pull/543
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridDhtPartitionDemander fails with assertion on partition move,IGNITE-2763,12946944,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,dkarachentsev,dkarachentsev,04/Mar/16 10:23,15/Mar/16 16:24,14/Jul/23 06:20,14/Mar/16 12:30,1.5.0.final,,,1.6,cache,,,,,0,,,,"When starts single node and is filled with cache items, then are started three new nodes GridDhtPartitionDemander fails with assertion error.
{noformat}
java.lang.AssertionError: Partition already done [cache=cache_name, fromNode=1073a1d0-5139-44d3-9dee-399637bfd001, part=0, left=[2, 259, 771, 5, 6, 518, 774, 263, 775, 780, 271, 275, 540, 797, 30, 32, 802, 547, 807, 810, 556, 45, 301, 813, 302, 305, 561, 55, 312, 57, 59, 575, 324, 327, 331, 336, 594, 597, 598, 88, 859, 605, 606, 353, 867, 357, 871, 873, 363, 875, 371, 631, 887, 383, 640, 896, 898, 899, 644, 900, 646, 903, 905, 652, 908, 653, 912, 660, 662, 919, 153, 419, 422, 934, 172, 173, 429, 941, 176, 177, 180, 694, 953, 955, 445, 957, 959, 448, 451, 707, 199, 201, 972, 205, 718, 974, 207, 208, 721, 725, 471, 728, 985, 986, 475, 987, 477, 478, 225, 230, 233, 747, 237, 750, 497, 756, 503, 505, 1018, 1019, 764, 510, 1022]]
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionDemander$RebalanceFuture.partitionDone(GridDhtPartitionDemander.java:978)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionDemander$RebalanceFuture.access$1100(GridDhtPartitionDemander.java:751)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionDemander.handleSupplyMessage(GridDhtPartitionDemander.java:600)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader.handleSupplyMessage(GridDhtPreloader.java:408)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$5.apply(GridCachePartitionExchangeManager.java:342)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$5.apply(GridCachePartitionExchangeManager.java:335)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:605)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:303)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$400(GridCacheIoManager.java:81)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$OrderedMessageListener.onMessage(GridCacheIoManager.java:1108)
	at org.apache.ignite.internal.managers.communication.GridIoManager$GridCommunicationMessageSet.unwind(GridIoManager.java:2239)
	at org.apache.ignite.internal.managers.communication.GridIoManager.unwindMessageSet(GridIoManager.java:1004)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1800(GridIoManager.java:103)
	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:973)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

Pull request with test that reproduces problem https://github.com/apache/ignite/pull/538",,avinogradov,dkarachentsev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2796,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 14 12:30:51 UTC 2016,,,,,,,,,,"0|i2u5gv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/16 12:30;avinogradov;merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cache conflicts must honour ""keepBinary"" flag.",IGNITE-2759,12946915,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,vozerov,vozerov,04/Mar/16 08:31,11/Mar/16 14:44,14/Jul/23 06:20,11/Mar/16 14:40,1.5.0.final,,,1.6,cache,,,,,0,community,customer,important,"*Problem*
{{GridCacheMapEntry}} deals with conflicts in some methods like {{innerSet}}. {{innerUpdate}}, etc.. When conflict occurs, we always deserialize keys/values what could lead to exceptions if there are no classes on the server.

*Solution*
Deserialize keys/values only if ""keepBinary=false"".",,dkarachentsev,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 10 16:38:41 UTC 2016,,,,,,,,,,"0|i2u5af:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Mar/16 16:38;dkarachentsev;https://github.com/apache/ignite/pull/542
https://github.com/ggprivate/ggprivate/tree/ignite-2759;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGNITE_HOME/libs/ignite-aws/aws-java-sdk-1.10.29.jar doesn't contain any classes,IGNITE-2758,12946696,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,vkulichenko,vkulichenko,03/Mar/16 21:51,11/Mar/16 18:57,14/Jul/23 06:20,11/Mar/16 18:57,1.5.0.final,,,1.6,build,,,,,0,community,customer,important,"To observe the issue do this:
* Build the fabric ZIP file.
* Go to {{ignite-aws}} module folder.
* Unzip {{aws-java-sdk-1.10.29.jar}}.
* JAR file contains only pom.xml, no classes.

We need to make sure that all required AWS SDK components are included. At least we need these ones:
* aws-java-sdk-core
* aws-java-sdk-s3
* joda-time",,avinogradov,ustas,vkulichenko,vsidorova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Thu Mar 10 15:25:49 UTC 2016,,,,,,,,,,"0|i2u4hb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Mar/16 11:48;avinogradov;fixed at master;;;","04/Mar/16 14:12;ustas;I've checked it.
$IGNITE_HOME/libs/optional/aws-java-sdk-1.10.29.jar doesn't contain any classes.
AWS SDK components (aws-java-sdk-core, aws-java-sdk-s3, joda-time) are included:
Val, are you sure that aws-java-sdk-1.10.29.jar should contain something except pom.xml?;;;","04/Mar/16 18:58;vkulichenko;Ilya,

Sorry, I was unclear :) {{aws-java-sdk}} artifact is just a set of dependencies, this is how they distribute the SDK via Maven. So this is correct that it doesn't have any classes inside, and I don't actually think that we need this JAR file in the ZIP at all, because it doesn't add any value. What we need is the set of JARs required for out AWS-related functionality. Can you check that nodes can be started on Amazon using {{ignite.sh}} with S3 IP finder?;;;","09/Mar/16 15:45;vsidorova;Valentin, we have tried to start node on Amazon using ignite.sh with S3 IP finder (apache ignite 1.6.0 build #540) and get next exception:

{noformat}
[15:34:06,513][SEVERE][main][IgniteKernal] Got exception while starting (will rollback startup routine).
java.lang.NoClassDefFoundError: com/fasterxml/jackson/databind/ObjectMapper
	at com.amazonaws.util.json.Jackson.<clinit>(Jackson.java:32)
	at com.amazonaws.internal.config.InternalConfig.loadfrom(InternalConfig.java:233)
	at com.amazonaws.internal.config.InternalConfig.load(InternalConfig.java:251)
	at com.amazonaws.internal.config.InternalConfig$Factory.<clinit>(InternalConfig.java:308)
	at com.amazonaws.util.VersionInfoUtils.userAgent(VersionInfoUtils.java:139)
	at com.amazonaws.util.VersionInfoUtils.initializeUserAgent(VersionInfoUtils.java:134)
	at com.amazonaws.util.VersionInfoUtils.getUserAgent(VersionInfoUtils.java:95)
	at com.amazonaws.ClientConfiguration.<clinit>(ClientConfiguration.java:47)
	at com.amazonaws.services.s3.AmazonS3Client.<init>(AmazonS3Client.java:384)
	at org.apache.ignite.spi.discovery.tcp.ipfinder.s3.TcpDiscoveryS3IpFinder.initClient(TcpDiscoveryS3IpFinder.java:248)
	at org.apache.ignite.spi.discovery.tcp.ipfinder.s3.TcpDiscoveryS3IpFinder.registerAddresses(TcpDiscoveryS3IpFinder.java:178)
	at org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinderAdapter.initializeLocalAddresses(TcpDiscoveryIpFinderAdapter.java:61)
	at org.apache.ignite.spi.discovery.tcp.TcpDiscoveryImpl.registerLocalNodeAddress(TcpDiscoveryImpl.java:265)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl.spiStart(ServerImpl.java:312)
	at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.spiStart(TcpDiscoverySpi.java:1835)
	at org.apache.ignite.internal.managers.GridManagerAdapter.startSpi(GridManagerAdapter.java:255)
	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.start(GridDiscoveryManager.java:668)
	at org.apache.ignite.internal.IgniteKernal.startManager(IgniteKernal.java:1483)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:880)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1687)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1546)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1002)
	at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:928)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:814)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:713)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:583)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:553)
	at org.apache.ignite.Ignition.start(Ignition.java:347)
	at org.apache.ignite.startup.cmdline.CommandLineStartup.main(CommandLineStartup.java:302)
Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.ObjectMapper
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 29 more
{noformat}

And atrifact aws-java-sdk is still in the Apache Ignite binaries. Is it OK?;;;","10/Mar/16 01:15;vkulichenko;Vasilisa,

I made another fix in master, can you please recheck?;;;","10/Mar/16 15:25;vsidorova;Done. All looks good now for Apache Ignite build #542 and there is not artifact aws-java-sdk in the binaries. 
Artifacts aws-java-sdk-core, aws-java-sdk-s3, joda-time, aws-java-sdk-kms contain some classes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StreamVisitorExample returns empty result set,IGNITE-2756,12946530,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,skozlov,skozlov,03/Mar/16 12:35,11/Mar/16 18:57,14/Jul/23 06:20,11/Mar/16 15:40,1.6,,,,general,,,,,0,,,,"1. Start {{ExampleNodeStartup}}
2. Start {{StreamVisitorExample}}
{noformat}
[15:31:22] Ignite node started OK (id=4395613e)
[15:31:22] Topology snapshot [ver=2, servers=1, clients=1, CPUs=8, heap=7.1GB]
Number of tuples streamed into Ignite: 500000
Number of tuples streamed into Ignite: 1000000
...
Number of tuples streamed into Ignite: 9500000
Number of tuples streamed into Ignite: 10000000
Top performing financial instruments: 
Query result set is empty.
[15:31:47] Ignite node stopped OK [uptime=00:00:25:209]

Process finished with exit code 0
{noformat}",,skozlov,vkulichenko,vsidorova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 10 15:28:45 UTC 2016,,,,,,,,,,"0|i2u3gf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Mar/16 02:53;vkulichenko;Sergey,

I fixed the example in master. Can you please verify?;;;","10/Mar/16 15:28;vsidorova;Fix verified. Thank you, Valentin;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary object might be deserialized unexpectedly when cache store is enabled.,IGNITE-2753,12946436,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,vozerov,vozerov,03/Mar/16 08:00,10/Mar/16 11:06,14/Jul/23 06:20,10/Mar/16 11:06,1.5.0.final,,,1.6,cache,,,,,0,community,customer,important,"*Problem*
See {{GridCacheMapEntry}} class. There are lots of calls to store like this:
{code}
cctx.store().put(null, keyValue(false), CU.value(val, cctx, false), ver);
{code}

When {{keyValue()}} is called, it might force object deserialization. And if there is no class on the server, the following exception might appear:
{code}
g.apache.ignite.binary.BinaryInvalidTypeException: XXX
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:558) ~[ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1442) ~[ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.binary.BinaryObjectImpl.deserializeValue(BinaryObjectImpl.java:542) ~[ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.binary.BinaryObjectImpl.value(BinaryObjectImpl.java:117) ~[ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.keyValue(GridCacheMapEntry.java:1261) ~[ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.initialValue(GridCacheMapEntry.java:3326) ~[ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.processors.datastreamer.DataStreamerImpl$IsolatedUpdater.receive(DataStreamerImpl.java:1598) ~[ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.processors.datastreamer.DataStreamerUpdateJob.call(DataStreamerUpdateJob.java:140) ~[ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.processRequest(DataStreamProcessor.java:304) [ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.access$000(DataStreamProcessor.java:49) [ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor$1.onMessage(DataStreamProcessor.java:79) [ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:822) [ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103) [ignite-core-1.5.7.jar:1.5.7]
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:785) [ignite-core-1.5.7.jar:1.5.7]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_51]
{code}

*Proposed solution*
Pass key and value directly to store manager. It should already handle everything correctly.",,dkarachentsev,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Wed Mar 09 13:24:33 UTC 2016,,,,,,,,,,"0|i2u2vj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Mar/16 14:45;dkarachentsev;https://github.com/apache/ignite/pull/537;;;","09/Mar/16 09:25;vozerov;Dmitry,

Several cache tests failed with NPE. Please take a look.;;;","09/Mar/16 13:24;dkarachentsev;https://github.com/apache/ignite/pull/537;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridH2TreeIndex.getRowCount unwraps objects' values that are not used later,IGNITE-2751,12946410,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ascherbakov,dmagda,dmagda,03/Mar/16 05:48,18/May/16 03:52,14/Jul/23 06:20,17/May/16 04:16,1.5.0.final,,,1.6,,,,,,0,community,important,,"If to run query like ""SELECT COUNT(*) FROM table"" then our implementation will perform a full scan filtering out entries that are not primary for a given node and will calculate only a number of primary ones.

If entries are stored off-heap then both a key and value of an entry are unswapped, Unswapped values are not used by backup filters thus we have to omit unswapping of the values at all.",,ascherbakov,dmagda,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/May/16 13:27;ascherbakov;Benchmark.java;https://issues.apache.org/jira/secure/attachment/12802671/Benchmark.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue May 17 04:16:55 UTC 2016,,,,,,,,,,"0|i2u2pr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/May/16 12:45;ascherbakov;Fix ready.
Waiting for test results on TC.;;;","05/May/16 13:16;ascherbakov;Patch ready.
Waiting for review.;;;","06/May/16 11:53;ascherbakov;Measured performance of counting querires with and without fix.
Benchmark code in the attachment.

Benchmark output below:
Fix on, small value
[14:27:23,246] Cache size: 100000
[14:27:23,246] Average object size: 107.778 bytes.
[14:27:23,246] Testing ""select count(*) from Person"", details: warming up
[14:27:25,254] time(ms): 2007.512 time/query(ms):66.917 count:3000000
[14:27:25,255] Testing ""select count(*) from Person"", details: full scan
[14:27:28,373] time(ms): 3118.792 time/query(ms):62.376 count:5000000
[14:27:28,373] Testing ""select count(*) from Person where _KEY < 100000"", details: id is indexed
[14:27:32,370] time(ms): 3997.077 time/query(ms):79.941 count:5000000
[14:27:32,371] Testing ""select count(*) from Person where id < 100000"", details: id is indexed, has the same value as key
[14:27:45,693] time(ms): 13321.395 time/query(ms):266.428 count:5000000
[14:27:45,693] Testing ""select count(*) from Person where orgId < 100000"", details: orgId is not indexed
[14:27:58,276] time(ms): 12582.177 time/query(ms):251.644 count:5000000

Fix off, small value
[14:41:37,932] Cache size: 100000
[14:41:37,932] Average object size: 107.778 bytes.
[14:41:37,932] Testing ""select count(*) from Person"", details: warming up
[14:41:44,154] time(ms): 6221.135 time/query(ms):207.371 count:3000000
[14:41:44,155] Testing ""select count(*) from Person"", details: full scan
[14:41:54,139] time(ms): 9984.377 time/query(ms):199.687 count:5000000
[14:41:54,139] Testing ""select count(*) from Person where _KEY < 100000"", details: id is indexed
[14:42:05,330] time(ms): 11189.357 time/query(ms):223.787 count:5000000
[14:42:05,330] Testing ""select count(*) from Person where id < 100000"", details: id is indexed, has the same value as key
[14:42:17,919] time(ms): 12588.818 time/query(ms):251.776 count:5000000
[14:42:17,919] Testing ""select count(*) from Person where orgId < 100000"", details: orgId is not indexed
[14:42:30,081] time(ms): 12161.518 time/query(ms):243.23 count:5000000

Fix on, large value
[14:46:07,020] Cache size: 100000
[14:46:07,020] Average object size: 1121.778 bytes.
[14:46:07,020] Testing ""select count(*) from Person"", details: warming up
[14:46:08,953] time(ms): 1932.41 time/query(ms):64.414 count:3000000
[14:46:08,953] Testing ""select count(*) from Person"", details: full scan
[14:46:11,877] time(ms): 2924.013 time/query(ms):58.48 count:5000000
[14:46:11,877] Testing ""select count(*) from Person where _KEY < 100000"", details: id is indexed
[14:46:15,523] time(ms): 3645.613 time/query(ms):72.912 count:5000000
[14:46:15,523] Testing ""select count(*) from Person where id < 100000"", details: id is indexed, has the same value as key
[14:46:31,003] time(ms): 15479.398 time/query(ms):309.588 count:5000000
[14:46:31,003] Testing ""select count(*) from Person where orgId < 100000"", details: orgId is not indexed
[14:46:46,443] time(ms): 15438.951 time/query(ms):308.779 count:5000000

Fix off, large value
[14:36:29,596] Cache size: 100000
[14:36:29,596] Average object size: 1121.778 bytes.
[14:36:29,596] Testing ""select count(*) from Person"", details: warming up
[14:36:37,935] time(ms): 8339.751 time/query(ms):277.992 count:3000000
[14:36:37,936] Testing ""select count(*) from Person"", details: full scan
[14:36:51,614] time(ms): 13677.008 time/query(ms):273.54 count:5000000
[14:36:51,614] Testing ""select count(*) from Person where _KEY < 100000"", details: id is indexed
[14:37:07,064] time(ms): 15449.301 time/query(ms):308.986 count:5000000
[14:37:07,064] Testing ""select count(*) from Person where id < 100000"", details: id is indexed, has the same value as key
[14:37:23,292] time(ms): 16226.891 time/query(ms):324.538 count:5000000
[14:37:23,292] Testing ""select count(*) from Person where orgId < 100000"", details: orgId is not indexed
[14:37:39,063] time(ms): 15770.452 time/query(ms):315.409 count:5000000

Conclusion:
2 of 4 queries have ~3x time speedup with the fix.
The query ""select count(*) from Person where id < 100000"" is running unexpectedly slow. Will investigate it further.
;;;","06/May/16 12:19;ascherbakov;Pull request

https://github.com/apache/ignite/pull/689;;;","17/May/16 04:16;sergi;Looks good to me. Merged to 1.6 and master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web session clustering works incorrectly with WebLogic,IGNITE-2749,12946383,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vkulichenko,vkulichenko,vkulichenko,03/Mar/16 03:05,10/Mar/16 04:17,14/Jul/23 06:20,10/Mar/16 04:17,,,,1.6,,,,,,0,,,,"{{WebSessionFilter}} has a special processing for the session ID generated by WebLogic. The issue is that this processing is not applied in all required cases.  E.g., session ID is transformed when new session is saved in cache (see {{createSession}} method, but not transformed when it's fetched from cache (see {{doFilter0}}.

Need to go through the code, locate incorrect places and fix.",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/16 03:05;vkulichenko;master_ee01b61_ignite-2749.patch;https://issues.apache.org/jira/secure/attachment/12791086/master_ee01b61_ignite-2749.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 10 04:17:11 UTC 2016,,,,,,,,,,"0|i2u2jr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Mar/16 04:17;vkulichenko;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service proxy makes remote call for methods declared in java.lang.Object,IGNITE-2748,12946299,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vkulichenko,vkulichenko,vkulichenko,02/Mar/16 21:39,02/Mar/16 23:39,14/Jul/23 06:20,02/Mar/16 23:39,,,,1.6,managed services,,,,,0,,,,"To reproduce the issue, get a service proxy and call one of {{java.lang.Object}}  methods (e.g., {{hashCode}}). It will make a remote call, which is not needed and can cause issues.

In addition, we should block the gateway on proxy invocation.",,agoncharuk,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/16 23:38;vkulichenko;master_d2d5d24_ignite-2748.patch;https://issues.apache.org/jira/secure/attachment/12791056/master_d2d5d24_ignite-2748.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 02 23:39:18 UTC 2016,,,,,,,,,,"0|i2u213:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/16 23:37;agoncharuk;Good to merge.;;;","02/Mar/16 23:39;vkulichenko;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken download page on ignite.apache.org,IGNITE-2743,12946113,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,ptupitsyn,ptupitsyn,02/Mar/16 11:03,07/May/18 11:53,14/Jul/23 06:20,23/Jun/16 10:35,1.1.4,,,1.7,site,,,,,0,,,,"There are two download pages:
* https://ignite.apache.org/download.cgi (correct)
* https://ignite.apache.org/download (incorrect)

All links are broken on the second one. You can't get on this broken page from our website, but it is the first page in Google for ""apache ignite download"": https://www.google.ru/search?q=apache+ignite+download

Ideally, https://ignite.apache.org/download should be the correct link (.cgi in the url is from 90's)",,ptupitsyn,vsidorova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-03-02 11:03:08.0,,,,,,,,,,"0|i2u0vr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: IGNITE_HOME resolution restricts custom deployment,IGNITE-2740,12945869,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,ptupitsyn,ptupitsyn,01/Mar/16 16:49,09/Mar/16 10:10,14/Jul/23 06:20,09/Mar/16 10:10,1.1.4,,,1.6,platforms,,,,,0,,,,"Need to make sure that users may deploy Ignite JARs with their applications in any way they want.

Currently we have quite restrictive checks in IgniteHome.IsIgniteHome method.

Documentation should also be updated with ""Deployment"" page.",,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 09 10:10:48 UTC 2016,,,,,,,,,,"0|i2tzdj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/16 12:13;ptupitsyn;* Removed exception on failed IGNITE_HOME resolve (it was added incorrectly as part of IGNITE-1626).
* Added documentation: https://apacheignite-net.readme.io/docs/deployment

IGNITE-1626 also introduced another way: put jars into ""libs"" folder near Apache.Ignite.Core.dll. We can add that to the documentation after release.;;;","02/Mar/16 12:20;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/531

    IGNITE-2740 Remove error in IGNITE_HOME check

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2740

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/531.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #531
    
----
commit 917051798822aec2afe03cf0c121766732bd0471
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-03-02T10:43:32Z

    Remove forced IGNITE_HOME check

----
;;;","03/Mar/16 07:17;vozerov;Pavel,
We need tests to ensure that returned null doesn't crash anything.;;;","04/Mar/16 11:34;ptupitsyn;Added a test to verify custom deployment with no IGNITE_HOME.;;;","09/Mar/16 10:10;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/531
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite-Spark documentation is missing some useful informations,IGNITE-2737,12945766,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pgarg,luca.rea,luca.rea,01/Mar/16 08:27,06/Feb/18 23:51,14/Jul/23 06:20,06/Feb/18 23:51,,,,2.4,documentation,spark,,,,1,community,,,"Hi,

in my tests I have experienced some configuration issue running spark in local and yarn-client mode, so I want to share them.
In order to let Ignite work correctly I had to customize spark-defaults.conf adding to ""spark.driver.extraClassPath"" and ""spark.executor.extraClassPath"" the string
{code}
""/opt/ignite/libs/*:/opt/ignite/libs/optional/ignite-spark/*:/opt/ignite/libs/optional/ignite-log4j/*:/opt/ignite/libs/optional/ignite-yarn/*:/opt/ignite/libs/ignite-spring/*""
{code}
(opt/ignite is my IGNITE_HOME) and other IGNITE_ useful variables like ""spark.executorEnv.IGNITE_WORK_DIR"" in order to let them be loaded by executors.",,dmagda,luca.rea,nizhikov,pgarg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 06 23:51:46 UTC 2018,,,,,,,,,,"0|i2tyqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 17:33;dmagda;[~NIzhikov], could you look into this documentation ticket and improve or suggest how to improve the existing Spark documentation?
https://apacheignite-fs.readme.io/docs/ignite-for-spark;;;","06/Feb/18 14:40;nizhikov;[~dmagda] I've update documentation.

Please, review hidden page:

https://apacheignite-fs.readme.io/v2.3/docs/installation-deployment-improved-classpath#section-spark-application-classpath;;;","06/Feb/18 21:46;dmagda;[~NIzhikov] , thanks a lot. Did minor corrections. [~pgarg] , please do a final review and close the ticket:

https://apacheignite-fs.readme.io/v2.3/docs/installation-deployment-improved-classpath#section-classpath-configuration;;;","06/Feb/18 23:51;pgarg;Made minor edits.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interrupt all acquires on local node after ignite.close,IGNITE-2735,12945513,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vladisav,vladisav,vladisav,29/Feb/16 16:32,23/Mar/16 17:52,14/Jul/23 06:20,11/Mar/16 05:04,1.5.0.final,,,1.6,data structures,,,,,0,,,,"""acquire"" method should throw an exception when semaphore is no longer accessible when node is stopped.",,githubbot,vkulichenko,vladisav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Mar 11 05:04:14 UTC 2016,,,,,,,,,,"0|i2tx73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Feb/16 16:42;githubbot;GitHub user vladisav opened a pull request:

    https://github.com/apache/ignite/pull/525

    IGNITE-2735: Fixes distributed semaphore local node stopping issue.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vladisav/ignite ignite-2735

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/525.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #525
    
----
commit 0c756570e8573a4545cbfe46b350a4940c2cc8a3
Author: Vladisav Jelisavcic <vladisavj@gmail.com>
Date:   2016-02-29T16:37:09Z

    ignite-2735: fixed.

----
;;;","05/Mar/16 03:51;vkulichenko;Hi Vladislav,

For such functionality we have {{GridKernalGateway}}, which guards all public API calls from being invoked after node is stopped. It should be used here as well. Store a reference of {{GridKernalContext}} in the semaphore when it's created and surround public method implementations with {{ctx.gateway().readLock()}} and {{ctx.gateway().readUnlock()}}. As an example you can refer to {{GridExecutorService}}.

Also I believe this fix should be applied to all data structures, not only the semaphore.

Thanks!;;;","06/Mar/16 11:15;vladisav;Nice! Didn't knew about this. 
It should be fixed now.

I created a ticket for the other data structures (couldn't find one; hope it's not redundant):
https://issues.apache.org/jira/browse/IGNITE-2768;;;","07/Mar/16 22:22;vkulichenko;Vladislav,

I meant that if gateway is used, everything is handled automatically. You don't need {{stop()}} callback on the semaphore as well as {{if(isBroken())}} checks all over the place. Can these unnecessary changes be removed?

Let me know if I'm missing something.;;;","08/Mar/16 19:28;vladisav;Actually, I think you do; since acquire is a blocking operation, when stop signal comes, there might be blocked threads still waiting to a acquire. This way we can have a quick path, so all blocked threads can be unblocked immediately (without further attempt to execute any transactions), and everything shuts down fast and gracefully (which I think was the reason why IGNITE-1977 fails). I don't think simply using the gateway could do this. The same mechanism  is used to throw exceptions when other node fails and semaphore is in non-failoversafe mode.

Does this makes any sense? Let me know if I overlooked something.

Thanks!;;;","11/Mar/16 05:03;vkulichenko;Yes, makes sense. Merged changes to master. Thanks for the contribution!;;;","11/Mar/16 05:04;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/525
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Preloading fails during entry preloading for binary enum with OFFHEAP_VALUES cache memory mode ,IGNITE-2734,12945497,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,agura,agura,29/Feb/16 15:30,02/Mar/16 15:37,14/Jul/23 06:20,02/Mar/16 15:37,,,,1.6,,,,,,0,,,,"Preloading fails during preloading of entry for {{BinaryEnumObjectImpl}} value type and cache memory mode is {{OFFHEAP_VALUES}}. {{GridCacheReplicatedPreloadOffHeapSelfTest.testDeployment}} fails on TC.

{noformat}
java.lang.AssertionError
    at org.apache.ignite.internal.util.offheap.unsafe.GridUnsafeMemory.putOffHeap(GridUnsafeMemory.java:413)
    at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.value(GridCacheMapEntry.java:252)
    at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.update(GridCacheMapEntry.java:2916)
    at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.initialValue(GridCacheMapEntry.java:3258)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionDemander.preloadEntry(GridDhtPartitionDemander.java:683)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionDemander.handleSupplyMessage(GridDhtPartitionDemander.java:572)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader.handleSupplyMessage(GridDhtPreloader.java:408)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$5.apply(GridCachePartitionExchangeManager.java:342)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$5.apply(GridCachePartitionExchangeManager.java:335)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:605)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:303)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$400(GridCacheIoManager.java:81)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager$OrderedMessageListener.onMessage(GridCacheIoManager.java:1108)
    at org.apache.ignite.internal.managers.communication.GridIoManager$GridCommunicationMessageSet.unwind(GridIoManager.java:2239)
    at org.apache.ignite.internal.managers.communication.GridIoManager.unwindMessageSet(GridIoManager.java:1004)
    at org.apache.ignite.internal.managers.communication.GridIoManager.access$1800(GridIoManager.java:103)
    at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:973)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
{noformat}",,agura,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 02 15:37:19 UTC 2016,,,,,,,,,,"0|i2tx3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Feb/16 15:41;githubbot;GitHub user agura opened a pull request:

    https://github.com/apache/ignite/pull/524

    ignite-2734 Binary enum type deserialization from offheap

    Fix for https://issues.apache.org/jira/browse/IGNITE-2734

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/agura/incubator-ignite ignite-2734

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/524.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #524
    
----
commit 25ec1f9d6339d0a915966b4d49ee00a15c9bd44c
Author: agura <agura@gridgain.com>
Date:   2016-02-29T15:39:45Z

    ignite-2734 Binary enum type deserialization from offheap

----
;;;","29/Feb/16 15:41;agura;The problem is that binary processor returns {{BinaryObjectImpl}} instead of {{BinaryEnumObjectImpl}}.

Fixed in PR: https://github.com/apache/ignite/pull/524

Waiting for TC.;;;","01/Mar/16 11:21;agura;TC looks good. Please review.;;;","01/Mar/16 11:54;sboikov;Changes look good, but I think we need add more tests, especially to check that 'className' is properly deserialized.;;;","01/Mar/16 14:03;agura;Tests added. ;;;","02/Mar/16 10:30;sboikov;Looks good, just add simlar test for cache 'keepBinary' mode for enums in CacheEnumOperationsAbstractTest.;;;","02/Mar/16 10:41;agura;Done.;;;","02/Mar/16 15:32;githubbot;Github user agura closed the pull request at:

    https://github.com/apache/ignite/pull/524
;;;","02/Mar/16 15:37;agura;Merged into master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor shows zero size for OFFHEAP_TIERED cache,IGNITE-2726,12944667,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,vkulichenko,vkulichenko,25/Feb/16 21:17,02/Sep/16 07:13,14/Jul/23 06:20,23/Aug/16 07:11,sprint-1,,,1.6,visor,,,,,0,community,customer,,"To reproduce:

1. Change cache memory mode in {{CachePutGetExample}} to {{OFFHEAP_TIERED}}.
2. Run the example.
3. Connect with Visor and run {{cache -a}} command. See result below - number of entries is zero. With {{ONHEAP_TIERED}} it shows the correct cache size.

{noformat}
visor> cache -a
Time of the snapshot: 02/25/16, 13:10:44
+==============================================================================================================+
|         Name(@)         |    Mode     | Nodes |  Entries  |    Hits    |  Misses   |   Reads    |   Writes   |
+==============================================================================================================+
| CachePutGetExample(@c0) | PARTITIONED | 1     | min: 0    | min: 40    | min: 0    | min: 40    | min: 40    |
|                         |             |       | avg: 0.00 | avg: 40.00 | avg: 0.00 | avg: 40.00 | avg: 40.00 |
|                         |             |       | max: 0    | max: 40    | max: 0    | max: 40    | max: 40    |
+--------------------------------------------------------------------------------------------------------------+
{noformat}",,kuaw26,pkonstantinov,vkulichenko,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Feb/16 10:08;vsisko;IGNITE_2726_Offheap_size_in_cache_information_.patch;https://issues.apache.org/jira/secure/attachment/12790104/IGNITE_2726_Offheap_size_in_cache_information_.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Fri Sep 02 07:13:38 UTC 2016,,,,,,,,,,"0|i2tryv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Feb/16 10:10;vsisko;Added showing of offheap entries count in entries column.;;;","26/Feb/16 15:11;kuaw26;Vasiliy, please rework VisorCacheAggregatedMetrics to show total / heap / offheap metrics as separate metrics and modify Visor Cmd to show them as separate columns in table.;;;","29/Feb/16 04:33;vsisko;Implemented showing of total and detailed (heap / off heap) cache size information on:
# cache -a command
# f.e. cache selection on cache -scan command;;;","29/Feb/16 10:07;pkonstantinov;Tested.;;;","23/Aug/16 03:21;pkonstantinov;We need to do one more fix for the case: cache -c=@cXXX -a.
The table with per-nodes cache information  contains the column Size which shows zero value.;;;","23/Aug/16 06:44;vsisko;Implemented showing of detailed information for Per nodes table:
{noformat}
Nodes for: CachePutGetExample(@c0)
+==================================================================================================================+
|      Node ID8(@), IP      | CPUs | Heap Used | CPU Load |   Up Time    |           Size            | Hi/Mi/Rd/Wr |
+==================================================================================================================+
| F5B72F53(@n1), 172.17.0.1 | 8    | 1.08 %    | 0.40 %   | 02:25:36:380 | Total: 9                  | Hi: 0       |
|                           |      |           |          |              |   Heap: 0                 | Mi: 0       |
|                           |      |           |          |              |   Off Heap: 9             | Rd: 0       |
|                           |      |           |          |              |   Off Heap Memory: 834b   | Wr: 0       |
+---------------------------+------+-----------+----------+--------------+---------------------------+-------------+
| 0556CD57(@n0), 172.17.0.1 | 8    | 1.86 %    | 1.43 %   | 02:30:57:743 | Total: 11                 | Hi: 0       |
|                           |      |           |          |              |   Heap: 0                 | Mi: 0       |
|                           |      |           |          |              |   Off Heap: 11            | Rd: 0       |
|                           |      |           |          |              |   Off Heap Memory: 1,016b | Wr: 0       |
+------------------------------------------------------------------------------------------------------------------+
{noformat};;;","23/Aug/16 09:52;pkonstantinov;Successfully tested in branch.;;;","29/Aug/16 10:46;kuaw26;Merged to master.;;;","02/Sep/16 07:13;pkonstantinov;Tested in master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion in org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker.CancelJobProcessor#update fails if a job failed with an exception,IGNITE-2725,12944469,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,iveselovskiy,iveselovskiy,25/Feb/16 12:27,11/Apr/16 10:02,14/Jul/23 06:20,11/Apr/16 10:02,1.6,,,1.6,hadoop,,,,,0,,,,"Assertion in org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker.CancelJobProcessor#update : 1584 failed if a Hadoop job failed with an exception. The problem is that assertion expects the phase to be PHASE_CANCELLING , while actual phase is PHASE_COMPLETE.
{code}
assert meta.phase() == PHASE_CANCELLING || err != null: ""Invalid phase for cancel: "" + meta;
{code}",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2354,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 08 19:06:21 UTC 2016,,,,,,,,,,"0|i2tqqv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/16 18:05;iveselovskiy;In org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker#onTaskFinished, line 541 we have
{code}
                    cache.invokeAsync(info.jobId(), new UpdatePhaseProcessor(incrCntrs, PHASE_COMPLETE)).
                        listen(failsLog);
{code}

, so it looks like the HadoopJobMetadata#phase may asynchronously become ""PHASE_COMPLETE"", so there is no surprise the problematic assertion fails.;;;","08/Apr/16 19:06;iveselovskiy;https://github.com/apache/ignite/pull/627;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoveryMulticastIpFinder is not thread safe.,IGNITE-2720,12944404,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,vozerov,vozerov,25/Feb/16 07:37,29/Feb/16 07:31,14/Jul/23 06:20,29/Feb/16 07:31,1.5.0.final,,,1.6,general,,,,,0,,,,"*Problem*
TcpDiscoveryMulticastIpFinder contains several  non-thread-safe collections. E.g. {{reqItfs}} which is a {{HashSet}}.
And these collections could be accessed from different thread concurrently. E.g., mentioned collection can be accessed from the following methods:
1) {{initializeLocalAddresses}} (invoked from {{spiStart}}) - this is already a problem for shared IP finder in case two nodes start in the same JVM.
2) {{getRegisteredAddresses}} - accessed from billion places including client reconnect routine. 

As a result we could receive things like that:
{code}
java.util.ConcurrentModificationException
 at java.util.HashMap$HashIterator.nextNode(HashMap.java:1429)
 at java.util.HashMap$KeyIterator.next(HashMap.java:1453)
 at org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder.requestAddresses(TcpDiscoveryMulticastIpFinder.java:475)
 at org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder.getRegisteredAddresses(TcpDiscoveryMulticastIpFinder.java:431)
 at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.registeredAddresses(TcpDiscoverySpi.java:1603)
 at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.resolvedAddresses(TcpDiscoverySpi.java:1552)
 at org.apache.ignite.spi.discovery.tcp.ClientImpl.joinTopology(ClientImpl.java:475)
 at org.apache.ignite.spi.discovery.tcp.ClientImpl.access$900(ClientImpl.java:118)
 at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.tryJoin(ClientImpl.java:1509)
 at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.body(ClientImpl.java:1328)
 at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{code}

*Solution*
Investigate access patterns and make multicast IP finder thread-safe. Porbably we have similar problems in other IP finders - need to check that.",,sboikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Feb 29 07:31:30 UTC 2016,,,,,,,,,,"0|i2tqcf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Feb/16 12:47;sboikov;It is supposed that 'initializeLocalAddresses' is called once on node start before 'getRegisteredAddresses' can be called, but there was as issue in ClientImpl: MessageWorker starts concurrently with 'initializeLocalAddresses' call. Fixed it to start MessageWorker  after 'initializeLocalAddresses' call.;;;","29/Feb/16 07:31;sboikov;Fixed, commit (49dcd6b).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Value is not copied in entry processor if optimized marshaller is used,IGNITE-2719,12944349,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,agura,vkulichenko,vkulichenko,25/Feb/16 01:39,01/Mar/16 11:13,14/Jul/23 06:20,01/Mar/16 11:00,,,,1.6,cache,,,,,0,community,important,,"If {{OptimizedMarshaller}} is used, the {{MutableEntry}} passed to entry processor contains the same instance that is stored in cache, even if {{copyOnRead}} flag is true.

This happens because {{CacheLazyEntry.getValue()}} method never creates a copy.

Test attached.",,agura,githubbot,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/16 01:40;vkulichenko;CacheEntryProcessorCopySelfTest.java;https://issues.apache.org/jira/secure/attachment/12789836/CacheEntryProcessorCopySelfTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 01 11:13:42 UTC 2016,,,,,,,,,,"0|i2tq07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Feb/16 04:59;vkulichenko;The test fails for binary marshaller as well.;;;","25/Feb/16 11:15;sboikov;Andrey, please take a look at exising test IgniteCacheCopyOnReadDisabledAbstractTest, GridCacheOnCopyFlagAbstractSelfTest. It is necessary to test two cases: if copyOnRead=true we do not store deserialized value in cache and copy it for entry processor/interceptors, if copyOnRead=false deserialized value is stored in cache.;;;","28/Feb/16 16:45;githubbot;GitHub user agura opened a pull request:

    https://github.com/apache/ignite/pull/520

    ignite-2719 Value is not copied in entry processor

    Fix for https://issues.apache.org/jira/browse/IGNITE-2719

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/agura/incubator-ignite ignite-2719

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/520.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #520
    
----
commit 0079e966cd706d9fdb0b558ba706c3eb70bc9a2f
Author: agura <agura@gridgain.com>
Date:   2016-02-28T16:43:58Z

    ignite-2719 Value is not copied in entry processor

----
;;;","28/Feb/16 16:47;agura;{{CacheLazyEntry#getValue(boolean)}} method always used {{false}} value for copy value flag.

Fixed. Tests added. {{GridCacheOnCopyFlagAbstractSelfTest}} is fixed. 

PR: https://github.com/apache/ignite/pull/520;;;","29/Feb/16 10:04;agura;TC looks good. Please review.;;;","01/Mar/16 06:58;sboikov;Reviewed, looks good, but it seems that GridCacheOnCopyFlagAbstractSelfTest does not really test p2pEnabled=true since node is started in 'beforeTest'.

Let's merge this fix and then revisit logic for setting 'storeVal' flag in IgniteCacheObjectProcessorImpl.contextForCache, now it is set when peer class loading or indexing is enabled, it seems this is not needed when binary marshaller is used.
;;;","01/Mar/16 10:53;agura;Nodes start/stop moved to {{doTest}} method.;;;","01/Mar/16 11:13;githubbot;Github user agura closed the pull request at:

    https://github.com/apache/ignite/pull/520
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
modules/zookeeper/target/libs directory does not have all dependencies,IGNITE-2718,12943104,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,shroman,dustin.chesterman,dustin.chesterman,24/Feb/16 22:21,03/Mar/16 14:01,14/Jul/23 06:20,02/Mar/16 03:04,,,,1.6,build,zookeeper,,,,0,community,,,"If you specify the zookeeper ip finder in the example cache config there are a host of classnotfound exceptions.  I believe these need to be populated into the build target lib dir.

{code}        <property name=""discoverySpi"">
            <bean class=""org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi"">
                <property name=""ipFinder"">
                    <!--
                        Ignite provides several options for automatic discovery that can be used
                        instead os static IP based discovery. For information on all options refer
                        to our documentation: http://apacheignite.readme.io/docs/cluster-config
                    -->
                    <!-- Uncomment static IP finder to enable static-based discovery of initial nodes. -->
                    <!--<bean class=""org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder"">-->
                    <bean class=""org.apache.ignite.spi.discovery.tcp.ipfinder.zk.TcpDiscoveryZookeeperIpFinder"">
                        <property name=""allowDuplicateRegistrations"" value=""false"" />
                        <property name=""basePath"" value=""/grid"" />
                        <property name=""serviceName"" value=""myService"" />
                        <property name=""zkConnectionString"" value=""192.168.200.11:2181"" />
                    </bean>
                </property>
            </bean>
        </property>{code}",,avinogradov,dustin.chesterman,raulvk,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 03 14:01:47 UTC 2016,,,,,,,,,,"0|i2tibj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Feb/16 01:18;shroman;Dustin, can you please share what classes are not found?
Do you have
{code}
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-core</artifactId>
            <version>${ignite.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-spring</artifactId>
            <version>${ignite.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-zookeeper</artifactId>
            <version>${ignite.version}</version>
        </dependency>
{code}
in your pom file?;;;","25/Feb/16 17:47;dustin.chesterman;I'm just building the source and running the example cache with zk discovery.  I had to have the following jars in ignite/modules/zookeeper/target/libs/

* curator-client-2.9.0.jar
* curator-framework-2.9.1.jar
* curator-x-discovery-2.9.1.jar
* jackson-core-asl-1.9.7.jar
* jackson-mapper-asl-1.9.7.jar;;;","25/Feb/16 18:39;dustin.chesterman;To be clear, this is only affecting the examples in the docs.  Including it in a project correctly resolves the transitive deps.  My understanding of the build and the build_classpath.sh script was just that the project should be runnable on its own after building, but I suppose maybe that isn't the goal.;;;","26/Feb/16 00:57;shroman;[~dustin.chesterman]
I re-checked it. Zookeeper module is correctly built.
To run an example, you have to add the above-mentioned dependencies to your pom.xml. No need to look at {{target/libs}}.
If you are building from the sources, do {{maven clean install -DskipTests}} at the root of the whole project first. That will suffice to run your example app.

If you need jars (probably you don't if you use maven), they all can be found in 
{{ignite_src_dir/target/bin/apache-ignite-fabric-1.6.0-SNAPSHOT-bin.zip}}. See {{libs/optional}}

Makes sense?;;;","26/Feb/16 01:00;dustin.chesterman;I see.  Thank you Roman.  Will close.;;;","26/Feb/16 01:16;shroman;[~dustin.chesterman]
I might misunderstand the issue. Does the problem occur when you run {{ignite.sh}} rather then using maven?;;;","26/Feb/16 03:32;shroman;This issue occurs when running {{ignite.sh}} (I was thinking example applications with maven and got confused...)
Currently copying {{libs/optional/ignite-zookeeper}} to {{libs}} in not sufficient -- a user will have to add a bunch of other jars. This has to be improved.;;;","26/Feb/16 06:20;shroman;[~raulvk] Are you ok with adding dependencies?
And can I ask you for a quick review? https://github.com/shroman/ignite/commit/51f9538360156d0c6d7767c97dd62e5b9fae868f;;;","29/Feb/16 01:58;shroman;https://github.com/apache/ignite/pull/522;;;","02/Mar/16 03:21;shroman;Merged;;;","02/Mar/16 15:37;avinogradov;Roman, 

We have to add explicitly only dependencies we want to see at result build. Transitive dependencies will not get into result build. Final artifact size should be as small as possible.
Please make sure you did not add redundant dependencies .;;;","03/Mar/16 01:06;shroman;Anton,

Thank you for the feedback!
I checked the dependencies. It got quite fat, but it won't run without the following additional modules
{noformat}
curator-client-2.9.1.jar
guava-16.0.1.jar
jackson-mapper-asl-1.9.13.jar
zookeeper-3.4.6.jar
curator-x-discovery-2.9.1.jar
jackson-core-asl-1.9.13.jar
slf4j-api-1.7.7.jar
log4j-1.2.17.jar
slf4j-log4j12-1.7.7.jar
{noformat}
These are the same jars included in {{features.xml}} of osgi-karaf module, plus log4j required by zookeeper.;;;","03/Mar/16 11:28;raulvk;Sorry for the delay. [~roman_s], yes, that's absolutely fine. In fact, it's not a good practice to rely on transitive dependencies of 3rd parties, better to declare them explicitly.
Cheers!;;;","03/Mar/16 14:01;shroman;Thanks a lot, Raúl!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HotSpot in GridQueryProcessor.BinaryProperty.value() method,IGNITE-2715,12942981,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,dmagda,dmagda,24/Feb/16 15:37,26/Feb/16 12:06,14/Jul/23 06:20,26/Feb/16 12:06,1.5.0.final,,,1.6,,,,,,1,community,important,,"The hotspot was detected in the following scenario.

1) Start a server node(s) with CacheConfiguration that stores binary objects of type T and has field A in the indexes;

2) Start client node that creates objects of type T using BinaryObjectBuilder but doesn't set value for field A at all;

3) Client populates the cache with created objects using IgniteDataStreamer at high rate.

If you connect to the server using Visual VM you'll see that threads from the public thread pull spend a lot of time waiting for a monitor and that {{GridQueryProcessor.BinaryProperty.value()}} is a hotspot.

The reason why the method above is the hotspot is because it calls 
{{U.warn(log, ""Neither key nor value have property "" +
                            ""[propName="" + propName + "", key="" + key + "", val="" + val + ""]"");}}

all the time converting a binary object to String. The warning is called because field A is not set in the binary representation.

This warning must be reworked in one of the following way:
- just print the name of the field that is not found;
- print the warning for the debug level only because cases there can be cases when a binary object doesn't have a field that is set in the indexes.

In addition revisit the rest of the code removing conversion of BinaryObject to String at places that could lead to performance degradation.",,avk47,dkarachentsev,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 25 12:59:16 UTC 2016,,,,,,,,,,"0|i2thk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Feb/16 12:59;dkarachentsev;https://github.com/apache/ignite/pull/514;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session not unbind from current request after invoking request.getSession().invalidate(),IGNITE-2710,12941268,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,crnlmcn,crnlmcn,23/Feb/16 03:21,07/Mar/16 02:21,14/Jul/23 06:20,07/Mar/16 02:21,1.5.0.final,,,1.6,cache,,,,,0,community,session,user,"System.out.println(request.getSession().getId());
request.getSession().invalidate();
System.out.println(request.getSession().getId());

getSession() although return the same session after the invalidation.","java8, tomcat8
",avinogradov,crnlmcn,dmagda,shroman,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Mon Mar 07 02:21:18 UTC 2016,,,,,,,,,,"0|i2t6zj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Feb/16 04:12;shroman;A quick test invalidates session for me.
Can you please provide simple configurations you use to reproduce it?;;;","23/Feb/16 05:30;crnlmcn;ok,thanks
ignite.xml:
	<bean id=""session.cfg"" class=""org.apache.ignite.configuration.IgniteConfiguration"">
		<property name=""gridName"" value=""sessionGrid"" />
		<property name=""metricsLogFrequency"" value=""0"" />
		<property name=""gridLogger"" >
			<bean class=""org.apache.ignite.logger.slf4j.Slf4jLogger"" />
		</property>
		<property name=""cacheConfiguration"">
			<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
				<!-- Cache mode. -->
				<property name=""name"" value=""webSession"" />
				<property name=""cacheMode"" value=""PARTITIONED"" />
				<property name=""backups"" value=""1"" />
			</bean>
		</property>
		<property name=""discoverySpi"">
			<bean class=""org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi"">
				<property name=""ipFinder"">
					<bean class=""org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder"">
						<property name=""addresses"">
							<list>
								<value>localhost</value>
							</list>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

web.xml:
<listener>
	<listener-class>org.apache.ignite.startup.servlet.ServletContextListenerStartup</listener-class>
	</listener>
	<filter>
		<filter-name>IgniteWebSessionsFilter</filter-name>
		<filter-class>org.apache.ignite.cache.websession.WebSessionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>IgniteWebSessionsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<context-param>
		<param-name>IgniteConfigurationFilePath</param-name>
		<param-value>/var/www/ignite/ignite-session.xml</param-value>
	</context-param>
	<context-param>
		<param-name>IgniteWebSessionsGridName</param-name>
		<param-value>sessionGrid</param-value>
	</context-param>
	<context-param>
		<param-name>IgniteWebSessionsCacheName</param-name>
		<param-value>webSession</param-value>
	</context-param>;;;","23/Feb/16 08:51;shroman;{code}
System.out.println(request.getSession().getId());
request.getSession().invalidate();
System.out.println(request.getSession().getId());
{code}
Attributes are correctly nullified, but after the current session is invalidated, a new one with a different id has to be created (and that does not happen).

Another problem is a bunch of methods should throw IllegalStateException on invalidaded session (http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html);;;","02/Mar/16 01:36;shroman;The fix invalidates a session within a request, and enables the following scenario
{code}
// returns a valid session
request.getSession();

// invalidates the session
request.getSession().invalidate();

// now the session is null
request.getSession(false);

// creates a new session
request.getSession()
{code}

https://github.com/apache/ignite/pull/530;;;","02/Mar/16 02:55;shroman;[~vkulichenko] Can I ask you to review it and mute IgniteWebSessionSelfTestSuite$WebSessionTransactionalSelfTest.testInvalidatedSession (or give me permissions)?;;;","03/Mar/16 00:38;shroman;[~sboikov] Probably you are the right person to have a look?;;;","03/Mar/16 02:16;vkulichenko;Roman,

Sorry for the delay. I will take a look at this today or tomorrow.;;;","03/Mar/16 02:17;shroman;Valentin, thank you!;;;","03/Mar/16 16:27;avinogradov;Roman,

Looks good, 
but:
1) Is there any reason to store isValid at writeExternal? I see that cache.remove(ses) happens at ses.invalidate().
I removed isValid storage and see no test failures.
2) Seems that ""GenuineSession"" should be invalidated at ses.invalidate, not at next getSession() request. (super.invalidate() should be invoked)
3) WebSession ses at RequestWrapper should be marked as volatile 
4) getSession at RequestWrapper should return invalid session instead of null

;;;","04/Mar/16 03:23;shroman;Anton,

Thanks for your comments! I have made the changes.

1) -> You are absolutely right. Externalizing _isValid_ is not needed here -- by the current logic the session is completely deleted from the cache, and when it is not found a new session is created. I think I will need to make _isValid_ transient then.

2) -> _HttpSession_ is an interface. I could not find a cleaner way, so I invalidate the gunuine session on every subsequent _getSession()_ if it is invalid.

3) -> Good point, thank you!

4) -> I was thinking of it too. But doing some investigations and looking at users' code at github, it looks like many users expects _null_. Tomcat produces _null_ too. Just want to be sure users won't be surprised switching to Ignite. What do you think?;;;","04/Mar/16 08:35;avinogradov;Roman, 

2) I see that gunuine session is a Websession constructor param, possible we have to store it as a field and invalidate at ses.invaliate()? Or we can invalidate it somehow using sesId? What do you think?
4) Sounds good in this case.;;;","04/Mar/16 09:55;shroman;Anton,

I changed the implementation by storing a genuine session, as you advised. Looks nice and simple to me.
_isValid_'s use becomes trivial -- just to follow specifications and produce _IllegalStateException_ when invalid.;;;","04/Mar/16 10:34;avinogradov;Roman,

1) I think that  ""if (cache.get(ses.getId()) == null) {"" should be replaced by isValid() check because cache.get if much more heavy than reading volatile.
2) Also new session should be created on demand at any cases, not only if current invalidated? Possible previous one should be invalidated in case new one demanded.;;;","04/Mar/16 10:51;shroman;Anton,

1) Yes, you are right. I have reverted this change.
2) According to the specs, it is created only when there is no session and _create_ is true. http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html#getSession-boolean-;;;","04/Mar/16 11:07;avinogradov;Roman, 

Now looks good to me. 

Please change genuineSession to ses according to https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules and check TeamCity. 
P.s. I'm not an expert in servlets, so in case you're not sure at some changes lets ask someone to review result of our discussions ;) ;;;","04/Mar/16 11:53;shroman;Thank you! Maybe Valentin has some comments?

It seems session replication has more issues. I will open other tickets if I can confirm.

Also,IgniteWebSessionSelfTestSuite$WebSessionTransactionalSelfTest.testInvalidatedSession will have to be muted. Whom should I ask?;;;","04/Mar/16 12:16;avinogradov;Roman,

it's not a good case to mute untill it contains  fail(""https://issues.apache.org/jira/browse/IGNITE-*"");
Someone, for example me, will mute that when see such failure.
P.s. ask Val about review by email.;;;","04/Mar/16 12:38;shroman;Anton,

Got it. It contains _fail(...)_ for transactional mode related to a jira issue. Let's see if Val has any comments, and someone can mute it after I merge.;;;","05/Mar/16 04:02;vkulichenko;Changes make sense to me. Couple of questions though:
* Why not all methods are guarded by {{if (!isValid)}} check? Is it on purpose?
* Why the test doesn't work in transactional cache?;;;","05/Mar/16 04:26;shroman;Thank you!
1) methods are guarded according to the HttpSession specs. Probably the only left are _s/getMaxInactiveInterval()_ and _getId()_ but specs don't say how it should behave when the session is invalid, it says they must return a value. All the rest are deprecated and call guarded methods.
http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html
2) I guess it's the same IGNITE-810 which doesn't work for _testRestarts()_;;;","05/Mar/16 06:32;vkulichenko;OK, I think it can be merged then.;;;","07/Mar/16 02:21;shroman;Merged. Thank you, guys for the reviews!;;;",,,,,,,,,,,,,,,,,,,,,
High contention on a cache key leads to excsessive thread stack usage,IGNITE-2709,12941260,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,23/Feb/16 01:35,25/Feb/16 02:48,14/Jul/23 06:20,25/Feb/16 02:48,ignite-1.4,,,,cache,,,,,0,,,,"Currently {{GridCacheMvccManager#onOwnerChanged}} callback notifies listeners synchronously. This means that the call stack size for a transaction commit is proportional to the size of MVCC candidates queue. On a big enough queue size this leads to a StackOverflowError (see the file attached).

I suggest the {{GridCacheMvccManager:158}} line be executed asynchronously after some (3-5) nested calls.

The change should be properly benchmarked.",,agoncharuk,avk47,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Feb/16 01:36;agoncharuk;stack.txt;https://issues.apache.org/jira/secure/attachment/12789116/stack.txt",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 25 02:47:58 UTC 2016,,,,,,,,,,"0|i2t6xr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Feb/16 06:48;sboikov;Reviewed, see one issue: in old code if 'onOwnerChanged' returns 'false' we try to notify others futures otherwise do 'return', for asynchronous notification 'return' is missed and it does not handle case when 'onOwnerChanged' returns 'false'.;;;","25/Feb/16 02:47;agoncharuk;Moved the whole notification procedure in a separate method, calling this entire method either synchronously or from a separate thread.;;;","25/Feb/16 02:47;agoncharuk;Merged to master (a7b6ad36dd9b8f91877c614ce6e72c83ec1ffdf6);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SkipStore flag is not overridden for a transaction entry,IGNITE-2707,12941224,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,22/Feb/16 23:34,25/Feb/16 02:46,14/Jul/23 06:20,25/Feb/16 02:46,ignite-1.4,,,1.6,cache,,,,,0,important,,,"Consider the following code snippet: 
{code}
try (Transaction tx = ignite.transactions().txStart()) {
    cache.withSkipStore().get(key);

    cache.put(key, value);

    tx.commit();
}
{code}

Transaction commit will not trigger store write because {{skipStore}} flag is set to {{true}} for the transaction entry and is not overridden on put() operation (see IgniteTxLocalAdapter:3780).",,agoncharuk,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/16 23:36;agoncharuk;Ignite_2707_Test_and_patch.patch;https://issues.apache.org/jira/secure/attachment/12789092/Ignite_2707_Test_and_patch.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 25 02:46:39 UTC 2016,,,,,,,,,,"0|i2t6pr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Feb/16 23:36;agoncharuk;Attached a patch that adds a test reproducing the issue and a suggested fix. Need to verify TC.;;;","24/Feb/16 00:45;agoncharuk;After additional debugging it turned out that {{get()}} inside a pessimistic transaction and OFFHEAP_TIERED memory mode will always trigger a cache store load. Added corresponding test and fixed in the same PR.;;;","24/Feb/16 06:29;sboikov;Reviewed, looks good, but I think it makes sense to add similar test for 'keepBinary' flag.;;;","25/Feb/16 02:46;agoncharuk;Added the test. Merged to master (commit 711fe3783cb622ae134df899397505d2813d50ac);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridHandleTable stores object at incorrect index,IGNITE-2706,12940847,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vkulichenko,dmagda,dmagda,21/Feb/16 06:11,23/Feb/16 20:21,14/Jul/23 06:20,23/Feb/16 03:00,1.5.0.final,,,1.6,,,,,,0,,,,"When lookup(Object o) calls growSpine() it uses OLD index to insert object.

Test with additional details is attached.",,dmagda,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/16 06:12;dmagda;GridHandleTableUnitTest.java;https://issues.apache.org/jira/secure/attachment/12788886/GridHandleTableUnitTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 23 03:00:31 UTC 2016,,,,,,,,,,"0|i2t4e7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Feb/16 03:00;vkulichenko;Fixed in master.

Commit: https://github.com/apache/ignite/commit/5436b62d9d0dc604c74e00ea80f31ec5ec41aec0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridClosureProcessor internal closures are [de]serialized by OptimizedMarshaller even if BinaryMarshaller is configured,IGNITE-2700,12940768,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ilantukh,ilantukh,20/Feb/16 11:33,10/Mar/16 12:37,14/Jul/23 06:20,10/Mar/16 12:37,1.5.0.final,,,1.6,compute,,,,,0,community,,,"Usage of OptimizedMarshaller is forced because:
a. Closures implement Externalizable.
b. classnames.properties file contains closure class names.

Need to implement new versions of closures (C1, C1MLA, C2, C2MLA, C4) that can be processed by BinaryMarshaller.",,githubbot,ilantukh,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2728,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 10 12:37:49 UTC 2016,,,,,,,,,,"0|i2t3wn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/16 13:06;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/506

    IGNITE-2700

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ilantukh/ignite ignite-2700

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/506.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #506
    
----
commit 2fc88c57ebad5ea2ab5bd70f8fe7d34b900a0080
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2016-02-20T11:46:53Z

    New versions of closures.

commit 79fd06f1edb631b194d8c3b21e8c3adc9be88ea2
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2016-02-20T13:04:47Z

    Fixed failing tests.

----
;;;","20/Feb/16 17:44;ilantukh;Tests passed, please review.;;;","25/Feb/16 11:50;vozerov;Ilya, my comments:
1) absMap/BALANCE: you should create version-dependent job, then find balanced node and then _optionally_ fallback to old job if selected node is <1.6. For now you have 2 job allocations in the most common case.
2) outMap: same as p.1
3) T8/T9/T10.map: same as p.1. You can simply all these usages into a dedicated method to avoid duplication.
4) T9.map: same as p.1.
5) C1V2/C1MLAV2/C2V2/C2MLAV2/C4V2/C4MLAV2 - raw writer/reader should be used instead.
6) Are we sure that all these classes are serialized using binary marshaler? As I remember, there is some logic which will write all system classes in ""optimized"" form, no?

;;;","25/Feb/16 12:33;ilantukh;Fixed, relaunched tests.;;;","26/Feb/16 12:40;vozerov;Ilya,

Please ensure that version comparison occur only once. Take in count that usually user will operate on new version, so possible downgrade is not likely. ;;;","26/Feb/16 15:06;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/518

    IGNITE-2700

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2700

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/518.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #518
    
----
commit 2fc88c57ebad5ea2ab5bd70f8fe7d34b900a0080
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2016-02-20T11:46:53Z

    New versions of closures.

commit 1758a59be5c2c08f67b7a12508c118e5d9a95225
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2016-02-20T13:12:03Z

    ignite-2700 : Version selection logic.

commit be12521cfc98b237fa2db47973234294b539d1e3
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2016-02-25T12:24:38Z

    ignite-2700 : Fixed problems found during code review.

commit 9af0aa5de957c625104f2becffce57105c69eda8
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2016-02-26T14:51:08Z

    ignite-2700 : Closure compatibility optimizations.

----
;;;","29/Feb/16 08:25;ilantukh;Improved version downgrade logic, verified that all tests pass.;;;","29/Feb/16 08:25;githubbot;Github user ilantukh closed the pull request at:

    https://github.com/apache/ignite/pull/506
;;;","29/Feb/16 08:26;ilantukh;Please review https://github.com/apache/ignite/pull/518;;;","29/Feb/16 15:37;ilantukh;Final changes broke test DynamicProxySerializationMultiJvmSelfTest#testBinary().

In that test a closure is passed to Compute Grid with dynamic proxy class as a field. BinaryMarshaller cannot handle such case - in BinaryFieldAccessor$DefaultFinalClassAccessor#write() there is no logic for proxy value type.;;;","01/Mar/16 17:43;ilantukh;Tests passed, please review.;;;","09/Mar/16 09:57;vozerov;Waiting for tests to pass once again.;;;","09/Mar/16 23:14;ilantukh;Test results : http://204.14.53.151/viewLog.html?buildId=206575&tab=buildResultsDiv&buildTypeId=IgniteTests_RunAll
Failures don't appear to be related to code changes.;;;","10/Mar/16 10:05;vozerov;Ilya, my comments:
1) BinaryContext - passing class names as string is bad practice. Please make these classes public and pass their names using Class.getName().
2) Missing comments on methods and field. Please add them.
3) Please avoid setting BinaryMarshaller explicitly in tests because this way you change one case to another. Instead, you should *add* new test cases.;;;","10/Mar/16 10:56;ilantukh;Fixed, please review.;;;","10/Mar/16 11:01;vozerov;Waiting for tests.;;;","10/Mar/16 11:27;ilantukh;Affected test suites (Ignite Compute Grid and Ignite Binary Objects Compute Grid) passed.;;;","10/Mar/16 12:37;vozerov;Good to merge.;;;","10/Mar/16 12:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/518
;;;",,,,,,,,,,,,,,,,,,,,,,,,
BinaryInvalidTypeException on remote node for ScalarCacheQueryExample,IGNITE-2695,12940747,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ustas,skozlov,skozlov,20/Feb/16 06:13,20/Feb/16 16:04,14/Jul/23 06:20,20/Feb/16 16:04,1.6,,,,general,,,,,0,,,,"Remote node got following exception once ScalarCacheQueryExample run after ScalarCachePopularNumbersExample
{noformat}
[23:19:05,834][INFO][exchange-worker-#51%null%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=88, minorTopVer=1], evt=DISCOVERY_CUSTOM_EVT, node=43af46da-0154-4952-b8fd-fd25fe822652]
Exception in thread ""pub-#8%null%"" class org.apache.ignite.binary.BinaryInvalidTypeException: org.apache.ignite.scalar.examples.ScalarCachePopularNumbersExample$IncrementingUpdater
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:558)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1442)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.deserialize(GridBinaryMarshaller.java:295)
	at org.apache.ignite.internal.binary.BinaryMarshaller.unmarshal(BinaryMarshaller.java:112)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.processRequest(DataStreamProcessor.java:277)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.access$000(DataStreamProcessor.java:49)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor$1.onMessage(DataStreamProcessor.java:79)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:822)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:785)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ClassNotFoundException: org.apache.ignite.scalar.examples.ScalarCachePopularNumbersExample$IncrementingUpdater
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:278)
	at org.apache.ignite.internal.util.IgniteUtils.forName(IgniteUtils.java:8195)
	at org.apache.ignite.internal.MarshallerContextAdapter.getClass(MarshallerContextAdapter.java:185)
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:549)
	... 12 more
{noformat}",,skozlov,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Feb 20 16:04:12 UTC 2016,,,,,,,,,,"0|i2t3rz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/16 09:22;ustas;The same exception appears on external nodes when I run ScalarCachePopularNumbersExample

;;;","20/Feb/16 16:04;ustas;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Format of uptime for metrics,IGNITE-2690,12940500,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,alpert,skozlov,skozlov,19/Feb/16 13:38,11/Mar/16 09:55,14/Jul/23 06:20,11/Mar/16 09:54,1.5.0.final,,,,general,,,,,0,newbie,,,"Milliseconds of uptime from metrics should be properly formatted (3 digits):
{noformat}
[16:35:08,994][INFO][grid-timeout-worker-#33%null%][IgniteKernal]
Metrics for local node (to disable set 'metricsLogFrequency' to 0)
    ^-- Node [id=fcc9d9ca, name=null, uptime=01:04:00:996]
...
[16:36:09,011][INFO][grid-timeout-worker-#33%null%][IgniteKernal]
Metrics for local node (to disable set 'metricsLogFrequency' to 0)
    ^-- Node [id=fcc9d9ca, name=null, uptime=01:05:01:14]
{noformat}

:14 -> :014",,alpert,dmagda,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/16 17:27;alpert;master_baa1312_IGNITE-2690.patch;https://issues.apache.org/jira/secure/attachment/12791206/master_baa1312_IGNITE-2690.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Mar 11 09:53:07 UTC 2016,,,,,,,,,,"0|i2t293:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Mar/16 17:27;alpert;Hi.

I created a patch and also a pull request that trivial bug : https://github.com/apache/ignite/pull/534.;;;","09/Mar/16 16:30;dmagda;Hi [~alpert],

Thanks for the contribution. In any case please fully follow Apache Ignite contribution process [1].
You need to assign the ticket on yourself and move it to 'PATCH_AVAILABLE' state. 

Since there is no big sense to run tests on TeamCity I'll review your changes tomorrow. 

[1] https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-1.CreateGitHubpull-request;;;","09/Mar/16 19:55;alpert;Hi [~dmagda], 

I am not able to change the assignee nor the status of the bug.;;;","10/Mar/16 10:09;dmagda;[~alpert], I've provided you with contributors rights in JIRA. Please try to assign ticket on yourself and change the ticket's status.;;;","11/Mar/16 09:53;dmagda;[~alpert], thanks for the contribution! I've reviewed and merged your changes into the master.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InterruptException for segmentation issues,IGNITE-2688,12940443,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,dmagda,skozlov,skozlov,19/Feb/16 09:26,20/Apr/16 14:54,14/Jul/23 06:20,20/Apr/16 14:54,,,,,,,,,,0,,,,"We're still seeing following exception for  segmentation issues:
{noformat}
[18:16:31,566][WARNING][tcp-disco-msg-worker-#2%null%][TcpDiscoverySpi] Node is out of topology (probably, due to short-time network problems).
[18:16:31,566][WARNING][disco-event-worker-#46%null%][GridDiscoveryManager] Local node SEGMENTED: TcpDiscoveryNode [id=19cf4b0f-d520-4915-be9f-813a99f945a5, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.22.222.44, 192.168.1.117], sockAddrs=[work-pc/172.22.222.44:47501, /0:0:0:0:0:0:0:1:47501, /172.22.222.44:47501, /127.0.0.1:47501, /172.22.222.44:47501, /192.168.1.117:47501], discPort=47501, order=4, intOrder=4, lastExchangeTime=1455808591566, loc=true, ver=1.6.0#19700101-sha1:00000000, isClient=false]
[18:16:31,629][SEVERE][tcp-disco-msg-worker-#2%null%][TcpDiscoverySpi] TcpDiscoverSpi's message worker thread failed abnormally. Stopping the node in order to prevent cluster wide instability.
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2017)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2095)
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:519)
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:682)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:5786)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2160)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
[18:16:31,851][WARNING][sys-#22%null%][GridDhtAtomicCache] <cache_fad03851_2_08519933018899859> Failed to send near update reply to node because it left grid: fad03851-2077-4b50-92b3-00ec6d85fa39
[18:16:31,866][WARNING][disco-event-worker-#46%null%][GridDiscoveryManager] Stopping local node according to configured segmentation policy.
{noformat}",,dmagda,neilwightman,sboikov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 20 14:54:09 UTC 2016,,,,,,,,,,"0|i2t1wf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Mar/16 08:09;neilwightman;Were getting the exact same issue when using data streamers.   Both nodes (we're only runnning 2) are up but it appears a GC causes them to timeout after over 10 seconds.

{code}
08:41:43.640 [tcp-disco-msg-worker-#2%metrics-store%] WARN  org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi - Node is out of topology (probably, due to short-time network problems).
08:41:43.641 [disco-event-worker-#44%metrics-store%] WARN  org.apache.ignite.internal.managers.discovery.GridDiscoveryManager - Local node SEGMENTED: TcpDiscoveryNode [id=a435652b-babd-41f0-96b9-33822965b779, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 192.168.0.230], sockAddrs=[int00e6/192.168.0.230:47500, /0:0:0:0:0:0:0:1%lo:47500, /127.0.0.1:47500, /192.168.0.230:47500], discPort=47500, order=12, intOrder=7, lastExchangeTime=1456990903638, loc=true, ver=1.5.0#20151229-sha1:f1f8cda2, isClient=false]
08:41:43.698 [tcp-disco-msg-worker-#2%metrics-store%] ERROR org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi - TcpDiscoverSpi's message worker thread failed abnormally. Stopping the node in order to prevent cluster wide instability.
java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:522)
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:684)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:5779)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2161)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
08:41:44.003 [pub-#1%metrics-store%] ERROR org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor - Failed to respond to node [nodeId=313b89e1-26f0-4208-9888-f2e361e2c275, res=DataStreamerResponse [reqId=335, forceLocDep=true]]
org.apache.ignite.IgniteCheckedException: Failed to send message (node may have left the grid or TCP connection cannot be established due to firewall issues) [node=TcpDiscoveryNode [id=313b89e1-26f0-4208-9888-f2e361e2c275, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 192.168.0.229], sockAddrs=[int00e5/192.168.0.229:47500, /0:0:0:0:0:0:0:1%lo:47500, /127.0.0.1:47500, /192.168.0.229:47500], discPort=47500, order=8, intOrder=5, lastExchangeTime=1456990534913, loc=false, ver=1.5.0#20151229-sha1:f1f8cda2, isClient=false], topic=T1 [topic=TOPIC_DATASTREAM, id=e9b5f083351-313b89e1-26f0-4208-9888-f2e361e2c275], msg=DataStreamerResponse [reqId=335, forceLocDep=true], policy=0]
	at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1082)
	at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1134)
	at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1104)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.sendResponse(DataStreamProcessor.java:342)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.processRequest(DataStreamProcessor.java:312)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor.access$000(DataStreamProcessor.java:49)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamProcessor$1.onMessage(DataStreamProcessor.java:79)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:821)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:784)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ignite.spi.IgniteSpiException: Failed to send message to remote node: TcpDiscoveryNode [id=313b89e1-26f0-4208-9888-f2e361e2c275, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 192.168.0.229], sockAddrs=[int00e5/192.168.0.229:47500, /0:0:0:0:0:0:0:1%lo:47500, /127.0.0.1:47500, /192.168.0.229:47500], discPort=47500, order=8, intOrder=5, lastExchangeTime=1456990534913, loc=false, ver=1.5.0#20151229-sha1:f1f8cda2, isClient=false]
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage0(TcpCommunicationSpi.java:1959)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage(TcpCommunicationSpi.java:1899)
	at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1077)
	... 12 common frames omitted
Caused by: org.apache.ignite.IgniteCheckedException: Failed to connect to node (is node still alive?). Make sure that each GridComputeTask and GridCacheTransaction has a timeout set in order to prevent parties from waiting forever in case of network issues [nodeId=313b89e1-26f0-4208-9888-f2e361e2c275, addrs=[int00e5/192.168.0.229:47100, /0:0:0:0:0:0:0:1%lo:47100, /127.0.0.1:47100]]
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:2462)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createNioClient(TcpCommunicationSpi.java:2103)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.reserveClient(TcpCommunicationSpi.java:1997)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage0(TcpCommunicationSpi.java:1933)
	... 14 common frames omitted
	Suppressed: org.apache.ignite.IgniteCheckedException: Failed to connect to address: int00e5/192.168.0.229:47100
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:2467)
		... 17 common frames omitted
	Caused by: org.apache.ignite.IgniteCheckedException: Failed to read remote node recovery handshake (connection closed).
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.safeHandshake(TcpCommunicationSpi.java:2672)
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:2334)
		... 17 common frames omitted
	Suppressed: org.apache.ignite.IgniteCheckedException: Failed to connect to address: /0:0:0:0:0:0:0:1%lo:47100
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:2467)
		... 17 common frames omitted
	Caused by: org.apache.ignite.IgniteCheckedException: Remote node ID is not as expected [expected=313b89e1-26f0-4208-9888-f2e361e2c275, rcvd=a435652b-babd-41f0-96b9-33822965b779]
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.safeHandshake(TcpCommunicationSpi.java:2577)
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:2334)
		... 17 common frames omitted
	Suppressed: org.apache.ignite.IgniteCheckedException: Failed to connect to address: /127.0.0.1:47100
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:2467)
		... 17 common frames omitted
	Caused by: org.apache.ignite.IgniteCheckedException: Remote node ID is not as expected [expected=313b89e1-26f0-4208-9888-f2e361e2c275, rcvd=a435652b-babd-41f0-96b9-33822965b779]
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.safeHandshake(TcpCommunicationSpi.java:2577)
		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:2334)
		... 17 common frames omitted
{code}

I think the defaults should more resilient to GC pauses.  This happened after many hours of ignite running fine.;;;","04/Mar/16 05:52;dmagda;This issue described in this ticket is not a reason of the problem that is observed on your side. The fix for this issue will simplycheck that a node is not stopping due to the segmentation and will avoid printing the error below if the node is segmented

{noformat}
[18:16:31,629][SEVERE][tcp-disco-msg-worker-#2%null%][TcpDiscoverySpi] TcpDiscoverSpi's message worker thread failed abnormally. Stopping the node in order to prevent cluster wide instability.
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2017)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2095)
	at java.util.concurrent.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:519)
	at java.util.concurrent.LinkedBlockingDeque.poll(LinkedBlockingDeque.java:682)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:5786)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2160)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{noformat}

In your case you should check a reason of long GC pauses and probably fix it or tune VM by increasing heap size or setting specific GC parameters [1]
In addition you may want to increase generic IgniteConfiguration.failureDetectionTimeout on all the nodes setting it to a value bigger than GC pauses.

[1] https://apacheignite.readme.io/docs/performance-tips#tune-garbage-collection;;;","01/Apr/16 06:08;dmagda;As a simple solution we can just ignore {{InterruptedException}} and not printing out the stack trace for it.;;;","15/Apr/16 21:05;dmagda;When segmentation happens the SPI is moved into {{DISCONNECTING}} state before the worker threads gets interrupted. The fix for the bug takes {{DISCONNECTING}} state into account as well avoiding printing the error from the description and stopping the node in case if the node in this state.

Checking fix with TC.;;;","17/Apr/16 04:35;dmagda;TC looks good. [~yzhdanov] or [~sboikov] please review the changes incorporated in IGNITE-2688 branch.;;;","18/Apr/16 11:02;sboikov;Hi Denis,

Fix looks good, but I do not like idea of introducing special 'stoppedAbnormally' field and related method just for testing. I think test can check nodes log for 'failed abnormally' message (you can use GridStringLogger for this).;;;","20/Apr/16 14:54;dmagda;Thanks Sam for pointing out to {{GridStringLogger}}. Reworked the tests using it and removed {{stoppedAbnormally}} field.

Merged the changes into the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataStreamer doesn't stream BinaryObjects created with BinaryBuilder,IGNITE-2684,12940150,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,dmagda,dmagda,dmagda,18/Feb/16 13:33,19/Feb/16 07:20,14/Jul/23 06:20,19/Feb/16 07:20,1.5.0.final,,,1.6,,,,,,0,,,,"If to create a {{BinaryObject}} using a type name of non existed class and start streaming it then nothing will be streamed because the streamer will try to deserialize binary objects and fill fail.

In general it's not to have classes for {{BinaryObjects}} at all and work with them with {{BinaryBuilder}} always. Thus this bug has to be fixed.",,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 19 07:20:27 UTC 2016,,,,,,,,,,"0|i2t03b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Feb/16 13:33;dmagda;Fixed. Checking with TC.;;;","19/Feb/16 07:20;dmagda;Reviewed by Alex G. over the dev list. Merged to the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassLoader set in IgniteConfiguration is not always used,IGNITE-2683,12940077,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,sboikov,sboikov,18/Feb/16 06:43,25/Feb/16 10:39,14/Jul/23 06:20,24/Feb/16 15:21,1.5.0.final,,,1.6,general,,,,,0,,,,"Now classloader set in IgniteConfiguration is not always passed to marshaller. Need review all placess where  Marshaller.unmarshal(InputStream in, @Nullable ClassLoader clsLdr) and Marshaller.unmarshal(byte[] arr, @Nullable ClassLoader clsLdr) are called.",,avinogradov,avk47,dmagda,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 24 15:21:53 UTC 2016,,,,,,,,,,"0|i2szn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Feb/16 04:59;dmagda;Make sure to add the tests for {{IgniteMessaging.send()}}.

Presently a message created by user classloader and sent to a remote node won't be deserialized on the remote side.

{noformat}

""pub-#3%itest%@8023"" prio=5 tid=0x2f nid=NA runnable
java.lang.Thread.State: RUNNABLE
at org.apache.ignite.internal.util.IgniteUtils.forName(IgniteUtils.java:8179)
at org.apache.ignite.internal.MarshallerContextAdapter.getClass(MarshallerContextAdapter.java:185)
at org.apache.ignite.marshaller.optimized.OptimizedMarshallerUtils.classDescriptor(OptimizedMarshallerUtils.java:267)
at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:309)
at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365)
at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readFields(OptimizedObjectInputStream.java:482)
at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readSerializable(OptimizedObjectInputStream.java:570)
at org.apache.ignite.marshaller.optimized.OptimizedClassDescriptor.read(OptimizedClassDescriptor.java:808)
at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:315)
at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365)
at org.apache.ignite.marshaller.optimized.OptimizedMarshaller.unmarshal(OptimizedMarshaller.java:219)
at org.apache.ignite.internal.binary.BinaryUtils.doReadOptimized(BinaryUtils.java:1548)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1625)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.readField(BinaryReaderExImpl.java:1644)
at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:643)
at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:734)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1448)
at org.apache.ignite.internal.binary.GridBinaryMarshaller.deserialize(GridBinaryMarshaller.java:292)
at org.apache.ignite.internal.binary.BinaryMarshaller.unmarshal(BinaryMarshaller.java:112)
at org.apache.ignite.internal.managers.communication.GridIoManager$GridUserMessageListener.onMessage(GridIoManager.java:1992)
at org.apache.ignite.internal.managers.communication.GridIoManager$ArrayListener.onMessage(GridIoManager.java:1821)
at org.apache.ignite.internal.managers.communication.GridIoManager$GridCommunicationMessageSet.unwind(GridIoManager.java:2236)
at org.apache.ignite.internal.managers.communication.GridIoManager.unwindMessageSet(GridIoManager.java:1003)
at org.apache.ignite.internal.managers.communication.GridIoManager.access$1800(GridIoManager.java:103)
at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:972)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
{noformat};;;","24/Feb/16 15:21;avinogradov;merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Terminating running SQL queries,IGNITE-2680,12939897,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,dmagda,dmagda,17/Feb/16 19:11,09/Nov/16 21:17,14/Jul/23 06:20,09/Nov/16 19:19,1.5.0.final,,,1.8,,,,,,0,important,,,"If to start a long running SQL query over a huge cache will millions of entries there should be a way terminate it. Even if {{QueryCursor}} is closed the query won't be cancelled consuming available resources.

There should be a way to close a query having using an object that is related to it. Seems that ideally we can use {{QueryCursor.close()}} method for that;
",,anovikov,ascherbakov,dmagda,sergi,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 09 21:17:54 UTC 2016,,,,,,,,,,"0|i2syj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/May/16 16:11;vkulichenko;I think we also add an ability to cancel the query automatically after a configurable timeout.;;;","31/May/16 19:22;ascherbakov;Got it working even on killer query like join producing 100M records.
This is achieved by remotely calling PreparedStatement.cancel if an initator closes the query.
Planning to implement 3 ways to stop running distributed SQL queries:
1) At any time by calling query.close (working, needs more testing)
2) By settings timeout to SQL query using 
void setTimeout(long timeout, TimeUnit timeUnit)
3) Globally using H2 properties
jdbc:h2:~/db/test;query_timeout=10000
BTW, It should work without any code modifications, but I haven't chance to test it yet.;;;","01/Jun/16 19:39;ascherbakov;Added 3 tests for the first use case:
1) Query is cancelled during execution phase ( resultset is not ready yet )
2) Query is cancelled after completion
3) Query is cancelled while fetching pages to initiator node.

Working branch: https://github.com/ascherbakoff/ignite/tree/ignite-2680;;;","03/Jun/16 16:21;ascherbakov;Added code to terminate executing reduce query.
Refactored tests, added different cancellation timeouts.;;;","08/Jun/16 17:18;ascherbakov;Working on the test with the failing initiator node.;;;","09/Jun/16 20:21;ascherbakov;Stabilized test with failing initator node.;;;","10/Jun/16 16:25;ascherbakov;Manual and initiator failure cancellation is working, tests are passing locally.
Need to add tests for SqlFieldQuery.timeout() query property and schedule TC run.;;;","14/Jun/16 16:58;ascherbakov;It looks like everything in place.
Scheduled TC run.
PR: https://github.com/apache/ignite/pull/802;;;","15/Jun/16 16:06;ascherbakov;Fixed some tests and rescheduled TC run.;;;","16/Jun/16 20:21;ascherbakov;Tests are mostly passed.
Results are here:

http://149.202.210.143:8111/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F802%2Fhead.

Task summary:

* Added ability to cancel running distrbiuted query at any time.
by calling cursor.close from the other thread. This is implemented
by calling preparedStatement.cancel on every participating node.

* Added setTimeout property on SqlQuery and SqlFieldsQuery
to automatically close queries on timeout. This is implemented 
by setting setQueryTimeout value on preparedStatement

* Verified correct map queries cancellation on client node exit/failure.

* Added map queries cancellation on every unsuccessful attempt
in GridReduceQueryExecutor to ensure no resources are wasted.

I'm worried about two tests related to nodes restarting while running queries:

http://149.202.210.143:8111/viewLog.html?buildId=267499&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteBinaryObjectsQueries#testNameId-2100026406971913790

Still have to get to the bottom of this.

;;;","21/Jun/16 05:48;sergi;1. In GridQueryRequest fieldsCount() still returns 7.
2. Mess with time units: Jdbc requires seconds. Our public API javadoc does not even mention time units.
3. H2 does not have timeouts per statement, it will be set to the whole connection and must be reset in the end. So the whole idea of prepStmtReadyClo looks wrong to me.

I did not look further, lets fix these ones first.;;;","27/Jun/16 16:10;ascherbakov;1, 3 fixed.;;;","30/Jun/16 16:36;ascherbakov;2 fixed. Added TimeUnit argument to setTimeout
3.Implemented code for running SQL queries using RunnableFuture.
This way the query can be run synchronously on asynchronously with cancellation and timeout support.
TC is OK, waiting for review.;;;","12/Jul/16 08:29;sergi;First of all couple of notices on coding style

1. Stop making variable final and try to avoid changing code if no one asked you to do that.
2. Never use abbreviations on class and method name, this is strongly prohibited.

Overall I don't like your changes, for timeouts they are mostly wrong (see the correct way below), for cancellation i don't like RunnableFuture because it makes me think that queries will run in some separate threads, but it would be wrong, so I'd prefer to avoid confusing staff like this.
Please rollback everything that you did in IgniteH2Indexing, MapQueryExecutor, ReduceQueryExecutor and do the following instead:

For query timeouts:
1. In method IgniteH2Indexing.executeSqlQuery pass timeout.
2. Cast Connection to H2 JdbcConnection and get Session from there.
3. Before stmt.execute() if we have a timeout do session.setQueryTimeout(timeout) - It accepts timeout in milliseconds.
4. In finally block after the statement execution clear the query timeout by session.setQueryTimeout(0);
5. If method accepts time unit, it must have checks that argument is valid. For example if we don't support precision higher than milliseconds, than we have to check that argument is positive and is no less than 1 ms. Also describe these restrictions in javadocs for all methods (for getters as well).

For query cancellation:
1. Pass additional parameter AtomicReference<GridAbsClosure> cancel
for local queries IgniteH2Indexing.executeSqlQuery(...) and all the way up;
for distributed queries to GridReduceQueryExecutor.query(...) and all the way up;
2. For local queries wrap PreparedStatement.cancel() into GridAbsClosure and try to CAS to this ref, if it does not succeed just throw cancellation exception right away.
For distributed queries you need to put all the needed resources to send cancel requests to all the parties and cancel reduce query the same way as local one.
3. QueryCursorImpl.close() must have this reference and attempt to get cancel closure from it and CAS it to no-op constant and if succeeded call apply() on that cancel closure.

I think once you'll implement this cancellation for local queries, it will be obvious how to compose these cancellation refs for distributed queries.;;;","22/Jul/16 19:33;ascherbakov;Review changes are almost ready.;;;","09/Nov/16 19:19;ascherbakov;Resolved, merged to master.;;;","09/Nov/16 21:17;dmagda;[~ascherbakov], could update SQL readme.io documentation [1] by including information about the feature I've just implemented? 

[1] https://apacheignite.readme.io/docs/sql-queries;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
JNI Interop: Configuration-related methods use incorrect pointer type,IGNITE-2678,12939859,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,17/Feb/16 16:02,17/Feb/16 16:06,14/Jul/23 06:20,17/Feb/16 16:06,1.6,,,1.6,platforms,,,,,0,,,,"""long"" is used instead of ""long long"" in multiple places",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-02-17 16:02:48.0,,,,,,,,,,"0|i2syan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ignite-benchmarks.jar should not be included into build.,IGNITE-2672,12939741,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,vozerov,vozerov,17/Feb/16 08:52,17/Feb/16 12:26,14/Jul/23 06:20,17/Feb/16 12:26,1.5.0.final,,,1.6,build,,,,,0,,,,"This project is for intenrnal testing only, so no need to include it into resulting binaries.",,avinogradov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 17 12:26:45 UTC 2016,,,,,,,,,,"0|i2sxkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Feb/16 12:26;avinogradov;fixed at master.
bencmarks profile should be used to activate benchmarks module.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCache.replace() returns false instead of true when there is only one node,IGNITE-2669,12939641,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,vkulichenko,vkulichenko,16/Feb/16 22:31,17/Feb/16 12:07,14/Jul/23 06:20,17/Feb/16 12:07,,,,1.6,cache,,,,,0,customer,,,Test attached.,,avk47,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/16 22:32;vkulichenko;ReplaceTest.java;https://issues.apache.org/jira/secure/attachment/12788123/ReplaceTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Wed Feb 17 12:07:12 UTC 2016,,,,,,,,,,"0|i2swyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Feb/16 08:19;sboikov;This is issue with enums handling with BinaryMarshaller: when value if prepared to be stored in cache it is handled as 'primitive' type (see CacheObjectBinaryProcessorImpl.marshalToBinary, BinaryUtils.isBinaryType returns 'true' for enum) on the other side after enum value unmarshalling BinaryEnumObjectImpl is created. I think enums always should be handled in the same way, so 'CacheObjectBinaryProcessorImpl.marshalToBinary' should also createBinaryEnumObjectImpl.;;;","17/Feb/16 12:07;sboikov;Fixed in master (commit 8be62f0).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MBean creation fails if cache name contains ':' character,IGNITE-2668,12939634,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,vkulichenko,vkulichenko,16/Feb/16 22:04,14/Apr/16 09:44,14/Jul/23 06:20,04/Apr/16 19:45,,,,1.6,general,,,,,0,community,,,"If someone tries to start a cache with ':' in the name, it will fail with the exception:

{noformat}
2016-02-16T17:53:56.570+0000 [exchange-worker-#83%SensorIQ%] ERROR GridDhtPartitionsExchangeFuture [] - Failed to reinitialize local partitions 
(preloading will be stopped): GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=1, minorTopVer=1], nodeId=1afff13b, evt=DISCOVE
RY_CUSTOM_EVT]
org.apache.ignite.IgniteCheckedException: Failed to register MBean for component: org.apache.ignite.internal.processors.cache.CacheMetricsMXBean
Impl@4a9488fe
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.registerMbean(GridCacheProcessor.java:3313) ~[ignite-core-1.5.6.jar!/:
1.5.6]
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.createCache(GridCacheProcessor.java:1482) ~[ignite-core-1.5.6.jar!/:1.
5.6]
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.prepareCacheStart(GridCacheProcessor.java:1629) ~[ignite-core-1.5.6.ja
r!/:1.5.6]
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.prepareCachesStart(GridCacheProcessor.java:1554) ~[ignite-core-1.5.6.j
ar!/:1.5.6]
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.startCaches(GridDhtPartitionsEx
changeFuture.java:960) ~[ignite-core-1.5.6.jar!/:1.5.6]
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeF
uture.java:523) ~[ignite-core-1.5.6.jar!/:1.5.6]
        at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.j
ava:1297) [ignite-core-1.5.6.jar!/:1.5.6]
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110) [ignite-core-1.5.6.jar!/:1.5.6]
        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_31]
Caused by: javax.management.MalformedObjectNameException: Invalid character ':' in value part of property
        at javax.management.ObjectName.construct(ObjectName.java:618) ~[na:1.8.0_31]
        at javax.management.ObjectName.<init>(ObjectName.java:1382) ~[na:1.8.0_31]
        at org.apache.ignite.internal.util.IgniteUtils.makeCacheMBeanName(IgniteUtils.java:4280) ~[ignite-core-1.5.6.jar!/:1.5.6]
        at org.apache.ignite.internal.util.IgniteUtils.registerCacheMBean(IgniteUtils.java:4356) ~[ignite-core-1.5.6.jar!/:1.5.6]
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.registerMbean(GridCacheProcessor.java:3309) ~[ignite-core-1.5.6.jar!/:1.5.6]
        ... 8 common frames omitted
{noformat}

User list thread: http://apache-ignite-users.70518.x6.nabble.com/Exception-on-cluster-start-after-upgrading-to-GridGain-Community-Edition-td3035.html",,dmagda,githubbot,v.pyatkov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Apr 14 09:44:04 UTC 2016,,,,,,,,,,"0|i2swwv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Mar/16 13:29;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/588

    IGNITE-2668

    MBean creation fails if cache name contains ':' character
    Write attribute, which contains cache name, in quote

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-2668

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/588.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #588
    
----
commit 05d41a980b4d4632be318e5cfa5a0bf8820aaadd
Author: vdpyatkov <vpyatkov@gridgain.com>
Date:   2016-03-30T13:23:00Z

    IGNITE-2668
    MBean creation fails if cache name contains ':' character
    Write attribute, which contains cache name, in quote

----
;;;","31/Mar/16 14:48;v.pyatkov;Add quotation to group (the attribute contains cache name) attribute in MBean class name;;;","01/Apr/16 04:38;dmagda;[~v.pyatkov], thanks for the contribution!

However I don't think that we need to wrap a cache's name with quotes all the time. Please improve your fix and add quotes to the cache name only if an illegal symbol (in terms of MBeans) presents. You can use a regexp for that.
The rest looks good to me.

After you've improved the fix please re-run only IgniteCacheTestSuite on TC.;;;","01/Apr/16 11:40;v.pyatkov;I add some changes and pass IgniteCacheTestSuite. Now attribute was quoted if it definitely need.
Please, review these changes again.;;;","01/Apr/16 13:03;dmagda;Thanks Vlad. I'll review your changes in a couple of days and merge them if everything is ok.;;;","04/Apr/16 19:45;dmagda;Reviewed and merged to the master.;;;","14/Apr/16 09:44;githubbot;Github user vldpyatkov closed the pull request at:

    https://github.com/apache/ignite/pull/588
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow to start caches in PRIVATE and ISOLATED deployment modes when BinaryMarshaller is used,IGNITE-2667,12939621,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,dmagda,dmagda,16/Feb/16 21:20,02/Jun/16 06:58,14/Jul/23 06:20,25/May/16 05:35,1.5.0.final,,,1.7,,,,,,0,community,,,"Refer to this discussion for details:

http://apache-ignite-developers.2346864.n4.nabble.com/Fwd-Distributed-queue-problem-with-peerClassLoading-enabled-td4521.html",,dmagda,githubbot,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/16 12:09;dmagda;modification.patch;https://issues.apache.org/jira/secure/attachment/12804638/modification.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 02 06:58:36 UTC 2016,,,,,,,,,,"0|i2swtz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/16 07:22;v.pyatkov;Attaching the link to pool request https://github.com/apache/ignite/pull/718;;;","17/May/16 07:24;v.pyatkov;I added possibility to create cache with Isolation and Private deployment mode.
Please, review my patch.;;;","18/May/16 12:08;dmagda;Vlad, I've reviewed and done a couple of modifications in the test. Please see attached modification.patch.

Update your branch with the latest changes from master, apply the patch and re-run tests on TC.;;;","19/May/16 08:00;v.pyatkov;Thank for review, but the patch contains my and your differences jointly. It do not allow merge patch to my branch automatically.
I will consume time to merge.;;;","19/May/16 08:55;githubbot;Github user vldpyatkov closed the pull request at:

    https://github.com/apache/ignite/pull/718
;;;","19/May/16 08:58;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/732

    IGNITE-2667

    Allow to start caches in PRIVATE and ISOLATED deployment modes when BinaryMarshaller is used

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-2667

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/732.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #732
    
----
commit 3d31646fe472d21a84243ea30784ac62e8e17e67
Author: vdpyatkov <vpyatkov@gridgain.com>
Date:   2016-05-19T08:54:33Z

    IGNITE-2667
    Allow to start caches in PRIVATE and ISOLATED deployment modes when BinaryMarshaller is used

----
;;;","19/May/16 09:05;v.pyatkov;I applied the patch and made new pull request.
Can you please review it after run TC tests?;;;","25/May/16 05:35;dmagda;Reviewed and merged, thanks.;;;","02/Jun/16 06:58;githubbot;Github user vldpyatkov closed the pull request at:

    https://github.com/apache/ignite/pull/732
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AffinityFunction: primary and backup copies in different locations,IGNITE-2655,12939420,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,v.pyatkov,dmagda,dmagda,16/Feb/16 07:06,03/Jun/16 08:29,14/Jul/23 06:20,02/Jun/16 13:37,,,,1.7,,,,,,0,important,,,"There is a use case when primary and backup copies have to be located in different racks, building, cities, etc.

A simple scenario is the following. When nodes are started they will have either ""rack1"" or ""rack2"" value in their attributes list and we will enforce that the backups won't be selected among the nodes with the same attribute.
It should be possible to filter out backups using IP addresses as well.

Presently rendezvous and fair affinity function has {{backupFilter}} that will work perfectly for the scenario above but only for cases when number of backups for a cache is equal to 1.

In case when the number of backups is bigger than one {{backupFilter}} will only guarantee that the primary is located in different location but will NOT guarantee that all the backups are spread out across different locations as well.

So we need to provide an API that will allow to spread the primary and ALL backups copies across different locations.

The proposal is to introduce {{AffinityBackupFilter}} with the following method
{{AffinityBackupFilter.isAssignable(Node n, List<Node> assigned)}}

Where n - potential backup to check, assigned - list of current partition holders, 1st is primary

{{AffinityBackupFilter}} will be set using {{affinity.setAffinityBackupFilter}}.
{{Affinity.setBackupFilter}} has to be deprecated.",,dmagda,dsetrakyan,githubbot,v.pyatkov,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 03 08:29:34 UTC 2016,,,,,,,,,,"0|i2svlj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/16 07:21;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/731

    IGNITE-2655

    AffinityFunction: primary and backup copies in different locations
    Add affinity backup filter to FairAffinityFunction and RendezvousAffinityFunction

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-2655

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/731.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #731
    
----
commit a3276ab8210a41495dca1f7f1c50db4036bd1afa
Author: vdpyatkov <vpyatkov@gridgain.com>
Date:   2016-05-19T07:19:05Z

    IGNITE-2655
    AffinityFunction: primary and backup copies in different locations
    Add affinity backup filter to FairAffinityFunction and RendezvousAffinityFunction

----
;;;","19/May/16 07:40;v.pyatkov;Added new backup filter in FairAffinityFunction and RendezvouseAffinityFunction.
Could anyone review?;;;","25/May/16 10:58;dmagda;Vlad, thanks for the contribution.

Please see my comment in the pull-request which are related to:
- documentation modifications;
- improper implementation for {{FairAffinityFunction}}.

Also please do the following:
- add tests that will set two backups for a cache and primary, 1st backup and 2nd backup has to be located in different groups;
- don't add additional test suite, add your tests into existed {{AffinityFunctionBackupFilterAbstractSelfTest}}.;;;","25/May/16 16:15;v.pyatkov;Thank you for your comment. I added all needed changes.
Could you please review it?;;;","26/May/16 09:52;dmagda;Vlad, looks good to me. Please do final minor modifications left in the pull-request and update the latest.

[~yzhdanov] please do final technical review.

[~dsetrakyan] please review change in the public API at the level of rendezvous and fair affinity function.;;;","31/May/16 08:14;v.pyatkov;Small description of my changes:
Added {{AffinityBackupFilter}} for {{FairAffinityFunction}} and {{RendezvousAffinityFunction}} (The method is {{setAffinityBackupFilter(...)}}).

The Interface for affinity backup filter is
{{public boolean apply (Node n, List <Node> assigned)}}
Where
n - potential backup to check
assignd -  list of current partition holders (for RendezvousAffinityFunction first node in the list is primary)
result - if can assign true, false another.

Use as follows:
{code}
RendezvousAffinityFunction aff = new RendezvousAffinityFunction(false);
aff.setAffinityBackupFilter(new IgniteBiPredicate<ClusterNode, List<ClusterNode>>() {
	@Override public boolean apply(ClusterNode node, List<ClusterNode> nodes) {
		return false;
    }
});
{code}

Old method setBackupFilter marked as Deprecated.
;;;","31/May/16 08:26;dsetrakyan;What is the 1st node in the list for the {{FairAffinityFunction}}? Is it not the primary node as well?;;;","31/May/16 08:36;v.pyatkov;[~dsetrakyan] No, in the case when the function ({{FairAffinityFunction}}) moves the primary partition:
n - candidate for primary
assignd - only backups;;;","31/May/16 09:32;dsetrakyan;Then I do not understand. Are you saying that we will have a method called {{setAffinityBackupFilter(...)}}, but in case of {{FairAffinityFunction}} it will be checking the primary node and not the backup?;;;","31/May/16 11:23;dmagda;Dmitriy, it means that in case of {{FairAffinityFunction}} the method can check both the primary and the backup against already assigned nodes. The already assigned nodes may or may not contain the primary.

Vlad, I think that we can preserve the same semantic and behavior at the level of {{FairAffinictyFunction}} if do the following at the implementation level:
- if {{tier=0}} is checked (primary) then we prepare new assignments list that will have the primary, that is being checked, first in the list and the rest of the nodes will be the nodes that are already assigned (backups);
- after that we're iterating over a sublist calling {{affinityBackupFilter.apply(...)}} for every backup from the list with assignments. During the iteration if we get {{false}} for at least backup then it means that the primary is non assignable.

Such implementation will help us to preserve the same semantic as {{RendezvousAffinityFunction}} has
n - potential backup to check
assigned - list of current partition holders (first node in the list is primary);;;","31/May/16 15:59;v.pyatkov;I fixed AffinityBackupFilter incorrect behavior (in {{FairAffinictyFunction}}).
Denis, please, review last change.;;;","31/May/16 23:31;yzhdanov;[~dmagda] [~v.pyatkov]

Couple of comments:
# Can you please think over this signature for predicate? apply(int n, Node n, List<Node> assigned)
# If predicate is called with empty list then primary node for this partition is examined. 
# Or we can assign primary always on our own and call predicate only for backups (which I would prefer). If someone needs full control, then he always have an opportunity to implement affinity function on his own.

As I side note I would say that we are trying to force our users to do some programming. Does anyone have any idea on how to do this without code? How about supporting simple string expressions based on node attributes and/or ip addresses? 
;;;","31/May/16 23:57;dsetrakyan;I am not sure I follow the proposed changes, but I still would like to see the final API here, if it has changed. I also strongly believe that the behavior of this backup-filter should not be different as we move from one affinity function to another.;;;","01/Jun/16 13:35;dmagda;[~v.pyatkov], I've reviewed your latest changes. Please see my comments in the pull-request. In short the code can fail or work improperly.

[~yzhdanov], I would use this predicate for backups only, leaving method's signature as is, considering that the primary is chosen by affinity function before. As you said if someone needs to control the location of primary he can write his own affinity function and most likely he will because ""partition number"" passed to the filter says nothing in regards to where this partition is physically located.

>> As I side note I would say that we are trying to force our users to do some programming. Does anyone have any idea on how to do this without code? How about supporting simple string expressions based on node attributes and/or ip addresses?

Presently I would fully rely on the programmable way because it's flexible and covers all the cases. If there is a demand for the thing you're talking about we can add an overloaded method that will except a kind of predicate.

[~dsetrakyan], presently the API is left the same for all the supported affinity function:
{{public void setAffinityBackupFilter(@Nullable IgniteBiPredicate<ClusterNode, List<ClusterNode>> affinityBackupFilter)}} 

where

the first parameter (ClusterNode) is a node being tested and the second list contains nodes that are already assigned for a partition (primary is always the first).;;;","02/Jun/16 13:37;dmagda;Merged the changes. Vlad thanks for the contribution.;;;","03/Jun/16 08:29;githubbot;Github user vldpyatkov closed the pull request at:

    https://github.com/apache/ignite/pull/731
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: The throwing version of the QueryFieldsRow::GetNext() can't be used.,IGNITE-2652,12939265,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,isapego,isapego,15/Feb/16 12:52,17/Feb/16 09:44,14/Jul/23 06:20,17/Feb/16 09:44,1.5.0.final,,,1.6,platforms,,,,,0,,,,"Method {{QueryFieldsRow::GetNext()}} can't be used as it has error in it's body. Basically, any code that uses this method will fail to compile. Need to fix it and add test with this method.",,githubbot,isapego,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 17 09:44:42 UTC 2016,,,,,,,,,,"0|i2suo7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/16 13:12;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/483

    IGNITE-2652: Fix for the QueryFieldsRow::GetNext.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-2652

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/483.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #483
    
----
commit 555b242317c770136d93a0ccc95335d4e1146781
Author: isapego <isapego@gridgain.com>
Date:   2016-02-15T13:09:53Z

    IGNITE-2652: Fix for the QueryFieldsRow::GetNext.

----
;;;","15/Feb/16 13:12;isapego;Fixed.;;;","17/Feb/16 09:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/483
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite should throw an exception on start of dynamic cache with swap if Ignite uses NoopSwapSpaceSpi,IGNITE-2650,12939263,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ruskim,ashutak,ashutak,15/Feb/16 12:43,29/Apr/19 17:49,14/Jul/23 06:20,01/Mar/16 09:19,1.6,,,1.6,,,,,,0,newbie,,,Ignite should throw an exception on start of dynamic cache with enabled swap if Ignite uses NoopSwapSpaceSpi.,,ashutak,avinogradov,githubbot,ruskim,,,,,,,,,"dspavlov commented on issue #502: fix IGNITE-2650
URL: https://github.com/apache/ignite/pull/502#issuecomment-487678069
 
 
   https://issues.apache.org/jira/browse/IGNITE-2650 was merged, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/19 17:49;githubbot;600","dspavlov commented on pull request #502: fix IGNITE-2650
URL: https://github.com/apache/ignite/pull/502
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/19 17:49;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 01 09:16:24 UTC 2016,,,,,,,,,,"0|i2sunr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Feb/16 12:40;githubbot;GitHub user ruskim opened a pull request:

    https://github.com/apache/ignite/pull/502

    fix IGNITE-2650

    - Added checkClient to to IgniteSpiConsistencyChecked annotation with default value true.
    If it's false, than spi consistency will not be checked for client nodes.
    
    - Added IgniteSpiConsistencyChecked to NoopSwapSpaceSpi and FileSwapSpaceSpi. That guaranties, that all nodes in grid will have the same swap space provider. Client nodes ignore this check, because clients don't have any data.
    
    - Cache with swap creation will fail, if nodes in grid have NoopSwapSpaceSpi 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ruskim/ignite ignite-2650

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/502.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #502
    
----
commit 4b7996ad92d452ecd0ff11e1181754e712009da0
Author: ruskim <ruskim@gmail.com>
Date:   2016-02-19T12:26:37Z

    fix IGNITE-2650

----
;;;","20/Feb/16 08:50;ruskim;Hello.

Patch for review is available. All cache tests passed, except ""Ignite Binary Objects Cache 3"". But looks like it's broken now.;;;","01/Mar/16 08:59;avinogradov;Konstantin, 

Looks good to me, I've fixed minor codestyle issues and added couple of tests.
Please review my changes and I'll merge them to master.
https://github.com/apache/ignite/pull/526;;;","01/Mar/16 09:05;ruskim;Anton,

your changes are ok, thank you. Please, merge them to master. ;;;","01/Mar/16 09:16;avinogradov;Merged,
Thanks for contribution.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignition.localIgnite() unreliable under Gateways and cause wrong components deserialization.,IGNITE-2649,12939243,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vershov,vershov,15/Feb/16 10:46,13/Sep/16 09:09,14/Jul/23 06:20,29/Aug/16 07:42,1.5.0.final,,,1.8,general,,,,,0,1.6,community,,"We can get something like this:
{noformat}
java.lang.IllegalArgumentException: This method should be accessed under org.apache.ignite.thread.IgniteThread
at org.apache.ignite.internal.IgnitionEx.localIgnite(IgnitionEx.java:1252)
at org.apache.ignite.Ignition.localIgnite(Ignition.java:531)
at org.project.MyPojo.readResolve(MyPojo.java:123)
at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:746)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1448)
at org.apache.ignite.internal.binary.BinaryUtils.doReadObject(BinaryUtils.java:1564)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.readObject(BinaryReaderExImpl.java:1086)
at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.readFixedType(BinaryFieldAccessor.java:827)
at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:643)
at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:734)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1448)
at org.apache.ignite.internal.binary.BinaryUtils.doReadObject(BinaryUtils.java:1564)
at org.apache.ignite.internal.binary.BinaryUtils.deserializeOrUnmarshal(BinaryUtils.java:1908)
at org.apache.ignite.internal.binary.BinaryUtils.doReadMap(BinaryUtils.java:1892)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1595)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.readField(BinaryReaderExImpl.java:1644)
at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read(BinaryFieldAccessor.java:643)
at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:734)
at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1448)
at org.apache.ignite.internal.binary.BinaryObjectImpl.deserializeValue(BinaryObjectImpl.java:537)
at org.apache.ignite.internal.binary.BinaryObjectImpl.value(BinaryObjectImpl.java:117)
at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinary(CacheObjectContext.java:257)
at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinaryIfNeeded(CacheObjectContext.java:148)
at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinaryIfNeeded(CacheObjectContext.java:135)
at org.apache.ignite.internal.processors.cache.GridCacheContext.unwrapBinaryIfNeeded(GridCacheContext.java:1757)
at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.setResult(GridPartitionedSingleGetFuture.java:629)
at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.localGet(GridPartitionedSingleGetFuture.java:421)
at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.mapKeyToNode(GridPartitionedSingleGetFuture.java:337)
at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.map(GridPartitionedSingleGetFuture.java:204)
at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.init(GridPartitionedSingleGetFuture.java:196)
at org.apache.ignite.internal.processors.cache.distributed.dht.colocated.GridDhtColocatedCache.getAsync(GridDhtColocatedCache.java:266)
at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:4774)
at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:4758)
at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:1391)
at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.get(IgniteCacheProxy.java:865)
{noformat}",,avk47,dkarachentsev,shahamit,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,IGNITE-10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Fri Aug 26 10:04:42 UTC 2016,,,,,,,,,,"0|i2sujb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/16 10:13;vozerov;Closing child tickets as we end up with a single PR anyways.;;;","09/Mar/16 10:14;vozerov;PR: https://github.com/apache/ignite/pull/492;;;","09/Mar/16 10:14;dkarachentsev;https://github.com/apache/ignite/pull/492;;;","19/Jul/16 13:25;shahamit;I'm facing an issue where I get the exception mentioned in the bug description but the failure appears only in case when ignite instance is not defined in the context where it is used & a CacheFileLocalStore is used. In the below code the issue appears when ignite instance is defined as a instance variable. Would it appear when @IgniteInstanceResource is used? Can someone confirm if this is the same issue being track by this jira and explain the root cause behind this issue? 

The code I am referring to is
{code:java}
public class LocalStoreTest implements Serializable {
    private Ignite ignite = IgniteConfigUtil.initializeIgniteInClientMode();

    public void testLocalStoreGridGainExample() {
        CacheConfiguration<Integer, Integer> ccfg = new CacheConfiguration<>();
        ccfg.setName(""Cache 1"");

        ccfg.setCacheStoreFactory(
                new Factory<CacheStore<Integer, Integer>>() {
                    @SuppressWarnings(""unchecked"")
                    @Override
                    public CacheStore<Integer, Integer> create() {
                        return new CacheFileLocalStore();
                    }
                });

//        try (Ignite ignite = IgniteConfigUtil.initializeIgniteInClientMode()) {
            IgniteCache<Integer, Integer> cache = ignite.getOrCreateCache(ccfg);

            System.out.println(""Putting values to cache..."");

            for (int i = 0; i < 20; i++)
                cache.put(i, i);
//        }

    }
}
{code}
;;;","01/Aug/16 07:12;vozerov;Dmitry,

Could you please resolve conflicts and re-assign back to me?;;;","24/Aug/16 14:01;vozerov;Review is in progress. Performed some cleanup and simplified logic a bit.;;;","26/Aug/16 10:04;vozerov;Finalized. Running tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache is undeployed even when BinaryMarshaller is used,IGNITE-2647,12938862,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,dmagda,dmagda,dmagda,12/Feb/16 17:54,19/Feb/16 04:34,14/Jul/23 06:20,19/Feb/16 04:33,1.5.0.final,,,1.6,cache,,,,,0,community,,,"Even when we use BinaryMarshaller a cache can be undeployed in SHARED (ISOLATED , PRIVATE) modes in the following case:

- start a remote server node;
- start a client node;
- create new cache from the client;
- send a compute job to the server that triggers loading a the job class from the client to server;
- stop the server;
- both the job class and the cache will be undeployed.",,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 19 04:34:23 UTC 2016,,,,,,,,,,"0|i2ss6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/16 21:06;dmagda;The issue is fixed. Validating the fix on TC.;;;","16/Feb/16 10:03;dmagda;Please review the changes located in branch ignite-2647.

TC looks good.;;;","19/Feb/16 04:34;dmagda;Reviewed by Alex G., comments provided on the dev list.
Merged to the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion error in ATOMIC cachce for invokeAll and cache store,IGNITE-2645,12938815,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ashutak,agoncharuk,agoncharuk,12/Feb/16 14:41,11/Apr/16 17:02,14/Jul/23 06:20,11/Apr/16 17:02,ignite-1.4,,,1.6,cache,,,,,2,community,,,"Assertion happens under the following conditions:
 * Cache is empty
 * Cache store contains non-null values for some keys
 * invokeAll is invoked for those keys

Update version is generated when update request reaches the primary node. Then, we need to read-through stored values (the cache is empty) and pass them to transformers. Since read-through changes entry version, subsequent update fails with an assertion because read-through version is generated later than update version.

The scenario when a read-through is implemented via a separate loop with innerGet() is possible only with invokeAll() because this is the only multi-key cache operation that requires the previous entry value.",,agoncharuk,ashutak,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/16 14:44;agoncharuk;EntryProcessorFails.java;https://issues.apache.org/jira/secure/attachment/12787666/EntryProcessorFails.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 11 17:02:32 UTC 2016,,,,,,,,,,"0|i2srw7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Feb/16 14:49;agoncharuk;I think we can pass the generated update version to innerGet(), so that this version is used for read-through. If read-through happened on innerGet(), but entry processor did not change the value, we still need to propagate the updated value to backups.;;;","23/Mar/16 17:54;ashutak;I cannot reproduce the issue with the attached test neither with 1.5.0 and with current master.

Do we have stack-trace or any other useful information?;;;","23/Mar/16 19:43;agoncharuk;Artem,

The issue reproduces for me both in master and in 1.5.0.final. Make sure you have assertions enabled while running the sample.;;;","24/Mar/16 08:39;ashutak;Alexey, thanks! It works now.;;;","28/Mar/16 18:32;githubbot;GitHub user ashutakGG opened a pull request:

    https://github.com/apache/ignite/pull/584

    IGNITE-2645 Assertion error in ATOMIC cachce for invokeAll and cache store

    Fix.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ashutakGG/incubator-ignite ignite-2645-invokeAll-cacheStore

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/584.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #584
    
----
commit 2e64d0d7cc51552fffc231cbc850cd615076fb85
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T06:31:58Z

    IGNITE-2258: IGFS: now default path modes could be optionally disabled using FileSystemConfiguration.isInitializeDefaultPathModes() property.

commit 4cd3b3dc2f1fa0f1a9cceb6bf544dd8fb505d7f5
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T09:52:00Z

    IGNITE-2258: Fixed type on getter/setter.

commit 5d58fcbf40fdb9114e4cbb32b72dd9bce7fa38ca
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-01-04T06:47:28Z

    IGNITE-2308: Fixed HadoopClassLoader dependency resolution. This closes #391.

commit 83a19179cee2bb15adc36c2265dd0a3c794b60bb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-04T08:14:58Z

    IGNITE-2218: Fixed a problem with native Hadoop libraries load. This closes #378.

commit 1d7fb5702fa33cf395e797161f3a86a9600921a7
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-05T06:59:31Z

    IGNITE-2206: Hadoop file system creation is now abstracted out using factory interface.

commit a12ec7d08573d5396654a5ba05bb7d873e4c2677
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-06T10:50:48Z

    1.5.2

commit 090a5de6a930c10a3a57a6e28c486fe5c87e028d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T12:50:39Z

    Minor fix.

commit c786820dda7f7cd1849c5593ac24ca9072945887
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-07T13:48:14Z

    IgniteHadoopIgfsSecondaryFileSystem.usrName field is renamed to ""userName"" to preserve backward compatibility.

commit 6ab4ce246316442fa4295f9941c372fea70c24ef
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T06:23:55Z

    IGNITE-2342: Set correct classlader before calling FileSystem.get().

commit 077ab1b3a77fdb1c2c2fd6360fc5b60fda6c50c3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:17:45Z

    IGNITE-2341: Improved warning message when BinaryMarshaller cannot be used. Also it is not shown when ""org.apache.ignite"" classes is in described situation.

commit 86c4816edfd0e983014f136ffc92cde28ec56cca
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:26:03Z

    IGNITE-2340: Improved error thrown when PROXY mode exists, but secondary file system is not IgniteHadoopIgfsSecondaryFileSystem.

commit fc48a8429a84ef6c87ed3225a218d7d3ae617e14
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:48:42Z

    Merge branch 'ignite-1.5.2' into ignite-1.5.3

commit 86740cefe212ed0f506d81056dd8e76de9a31e4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-08T09:32:11Z

    1.5.3-SNAPSHOT

commit 92229d2a6c6ef86772a62cb52b3aa07a55c99d89
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T05:56:34Z

    ignite-2359 Added locking for files used by MarshallerContextImpl. (cherry picked from commit 1d8c4e2)

commit 2e4ce585d5f54502c6511d3425b1cd5fbf0a7f4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-13T10:37:33Z

    1.5.4-SNAPSHOT

commit 6e5f9f0c7d4c86773b1f0cd5c5a673acb58c86c2
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-13T11:42:27Z

    Changed year to 2016 in Copyrights

commit 02dbcfd8ed2701a4f415c8871d0b8fd08bfa0583
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-01-13T13:47:32Z

    IGNITE-2365 - Notify policy if swap or offheap is enabled and rebalanced entry was not preloaded.
    IGNITE-2099 - Fixing custom collections.
    This closes #396

commit 86c2ba2a601e82b824cf17422683e5398a4d8c7d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T15:40:08Z

    ignite-2350 Pass update notifier flag in discovery data (all cluster nodes will have the same notifier status as first cluster node)
    (cherry picked from commit 7175a42)

commit e1a494df400fc37ca04e8d88d1cf20bca02607b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:16:33Z

    Renamed fields to change fields write order (to preserve backward compatibility).
    (cherry picked from commit 2a4adf5)

commit 09f978234b6062afa1e1658d5a6439365a856aca
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:42:44Z

    Merge remote-tracking branch 'origin/ignite-1.5.4' into ignite-1.5.4

commit 30043e7892d0b52dc851ce5ec79c7eb3b7cc44fb
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-14T13:02:50Z

    Added release notes

commit cc3db35925698f1670a8bf1c6a1830c0c9b51290
Author: vershov <vershov@gridgain.com>
Date:   2016-01-14T14:21:56Z

    IGNITE-2032 Unwind undeploys in preloader - Fixes #369.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit a5c85ca7749ae90af2e4a29e2162713b480e40fa
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes

commit 8f32a29c5a7b28b7e1173582f4c7cef5b6d73b27
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-15T11:00:29Z

    1.5.4-SNAPSHOT

commit 6482dc80bf9cdf7aa4f592d9266c6745211b1c4c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-15T12:15:02Z

    ignite-2386 Fixed DiscoverManager to do not increase minor topology version if exchange is not triggered.
    (cherry picked from commit d881417)

commit 4ba6574dfa8077f8de23c8c2663826f81c7fd187
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:15:04Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5e1f287dc83343945b0e47b83ee7724a8e)
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedGetFuture.java
    	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheStoreCollectionTest.java

commit 4b31f4e66c15003cee866a6e5660257346c16c1c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:05:37Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5)

commit 1cf14fcff58c51a628df6309f05be7f0b840d5f8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2015-12-30T10:51:32Z

    IGNITE-2228: .NET: Compute futures could be cancelled.

commit 2f292788cde807d5f1c80cf9fcb8b29cd4e5ee35
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-01-18T10:01:43Z

    IGNITE-2228: Platform compute futures cancellation support. This closes #394.

commit 1f5b4a3c478cdf4049af9600c7abe588c3d226fc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-18T14:24:18Z

    .NET: IgniteFutureCancelledException is marked as serializable.

----
;;;","29/Mar/16 16:57;ashutak;Fixed in a way suggested by Alexey. 
Added entry's versions consistency tests.
TC look good (waiting for the rest non-cache related tests).;;;","07/Apr/16 18:04;githubbot;Github user ashutakGG closed the pull request at:

    https://github.com/apache/ignite/pull/584
;;;","07/Apr/16 18:07;githubbot;GitHub user ashutakGG opened a pull request:

    https://github.com/apache/ignite/pull/621

    Ignite 2645: Assertion error in ATOMIC cachce for invokeAll and cache store

    https://issues.apache.org/jira/browse/IGNITE-2645

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2645-invokeAll-cacheStore

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/621.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #621
    
----
commit 2e64d0d7cc51552fffc231cbc850cd615076fb85
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T06:31:58Z

    IGNITE-2258: IGFS: now default path modes could be optionally disabled using FileSystemConfiguration.isInitializeDefaultPathModes() property.

commit 4cd3b3dc2f1fa0f1a9cceb6bf544dd8fb505d7f5
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T09:52:00Z

    IGNITE-2258: Fixed type on getter/setter.

commit 5d58fcbf40fdb9114e4cbb32b72dd9bce7fa38ca
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-01-04T06:47:28Z

    IGNITE-2308: Fixed HadoopClassLoader dependency resolution. This closes #391.

commit 83a19179cee2bb15adc36c2265dd0a3c794b60bb
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-04T08:14:58Z

    IGNITE-2218: Fixed a problem with native Hadoop libraries load. This closes #378.

commit 1d7fb5702fa33cf395e797161f3a86a9600921a7
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-05T06:59:31Z

    IGNITE-2206: Hadoop file system creation is now abstracted out using factory interface.

commit a12ec7d08573d5396654a5ba05bb7d873e4c2677
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-06T10:50:48Z

    1.5.2

commit 090a5de6a930c10a3a57a6e28c486fe5c87e028d
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2015-12-29T12:50:39Z

    Minor fix.

commit c786820dda7f7cd1849c5593ac24ca9072945887
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-07T13:48:14Z

    IgniteHadoopIgfsSecondaryFileSystem.usrName field is renamed to ""userName"" to preserve backward compatibility.

commit 6ab4ce246316442fa4295f9941c372fea70c24ef
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T06:23:55Z

    IGNITE-2342: Set correct classlader before calling FileSystem.get().

commit 077ab1b3a77fdb1c2c2fd6360fc5b60fda6c50c3
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:17:45Z

    IGNITE-2341: Improved warning message when BinaryMarshaller cannot be used. Also it is not shown when ""org.apache.ignite"" classes is in described situation.

commit 86c4816edfd0e983014f136ffc92cde28ec56cca
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:26:03Z

    IGNITE-2340: Improved error thrown when PROXY mode exists, but secondary file system is not IgniteHadoopIgfsSecondaryFileSystem.

commit fc48a8429a84ef6c87ed3225a218d7d3ae617e14
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-08T07:48:42Z

    Merge branch 'ignite-1.5.2' into ignite-1.5.3

commit 86740cefe212ed0f506d81056dd8e76de9a31e4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-08T09:32:11Z

    1.5.3-SNAPSHOT

commit 92229d2a6c6ef86772a62cb52b3aa07a55c99d89
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T05:56:34Z

    ignite-2359 Added locking for files used by MarshallerContextImpl. (cherry picked from commit 1d8c4e2)

commit 2e4ce585d5f54502c6511d3425b1cd5fbf0a7f4f
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-13T10:37:33Z

    1.5.4-SNAPSHOT

commit 6e5f9f0c7d4c86773b1f0cd5c5a673acb58c86c2
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-13T11:42:27Z

    Changed year to 2016 in Copyrights

commit 02dbcfd8ed2701a4f415c8871d0b8fd08bfa0583
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-01-13T13:47:32Z

    IGNITE-2365 - Notify policy if swap or offheap is enabled and rebalanced entry was not preloaded.
    IGNITE-2099 - Fixing custom collections.
    This closes #396

commit 86c2ba2a601e82b824cf17422683e5398a4d8c7d
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-13T15:40:08Z

    ignite-2350 Pass update notifier flag in discovery data (all cluster nodes will have the same notifier status as first cluster node)
    (cherry picked from commit 7175a42)

commit e1a494df400fc37ca04e8d88d1cf20bca02607b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:16:33Z

    Renamed fields to change fields write order (to preserve backward compatibility).
    (cherry picked from commit 2a4adf5)

commit 09f978234b6062afa1e1658d5a6439365a856aca
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-14T11:42:44Z

    Merge remote-tracking branch 'origin/ignite-1.5.4' into ignite-1.5.4

commit 30043e7892d0b52dc851ce5ec79c7eb3b7cc44fb
Author: Denis Magda <dmagda@gridgain.com>
Date:   2016-01-14T13:02:50Z

    Added release notes

commit cc3db35925698f1670a8bf1c6a1830c0c9b51290
Author: vershov <vershov@gridgain.com>
Date:   2016-01-14T14:21:56Z

    IGNITE-2032 Unwind undeploys in preloader - Fixes #369.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit a5c85ca7749ae90af2e4a29e2162713b480e40fa
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes

commit 8f32a29c5a7b28b7e1173582f4c7cef5b6d73b27
Author: Ignite Teamcity <ignite@apache.org>
Date:   2016-01-15T11:00:29Z

    1.5.4-SNAPSHOT

commit 6482dc80bf9cdf7aa4f592d9266c6745211b1c4c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-15T12:15:02Z

    ignite-2386 Fixed DiscoverManager to do not increase minor topology version if exchange is not triggered.
    (cherry picked from commit d881417)

commit 4ba6574dfa8077f8de23c8c2663826f81c7fd187
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:15:04Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5e1f287dc83343945b0e47b83ee7724a8e)
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedGetFuture.java
    	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheStoreCollectionTest.java

commit 4b31f4e66c15003cee866a6e5660257346c16c1c
Author: sboikov <sboikov@gridgain.com>
Date:   2016-01-18T15:05:37Z

    ignite-1811 Optimized cache 'get' on affinity node.
    (cherry picked from commit 83b2bf5)

commit 1cf14fcff58c51a628df6309f05be7f0b840d5f8
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2015-12-30T10:51:32Z

    IGNITE-2228: .NET: Compute futures could be cancelled.

commit 2f292788cde807d5f1c80cf9fcb8b29cd4e5ee35
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-01-18T10:01:43Z

    IGNITE-2228: Platform compute futures cancellation support. This closes #394.

commit 1f5b4a3c478cdf4049af9600c7abe588c3d226fc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-01-18T14:24:18Z

    .NET: IgniteFutureCancelledException is marked as serializable.

----
;;;","08/Apr/16 07:16;sboikov;Hi Artem,

Reviewed, looks good  (I did few minor changes, please take a look).

Alexey had this comment: 'If read-through happened on innerGet(), but entry processor did not change the value, we still need to propagate the updated value to backups.' This is not implemented, please discuss with him what will go wrong if we do not pass value on backup. What the difference if we do simple 'get' on primary? Also we do not send value to backup if for example read-through happened for 'putIfAbsent'.;;;","08/Apr/16 16:49;ashutak;I discussed the Alexey's comment with him today and now I see the problem. 'putIfAbsent' will has the same issue.

The following steps can be used to verify that the issue exists:
1. Put key-value pair at cache.
2. Clear the value for the key from primary node (backup node should still has the value).
3. Execute invoke operation, which doesn't change a value, just return something.
4. Check that entry version equals no primary and backup. Expected that now it fails here.

At point 3, Ignite will read value from store (on innerGet), new entry version will be genarated, but as long as entry processor does not change the value, value will not be updated on backup node.

I think, we should fix the issue in bounds of new jira.

Thoughts?;;;","11/Apr/16 05:54;sboikov;Artem,

If there is potential problem only when 'clear' is used, there is no need to fix it as part of this issue.;;;","11/Apr/16 17:01;ashutak;No, the situation described above can happen in many cases, for example after eviction of entry from cache (entry expired for example).

But, honestly, I cannot imagine the case, when this inconsistency can broke something. Lets postpone a fix for it.;;;","11/Apr/16 17:02;ashutak;Merged at master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: Date type returned by SQL queries as Timestamp,IGNITE-2635,12938757,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,isapego,isapego,12/Feb/16 09:46,05/May/16 14:02,14/Jul/23 06:20,11/Apr/16 14:26,1.5.0.final,,,1.6,platforms,,,,,0,,,,"When {{SqlFieldsQuery}} is performed upon {{Date}} type fields, result set instead returned with the {{Timestamp}} values. It seems that {{java.util.Data}} type used by {{BinaryMarshaller}} is treated as {{TIMESTAMP}} in h2 engine.

Proposed solution is to implicitly convert {{Timestamp}} type values to {{Date}} values, when C++ client user tries too read {{Date}} value from the stream.",,githubbot,isapego,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2222,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 05 14:02:49 UTC 2016,,,,,,,,,,"0|i2srjb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Feb/16 10:37;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/477

    IGNITE-2635: Timestamp values can be read as Date now.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-2635

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/477.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #477
    
----
commit a55f1b5c737e4380ee9e50c0f2bd473904ec08f8
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T15:56:47Z

    IGNITE-2222: Test for the Date type added.

commit 39186f4042b7453026bc7eaf088ed5c7b3462f70
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T16:39:59Z

    IGNITE-2222: Added ignite::Date class.

commit d7bf440fa0eff01babaf0979a4ea0827561f7500
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T16:51:46Z

    IGNITE-2222: Added Date reading and writing to binary utils.

commit 35a6e1edd7c9a1207b035935f86671c787618b45
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T17:03:12Z

    IGNITE-2222: Added Date to BinaryWriterImpl.

commit af8b0db6247352ae16c93c65a898255774773173
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T17:19:36Z

    IGNITE-2222: Added specialisation WriteTopObject<Date>.

commit 6f86354fd4ad3f2c0ac62ba3e5333551c6233805
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T17:24:20Z

    IGNITE-2222: BinaryRawWriter::WriteDate[Array] implemented.

commit 34bb1d68e096e083a85868dcf473f920e54c0af2
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T18:05:37Z

    IGNITE-2222: Implemented BinaryReaderImpl::ReadDate[Array].

commit b03b9bfc969d76f76e4a6e5fa401061b919cad47
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T18:08:32Z

    IGNITE-2222: Implemented BinaryRaqReader::ReadDate[Array].

commit e36f03bc5b16a074ab9308791d38a35b9bab1d72
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T18:21:15Z

    IGNITE-2222: Fix for the test.

commit 0a4b2e326b99a38336832a1289ae1461697efb3b
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T18:28:58Z

    IGNITE-2222: Added test for DateArray.

commit f08029aeb96a887c679f821f488b5d22b7a612fb
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T18:44:16Z

    IGNITE-2222: Added BinaryWriter::WriteDate[Array].

commit e80350a4a0ae7bb5ab714f0bcb21b3b14236a8d8
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T18:47:53Z

    IGNITE-2222: Added BinaryReader::ReadDate[Array].

commit 7428a3b1b3937d36f048916aeb773a2f058373f3
Author: isapego <isapego@gridgain.com>
Date:   2016-02-08T19:06:36Z

    IGNITE-2222: Tests for Date type reworked.

commit 14d921b89c6d89e0368a044bd3eeff4e4f6a503f
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T13:12:26Z

    IGNITE-2222: Added timestamp class.

commit 0263b602c85f0f5f5c94fb80d4571612fb923813
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T13:28:56Z

    IGNITE-2222: Added binary utils for Timestamp.

commit 937248c3ace1b070c1c558c7fe17ce2864e735a4
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T13:36:48Z

    IGNITE-2222: Timestamp binary type added.

commit 37db4a2a748582b7a83b51fdf46f8648e1fa4f87
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T13:41:56Z

    IGNITE-2222: Added BinaryWriterImpl::WriteTimestamp[Array]().

commit a5583a79bbfec3157ae595b7c22cefc3be614706
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T13:51:03Z

    IGNITE-2222: Added BinaryReaderImpl::ReadTimestamp[Array]().

commit 8e1a023ff3fbc480a9c6f17a239f7e11ce04f63b
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T13:57:05Z

    IGNITE-2222: Added BinaryWriter::WriteTimestamp[Array]().

commit 8a851fd65a69231ff7477882554143a9f085bfcb
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T13:59:17Z

    IGNITE-2222: Added BinaryReader::ReadTimestamp[Array]().

commit e4f2cdf5e0c7cbffd287c024191caff5e5bed9e1
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T14:01:11Z

    IGNITE-2222: Added BinaryRawReader::ReadTimestamp[Array]().

commit 26cd9ea51d1f627be21ad2aee3632602b3cf5126
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T14:04:06Z

    GNITE-2222: Added BinaryRawWriter::WriteTimestamp[Array]().

commit 67cacde49c67a5c811116f88c3adf8873b27e1a4
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T14:14:40Z

    IGNITE-2222: Added tests for Timestamp binary type.

commit 78f7acaaf7812ae9ac700b7da4051baa8bd10807
Author: isapego <isapego@gridgain.com>
Date:   2016-02-09T14:33:49Z

    IGNITE-2222: Fix for autotools build system.

commit 5863322968f7f8e2171972a1b0b3ad0c9b2748c7
Author: isapego <isapego@gridgain.com>
Date:   2016-02-10T12:22:15Z

    IGNITE-2222: Renamed Timestamp::GetNanoseconds ->
    Timestamp::GetSecondFraction. Removed constructor Timestamp(const Date&).

commit f218d3098388b500fbd2e5bac45ab2308aa542b6
Author: isapego <isapego@gridgain.com>
Date:   2016-02-10T13:23:45Z

    IGNITE-2222: Binary session tests for Date and Timestamp.

commit 741c5ced5e540cee670bf416f79881d2e049cdfc
Author: isapego <isapego@gridgain.com>
Date:   2016-02-10T13:25:16Z

    IGNITE-2222: Deserialization fix for Date and Timestamp.

commit af4e324bfcbf1502b0f26a1a01f683cd6eae8fc7
Author: isapego <isapego@gridgain.com>
Date:   2016-02-10T13:26:29Z

    IGNITE-2222: Cache tests for Date and Timestamp.

commit e34c132e3f3f77dcb93c39e0640dd298ddf42a67
Author: isapego <isapego@gridgain.com>
Date:   2016-02-11T15:32:14Z

    IGNITE-2222: Added query tests for Timestamp and Date types.

commit 5c4d9ba215d197d546a4ce5ba6333eb165353a27
Author: isapego <isapego@gridgain.com>
Date:   2016-02-12T10:27:40Z

    IGNITE-2635: Timestamp values can be read as Date now.

----
;;;","12/Feb/16 10:38;isapego;Merged with IGNITE-2222.;;;","12/Feb/16 10:39;isapego;Fixed.;;;","12/Feb/16 13:24;vozerov;Igor,
 
I cannot merge it with ignite-1786 branch - GIT shows conflicts. Could you please merge ignite-1786 into your pull request and then re-assign back to me?;;;","12/Feb/16 15:05;isapego;Vladimir, Merged.;;;","15/Feb/16 13:46;vozerov;Igor,

We need tests for this. Probably the best place is query tests.;;;","04/Apr/16 10:27;isapego;Vladimir,

We already have tests for Date retrieval (e.g. {{cache_query_test.cpp:976}}).;;;","11/Apr/16 14:26;vozerov;Already merged.;;;","05/May/16 14:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/477
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Incorrect field offset calculation in BinaryReader,IGNITE-2625,12938491,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,ptupitsyn,ptupitsyn,11/Feb/16 12:14,05/Aug/16 08:08,14/Jul/23 06:20,12/Feb/16 13:09,1.1.4,,,1.6,platforms,,,,,0,,,,"See BinaryReader.SeekField(string), position from _curSchemaMap is used as is, and does not take current object offset (_curPos) into account.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 05 08:08:41 UTC 2016,,,,,,,,,,"0|i2spwf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/16 13:22;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/474

    IGNITE-2625 .NET: Fix field offset calculation in BinaryReader

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2625

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/474.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #474
    
----
commit e9692aa843862f2c69aaaf5cf51eaa46bca0af57
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-11T13:18:55Z

    IGNITE-2625 .NET: Fix field offset calculation in BinaryReader

----
;;;","05/Aug/16 08:08;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/474
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Excessive memory usage by objects of destroyed caches,IGNITE-2622,12938179,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,agoncharuk,agoncharuk,10/Feb/16 13:20,12/Feb/16 13:45,14/Jul/23 06:20,12/Feb/16 13:45,ignite-1.4,,,1.6,cache,,,,,0,,,,"If I start and stop tens of caches in a loop, cache's configuration gets stored in the following objects:
 * PartitionExchangeFuture.reqs Change requests contain configuration which is then used in cache
 * ServerImpl.PendingMessages.msgs also contain the same reqs

Both collections are limited, however consider the following scenario: create a cache with an eviction policy, fill it up with data, destroy cache, repeat. Even though the cache is destroyed, it's entries are saved in the eviction policy and do not get collected until both exchange future and pending message (see above) gets cleared.

Possible solutions:
 * Use a copy of eviction policy for cache creation.
 * Clear requests in exchange future after it's done (easy) and discovery custom message when it's not needed (hard)",,agoncharuk,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 12 13:45:25 UTC 2016,,,,,,,,,,"0|i2snz3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/16 18:26;sboikov;Cache configuration leaked over following objects:
- TcpDiscoveryCustomEventMessage.msg: this deserialzied custom message can be safely cleared after discovery notifies listener
- GridDhtPartitionsExchangeFuture.reqs: can be cleared after GridDhtPartitionsExchangeFuture is finished
- if GridDhtPartitionsExchangeFuture is created for DiscoveryCustomEvent then custom message is stored in GridDhtPartitionsExchangeFuture.discoEvt.customMsg, also can be cleared after GridDhtPartitionsExchangeFuture is finished;;;","12/Feb/16 13:45;sboikov;Added cleanup of custom message instances after message is processed (commit a6b3ded).
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Compute may fail in mixed-platform cluster,IGNITE-2621,12938175,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,ptupitsyn,ptupitsyn,10/Feb/16 13:00,03/Mar/16 06:52,14/Jul/23 06:20,03/Mar/16 06:52,1.1.4,,,1.6,platforms,,,,,0,,,,"Start Java-only node, start .NET node, attempt to execute a computation. 
.NET jobs will fail on Java-only nodes.

1) Make sure that .NET nodes can be identified (via an attribute)
2) Use .NET projection in platform compute. 
If Affinity computation maps to a Java-only node, there will be a ClusterGroupEmptyException",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 03 06:52:50 UTC 2016,,,,,,,,,,"0|i2sny7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/16 11:28;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/505

    IGNITE-2621 .NET: Fix compute in mixed-platform cluster

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2621

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/505.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #505
    
----
commit 4add7c20525b5a3e5a21e79332c22b158787bfc7
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T11:12:39Z

    wip

commit e24e9cbde4ebb9188af0d44764ac8a1601ff4743
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T11:18:06Z

    Test done

commit 3dc6551bbb6694a745bb23e0a543454f994f4156
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T11:56:53Z

    wip

commit 7299892aafb03117424aa78ab37719917267c889
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T12:05:01Z

    wip

commit 9c83264e9d7e8d2b007bf78c89bd8f2a654f3cb7
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T12:15:28Z

    wip tests

commit 9aabdaf73bbf97951753a59d9cd743f265b7ef4e
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T12:15:49Z

    wip

commit 4a13673c2ff89a2f985d88e1fc671f2c93d8bd46
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T13:07:31Z

    test done

commit b9b43a356b387851dd3978b82d612b5b482af01e
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T13:26:37Z

    Fix process tree kill

commit 51f380691a6898b46f47740f1f6a9e05b8baf590
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T13:30:01Z

    Test done

commit 09e9798c7c4adf4ab825ec5736eca258b95f677b
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T14:19:01Z

    Fixing platform compute projection

commit 81d1cfde3dd421f603fc9141968666df36d095df
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T14:26:26Z

    Fixed platform compute projection

commit b1533a5328a64334983f9d68c3c04da2c8312119
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T14:32:02Z

    Merge remote-tracking branch 'remotes/upstream/master' into ignite-2621

commit 0dc28d31fbd29df6085c05157db8be83ea5acf94
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-02-19T14:44:24Z

    wip tests

----
;;;","03/Mar/16 06:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/505
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extra 'entry expired' events,IGNITE-2620,12938168,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,sboikov,sboikov,10/Feb/16 12:37,23/May/16 21:13,14/Jul/23 06:20,23/May/16 21:12,1.5.0.final,,,,,,,,,0,,,,"Added test reproducing issue: IgniteCacheEntryListenerExpiredEventsTest (more then 1 event can be fired for single entry expiration).

Very suspicious place is GridCacheMapEntry.onTtlExpired: even when entry is obsolete it calls 'clearIndex' and 'releaseSwap' (these calls should be prohibited for obsolete entry).",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 23 21:12:53 UTC 2016,,,,,,,,,,"0|i2snwn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/May/16 12:25;sboikov;Original issue with extra events is already fixed, but problem with broken synchronization in GridCacheMapEntry.onTtlExpired still exists.;;;","23/May/16 21:12;sboikov;Fixed several issues:
- need retry GridCacheMapEntry.onTtlExpired if entry is obsolete 
- should not clear expired entry if mvcc is not empty
- do not call QueryManager.onSwap when swap entry based on offheap pointer

Merger into master (commit 46892c7).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NonHeap memory usage metrics don't work as expected.,IGNITE-2616,12938146,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,v.pyatkov,vershov,vershov,10/Feb/16 10:44,13/Jun/16 10:17,14/Jul/23 06:20,13/Jun/16 10:16,1.5.0.final,,,,general,,,,,0,,,,"This simple code:
{noformat}
    public static void main(String ... args) {
        MemoryMXBean mxBean = ManagementFactory.getMemoryMXBean();
        System.out.println(mxBean.getNonHeapMemoryUsage());
        GridUnsafeMemory uMem = new GridUnsafeMemory(1024L * 1024 * 1024 * 3); //3GB
        System.out.println(mxBean.getNonHeapMemoryUsage());
        uMem.allocate(1024 * 1024 * 1024, true, false);
        System.out.println(mxBean.getNonHeapMemoryUsage());
        uMem.allocate(1024 * 1024 * 1024, true, true);
        System.out.println(mxBean.getNonHeapMemoryUsage());
    }
{noformat}
shows: 
{noformat}
init = 2555904(2496K) used = 4783352(4671K) committed = 8060928(7872K) max = -1(-1K)
init = 2555904(2496K) used = 5018704(4901K) committed = 8060928(7872K) max = -1(-1K)
init = 2555904(2496K) used = 5018960(4901K) committed = 8060928(7872K) max = -1(-1K)
init = 2555904(2496K) used = 5018960(4901K) committed = 8060928(7872K) max = -1(-1K)
{noformat}
which means: offHeap metrics are incorrect. The  problem is: Apache Ignite uses that MemoryMXBean  for collecting metrics, thus Apache Ignite offHeap metrics are incorrect too. We should find the way to fix this, if there are any.",,dmagda,githubbot,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,172800,172800,,0%,172800,172800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/16 10:46;vershov;ClusterMetricsOnCacheSelfTest.java;https://issues.apache.org/jira/secure/attachment/12787241/ClusterMetricsOnCacheSelfTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 13 10:16:46 UTC 2016,,,,,,,,,,"0|i2snrr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/16 10:46;vershov;This test should be included, after offHeap metrics is fixed.;;;","20/May/16 11:03;v.pyatkov;I found some offheap metric issue:
{code}
cache.put(46744, ""val "" + 456);
String val = (String)cache.get(46744);
log.info(""OffHeap put {} get {}"", metrics.getOffHeapPuts(), metrics.getOffHeapGets());
log.info(""OnHeap put {} get {}"", metrics.getCachePuts(), metrics.getCacheGets());
{code}
In result had seen:
{noformat}
2016-05-20 12:22:09 INFO  ServerNode:62 - OffHeap put 1 get 0
2016-05-20 12:22:09 INFO  ServerNode:63 - OnHeap put 1 get 1
{noformat}
I think every value should by 1.;;;","27/May/16 15:58;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/762

    IGNITE-2616

    IGNITE-2616
    NonHeap memory usage metrics don't work as expected.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-2616

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/762.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #762
    
----
commit cacb62a92888cc27f9baab9a27518e66bfc3484e
Author: vdpyatkov <vpyatkov@gridgain.com>
Date:   2016-05-27T15:41:11Z

    IGNITE-2616
    NonHeap memory usage metrics don't work as expected.

----
;;;","30/May/16 16:10;v.pyatkov;I added OffHeap data size calculation.
Could anyone can review it?;;;","01/Jun/16 13:55;dmagda;Vlad, I've reviewed your changes and left review notes in the pull-request. Please address them.;;;","02/Jun/16 16:24;v.pyatkov;[~dmagda] Thanks for the review
I made changes after.
I added test to ClusterNodeMetricsSelfTest, but I think this test is not passed before.
Can you review the changes again?;;;","03/Jun/16 04:54;dmagda;Vlad, changes look good to me. However I can't normally merge your changes due to the fact that your pull-request is outdated. Please re-create your pull request and open one more time.;;;","03/Jun/16 08:28;githubbot;Github user vldpyatkov closed the pull request at:

    https://github.com/apache/ignite/pull/762
;;;","03/Jun/16 08:32;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/776

    IGNITE-2616

    NonHeap memory usage metrics don't work as expected.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-2616

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/776.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #776
    
----
commit e1d1f1d99aba1390bef65c62c69c4dfc320b3482
Author: vdpyatkov <vpyatkov@gridgain.com>
Date:   2016-06-03T08:27:37Z

    IGNITE-2616
    NonHeap memory usage metrics don't work as expected.

----
;;;","03/Jun/16 08:42;v.pyatkov;[~dmagda] Thank you for your review
I remade poll request and ran tests on TC.
If it pass good, need to be review again.;;;","03/Jun/16 08:48;dmagda;Ok, let me know when you're ready for review.;;;","06/Jun/16 16:32;v.pyatkov;The test was failed, investigating error.;;;","07/Jun/16 13:49;v.pyatkov;[~dmagda] test has been passed and patch ready to review.;;;","10/Jun/16 08:05;dmagda;[~v.pyatkov], reviewed. Please see my comments in the pull request.

In short the issue hasn't been fixed for node metrics. The fix is only for the cluster metrics. Please fix it for the node metrics instead and cluster metrics will work in a correct way automatically after that.;;;","10/Jun/16 14:35;v.pyatkov;[~dmagda] I corrected all the comments.
And the node metrics is working correctly now.;;;","13/Jun/16 10:16;dmagda;Looks good to me, thanks. Merged the changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL query fails for cache with an eviction policy to offheap,IGNITE-2615,12938138,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,skozlov,skozlov,skozlov,10/Feb/16 10:18,16/Feb/16 12:30,14/Jul/23 06:20,12/Feb/16 13:46,1.5.0.final,,,1.6,,,,,,0,,,,"1 Start server node
2. Start client that creates an onheap cache and performs  random put/get/sqlquery
3. Client fails at query execution after starting eviciton in offheap:

Client log
{noformat}
>>> -----------------------------------------------------------------------
>>> Cache configuation used: 1
>>> CacheConfiguration [name=cache_d37d89a5_239_09203172203377125, storeConcurrentLoadAllThreshold=5, rebalancePoolSize=
2, rebalanceTimeout=10000, evictPlc=FifoEvictionPolicy [max=30000, batchSize=1, maxMemSize=0, memSize=0], evictSync=fals
e, evictKeyBufSize=1024, evictSyncConcurrencyLvl=4, evictSyncTimeout=10000, evictFilter=null, evictMaxOverflowRatio=10.0
, eagerTtl=true, dfltLockTimeout=0, startSize=1500000, nearCfg=null, writeSync=PRIMARY_SYNC, storeFactory=null, storeKee
pBinary=false, loadPrevVal=false, aff=null, cacheMode=REPLICATED, atomicityMode=ATOMIC, atomicWriteOrderMode=null, backu
ps=0, invalidate=false, tmLookupClsName=null, rebalanceMode=SYNC, rebalanceOrder=0, rebalanceBatchSize=524288, rebalance
BatchesPrefetchCount=2, offHeapMaxMem=10000000, swapEnabled=false, maxConcurrentAsyncOps=500, writeBehindEnabled=false,
writeBehindFlushSize=10240, writeBehindFlushFreq=5000, writeBehindFlushThreadCnt=1, writeBehindBatchSize=512, memMode=ON
HEAP_TIERED, affMapper=null, rebalanceDelay=0, rebalanceThrottle=0, interceptor=null, longQryWarnTimeout=3000, readFromB
ackup=true, nodeFilter=null, sqlSchema=null, sqlEscapeAll=false, sqlOnheapRowCacheSize=10240, snapshotableIdx=false, cpO
nRead=true, topValidator=null]
>>> -----------------------------------------------------------------------
[13:07:57,506][INFO][exchange-worker-#38%null%][GridCacheProcessor] Started cache [name=cache_d37d89a5_239_0920317220337
7125, mode=REPLICATED]
>>> Node for ordered messages: 86d4d306
>>> Node for unordered messages: 86d4d306
>>>Empty cache, loading data by streamer ...
Loaded 30000 key(s)
>>> 1309 operation(s), op/sec: 261, cache size: 33840
>>> Latest value is Data [modified=0, longCol=14658, doubleCol=0.3403571235222742, stringCol='14658*****', boolean=true,
 int=14658, bytesCol='[49, 52, 54, 53, 56, 42, 42, 42, 42, 42]', innerDataCol=inner [longCol=7329]', mapCol='{map_key_14
658=map_value_14658}']
>>> Operation counters: replace=81,scanquery=86,put=444,remove=77,get=379,putall=36,removeall=44,sqlquery=81,msg=0,contq
uery=0,getall=81
>>> 2596 operation(s), op/sec: 259, cache size: 36128
>>> Latest value is Data [modified=0, longCol=33912, doubleCol=0.9348676568832568, stringCol='33912*****', boolean=true,
 int=33912, bytesCol='[51, 51, 57, 49, 50, 42, 42, 42, 42, 42]', innerDataCol=inner [longCol=16956]', mapCol='{map_key_3
3912=map_value_33912}']
>>> Operation counters: replace=157,scanquery=166,put=856,remove=154,get=782,putall=69,removeall=90,sqlquery=170,msg=0,c
ontquery=0,getall=152
>>> 4022 operation(s), op/sec: 268, cache size: 40428
>>> Latest value is Data [modified=0, longCol=31128, doubleCol=0.33278377289395045, stringCol='31128*****', boolean=true
, int=31128, bytesCol='[51, 49, 49, 50, 56, 42, 42, 42, 42, 42]', innerDataCol=inner [longCol=15564]', mapCol='{map_key_
31128=map_value_31128}']
>>> Operation counters: replace=238,scanquery=241,put=1314,remove=244,get=1255,putall=109,removeall=133,sqlquery=250,msg
=0,contquery=0,getall=238
[13:08:25,463][INFO][grid-timeout-worker-#23%null%][IgniteKernal]
Metrics for local node (to disable set 'metricsLogFrequency' to 0)
    ^-- Node [id=d37d89a5, name=null]
    ^-- H/N/C [hosts=1, nodes=2, CPUs=8]
    ^-- CPU [cur=0,07%, avg=3,76%, GC=0%]
    ^-- Heap [used=68MB, free=73,05%, comm=253MB]
    ^-- Public thread pool [active=0, idle=16, qSize=0]
    ^-- System thread pool [active=0, idle=16, qSize=0]
    ^-- Outbound messages queue [size=0]
[13:09:17,128][INFO][sys-#15%null%][GridDeploymentLocalStore] Class locally deployed: class org.apache.ignite.IgniteChec
kedException
[13:09:17,133][INFO][sys-#15%null%][GridDeploymentLocalStore] Class locally deployed: class org.apache.ignite.IgniteExce
ption
[13:09:17,145][INFO][main][GridTcpRestProtocol] Command protocol successfully stopped: TCP binary
[13:09:17,167][INFO][main][GridCacheProcessor] Stopped cache: ignite-marshaller-sys-cache
[13:09:17,170][INFO][main][GridCacheProcessor] Stopped cache: ignite-sys-cache
[13:09:17,182][INFO][main][GridCacheProcessor] Stopped cache: ignite-atomics-sys-cache
[13:09:17,193][INFO][main][GridCacheProcessor] Stopped cache: cache_d37d89a5_239_09203172203377125
[13:09:17,207][INFO][main][GridDeploymentLocalStore] Removed undeployed class: GridDeployment [ts=1455098845210, depMode
=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@1c8825a5, clsLdrId=4fa46aac251-d37d89a5-d829-4d99-8da4-6c257d577d95, us
erVer=0, loc=true, sampleClsName=org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionF
ullMap, pendingUndeploy=false, undeployed=true, usage=0]
[13:09:17,252][INFO][main][IgniteKernal]

>>> +---------------------------------------------------------------------------------+
>>> Ignite ver. 1.5.6#20160130-sha1:b146c0f5ac227e270d79c6bf18017676db6a1164 stopped OK
>>> +---------------------------------------------------------------------------------+
>>> Grid uptime: 00:01:51:799


Exception in thread ""main"" org.apache.ignite.cache.CachePartialUpdateException: Failed to update keys (retry update if p
ossible).: [54103, 33040, 68549, 3279, 68546, 97582, 13984, 347, 50618, 17292, 34415, 74063, 33355, 34410, 75988, 84280,
 85474, 30217, 34209, 8439, 75570, 96001, 6888, 14892, 78388, 75562, 7316, 82726, 84875, 40768, 91385, 97347, 70927, 496
2, 49508, 85821, 14246, 61801, 46378, 41204, 8907, 20978, 95389, 28009, 13963, 66695, 1407, 80195, 1203, 90020, 50836, 7
362, 8512, 34437, 32427, 88272, 21571, 53578, 58815, 2750, 13348, 13549, 36041, 48852, 48083, 73862, 35538, 73675, 1647,
 35735, 18409, 9173, 14425, 47061, 60527, 43444, 27745, 21338, 14439, 86006, 96695, 23801, 63640, 70736, 68300, 56163, 4
9598, 11187, 32932, 94587, 66639, 93437, 24681, 31771, 41497, 52068, 42616, 81643, 39418, 31764, 90498, 88890, 19740, 82
246, 5739, 1575, 44544, 60614, 89745, 89741, 47726, 76518, 6602, 55724, 47513, 74433, 71287, 30603, 35099, 23117, 82409,
 32194, 5774, 93766, 12572, 99699, 57076, 24534, 18053, 18269, 43563, 55519, 96495, 26315, 76338, 92923, 49898, 59708, 1
1402, 31459, 43745, 92379, 25040, 59715, 77229, 70251, 96058, 90845, 34372, 30812, 45462, 97505, 18291, 51625, 26766, 70
469, 71746, 12170, 50567, 17148, 48202, 4435, 23184, 17459, 16041, 36916, 71468, 5992, 49183, 18973, 8578, 22737, 61982,
 8788, 61591, 97955, 5786, 45168, 10106, 20623, 3903, 45804, 84652, 45805, 3908, 90186, 63235, 35248, 84665, 95180, 6936
7, 26508, 18960, 46417, 64386, 90174, 31250, 7494, 46067, 21430, 23519, 64489, 57203, 17386, 43349, 17387, 28122, 169, 5
7213, 97166, 10623, 6367, 43166, 78079, 217, 22408, 55117, 12975, 43365, 47330, 42911, 48503, 71562, 19230, 43377, 91277
, 79740, 41909, 15254, 15901, 8843, 41716, 82805, 78890, 33832, 27830, 48745, 58043, 14122, 67095, 2234, 82832, 93133, 7
0116, 94267, 55348, 72298, 9459, 44964, 20106, 22463, 39566, 39565, 3532, 23702, 54030, 54720, 70170, 35848, 63741, 8964
2, 13235, 21693, 80664, 89643, 3314, 36194, 60456, 93367, 41340, 41724, 86156, 35612, 46290, 9299, 46960, 46013, 37875,
89435, 37879, 21465, 93191, 12558, 52710, 53845, 54967, 81795, 29630, 46936, 82628, 3175, 43804, 42960, 83659, 58706, 29
635, 79177, 49274, 6710, 43807, 60423, 33630, 80011, 42382, 43630, 99147, 4515, 68963, 49764, 92891, 54791, 49760, 56743
, 37580, 76606, 30056, 73059, 45095, 23903, 51793, 21230, 28333, 45083, 65534, 11355, 72659, 43871, 59822, 4556, 68126,
44637, 56104, 23226, 37900, 84584, 10436, 99786, 98730, 34033, 49755, 73294, 22196, 41301, 17095, 83439, 18139, 67805, 2
3240, 1003, 4304, 81014, 44472, 70357, 289, 94710, 45335, 54315, 64218, 49097, 90095, 50433, 84711, 51713, 45353, 44690,
 84516, 88547, 37123, 56561, 26272, 8658, 91588, 88760, 5895, 88766, 51994, 20099, 15463, 78108, 50482, 43076, 96156, 71
30, 70322, 46530, 97409, 68193, 235, 98931, 95295, 5868, 67335, 63130, 86321, 28102, 84762, 1966, 95280, 11783, 76010]
        at org.apache.ignite.internal.processors.cache.GridCacheUtils.convertToCacheException(GridCacheUtils.java:1604)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.cacheException(IgniteCacheProxy.java:1876)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.removeAll(IgniteCacheProxy.java:1323)
        at org.apache.ignite.testtools.Iron.main(Iron.java:297)
Caused by: class org.apache.ignite.internal.processors.cache.CachePartialUpdateCheckedException: Failed to update keys (
retry update if possible).: [54103, 33040, 68549, 3279, 68546, 97582, 13984, 347, 50618, 17292, 34415, 74063, 33355, 344
10, 75988, 84280, 85474, 30217, 34209, 8439, 75570, 96001, 6888, 14892, 78388, 75562, 7316, 82726, 84875, 40768, 91385,
97347, 70927, 4962, 49508, 85821, 14246, 61801, 46378, 41204, 8907, 20978, 95389, 28009, 13963, 66695, 1407, 80195, 1203
, 90020, 50836, 7362, 8512, 34437, 32427, 88272, 21571, 53578, 58815, 2750, 13348, 13549, 36041, 48852, 48083, 73862, 35
538, 73675, 1647, 35735, 18409, 9173, 14425, 47061, 60527, 43444, 27745, 21338, 14439, 86006, 96695, 23801, 63640, 70736
, 68300, 56163, 49598, 11187, 32932, 94587, 66639, 93437, 24681, 31771, 41497, 52068, 42616, 81643, 39418, 31764, 90498,
 88890, 19740, 82246, 5739, 1575, 44544, 60614, 89745, 89741, 47726, 76518, 6602, 55724, 47513, 74433, 71287, 30603, 350
99, 23117, 82409, 32194, 5774, 93766, 12572, 99699, 57076, 24534, 18053, 18269, 43563, 55519, 96495, 26315, 76338, 92923
, 49898, 59708, 11402, 31459, 43745, 92379, 25040, 59715, 77229, 70251, 96058, 90845, 34372, 30812, 45462, 97505, 18291,
 51625, 26766, 70469, 71746, 12170, 50567, 17148, 48202, 4435, 23184, 17459, 16041, 36916, 71468, 5992, 49183, 18973, 85
78, 22737, 61982, 8788, 61591, 97955, 5786, 45168, 10106, 20623, 3903, 45804, 84652, 45805, 3908, 90186, 63235, 35248, 8
4665, 95180, 69367, 26508, 18960, 46417, 64386, 90174, 31250, 7494, 46067, 21430, 23519, 64489, 57203, 17386, 43349, 173
87, 28122, 169, 57213, 97166, 10623, 6367, 43166, 78079, 217, 22408, 55117, 12975, 43365, 47330, 42911, 48503, 71562, 19
230, 43377, 91277, 79740, 41909, 15254, 15901, 8843, 41716, 82805, 78890, 33832, 27830, 48745, 58043, 14122, 67095, 2234
, 82832, 93133, 70116, 94267, 55348, 72298, 9459, 44964, 20106, 22463, 39566, 39565, 3532, 23702, 54030, 54720, 70170, 3
5848, 63741, 89642, 13235, 21693, 80664, 89643, 3314, 36194, 60456, 93367, 41340, 41724, 86156, 35612, 46290, 9299, 4696
0, 46013, 37875, 89435, 37879, 21465, 93191, 12558, 52710, 53845, 54967, 81795, 29630, 46936, 82628, 3175, 43804, 42960,
 83659, 58706, 29635, 79177, 49274, 6710, 43807, 60423, 33630, 80011, 42382, 43630, 99147, 4515, 68963, 49764, 92891, 54
791, 49760, 56743, 37580, 76606, 30056, 73059, 45095, 23903, 51793, 21230, 28333, 45083, 65534, 11355, 72659, 43871, 598
22, 4556, 68126, 44637, 56104, 23226, 37900, 84584, 10436, 99786, 98730, 34033, 49755, 73294, 22196, 41301, 17095, 83439
, 18139, 67805, 23240, 1003, 4304, 81014, 44472, 70357, 289, 94710, 45335, 54315, 64218, 49097, 90095, 50433, 84711, 517
13, 45353, 44690, 84516, 88547, 37123, 56561, 26272, 8658, 91588, 88760, 5895, 88766, 51994, 20099, 15463, 78108, 50482,
 43076, 96156, 7130, 70322, 46530, 97409, 68193, 235, 98931, 95295, 5868, 67335, 63130, 86321, 28102, 84762, 1966, 95280
, 11783, 76010]
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$UpdateState.add
FailedKeys(GridNearAtomicUpdateFuture.java:1241)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture$UpdateState.onR
esult(GridNearAtomicUpdateFuture.java:661)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateFuture.onResult(GridNe
arAtomicUpdateFuture.java:344)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processNearAtomicUpdate
Response(GridDhtAtomicCache.java:2709)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$700(GridDhtAtomi
cCache.java:128)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$6.apply(GridDhtAtomicCa
che.java:263)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$6.apply(GridDhtAtomicCa
che.java:261)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:582)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:280)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:204)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:80)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:163)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:821
)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:784)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
        Suppressed: class org.apache.ignite.IgniteCheckedException: Failed to update keys on primary node.
                at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicUpdateResponse.addFa
iledKeys(GridNearAtomicUpdateResponse.java:368)
                at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncI
nternal0(GridDhtAtomicCache.java:1473)
                at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncI
nternal(GridDhtAtomicCache.java:1282)
                at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processNearAtom
icUpdateRequest(GridDhtAtomicCache.java:2692)
                at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$600(Grid
DhtAtomicCache.java:128)
                at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$5.apply(GridDht
AtomicCache.java:257)
                at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$5.apply(GridDht
AtomicCache.java:255)
                ... 11 more
                Suppressed: class org.apache.ignite.IgniteException: Failed to get value for key: 352. This can happen d
ue to a long GC pause.
                        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2A
bstractKeyValueRow.java:253)
                        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2A
bstractKeyValueRow.java:284)
                        at org.apache.ignite.internal.processors.query.h2.opt.GridH2IndexBase.compareRows(GridH2IndexBas
e.java:119)
                        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.ja
va:248)
                        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.ja
va:49)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeap
SnapTreeMap.java:1350)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeap
SnapTreeMap.java:1346)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2102)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHe
apSnapTreeMap.java:2217)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.updateUnderRoot(GridOff
HeapSnapTreeMap.java:2034)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.update(GridOffHeapSnapT
reeMap.java:1915)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.remove(GridOffHeapSnapT
reeMap.java:1884)
                        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.remove(GridOffHeapSnapT
reeMap.java:108)
                        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.remove(GridH2TreeIndex.jav
a:408)
                        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpdate(GridH2Table.java:434)

                        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update(GridH2Table.java:340)
                        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.remove(IgniteH2Indexing.java:
586)
                        at org.apache.ignite.internal.processors.query.GridQueryProcessor.remove(GridQueryProcessor.java
:1014)
                        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.remove(GridCacheQuery
Manager.java:431)
                        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.clearIndex(GridCacheMapEntry.ja
va:3760)
                        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.j
ava:2334)
                        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateS
ingle(GridDhtAtomicCache.java:1997)
                        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateA
llAsyncInternal0(GridDhtAtomicCache.java:1407)
                        ... 16 more
{noformat}

Server log:
{noformat}
[13:09:16,846][SEVERE][sys-#17%null%][GridDhtAtomicCache] <cache_d37d89a5_239_09203172203377125> Unexpected exception du
ring cache update
class org.apache.ignite.IgniteException: Failed to get value for key: 352. This can happen due to a long GC pause.
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2AbstractKeyValueR
ow.java:253)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2AbstractKeyValueR
ow.java:284)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2IndexBase.compareRows(GridH2IndexBase.java:119)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.java:248)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.java:49)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeapSnapTreeMap.java
:1350)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeapSnapTreeMap.java
:1346)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2102)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.updateUnderRoot(GridOffHeapSnapTreeMap.
java:2034)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.update(GridOffHeapSnapTreeMap.java:1915
)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.remove(GridOffHeapSnapTreeMap.java:1884
)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.remove(GridOffHeapSnapTreeMap.java:108)

        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.remove(GridH2TreeIndex.java:408)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpdate(GridH2Table.java:434)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update(GridH2Table.java:340)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.remove(IgniteH2Indexing.java:586)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.remove(GridQueryProcessor.java:1014)
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.remove(GridCacheQueryManager.java:431
)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.clearIndex(GridCacheMapEntry.java:3760)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:2334)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAto
micCache.java:1997)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0
(GridDhtAtomicCache.java:1407)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(
GridDhtAtomicCache.java:1282)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processNearAtomicUpdate
Request(GridDhtAtomicCache.java:2692)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$600(GridDhtAtomi
cCache.java:128)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$5.apply(GridDhtAtomicCa
che.java:257)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$5.apply(GridDhtAtomicCa
che.java:255)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:582)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:280)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:204)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:80)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:163)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:821
)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:784)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
[13:09:17,158][INFO][disco-event-worker-#46%null%][GridDiscoveryManager] Node left topology: TcpDiscoveryNode [id=d37d89
a5-d829-4d99-8da4-6c257d577d95, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 192.168.1.112, 2001:0:9d38:6ab8:2c8e:661e:a1b7:c399],
 sockAddrs=[work-pc/192.168.1.112:0, /0:0:0:0:0:0:0:1:0, work-pc/192.168.1.112:0, /127.0.0.1:0, /192.168.1.112:0, /2001:
0:9d38:6ab8:2c8e:661e:a1b7:c399:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1455098845119, loc=false, ver=1.5.
6#20160130-sha1:b146c0f5, isClient=true]
[13:09:17,182][INFO][disco-event-worker-#46%null%][GridDiscoveryManager] Topology snapshot [ver=3, servers=1, clients=0,
 CPUs=8, heap=2.0GB]
[13:09:17,193][INFO][disco-event-worker-#46%null%][GridDeploymentPerVersionStore] Class was undeployed in SHARED or CONT
INUOUS mode [cls=class org.apache.ignite.testtools.Iron$Data, alias=org.apache.ignite.testtools.Iron$Data]
[13:09:17,207][INFO][disco-event-worker-#46%null%][GridDeploymentPerVersionStore] Class was undeployed in SHARED or CONT
INUOUS mode [cls=class org.apache.ignite.testtools.Iron$3, alias=org.apache.ignite.testtools.Iron$3]
[13:09:17,223][INFO][disco-event-worker-#46%null%][GridDeploymentPerVersionStore] Class was undeployed in SHARED or CONT
INUOUS mode [cls=class org.apache.ignite.testtools.Iron$2, alias=org.apache.ignite.testtools.Iron$2]
[13:09:17,244][INFO][disco-event-worker-#46%null%][GridDeploymentPerVersionStore] Class was undeployed in SHARED or CONT
INUOUS mode [cls=class org.apache.ignite.testtools.Iron$StringBinaryObjectIgniteBiPredicate, alias=org.apache.ignite.tes
ttools.Iron$StringBinaryObjectIgniteBiPredicate]
[13:09:57,574][INFO][grid-timeout-worker-#33%null%][IgniteKernal]
Metrics for local node (to disable set 'metricsLogFrequency' to 0)
    ^-- Node [id=86d4d306, name=null]
    ^-- H/N/C [hosts=1, nodes=1, CPUs=8]
    ^-- CPU [cur=0%, avg=4,06%, GC=0%]
    ^-- Heap [used=350MB, free=82,48%, comm=2001MB]
    ^-- Public thread pool [active=0, idle=16, qSize=0]
    ^-- System thread pool [active=0, idle=16, qSize=0]
    ^-- Outbound messages queue [size=0]
[13:10:18,266][SEVERE][exchange-worker-#49%null%][GridDhtPartitionsExchangeFuture] Failed to reinitialize local partitio
ns (preloading will be stopped): GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=3, minorTopVer=0], n
odeId=d37d89a5, evt=NODE_LEFT]
class org.apache.ignite.IgniteException: Failed to get value for key: 352. This can happen due to a long GC pause.
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2AbstractKeyValueR
ow.java:253)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2AbstractKeyValueR
ow.java:284)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2IndexBase.compareRows(GridH2IndexBase.java:119)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.java:248)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.java:49)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeapSnapTreeMap.java
:1350)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeapSnapTreeMap.java
:1346)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2102)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.updateUnderRoot(GridOffHeapSnapTreeMap.
java:2034)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.update(GridOffHeapSnapTreeMap.java:1915
)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.remove(GridOffHeapSnapTreeMap.java:1884
)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.remove(GridOffHeapSnapTreeMap.java:108)

        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.remove(GridH2TreeIndex.java:408)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpdate(GridH2Table.java:434)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update(GridH2Table.java:340)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.remove(IgniteH2Indexing.java:586)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.remove(GridQueryProcessor.java:1014)
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.remove(GridCacheQueryManager.java:431
)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.clearIndex(GridCacheMapEntry.java:3760)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.clear(GridCacheMapEntry.java:2615)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter.clearLocally(GridCacheAdapter.java:1247)
        at org.apache.ignite.internal.processors.cache.GridCacheDeploymentManager.onUndeploy0(GridCacheDeploymentManager
.java:265)
        at org.apache.ignite.internal.processors.cache.GridCacheDeploymentManager.access$300(GridCacheDeploymentManager.
java:66)
        at org.apache.ignite.internal.processors.cache.GridCacheDeploymentManager$3.apply(GridCacheDeploymentManager.jav
a:237)
        at org.apache.ignite.internal.processors.cache.GridCacheDeploymentManager.unwind(GridCacheDeploymentManager.java
:208)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader.unwindUndeploys(GridDh
tPreloader.java:748)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(Gr
idDhtPartitionsExchangeFuture.java:574)
        at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePa
rtitionExchangeManager.java:1297)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.lang.Thread.run(Thread.java:745)
[13:10:18,465][SEVERE][exchange-worker-#49%null%][GridCachePartitionExchangeManager] Failed to wait for completion of pa
rtition map exchange (preloading will not start): GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reas
sign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=d37d89a5-d829-4d99-8da4-6c257d577d95, addrs=[0:0:0:0:0
:0:0:1, 127.0.0.1, 192.168.1.112, 2001:0:9d38:6ab8:2c8e:661e:a1b7:c399], sockAddrs=[work-pc/192.168.1.112:0, /0:0:0:0:0:
0:0:1:0, work-pc/192.168.1.112:0, /127.0.0.1:0, /192.168.1.112:0, /2001:0:9d38:6ab8:2c8e:661e:a1b7:c399:0], discPort=0,
order=2, intOrder=2, lastExchangeTime=1455098845119, loc=false, ver=1.5.6#20160130-sha1:b146c0f5, isClient=true], topVer
=3, nodeId8=86d4d306, msg=Node left: TcpDiscoveryNode [id=d37d89a5-d829-4d99-8da4-6c257d577d95, addrs=[0:0:0:0:0:0:0:1,
127.0.0.1, 192.168.1.112, 2001:0:9d38:6ab8:2c8e:661e:a1b7:c399], sockAddrs=[work-pc/192.168.1.112:0, /0:0:0:0:0:0:0:1:0,
 work-pc/192.168.1.112:0, /127.0.0.1:0, /192.168.1.112:0, /2001:0:9d38:6ab8:2c8e:661e:a1b7:c399:0], discPort=0, order=2,
 intOrder=2, lastExchangeTime=1455098845119, loc=false, ver=1.5.6#20160130-sha1:b146c0f5, isClient=true], type=NODE_LEFT
, tstamp=1455098957188], rcvdIds=GridConcurrentHashSet [elements=[]], rmtIds=null, exchId=GridDhtPartitionExchangeId [to
pVer=AffinityTopologyVersion [topVer=3, minorTopVer=0], nodeId=d37d89a5, evt=NODE_LEFT], init=true, ready=false, replied
=false, added=true, initFut=GridFutureAdapter [resFlag=2, res=false, startTime=1455098957260, endTime=1455099018457, ign
oreInterrupts=false, lsnr=null, state=DONE], topSnapshot=null, lastVer=null, partReleaseFut=null, skipPreload=false, cli
entOnlyExchange=false, initTs=1455098957260, oldest=86d4d306-0be1-4cc6-9134-c39556225a56, oldestOrder=1, evtLatch=0, rem
aining=[], super=GridFutureAdapter [resFlag=1, res=class o.a.i.IgniteException: Failed to get value for key: 352. This c
an happen due to a long GC pause., startTime=1455098957260, endTime=1455099018457, ignoreInterrupts=false, lsnr=null, st
ate=DONE]]
class org.apache.ignite.IgniteCheckedException: Failed to get value for key: 352. This can happen due to a long GC pause
.
        at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7005)
        at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:166)
        at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:115)
        at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePa
rtitionExchangeManager.java:1299)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteException: Failed to get value for key: 352. This can happen due to a long GC p
ause.
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2AbstractKeyValueR
ow.java:253)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2AbstractKeyValueR
ow.java:284)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2IndexBase.compareRows(GridH2IndexBase.java:119)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.java:248)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.compare(GridH2TreeIndex.java:49)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeapSnapTreeMap.java
:1350)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap$2.compareTo(GridOffHeapSnapTreeMap.java
:1346)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2102)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.attemptUpdate(GridOffHeapSnapTreeMap.ja
va:2217)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.updateUnderRoot(GridOffHeapSnapTreeMap.
java:2034)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.update(GridOffHeapSnapTreeMap.java:1915
)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.remove(GridOffHeapSnapTreeMap.java:1884
)
        at org.apache.ignite.internal.util.offheap.unsafe.GridOffHeapSnapTreeMap.remove(GridOffHeapSnapTreeMap.java:108)

        at org.apache.ignite.internal.processors.query.h2.opt.GridH2TreeIndex.remove(GridH2TreeIndex.java:408)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpdate(GridH2Table.java:434)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update(GridH2Table.java:340)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.remove(IgniteH2Indexing.java:586)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.remove(GridQueryProcessor.java:1014)
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.remove(GridCacheQueryManager.java:431
)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.clearIndex(GridCacheMapEntry.java:3760)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.clear(GridCacheMapEntry.java:2615)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter.clearLocally(GridCacheAdapter.java:1247)
        at org.apache.ignite.internal.processors.cache.GridCacheDeploymentManager.onUndeploy0(GridCacheDeploymentManager
.java:265)
        at org.apache.ignite.internal.processors.cache.GridCacheDeploymentManager.access$300(GridCacheDeploymentManager.
java:66)
        at org.apache.ignite.internal.processors.cache.GridCacheDeploymentManager$3.apply(GridCacheDeploymentManager.jav
a:237)
        at org.apache.ignite.internal.processors.cache.GridCacheDeploymentManager.unwind(GridCacheDeploymentManager.java
:208)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader.unwindUndeploys(GridDh
tPreloader.java:748)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(Gr
idDhtPartitionsExchangeFuture.java:574)
        at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePa
rtitionExchangeManager.java:1297)
        ... 2 more
{noformat}",,dsetrakyan,neilwightman,sboikov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 12 13:46:13 UTC 2016,,,,,,,,,,"0|i2snpz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/16 15:19;dsetrakyan;Artem, given you you are working on the test suites now, can you please make sure that this is part of a test?;;;","12/Feb/16 08:16;sboikov;This error was possible with configuration when offheap is configured with limited size and swap is disabled. In this case when value was evicted from offheap it was just lost, but for correct queries work evicted value should be passed to indexing.;;;","12/Feb/16 13:46;sboikov;Fixed issue with entry evicted from offheap in master (commit a6b3ded).

Sergey, please verify.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Excessive memory usage in GridCacheTtlManager.,IGNITE-2610,12938102,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,vozerov,vozerov,10/Feb/16 07:18,18/Feb/16 15:44,14/Jul/23 06:20,18/Feb/16 15:44,1.5.0.final,,,1.6,cache,,,,,0,important,,,"*Problem*
When key is updated with new value and new expiry policy, old entry is not removed from ""pendingEntries"". It leads to excessive memory consumption.

*Steps to reproduce*
1) Create a cache
2) Put a lot of entries with same key, but different expiry policies one by one.
3) Observe trashed ""pendingEntries"".

Concrete fix is to be defined.",,agoncharuk,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1661,"11/Feb/16 09:49;agoncharuk;IGNITE-2610_Fixing_TTL_issues.patch;https://issues.apache.org/jira/secure/attachment/12787443/IGNITE-2610_Fixing_TTL_issues.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 18 15:44:49 UTC 2016,,,,,,,,,,"0|i2snhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/16 13:48;vozerov;It appears that only offheap-ed cache is affected.

*Steps to reproduce*:

1) Open IgniteCacheExpiryPolicyAbstractTest

2) Add the following line to cacheConfiguration() method:
{code}
cfg.setMemoryMode(CacheMemoryMode.OFFHEAP_TIERED);
{code}

3) Add the following unit test:
{code}
    public void testCreateUpdate0() throws Exception {
        startGrids(1);

        long ttl = 60_00000L;
        
        final String key = ""key1"";
        
        final IgniteCache<String, String> cache = jcache();
        
        for (int i = 0; i < 10_000_000; i++) {
            final IgniteCache<String, String> cache0 = cache.withExpiryPolicy(new ModifiedExpiryPolicy(new Duration(TimeUnit.MILLISECONDS, ttl)));

            cache0.put(key, key);
        }
    }
{code}

4) Run IgniteCacheAtomicExpiryPolicyTest

5) Observe how GridCacheTtlManager.pendingEntries size grow on each subsequent put.;;;","18/Feb/16 15:44;agoncharuk;Fixed in master (commit 078689b2629d2d9a7dc418f504b7e6384b0da9fc);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheContinuousQueryBatchAck is sent to nodes that doesn't hold cache data,IGNITE-2604,12938003,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ntikhonov,dmagda,dmagda,09/Feb/16 21:39,18/Feb/16 10:16,14/Jul/23 06:20,18/Feb/16 10:16,1.5.0.final,,,1.6,cache,,,,,0,,,,"Presently {{CacheContinuousQueryBatchAck}} is sent to every node of the cluster including client nodes but in fact it has to be sent to backup nodes only. The reason is that the list of the backups is retrieved with {{ctx.discovery().cacheNodes(topVer)}} method which returns all the nodes where at least one cache is registered.

Refer to {{CacheContinuousQueryHandler.sendBackupAcknowledge}} method body
{noformat}
    for (AffinityTopologyVersion topVer : t.get2())
        nodes.addAll(ctx.discovery().cacheNodes(topVer));
{noformat}

The list has to be formed by remote nodes that contain only a particular cache

{noformat}
for (AffinityTopologyVersion topVer : t.get2())
nodes.addAll(ctx.discovery().remoteCacheNodes(cctx.name(), topVer));
{noformat}

and finally the ack has to be sent only if a node is not a client node

{noformat}
for (ClusterNode node : nodes) {
                        if (!node.isClient()) {
                            try {
                                cctx.io().send(node, msg, GridIoPolicy.SYSTEM_POOL);
{noformat}

Next, in my understanding there is no need to register CacheContinuousQueryBatchAck handler on the client side. Presently it's registered in {{CacheContinuousQueryManager.start0}} method.

Finally, since currently the ack is sent to clients as well the following warning floods logs in some unclear cases

{noformat}
20160208 12:56:30.301 WARN [sys-#7%null%] org.apache.ignite.internal.processors.cache.GridCacheIoManager [] - Received message without registered handler (will ignore) [msg=CacheContinuousQueryBatchAck [routineId=df328a9f-6a63-40f7-8a1b-923cfadb6337, updateCntrs={193=1455, 898=1434, 581=307, 584=159, 75=376, 331=233, 652=434, 13=420, 910=923, 143=249, 147=619, 150=1185, 598=338, 728=1168, 90=598, 346=1169, 283=214, 934=388, 615=310, 807=140, 1002=1132, 555=344, 365=215, 941=342, 946=515, 1015=635, 56=614, 378=1130, 827=720, 956=5675}], nodeId=d78ac9e5-60dd-4fa9-a8eb-7c5c36e189af, locTopVer=AffinityTopologyVersion [topVer=248, minorTopVer=1], msgTopVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], cacheDesc=DynamicCacheDescriptor [deploymentId=b8776e0c251-eb7db0e0-c35f-4a05-af44-5295c4cfdc01, locCfg=false, staticCfg=true, started=true, cacheType=USER, template=false, pluginMgr=GridCacheManagerAdapter [starting=false], updatesAllowed=true, startTopVer=null, rcvdOnDiscovery=true, cacheName=GETS_ORDER_MAP]]
{noformat}
",,dmagda,ntikhonov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 17 17:20:23 UTC 2016,,,,,,,,,,"0|i2smvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/16 05:29;dmagda;Reproduced the situation when the log below is printed out on a node in a loop:

{noformat}
20160208 12:56:30.301 WARN [sys-#7%null%] org.apache.ignite.internal.processors.cache.GridCacheIoManager [] - Received message without registered handler (will ignore) [msg=CacheContinuousQueryBatchAck [routineId=df328a9f-6a63-40f7-8a1b-923cfadb6337, updateCntrs={193=1455, 898=1434, 581=307, 584=159, 75=376, 331=233, 652=434, 13=420, 910=923, 143=249, 147=619, 150=1185, 598=338, 728=1168, 90=598, 346=1169, 283=214, 934=388, 615=310, 807=140, 1002=1132, 555=344, 365=215, 941=342, 946=515, 1015=635, 56=614, 378=1130, 827=720, 956=5675}], nodeId=d78ac9e5-60dd-4fa9-a8eb-7c5c36e189af, locTopVer=AffinityTopologyVersion [topVer=248, minorTopVer=1], msgTopVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], cacheDesc=DynamicCacheDescriptor [deploymentId=b8776e0c251-eb7db0e0-c35f-4a05-af44-5295c4cfdc01, locCfg=false, staticCfg=true, started=true, cacheType=USER, template=false, pluginMgr=GridCacheManagerAdapter [starting=false], updatesAllowed=true, startTopVer=null, rcvdOnDiscovery=true, cacheName=GETS_ORDER_MAP]]

{noformat}

Steps to reproduce:
1) Start server node A;
2) Start client node B that executes continuous query over ""test"" cache;
3) Start client node C that starts putting data into ""test"" cache;
4) Start client node D, that neither gets a reference to cache ""test"" (ignite.cache(""test"") nor have it in its {{IgniteConfiguration}}. This not will be flooded with the message above because of the issue from the description;;;","12/Feb/16 18:04;ntikhonov;Fixed notes. Added tests.;;;","16/Feb/16 13:13;sboikov;Reviewed, have some comments:
- need to use {{ctx.discovery().cacheAffinityNodes}} instead of {{ctx.discovery().remoteCacheNodes}};
- for determine local node should be use {{node.isLocal()}};
- please avoid duplicated code in tests.;;;","16/Feb/16 17:33;ntikhonov;Removed duplicate code from tests. Replaced incorrect methods calls.;;;","17/Feb/16 17:20;dmagda;Can this ticket be closed?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OSGi support for objects passed through CacheConfiguration,IGNITE-2603,12937923,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,dmagda,dmagda,09/Feb/16 17:19,15/Feb/16 09:58,14/Jul/23 06:20,12/Feb/16 13:10,1.5.0.final,,,1.6,,,,,,0,,,,"If a user sets a custom class loader with {{IgniteConfiguration.setClassLoader}} then it always has to be used when the following objects passed to {{CacheConfiguration}} are being deserialized:

- CacheStore factory;
- CacheStoreSessionListener factory;
- CachePluginConfiguration;
- AffinityKeyMapper;
- IgnitePredicate (as a node filter in CacheConfiguration.setNodeFilter(...));
- CacheEntryListenerConfiguration class with factories for CacheEntryListener and CacheEntryEventFilter;

In case of OSGi class loaders can be quite exotic. As an example {{CacheStore}} factory loaded from bundle A, can contain objects loaded from bundle B and bundle C. When such class loader is set as {{IgniteConfiguration.setClassLoader}} then deserialization of the {{CacheStore}} factory must work fine as well.",,avinogradov,avk47,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1523,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 12 13:10:39 UTC 2016,,,,,,,,,,"0|i2sme7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Feb/16 13:10;avinogradov;All listed classes implemetations added to extdata/p2p.
Added new test uses these implementations via external classloader.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enum arguments in SQL queries are not considered with BinaryMarshaller,IGNITE-2598,12937806,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,dmagda,dmagda,09/Feb/16 09:03,05/Aug/16 16:26,14/Jul/23 06:20,20/Feb/16 09:02,1.5.0.final,,,1.6,general,,,,,0,important,,,"Queries like the one below doesn't work with {{Enum}} returning a wrong result when binary marshaller is used.

{noformat}
SqlQuery<Long, Event> query = new SqlQuery<Long, Event>(Event.class, ""type = ?"");
query.setArgs(EventType.EventA);
{noformat}

The same query works perfectly fine if optimized marshaller is enabled instead.

Attached the test that reproduces the issue.",,dkarachentsev,dmagda,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/16 09:04;dmagda;ExampleNodeStartup.java;https://issues.apache.org/jira/secure/attachment/12787025/ExampleNodeStartup.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 05 16:26:22 UTC 2016,,,,,,,,,,"0|i2slo7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/16 07:35;dkarachentsev;This task is the same as https://issues.apache.org/jira/browse/IGNITE-2208
Solution is ready and will be available soon.;;;","15/Feb/16 08:28;dkarachentsev;https://github.com/apache/ignite/pull/480;;;","15/Feb/16 12:04;vozerov;Dmitriy,

Please address the following issues:
1) if-condition looks overly complex to me. Looks like it could be reduced to 
{code}
if (o1 instance of BinaryEnumObjectImpl && (BinaryEnumObjectImpl)o1.isTypeEquals(o2.getClass()))) {
    ...
}
{code}

Moreover, ""isTypeEquals"" is a good candidate to be placed on public API in BinaryObject interface. Let's do not do it now, but lets relax ""Class<? extends Enum>"" to ""Class"". This way ""o2 instanceof Enum"" could be moved inside BinaryEnumObjectImpl.

2) Please remove the following line from test because it will reduce amount of test cases (OptimizedMarshaller will not be tested):
{code}
c.setMarshaller(new BinaryMarshaller());
{code}

3) We need more test cases. Minimal set:
a) ==
b) <
c) >
d) object's field is null
e) Passed enum argument is null,;;;","15/Feb/16 13:06;dkarachentsev;Vladimir, fixed. Please review.;;;","13/Jul/16 06:46;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/868

    IGNITE-2598 - Enum arguments in SQL queries are not considered with B…

    …inaryMarshaller.
    
    - Query arguments are converted to binary objects now if binary marshaller used.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2208

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/868.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #868
    
----
commit 02bcb2de7885df0ca6698e675aaf0e7d874664a6
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-07-12T15:58:31Z

    IGNITE-2598 - Enum arguments in SQL queries are not considered with BinaryMarshaller.
    
    - Query arguments are converted to binary objects now if binary marshaller used.

----
;;;","05/Aug/16 16:26;githubbot;Github user dkarachentsev closed the pull request at:

    https://github.com/apache/ignite/pull/868
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cached web session requires setAttribute() to be called on each update,IGNITE-2594,12937780,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,vkulichenko,vkulichenko,09/Feb/16 04:50,19/Apr/16 03:55,14/Jul/23 06:20,18/Apr/16 17:14,,,,1.6,general,,,,,1,,,,Issue is described here: http://stackoverflow.com/questions/35268184/updating-apache-ignite-websession-attributes,,dmagda,nickgr6,v.pyatkov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 19 03:55:15 UTC 2016,,,,,,,,,,"0|i2slif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Apr/16 13:27;v.pyatkov;Patch is available.
Could someone check it?;;;","18/Apr/16 17:14;v.pyatkov;Attaching pool request: https://github.com/apache/ignite/pull/654;;;","19/Apr/16 03:55;dmagda;Thanks Vladislav. Reviewed and merged this fix into the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In JCloude variant of discovery Zones do not save.,IGNITE-2593,12937779,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,09/Feb/16 04:38,09/Feb/16 05:48,14/Jul/23 06:20,09/Feb/16 04:40,1.6,,,,wizards,,,,,0,,,,,,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 09 05:48:55 UTC 2016,,,,,,,,,,"0|i2sli7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Feb/16 04:40;vsisko;Fixed saving of zones;;;","09/Feb/16 05:48;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCache.remove() returns false for LOCAL OFFHEAP_TIERED cache inside OPTIMISTIC REPEATABLE_READ transaction.,IGNITE-2590,12937594,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ashutak,ashutak,08/Feb/16 18:23,18/Feb/16 12:19,14/Jul/23 06:20,18/Feb/16 12:19,1.5.0.final,,,1.6,,,,,,0,,,,"IgniteCache.remove() returns {{false}} for LOCAL OFFHEAP_TIERED cache inside OPTIMISTIC REPEATABLE_READ transaction. But {{cache.get()}} before and after {{remove}} retuns right values.

{code}
    public static void main(String[] args) {
        try(Ignite ignite = Ignition.start(new IgniteConfiguration())) {
            CacheConfiguration cfg = new CacheConfiguration()
                .setName(""myCache"")
                .setCacheMode(LOCAL)
                .setAtomicityMode(TRANSACTIONAL)
                .setMemoryMode(OFFHEAP_TIERED)
                ;

            IgniteCache cache = ignite.getOrCreateCache(cfg);

            final String key = ""key1"";

            TransactionConcurrency concurrency = OPTIMISTIC;
            TransactionIsolation isolation = REPEATABLE_READ;

            try (Transaction tx = ignite.transactions().txStart(concurrency, isolation)) {
                cache.put(key, 1); 

                tx.commit();
            }

            try (Transaction tx = ignite.transactions().txStart(concurrency, isolation)) {
                Object val = cache.get(key); // Returns 1.

                System.out.println(""Value: "" + val);

                tx.commit();
            }

            try (Transaction tx = ignite.transactions().txStart(concurrency, isolation)) {

                boolean remove = cache.remove(key);

                System.out.println(""Removed: "" + remove);

                tx.commit();
            }

            try (Transaction tx = ignite.transactions().txStart(concurrency, isolation)) {
                Object val = cache.get(key); // Returns null.

                System.out.println(""Value: "" + val);

                tx.commit();
            }
        }
    }
{code}

It's corner case. For any other MEMORY_MODE it works. 
For any other concurrency or isolation levels it works.
It also works if execute {{cache.get()}} before remove inside transaction.
Test failss for both dynamic and static caches.",,ashutak,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2521,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 18 12:19:37 UTC 2016,,,,,,,,,,"0|i2skl3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Feb/16 08:40;sboikov;Found reason for this: for single 'remove' we do not try to unmarshal entry value stored in offheap. This also can have some impact on performance for non LOCAL cache. Fix is simple: just need to pass correct 'unmarshal' flag to entry.innerGet when key is enlisted in transaction.;;;","18/Feb/16 12:19;sboikov;Fixed in master (commit 9b5dcfe).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected exception during cache update,IGNITE-2587,12937491,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,skozlov,skozlov,skozlov,08/Feb/16 13:14,16/Feb/16 13:18,14/Jul/23 06:20,10/Feb/16 11:13,1.5.0.final,,,1.6,,,,,,0,,,,"1. Start server node
2. Start client node (see the code in IGNITE-2586)
3. Server node failed:
{noformat}
[16:05:03,866][SEVERE][sys-#17%null%][GridDhtAtomicCache] <cache_33cb560a_05755252525548878> Unexpected exception during cache update
java.lang.UnsupportedOperationException
	at org.apache.ignite.internal.binary.BinaryObjectOffheapImpl.finishUnmarshal(BinaryObjectOffheapImpl.java:363)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryManager.onEntryUpdated(CacheContinuousQueryManager.java:243)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAtomicCache.java:2070)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1407)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1282)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processNearAtomicUpdateRequest(GridDhtAtomicCache.java:2692)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$600(GridDhtAtomicCache.java:128)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$5.apply(GridDhtAtomicCache.java:257)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$5.apply(GridDhtAtomicCache.java:255)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:582)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:280)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:204)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:80)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:163)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:821)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:784)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{noformat}","Windows 10, Oracle JDK 1.7.0_80-b15
",sboikov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/16 13:15;skozlov;client_output.txt;https://issues.apache.org/jira/secure/attachment/12786802/client_output.txt","08/Feb/16 13:15;skozlov;ignite-33cb560a.0.log;https://issues.apache.org/jira/secure/attachment/12786804/ignite-33cb560a.0.log","08/Feb/16 13:15;skozlov;ignite-5e9294d1.0.log;https://issues.apache.org/jira/secure/attachment/12786803/ignite-5e9294d1.0.log","08/Feb/16 13:15;skozlov;server_output.txt;https://issues.apache.org/jira/secure/attachment/12786805/server_output.txt",,,,,,,,,,,,,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 10 11:13:07 UTC 2016,,,,,,,,,,"0|i2sjyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Feb/16 09:00;sboikov;Investigated, there are two issues:
- temporary object created over offheap pointer (BinaryObjectOffheapImpl) is not unwrapped in OFFHEAP_VALUES mode
- for OFFHEAP_VALUES, OFFHEAP_TIERED modes old value is not always deserialized for continous query

Need to add continous query tests for OFFHEAP_VALUES, OFFHEAP_TIERED modes, also tests should use not only primitive keys/values,;;;","10/Feb/16 11:13;sboikov;Hi Sergey,

This issue is fixed in 'master' branch (commit 4c05fc0), could you verify?

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JVM crash under load test,IGNITE-2586,12937464,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,08/Feb/16 10:44,16/Feb/16 13:18,14/Jul/23 06:20,12/Feb/16 13:44,1.5.0.final,,,1.6,,,,,,0,,,,"1. Start 4 servers with iron.xml 
2. Compile and start 4 clients with iron_client.xml:
{noformat}
C:\Java\jdk1.7.0_80\bin\java -classpath ""C:\work\apache-ignite-fabric-1.5.0.final\libs\*;C:\work\apache-ignite-fabric-1.5.0.final\libs\ignite-spring\*;C:\work\apache-ignite-fabric-1.5.0.final\libs\ignite-indexing\*;C:\gg-qa\testtools\target\ignite-test-tools-1.0.0-SNAPSHOT.jar"" -Xmx256m -Xms256m -DIGNITE_QUIET=false org.apache.ignite.testtools.Iron -config=c:\work\iron_client.xml -prefix=cache_ -keys=100000 -load-keys=30 -duration-per-cache=30 -operation-weights=put:30,get:30,remove:5,putall:2,getall:5,removeall:10,replace:10,scanquery:5
{noformat}

3. Wait until one server node crashes. Logs are attched","Windows 10, Oracle JDK 1.7.0_80-b15",sboikov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/16 10:45;skozlov;Iron.java;https://issues.apache.org/jira/secure/attachment/12786783/Iron.java","08/Feb/16 10:45;skozlov;hs_err_pid12128.log;https://issues.apache.org/jira/secure/attachment/12786782/hs_err_pid12128.log","08/Feb/16 10:45;skozlov;hs_err_pid4128.log;https://issues.apache.org/jira/secure/attachment/12786781/hs_err_pid4128.log","08/Feb/16 10:45;skozlov;iron.xml;https://issues.apache.org/jira/secure/attachment/12786784/iron.xml","08/Feb/16 10:45;skozlov;iron_client.xml;https://issues.apache.org/jira/secure/attachment/12786785/iron_client.xml",,,,,,,,,,,,,,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 12 13:44:30 UTC 2016,,,,,,,,,,"0|i2sjsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Feb/16 11:22;skozlov;I removed {{cache.clear()}} and the issue gone away.;;;","11/Feb/16 06:55;sboikov;Looks like that GridCacheMapEntry.clear should be fixed to check that entry is not obsolete.;;;","12/Feb/16 13:44;sboikov;Fixed GridCacheMapEntry.clear in master (commit a6b3ded).

Sergey, please verify.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add limit on minimal value of IGFS IPC port configuration,IGNITE-2575,12937431,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,vozerov,vsisko,vsisko,08/Feb/16 07:38,10/Feb/16 09:39,14/Jul/23 06:20,10/Feb/16 09:38,1.5.0.final,,,1.6,igfs,,,,,0,,,,"# Configure IPC configuration of IGFS with port equal 0. 
# Node start successfully.
Automatically configured port is not available to receive from configuration and IGFS stay unavailable for external process.
I suggest add check like this: 
{code}
assertParameter(port > 1023, ""port > 1023"");
{code}",,dkarachentsev,githubbot,vozerov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 10 09:39:10 UTC 2016,,,,,,,,,,"0|i2sjl3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/16 07:11;vozerov;Highlights:
1) FileSystemConfiguration.getIpcEndpointConfiguration - this is where all starts
2) IgfsProcessorValidationSelfTest;;;","10/Feb/16 08:38;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/469

    IGNITE-2575 Add limit on minimal value of IGFS IPC port configuration.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dkarachentsev/ignite master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/469.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #469
    
----
commit 946dccb9e98419bf9921b12607667d74ef87ecda
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-02-10T08:33:04Z

    IGNITE-2575 Add limit on minimal value of IGFS IPC port configuration.

----
;;;","10/Feb/16 09:03;dkarachentsev;https://github.com/apache/ignite/pull/469;;;","10/Feb/16 09:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/469
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Responsive web design,IGNITE-2571,12937427,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,kuaw26,kuaw26,08/Feb/16 07:21,24/Mar/17 12:54,14/Jul/23 06:20,24/Mar/17 12:54,1.5.0.final,,,,wizards,,,,,0,,,,This is a parent ticket for all issues about responsive web design,,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-02-08 07:21:46.0,,,,,,,,,,"0|i2sjk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TCK fails when client nodes are participating in the cluster.,IGNITE-2565,12937034,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,avinogradov,avinogradov,05/Feb/16 13:29,15/Feb/16 09:22,14/Jul/23 06:20,12/Feb/16 13:47,1.5.0.final,,,1.6,cache,,,,,0,important,,,"TCK suite fail periodically fails with assetrions about CacheHitPercentage.
I see that a lot of changes was made last two months where added logic with invoking of metrics.onRead(); possible this affects statictic counting.

Typical stacktrace:

java.lang.AssertionError: expected:<100.0> but was:<50.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.jsr107.tck.management.CacheMBStatisticsBeanTest.testCacheStatisticsInvokeEntryProcessorRemove(CacheMBStatisticsBeanTest.java:424)",,agura,avinogradov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 12 13:47:41 UTC 2016,,,,,,,,,,"0|i2sh53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/16 14:21;vershov;Most likely due to client nodes in the cluster.;;;","11/Feb/16 09:25;vershov;I've take a look on some of that typical issues and it looks like they are actually not typical and have different reasons. The last one:
{noformat}
java.lang.AssertionError: expected:<0> but was:<1>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.jsr107.tck.management.CacheMBStatisticsBeanTest.testCacheStatistics(CacheMBStatisticsBeanTest.java:104)
{noformat}
Most likely to be related with counting miss logic on the server side, which is not linked to IGNITE-2483, and should be fixed at separated ticket. 
;;;","11/Feb/16 18:04;agura;This test fails in cases when rebalancing is not finished for current topology. See {{org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache#updateAllAsyncInternal0}}:

{code}
boolean sndPrevVal = !top.rebalanceFinished(req.topologyVersion())
{code}

As result {{GridCacheMapEntry#innerUpdate}} method invoked with {{retval == true}} and performs get operation. It leads to update ""cache miss"" metric becasue it was the first put in test.

{code}
if (metrics && cctx.cache().configuration().isStatisticsEnabled() && needVal) {
    // PutIfAbsent methods mustn't update hit/miss statistics
    if (op != GridCacheOperation.UPDATE || F.isEmpty(filter) || !cctx.putIfAbsentFilter(filter))
        cctx.cache().metrics0().onRead(oldVal != null);
}
{code}

HitPercentage problem is related with the same behavior.  The first {{put}} in the test performs {{get}} and miss metrics incremented. {{RemoveEntryProcessor}} perfroms {{get}} and hit metric incremented (gets metric equals two). As result we have {{hits / gets * 100 == 50}}.;;;","11/Feb/16 18:41;agura;JFI: TCK suite starts only one node.;;;","12/Feb/16 07:49;sboikov;Rebalanced topology version is updated asynchronously from exchange worker thread (after exchange future is done). It is safe to add code updating rebalanced topology version in 'GridDhtPartitionTopology.beforeExchange', so it will be updated before initial exchnage is done and Ignite API can be used.;;;","12/Feb/16 09:35;vershov;Thanks Andrey and Semen for solving this one!
I'm seriously, thanks.;;;","12/Feb/16 13:47;sboikov;Issue with asynchronius rebalanced topology version update fixed in master (commit a6b3ded).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: Memory reallocation callback doesn't work.,IGNITE-2564,12937013,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,05/Feb/16 11:13,10/Feb/16 12:01,14/Jul/23 06:20,10/Feb/16 12:01,1.5.0.final,,,1.6,platforms,,,,,0,,,,"*Steps to reproduce*:
1) Start a CPP node.
2) Put large string to cache (say, >1024 chars long)
3) Now try to read this string using Cache.Get() method. PlatformNoCallbackException exception is thrown.

*Root cause*: 
External memory reallocation callback is not set.

*Solution*:
Add memory reallocation callback to ignite_environment.cpp",,githubbot,isapego,k100000,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/16 12:38;k100000;putgetexample.cpp;https://issues.apache.org/jira/secure/attachment/12786469/putgetexample.cpp","05/Feb/16 12:38;k100000;trade.h;https://issues.apache.org/jira/secure/attachment/12786470/trade.h",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 10 12:01:21 UTC 2016,,,,,,,,,,"0|i2sh0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Feb/16 12:38;k100000;Hi,

Pls find attached the files I tested with in the 'example' solution of cpp client. Just add trade.h to the header list & replace main with the one attached, it should be easy to replicate by passing different sizes in rand_alnum_str call of 'PutGetTrade' method. 

Some details about env:

Windows 7  x64
Visual Studio 2010/2012  
jdk1.7.0_71 x64
JAVA_OPTS=-d64 -Xms16G -Xmx16G -XX:PermSize=512M -XX:MaxPermSize=1G -XX:MaxDirectMemorySize=512M

I also replicated on 1.5b. 

Thanks and let me know if you need additional details.

Claudiu;;;","05/Feb/16 18:00;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/460

    IGNITE-2564: MemoryReallocate handler added.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/isapego/ignite ignite-2564

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/460.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #460
    
----
commit 8afc48cd89b44ee529087f52a2fc370acb7663d0
Author: isapego <isapego@gridgain.com>
Date:   2016-02-05T15:30:35Z

    IGNITE-2564: MemoryReallocate handler added.

commit b14ad48d5be6e29125126fa6a9583851d7e59e4e
Author: isapego <isapego@gridgain.com>
Date:   2016-02-05T17:58:44Z

    IGNITE-2564: Test added.

----
;;;","05/Feb/16 18:18;isapego;Added {{MemoryReallocation}} callback and test for the case.;;;","05/Feb/16 20:28;k100000;I just tested and it works now, thanks for the quick turnaround!;;;","08/Feb/16 07:05;vozerov;Igor,

My comments on the patch:
1) ignite_environment.cpp::MemoryReallocate - docs are missing.

2) cache_test.cpp::TestGetBigString - looks not reliable to me. Essentially, we want to ensure that 
- reallocation routine works;
- reallocation routine is invoked through callback. 
Should default be changed from 1024 to 10240 and your test will check nothing.

I propose to add the following tests:
1) Isolated reallocation tests. Ensure that memory content is valid afterwards, memory can be reallocated again, etc.
2) Integration test - this is what your ""TestGetBigString"" do already. but instead of using hard-coded 10000 lets move ""1024"" from ignite_environment.cpp::AllocateMemory() to constant and use [CONSTANT * X] for string length. This will give us more confidence that we really test this logic.;;;","08/Feb/16 14:22;isapego;Vladimir,

Done. Also, I have changed memory reallocation callback logic a little, so please take a look at it also.;;;","09/Feb/16 06:33;vozerov;Igor, my comments:
1) I do not see a single check that memory content remains the same after reallocation.
2) interop_memory_test.cpp is not added to autotools.;;;","09/Feb/16 11:46;isapego;Done;;;","10/Feb/16 12:01;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/460
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queries: ArrayIndexOutOfBoundsException when using BOOL_AND,IGNITE-2563,12937004,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,ptupitsyn,ptupitsyn,05/Feb/16 10:43,24/Feb/16 03:08,14/Jul/23 06:20,19/Feb/16 02:50,1.1.4,,,1.6,cache,,,,,0,,,,"The following fields query causes an exception at GridSqlAggregateFunction.ctor(boolean distinct, int typeId).
typeId is 12.
{code}
select bool_and (T0._key < ?) from """".Person as T0 where (T0._key > ?)
{code}

The query is valid and executes correctly in the H2 console.

Looks like we do not support BOOL_AND aggregate. There should be a user-friendly exception describing the problem. Current exception message is ""12"".",,dmagda,githubbot,ptupitsyn,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 24 03:08:48 UTC 2016,,,,,,,,,,"0|i2sgyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Feb/16 03:53;shroman;Caused by the mismatch of what is supported in H2 and Ignite.;;;","12/Feb/16 04:48;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/476

    IGNITE-2563: More descriptive exception on unsupported aggregation.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-2563

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/476.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #476
    
----
commit 4e8dfc810de4a81819ada83428ebb896a3bfd5ae
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-02-12T04:35:12Z

    IGNITE-2563: More descriptive exception on unsupported aggregation.

----
;;;","12/Feb/16 04:51;shroman;More informative exception message: _Unsupported expression: BOOL_AND(T0._KEY < ?1) [type=Aggregate]_;;;","12/Feb/16 05:03;shroman;TC tests of 'Ignite H2 Indexing' category are passed.;;;","13/Feb/16 14:37;shroman;Pavel, if you are ok with this fix I will merge and close it.;;;","19/Feb/16 02:48;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/476
;;;","24/Feb/16 03:08;shroman;Merged to the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction hangs if entry processor is not serializable,IGNITE-2559,12936930,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ntikhonov,vkulichenko,vkulichenko,05/Feb/16 01:22,18/Aug/16 15:25,14/Jul/23 06:20,18/Aug/16 15:25,,,,1.8,,,,,,0,,,,"Test attached.

If entry processor doesn't implement {{Serializable}}, the exception is thrown, but transaction hangs forever. If you try to join more nodes after this happens, they will not be able to do this as well.

Hanged thread dump:
{noformat}
""main"" #1 prio=5 os_prio=31 tid=0x00007f8b65800000 nid=0x1703 waiting on condition [0x0000700000218000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x000000076ca274f8> (a org.apache.ignite.internal.util.future.GridEmbeddedFuture)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:967)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1283)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:157)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:117)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$24.op(GridCacheAdapter.java:2296)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$24.op(GridCacheAdapter.java:2283)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.syncOp(GridCacheAdapter.java:4291)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invoke0(GridCacheAdapter.java:2283)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invoke(GridCacheAdapter.java:2261)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.invoke(IgniteCacheProxy.java:1518)
	at TxTest.main(TxTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
{noformat}",,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/16 01:24;vkulichenko;TxTest.java;https://issues.apache.org/jira/secure/attachment/12786372/TxTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Aug 18 15:25:28 UTC 2016,,,,,,,,,,"0|i2sghz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Aug/16 21:38;ntikhonov;In this case first transaction does't release a locks on near node. The second transaction sends NearLockRequest and doesn't receive NearLockResponce on the lock request.;;;","15/Aug/16 16:27;ntikhonov;https://github.com/apache/ignite/pull/951;;;","17/Aug/16 11:07;sboikov;Hi Nikolay,
I reviewed fix, have some comments:
- test CacheEntryProcessorNonSerialazibleTest is not included in test suite
- in GridNearTxFinishFuture you added one more condition in the 'finish' method ((tx.pessimistic() && !commit) /* Need to release lock on primary nodes */'). For me this new condition looks unnecessary, could you please remove it and check if it breaks anything?
- is it possible to do not add new field in GridNearTxFinishFuture? GridNearTxLocal alread has 'commitError' field which is initialized in this case, can we use it instead?

Thanks!;;;","17/Aug/16 20:16;ntikhonov;Thank you for your review. I've fixed your notes except second. In case one phase commit we won't send finish request to near node. In current behavior that we're sending finish request on near node for OPC when only have near cache (GridNearTxFinishFuture#needFinishOnePhase). If remove the condition then hangs {{#testPessimisticOnePhaseCommitFullSync}} and {{#testPessimisticOnePhaseCommit}} tests.;;;","18/Aug/16 06:59;sboikov;Ok, if new condition is needed only for onePhase tx, then it is better to move it inside 'needFinishOnePhase' method, I did this change, please take a look.
Also looks like it makes sense to add tests with near cache, could you please do this?

Thanks!;;;","18/Aug/16 15:25;ntikhonov;I've added tests and merged changes. Thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Affinity.mapKeyToNode() method throw ""ArithmeticException: / by zero"" for LOCAL dinamically started cache",IGNITE-2554,12936747,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ashutak,ashutak,ashutak,04/Feb/16 14:55,29/Feb/16 12:13,14/Jul/23 06:20,29/Feb/16 12:12,,,,,,,,,,0,,,,"Affinity.mapKeyToNode() method throw ""ArithmeticException: / by zero"" for LOCAL cache.

The following code 
{code}
    public static void main(String[] args) {
        try (Ignite ignite = Ignition.start(new IgniteConfiguration())) {
            CacheConfiguration cc = new CacheConfiguration();

            cc.setCacheMode(LOCAL);
            cc.setName(""myCache"");

            ignite.getOrCreateCache(cc);

            ignite.affinity(""myCache"").mapKeyToNode(""myKey"");
        }
    }
{code}

Produce the following exception.

{noformat}
Exception in thread ""main"" java.lang.ArithmeticException: / by zero
	at org.apache.ignite.internal.processors.cache.affinity.GridCacheAffinityImpl.mapKeysToNodes(GridCacheAffinityImpl.java:210)
	at org.apache.ignite.internal.processors.cache.affinity.GridCacheAffinityImpl.mapKeyToNode(GridCacheAffinityImpl.java:187)
	at main
{noformat}

The issue is {{cctx.discovery().cacheAffinityNodes(cctx.name(), topVer)}} returns empty nodes collection.

If cache started on node start then there is no exception.",,ashutak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2521,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Feb 29 12:12:32 UTC 2016,,,,,,,,,,"0|i2sfdb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Feb/16 18:24;ashutak;Investigation results.

Possible fixes:
# A simple fix. We can always set {{nodesCnt}} to 1 at {{mapKeysToNodes}} for local cache. It should fix the issue.
# Ignite does not store an affinity assignment history for local cache and always operate with {{AffinityTopologyVersion(1)}}. At the test above, an information about dynamically started ""myCache"" is available only for {{AffinityTopologyVersion(1, 1)}}, but Ignite does not store it. A good fix for the issue (and Ignite) is:
#* There is no need to store all history for local cache. So, we need just update the head topology version (see GridAffinityAssignmentCache.head field)
#* We must return right topology version at all project. See, for example, {{GridCacheAffinityManager}} and the following code
{code}
        if (cctx.isLocal())
            topVer = new AffinityTopologyVersion(1);
{code};;;","29/Feb/16 12:12;ashutak;The simple fix was done, reviewed and merged in bounds of IGNITE-2521 (#953b575).

Did issue (IGNITE-2733) to fix it properly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eviction policy must consider either max size or max entries count,IGNITE-2552,12936707,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,Alexey Kuznetsov,dmagda,dmagda,04/Feb/16 12:25,13/Mar/17 08:02,14/Jul/23 06:20,10/Mar/17 14:39,1.5.0.final,,,2.0,cache,,,,,1,,,,"Presently both max size and max entries number are considered by eviction policy logic even if the only one is set by user explicitly.

This behavior must be reworked in a way that if one of the parameters is set explicitly then only it will be used by eviction policy while the other one will be ignored.",,agura,Alexey Kuznetsov,dmagda,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 13 08:02:18 UTC 2017,,,,,,,,,,"0|i2sf4f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jul/16 08:42;dmagda;The documentation must be updated as well to avoid further confusions between these parameters.;;;","14/Feb/17 13:43;Alexey Kuznetsov;[~dmagda] what if user sets them both, and wants them to work together? Shouldn't the eviction policy take both values into account? I would suggest solution as following : if user sets them both then policy process them both, else if user set one - then processed would be the only one.

BTW, this ticket covers only main 4 eviction policies(Fifo, Random, Lru , Sorted), isn't it ? 
What if max entries was changed explicitly and after a while we decided eviction policy must ignore max entries and take max size into account ? 

Now we've got the following eviction policy logic(shrink() causes entry eviction):
{quote}
    protected void shrink() {
        long maxMem = this.maxMemSize;

        if (maxMem > 0) {........}
{quote}
If maxMemSize was not set explicitly , it will remain zero and will not be considered. So what is this ticket about ?  ;;;","14/Feb/17 18:33;dmagda;[~Alexey Kuznetsov], presently both the max size and max number of entries parameters are used by eviction policies all the time even if the user sets only one of them. Both parameters have to be used only if both of them are set explicitly by user.

For instance, if the user sets ""max size"" then ""max number of entries"" must be ignored and vice verse.

This should work similarly for all the policies. Also we don't need to support parameters dynamic change in runtime. This configuration is static and all the changes happen in runtime are ignored.
;;;","16/Feb/17 14:03;githubbot;GitHub user voipp opened a pull request:

    https://github.com/apache/ignite/pull/1545

    IGNITE-2552 EvictionPolicies refactored, logic changed

    tests are in subclasses of EvictionAbstractTest

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/voipp/ignite IGNITE-2552

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1545.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1545
    
----
commit 651deeb058854e25b74368508ead4def31a016dc
Author: voipp <aleksaero@gmail.com>
Date:   2017-02-15T08:54:48Z

    IGNITE-2552 EvictionPolicies refactored, logic changed

----
;;;","01/Mar/17 15:04;agura;I've reviewed your changes and have some comments (mostly cosmetic).
Could you please fix this comment? See review in Upsource for details.
;;;","06/Mar/17 12:42;agura;[~Alexey Kuznetsov],

a couple comments are added. Please fix anr run tests on TC. If TC will be ok I'll merge your changes into master branches.

Thanks.;;;","07/Mar/17 15:50;agura;[~Alexey Kuznetsov], 

looks good for me. Did you run tests on TeamCity?;;;","09/Mar/17 07:19;Alexey Kuznetsov;[~agura] yes i did. My code have not crashed any test.;;;","09/Mar/17 11:14;agura;[~Alexey Kuznetsov]

I don't see any {{pull/1545/head}} builds at TC. I've ran it and waiting for results.;;;","09/Mar/17 11:19;Alexey Kuznetsov;[~agura] perhaps smbd removed it from TC? I started the build the day before yesterday and it passed succesfully;;;","10/Mar/17 14:37;agura;[~Alexey Kuznetsov]

I've merged your changes into master branch with some cosmetic changes (code style related). Also perfromance issue was found and fixed (invoke {{size()}} method instead of {{sizex()}} changes constant complexity to linear one). All code review related fixes are represented as separate commit.

Thanks for your contribution!;;;","10/Mar/17 14:47;Alexey Kuznetsov;[~agura] Thanks;;;","13/Mar/17 08:02;githubbot;Github user voipp closed the pull request at:

    https://github.com/apache/ignite/pull/1545
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: NPE in GridMergeIndex,IGNITE-2542,12936317,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dmagda,dmagda,03/Feb/16 12:00,15/Feb/16 08:01,14/Jul/23 06:20,15/Feb/16 08:01,1.5.0.final,,,1.6,cache,,,,,0,important,,,"The following NPE was detected in the latest version of Ignite.

{noformat}
[19:43:07,249][SEVERE][pub-#9%null%][GridJobWorker] Failed to execute job due to unexpected runtime exception [jobId=5003a84a251-c08c1735-63cd-4126-8b2b-20b2c86b6b9b, ses=GridJobSessionImpl [ses=GridTaskSessionImpl [taskName=o.a.i.i.processors.cache.query.jdbc.GridCacheQueryJdbcTask, dep=LocalDeployment [super=GridDeployment [ts=1454459447257, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@8f8acd0, clsLdrId=9d7e984a251-c08c1735-63cd-4126-8b2b-20b2c86b6b9b, userVer=0, loc=true, sampleClsName=java.lang.String, pendingUndeploy=false, undeployed=false, usage=0]], taskClsName=o.a.i.i.processors.cache.query.jdbc.GridCacheQueryJdbcTask, sesId=3003a84a251-5b26f849-8f0b-4f17-9ea4-225f76870e8c, startTime=1454460082285, endTime=9223372036854775807, taskNodeId=5b26f849-8f0b-4f17-9ea4-225f76870e8c, clsLdr=sun.misc.Launcher$AppClassLoader@8f8acd0, closed=false, cpSpi=null, failSpi=null, loadSpi=null, usage=1, fullSup=false, subjId=5b26f849-8f0b-4f17-9ea4-225f76870e8c, mapFut=IgniteFuture [orig=GridFutureAdapter [resFlag=0, res=null, startTime=1454460082292, endTime=0, ignoreInterrupts=false, lsnr=null, state=INIT]]], jobId=5003a84a251-c08c1735-63cd-4126-8b2b-20b2c86b6b9b]]
javax.cache.CacheException: Failed to run reduce query locally.
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:673)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$2.iterator(IgniteH2Indexing.java:956)
	at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:61)
	at org.apache.ignite.internal.processors.cache.query.jdbc.GridCacheQueryJdbcTask$JdbcDriverJob.execute(GridCacheQueryJdbcTask.java:240)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:509)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6397)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:503)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:456)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1166)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1770)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:821)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:784)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMergeIndexUnsorted$1.hasNext(GridMergeIndexUnsorted.java:97)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMergeIndex$IteratorCursor.next(GridMergeIndex.java:327)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMergeIndex$FetchingCursor.next(GridMergeIndex.java:358)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:614)
	... 16 more
{noformat}",,dmagda,sboikov,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Feb 15 08:01:29 UTC 2016,,,,,,,,,,"0|i2scpr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Feb/16 17:14;sboikov;Sergi, please review fix for this issue in branch ignite-2542.

Added test reproducing issue. NPE was possible for 'dummy' index which does not initialize table. Method GridMergeTable.checkSourceNodesAlive just access related GridMergeIndex, so I moved this method to GridMergeIndex class.;;;","10/Feb/16 19:27;sergi;With what should I compare it?;;;","10/Feb/16 19:29;sboikov;Please compare with master.;;;","10/Feb/16 20:51;sergi;I see too much changes if I compare it to master, thats why I'm asking. Looks like something is wrong.;;;","11/Feb/16 05:38;sboikov;Please try to merge master to ignite-2542 before comparing, there shouldn't be any conflicts (I just merged it).;;;","15/Feb/16 07:47;sergi;Looks good to me.;;;","15/Feb/16 08:01;sboikov;Merged fix in master (commit 9c4f811).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential NPE in GridCacheUpdateAtomicResult.,IGNITE-2541,12936312,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,03/Feb/16 10:57,04/Feb/16 06:42,14/Jul/23 06:20,04/Feb/16 06:42,1.5.0.final,,,1.6,cache,,,,,0,,,,"Problematic place - GridCacheUpdateAtomicResult.updateCntr

It is Long, but passed to constructor is long. Furthermore, some callees of ctor might pass null there.",,sboikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 04 06:29:16 UTC 2016,,,,,,,,,,"0|i2scon:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Feb/16 10:58;vozerov;Semen, 

Could you please review my changes in the branch *ignite-2541*. Looks trivial to me.;;;","03/Feb/16 11:54;vozerov;Running tests on TC ...;;;","04/Feb/16 06:29;sboikov;Looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in TcpDiscoveryMulticastIpFinder.getTimeToLive,IGNITE-2532,12935959,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,yzhdanov,ptupitsyn,ptupitsyn,02/Feb/16 13:18,02/Feb/16 13:43,14/Jul/23 06:20,02/Feb/16 13:43,1.1.4,,,1.6,general,,,,,0,,,,"ttl field is Integer, property is int

{code}
    public int getTimeToLive() { return ttl; }
{code}",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2016-02-02 13:18:47.0,,,,,,,,,,"0|i2sajb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel streamer documentation is missing on readme.io,IGNITE-2530,12935893,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dmagda,dmagda,02/Feb/16 08:35,24/Feb/16 15:45,14/Jul/23 06:20,24/Feb/16 15:44,1.5.0.final,,,1.5.0.final,,,,,,0,,,,"Camel streamer was released as a part of 1.5. However there is no documentation available on readme.io describing the new streaming functionality.
Following documentation can be used as a reference
https://apacheignite.readme.io/docs/jms-data-streamer
https://apacheignite.readme.io/docs/flume-data-streamer",,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 24 15:45:00 UTC 2016,,,,,,,,,,"0|i2sa4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Feb/16 08:35;dmagda;Make sure that the doc is added to both 1.5 and 1.6 versions on readme.io.;;;","24/Feb/16 15:45;dmagda;Added by Raul;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlocks caused by Ignite.close(),IGNITE-2528,12935879,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dmagda,dmagda,02/Feb/16 07:29,23/May/16 07:06,14/Jul/23 06:20,23/May/16 07:06,1.5.0.final,,,1.7,general,,,,,0,,,,"If to start stopping an Ignite instance and execute {{cluster.nodes()}} from an {{EntryProcessor}} or some other place of the code that holds a lock on cache's gateway then this can lead to the deadlock:

Ignite.close:
- holds kernel.gateway lock;
- tries to get a gateway lock on cache A;

Entry.processor is called for cache A:
- a gateway lock is acquired for cache A;
- calling {{cluster.nodes()}};
- trying to acquire kernel's gateway lock.

To fix this deadlock we can do the following:
- introduce a volatile variable that has to be set to 'true' when a node is being stopped;
- check this variable before acquiring kernel's gateway.

Also probably it makes sense to try to use try lock here.",,ascherbakov,avk47,dmagda,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 23 07:06:20 UTC 2016,,,,,,,,,,"0|i2sa1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/16 14:42;ascherbakov;Created a reproducer.;;;","18/May/16 14:52;ascherbakov;Patch available.
Awaiting TC results.;;;","19/May/16 07:36;ascherbakov;TC passed, waiting for review;;;","19/May/16 07:39;ascherbakov;Pull request

https://github.com/apache/ignite/pull/730;;;","23/May/16 07:06;sboikov;Merged fix into master (commit f83a5f7).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBoundsException in scheduler future,IGNITE-2527,12935854,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,milap.wadhwa,vkulichenko,vkulichenko,02/Feb/16 05:20,16/May/19 21:28,14/Jul/23 06:20,19/Jul/16 10:07,,,,1.7,general,,,,,0,,,,"Calling {{SchedulerFuture.nextExecutionTime()}} (and probably other methods) on a completed future leads to this exception:
{noformat}
Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException: 0
	at org.apache.ignite.internal.processors.schedule.ScheduleFutureImpl.nextExecutionTime(ScheduleFutureImpl.java:455)
{noformat}
In particular, this happens if {{nextExecutionTime()}} right after calling {{IgniteScheduler.scheduleLocal()}} with an invalid pattern (see code example below). The exception is lost in this case and is never printed out or thrown.
{code}
SchedulerFuture schedulerFuture = ignite.scheduler().scheduleLocal(() -> {}, ""{55} 53 3/5 * * *"");
long nextExecutionTime = schedulerFuture.nextExecutionTime();
{code}",,dmagda,dsetrakyan,githubbot,milap.wadhwa,vkulichenko,,,,,,,,"dspavlov commented on issue #871: IGNITE-2527 - fixed
URL: https://github.com/apache/ignite/pull/871#issuecomment-493238268
 
 
   https://issues.apache.org/jira/browse/IGNITE-2527 is closed, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:28;githubbot;600","dspavlov commented on pull request #871: IGNITE-2527 - fixed
URL: https://github.com/apache/ignite/pull/871
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 21:28;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 19 10:07:23 UTC 2016,,,,,,,,,,"0|i2s9vz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/16 15:07;milap.wadhwa;Hi All,

I would like to pick up this ticket. Please assign me this ticket.


Thanks
Milap Wadhwa;;;","14/Jul/16 20:43;dsetrakyan;Milap, I have added you to the list of Ignite contributors and assigned this ticket to you. You should be able to assign other tickets to yourself if you like. It would also help if you send an email to the dev list and introduce yourself to the community. ;;;","16/Jul/16 04:21;milap.wadhwa;Hi,

I have looked into the issue and here are my findings :

schedulerFuture.nextExecutionTime() is trying to caste Empty Array element (first element) to Long. Thats why It is throwing ArrayOutOfBoundException
schedulerFuture.nextExecutionTime() internally invokes nextExecutionTimes() which in case If scheduler is finished will returns Empty Long Array. 
As schedulerFuture.nextExecutionTime() returns Long, It has to caste Array Elements returned from nextExecutionTimes() to Long which is empty in this case. Hence throwing ArrayOutOfBoundException
I am keeping schedulerFuture.nextExecutionTime() default termination value as -1.
If agree on design, I am going ahead with sending the pull request.

Please let me know If you need more info on it. 


Thanks,
Milap Wadhwa;;;","17/Jul/16 05:27;githubbot;GitHub user milapfk opened a pull request:

    https://github.com/apache/ignite/pull/871

    IGNITE-2527 - fixed

    Issue:
    Calling {{SchedulerFuture.nextExecutionTime()}} (and probably other methods) on a completed future leads to this exception:
    {noformat}
    Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException: 0
    	at org.apache.ignite.internal.processors.schedule.ScheduleFutureImpl.nextExecutionTime(ScheduleFutureImpl.java:455)
    {noformat}
    In particular, this happens if {{nextExecutionTime()}} right after calling {{IgniteScheduler.scheduleLocal()}} with an invalid pattern (see code example below). The exception is lost in this case and is never printed out or thrown.
    {code}
    SchedulerFuture schedulerFuture = ignite.scheduler().scheduleLocal(() -> {}, ""{55} 53 3/5 * * *"");
    long nextExecutionTime = schedulerFuture.nextExecutionTime();
    {code}
    Root Cause:
    schedulerFuture.nextExecutionTime() is trying to caste Empty Array element (first element) to Long. Thats why It is throwing ArrayOutOfBoundException
    schedulerFuture.nextExecutionTime() internally invokes nextExecutionTimes() which in case If scheduler is finished will returns Empty Long Array.
    As schedulerFuture.nextExecutionTime() returns Long, It has to caste Array Elements returned from nextExecutionTimes() to Long which is empty in this case. Hence throwing ArrayOutOfBoundException
    Resolution:
    keeping schedulerFuture.nextExecutionTime() default termination value as -1.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/milapfk/ignite master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/871.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #871
    
----
commit 8a54842c05a68bb065e599af1e92617897e4ab70
Author: milap.wadhwa <milap.wadhwa@flipkart.com>
Date:   2016-07-17T05:18:12Z

    Issue[IGNITE-2527]:
    Calling {{SchedulerFuture.nextExecutionTime()}} (and probably other methods) on a completed future leads to this exception:
    {noformat}
    Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException: 0
    	at org.apache.ignite.internal.processors.schedule.ScheduleFutureImpl.nextExecutionTime(ScheduleFutureImpl.java:455)
    {noformat}
    In particular, this happens if {{nextExecutionTime()}} right after calling {{IgniteScheduler.scheduleLocal()}} with an invalid pattern (see code example below). The exception is lost in this case and is never printed out or thrown.
    {code}
    SchedulerFuture schedulerFuture = ignite.scheduler().scheduleLocal(() -> {}, ""{55} 53 3/5 * * *"");
    long nextExecutionTime = schedulerFuture.nextExecutionTime();
    {code}
    Root Cause:
    schedulerFuture.nextExecutionTime() is trying to caste Empty Array element (first element) to Long. Thats why It is throwing ArrayOutOfBoundException
    schedulerFuture.nextExecutionTime() internally invokes nextExecutionTimes() which in case If scheduler is finished will returns Empty Long Array.
    As schedulerFuture.nextExecutionTime() returns Long, It has to caste Array Elements returned from nextExecutionTimes() to Long which is empty in this case. Hence throwing ArrayOutOfBoundException
    Resolution:
    keeping schedulerFuture.nextExecutionTime() default termination value as -1.

commit d5b0839b183c8ea0c5b330de6d350d9bc4cc2dd9
Author: milap.wadhwa <milap.wadhwa@flipkart.com>
Date:   2016-07-17T05:29:40Z

    IGNITE-2527 -fixed :
    Calling {{SchedulerFuture.nextExecutionTime()}} (and probably other methods) on a completed future leads to this exception:
    {noformat}
    Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException: 0
    	at org.apache.ignite.internal.processors.schedule.ScheduleFutureImpl.nextExecutionTime(ScheduleFutureImpl.java:455)
    {noformat}
    In particular, this happens if {{nextExecutionTime()}} right after calling {{IgniteScheduler.scheduleLocal()}} with an invalid pattern (see code example below). The exception is lost in this case and is never printed out or thrown.
    {code}
    SchedulerFuture schedulerFuture = ignite.scheduler().scheduleLocal(() -> {}, ""{55} 53 3/5 * * *"");
    long nextExecutionTime = schedulerFuture.nextExecutionTime();
    {code}
    Root Cause:
    schedulerFuture.nextExecutionTime() is trying to caste Empty Array element (first element) to Long. Thats why It is throwing ArrayOutOfBoundException
    schedulerFuture.nextExecutionTime() internally invokes nextExecutionTimes() which in case If scheduler is finished will returns Empty Long Array.
    As schedulerFuture.nextExecutionTime() returns Long, It has to caste Array Elements returned from nextExecutionTimes() to Long which is empty in this case. Hence throwing ArrayOutOfBoundException
    Resolution:
    keeping schedulerFuture.nextExecutionTime() default termination value as -1.

----
;;;","17/Jul/16 05:30;milap.wadhwa;Hi,

below is the pull request for the fix.
https://github.com/apache/ignite/pull/871

Please review it.


Thanks and Regards,
Milap Wadhwa;;;","19/Jul/16 10:07;dmagda;[~milap.wadhwa], thanks a lot for the contribution!

I've reviewed, slightly modified and merged your changes. In general I think that it's better to return {{0}} rather than {{-1}} if {{schedulerFuture.nextExecutionTime()}} is empty just in order to be consistent with other time related methods of the scheduler.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Offheap memory + peer class loading = ClassNotFoundException,IGNITE-2498,12934980,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vozerov,vkulichenko,vkulichenko,29/Jan/16 01:45,01/Feb/16 12:10,14/Jul/23 06:20,01/Feb/16 12:10,,,,1.6,cache,,,,,0,,,,"With offheap memory and peer class loading, cache tries to deserialize value on server, even if binary format is used.

To reproduce start a node using {{ignite.sh}} and run attached {{OffheapP2PTest}}.",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jan/16 01:47;vkulichenko;OffheapP2PTest.java;https://issues.apache.org/jira/secure/attachment/12785062/OffheapP2PTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Fri Jan 29 06:37:39 UTC 2016,,,,,,,,,,"0|i2s4hz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jan/16 06:37;vkulichenko;It fails because of code below inside {{GridCacheMapEntry.swap()}} method. It should be ignored in case binary format is used.

{code}
if (cctx.kernalContext().config().isPeerClassLoadingEnabled()) {
    if (val != null) {
        valClsLdrId = cctx.deploy().getClassLoaderId(
            U.detectObjectClassLoader(val.value(cctx.cacheObjectContext(), false)));
    }

    keyClsLdrId = cctx.deploy().getClassLoaderId(
        U.detectObjectClassLoader(key.value(cctx.cacheObjectContext(), false)));
}
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Continuous query is no longer deployed when node, that deployed it initially, leaves topology",IGNITE-2468,12934414,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,dmagda,dmagda,27/Jan/16 11:24,15/Feb/16 09:58,14/Jul/23 06:20,12/Feb/16 13:09,1.5.0.final,,,1.6,,,,,,0,important,,,"Steps to reproduce:

- Start a server node and run a continuous query setting autoUnsubscribe to false;
- Start a client node that will update a single entry in a loop;
- Start additional server node (without starting a query). Already existed query will be registered on this server node;
- Check remote filter of both server nodes, they both have to receive updates (one server is primary while the other is backup);
- Stop the first server that initiated the query;
- Start one more server and you will see that the query won't be registered on it.

",,avinogradov,dmagda,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 12 13:09:18 UTC 2016,,,,,,,,,,"0|i2s107:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/16 22:56;vkulichenko;Anton,

I looked at your changes. It seems to me that the test does not completely verify the scenario when the query is executed from the client. After you stopped this client (line 176), you should start one more server and make sure that the remote filter is deployed there. Now this is not happening.

Otherwise looks good, assuming that all tests pass on TC.;;;","12/Feb/16 13:09;avinogradov;Test updated, no failures found.
Code merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemory when PRIMARY_SYNC mode is used,IGNITE-2466,12934408,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dmagda,dmagda,27/Jan/16 10:58,10/Apr/17 07:36,14/Jul/23 06:20,10/Apr/17 07:36,1.5.0.final,,,2.0,,,,,,0,,,,"To reproduce, run two server nodes with 2g of heap each and then MemTest. Servers will fail with OOME. If backups are disabled or there is only one server node, it works.

",,dkarachentsev,dmagda,ntikhonov,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/16 10:59;dmagda;MemTest.java;https://issues.apache.org/jira/secure/attachment/12784616/MemTest.java","27/Jan/16 10:59;dmagda;example-ignite.xml;https://issues.apache.org/jira/secure/attachment/12784615/example-ignite.xml",,,,,,,,,,,,,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Apr 06 16:30:53 UTC 2017,,,,,,,,,,"0|i2s0yv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Feb/16 09:40;sboikov;One possible reason for OOM is that for atomic cache we keep cache objects which can be needed for continuous queries until response from backup is received. But there is no need to keep these objects if there are no registered continuous queries listeners, I'm going to fix this as part of IGNITE-2587, let's see if issue will reporduce after this.;;;","16/Feb/16 18:14;ntikhonov;This issue reproduced after IGNITE-2587 fix. I found one more reason for OOM. Atomic cache saves GridNearUpdateRequest which keep cache objects. For all cache modes except  {{FULL_ASYNC}} they are not needed. Got NPE when occured remap in {{GridDhtAtomicCache}} but keys and value have been removed from {{GridDhtAtomicUpdateRequest}}. Added {{onAckReceived}} method on {{Message}} interface and cleanup unnecessary values from this request when ack received to avoid the NPE.;;;","17/Feb/16 06:03;sboikov;Reviewed, good to merge.;;;","25/Feb/16 22:15;vkulichenko;The attached test still fails with OOME.;;;","26/Feb/16 13:49;sboikov;Test uses atomic cache with PRIMARY_SYNC mode and 1 backup, several threads execute putAll requests in infinite loop. Eviction policy works correctly and number of items in cache is always ~1000. OOM happens because server has too many queued GridDhtAtomicUpdateRequests which should be sent to backup. We did some improvments to reduce memory consumption (clear GridNearAtomicUpdateRequest, do not store unnecessary data in GridDhtAtomicUpdateRequest and clear it after ack is received), but still client update rate can be too high.

Correct fix for this issue is use existing back-pressure mechanism in TcpCommunicationSpi and block socket reads if there are too many unprocessed message. Need somehow refactor back-pressure implementation and GridNearAtomicUpdateRequest should be treated as unprocessed before response from backup is received.;;;","20/Dec/16 12:03;dkarachentsev;Semen,

I've implemented your suggestion, but anyway it looks like incomplete solution. Because we count number of messages, not their size.
F.e. in attached test, with such approach on default settings, OOME will be thrown. So we need reduce message queue limit down to 128. With acknowledge check everything will be fine, without it - again OOME.

Maybe better solution would be additionally check heap state and message sizes received from client node? If there is a risk of OOME - stop receiving them (only for messages from clients).;;;","20/Dec/16 14:28;dkarachentsev;[PR#1366|https://github.com/apache/ignite/pull/1366];;;","05/Apr/17 12:48;sboikov;Hi,

I reviewed your changes, have some comments:
- I think new interface BackPressureTracker is not needed, just use existing GridNioMessageTracker everywhere. Also you can not change CommunicationListener, this is public API, so use class cast where needed.
- I don't like you added one more thread local in GridNioBackPressureControl. I think single thread local is enough, (threadProcessingMessage is true is there is non-null tracker)
- this changes in GridDhtAtomicCache:
{noformat}
if (node.isClient() && !dhtFut.isDone()) {
    final BackPressureTracker tracker = GridNioBackPressureControl.threadTracker();

    if (tracker != null) {
        tracker.registerMessage();

        dhtFut.listen(new IgniteInClosure<IgniteInternalFuture<Void>>() {
            @Override public void apply(IgniteInternalFuture<Void> fut) {
                tracker.deregisterMessage();
            }
        });
    }
}
{noformat}
I think check 'node.isClient()' is not needed, it should not matter if update was initiated by client or server, instead you need add check taht writeSynchronizationMode = PRIMARY_SYNC

Thanks;;;","06/Apr/17 08:31;dkarachentsev;Semen, 
I've fixed all your notes, please review.
N.B. I don't rely on tracker presence, because it could be null, so store flag and tracker separately in one  thread local.;;;","06/Apr/17 09:29;sboikov;Hi,

I reviewed changes, did minor changes, please take a look. Also please add test for multinode primary_sync update with backpressure enabled (do updates from both clients and servers), I think there is no such test now.

Thanks;;;","06/Apr/17 16:30;dkarachentsev;Semen,

I've added test, please check.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion in load cache closure,IGNITE-2465,12934406,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,dmagda,dmagda,27/Jan/16 10:52,18/Feb/16 07:43,14/Jul/23 06:20,18/Feb/16 07:43,1.5.0.final,,,1.6,cache,,,,,0,important,,,"This is a tricky one. Every once in a while I get an assertion exception due to a null cache instance. It's difficult to reproduce, but the reason is more or less clear.

First, here's the sequence of events:

1) node N0 starts a cache with GridGain's LocalCacheStore configured (see the cache config below).
2) also, N0 registers a listener for the Ignite DISCO_EVENTS.
3) node N1 joins the cluster.
4) N0 receives a discovery event (EVT_NODE_JOINED) and triggers cache loading using IgniteCache.loadCache(null).
5) N1 throws an AssertionException due to Ignite.cache(""persistent-cache"") call returning a null.

From the log snippet below you can see that the exception is first reported and then a millisecond later GridCacheProcessor reports that the cache was started. This means that the cache load closure starts executing on node N1 a bit too early while the cache is still being started. I believe Ignite must be able to handle such race properly.

{noformat}
9319 [pub-#212%N1%] ERROR GridJobWorker - Failed to execute job due to unexpected runtime exception [jobId=0af5bad7251-9f7af4ba-6a64-4de4-b5d2-81d59be05303, ses=GridJobSessionImpl [ses=GridTaskSessionImpl [taskName=o.a.i.i.processors.cache.GridCacheAdapter$LoadCacheClosure, dep=LocalDeployment [super=GridDeployment [ts=1453807336443, depMode=SHARED, clsLdr=sun.misc.Launcher$AppClassLoader@15db9742, clsLdrId=46f5bad7251-9f7af4ba-6a64-4de4-b5d2-81d59be05303, userVer=0, loc=true, sampleClsName=java.lang.String, pendingUndeploy=false, undeployed=false, usage=0]], taskClsName=o.a.i.i.processors.cache.GridCacheAdapter$LoadCacheClosure, sesId=e9f5bad7251-1edbab1e-37bf-424e-a9e1-0c866b95009d, startTime=1453807336874, endTime=9223372036854775807, taskNodeId=1edbab1e-37bf-424e-a9e1-0c866b95009d, clsLdr=sun.misc.Launcher$AppClassLoader@15db9742, closed=false, cpSpi=null, failSpi=null, loadSpi=null, usage=1, fullSup=false, subjId=1edbab1e-37bf-424e-a9e1-0c866b95009d, mapFut=IgniteFuture [orig=GridFutureAdapter [resFlag=0, res=null, startTime=1453807336894, endTime=0, ignoreInterrupts=false, lsnr=null, state=INIT]]], jobId=0af5bad7251-9f7af4ba-6a64-4de4-b5d2-81d59be05303]]
java.lang.AssertionError: persistent-cache
at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheClosure.call(GridCacheAdapter.java:5788)
at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheClosure.call(GridCacheAdapter.java:5740)
at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2.execute(GridClosureProcessor.java:1789)
at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:509)
at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6397)
at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:503)
at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:456)
at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1166)
at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1770)
at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:821)
at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:103)
at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:784)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
9320 [Thread-19] INFO GridCacheProcessor - Started cache [name=persistent-cache, mode=REPLICATED]
{noformat}

For reference, here's the code that configures the cache:

{noformat}
CacheConfiguration<K, V> config = new CacheConfiguration<>(""persistent-cache"");
config.setCacheMode(CacheMode.REPLICATED);
config.setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL);
config.setRebalanceMode(CacheRebalanceMode.SYNC);
config.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
config.setStartSize(1024);
config.setCacheStoreFactory(new LocalCacheStoreFactory(somepath));
config.setWriteThrough(true);
{noformat}",,ashutak,avk47,dmagda,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 18 07:43:16 UTC 2016,,,,,,,,,,"0|i2s0yf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jan/16 17:44;githubbot;GitHub user ashutakGG opened a pull request:

    https://github.com/apache/ignite/pull/431

    IGNITE-2465: Assertion in load cache closure (a race fixed)

    https://issues.apache.org/jira/browse/IGNITE-2465.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ashutakGG/incubator-ignite ignite-2465-closure

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/431.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #431
    
----
commit 77894309934ee062d7b6459b1aae7618d2dc441f
Author: ashutak <ashutak@gridgain.com>
Date:   2016-01-27T15:11:50Z

    ignite-2465: add test

commit a7f53fef46f538de10119699212f35b1259f1f4d
Author: ashutak <ashutak@gridgain.com>
Date:   2016-01-27T17:36:46Z

    ignite-2465: fix

commit c736aaba062e9b6794d0ccba7e565428e31e5e17
Author: ashutak <ashutak@gridgain.com>
Date:   2016-01-27T17:39:18Z

    ignite-2465: revert test changes

----
;;;","01/Feb/16 13:47;ashutak;TC looks good.

Ready for review.;;;","02/Feb/16 19:07;ashutak;Alexey G. already reviewed the fix. 

Semen, could you please review?;;;","03/Feb/16 10:10;ashutak;Reviewed with Semen. Fixed review comments. Ready to merge.

WIll add automation test for the fix a little bit later.;;;","03/Feb/16 11:57;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/431
;;;","04/Feb/16 14:59;ashutak;Automation test should do many tries to reproduce duty test from PR-431.;;;","18/Feb/16 07:43;sboikov;Reviewed, fix looks good.

Fixed was merged in master (commit f8667cb).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL query fails if there are caches that were never used on this client,IGNITE-2455,12934314,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vkulichenko,vkulichenko,vkulichenko,27/Jan/16 02:31,11/May/16 14:44,14/Jul/23 06:20,27/Feb/16 04:30,,,,1.6,cache,,,,,0,important,,,"Test attached.

If SQL query contains caches that were never acquired on the current client, it fails with the following exception:

{noformat}
org.h2.jdbc.JdbcSQLException: Schema ""cache2"" not found;
{noformat}

We should automatically detect the list of required caches and create them before executing the query.
",,agura,dmagda,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1074,,,,,,,,,,,,,,,,,"27/Jan/16 16:17;vkulichenko;QueryTest.java;https://issues.apache.org/jira/secure/attachment/12784667/QueryTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Feb 27 04:30:16 UTC 2016,,,,,,,,,,"0|i2s0dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Feb/16 10:41;agura;Because schema for cache registers during cache start only (see usages of {{org.apache.ignite.internal.processors.query.GridQueryProcessor#onCacheStart}}) H2 SQL parser can't find schema from query ({{cache2}} in our case) and fails.

{noformat}
Caused by: org.h2.jdbc.JdbcSQLException: Схема ""cache2"" не найдена
Schema ""cache2"" not found; SQL statement:
select i1._val, i2._val from Integer i1 cross join ""cache2"".Integer i2 [90079-175]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:332)
	at org.h2.message.DbException.get(DbException.java:172)
	at org.h2.message.DbException.get(DbException.java:149)
	at org.h2.command.Parser.getSchema(Parser.java:637)
	at org.h2.command.Parser.getSchema(Parser.java:644)
	at org.h2.command.Parser.readTableFilter(Parser.java:1156)
	at org.h2.command.Parser.readJoin(Parser.java:1504)
	at org.h2.command.Parser.parseJoinTableFilter(Parser.java:1819)
	at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1814)
	at org.h2.command.Parser.parseSelectSimple(Parser.java:1921)
	at org.h2.command.Parser.parseSelectSub(Parser.java:1807)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1631)
	at org.h2.command.Parser.parseSelect(Parser.java:1619)
	at org.h2.command.Parser.parsePrepared(Parser.java:426)
	at org.h2.command.Parser.parse(Parser.java:298)
	at org.h2.command.Parser.parse(Parser.java:270)
	at org.h2.command.Parser.prepareCommand(Parser.java:235)
	at org.h2.engine.Session.prepareLocal(Session.java:436)
	at org.h2.engine.Session.prepareCommand(Session.java:379)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.prepareStatement(IgniteH2Indexing.java:351)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryTwoStep(IgniteH2Indexing.java:1040)
	... 16 more
{noformat};;;","26/Feb/16 22:06;vkulichenko;Made the simple fix: catch exception and try to create all client caches that are currently missing.

Running TC.;;;","27/Feb/16 04:30;vkulichenko;TC passed, code reviewed by Alex G.

Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Continuous query notification missed if there is only one node,IGNITE-2454,12934311,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ntikhonov,vkulichenko,vkulichenko,27/Jan/16 02:15,03/Feb/16 10:57,14/Jul/23 06:20,03/Feb/16 10:56,,,,1.6,cache,,,,,0,,,,"Test attached.

The remote filter is invoked, returns {{true}}, but the local listener is ignored.",,dmagda,ntikhonov,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/16 02:15;vkulichenko;CacheListenerTest.java;https://issues.apache.org/jira/secure/attachment/12784550/CacheListenerTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 03 09:36:11 UTC 2016,,,,,,,,,,"0|i2s0db:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jan/16 08:34;dmagda;Make sure that the fix done for this ticket works perfectly well for https://issues.apache.org/jira/browse/IGNITE-2479;;;","01/Feb/16 15:28;ntikhonov;Fixed case when initial update counters was wrong in ContinuousQueryHandler. ;;;","03/Feb/16 09:36;sboikov;Reviewed, good to merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proxy classes are not serialized properly using OptimizedMarshaller and BinaryMarshaller,IGNITE-2450,12934093,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vkulichenko,avihai.berkovitz@microsoft.com,avihai.berkovitz@microsoft.com,26/Jan/16 12:06,26/Feb/16 00:34,14/Jul/23 06:20,26/Feb/16 00:34,1.5.0.final,ignite-1.4,,1.6,platforms,,,,,1,community,important,,"I tried to deploy several services using Java's Proxy class, to dynamically define the needed interfaces. When using a single process (even with several nodes running in the same JVM) everything worked. But when working with a large cluster of several machines I got the following error:
{noformat}
Error when executing service: ServicePluginsDeployer
org.apache.ignite.IgniteException: Failed to unmarshall object.
        at org.apache.ignite.internal.processors.cache.CacheObjectImpl.value(CacheObjectImpl.java:84) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinary(CacheObjectContext.java:280) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinaryIfNeeded(CacheObjectContext.java:145) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinaryIfNeeded(CacheObjectContext.java:132) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$LazyValueEntry.getValue(GridCacheMapEntry.java:4339) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.service.GridServiceProcessor$TopologyListener$1.run0(GridServiceProcessor.java:1214) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.service.GridServiceProcessor$BusyRunnable.run(GridServiceProcessor.java:1399) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_60]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_60]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_60]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_60]
        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_60]
Caused by: org.apache.ignite.IgniteCheckedException: Failed to find class with given class loader for unmarshalling (make sure same version of all classes are available on all nodes or enable peer-class-loading): null
        at org.apache.ignite.marshaller.optimized.OptimizedMarshaller.unmarshal(OptimizedMarshaller.java:254) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.cacheobject.IgniteCacheObjectProcessorImpl.unmarshal(IgniteCacheObjectProcessorImpl.java:110) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.unmarshal(CacheObjectBinaryProcessorImpl.java:700) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.processors.cache.CacheObjectImpl.value(CacheObjectImpl.java:76) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        ... 11 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.sun.proxy.$Proxy55
        at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_60]
        at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_60]
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) ~[na:1.8.0_60]
        at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_60]
        at java.lang.Class.forName0(Native Method) ~[na:1.8.0_60]
        at java.lang.Class.forName(Class.java:348) ~[na:1.8.0_60]
        at org.apache.ignite.internal.util.IgniteUtils.forName(IgniteUtils.java:8172) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.internal.MarshallerContextAdapter.getClass(MarshallerContextAdapter.java:185) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.marshaller.optimized.OptimizedMarshallerUtils.classDescriptor(OptimizedMarshallerUtils.java:267) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:309) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365) ~[na:1.8.0_60]
        at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readFields(OptimizedObjectInputStream.java:482) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readSerializable(OptimizedObjectInputStream.java:570) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.marshaller.optimized.OptimizedClassDescriptor.read(OptimizedClassDescriptor.java:808) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:315) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365) ~[na:1.8.0_60]
        at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readFields(OptimizedObjectInputStream.java:482) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readSerializable(OptimizedObjectInputStream.java:570) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.marshaller.optimized.OptimizedClassDescriptor.read(OptimizedClassDescriptor.java:808) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:315) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365) ~[na:1.8.0_60]
        at org.apache.ignite.marshaller.optimized.OptimizedMarshaller.unmarshal(OptimizedMarshaller.java:248) ~[ignite-core-1.5.0.final.jar:1.5.0.final]
        ... 14 common frames omitted
{noformat}

I think the problem is that the marshaller tries to reference the proxy class by name, but deserialization of proxy classes should be special ([https://docs.oracle.com/javase/8/docs/technotes/guides/reflection/proxy.html#serial]) and create the classes on the fly. When using the JdkMarshaller the problem doesn't happen.
This problem doesn't show up in existing tests (IGNITE-2098) because they all run in the same JVM, where the same proxy classes exist before and after serialization. You must have nodes in two different processes, and create several proxy classes, for the problem to manifest.","Ubuntu 12.04 64 bit
java version ""1.8.0_60""
Java(TM) SE Runtime Environment (build 1.8.0_60-b27)
Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)
Ignite 1.4.0",avihai.berkovitz@microsoft.com,noliran,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Feb/16 01:09;vkulichenko;master_500bd3a_ignite-2450.patch;https://issues.apache.org/jira/secure/attachment/12786154/master_500bd3a_ignite-2450.patch",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 26 00:34:33 UTC 2016,,,,,,,,,,"0|i2rz0v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Feb/16 13:12;vozerov;Patch looks good for me provided that tests are fine.;;;","05/Feb/16 20:56;vkulichenko;Merged to master.;;;","25/Feb/16 05:38;vkulichenko;Calling {{toBinary()}} for Proxy ends up in exception:
{noformat}
Exception in thread ""main"" class org.apache.ignite.binary.BinaryObjectException: Invalid flag value: 35
at org.apache.ignite.internal.binary.BinaryUtils.unmarshal(BinaryUtils.java:1765)
at org.apache.ignite.internal.binary.BinaryUtils.unmarshal(BinaryUtils.java:1597)
at org.apache.ignite.internal.binary.BinaryUtils.unmarshal(BinaryUtils.java:1588)
at org.apache.ignite.internal.binary.GridBinaryMarshaller.unmarshal(GridBinaryMarshaller.java:254)
at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.marshalToBinary(CacheObjectBinaryProcessorImpl.java:519)
at org.apache.ignite.internal.processors.cache.binary.IgniteBinaryImpl.toBinary(IgniteBinaryImpl.java:67)
{noformat};;;","26/Feb/16 00:34;vkulichenko;Fixed in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration with Mesos doesn't work with limited access to internet,IGNITE-2435,12933378,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ntikhonov,ntikhonov,ntikhonov,22/Jan/16 15:58,16/May/16 12:50,14/Jul/23 06:20,16/May/16 12:50,1.5.0.final,,,1.6,,,,,,0,,,,Ignite Mesos integration doesn't work behind a firewall. Need to make all external resources will customizable and avoid unnecessary accesses to web.,,dmagda,ntikhonov,sboikov,vsidorova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 09 06:16:39 UTC 2016,,,,,,,,,,"0|i2run3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Feb/16 14:43;ntikhonov;Added new IGNITE_PACKAGE_PATH property. The property allows set path to local Apache Ignite archive which will be run on slaves node.   ;;;","09/Mar/16 09:03;dmagda;[~ntikhonov], can the changes done as a part of this ticket be merged to the master?;;;","04/May/16 11:12;sboikov;Nikolay, I reviewed changes, please add some javadoc for ClusterProperties, otherwise it is not clear when packageUrl or packagePath should be used.

Thanks!;;;","04/May/16 14:57;vsidorova;Integration with Mesos works good with new parameter. Nikolay, please, update ""Mesos deployment"" documentation https://apacheignite.readme.io/docs/mesos-deployment;;;","09/May/16 06:16;dmagda;Can this ticket be closed?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite updates cache store even if EntryProcessor did not update cache entry,IGNITE-2434,12933335,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,22/Jan/16 13:23,22/Jan/16 18:00,14/Jul/23 06:20,22/Jan/16 18:00,,,,1.6,,,,,,0,,,,org.apache.ignite.internal.processors.cache.store.IgniteCacheWriteBehindNoUpdateSelfTest was added to master.,,agoncharuk,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 22 17:41:05 UTC 2016,,,,,,,,,,"0|i2rudj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jan/16 13:31;githubbot;GitHub user agoncharuk opened a pull request:

    https://github.com/apache/ignite/pull/418

    IGNITE-2434 - Do not update cache store if entry processor was a noop.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/agoncharuk/ignite ignite-2434

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/418.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #418
    
----
commit 20282071e3a85673c30a65c67262fb6c1d796579
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-01-22T13:30:32Z

    IGNITE-2434 - Fixing the test.

----
;;;","22/Jan/16 17:41;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/418
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObject: Inconsistent field type name is returned for Collections,IGNITE-2430,12933101,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,dmagda,dmagda,21/Jan/16 15:53,12/Feb/16 13:03,14/Jul/23 06:20,12/Feb/16 13:03,1.5.0.final,,,1.6,,,,,,0,important,,,"Run this code below and you will see that different field type name is returned for objects of the same type. There is a bug in {{BinaryObjectBuilderImpl.serializeTo}} method.

{noformat}
        BinaryObjectBuilder root = ignite.binary().builder(""some_objects"");
        root.setField(""bi"", new BigInteger(String.valueOf(Long.MAX_VALUE) + ""1""), BigInteger.class);
        root.setField(""bd"", new BigDecimal(String.valueOf(Long.MAX_VALUE) + ""1.1""), BigDecimal.class);

        List<Integer> list = new ArrayList<>();
        list.add(Integer.MAX_VALUE);

        root.setField(""l"", list); //<- here: Collection
        root.setField(""al"", Arrays.<Integer>asList(Integer.MAX_VALUE)); //<- here: Object

        BinaryObject binaryObject = root.build();

        System.out.println(binaryObject.type().fieldTypeName(""l""));
        System.out.println(binaryObject.type().fieldTypeName(""al""));
{noformat}",,dkarachentsev,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 12 08:06:36 UTC 2016,,,,,,,,,,"0|i2rsxr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/16 16:16;dkarachentsev;https://github.com/apache/ignite/pull/475;;;","12/Feb/16 08:06;dkarachentsev;https://github.com/apache/ignite/pull/475;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document optimisitic (deadlock-free) transactions on readme.io,IGNITE-2426,12933020,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,dmagda,dmagda,21/Jan/16 08:56,12/May/16 09:14,14/Jul/23 06:20,12/May/16 09:14,1.5.0.final,,,1.6,,,,,,0,important,,,"There is a lack of documentation on how optimistic & serializable transactions work.

Basic documentation has to be added covering some specific cases in addition.

As an example, the test attached demonstrates the following.

Both tasks update cache with put operations only without reading and keeping entries's versions cause there is no any cache.get/getAll calls as a part of the transaction.
Each transaction has it's unique ID. So at the commit time when one transaction B tries to update an entry locking it before and sees that the entry is locked by some transaction A, started earlier (have smaller transaction ID), then transaction B will just wait until the lock is released and can proceed with the commit later. If this repeats for every entry of transactions and we haven't detected any conflict then both transactions succeeds. This is exactly what happens sometimes in your test.

However, if the transactions were using cache.get or related operations then during the commit time both transactions would be checking entry versions in addition before proceeding with the commit. In general if an entry version at commit time is different to the entry version at get time then a transaction fails. To see this in practice use cache.getAndPut() instead of cache.put() in the code. After applying this modification one of the transactions will always fail.",,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/16 09:02;dmagda;TransactionTest.java;https://issues.apache.org/jira/secure/attachment/12783544/TransactionTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 12 09:13:57 UTC 2016,,,,,,,,,,"0|i2rsfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/May/16 09:13;dmagda;Documented in the following section
https://apacheignite.readme.io/v1.6/docs/transactions;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite on YARN do not handle memory overhead,IGNITE-2419,12932725,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,echevalier,echevalier,echevalier,20/Jan/16 15:07,02/Feb/16 14:33,14/Jul/23 06:20,02/Feb/16 14:33,,,,1.6,hadoop,,,,,0,,,,"When deploying ignite nodes with YARN, JVM are launched with a defined amount of memory (property IGNITE_MEMORY_PER_NODE transposed to the ""-Xmx"" jvm property) and YARN is told to provide container that would require exactly that amount of memory. But YARN monitors the memory of the overall process, not the heap: JVM can easily requires more memory than the heap (VM and/or native overheads, threads overhead, and in the case of ignite, possibly offheap data structures). If tasks require all of the heap, the process memory would be more far more than the heap memory. The YARN then would consider that node should be killed (and kills it !) and create another one. I have a scenario where tasks requires all of JVM memory and YARN is continously allocating/deallocating containers. Global task never finishes.

My proposal is to implement a property IGNITE_OVERHEADMEMORY_PER_NODE like property spark.yarn.executor.memoryOverhead in  spark (see : https://spark.apache.org/docs/latest/running-on-yarn.html#configuration ) . I can implement it and create a pull request in github.",hadoop cluster with YARN,dmagda,dsetrakyan,echevalier,githubbot,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 02 14:32:34 UTC 2016,,,,,,,,,,"0|i2rqm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jan/16 19:43;dsetrakyan;Vladimir, would be nice if you could take a look.;;;","21/Jan/16 12:53;githubbot;GitHub user DoudTechData opened a pull request:

    https://github.com/apache/ignite/pull/414

    IGNITE-2419 manage memory overhead in resource requests to YARN

    implements memory overhead property in ClusterProperties.
    use property for requesting memory in ApplicationMaster.
    Simplify/factorize properties loading in ClusterProperties

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/DoudTechData/ignite jira-2419

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/414.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #414
    
----
commit 38c17b70a9d7b419e34544d9771ebfc12e534791
Author: Edouard Chevalier <edouard.chevalier@techmydata.net>
Date:   2016-01-21T12:33:31Z

    implements memory overhead and factorize properties loading.

----
;;;","21/Jan/16 12:55;echevalier;Done. ignite pull request : https://github.com/apache/ignite/pull/414
I'm quite new to git, please tell me if something is wrong.;;;","21/Jan/16 16:57;dsetrakyan;Edouard, I moved the ticket to Patch Available state (otherwise it won't get noticed).;;;","21/Jan/16 17:17;echevalier;Ok thanks. I was looking around ""Team City"" for validation. Not sure there is a test suite for that (Junit test of ignite-yarn pass).;;;","26/Jan/16 16:39;ntikhonov;Hi, Edouard!
Thank for your contribution!
I've reviewed your changes. Could you please add tests which describe behavior in the ticket? You can add tests in IgniteYarnTestSuite and see results on TC http://ci.ignite.apache.org/viewLog.html?buildId=101790&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteYarn ;;;","26/Jan/16 17:35;echevalier;OK, i will. do i have to create another patch or update the current pull request (if possible) ?;;;","27/Jan/16 05:45;ntikhonov;You can just update this PR.;;;","27/Jan/16 15:36;echevalier;done ;;;","28/Jan/16 11:53;ntikhonov;Hi, Edouard!
Could you add tests which will coverage negative cases (when container does not have a required resources)?;;;","28/Jan/16 13:53;echevalier;Hello Nikolay,

It is implemented in a new test.;;;","29/Jan/16 14:11;ntikhonov;I've triggered build on TC and reviewed codes. I didn't find any notes, when TC passed I'll merge your fix.
Thank you for your contribution!;;;","01/Feb/16 04:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/414
;;;","01/Feb/16 04:39;ntikhonov;Hi Edouard!
Your changes merged to master. Thank you! Could you add in doc (https://apacheignite.readme.io/docs/yarn-deployment) information about new parameter? You can do it by ""Suggest Edits"".;;;","02/Feb/16 07:15;echevalier;Hello,

Done !;;;","02/Feb/16 11:47;ntikhonov;Thank you! Your changes in docs will be published on site when version 1.6 will be released.;;;","02/Feb/16 14:09;dmagda;Nick the doc with version 1.6 is already created. You should update it there as well.;;;","02/Feb/16 14:32;ntikhonov;Denis,
I've updated version 1.6 only, but this is not published yet and contributor can't see the changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoverySharedFsIpFinder doesn't work with IPv6 addresses,IGNITE-2416,12932690,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,dmagda,dmagda,20/Jan/16 12:21,24/Feb/16 03:07,14/Jul/23 06:20,24/Feb/16 03:06,1.5.0.final,,,1.6,,,,,,0,important,,,"{{TcpDiscoverySharedFsIpFinder}} fails if there is IPv6 address in the list.

{noformat}
class org.apache.ignite.spi.IgniteSpiException: Failed to create file.
 at org.apache.ignite.spi.discovery.tcp.ipfinder.sharedfs.MyTcpDiscoverySharedFsIpFinder.registerAddresses(MyTcpDiscoverySharedFsIpFinder.java:25)
 at org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinderAdapter.initializeLocalAddresses(TcpDiscoveryIpFinderAdapter.java:61)
 at org.apache.ignite.spi.discovery.tcp.TcpDiscoveryImpl.registerLocalNodeAddress(TcpDiscoveryImpl.java:265)
 at org.apache.ignite.spi.discovery.tcp.ServerImpl.spiStart(ServerImpl.java:311)
 at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.spiStart(TcpDiscoverySpi.java:1815)
 at org.apache.ignite.internal.managers.GridManagerAdapter.startSpi(GridManagerAdapter.java:252)
 at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.start(GridDiscoveryManager.java:660)
 at org.apache.ignite.internal.IgniteKernal.startManager(IgniteKernal.java:1500)
 at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:915)
 at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1618)
 at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1485)
 at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:965)
 at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:892)
 at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:784)
 at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:705)
 at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:576)
 at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:546)
 at org.apache.ignite.Ignition.start(Ignition.java:346)
 at com.juliusbaer.markets.JBGridGainCommon.startGridGain(JBGridGainCommon.java:42)
 at com.juliusbaer.markets.JBGridGainCommon.startGridGain(JBGridGainCommon.java:30)
 at com.juliusbaer.markets.StartGridCommandLine.main(StartGridCommandLine.java:50)
Caused by: java.io.IOException: The filename, directory name, or volume label syntax is incorrect
 at java.io.WinNTFileSystem.createFileExclusively(Native Method)
 at java.io.File.createNewFile(Unknown Source)
 at org.apache.ignite.spi.discovery.tcp.ipfinder.sharedfs.MyTcpDiscoverySharedFsIpFinder.registerAddresses(MyTcpDiscoverySharedFsIpFinder.java:22)
{noformat}",,dmagda,githubbot,shroman,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 24 03:06:57 UTC 2016,,,,,,,,,,"0|i2rqef:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Feb/16 02:31;shroman;It's a Windows issue. Adding
{code}
InetSocketAddress node3 = new InetSocketAddress(Inet6Address.getByName(""2001:0db8:85a3:08d3:1319:47ff:fe3b:7fd3""), 1002);
{code}
to {{TcpDiscoveryIpFinderAbstractSelfTest}} and runnig TcpDiscoverySharedFsIpFinderSelfTest on Linux is ok.
Colons in file names on Windows are not allowed.;;;","18/Feb/16 02:55;shroman;What I propose is having two helper methods to normalize any address when writing and denormalize when reading
{code}
    private String normalizeAddress(String hostAddress){
        return hostAddress.replaceAll("":"", ""_"");
    }

    // revert host address
    private String denormalizeAddress(String hostAddress){
        return hostAddress.replaceAll(""_"", "":"");
    }
{code};;;","18/Feb/16 07:10;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/495

    IGNITE-2416: TcpDiscoverySharedFsIpFinder to work with IPv6 addresses.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-2416

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/495.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #495
    
----
commit 96e0fa72b0b71a92621f30a737b2aafda4413d74
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-02-18T06:58:41Z

    IGNITE-2416: TcpDiscoverySharedFsIpFinder to work with IPv6 addresses.

----
;;;","18/Feb/16 13:21;yzhdanov;Roman, have you tested this on ip v6 network?;;;","19/Feb/16 01:02;shroman;On Linux only. I started two nodes on one machine with IPv6 only.
{noformat}Topology snapshot [ver=2, servers=2, clients=0, CPUs=1, heap=2.0GB]{noformat}

Denis, can you possibly check it on Windows? (with your original {{MyTcpDiscoverySharedFsIpFinder}});;;","19/Feb/16 01:45;shroman;Btw, I have confirmed the failure on Windows ipv6 loopback address 0:0:0:0:0:0:0:1 with 1.5.0.final and fix with the provided solution.;;;","23/Feb/16 04:22;shroman;It's a basic fix and probably does not require a review, but I am unsure since it is labeled 'important.'
I will merge it to the master, and if you have any further comments, please let me know.;;;","24/Feb/16 03:01;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/495
;;;","24/Feb/16 03:06;shroman;Merged to the master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add an example of usage for CacheLoadOnlyStoreAdapter,IGNITE-2415,12932679,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,dmagda,dmagda,20/Jan/16 10:05,24/Mar/16 08:22,14/Jul/23 06:20,24/Mar/16 02:07,1.5.0.final,,,1.6,,,,,,0,,,,"There is a high demand on the functionality provided by {{CacheLoadOnlyStoreAdapter}} from the community.

It's quite often needed to preload a cache from a read only storage that can be a DB, CSV or other file.

Definately it's time to add the example.
 ",,dmagda,githubbot,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 24 08:08:07 UTC 2016,,,,,,,,,,"0|i2rqbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jan/16 10:07;dmagda;Relevant discussion on user list
http://apache-ignite-users.70518.x6.nabble.com/Grouping-cache-when-loading-data-using-CacheStore-td2640.html;;;","22/Mar/16 05:28;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/569

    IGNITE-2415: CacheLoadOnlyStoreAdapter use example.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite ignite-2415

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/569.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #569
    
----
commit ad704391e8d6f4019d4401a43b3cede197b860a0
Author: shtykh_roman <rshtykh@yahoo.com>
Date:   2016-03-22T05:27:34Z

    IGNITE-2415: CacheLoadOnlyStoreAdapter use example.

----
;;;","22/Mar/16 05:29;shroman;[~dmagda] Denis, would you be able to review this example?;;;","22/Mar/16 08:08;dmagda;[~roman_s], yes I'll take a look at your changes in the nearest couple of days.;;;","22/Mar/16 13:11;dmagda;Roman, thanks for taking care of this. I've reviewed your changes and provided some comments directly in the pull-request.;;;","23/Mar/16 03:13;shroman;Denis, thank you for the review.
I made the changes and confirmed it runs fine if you start an additional node using ExampleNodeStartup. Also, I have switched to Person model -- you are right, no need to create another one.;;;","23/Mar/16 14:50;dmagda;Roman,

Several minor comments.

1) Trim p[5] in this line
new Person(Long.valueOf(p[0]), Long.valueOf(p[1]), p[2], p[3], Double.valueOf(p[4]), p[5].trim())
Otherwise output of the following line is broken (at least on my Windows machine)
System.out.println("">>> Data for the person by id1: "" + cache.get(1L));

The bug is caused by '/r' that is added to the end of the resume field's content.

2) Please add this example to {{IgniteExamplesSelfTestSuite}}.

Once this fixed please go ahead and merge your changes. Thanks!;;;","23/Mar/16 14:52;dmagda;One more note. Please send an email on user list saying that you added such a useful example to Ignite. It will help those who answer questions coming to this list refer to this example whenever is needed. ;;;","24/Mar/16 02:07;shroman;Thank you, Denis. I missed that '/r' thing on Linux.
Merged now.;;;","24/Mar/16 08:08;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/569
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: TestWithExpiryPolicy fails,IGNITE-2414,12932672,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ptupitsyn,ptupitsyn,20/Jan/16 09:41,05/Aug/16 08:08,14/Jul/23 06:20,20/Jan/16 10:50,1.1.4,,,1.6,platforms,,,,,0,,,,"IGNITE-1423 is not yet fixed, but we can split our test in two, for zero and negative expiry, and for positive expiry, to have better coverage.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1423,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 05 08:08:38 UTC 2016,,,,,,,,,,"0|i2rqaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jan/16 09:48;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/412

    IGNITE-2414 .NET: TestWithExpiryPolicy fails

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2414

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/412.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #412
    
----
commit 29ed47de29a31952ec8ae5f75e44da8a76b0e769
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-01-20T09:44:53Z

    IGNITE-2414 .NET: TestWithExpiryPolicy fails

----
;;;","05/Aug/16 08:08;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/412
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT documentation on readme.io is missing,IGNITE-2411,12932630,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,,dmagda,dmagda,20/Jan/16 06:47,24/Feb/16 15:45,14/Jul/23 06:20,24/Feb/16 15:45,1.5.0.final,,,1.5.0.final,documentation,,,,,0,,,,"MQTT streamer was released as a part of 1.5. However there is no documentation available on readme.io describing the new streaming functionality.

Following documentation can be used as a reference
https://apacheignite.readme.io/docs/jms-data-streamer
https://apacheignite.readme.io/docs/flume-data-streamer",,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 24 15:45:53 UTC 2016,,,,,,,,,,"0|i2rq13:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Feb/16 08:34;dmagda;Make sure that the doc is added to both 1.5 and 1.6 versions on readme.io.;;;","24/Feb/16 15:45;dmagda;Added by Raul.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Platform .NET JVM crashed on TC,IGNITE-2410,12932475,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vershov,vershov,19/Jan/16 17:14,20/Jan/16 12:01,14/Jul/23 06:20,20/Jan/16 12:00,1.5.0.final,,,1.6,platforms,,,,,0,,,,"Result: 	JVM crashed (new); 
tests passed: 107; 
NUnit runner failure (new) 	Agent: 	w_box_02 (Default pool)
Time: 	18 Jan 16 22:12 - 22:25 (13m:08s) 	T
riggered by: 	Git on 18 Jan 16 16:22
Branch: 	refs/heads/master
Artifacts are in the attachment.
{noformat}
[22:25:18][Step 8/11] #
[22:25:18][Step 8/11] # A fatal error has been detected by the Java Runtime Environment:
[22:25:18][Step 8/11] #
[22:25:18][Step 8/11] #  Internal Error (safepoint.cpp:692), pid=9052, tid=4356
[22:25:18][Step 8/11] #  fatal error: Deadlock in safepoint code.  Should have called back to the VM before blocking.
[22:25:18][Step 8/11] #
[22:25:18][Step 8/11] # JRE version: Java(TM) SE Runtime Environment (7.0_80-b15) (build 1.7.0_80-b15)
[22:25:18][Step 8/11] # Java VM: Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode windows-amd64 compressed oops)
[22:25:18][Step 8/11] # Failed to write core dump. Minidumps are not enabled by default on client versions of Windows
[22:25:18][Step 8/11] #
[22:25:18][Step 8/11] # An error report file with more information is saved as:
[22:25:18][Step 8/11] # C:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core.Tests\bin\x64\Debug\hs_err_pid9052.log
[22:25:18][Step 8/11] 2016-01-18 22:25:18,794 [4356] ERROR JetBrains.TeamCity.NUnitLauncher.ErrorLoggerImpl - Unhandled exception in remote appdomain: System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.Release(Void* target)
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.Release(IUnmanagedTarget target) in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedUtils.cs:line 702
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedTarget.ReleaseHandle() in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedTarget.cs:line 66
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Cleanup()
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Finalize()
[22:25:18][Step 8/11] 2016-01-18 22:25:18,794 [4356] WARN  JetBrains.Container.Log4netDefaultLoggerInitializer - Unhandled exception in current domain: System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.Release(Void* target)
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.Release(IUnmanagedTarget target) in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedUtils.cs:line 702
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedTarget.ReleaseHandle() in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedTarget.cs:line 66
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Cleanup()
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Finalize(),    at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.Release(Void* target)
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.Release(IUnmanagedTarget target) in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedUtils.cs:line 702
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedTarget.ReleaseHandle() in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedTarget.cs:line 66
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Cleanup()
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Finalize(), (null)
[22:25:18][Step 8/11] 2016-01-18 22:25:18,794 [4356] ERROR JetBrains.TeamCity.NUnitLauncher.ErrorLoggerImpl - Unhandled exception in remote appdomain: System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.Release(Void* target)
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.Release(IUnmanagedTarget target) in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedUtils.cs:line 702
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedTarget.ReleaseHandle() in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedTarget.cs:line 66
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Cleanup()
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Finalize()
[22:25:18][Step 8/11] 2016-01-18 22:25:18,794 [4356] WARN  JetBrains.Container.Log4netDefaultLoggerInitializer - Unhandled exception in current domain: System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.Release(Void* target)
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.Release(IUnmanagedTarget target) in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedUtils.cs:line 702
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedTarget.ReleaseHandle() in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedTarget.cs:line 66
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Cleanup()
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Finalize(),    at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.Release(Void* target)
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.Release(IUnmanagedTarget target) in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedUtils.cs:line 702
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedTarget.ReleaseHandle() in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedTarget.cs:line 66
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Cleanup()
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Finalize(), (null)
[22:25:18][Step 8/11] 2016-01-18 22:25:18,794 [4356] ERROR JetBrains.TeamCity.NUnitLauncher.ErrorLoggerImpl - Unhandled exception in remote appdomain: System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.Release(Void* target)
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.Release(IUnmanagedTarget target) in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedUtils.cs:line 702
[22:25:18][Step 8/11]    at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedTarget.ReleaseHandle() in c:\BuildAgent\work\b9d877891a53d8fe\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedTarget.cs:line 66
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Cleanup()
[22:25:18][Step 8/11]    at System.Runtime.InteropServices.CriticalHandle.Finalize()
{noformat}",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/16 17:16;vershov;Ignite_Tests_Ignite_Platform_.NET_224_artifacts.zip;https://issues.apache.org/jira/secure/attachment/12783142/Ignite_Tests_Ignite_Platform_.NET_224_artifacts.zip",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 20 12:00:40 UTC 2016,,,,,,,,,,"0|i2rp2n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jan/16 08:54;ptupitsyn;CacheAbstractTest.TestDestroy causes this, because ProcessorDestroyCache is not void by mistake, so garbage data gets into unmanagedTarget, and causes crash when Release is called.;;;","20/Jan/16 11:46;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/413

    IGNITE-2410 Fix JVM crash in DestroyCache

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2410

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/413.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #413
    
----
commit 747e83f30ebfd60b9e37bf153cf8475cd7ca4ea9
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-01-20T11:03:11Z

    IGNITE-2410 Fix JVM crash in DestroyCache

----
;;;","20/Jan/16 12:00;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/413
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetAll returns NULL after putAll,IGNITE-2407,12932442,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,krybakova,skozlov,skozlov,19/Jan/16 15:12,10/May/16 11:11,14/Jul/23 06:20,05/Apr/16 13:18,1.5.0.final,,,1.6,cache,,,,,0,,,,"0. Copy attached configurations files into examples\config directory, source code into org.apache.ignite.examples.datagrid

1. Start server 6 nodes: 
{noformat}
bin\ignite examples\config\putall.xml
{noformat}

2. Start {{CachePutAllGetAllExample}} in IDEA. The example iterates removeAll/put/putAll/getAll operations over same cache. The expected behaviour is no NULL values returned by getAll.

3. The output like the following:
{noformat}
1345

C:\Java\jdk1.7.0_80\bin\java -Didea.launcher.port=7532 ""-Didea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 14.1.4\bin"" -Dfile.encoding=windows-1251 -classpath ""C:\Java\jdk1.7.0_80\jre\lib\charsets.jar;C:\Java\jdk1.7.0_80\jre\lib\deploy.jar;C:\Java\jdk1.7.0_80\jre\lib\javaws.jar;C:\Java\jdk1.7.0_80\jre\lib\jce.jar;C:\Java\jdk1.7.0_80\jre\lib\jfr.jar;C:\Java\jdk1.7.0_80\jre\lib\jfxrt.jar;C:\Java\jdk1.7.0_80\jre\lib\jsse.jar;C:\Java\jdk1.7.0_80\jre\lib\management-agent.jar;C:\Java\jdk1.7.0_80\jre\lib\plugin.jar;C:\Java\jdk1.7.0_80\jre\lib\resources.jar;C:\Java\jdk1.7.0_80\jre\lib\rt.jar;C:\Java\jdk1.7.0_80\jre\lib\ext\access-bridge-64.jar;C:\Java\jdk1.7.0_80\jre\lib\ext\dnsns.jar;C:\Java\jdk1.7.0_80\jre\lib\ext\jaccess.jar;C:\Java\jdk1.7.0_80\jre\lib\ext\localedata.jar;C:\Java\jdk1.7.0_80\jre\lib\ext\sunec.jar;C:\Java\jdk1.7.0_80\jre\lib\ext\sunjce_provider.jar;C:\Java\jdk1.7.0_80\jre\lib\ext\sunmscapi.jar;C:\Java\jdk1.7.0_80\jre\lib\ext\zipfs.jar;C:\Work\apache-ignite-fabric-1.5.0.final-bin\examples\target\classes;C:\Users\gridgain\.m2\repository\javax\cache\cache-api\1.0.0\cache-api-1.0.0.jar;C:\Users\gridgain\.m2\repository\org\apache\ignite\ignite-core\1.5.0.final\ignite-core-1.5.0.final.jar;C:\Users\gridgain\.m2\repository\org\gridgain\ignite-shmem\1.0.0\ignite-shmem-1.0.0.jar;C:\Users\gridgain\.m2\repository\org\apache\ignite\ignite-spring\1.5.0.final\ignite-spring-1.5.0.final.jar;C:\Users\gridgain\.m2\repository\org\springframework\spring-core\4.1.0.RELEASE\spring-core-4.1.0.RELEASE.jar;C:\Users\gridgain\.m2\repository\org\springframework\spring-aop\4.1.0.RELEASE\spring-aop-4.1.0.RELEASE.jar;C:\Users\gridgain\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\gridgain\.m2\repository\org\springframework\spring-beans\4.1.0.RELEASE\spring-beans-4.1.0.RELEASE.jar;C:\Users\gridgain\.m2\repository\org\springframework\spring-context\4.1.0.RELEASE\spring-context-4.1.0.RELEASE.jar;C:\Users\gridgain\.m2\repository\org\springframework\spring-expression\4.1.0.RELEASE\spring-expression-4.1.0.RELEASE.jar;C:\Users\gridgain\.m2\repository\org\springframework\spring-tx\4.1.0.RELEASE\spring-tx-4.1.0.RELEASE.jar;C:\Users\gridgain\.m2\repository\org\springframework\spring-jdbc\4.1.0.RELEASE\spring-jdbc-4.1.0.RELEASE.jar;C:\Users\gridgain\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\gridgain\.m2\repository\org\apache\ignite\ignite-log4j\1.5.0.final\ignite-log4j-1.5.0.final.jar;C:\Users\gridgain\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\gridgain\.m2\repository\org\apache\ignite\ignite-indexing\1.5.0.final\ignite-indexing-1.5.0.final.jar;C:\Users\gridgain\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\gridgain\.m2\repository\org\apache\lucene\lucene-core\3.5.0\lucene-core-3.5.0.jar;C:\Users\gridgain\.m2\repository\com\h2database\h2\1.3.175\h2-1.3.175.jar;C:\Users\gridgain\.m2\repository\com\google\code\simple-spring-memcached\spymemcached\2.7.3\spymemcached-2.7.3.jar;C:\Users\gridgain\.m2\repository\org\jboss\netty\netty\3.2.0.Final\netty-3.2.0.Final.jar;C:\Users\gridgain\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\gridgain\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 14.1.4\lib\idea_rt.jar"" com.intellij.rt.execution.application.AppMain org.apache.ignite.examples.datagrid.CachePutAllGetAllExample
[17:56:05]    __________  ________________ 
[17:56:05]   /  _/ ___/ |/ /  _/_  __/ __/ 
[17:56:05]  _/ // (7 7    // /  / / / _/   
[17:56:05] /___/\___/_/|_/___/ /_/ /___/  
[17:56:05] 
[17:56:05] ver. 1.5.0-final#20151229-sha1:f1f8cda2
[17:56:05] 2015 Copyright(C) Apache Software Foundation
[17:56:05] 
[17:56:05] Ignite documentation: http://ignite.apache.org
[17:56:05] 
[17:56:05] Quiet mode.
[17:56:05]   ^-- Logging to file 'C:\Work\apache-ignite-fabric-1.5.0.final-bin\work\log\ignite-5459abe4.log'
[17:56:05]   ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or ""-v"" to ignite.{sh|bat}
[17:56:05] 
[17:56:05] OS: Windows 7 6.1 amd64
[17:56:05] VM information: Java(TM) SE Runtime Environment 1.7.0_80-b15 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 24.80-b11
[17:56:05] Initial heap size is 254MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[17:56:06] Configured plugins:
[17:56:06]   ^-- None
[17:56:06] 
[17:56:07] Security status [authentication=off, tls/ssl=off]
[17:56:08] Performance suggestions for grid  (fix if possible)
[17:56:08] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[17:56:08]   ^-- Disable eviction policy (remove from configuration)
[17:56:08]   ^-- Decrease number of backups (set 'keyBackups' to 0)
[17:56:08]   ^-- Enable ATOMIC mode if not using transactions (set 'atomicityMode' to ATOMIC)
[17:56:08] 
[17:56:08] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[17:56:08] 
[17:56:08] Ignite node started OK (id=5459abe4)
[17:56:08] Topology snapshot [ver=25, servers=6, clients=1, CPUs=8, heap=9.5GB]

>>> Starting put-putAll-getAll example for iteration 1
...
>>> Starting put-putAll-getAll example for iteration 41
Got NULL for key=29
Got NULL for key=36
Got NULL for key=41
>>> Starting put-putAll-getAll example for iteration 42
...
>>> Starting put-putAll-getAll example for iteration 436
Got NULL for key=29
Got NULL for key=36
Got NULL for key=41
>>> Starting put-putAll-getAll example for iteration 437
...
>>> Starting put-putAll-getAll example for iteration 997
Got NULL for key=5
Got NULL for key=10
Got NULL for key=18
Got NULL for key=23
Got NULL for key=26
Got NULL for key=37
Got NULL for key=46
Got NULL for key=47
Got NULL for key=48
>>> Starting put-putAll-getAll example for iteration 998
>>> Starting put-putAll-getAll example for iteration 999
>>> Starting put-putAll-getAll example for iteration 1000
[17:56:31] Ignite node stopped OK [uptime=00:00:22:718]

Process finished with exit code 0
{noformat}
",,agoncharuk,sboikov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1345,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/16 15:13;skozlov;CachePutAllGetAllExample.java;https://issues.apache.org/jira/secure/attachment/12783117/CachePutAllGetAllExample.java","19/Jan/16 15:13;skozlov;putall-client.xml;https://issues.apache.org/jira/secure/attachment/12783116/putall-client.xml","19/Jan/16 15:13;skozlov;putall.xml;https://issues.apache.org/jira/secure/attachment/12783115/putall.xml",,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 05 13:18:46 UTC 2016,,,,,,,,,,"0|i2rovb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jan/16 13:24;sboikov;I found that PRIMARY_SYNC mode is broken for transactional cache, it doesn't really wait for primary nodes responses (see  GridNearTxFinishFuture - waits for FinishMiniFutures only in FULL_SYNC mode). Added test IgniteCachePrimarySyncTest.;;;","19/Feb/16 12:32;sboikov;Fixed in branch ignite-2407 (for primary_sync do not early finish GridNearTxFinishFuture.MiniFuture, send GridNearTxFinishResponse after commit on primary).

Alexey, please review.;;;","02/Mar/16 18:08;agoncharuk;Semyon,

Changes look good. I have one question, though, regarding {{GridDhtTxFinishFuture:221}}. Why do we need to send finish reply in FULL_ASYNC mode? Shouldn't we just check {{if (tx.syncMode() == FULL_SYNC)}} ?;;;","02/Mar/16 18:23;sboikov;Alexey,

We always need finish responses because there is code which waits for finish responses before acquring locks (see usages of IgniteTxManager.awaitFinishAckAsync, IgniteTxManager.beforeFinishRemote). Didn't touch this to be on the safe side.;;;","17/Mar/16 18:07;agoncharuk;Got it now, thanks! Good to merge.;;;","05/Apr/16 13:18;sboikov;Merged fix in master (commit f1af2c7).

Sergey, please verify that your test pass now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoverySpi.setLocalPortRange set  0 doesn't work,IGNITE-2404,12932399,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ryanzhaocs,dmagda,dmagda,19/Jan/16 12:17,19/Apr/16 04:28,14/Jul/23 06:20,19/Apr/16 04:28,,,,,,,,,,0,community,newbie,,"Local port range set to 0 presently doesn't work at least for TcpCommunicationSpi and TcpDiscoverySpi. However SPIs support it.

In my understanding the condition has to changed to the following one (from < to <=).

x = port; x <= port + range",,dmagda,githubbot,ryanzhaocs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 19 04:27:48 UTC 2016,,,,,,,,,,"0|i2rolr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jan/16 12:18;dmagda;Refer to this discussion for more details
http://apache-ignite-users.70518.x6.nabble.com/TcpDiscoverySpi-setLocalPortRange-value-must-be-0-tp2606.html;;;","11/Mar/16 09:36;ryanzhaocs;The doc on TcpCommunicationSpi.setLocalPortRange() saying that  ""If port range value is 0, then implementation will try bind only to the port provided by setLocalPort(int) method and fail if binding to this port did not succeed.""
So, I think it would be a right choice to treat localPortRange=0 as localPortRange=1.
 I will solve it.;;;","11/Mar/16 15:42;githubbot;GitHub user ryanzz opened a pull request:

    https://github.com/apache/ignite/pull/549

    IGNITE-2404

    For TcpDiscoverySpi and TcpCommunicationSpi, if port range value is 0, then implementation will try bind only to the port provided by setLocalPort(int) method and fail if binding to this port did not succeed.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ryanzz/ignite ignite-2404

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/549.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #549
    
----
commit 7c6d33a49f8005d5dc66f10044efe8cfea9ad8be
Author: Ryan Zhao <ryan.zhao.cs@gmail.com>
Date:   2016-03-11T14:54:41Z

    fixed ignite-2404

----
;;;","14/Mar/16 10:42;ryanzhaocs;Hi, in the implementation of the change presented above, I have found that many component in Ignite have a portRange parameter, such as IgniteConfiguration#getTimeServerPortRange and ConnectorConfiguration#getPortRange. And in these scenarios portRange equals 0 is considered to be a mistake.
So, I think we should keep this consistency, and make the docs more clear. 
Any thoughts?;;;","14/Mar/16 10:54;dmagda;Hi,

Thanks for the contribution. I'll review your changes in the nearest couple of days and will answer on other questions.;;;","22/Mar/16 09:18;dmagda;[~ryanzhaocs],

I've reviewed your changes and left my comments directly in the pull-request.

As per IgniteConfiguration#getTimeServerPortRange and ConnectorConfiguration#getPortRange let's make sure that port range set to '0' will work with them as well. To achieve this you can modify the loops where these ranges are used in a way I recommended to do for TcpDiscoverySpi in the pull-request (only variables will have different names)

{noformat}
int lastPort = spi.locPortRange == 0 ? spi.locPort : spi.locPort + spi.locPortRange - 1;

for (port = spi.locPort; port <= lasPort; port++)
{noformat};;;","23/Mar/16 09:35;ryanzhaocs;[~dmagda]

Your proposal is considerably more robust, and I will get it done.;;;","23/Mar/16 09:50;dmagda;Thanks, please let me know when you're ready for review. Don't forget to check your changes against all the test suites using TeamCity referring to this section
https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-1.CreateGitHubpull-request

The section includes the link to TeamCity at the very end.;;;","12/Apr/16 12:32;dmagda;Hi, [~ryanzhaocs] when do you expect to finish working on this task? Do you need any assistance from community side?;;;","12/Apr/16 14:01;ryanzhaocs;Hi Denis, I just found that I need manually run tests on teamcity.
I will let you know as soon as possible when all test passed.;;;","13/Apr/16 07:25;ryanzhaocs;Hi, I've run all the tests. And, there are some test fails which seems not caused by my changes. Does it matter?;;;","15/Apr/16 04:39;dmagda;Hi [~ryanzhaocs],

Yes, there can be some tests that fail from time to time and not related to your changes. Please share the link to tests results and the link to current pull-request with me.;;;","18/Apr/16 11:00;ryanzhaocs;Pull request: https://github.com/apache/ignite/pull/549
tests result: pull/549/merge;;;","19/Apr/16 04:27;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/549
;;;","19/Apr/16 04:27;dmagda;Thanks. I've reviewed and merged your changes into the master. Well done!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC SQL Exceptions swallowed in case of not valid SQL query,IGNITE-2397,12932151,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,kuaw26,kuaw26,18/Jan/16 13:31,21/Jun/17 11:07,14/Jul/23 06:20,18/Apr/16 10:18,1.5.0.final,,,1.6,jdbc,,,,,0,,,,"In case of SQL against not existing table exception with valuable message is returned, but in case of not valid SQL against existing table exception with not so valuable message returned.

We need somehow analyse exception cause and in case it has SQL exception - extract valuable information from it.",,anovikov,kuaw26,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 25 20:24:27 UTC 2016,,,,,,,,,,"0|i2rn2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Apr/16 10:18;anovikov;Fixed. Please review.;;;","22/Apr/16 09:29;kuaw26;Semen, I reviewed Andrey's changes - looks good for me.
Could you take a look and approve merge to master?
See branch community\ignite-2397. Branch was created from master.;;;","25/Apr/16 20:24;sboikov;Looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic cache changes are not tracked by service processor,IGNITE-2396,12932102,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,agoncharuk,agoncharuk,18/Jan/16 09:09,13/Sep/16 08:47,14/Jul/23 06:20,13/Sep/16 08:46,,,,1.7,,,,,,0,community,,,"Currently service processor handles only discovery node join/leave/fail events. Now consider the following two scenarios:
---------------------
 - N nodes are started. Topology version is (N, 0)
 - A dynamic cache is created. Topology version is (N, 1)
 - An affinity singleton service is deployed. 

On step (3), when assignment is calculated, service processor uses topology version (N, 0) (see org.apache.ignite.internal.processors.service.GridServiceProcessor.DeploymentListener#onDeployment). As a result, no affinity nodes are returned for assignment and service is not deployed.

---------------------
 - N nodes are started. Topology version is (N, 0)
 - An affinity singleton service is deployed. 
 - A dynamic cache is created. Topology version is (N, 1)

On step (3) custom discovery event is generated, but it is not handled by service processor, so no reassignment logic is triggered and service is not deployed.

Proposed solution is as follows:
 - Use a correct topology version for service deployment (ctx.discovery().topologyVersionEx()).
 - Event listener should handle custom events that trigger dynamic cache start and stop.
 - Additionally need to investigate whether reassignment logic should be in any way synchronized with the partition exchange future completion. 

org.apache.ignite.internal.processors.service.IgniteServiceDynamicCachesSelfTest is added to master. Need to add it to the services test suite once the fix is implemented.",,agoncharuk,githubbot,pires,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 13 08:46:54 UTC 2016,,,,,,,,,,"0|i2rms7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jan/16 08:05;githubbot;GitHub user agoncharuk opened a pull request:

    https://github.com/apache/ignite/pull/416

    IGNITE-2396 - Fixed service deployment on cache creation.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/agoncharuk/ignite ignite-2396

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/416.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #416
    
----
commit 30ff1588a4f0c1374d78d762cb3877611040ae3c
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-01-22T08:04:29Z

    IGNITE-2396 - Fixed service deployment on cache creation.

----
;;;","28/Jan/16 10:12;githubbot;Github user agoncharuk closed the pull request at:

    https://github.com/apache/ignite/pull/416
;;;","28/Jan/16 10:15;githubbot;GitHub user agoncharuk opened a pull request:

    https://github.com/apache/ignite/pull/432

    IGNITE-2396 - Fixed service deployment for dynamic cache creation.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/agoncharuk/ignite ignite-2396

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/432.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #432
    
----
commit d708e874d6e1a4c939043e5af79639a8460a7ff0
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2016-01-28T10:13:46Z

    IGNITE-2396 - Fixed service deployment for dynamic cache creation.

----
;;;","10/Feb/16 12:42;githubbot;Github user agoncharuk closed the pull request at:

    https://github.com/apache/ignite/pull/432
;;;","20/May/16 10:55;pires;If I may ask, what's the rationale behind moving this major bug from 1.6 to 1.7 (and who knows what will happen later)?;;;","13/Sep/16 08:46;sboikov;Test pass now, added it in suite. I think issues in service processor were fixed as part of affinity assignment refactoring in 1.7.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary marshaller: id mapper must be resolved according to configuration.,IGNITE-2395,12931476,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ashutak,ashutak,ashutak,15/Jan/16 14:25,25/Feb/16 16:04,14/Jul/23 06:20,25/Feb/16 16:04,,,,1.6,,,,,,0,,,,"The following scenario does not works
- start node with BinaryMarshaller and set BinaryConfiguration with not-default BinaryIdMapper (see BinarySimpleNameIdMapper)
- Execute the following code (it fails):
{code}
        BinaryObjectBuilder builder = builder(""org.my.Class"");
        BinaryObject bo = builder.build();
        assertEquals(""class"".hashCode(), bo.type().typeId());
{code}",,ashutak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 25 16:04:00 UTC 2016,,,,,,,,,,"0|i2rix3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jan/16 14:28;ashutak;There is a *workaround*. The following BinaryConfiguration have to be used:
{code}
        BinaryConfiguration bCfg = new BinaryConfiguration();
        bCfg.setIdMapper(BinarySimpleNameIdMapper.defaultInstance());
        bCfg.setTypeConfigurations(Arrays.asList(new BinaryTypeConfiguration(""org.my.Class"")));
{code};;;","15/Jan/16 14:58;ashutak;How to resolve id mapper according to configuration (code example)

{code}
    /**
     * @param typeName Type name.
     * @param cfg Binary configuration.
     * @return BinaryIdMapper according to configuration.
     */
    private static BinaryIdMapper resolveIdMapper(String typeName, BinaryConfiguration cfg) {
        assert typeName != null;

        BinaryIdMapper globalIdMapper = cfg.getIdMapper();

        Collection<BinaryTypeConfiguration> typeCfgs = cfg.getTypeConfigurations();

        if (typeCfgs != null) {
            for (BinaryTypeConfiguration typeCfg : typeCfgs) {
                String clsName = typeCfg.getTypeName();

                if (clsName != null && clsName.endsWith("".*"")) {
                    String pkgName = clsName.substring(0, clsName.length() - 2);
                    String typePkgName = typeName.substring(0, typeName.lastIndexOf('.'));

                    if (pkgName.equals(typePkgName)) {
                        BinaryIdMapper idMapper = globalIdMapper;

                        if (typeCfg.getIdMapper() != null)
                            idMapper = typeCfg.getIdMapper();

                        idMapper = resolveIdMapper(idMapper);

                        return idMapper;
                    }
                }
            }
        }

        return resolveIdMapper(globalIdMapper);
    }
{code};;;","15/Jan/16 15:42;ashutak;Note. In bounds of the issue all usages of {{BinaryFullNameIdMapper.defaultInstance()}} in internal classes should be checked.;;;","26/Jan/16 20:23;ashutak;Will be fixed in bounds of IGNITE-2191.;;;","25/Feb/16 16:04;ashutak;Fixed as a part of IGNITE-2191.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache loading from storage is called on client nodes,IGNITE-2394,12931453,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,alpert,dmagda,dmagda,15/Jan/16 13:03,30/May/16 10:08,14/Jul/23 06:20,17/May/16 14:21,1.5.0.final,,,1.7,,,,,,0,newbie,,,"If to call cache.loadCache(...) then the loading from a storage will happen on all the nodes including client nodes.

However, client nodes must be filtered out.
If to be more precise at least this place of the code has to be modified
{noformat}
    IgniteInternalFuture<?> globalLoadCacheAsync(@Nullable IgniteBiPredicate<K, V> p, @Nullable Object... args)
        throws IgniteCheckedException {
        ClusterGroup nodes = ctx.kernalContext().grid().cluster().forCacheNodes(ctx.name());
{noformat}
where forDataNodes() has to be used instead of forCacheNodes().

Also additional tests have to be added.

Discussion on the user list:
http://apache-ignite-users.70518.x6.nabble.com/Loadcache-behavior-tp2571.html",,alpert,dmagda,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/16 21:32;vkulichenko;LocalLoadTest.java;https://issues.apache.org/jira/secure/attachment/12782612/LocalLoadTest.java","20/Apr/16 14:36;alpert;master_186c860_IGNITE-2394.patch;https://issues.apache.org/jira/secure/attachment/12799764/master_186c860_IGNITE-2394.patch","03/Mar/16 23:40;alpert;master_baa1312_IGNITE-2394.patch;https://issues.apache.org/jira/secure/attachment/12791280/master_baa1312_IGNITE-2394.patch",,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 30 10:08:12 UTC 2016,,,,,,,,,,"0|i2rirz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jan/16 21:31;vkulichenko;Described solution will break data loading for local cache created on client (test attached). I think we should treat local cache as a special case and just invoke the {{CacheStore}} only locally, regardless of whether it's a server or client.;;;","03/Mar/16 23:41;alpert;Hi.

I want to work on that bug. Based on [~vkulichenko]'s comment I IgniteCacheProxy.loadCache that it checks cache type and if cache is local it calls cache().localLoadCache. 

So when you call either client or server cache is only loaded locally. Is that the correct way to imlement?

I appreciate your comments.;;;","09/Mar/16 09:14;dmagda;[~alpert],

Sure you can assign this ticket on yourself and contribute the fix. 

Answering on your questons.

> IgniteCacheProxy.loadCache that it checks cache type and if cache is local it calls cache().localLoadCache.
> So when you call either client or server cache is only loaded locally. Is that the correct way to imlement?

Yes, this looks good to me.

In addition you have to modify {{globalLoadCacheAsync}} implementation according to the description because the current fix doesn't take into account all the cases.

Finally, make sure to add missing tests that will check that you fix works fine and validate the fix following the pull-requests based contribution [1]

[1] https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-1.CreateGitHubpull-request;;;","29/Mar/16 03:32;dmagda;[~alpert], are you going to start working on the issue in the nearest time? I've seen that you assigned the ticket on yourself yesterday but there is still no progress for a long time.;;;","29/Mar/16 04:39;alpert;Hi [~dmagda].

I was busy for a while and now I am starting working on issue. 

Let me know if I should assign ticket to myself after I finished working on or when I just started.;;;","29/Mar/16 04:58;dmagda;Hi Alper,

You should assign the ticket on yourself and move it in ""IN PROGRESS"" state if you start working on it. Please refer to the page describing the process
https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute;;;","29/Mar/16 05:03;alpert;Hi [~dmagda].

Thanks for your comments. I will read refered page more carefully again.

Best regards.;;;","20/Apr/16 13:25;alpert;Hi.

I have made changes and wrote tests for it. But I am not sure about the behaviors so wanted to ask. Code is working as:

1 - Create a local cache on client and load(10 item) from client. client->cache.size=10, server->cache.size=0
2 - Create a local cache on server and load(10 item) from server. client->cache.size=0, server->cache.size=10
3 - Create a local cache on server and load(10 item) from client. client->cache.size=10, server->cache.size=0
4 - Create a replicated cache on client and load(10 item) from client. client->cache.size=0, server->cache.size=10
5 - Create a replicated cache on server and load(10 item) from client. client->cache.size=0, server->cache.size=10

The case I couldnt be sure is case 3. You can not load local cache to server from client. 

Is that an acceptable case? ;;;","20/Apr/16 13:36;dmagda;Actually I don't completely get what you mean in the statements. As an example you're saying

1 - Create a local cache on client and load(10 item) from client. client->cache.size=10, server->cache.size=0

What cache do you mean under ""server->cache.size=0""? According to your description you created only a local cache on a client node. Local caches are visible only on nodes that created and own them.;;;","20/Apr/16 14:39;alpert;Hi.

I attached my patch. Lets continue talking over it. I appreciate your comments.;;;","22/Apr/16 11:41;dmagda;[~vkulichenko], could you please review since I'm will be unavailable during the next couple of weeks.;;;","01/May/16 19:45;alpert;Is there any updates on that?;;;","02/May/16 05:27;vkulichenko;Hi Alper. Sorry for the delay, I will take a look in the next couple of days.;;;","09/May/16 11:43;alpert;Hi [~vkulichenko], 

I guess you didnt have any time last week. Will you this week?;;;","11/May/16 16:51;dmagda;Hi, sorry for the delay.

1. Please update to the latest version on the master and modify the following code from {{GridCacheAdapter.globalLoadCacheAsync}} to the usage of {{cacheDataNode}} predicate

{noformat}
ClusterGroup newNodesV2 = ctx.kernalContext().grid().cluster().forCacheNodes(ctx.name())
            .forPredicate(new IgnitePredicate<ClusterNode>() {
                @Override public boolean apply(ClusterNode node) {
                    return node.version().compareToIgnoreTimestamp(LOAD_CACHE_JOB_V2_SINCE) >= 0;
                }
            });
{noformat}

2. There is no need to introduce new test suite class, you can add all required tests into {{org.apache.ignite.internal.processors.cache.CacheClientStoreSelfTest}}.

3. In regards to the tests you has to check that {{load}} method is not called in your {{TestStore}} implementation during execution of the tests that check replicated and partitioned caches. This is the main point because there mustn't be any preloading in case of replicated and partitioned caches on the client side since the client can't hold data for this caches.

4. Organize all your changes on your personal branch, create a pull-request and validate the you haven't broken anything using TeamCity. Refer to this doc for more info https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-1.CreateGitHubpull-request;;;","14/May/16 17:19;alpert;I created a pull request: https://github.com/apache/ignite/pull/719. 

Some tests seems to fail. But I couldnot understand the reason. Could you check and feedback please?
;;;","17/May/16 06:26;dmagda;Alper,

I've reviewed your changes. They look good for me. Triggered tests validation on TC. If everything looks good the changes will be merged.;;;","17/May/16 14:21;dmagda;Alper, thanks for the contribution. I've merged your changes into release branch ignite-1.6.;;;","30/May/16 10:08;githubbot;Github user alpert closed the pull request at:

    https://github.com/apache/ignite/pull/719
;;;",,,,,,,,,,,,,,,,,,,,,,,,
affinityCall() execution hangs,IGNITE-2386,12931320,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,vkulichenko,vkulichenko,15/Jan/16 02:10,19/Jan/16 10:27,14/Jul/23 06:20,15/Jan/16 12:19,,,,1.6,cache,,,,,0,1.5.4,,,"Test reproducing the issue is attached. affinityCall() invocation hangs with the following trace:

{noformat}
""main"" prio=5 tid=0x00007f8b1b001800 nid=0x1703 waiting on condition [0x0000700000218000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000007ab170eb8> (a org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache$AffinityReadyFuture)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:994)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1303)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:157)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:115)
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.awaitTopologyVersion(GridAffinityAssignmentCache.java:477)
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.cachedAffinity(GridAffinityAssignmentCache.java:435)
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignmentCache.assignments(GridAffinityAssignmentCache.java:306)
	at org.apache.ignite.internal.processors.cache.GridCacheAffinityManager.assignments(GridCacheAffinityManager.java:159)
	at org.apache.ignite.internal.processors.affinity.GridAffinityProcessor.affinityCache(GridAffinityProcessor.java:333)
	at org.apache.ignite.internal.processors.affinity.GridAffinityProcessor.affinityKey(GridAffinityProcessor.java:238)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor.affinityCall(GridClosureProcessor.java:442)
	at org.apache.ignite.internal.IgniteComputeImpl.affinityCall(IgniteComputeImpl.java:130)
	at AffinityTest.main(AffinityTest.java:42)
{noformat}",,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/16 06:15;vkulichenko;AffinityTest.java;https://issues.apache.org/jira/secure/attachment/12782457/AffinityTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Fri Jan 15 12:19:56 UTC 2016,,,,,,,,,,"0|i2rhyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jan/16 12:19;sboikov;Hang was possible in scenario:
- two nodes (or two threads) try to create cache concurrently, this triggers two customer discovery message
- GridDiscoveryManager on each discovery message increments minor topology version, but GridCacheProcessor ignores second message (since cache was already created) and does not initiate partition exchange for it
- as result GridDiscoveryManager has invalid AffinityTopology version, and any attempt to use this version causes hang

Fixed this to do not increment minor topology version if exchange is not initiated (commit d881417).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Notification missed in continuous query,IGNITE-2384,12931318,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ntikhonov,vkulichenko,vkulichenko,15/Jan/16 02:07,19/Jan/16 13:31,14/Jul/23 06:20,19/Jan/16 10:43,,,,1.6,cache,,,,,0,1.5.4,,,"Test reproducing the issue is attached, fails on assertion on line 76.",,avk47,ntikhonov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/16 02:07;vkulichenko;ListenerTest.java;https://issues.apache.org/jira/secure/attachment/12782422/ListenerTest.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Tue Jan 19 13:31:31 UTC 2016,,,,,,,,,,"0|i2rhxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jan/16 13:31;ntikhonov;Fixed issue when topology version wasn't set for initial counter for partitions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-string system properties should be ignored in node attributes and update checker,IGNITE-2383,12930275,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,vkulichenko,vkulichenko,14/Jan/16 21:54,02/Jun/16 07:01,14/Jul/23 06:20,22/Apr/16 09:05,,,,1.6,general,,,,,0,,,,"user@ discussion: http://apache-ignite-users.70518.x6.nabble.com/Ignite-quot-bugs-quot-td2534.html

Some frameworks can put non-string and/or non-serializable values into system properties. We should ignore them in {{GridUpdateNotifier.getSystemProperties()}} method and when adding properties to node attributes.",,githubbot,sboikov,v.pyatkov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 02 07:01:18 UTC 2016,,,,,,,,,,"0|i2rbi7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Apr/16 14:30;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/659

    IGNITE-2383

    Non-string system properties should be ignored in node attributes and update checker

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vldpyatkov/ignite ignite-2383

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/659.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #659
    
----
commit a810a8e914c070dc65a4889025dfba2ac10b3445
Author: vdpyatkov <vpyatkov@gridgain.com>
Date:   2016-04-20T14:25:36Z

    IGNITE-2383
    Non-string system properties should be ignored in node attributes and update checker

----
;;;","22/Apr/16 09:05;v.pyatkov;All non-string properties are ignoring.;;;","28/Apr/16 12:22;sboikov;Reviewed, we also need to check if property key is string (fixed this, added check in the test).;;;","28/Apr/16 12:31;sboikov;Merged into master (commit c457370).;;;","02/Jun/16 07:01;githubbot;Github user vldpyatkov closed the pull request at:

    https://github.com/apache/ignite/pull/659
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: UnmanagedUtils.IgnitionStart return value is never used,IGNITE-2376,12930093,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ptupitsyn,ptupitsyn,14/Jan/16 10:11,18/Jan/16 09:22,14/Jul/23 06:20,18/Jan/16 09:21,1.1.4,,,1.6,platforms,,,,,0,,,,"UnmanagedUtils.IgnitionStart is used only once, and return value is not used.
Quick test to make it void resulted in OutOfMemory in tests on TC.
Need to investigate what is going on.",,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jan 18 09:21:54 UTC 2016,,,,,,,,,,"0|i2radr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jan/16 11:36;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/402

    IGNITE-2376 .NET: UnmanagedUtils.IgnitionStart return value is never used

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-2376

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/402.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #402
    
----
commit ba1b0b17a1eb2a8af1497655d571316fa403e244
Author: Pavel Tupitsyn <ptupitsyn@gridgain.com>
Date:   2016-01-14T11:35:59Z

    IGNITE-2376 .NET: UnmanagedUtils.IgnitionStart return value is never used

----
;;;","14/Jan/16 12:40;ptupitsyn;Turns out we get provider reference in OnStart callback. IgnitionStart changed to void and fixed.;;;","18/Jan/16 09:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/402
;;;","18/Jan/16 09:21;vozerov;Accepting. Though, I do not understand the nature of the leak. We wrap JNI reference into UnmanagedTarget, which should be released by .NET GC.

Anyway, provided patch handles the situation better.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache inconsistency: concurrent preloading from a storage when OFF HEAP is used,IGNITE-2365,12929454,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,agoncharuk,dmagda,dmagda,12/Jan/16 10:46,19/Jan/16 10:27,14/Jul/23 06:20,13/Jan/16 13:48,ignite-1.4,,,1.6,cache,,,,,0,1.5.4,important,,"Start two server nodes in parallel using {{TwoNodesEviction}} example attached.

Both nodes start preloading the full set of data from an underlying storage considering that in a cache only data for which a node is primary will reside.

However the node that joins the topology later will have much more entries in the on-heap part of the cache than expected ignoring eviction policy settings.

If to disable the eviction policy and off-heap then the example works fine.

",,agoncharuk,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/16 10:47;dmagda;TwoNodesEviction.java;https://issues.apache.org/jira/secure/attachment/12781799/TwoNodesEviction.java",,,,,,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 15 08:30:57 UTC 2016,,,,,,,,,,"0|i2r6fz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jan/16 13:48;agoncharuk;The issue was caused by the missed eviction policy notification during preloading in the case when entry was not loaded.;;;","15/Jan/16 08:30;agoncharuk;The issue was fixed in master by the commit 02dbcfd8ed2701a4f415c8871d0b8fd08bfa0583;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Race in MarshallerContextImpl when working with files that store ""id->clsName"" mapping",IGNITE-2359,12929387,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,dmagda,dmagda,12/Jan/16 06:27,19/Jan/16 10:26,14/Jul/23 06:20,13/Jan/16 06:49,ignite-1.4,,,1.6,cache,,,,,0,1.5.4,,,"There is a possible race that happens when several nodes are being started on the same box and try to preload 'clsName' for 'id' from a file stored in a work directory.

{noformat}
Caused by: javax.cache.integration.CacheLoaderException: java.lang.NullPointerException: Ouch! Argument cannot be null: val
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadCache(GridCacheStoreManagerAdapter.java:509)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.localLoadCache(GridCacheAdapter.java:3442)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter.localLoadCache(GridDhtCacheAdapter.java:448)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.localLoadCache(IgniteCacheProxy.java:372)
	at com.jefco.portfoliotrading.gets.loader.GGLifecycleBean.loadCache(GGLifecycleBean.java:69)
	at com.jefco.portfoliotrading.gets.loader.GGLifecycleBean.onLifecycleEvent(GGLifecycleBean.java:48)
	at org.apache.ignite.internal.IgniteKernal.notifyLifecycleBeans(IgniteKernal.java:620)
	... 8 more
Caused by: java.lang.NullPointerException: Ouch! Argument cannot be null: val
	at org.apache.ignite.internal.util.GridArgumentCheck.notNull(GridArgumentCheck.java:48)
	at org.apache.ignite.internal.util.GridArgumentCheck.notNull(GridArgumentCheck.java:61)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.tryPutIfAbsent(GridDhtAtomicCache.java:394)
	at org.apache.ignite.internal.MarshallerContextImpl.registerClassName(MarshallerContextImpl.java:114)
	at org.apache.ignite.internal.MarshallerContextImpl.className(MarshallerContextImpl.java:165)
	at org.apache.ignite.internal.MarshallerContextAdapter.getClass(MarshallerContextAdapter.java:174)
	at org.apache.ignite.marshaller.optimized.OptimizedMarshallerUtils.classDescriptor(OptimizedMarshallerUtils.java:256)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:309)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readArrayList(OptimizedObjectInputStream.java:602)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:281)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365)
	at com.jefco.portfoliotrading.gets.common.CumExec.readExternal(CumExec.java:273)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readExternalizable(OptimizedObjectInputStream.java:514)
	at org.apache.ignite.marshaller.optimized.OptimizedClassDescriptor.read(OptimizedClassDescriptor.java:803)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:315)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365)
	at org.apache.ignite.lang.IgniteBiTuple.readExternal(IgniteBiTuple.java:276)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readExternalizable(OptimizedObjectInputStream.java:514)
	at org.apache.ignite.marshaller.optimized.OptimizedClassDescriptor.read(OptimizedClassDescriptor.java:803)
	at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:315)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:365)
	at org.apache.ignite.marshaller.optimized.OptimizedMarshaller.unmarshal(OptimizedMarshaller.java:240)
	at org.gridgain.grid.internal.processors.cache.store.local.CacheFileLocalStoreFileManager$3.apply(CacheFileLocalStoreFileManager.java:1041)
	at org.gridgain.grid.internal.processors.cache.store.local.CacheFileLocalStoreMap.iterate(CacheFileLocalStoreMap.java:450)
	at org.gridgain.grid.internal.processors.cache.store.local.CacheFileLocalStoreStripedMap.iterate(CacheFileLocalStoreStripedMap.java:214)
	at org.gridgain.grid.internal.processors.cache.store.local.CacheFileLocalStoreFileManager.loadAll(CacheFileLocalStoreFileManager.java:1033)
	at org.gridgain.grid.cache.store.local.CacheFileLocalStore.loadCache(CacheFileLocalStore.java:581)
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadCache(GridCacheStoreManagerAdapter.java:483)
	... 14 more
{noformat}",,dmagda,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 13 06:49:35 UTC 2016,,,,,,,,,,"0|i2r613:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jan/16 06:49;sboikov;Added locking for files used by MarshallerContextImpl (commit 1d8c4e2).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Write behind store swallows exception trace in case of error,IGNITE-2358,12929377,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,vkulichenko,vkulichenko,12/Jan/16 04:44,08/Dec/16 16:21,14/Jul/23 06:20,08/Dec/16 16:21,,,,2.0,cache,,,,,0,,,,"See {{GridCacheWriteBehindStore:708}}:

{code}
LT.warn(log, e, ""Unable to update underlying store: "" + store);
{code}

The exception trace is never printed out in case of warnings, therefore user sees only message, which is usually not enough.",,agura,sboikov,vkulichenko,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 08 12:06:43 UTC 2016,,,,,,,,,,"0|i2r5yv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jan/16 04:45;vkulichenko;We should also revisit all other usages of warning logging with exceptions.;;;","12/Jan/16 07:43;yzhdanov;Here is the sample printout:
{{[03:45:14,763][WARNING][flusher-0-#47%null%][GridCacheWriteBehindStore] Unable to update underlying store: o.a.i.cache.store.jdbc.CacheJdbcPojoStore@7d721f3}}

We should also fix toString() for all stores provided.
;;;","07/Dec/16 15:58;agura;Exception traces logging are already fixed (see IGNITE-3770). So only provided store implementations should be fixed.;;;","07/Dec/16 18:24;agura;{{toString()}} method added to all non-test cache store implementations except of {{PlatformDotNetCacheStore}}. PR created: https://github.com/apache/ignite/pull/1329

Please review.;;;","08/Dec/16 12:06;sboikov;Looks ok, but 'toString' should be placed at the end of classes.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ensure that Hadoop client is still operational after failed map-reduce jobs.,IGNITE-2354,12929137,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,11/Jan/16 10:10,12/Apr/16 13:15,14/Jul/23 06:20,12/Apr/16 13:15,ignite-1.4,,,1.6,hadoop,,,,,0,important,,,"We need to ensure that MR failures on the server doesn't block further job submissions. 

First of all we should cover such situations with tests.
1) Test exceptions on all job stages (setup, map, reduce, combine, cleanup)
2) Test several exception types: 
- Exceptions expected from Hadoop interface
- Exceptions unexpected form Hadoop interface
- Errors.",,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2725,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 12 13:05:15 UTC 2016,,,,,,,,,,"0|i2r4hr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/16 15:33;iveselovskiy;Pull request: https://github.com/apache/ignite/pull/622 .
New test: org.apache.ignite.internal.processors.hadoop.HadoopMapReduceErrorResilienceTest .;;;","11/Apr/16 10:18;vozerov;Ivan,

Declining mainly due a number of coding conventions violations:
1) Empty methods must have ""no-op"" comment.
2) Variables must be placed before methods.
3) Inner class must be placed after all methods of parent class.
4) No blank line between class definition and the first member.
5) Missing {{inheritDoc}} on overriden methods.
6) Missing Apache headers
7) Missing class descirptions.
8) {{ErrorSimulator}} - missing {{Hadoop}} prefix.

Non-style problem: 
9) maxApiModeBits - too complex. We code Java, not CPP. Please convert it to array, collection, class, whatever.;;;","12/Apr/16 13:05;iveselovskiy;fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS shows incorrect file modification time when running over secondary file system.,IGNITE-2352,12929131,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vozerov,vozerov,vozerov,11/Jan/16 09:44,25/Feb/16 11:38,14/Jul/23 06:20,25/Feb/16 11:38,ignite-1.4,,,1.6,igfs,,,,,0,important,,,"Steps to reproduce:
1) Create a file in a secondary file system.
2) Access this file directly and observe creation date X.
3) Now access this file indirectly through IGFS and observe that it will have different creation date Y. 

We need to make such properties equal.",,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 23 18:50:36 UTC 2016,,,,,,,,,,"0|i2r4gf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Feb/16 12:20;iveselovskiy;https://github.com/apache/ignite/pull/501;;;","19/Feb/16 14:21;vozerov;My comments:
1) IgfsFileInfo - you propagate ""modificationTime"", but do not do that for ""accessTime"". Is it normal?
2) It looks like constructor ""IgfsFileInfo(IgfsFile f, boolean evictExclude)"". It is used in two places with the same pattern: IgfsFile -> IgfsFileInfo -> IgfsFileImpl. Let's remove it and simplify the chain: IgfsFile -> IgfsFileImpl.;;;","23/Feb/16 18:50;iveselovskiy;1) fixed: accessTime is now propagated from the underlying file system as well as modificationTime. 
Note however, that 
(a) accessTime in IGFS is not handled as real access time (due to performance reasons); 
(b) method org.apache.ignite.IgniteFileSystem#setTimes does not work with dual file systems, so the accessTime can be treated as a read-only property propagated from underlying file system.
2) fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebSessionFilter doesn't support session ID renewal,IGNITE-2344,12928638,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,samaitra,dmagda,dmagda,08/Jan/16 13:20,04/Jul/17 20:38,14/Jul/23 06:20,15/Jun/16 10:14,ignite-1.4,,,1.7,general,,,,,0,,,,"It's quite a common scenario to update a session ID after a user successfully logged in preserving the session content for further usage.

Ignite's {{WebSessionFilter}} doesn't support such a use case creating a session from scratch.

To support this behavior we can store a special Cookie that will hold latest session ID. When a session is passed to {{WebSessionFilter}} and the filter detects that this is a fresh session it will check the Cookie in advance. If the Cookie exists and holds an old session ID then the filter will be able to get a session content from the cache using the old ID and put it back using the new ID.",,avinogradov,dmagda,githubbot,samaitra,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 04 20:38:25 UTC 2017,,,,,,,,,,"0|i2r1f3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jan/16 13:21;dmagda;The ticket was created as a result of this discussion
http://apache-ignite-users.70518.x6.nabble.com/Web-app-with-CMS-td2414.html;;;","04/Jun/16 21:05;samaitra;Hello

I have raised the following PR for the change.

https://github.com/apache/ignite/pull/780

Regards
Saikat;;;","15/Jun/16 10:14;vkulichenko;Looks good to me, merged to master.

Thanks, Saikat!;;;","18/Jul/16 07:54;avinogradov;Saikat,

I see failures of testSessionRenewalDuringLogin test at TeamCity ( http://149.202.210.143:8111/viewLog.html?buildId=282358&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteWebSessions )
But can't reproduce them locally, do you have any ideas why this happens?;;;","18/Jul/16 18:29;samaitra;[~avinogradov]

Hi Anton,

In this test we create a realm.properties file in local disk and read it to create a map of valid user credentials for login. I am observing Login failed error message in the log which may be caused if the local file was not accessible for valid credentials. I will enable detail logging to identify the issue.

Regards
Saikat;;;","23/Jul/16 03:35;githubbot;GitHub user samaitra opened a pull request:

    https://github.com/apache/ignite/pull/887

    IGNITE-2344 WebSessionFilter doesn't support session ID renewal

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/samaitra/ignite IGNITE-2344

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/887.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #887
    
----
commit c2e9af35635bd92b07ed992a8b0faaeafbedbf41
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-06-04T20:39:20Z

    IGNITE-2344 WebSessionFilter doesn't support session ID renewal

commit a966f49fb3e7d3f6f22324095b1a10dfb31a261b
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-06-04T21:01:13Z

    IGNITE-2344 WebSessionFilter doesn't support session ID renewal

commit 7d005184837b93d8edf55b0fef977efc51b94354
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-07-22T18:52:32Z

    Merge remote-tracking branch 'upstream/master' into IGNITE-2344
    
    # Conflicts:
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteTxExceptionAbstractSelfTest.java
    #	modules/web/src/main/java/org/apache/ignite/cache/websession/WebSessionFilter.java

commit a6e0d56ee78537d5b1964b86d1ea5242e0708b4a
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-07-23T03:32:14Z

    IGNITE-2344 WebSessionFilter doesn't support session ID renewal

commit 1eaf006987b4b81111140fd68faceb3772fb85b1
Author: samaitra <saikat.maitra@gmail.com>
Date:   2016-07-23T03:33:44Z

    IGNITE-2344 WebSessionFilter doesn't support session ID renewal

----
;;;","23/Jul/16 03:56;samaitra;[~avinogradov]

Hi Anton

I have updated the tests to pass in teamcity. Please review and let me know if you have any feedback.

https://github.com/apache/ignite/pull/887

Regards
Saikat;;;","25/Jul/16 08:01;avinogradov;Changes applied to master branch, thanks a lot!;;;","25/Jul/16 14:52;samaitra;[~avinogradov]

Thank you Anton !!!

Regards
Saikat;;;","04/Jul/17 20:38;githubbot;Github user samaitra closed the pull request at:

    https://github.com/apache/ignite/pull/887
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IGFS: MapReduce task sent by Hunk/Splunk fails with NPE,IGNITE-2343,12928611,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,dmagda,dmagda,08/Jan/16 11:36,25/Jan/16 09:48,14/Jul/23 06:20,25/Jan/16 09:48,1.5.0.final,,,1.6,igfs,,,,,0,important,,,"A MR task being sent by Hunk [1] fails with NPE

{noformat}
[10:31:58,250][ERROR][Hadoop-task-fd3ff783-d952-4147-8e5b-8e3080b91ddb_1-MAP-50- 0-#271%null%][HadoopRunnableTask] Task execution failed.
class org.apache.ignite.IgniteCheckedException: class org.apache.ignite.IgniteCh eckedException: null
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2MapTask.run0( HadoopV2MapTask.java:105)
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2Task.run(Hado opV2Task.java:54)
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.r un(HadoopV2TaskContext.java:249)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask.runTask(HadoopRunnableTask.java:201)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask.call0(HadoopRunnableTask.java:144)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask$1.call(HadoopRunnableTask.java:116)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask$1.call(HadoopRunnableTask.java:114)
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext$1 .run(HadoopV2TaskContext.java:550)
at java.security.AccessController.doPrivileged(Native Method)
at javax.security.auth.Subject.doAs(Subject.java:415)
at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInforma tion.java:1657)
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.r unAsJobOwner(HadoopV2TaskContext.java:548)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask.call(HadoopRunnableTask.java:114)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask.call(HadoopRunnableTask.java:46)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopExecu torService$2.body(HadoopExecutorService.java:186)
at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java :110)
at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
at com.splunk.mr.SplunkSearchMapper.runImpl(SplunkSearchMapper.java:308)
at com.splunk.mr.SplunkBaseMapper.run(SplunkBaseMapper.java:169)
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2MapTask.run0( HadoopV2MapTask.java:87)
... 16 more
at org.apache.ignite.internal.processors.hadoop.HadoopUtils.transformExc eption(HadoopUtils.java:290)
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.r un(HadoopV2TaskContext.java:255)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask.runTask(HadoopRunnableTask.java:201)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask.call0(HadoopRunnableTask.java:144)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask$1.call(HadoopRunnableTask.java:116)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask$1.call(HadoopRunnableTask.java:114)
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext$1 .run(HadoopV2TaskContext.java:550)
at java.security.AccessController.doPrivileged(Native Method)
at javax.security.auth.Subject.doAs(Subject.java:415)
at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInforma tion.java:1657)
at org.apache.ignite.internal.processors.hadoop.v2.HadoopV2TaskContext.r unAsJobOwner(HadoopV2TaskContext.java:548)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask.call(HadoopRunnableTask.java:114)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunna bleTask.call(HadoopRunnableTask.java:46)
at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopExecu torService$2.body(HadoopExecutorService.java:186)
at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java :110)
at java.lang.Thread.run(Thread.java:745)
{noformat}



[1] http://www.splunk.com/en_us/products/hunk.html",,dmagda,githubbot,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/16 07:49;dmagda;ignite-2bcc8d7c.log.txt;https://issues.apache.org/jira/secure/attachment/12782473/ignite-2bcc8d7c.log.txt","15/Jan/16 07:49;dmagda;ignite.thread.log.txt;https://issues.apache.org/jira/secure/attachment/12782472/ignite.thread.log.txt","15/Jan/16 07:49;dmagda;splunk.log.txt;https://issues.apache.org/jira/secure/attachment/12782474/splunk.log.txt",,,,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jan 25 09:16:31 UTC 2016,,,,,,,,,,"0|i2r193:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jan/16 13:32;dmagda;One more important thing to pay attention to while this issue will be being fixed.

If the node fails with the stack trace from the description it doesn't respond any longer and the only way to stop it is to kill forcibly using 'kill -9'.;;;","11/Jan/16 13:41;vozerov;Created separate ticket for job hangs - IGNITE-2354.;;;","11/Jan/16 13:48;vozerov;It seems that the root cause is identified. Splunk/Hunk has stateful InputSplit and expects that it will be created only once. To the contrast, on the map step Ignite could create the InputSplit twice:
1) HadoopV2MapTask.run0;
2) And then in HadoopV2Context.getInputSplit().

Splunk/Hunk initializes the first instance, then we drop it, and then pass the second unitialized instance. Result - NPE. 

Proposed fix: keep the first initialized instance. To achieve this we may always call HadoopV2Context.getInputSplit(). But two things must be cleared:
1) What to do in case null is returned.
2) Do not convert IgniteCheckedException to IllegalStateException when calling from HadoopV2MapTask.run0().;;;","12/Jan/16 18:14;githubbot;GitHub user iveselovskiy opened a pull request:

    https://github.com/apache/ignite/pull/399

    IGNITE-2343: workable fix for the customer issue.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/iveselovskiy/ignite ignite-2343

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/399.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #399
    
----
commit 9a8ba90abc9737c0e0ea7e3dc2aa5ce240f66d5b
Author: iveselovskiy <iveselovskiy@gridgain.com>
Date:   2016-01-12T16:22:31Z

    IGNITE-2343: workable fix for the customer issue.

----
;;;","12/Jan/16 18:15;iveselovskiy;https://github.com/apache/ignite/pull/399;;;","15/Jan/16 07:48;dmagda;MR doesn't work if tmp and the splunk user are running NOT in IGFS PRIMARY mode. 
If to put splunk user and tmp dirs on PRIMARY mode only that everything works fine.

Attached logs and thread dumps that might be useful.;;;","25/Jan/16 09:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/399
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service proxy can't be created for package-private implementation,IGNITE-2332,12927130,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,vkulichenko,vkulichenko,vkulichenko,04/Jan/16 23:08,28/Jan/16 02:52,14/Jul/23 06:20,28/Jan/16 02:52,,,,1.6,managed services,,,,,0,,,,"{noformat}
Caused by: java.lang.IllegalAccessException: Class org.apache.ignite.internal.processors.service.GridServiceProxy$ServiceProxyCallable can not access a member of class org.apache.ignite.examples.service.MyServiceImpl with modifiers ""public""
	at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:109)
	at java.lang.reflect.AccessibleObject.slowCheckMemberAccess(AccessibleObject.java:261)
	at java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:253)
	at java.lang.reflect.Method.invoke(Method.java:599)
	at org.apache.ignite.internal.processors.service.GridServiceProxy$ServiceProxyCallable.call(GridServiceProxy.java:382)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2.execute(GridClosureProcessor.java:1789)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:509)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6372)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:503)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:456)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1166)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1770)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:823)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:105)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:786)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,avk47,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jan 28 02:52:12 UTC 2016,,,,,,,,,,"0|i2qs4f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jan/16 02:52;vkulichenko;Fixed in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
