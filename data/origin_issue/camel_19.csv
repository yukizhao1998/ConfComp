Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Container),Outward issue link (Container),Inward issue link (Dependent),Inward issue link (Duplicate),Inward issue link (Problem/Incident),Inward issue link (Problem/Incident),Outward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Inward issue link (Regression),Outward issue link (Regression),Inward issue link (Required),Inward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Patch Info),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Regression),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
camel-core - Concurrency issue in multipool for non singleton producers,CAMEL-14340,13276833,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,30/Dec/19 08:46,02/Jan/20 07:58,13/Jul/23 08:31,02/Jan/20 07:58,3.0.0,,,,,,,,,,,3.1.0,,,,,,,,,,0,,,,,"The refactored code causes a racing condition where a acquired producer may be evicted and stopped while in use.

See related ticket.",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14327,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 30 11:21:59 UTC 2019,,,,,,,,,,,"0|z0a2mo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"30/Dec/19 11:21;davsclaus;Also the service pool is now tied to endpoint and hence only for consumer/producer. We should make it non public as its not intended for end users (not in camel-api) and also cleanup the docs that refers to this pool;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel Jgroups Component doesn't export org.apache.camel.component.jgroups.cluster,CAMEL-14333,13276259,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,ldemasi,ldemasi,ldemasi,24/Dec/19 19:10,16/Jan/20 09:22,13/Jul/23 08:32,16/Jan/20 09:22,2.24.2,,,,,,,,,,,2.25.0,3.1.0,,,,,camel-jgroups,,,,0,,,,,"The Camel JGroups component does not export package org.apache.camel.component.jgroups.cluster, resulting in unresolved dependencies when trying to use jgroups to back the master / singleton pattern documented [here|https://camel.apache.org/components/latest/jgroups-component.html] though the necessary package / classes seem to be present.",,davsclaus,ldemasi,,,,,"luigidemasi commented on pull request #3445: CAMEL-14333: Camel Jgroups Component doesn't export org.apache.camel.…
URL: https://github.com/apache/camel/pull/3445
 
 
   …component.jgroups.cluster
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Dec/19 19:20;githubbot;600","oscerd commented on pull request #3445: CAMEL-14333: Camel Jgroups Component doesn't export org.apache.camel.…
URL: https://github.com/apache/camel/pull/3445
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Dec/19 23:05;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 26 08:07:27 UTC 2019,,,,,,,,,,,"0|z09z34:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Dec/19 08:07;davsclaus;I dont think we need that export in the pom.xml, we can just remove it and let the bundle plugin figure this out, this is what we do in 99% of the components.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-blueprint - Camel route does not consider the value of ShutdownStrategy timeout.,CAMEL-14332,13276231,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,jbonofre,ldemasi,ldemasi,24/Dec/19 13:24,02/Dec/20 15:00,13/Jul/23 08:32,06/Jan/20 09:27,2.24.2,3.0.0,,,,,,,,,,2.25.0,3.0.1,3.1.0,,,,camel-blueprint,,,,0,,,,,"In an OSGI context when Blueprint framework is used, if the shutdown strategy timeout is greater than one minute, the timeout is not effective.

When the bundle is stopping, this is the call chain:
{noformat}
BlueprintEventDispatcher (timeout 1 minute) --> BlueprintCamelContext.blueprintEvent --> BlueprintCamelContext.stop (timeout 5 minute by default){noformat}
So when the Shutdown strategy timeout is longer than one minute, the [BlueprintEventDispatcher timeout |https://github.com/apache/aries/blob/ee16fd21f22624947a991c80503d819424497567/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintEventDispatcher.java#L188-L193]is triggered for first, making the shutdown strategy useless.

The solution to this, is to remove the piece of code that handle the destroy event from [BlueprintCamelContext|https://github.com/apache/camel/blob/568f9a1e0b0e8765bb4ff8a0f82b83dd85eeae24/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/BlueprintCamelContext.java#L187-L194].",,davsclaus,jbonofre,ldemasi,michael992,,,"luigidemasi commented on pull request #3442: CAMEL-14332: Camel route does not consider the value of ShutdownStrat…
URL: https://github.com/apache/camel/pull/3442
 
 
   …egy timeout.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Dec/19 13:51;githubbot;600","luigidemasi commented on pull request #3443: CAMEL-14332: Camel route does not consider the value of ShutdownStrat…
URL: https://github.com/apache/camel/pull/3443
 
 
   …egy timeout.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Dec/19 14:07;githubbot;600","luigidemasi commented on pull request #3444: CAMEL-14332: Camel route does not consider the value of ShutdownStrat…
URL: https://github.com/apache/camel/pull/3444
 
 
   …egy timeout.
   
   (cherry picked from commit a10282c76c94b3e48454601b18029fdc451991c5)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Dec/19 14:15;githubbot;600","valdar commented on pull request #3442: CAMEL-14332: Camel route does not consider the value of Shutdow…
URL: https://github.com/apache/camel/pull/3442
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Dec/19 22:22;githubbot;600","davsclaus commented on pull request #3444: CAMEL-14332: Camel route does not consider the value of ShutdownStrat…
URL: https://github.com/apache/camel/pull/3444
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/20 09:26;githubbot;600","davsclaus commented on pull request #3443: CAMEL-14332: Camel route does not consider the value of ShutdownStrat…
URL: https://github.com/apache/camel/pull/3443
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/20 09:26;githubbot;600",,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,CAMEL-15760,,,CAMEL-14336,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 02 15:00:45 UTC 2020,,,,,,,,,,,"0|z09yww:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Dec/19 09:57;davsclaus;Ah okay, yeah its maybe a trade-off with Camel shutdown is 5 minutes (too long) and blueprint having a limit of 1 min.

;;;","27/Dec/19 12:18;davsclaus;Okay but blueprint is calling the destroy method first when its stopping right? So its already being stopped before that timeout triggers?

;;;","27/Dec/19 12:20;davsclaus;And this also implies that if Camel takes > 1 minute to stop then this blueprint timeout is triggered, that then calls stop yet again (which wont hurt as camel is already stopping). So where is the issue/bug really?;;;","02/Jan/20 11:09;ldemasi;What is happening is that when the blueprint timeout is triggered, the ShutdownStrategy is forced to shutdown earlier than its deadline so user defined or default timeout is not effective when it's longer than one minute.;;;","06/Jan/20 09:26;davsclaus;Okay then lets try this;;;","02/Dec/20 15:00;jbonofre;Is it really an issue or just a configuration issue between blueprint timeout and camel shutdown strategy ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jt400PgmProducer doStop() method called on actively used instance,CAMEL-14327,13276075,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,rgala,rgala,23/Dec/19 17:02,30/Dec/19 09:11,13/Jul/23 08:32,30/Dec/19 09:11,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-jt400,,,,0,,,,,"Today I migrated to 3.0.0 version and there seems to be an issue with Service pooling for the Jt400PgmpProducer.

 

Here's what I have:

 
{code:java}
    from(
        ""seda:someName?concurrentConsumers=2&size=10"")
            .to(""jt400://{{as400.user}}:{{as400.password}}@{{as400.host}}/QSYS.LIB/PROGRAM.LIB/KFKEVR.SRVPGM?fieldsLength=200,2000,4,8,8,1000&outputFieldsIdx=0,1,2,3,4,5&connectionPool=#as400ConnectionPool&format=binary&procedureName=RECEIVEEVENT"");
{code}
When concurrentConsumers attribute of seda endpoint is set to 1 everything works fine, but when it is greater than 1 then it looks like the evict method from MultiplePool class calls stop method on a Jt400PgmProducer instance that is still being used (the process method on it is still getting called). This results in nulling the iSeries object inside Jt400PgmProducer instance:
{code:java}
    @Override
    protected void doStop() throws Exception {
        if (iSeries != null) {
            LOG.info(""Releasing connection to {}"", getISeriesEndpoint());
            getISeriesEndpoint().releaseSystem(iSeries);
            iSeries = null;
        }
    }
{code}
and when the process method gets called later on this instance, it fails with NPE while constructing ServiceProgramCall:
{code:java}
    @Override
    public void process(Exchange exchange) throws Exception {
...
            pgmCall = new ServiceProgramCall(iSeries);
...            
{code}
 

I believe this may be related to producer caching in ServicePool class, some sort of key issue in the cache Map maybe?",,davsclaus,rgala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14340,,,,,"27/Dec/19 13:21;rgala;jt400.patch;https://issues.apache.org/jira/secure/attachment/12989543/jt400.patch","27/Dec/19 12:56;rgala;jt400.patch;https://issues.apache.org/jira/secure/attachment/12989540/jt400.patch","30/Dec/19 08:59;rgala;jt400_2.patch;https://issues.apache.org/jira/secure/attachment/12989654/jt400_2.patch",,3.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 30 09:11:43 UTC 2019,,,,,,,,,,,"0|z09xy8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Dec/19 18:05;davsclaus;Are you sure its the evict method? Maybe you can breakpoint in that doStop and see the stacktrace. 

Also as workaround you can try to increate the default capacity from 100, to a higher value.
;;;","23/Dec/19 18:39;rgala;Here's the stack, I believe the doStop method is called from onEvict lambda passed to LRUCache instance.

{noformat}
Daemon Thread [ForkJoinPool.commonPool-worker-6] (Suspended (breakpoint at line 212 in Jt400PgmProducer))	
	owns: Object  (id=386)	
	Jt400PgmProducer.doStop() line: 212	
	Jt400PgmProducer(ServiceSupport).stop() line: 159	
	ServiceHelper.stopService(Object) line: 119	
	AsyncProcessorConverterHelper$ProducerToAsyncProducerBridge(AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge).stop() line: 112	
	ServicePool<S>.stop(S) line: 214	
	ServicePool$MultiplePool.evict(S) line: 324	
	ServicePool$MultiplePool.evict(Object) line: 283	
	ServicePool<S>.onEvict(S) line: 88	
	451064016.accept(Object) line: not available	
	CaffeineLRUCache<K,V>.onRemoval(K, V, RemovalCause) line: 239	
	SSLMS<K,V>(BoundedLocalCache<K,V>).lambda$notifyRemoval$1(Object, Object, RemovalCause) line: 333	
	38917799.run() line: not available	
	ForkJoinTask$RunnableExecuteAction.exec() line: 1402	
	ForkJoinTask$RunnableExecuteAction(ForkJoinTask<V>).doExec() line: 289	
	ForkJoinPool$WorkQueue.runTask(ForkJoinTask<?>) line: 1056	
	ForkJoinPool.runWorker(ForkJoinPool$WorkQueue) line: 1692	
	ForkJoinWorkerThread.run() line: 157	
{noformat}

I don't think increasing cache would do any good. From what I see less than 10 instances of Jt400PgmProducer are created.
;;;","24/Dec/19 07:45;rgala;Tried to increase producer cache size, but it looks like it is always set to 1, here is part of the code from SendProcessor class:


{code:java}

    @Override
    protected void doStart() throws Exception {
        if (producerCache == null) {
            // use a single producer cache as we need to only hold reference for one destination
            // and use a regular HashMap as we do not want a soft reference store that may get re-claimed when low on memory
            // as we want to ensure the producer is kept around, to ensure its lifecycle is fully managed,
            // eg stopping the producer when we stop etc.
            producerCache = new DefaultProducerCache(this, camelContext, 1);
            // do not add as service as we do not want to manage the producer cache
        }

{code};;;","24/Dec/19 09:45;rgala;I think I got it.

Evictions are done in a separate thread. When the following method is executed:
{code:java}
    protected void onEvict(S s) {
        Endpoint e = getEndpoint.apply(s);
        Pool<S> p = pool.get(e);
        if (p != null) {
            if (p.evict(s)) {
                pool.remove(e);
            }
        } else {
            ServicePool.stop(s);
            try {
                e.getCamelContext().removeService(s);
            } catch (Exception ex) {
                LOG.error(""Error removing service {}"", s, ex);
            }
        }
    }
{code}
the call to *p.evict(s)* results in *doStop()* method of *Jt400PgmProducer* instance being called. After the p.evict(s) method has finished, but before pool.remove(e) call, the producer can still be acquired from the pool, but because the *doStop* has already been called and the *iSeries* field is already nulled, exchange processing fails on NPE.

I set breakpoints in *onEvict(S)* method of *ServicePool* and in *acquire(Endpoint endpoint)* method, they evict/acquire the same *Jt400PgmProducer* instance at the same time.

 
{noformat}
Daemon Thread [ForkJoinPool.commonPool-worker-6] (Suspended (breakpoint at line 85 in ServicePool))	
	ServicePool<S>.onEvict(S) line: 85	
	146690937.accept(Object) line: not available	
	CaffeineLRUCache<K,V>.onRemoval(K, V, RemovalCause) line: 239	
	SSLMS<K,V>(BoundedLocalCache<K,V>).lambda$notifyRemoval$1(Object, Object, RemovalCause) line: 333	
	1106690494.run() line: not available	
	ForkJoinTask$RunnableExecuteAction.exec() line: 1402	
	ForkJoinTask$RunnableExecuteAction(ForkJoinTask<V>).doExec() line: 289	
	ForkJoinPool$WorkQueue.runTask(ForkJoinTask<?>) line: 1056	
	ForkJoinPool.runWorker(ForkJoinPool$WorkQueue) line: 1692	
	ForkJoinWorkerThread.run() line: 157	
{noformat}

{noformat}
Daemon Thread [Camel (camel-1) thread #17 - seda://seda] (Suspended (breakpoint at line 113 in ServicePool))	
	ServicePool<S>.acquire(Endpoint) line: 113	
	DefaultProducerCache.acquireProducer(Endpoint) line: 112	
	DefaultProducerCache.doInAsyncProducer(Endpoint, Exchange, AsyncCallback, ProducerCache$AsyncProducerCallback) line: 264	
	SendProcessor.process(Exchange, AsyncCallback) line: 162	
	RedeliveryErrorHandler$RedeliveryState.run() line: 476	
	DefaultReactiveExecutor$Worker.schedule(Runnable, boolean, boolean, boolean) line: 185	
	DefaultReactiveExecutor.scheduleMain(Runnable, String) line: 59	
	Pipeline.process(Exchange, AsyncCallback) line: 87	
	CamelInternalProcessor.process(Exchange, AsyncCallback) line: 228	
	SedaConsumer.sendToConsumers(Exchange) line: 266	
	SedaConsumer.doRun() line: 180	
	SedaConsumer.run() line: 125	
	RejectableThreadPoolExecutor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1149	
	ThreadPoolExecutor$Worker.run() line: 624	
	Thread.run() line: 748	

{noformat}

Maybe the p.evict() should be called after pool.remove()?;;;","27/Dec/19 08:57;davsclaus;Ah thanks for spotting this. Yeah we need to find a better solution. 

If its removed then we may need to add it back again if it was not intended to removed yet. Or come up with some locking during evicting so acquire/release are waiting for this task to complete etc.;;;","27/Dec/19 09:24;rgala;I wonder what the purpose of LRUCache is anyway. In ServicePool class I see that objects are put in this cache but never seem to be retrieved:


{code:java}
    public S acquire(Endpoint endpoint) throws Exception {
        if (!isStarted()) {
            return null;
        }
        S s = getPool(endpoint).acquire();
        if (s != null && cache != null) {
            cache.putIfAbsent(new Key<>(s), s);
        }
        return s;
    }
{code}

and the getPool():


{code:java}
    protected Pool<S> getPool(Endpoint endpoint) {
        return pool.computeIfAbsent(endpoint, this::createPool);
    }
{code}


{code:java}
    private Pool<S> createPool(Endpoint endpoint) {
        boolean singleton = endpoint.isSingleton();
        try {
            S s = producer.apply(endpoint);
            if (s instanceof IsSingleton) {
                singleton = ((IsSingleton) s).isSingleton();
            }
        } catch (Exception e) {
            // Ignore
        }
        if (singleton && capacity > 0) {
            return new SinglePool(endpoint);
        } else {
            return new MultiplePool(endpoint);
        }
    }
{code}
;;;","27/Dec/19 09:42;davsclaus;This only affects components that are non singleton, which is very rare, but the jt400 is that. Another way is to rewrite this to be singleton which it ought to be in the first place.;;;","27/Dec/19 09:44;davsclaus;Yeah this code is rewrite by [~gnodet] and possibly a bit too complex.

The 2.x code is
https://github.com/apache/camel/blob/camel-2.x/camel-core/src/main/java/org/apache/camel/impl/DefaultServicePool.java;;;","27/Dec/19 10:52;rgala;I think that Jt400Endpoint can be converted to a singleton. There is a comment saying that it cannot be because the AS400 instance is stored in configuration, but imo this is not true. The AS400ConnectionPool is stored in Configuration, AS400 instances are retrieved using getConnection() method.;;;","27/Dec/19 12:01;davsclaus;Yeah its using a connection pool so this ought to be safe;;;","27/Dec/19 13:02;rgala;I changed *isSingleton()* method to return true, but as a result, all threads were executing the process method on the same *Jt400PgmProducer* instance, so they shared the same iSeries object (connection). This may lead to unpredictable results. I modified the code to obtain *AS400* instance within *process()* method and release it back to the connection pool upon finishing.

Please take a look at proposed patch. I checked and the code worked. The amount of connections that were open to iSeries system were equal to amount of consumers on seda endpoint.

 

[^jt400.patch];;;","27/Dec/19 13:09;davsclaus;Yeah that patch looks good. One thing to improve is maybe to have the release in a try .. finally block so its released in case of an exception was thrown;;;","27/Dec/19 13:22;rgala;Ok, here's another one :)

[^jt400.patch];;;","27/Dec/19 13:38;davsclaus;Thanks for the patch, its applied to master for Camel 3.1. The bug in the service pool is still there.;;;","27/Dec/19 13:42;rgala;The same needs to be done also for the Jt400DataQueueProducer. I will provide a patch this weekend.;;;","30/Dec/19 08:47;davsclaus;Thanks Rafal.

I created a ticket for the bug in the multi pool so we have a dedicated ticket for that bug.;;;","30/Dec/19 09:00;rgala;Hello. Please find attached the patch for Jt400DataQueueProducer

 

[^jt400_2.patch];;;","30/Dec/19 09:11;davsclaus;Thanks for the patches. The bug in multipool is in another JIRA ticket;;;",,,,,,,,,,,,,,,,,,,,,,,,,
XMPP room with password disconnect after bootup,CAMEL-14323,13276002,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,tapiiron,tapiiron,23/Dec/19 08:33,23/Dec/19 10:34,13/Jul/23 08:32,23/Dec/19 10:34,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-xmpp,,,,0,,,,,"Camel-xmpp component with room password seems to login first but logouts right after. On previous patch missed one place where the room password is required to be added.

Patch included.",,tapiiron,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Dec/19 08:31;tapiiron;camel-xmpp-roompass2.diff;https://issues.apache.org/jira/secure/attachment/12989375/camel-xmpp-roompass2.diff",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,2019-12-23 08:33:14.0,,,,,,,Patch Available,,,,"0|z09xi0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-blueprint - <proxy> in XSD is anyType,CAMEL-14318,13275457,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,19/Dec/19 10:07,20/Dec/19 04:04,13/Jul/23 08:32,19/Dec/19 10:15,3.0.0,,,,,,,,,,,2.25.0,3.0.1,3.1.0,,,,camel-blueprint,,,,0,,,,,The generated XSD is wrong as it refers to a non specific type. It should refer to the proxy factory bean,,davsclaus,ggrzybek,,,,,"grgrzybek commented on pull request #3429: CAMEL-14318: Properly generate xs:element ""proxy"" for camel-blueprint…
URL: https://github.com/apache/camel/pull/3429
 
 
   ….xsd
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/19 16:45;githubbot;600",,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 19 17:14:05 UTC 2019,,,,,,,,,,,"0|z09u4w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Dec/19 10:29;ggrzybek;Thanks [~davsclaus], I'm on it, but not necessarily today.;;;","19/Dec/19 11:06;ggrzybek;Hmm, in camel-spring.xsd there's:
{code:xml}
  <xs:element name=""proxy"" type=""tns:camelProxyFactoryDefinition"">
    <xs:annotation>
      <xs:documentation xml:lang=""en""><![CDATA[
To proxy a service call using a interface
      ]]></xs:documentation>
    </xs:annotation>
  </xs:element>
{code}

so why did you change {{@XmlRootElement(name = ""proxy"")}} to {{@XmlRootElement(name = ""proxyFactoryBean"")}} in {{org.apache.camel.blueprint.CamelProxyFactoryBean}}?;;;","19/Dec/19 11:22;davsclaus;They cannot be 100% identical as spring got some extra magic in its namespace parser that osgi blueprint dont have. But what matters is the XSD structure from end user pov are similar/the same.

;;;","19/Dec/19 16:33;ggrzybek;This fix is better:
{noformat}
diff --git a/components/camel-blueprint/pom.xml b/components/camel-blueprint/pom.xml
index 674fec41f9a..d5016802caa 100644
--- a/components/camel-blueprint/pom.xml
+++ b/components/camel-blueprint/pom.xml
@@ -358,6 +358,7 @@
                       <fileset dir=""${basedir}/../camel-core-xml/src/main/java"">
                         <include name=""org/apache/camel/core/xml/*.java"" />
                         <include name=""org/apache/camel/core/xml/util/**/*.java"" />
+                        <exclude name=""org/apache/camel/core/xml/CamelProxyFactoryDefinition.java"" />
                       </fileset>
                       <fileset dir=""${basedir}/../../camel-core/src/main/java"">
                         <include name=""org/apache/camel/model/**/*.java"" />
{noformat}

It gives me (in camel-blueprint.xsd):
{code:xml}
  <xs:element name=""proxy"" type=""tns:camelProxyFactoryBean"">
    <xs:annotation>
      <xs:documentation xml:lang=""en""><![CDATA[
To proxy a service call using a interface
      ]]></xs:documentation>
    </xs:annotation>
  </xs:element>
{code}

and it's consistent wrt differences between Spring and Blueprint's CamelContextFactoryBean.

I also compared Spring's {{org.apache.camel.core.xml.CamelProxyFactoryDefinition}} and Blueprint's {{org.apache.camel.blueprint.CamelProxyFactoryBean}} and the latter misses {{camelContextId}} property added with CAMEL-2328... Is this not included in Blueprint's {{org.apache.camel.blueprint.CamelProxyFactoryBean}} on purpose? Or just not added by mistake?;;;","19/Dec/19 17:14;ggrzybek;PR: https://github.com/apache/camel/pull/3429;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix issues reported by lgtm.com ,CAMEL-14312,13275200,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,omarsmak,omarsmak,omarsmak,18/Dec/19 08:51,19/Dec/19 16:16,13/Jul/23 08:32,19/Dec/19 16:16,3.0.0,,,,,,,,,,,3.1.0,,,,,,,,,,0,,,,,"There are couple of issues being reported lgtm https://lgtm.com/projects/g/apache/camel/. However some of them need to be fixed/looked at, most importantly identified here: https://lgtm.com/projects/g/apache/camel/alerts/?sort=name&dir=ASC&mode=list&tag=correctness%2Clogic%2Creliability",,omarsmak,,,,,,"omarsmak commented on pull request #3419: CAMEL-14312: Address some issues reported by lgtm
URL: https://github.com/apache/camel/pull/3419
 
 
   This shall address some issues being reported by lgtm as here: https://lgtm.com/projects/g/apache/camel/alerts/?sort=name&dir=ASC&mode=list&tag=correctness%2Clogic%2Creliability , plus some logical changes, e.g: iterator to forloop or simplify 
   Please take a look and see if they make sense
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Dec/19 12:11;githubbot;600","omarsmak commented on pull request #3424: CAMEL-14312: Fix issues reported by lgtm
URL: https://github.com/apache/camel/pull/3424
 
 
   This is the last patch of errors reported by lgtm, mostly removing unused variables or incompatible types equality. Some I have neglected as I think it could be false positive
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/19 10:41;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 18 13:18:05 UTC 2019,,,,,,,,,,,"0|z09sjs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Dec/19 13:18;omarsmak;Will wait for the second report and check if we need a round 2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endpoint DSL - ToD sets hash parameter when using complex objects as parameters,CAMEL-14306,13275156,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,18/Dec/19 05:20,18/Dec/19 06:43,13/Jul/23 08:32,18/Dec/19 06:43,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-core,,,,0,,,,,"See SO
https://stackoverflow.com/questions/59361749/resolveendpointfailedexception-there-are-1-parameters-that-couldnt-be-set-on",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-12-18 05:20:08.0,,,,,,,,,,,"0|z09sa0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting matchOnUriPrefix on netty-http Rest Component causes api route to fail,CAMEL-14303,13274676,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Trivial,Fixed,,bob,bob,16/Dec/19 04:18,09/Jan/20 10:27,13/Jul/23 08:32,09/Jan/20 10:27,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-netty-http,,,,0,,,,,"When using the rest dsl with the following configuration:
{code:java}
 restConfiguration().component(""netty-http"").port(8080)
            .endpointProperty(""matchOnUriPrefix"", ""true"")
            .apiContextPath(""/api-doc"").apiProperty(""api.title"", ""Camel Examples Karaf Rest API"")
            .apiProperty(""api.version"", ""1.0.0"");{code}
Starting the /api-doc route throws the following error:
{code:java}
 org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: netty-http://http://localhost:8080/api-doc?httpMethodRestrict=GET&matchOnUriPrefix=true&matchOnUriPrefix=true due to: Error binding property (matchOnUriPrefix=[true, true]) with name: matchOnUriPrefix on bean: org.apache.camel.component.netty.http.NettyHttpConfiguration@2918e3d7 with value: [true, true] {code}
This is because the NettyHttpComponent class hard codes matchOnUriPrefix  on this route so it is added twice.  This configuration should only be added if it does not already exists.",,bob,davsclaus,,,,,"bobpaulin commented on pull request #3409: CAMEL-14303: Handle duplicate matchOnUriPrefix on api docs.
URL: https://github.com/apache/camel/pull/3409
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 04:25;githubbot;600","oscerd commented on pull request #3409: CAMEL-14303: Handle duplicate matchOnUriPrefix on api docs.
URL: https://github.com/apache/camel/pull/3409
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 14:42;githubbot;600","bobpaulin commented on pull request #3418: CAMEL-14303: Refactor Rest Component Common code into helper.
URL: https://github.com/apache/camel/pull/3418
 
 
   Given the duplication on the consumer creation for the REST DSL components I wanted to propose some refactoring to make it more maintainable with the matchOnUriPrefix change.  Can apply to the other components, add tests and appropriate api documentation but I wanted to solicit feedback on the refactor before adding any polish.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 05:01;githubbot;600","bobpaulin commented on pull request #3422: CAMEL-14303: Handle duplicate matchOnUriPrefix on api docs. Polish.
URL: https://github.com/apache/camel/pull/3422
 
 
   Polish api documentation.  camel-servlet.  Additional PRs will be raised for other components.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/19 03:30;githubbot;600","bobpaulin commented on pull request #3426: CAMEL-14303: Handle duplicate matchOnUriPrefix on api docs jetty.
URL: https://github.com/apache/camel/pull/3426
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/19 14:47;githubbot;600","bobpaulin commented on pull request #3430: CAMEL-14303: Fix all components for matchOnUriPrefix.
URL: https://github.com/apache/camel/pull/3430
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Dec/19 05:40;githubbot;600","davsclaus commented on pull request #3430: CAMEL-14303: Fix all components for matchOnUriPrefix.
URL: https://github.com/apache/camel/pull/3430
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Dec/19 08:29;githubbot;600",,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Dec 21 08:31:57 UTC 2019,,,,,,,Patch Available,,,,"0|z09pbc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Dec/19 08:31;davsclaus;Are all of them done now?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-spring: No longer possible to invoke static method of non-spring bean,CAMEL-14302,13274634,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,pascalschumacher,pascalschumacher,15/Dec/19 13:15,16/Dec/19 16:55,13/Jul/23 08:32,16/Dec/19 05:59,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-spring,,,,0,regression,,,,"This route worked fine in Camel 2.24.2 (and Spring Boot 2.2.1.RELEASE):

{code:java}
@Component
public class UuidRoute extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        from(""seda:in"")
            .setHeader(""CorrelationId"", method(java.util.UUID.class, ""randomUUID""))
            .to(""mock:out"");
    }
}
{code}



but fails with Camel 3.0.0 (and Spring Boot 2.2.1.RELEASE (also with Spring Boot 2.2.2.RELEASE)) when the route is used:
{noformat}
2019-12-15 14:00:09.453  WARN 17476 --- [ #1 - seda://in] o.a.camel.component.seda.SedaConsumer    : Error processing exchange. Exchange[]. Caused by: [org.springframework.beans.factory.UnsatisfiedDependencyException - Error creating bean with name 'java.util.UUID': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'byte[]' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}]

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'java.util.UUID': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'byte[]' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:787) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:226) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:353) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.camel.spring.spi.SpringInjector.newInstance(SpringInjector.java:64) ~[camel-spring-3.0.0.jar:3.0.0]
	at org.apache.camel.spring.spi.SpringInjector.newInstance(SpringInjector.java:41) ~[camel-spring-3.0.0.jar:3.0.0]
	at org.apache.camel.component.bean.ConstantTypeBeanHolder.getBean(ConstantTypeBeanHolder.java:65) ~[camel-bean-3.0.0.jar:3.0.0]
	at org.apache.camel.component.bean.AbstractBeanProcessor.process(AbstractBeanProcessor.java:71) ~[camel-bean-3.0.0.jar:3.0.0]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) ~[camel-base-3.0.0.jar:3.0.0]
	at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:40) ~[camel-support-3.0.0.jar:3.0.0]
	at org.apache.camel.language.bean.BeanExpression.invokeBean(BeanExpression.java:297) ~[camel-bean-3.0.0.jar:3.0.0]
	at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:159) ~[camel-bean-3.0.0.jar:3.0.0]
	at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:171) ~[camel-bean-3.0.0.jar:3.0.0]
	at org.apache.camel.processor.SetHeaderProcessor.process(SetHeaderProcessor.java:46) ~[camel-base-3.0.0.jar:3.0.0]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryState.run(RedeliveryErrorHandler.java:476) ~[camel-base-3.0.0.jar:3.0.0]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0.jar:3.0.0]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59) ~[camel-base-3.0.0.jar:3.0.0]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:87) ~[camel-base-3.0.0.jar:3.0.0]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:228) ~[camel-base-3.0.0.jar:3.0.0]
	at org.apache.camel.component.seda.SedaConsumer.sendToConsumers(SedaConsumer.java:266) ~[camel-seda-3.0.0.jar:3.0.0]
	at org.apache.camel.component.seda.SedaConsumer.doRun(SedaConsumer.java:180) ~[camel-seda-3.0.0.jar:3.0.0]
	at org.apache.camel.component.seda.SedaConsumer.run(SedaConsumer.java:125) ~[camel-seda-3.0.0.jar:3.0.0]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:831) ~[na:na]
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'byte[]' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1695) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1253) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:874) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:778) ~[spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	... 27 common frames omitted
{noformat}


Test to allow reproduction:

{code:java}
@RunWith(CamelSpringBootRunner.class)
@SpringBootTest
public class InvokeBeanNotCreatableBySpring {

    @Produce(uri = ""seda:in"")
    private ProducerTemplate template;
    @EndpointInject(uri = ""mock:out"")
    private MockEndpoint mockOut;

    @Test
    public void test() throws Exception {
        mockOut.expectedMessageCount(1);
        template.sendBody("""");
        mockOut.assertIsSatisfied();
    }
}
{code}
",,davsclaus,pascalschumacher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 16 16:55:01 UTC 2019,,,,,,,,,,,"0|z09p20:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Dec/19 04:38;davsclaus;You can use SpEL for this as a workaround. ;;;","16/Dec/19 16:55;pascalschumacher;Yes, the workaround is to use:

{code:java}
.setHeader(""CorrelationId"").spel(""#{T(java.util.UUID).randomUUID()}"")
{code}

Thank you very much for the quick fix!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java 8 Supplier overloadings break all DSLs,CAMEL-14300,13274570,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Critical,Fixed,lb,nferraro,nferraro,14/Dec/19 13:55,17/Dec/19 08:09,13/Jul/23 08:32,17/Dec/19 08:09,3.0.0,,,,,,,,,,,3.1.0,,,,,,,,,,0,,,,,"There are a number of issues opened in Camel K since most DSLs are no longer working. The cause is probably the addition of these overloadings of the `.process()` method that work in Java but fail in Groovy and JS:

[https://github.com/apache/camel/commit/e38f2a0751445478a2a71620407a723ffab9ab04]

 

Camel K issues:

- [https://github.com/apache/camel-k/issues/1143]

- [https://github.com/apache/camel-k/issues/1144]

 

Are they really important for Camel users? Can we deprecate them and then remove in next minor?

 

cc: [~davsclaus], [~lb]",,davsclaus,lb,nferraro,,,,"oscerd commented on pull request #210: groovy: workaround for https://issues.apache.org/jira/browse/CAMEL-14300
URL: https://github.com/apache/camel-k-runtime/pull/210
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 12:59;githubbot;600","lburgazzoli commented on pull request #3411: CAMEL-14300: Java 8 Supplier overloadings break all DSLs
URL: https://github.com/apache/camel/pull/3411
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 13:40;githubbot;600","lburgazzoli commented on pull request #3417: CAMEL-14300: Java 8 Supplier overloadings break all DSLs (remove methods)
URL: https://github.com/apache/camel/pull/3417
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 08:08;githubbot;600",,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 16 14:34:01 UTC 2019,,,,,,,,,,,"0|z09ons:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Dec/19 06:00;davsclaus;Yeah lets deprecate on 3.0.1 and remove on 3.1 and add it to the upgrade guide;;;","16/Dec/19 06:03;davsclaus;I assume this is for the process method. The others may seem okay to keep ?;;;","16/Dec/19 08:04;lb;they seems to be ok;;;","16/Dec/19 13:43;lb;deprecated on 3.0.x and 3.1.0;;;","16/Dec/19 13:44;lb;[~davsclaus] should we remove the deprecated methods right now or better when we are closed to 3.1.x ?;;;","16/Dec/19 14:34;davsclaus;Fine to remove so master reflects 3.1 version.

And add a note in the upgrade guide
https://github.com/apache/camel/blob/master/docs/user-manual/modules/ROOT/pages/camel-3x-upgrade-guide.adoc;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-sql - Dynamic producer (toD) problem,CAMEL-14299,13274506,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,,Gurpal2000,Gurpal2000,13/Dec/19 22:13,17/Jan/20 20:49,13/Jul/23 08:32,24/Dec/19 06:28,3.0.0,,,,,,,,,,,3.1.0,,,,,,camel-sql,,,,0,,,,,"Spring Boot: 2.2.1

Camel: 3.0.0

*Works* using ""to()""

 
{code:java}
from(""file://d:/tmp/?fileName=test&noop=true"")
.setHeader(""val1"", constant(1))
.setHeader(""val2"", constant(""yo""))
.to(""sql:insert into gbtemp (col1, col2) values (:#val1, :#val2)?dataSource=#dataSource"");
{code}
Does *not work* using "".toD()""
{code:java}
from(""file://d:/tmp/?fileName=test&noop=true"")
.setHeader(""val1"", constant(1))
.setHeader(""val2"", constant(""yo""))
.setHeader(""insertSql"", constant(""insert into gbtemp (col1, col2) values (:#val1, :#val2)""))
.toD(""sql:${header.insertSql}?dataSource=#dataSource"");
{code}
This used to work fine under Camel 2.x

Example error lines:
{code:java}
Caused by: org.apache.camel.RuntimeCamelException: Cannot auto create component: sql

Caused by: org.apache.camel.PropertyBindingException: Error binding properties on bean: org.apache.camel.component.sql.SqlComponent@a72b3b2

org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: sql://insert...
{code}
 ",,bedla,davsclaus,Gurpal2000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14329,,,,,,,,,"23/Dec/19 20:20;bedla;CAMEL-14299.log;https://issues.apache.org/jira/secure/attachment/12989400/CAMEL-14299.log","16/Dec/19 18:51;Gurpal2000;log.txt;https://issues.apache.org/jira/secure/attachment/12988948/log.txt",,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 17 20:49:02 UTC 2020,,,,,,,,,,,"0|z09o9k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Dec/19 06:04;davsclaus;Can you maybe try with master as we have fixed stuff since 3.0.0 release;;;","16/Dec/19 06:11;davsclaus;I created a test that could not reproduce this
https://github.com/apache/camel/commit/59e26c8cfcdf82267d6bfeb0b7cc005a8df75e4d

If you have still a problem then add a reproducer and/or provide more details from the stacktrace etc.;;;","16/Dec/19 16:47;Gurpal2000;[~davsclaus] I created a simple test app with Spring Boot and minimal dependencies, and hopefully this show the behaviour [https://github.com/gurpal2000/camelproblemdemo]

Spring Boot 2.2.2.RELEASE + Camel 3.0.0.

*Attached the log.*

 ;;;","16/Dec/19 21:21;Gurpal2000;More: in my application.yml I have 

camel.springboot.main-run-controller: true

Removing this seems to solve this issue _in the particular case where web-starter is used._

The documentation says ""Applications using web modules (e.g. importing the {{org.springframework.boot:spring-boot-web-starter}} module), usually don’t need to use this feature because the application is kept alive by the presence of other non-daemon threads.""

If I remove the web starter module and remove the h2 web console dependency things start going wrong again.;;;","17/Dec/19 11:40;davsclaus;Ah for spring boot with Camel you should use camel-sql-starter as dependency, eg generally use -starter JARs;;;","17/Dec/19 11:54;davsclaus;And your sample project dont run out of the box, can you update to make it work.
;;;","18/Dec/19 01:20;Gurpal2000;Ah apologies, a missed the main class; should be good now.

Also - I switched the camel-sql to camel-sql-starter (I see it's part of org.apache.camel.springboot) as per your advice. Removed/disabled web, etc.

I added a query to read back the count as soon as the insert is done. Things work fine. Moment I remove the to(""direct:query"") start seeing errors again. Did I miss something?;;;","18/Dec/19 06:50;davsclaus;This works fine for me, cannot reproduce any issue.

{code}
    from(""file:tmp-datad"")
      .setHeader(""val1"", constant(1))
      .setHeader(""val2"", constant(""yo""))
      .setHeader(""insertSql"", constant(""insert into tmp (col1, col2) values (:#val1, :#val2)""))
      .toD(""sql:${header.insertSql}?dataSource=#dataSource"")
      //.to(""direct:query"")
    ;

    from(""timer:query"")
      .to(""sql:select count(*) from tmp?outputType=SelectOne&dataSource=#dataSource"")
      .to(""log:result"")
    ;
{code}

This logs the 0 and 1 as output when a file is created in that folder

2019-12-18 07:49:03.679  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 0]
2019-12-18 07:49:04.683  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 0]
2019-12-18 07:49:05.688  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 0]
2019-12-18 07:49:06.691  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 0]
2019-12-18 07:49:07.696  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 0]
2019-12-18 07:49:08.699  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 0]
2019-12-18 07:49:09.703  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 0]
2019-12-18 07:49:10.706  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 0]
2019-12-18 07:49:11.709  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 1]
2019-12-18 07:49:12.712  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 1]
2019-12-18 07:49:13.712  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 1]
2019-12-18 07:49:14.716  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 1]
2019-12-18 07:49:15.718  INFO 58546 --- [- timer://query] result                                   : Exchange[ExchangePattern: InOnly, BodyType: Long, Body: 1];;;","18/Dec/19 23:42;Gurpal2000;[~davsclaus] Going crazy here. I've done exactly the same as you except my from looks like this for example on windows 

{code:java}
from(""file://d:/tmp-data"")
{code}

And then comment out the timer:query. As soon as i create the ""test"" file in the directory I get the errors. And with the errors filling up my screen, when i remove the test file, the errors stop.

I've added a short video on github - https://github.com/gurpal2000/camelproblemdemo/blob/master/CAMEL-14299.mp4

Tried on a different PC same result. Code still works fine with 2.24.1

If i put a sql select as the FIRST thing, then things work, eg:

{code:java}
from(""file://d:/tmp-data"")
.to(""sql:select 1?dataSource=...)
...
{code}

It's almost like there is a difference in how the datasource is initialised or autoconf'd with camel between camel 2 and 3. For me unfortunately this is a blocker in using Camel 3 and I've to continue with 2.x. I don't know where the root cause is Spring or Camel.

[~davsclaus] Reopening - but please Close if you feel that is the right thing to do. I'll post on Stack if you do choose to close.;;;","22/Dec/19 20:49;Gurpal2000;See prior comments. Reopening - but please Close if you feel that is the right thing to do. I'll post on Stack if you do choose to close.;;;","22/Dec/19 22:14;bedla;I can reproduce this with your code. The datasource is auto configured with spring boot. During this initialization there are some calls to openConnection, which causes HikariConfig to seal. Then comes in place Camel Introspection trying to set DataSource to HikariConfig object, which is already sealed and cannot be modified (fails with exception *{{The configuration of the pool is sealed once started. Use HikariConfigMXBean for runtime changes.}}*).

Until we find solution, you can use one of these workarounds:

Replace *toD* with *to* and *CamelSqlQuery* header
{code:java}
      .setHeader(""insertSql"", constant(""insert into tmp (col1, col2) values (:?val1, :?val2)"")) //Notice ? instead of #
      .setHeader(""CamelSqlQuery"", header(""insertSql""))
      .to(""sql:insert?dataSource=#dataSource"")
{code}
OR downgrade hikari in your pom to lower version , where sealing mechanism was not implemented
{code:java}
<dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>2.7.4</version>
    </dependency>
{code};;;","23/Dec/19 11:42;Gurpal2000;[~bedla] Thank you for your in depth analysis; a seasonal present :)

Question: why would Camel try to set the DS to HikariConfig? I thought one benefit of using Spring/Boot with Camel was so that those sort of things are already taken care of to some extent.

(Could it be related to: https://github.com/brettwooldridge/HikariCP/issues/1095);;;","23/Dec/19 18:10;davsclaus;Jan can you post more details. I dont immediately see Camel setting or introspecting datasource.;;;","23/Dec/19 20:25;bedla;[~davsclaus] I also dont see any direct introspection in code, but it is happening. After increasing logging level with property *bean-introspection-logging-level: info* then right before the exception is logged.
{code:java}
Invoked: 203 times (overall) [Method: setProperty, Target: HikariDataSource (HikariPool-1), Arguments: [dataSource, HikariDataSource (HikariPool-1)]]
{code}
To see the exception you need to comment out the timer route in the reproducer code. Full log with logged introspection is here [^CAMEL-14299.log]

 

[~Gurpal2000] Another workaround you can use in the meantime is to warmup sql component. Call 
{code:java}
getContext().getComponent(""sql"");
{code}
on the beginning of configure method in RouteBuilder ;;;","23/Dec/19 22:42;Gurpal2000;[~bedla] agreed the warmup works; requires less code alteration. Better than .to(""sql:select 1"") also.;;;","24/Dec/19 06:28;davsclaus;This has been fixed for 3.1.

;;;","17/Jan/20 20:49;Gurpal2000;Fantastic thank you all.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when NATS server not configured,CAMEL-14277,13273399,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,tdiesler,tdiesler,tdiesler,09/Dec/19 14:17,09/Dec/19 15:35,13/Jul/23 08:32,09/Dec/19 15:35,,,,,,,,,,,,3.0.1,3.1.0,,,,,,,,,0,,,,,"{code}

SEVERE: Failed: org.wildfly.camel.test.nats.NatsIntegrationTest.testNatsRoutes
java.lang.NullPointerException
 at org.apache.camel.component.nats.NatsConfiguration.splitServers(NatsConfiguration.java:376)
 at org.apache.camel.component.nats.NatsConfiguration.createOptions(NatsConfiguration.java:343)
 at org.apache.camel.component.nats.NatsEndpoint.getConnection(NatsEndpoint.java:71)
 at org.apache.camel.component.nats.NatsConsumer.doStart(NatsConsumer.java:58)
 at org.apache.camel.support.service.ServiceSupport.start(ServiceSupport.java:117)
 at org.apache.camel.impl.engine.AbstractCamelContext.startService(AbstractCamelContext.java:2905)
 at org.apache.camel.impl.engine.AbstractCamelContext.doStartOrResumeRouteConsumers(AbstractCamelContext.java:3232)
 at org.apache.camel.impl.engine.AbstractCamelContext.doStartRouteConsumers(AbstractCamelContext.java:3166)
 at org.apache.camel.impl.engine.AbstractCamelContext.safelyStartRouteServices(AbstractCamelContext.java:3076)
 at org.apache.camel.impl.engine.AbstractCamelContext.doStartOrResumeRoutes(AbstractCamelContext.java:2841)
 at org.apache.camel.impl.engine.AbstractCamelContext.doStartCamel(AbstractCamelContext.java:2645)
 at org.apache.camel.impl.engine.AbstractCamelContext.lambda$doStart$2(AbstractCamelContext.java:2450)
 at org.apache.camel.impl.engine.AbstractCamelContext.doWithDefinedClassLoader(AbstractCamelContext.java:2467)
 at org.apache.camel.impl.engine.AbstractCamelContext.doStart(AbstractCamelContext.java:2448)
 at org.apache.camel.support.service.ServiceSupport.start(ServiceSupport.java:117)
 at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2357)
 at org.wildfly.camel.test.nats.NatsIntegrationTest.testNatsRoutes(NatsIntegrationTest.java:98)

{code}",,davsclaus,tdiesler,,,,,"tdiesler commented on pull request #3394: [CAMEL-14277] NPE when NATS server not configured
URL: https://github.com/apache/camel/pull/3394
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 14:33;githubbot;600","oscerd commented on pull request #3394: [CAMEL-14277] NPE when NATS server not configured
URL: https://github.com/apache/camel/pull/3394
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 14:38;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 09 14:25:59 UTC 2019,,,,,,,,,,,"0|z09hfc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Dec/19 14:25;davsclaus;Whats your ill configuration?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuring endpoint with bean reference should fail if no such bean found,CAMEL-14272,13272962,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,07/Dec/19 20:02,08/Dec/19 19:08,13/Jul/23 08:32,08/Dec/19 19:08,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-core,,,,0,,,,,"If you configure endpoint via foo=#myBean and the bean is not present then we should fail, when using the source code generated configurer.",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14263,CAMEL-14273,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-12-07 20:02:45.0,,,,,,,,,,,"0|z09eq8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component auto configuration fails in Java 11,CAMEL-14268,13272815,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,lb,lb,lb,06/Dec/19 17:40,10/Dec/19 09:43,13/Jul/23 08:32,10/Dec/19 09:43,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-main,,,,0,,,,,"I have the following configuration in my application.properties

{code}
camel.component.fhir.configuration = #class:org.apache.camel.component.fhir.FhirConfiguration
camel.component.fhir.configuration.log = false
camel.component.fhir.configuration.server-url = {{camel.fhir.test-url}}
{code}

While running this code in against Java 8, the auto configuration works as expected:

{code}
[org.apa.cam.mai.BaseMainSupport] (main) Auto-configuration summary:
[org.apa.cam.mai.BaseMainSupport] (main) 	camel.component.fhir.configuration=#class:org.apache.camel.component.fhir.FhirConfiguration
[org.apa.cam.mai.BaseMainSupport] (main) 	camel.component.fhir.configuration.log=false
[org.apa.cam.mai.BaseMainSupport] (main) 	camel.component.fhir.configuration.server-url={{camel.fhir.test-url}}
{code}

When running on Java 11 instead it fails with:

{code}
Error binding property (camel.component.fhir..configuration.server-url={{camel.fhir.test-url}}) with name: configuration.serverurl on bean: org.apache.camel.component.fhir.FhirComponent@5e557671 with value: {{camel.fhir.test-url}}
Caused by: org.apache.camel.PropertyBindingException: Error binding property (camel.component.fhir..configuration.server-url={{camel.fhir.test-url}}) with name: configuration.serverurl on bean: org.apache.camel.component.fhir.FhirComponent@5e557671 with value: {{camel.fhir.test-url}}
{code}",,davsclaus,lb,,,,,"lburgazzoli commented on pull request #3392: CAMEL-14268: Component auto configuration fails in Java 11
URL: https://github.com/apache/camel/pull/3392
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 16:34;githubbot;600","lburgazzoli commented on pull request #3397: CAMEL-14268: Component auto configuration fails in Java 11
URL: https://github.com/apache/camel/pull/3397
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Dec/19 09:33;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,CAMEL-14278,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 09 14:25:03 UTC 2019,,,,,,,,,,,"0|z09dtk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Dec/19 08:52;lb;looks like the issue is caused by different iteration order so  [this loop|https://github.com/apache/camel/blob/11bf04ceb2d6072aef137bc0acc86ae4b3a37425/core/camel-main/src/main/java/org/apache/camel/main/BaseMainSupport.java#L926-L931] behave differently in Java 8 vs Java 11;;;","09/Dec/19 11:44;davsclaus;Whoa are you sure as its a LinkedHashSet isnt it? I would have thought the keys are iterated in the inserted order.;;;","09/Dec/19 11:58;lb;I suspect the issues is that if you have a properties loader in place, in this case based on MP Config, then you are not sure about the order the loader uses to list properties thus it may happen they are not in the order you may expect-;;;","09/Dec/19 12:16;davsclaus;Okay so its possible a MP Config issue which can't return ordered properties. They may use a HashMap or Hashtable / Properties component which is not ordered etc.;;;","09/Dec/19 12:43;davsclaus;Can we see what they do, and maybe suggest them to fix it to be ordered across JDK versions. 

We have an ordered properties impl in Camel we use
https://github.com/apache/camel/blob/master/core/camel-util/src/main/java/org/apache/camel/util/OrderedProperties.java;;;","09/Dec/19 12:52;davsclaus;Yeah they are using HashSet

    public Iterable<String> getPropertyNames() {
        Set<String> names = new HashSet();
        Iterator var2 = this.getConfigSources().iterator();

        while(var2.hasNext()) {
            ConfigSource configSource = (ConfigSource)var2.next();
            names.addAll(configSource.getProperties().keySet());
        }

        return names;
    }
;;;","09/Dec/19 12:55;davsclaus;That is for 1.3, this may be better in 1.5;;;","09/Dec/19 12:58;davsclaus;https://github.com/quarkusio/quarkus/commit/598c1cebc1601384702855aca8238ec382d52f11;;;","09/Dec/19 13:03;davsclaus;Upgraded Camel to smallrye-config 1.5. Quarkus has also been upgraded on master branch so for quarkus 1.1.;;;","09/Dec/19 13:10;davsclaus;Luca so it looks its improved on 1.5 so we may get this fixed in next quarkus release (the camel component only use smallrye for testing);;;","09/Dec/19 13:13;davsclaus;Argh darn there is some code in smallryet that loads from url and uses unordered properties
        try {
            Properties p = new Properties();
            p.load(reader);
            var4 = propertiesToMap(p);
        } catch (Throwable var13) {
;;;","09/Dec/19 13:21;lb;Created this experimental PR: https://github.com/apache/camel/pull/3392 to partially address the issue;;;","09/Dec/19 13:21;davsclaus;I created a ticket in smallrye-config
https://github.com/smallrye/smallrye-config/issues/210;;;","09/Dec/19 14:25;davsclaus;Okay had to revert the mp config upgrade as mp health uses the older version and there is testing failure when upgrading.
So this should maybe be a bulk upgrade ;;;","09/Dec/19 14:25;davsclaus;Okay had to revert the mp config upgrade as mp health uses the older version and there is testing failure when upgrading.
So this should maybe be a bulk upgrade ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Conversion fails with NullPointerException when  the body is null at the end of a route and an outputType is set,CAMEL-14267,13272763,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,ftaysse,ftaysse,06/Dec/19 14:27,10/Dec/19 04:38,13/Jul/23 08:32,10/Dec/19 04:38,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.1,3.1.0,,,camel-core,,,,0,,,,,"NullPointerException thrown if the body is null at the end of a route and an outputType is set.

Sample code:
{code:java}
from(""timer:foo?repeatCount=1"")
   .setBody().constant(""42"")
   .to(""direct:sub"");
from(""direct:sub"")
   .inputType(String.class)
   .outputType(Integer.class)
   .setBody().constant(null);
{code}
{{Thrown exception:}}
{code:java}
java.lang.NullPointerException: nulljava.lang.NullPointerException: null at org.apache.camel.processor.ContractAdvice.convertIfRequired(ContractAdvice.java:149) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.ContractAdvice.doTransform(ContractAdvice.java:124) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.ContractAdvice.after(ContractAdvice.java:103) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.CamelInternalProcessor$InternalCallback.done(CamelInternalProcessor.java:251) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.CamelInternalProcessor$InternalCallback.done(CamelInternalProcessor.java:262) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:579) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) [camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) [camel-core-2.24.2.jar:2.24.2] at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:76) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) [camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.Pipeline.process(Pipeline.java:138) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.Pipeline.process(Pipeline.java:101) ~[camel-core-2.24.2.jar:2.24.2] at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) [camel-core-2.24.2.jar:2.24.2] at org.apache.camel.component.timer.TimerConsumer.sendTimerExchange(TimerConsumer.java:197) [camel-core-2.24.2.jar:2.24.2] at org.apache.camel.component.timer.TimerConsumer$1.run(TimerConsumer.java:79) [camel-core-2.24.2.jar:2.24.2] at java.util.TimerThread.mainLoop(Timer.java:555) [na:1.8.0_66] at java.util.TimerThread.run(Timer.java:505) [na:1.8.0_66]{code}
 ",,davsclaus,ftaysse,nikhilvibhav,,,,"tfabien commented on pull request #3393: [CAMEL-14267] Fix a nullPointerException in convertIfRequired
URL: https://github.com/apache/camel/pull/3393
 
 
   Fix a nullPointerException in convertIfRequired when boddy is null
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 13:37;githubbot;600","davsclaus commented on pull request #3393: [CAMEL-14267] Fix a nullPointerException in convertIfRequired
URL: https://github.com/apache/camel/pull/3393
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 15:35;githubbot;600","tfabien commented on pull request #3396: [CAMEL-14267] Fix a nullPointerException in convertIfRequired
URL: https://github.com/apache/camel/pull/3396
 
 
   Fix a nullPointerException in convertIfRequired when boddy is null
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 19:09;githubbot;600","davsclaus commented on pull request #3396: [CAMEL-14267] Fix a nullPointerException in convertIfRequired
URL: https://github.com/apache/camel/pull/3396
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Dec/19 04:11;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,"09/Dec/19 09:17;ftaysse;test-npe.zip;https://issues.apache.org/jira/secure/attachment/12988300/test-npe.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 10 04:38:48 UTC 2019,,,,,,,,,,,"0|z09di0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Dec/19 20:27;nikhilvibhav;[~ftaysse] I tried this out locally using Camel 2.24.2, but didn't face this issue. 
{code:java}
from(""timer://foo?repeatCount=1"")
    .setBody().constant(""42"")
    .to(""direct:processFoo"");

from(""direct:processFoo"")
    .inputType(String.class)
    .outputType(Integer.class)
    .process(exchange -> {
        System.out.println(exchange.getIn().getBody());
    })
    .setBody().constant(null)
    .process(exchange -> {
        System.out.println(exchange.getIn().getBody());
    }); {code}

Getting the output as expected and no exceptions are thrown.
{code}42
null

Process finished with exit code 130 (interrupted by signal 2: SIGINT)
{code};;;","09/Dec/19 09:18;ftaysse;Just created a dedicated mini maven project for this example and made it available as an attachement (using spring-boot-camel  2.24.2)

In org.apache.camel.processor.ContractAdvice#convertIfRequired() method , the body isn't checked for null before calling ""getClass()"", thus throwing an NPE

 
{code:java}
    private boolean convertIfRequired(Message message, DataType type) throws Exception {
        // TODO for better performance it may be better to add TypeConverterTransformer
        // into transformer registry automatically to avoid unnecessary scan in transformer registry
        if (type != null && type.isJavaType() && type.getName() != null) {
            CamelContext context = message.getExchange().getContext();
            Class<?> typeJava = getClazz(type.getName(), context);
            // Check for null missing here...
            if (!typeJava.isAssignableFrom(message.getBody().getClass())) {
                LOG.debug(""Converting to '{}'"", typeJava.getName());
                message.setBody(message.getMandatoryBody(typeJava));
                return true;
            }
        }
        return false;
    }
{code}
[^test-npe.zip]

 

 ;;;","09/Dec/19 10:22;davsclaus;Thanks, you are welcome to attempt to fix this with a github PR to check for null body
https://camel.apache.org/manual/latest/contributing.html;;;","09/Dec/19 13:38;ftaysse;Done [[CAMEL-14267] Fix a nullPointerException in convertIfRequired|https://github.com/apache/camel/pull/3393];;;","09/Dec/19 15:37;davsclaus;Fixed on Camel 3;;;","10/Dec/19 04:38;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-cdi - Standalone CDI with Camel Main discovers routes twice,CAMEL-14265,13272688,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,06/Dec/19 08:19,06/Dec/19 08:35,13/Jul/23 08:32,06/Dec/19 08:35,,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-cdi,,,,0,,,,,"Reported on user forum
https://camel.465427.n5.nabble.com/Camel-3-shutdown-triggered-right-after-start-tp5849922.html",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-12-06 08:19:25.0,,,,,,,,,,,"0|z09d1c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
allowUseOriginalMessage not configurable,CAMEL-14257,13272237,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,michael992,michael992,04/Dec/19 13:46,05/Dec/19 10:46,13/Jul/23 08:32,05/Dec/19 10:46,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-core,camel-core-engine,,,0,,,,,"*Context*
Using spring boot container with camel 3 i'm unable to use original message i get this exception
{code:java}
Error executing reactive work due to AllowUseOriginalMessage is disabled. Cannot access the original message.. This exception is ignored
{code}

Even doing this:

{code:java}
 getContext().setAllowUseOriginalMessage(true);
{code}

I observe using debugger that org.apache.camel.impl.engine.AbstractCamelContext.*isAllowUseOriginalMessage()* is called twice at startup first *allowUseOriginalMessage* is *true* then is become *false*

",,davsclaus,michael992,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14259,"05/Dec/19 08:16;michael992;originalbody.zip;https://issues.apache.org/jira/secure/attachment/12987549/originalbody.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 05 10:25:52 UTC 2019,,,,,,,,,,,"0|z09a94:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Dec/19 14:01;davsclaus;Where do you set that code, as you may set it before sb initialize camel.

You should ideally set it in application.properties with sb;;;","04/Dec/19 14:03;michael992;In configure method (i use BaseRoute class that itself extend RouteBuidler) 

{code:java}
public class BaseRoute extends EndpointRouteBuilder {
    @Autowired
    private DeadLetterChannelBuilder deadLetterChannelBuilder;

    private EndpointConsumerBuilder input;
    private EndpointProducerBuilder output;

    @Override
    public void configure() throws Exception {
        getContext().setAllowUseOriginalMessage(true);
        // Dead letter channel
        errorHandler(deadLetterChannelBuilder);
    }

    protected EndpointProducerBuilder getOutput() {
        return output;
    }

    protected void setOutput(EndpointProducerBuilder output) {
        this.output = output;
    }

    protected EndpointConsumerBuilder getInput() {
        return input;
    }

    protected void setInput(EndpointConsumerBuilder input) {
        this.input = input;
    }

}

{code}

i'll try now in application.yml;;;","04/Dec/19 14:06;michael992;doing this 
{code:java}
camel:
  springboot:
    name: my-app-name
    allow-use-original-message: true
{code}

still not working
;;;","04/Dec/19 14:18;michael992;CamelContext is mutable and now from camel 3 there is only one CamelContext so i just think this value is overriden by another default configuration somewhere;;;","05/Dec/19 07:55;davsclaus;Can you put a sample project on github or attach a zip file. This works fine for me to configure camel spring boot, such as one of the many examples from apache camel itself;;;","05/Dec/19 08:02;davsclaus;Okay it also works for me to configure in the route, such as camel-example-spring-boot
{code}
    @Override
    public void configure() throws Exception {
        getContext().setAllowUseOriginalMessage(true);
        getContext().setStreamCaching(true);


        from(""timer:hello?period={{timer.period}}"").routeId(""hello"").routeGroup(""hello-group"")
                .transform().method(""myBean"", ""saySomething"")
                .filter(simple(""${body} contains 'foo'""))
                    .to(""log:foo"")
                .end()
                .process(e -> {
                    System.out.println(""Allow original message: "" + e.getContext().isAllowUseOriginalMessage());
                })
                .to(""stream:out"");
    }
{code}

Then logs
{code}
Allow original message: true
Hello World
Allow original message: true
Hello World
{code};;;","05/Dec/19 08:16;michael992; [^originalbody.zip] here simple demo project;;;","05/Dec/19 10:15;davsclaus;Ah okay its because you are spring boot with camel's main run controller, then it triggers that double initialization. If you use spring-boot-starter-web etc then it wont have that issue.;;;","05/Dec/19 10:25;michael992;-What is the good way to use camel with spring boot ? I don't want to start a web server in my case- A i see you have opened a ticket about if i can help tell me;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Opentracing with JMS not working when JmsComponent is defined as a Spring bean,CAMEL-14243,13271883,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,,Serkan80,Serkan80,03/Dec/19 07:47,05/Dec/19 11:39,13/Jul/23 08:32,05/Dec/19 11:39,2.24.2,,,,,,,,,,,3.1.0,,,,,,camel-opentracing,,,,0,,,,,"see also:

[https://github.com/opentracing/opentracing-java/issues/307#issuecomment-560329283]

 

I'm using the following libraries:

-JDK 8

-camel 2.24.2

-camel-jms-2.24.2

-camel-opentracing 2.24.2

-jaeger-client-0.34.0

 

Issue:

-Define JmsComponent as a Spring bean:

@Bean(name = ""core-jms"")
 public JmsComponent createJmsComponentBean(
 @Qualifier(value = ""core-jmsConnectionFactory"") ConnectionFactory connectionFactory) throws JMSException

{ JmsComponent jmsComponent = new JmsComponent(); JmsConfiguration jmsConfiguration = new JmsConfiguration(connectionFactory); jmsConfiguration.setJmsMessageType(JmsMessageType.Text); jmsConfiguration.setUseMessageIDAsCorrelationID(true); jmsComponent.setConfiguration(jmsConfiguration); return jmsComponent; }

If you use this JmsComponent in your route (like: from(""core-jms://...) then the protocol name change from jms:// into core-jms:// and the current registered SpanDecorators wont match with this one. What will result into wrong tracing id's among the whole flow.

Thus let's say we have the following situation:

Route A -> Jms Queue -> Route B -> WS call.

What I expect is that Route A and Route B have the same traceId, but what I get is 2 traces:

one for Route A -> Jms Queue, and another one from Jms Queue -> Route B.

 

See also the discussion in the link above for more info.

 

 ",,davsclaus,Serkan80,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14244,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 04 11:23:39 UTC 2019,,,,,,,,,,,"0|z0982w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Dec/19 08:25;davsclaus;This is only when you create a custom named component and wont use the default jms name;;;","03/Dec/19 08:30;davsclaus;You need to register core-jms as a decorator but camel-opentracing hasn't been made so easily customizable in that regard;;;","03/Dec/19 09:45;Serkan80;I did that, but it's still not working. Route B doesn't extract the existing traceId from the JmsMessage and instead it creates a new one.;;;","04/Dec/19 10:12;Serkan80;Btw, Ive changed the way Im creating JmsComponent. Im not defining it as a Spring Bean, and Im using the jms protocol now.

I think I've found the reason why my JMS route was not traced well. 

In the OpenTracingTracer class there are only 2 events on which is listened: 

@Override
public boolean isEnabled(EventObject event) {
     return event instanceof ExchangeSendingEvent || event instanceof ExchangeSentEvent;
}

But when you have the following route:
from(""jms:queue..."")...

ExchangeCreatedEvent is fired, and the tracing for this endpoint is skipped. And this has to be the first event in the chain to check for an existing traceId.

And strangely, the OpenTracingRoutePolicy (in OpenTracingTracer class) which listens for onExchangeBegin(..) is also never called.

So I wonder how this has been tested and worked before, because only adding a new SpanDecorator is not solving the problem.;;;","04/Dec/19 11:23;davsclaus;The code works fine for me, the route policy ensures the exchange begin/end is called, which would be the consumer side.
then the other is the producer side with sending/sent.

Also opentracing is working for others on Camel 2.x.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-rabbitmq - Binding parameters with x- is not possible when using endpointdsl,CAMEL-14242,13271737,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,michael992,michael992,02/Dec/19 15:49,05/Dec/19 12:42,13/Jul/23 08:32,05/Dec/19 12:41,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-rabbitmq,,,,0,,,,,"I can' use some rabbitMq parameter eg: *x-max-priority* please provide an working exemple. 
It was before possible doing that using deprecated parameter *&queueArgsConfigurer=#rabbitMqQueueArgsConfigurer*  

{code:java}
@Bean(""rabbitMqQueueArgsConfigurer"")
public ArgsConfigurer rabbitMqQueueArgsConfigurer() {
    return map -> map.put(""x-max-priority"", 10);
}
{code}

See this one:
[https://stackoverflow.com/a/44651087/4271976|https://stackoverflow.com/a/44651087/4271976]",,acosentino,davsclaus,michael992,omarsmak,,,"davsclaus commented on pull request #3385: CAMEL-14242: Fix binding parameters with arg.- is not possible when using endpointdsl and RabbitMQ
URL: https://github.com/apache/camel/pull/3385
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/19 12:41;githubbot;600",,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 05 12:42:01 UTC 2019,,,,,,,,,,,"0|z0976g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Dec/19 16:37;omarsmak;did you try with arg option? https://camel.apache.org/components/latest/rabbitmq-component.html;;;","02/Dec/19 16:37;omarsmak;Also, I think the best place for these question, gitter or dev mailing list ;;;","02/Dec/19 16:38;michael992;Yeah the arg option is doesn't well documented and not working in the documentation we can also find this parameter *bindingArgs* that in fact even doesn't exist;;;","02/Dec/19 16:44;michael992;No i think the place is here sorry because i already check the code in past and there is many improvement (maybe rollback some commits) see my comment on github for exemple  x-max-priority *must* be sended as int to rabbitMQ but is sended as String you can try by yourself so its bugged;;;","02/Dec/19 16:45;omarsmak;From docs:
{code}
Specify arguments for configuring the different RabbitMQ concepts, a different prefix is required for each: Exchange: arg.exchange. Queue: arg.queue. Binding: arg.binding. For example to declare a queue with message ttl argument: http://localhost:5672/exchange/queueargs=arg.queue.x-message-ttl=60000
{code}
Therefore, {{bindingArgs}} *does exist.*;;;","02/Dec/19 16:46;michael992;Are you trying by yourself ? when i use bindingArgs camel say that is doesn't exist 


{code:java}
Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: rabbitmq://demo-input?bindingArgs=test&queue=demo-input due to: There are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{bindingArgs=test}]
{code}
;;;","02/Dec/19 16:48;michael992;The docs is wrong for many years for this component the only way was the deprecated parameter that was removed from camel 3.0.0;;;","02/Dec/19 17:00;omarsmak;I am actually looking at the code now, trying to grasp it. Might need your help, can you please try out like this in route {{arg.binding.<<key>>=<value>>}}. Also, if you are going with the binding approach, can you try to bind using this {{args=#args}} instead. ;;;","02/Dec/19 17:00;acosentino;We'll review the component. Thanks for reporting [~michael992];;;","02/Dec/19 17:02;acosentino;We don't consider this critical.;;;","02/Dec/19 17:05;michael992;[~omarsmak] this one *arg.binding.<<key>>=<value>>* will create an exchange argument and that not the aim the second one doesn't work;;;","02/Dec/19 18:54;acosentino;By the way, [~michael992] if the code is ""badly wrong"" and you noticed that, why are you complaining on this Jira instead of providing a fix and open a PR? You always use this approach, is this constructive for the project?;;;","02/Dec/19 19:39;michael992;Your'e right by the way i think there is too much thing to change in this component.
;;;","03/Dec/19 14:07;michael992;[~cibsen@e-ma.net] i not agree is not an improvement is bug and is not only about x arguments, please guys is someone take care about this one ?;;;","03/Dec/19 15:18;davsclaus;Nobody is taking care of this at this moment. Its open source and community is very much welcome to help. See https://camel.apache.org/manual/latest/contributing.html

;;;","03/Dec/19 15:57;michael992;Ok so i'll use the native client is more reliable i think (this component was working before wrong PR validation) thanks for your help;;;","03/Dec/19 16:02;davsclaus;Why not help, sorry there is no free lunch. If you need priority help, then get in touch with commercial vendors. but in general its mostly ""when people get time to work on"" and if they fancy rabbitmq, eg i dont really use it, so i am not jumping on it asap, as opposed to kafka, jms, activemq, and others etc.

And btw thanks for reporting and testing.;;;","03/Dec/19 16:08;michael992;Ok i'll try to check this one;;;","03/Dec/19 16:25;michael992;Using maven or ide i get a lots of exceptions when i trying to run tests for example:

// org.apache.camel.component.rabbitmq.RabbitMQBasicIntTest
{code:java}
Caused by: org.apache.camel.RuntimeCamelException: com.rabbitmq.client.AuthenticationFailureException: ACCESS_REFUSED - Login was refused using authentication mechanism PLAIN. For details see the broker logfile.
	at org.apache.camel.RuntimeCamelException.wrapRuntimeException(RuntimeCamelException.java:68)
	at org.apache.camel.support.service.ServiceSupport.start(ServiceSupport.java:130)
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:70)
	at org.apache.camel.component.rabbitmq.RabbitMQProducer.createReplyManager(RabbitMQProducer.java:373)
	at org.apache.camel.component.rabbitmq.RabbitMQProducer.initReplyManager(RabbitMQProducer.java:335)

{code}
;;;","03/Dec/19 18:48;acosentino;Anyone with committer power can merge pull requests. We are very careful each time and it seems to me you're criticizing this project a bit too much. Enough is enough.;;;","03/Dec/19 19:07;michael992;I'm just asking for better understanding the process that all. I all the time recommend and advise my clients using camel is for me the best integration Framework, you can see i'm now trying to improve this component but i don't know how because the tests are not passing for me.;;;","03/Dec/19 22:28;bedla;For integration tests you need to start local instance of rabbitmq, there is docker image ready for this, see readme ( https://github.com/apache/camel/blob/master/components/camel-rabbitmq/readme.txt ). While looking into this, you might be interested in [RabbitMQDeclareSupport#formatSpecialQueueArguments|https://github.com/apache/camel/blob/master/components/camel-rabbitmq/src/main/java/org/apache/camel/component/rabbitmq/RabbitMQDeclareSupport.java#L76] which handles the conversion of x-max-priority from String to Integer and debug, why the conversion is not happening in your case.;;;","03/Dec/19 22:57;omarsmak;Honestly I *don't think* this is a bug, this feature was deprecated in 2.x and I guess you were aware of it and yet you didn't raise your concerns back then as Andrea mentioned in the chat. However, I do agree with you that docs are bit misleading in this regards and wasn't clear on the alternatives.
 Second, did you try what I suggested in the chat? To add this in the route {{arg.queue.x-max-priority=x}} (this is different from what I suggested earlier as I wasn't really aware)? As I understood from the code, this used to work as alternative to {{queueArgsConfigurer}}. 
 Third, we read your comments that you delete in JIRA as email notification, again this is an open source project, which means we treat each other with respect and of course constructive criticism is always welcome, hence I again as I mentioned before we would appreciate the same from you.;;;","04/Dec/19 06:32;michael992;What did mean by adding in the route ? 

[~bedla] I thanks ! all the tests are now passed, i'll now try to check whats exactly happen with args arguments (I was think that integration tests should be run independently there is no embedded rabbit or some of ?);;;","04/Dec/19 08:31;michael992;Ok guys after investigate the tests its appear to achieve the same as before the only way now is by configuring component like this:

{code:java}
  private Endpoint rabbitMq() throws Exception {
        RabbitMQComponent rabbitMQComponent = getContext().getComponent(""rabbitmq"", RabbitMQComponent.class);
        rabbitMQComponent.setArgs(Collections.singletonMap(""queue.x-max-priority"", ""10""));

        return rabbitMQComponent.createEndpoint(""rabbitmq:foo?queue=foo"");
    }
{code}

So is working this way but the doc should be updated i think (i personally prefer the oldest way because we was free to add any option directly using query parameters and simple map and now like it was the case with x-max-priority we have to code every options in the component source code).

Thanks for your help
;;;","04/Dec/19 08:34;omarsmak;Sorry I meant in the URI as query parameter  e.g: {{rabbitmq:foo?queue=foo&arg.queue.x-max-priority=10}};;;","04/Dec/19 08:46;michael992;A directly i'm trying this now (this will be of course not possible btw with the new camel-endpointdsl)

[~omarsmak] It's working thanks for your help ! I think again the doc is not clear about this and what about camel-endpointdsl ?;;;","04/Dec/19 09:06;omarsmak;You are encouraged to help out on fixing the docs, click on 'Edit this Page` here: https://camel.apache.org/components/latest/rabbitmq-component.html and you will be redirected to github where you can amend your modifications. 

I think it should work, you just need to omit the prefix {{arg.}}, e.g: {{rabbitmq(""abbitmq:foo"").args(""queue.x-max-priority"", ""10"")}}.;;;","04/Dec/19 09:07;omarsmak;Closing this as we clarified it ;;;","04/Dec/19 09:59;michael992;No it doesn't that why i'm asking here 
{code:java}
    private AdvancedRabbitMQEndpointBuilder rabbitMq() {
        return rabbitmq(""foo"")
                .queue(""foo"")
                .advanced()
                .args(Collections.singletonMap(""queue.x-max-priority"", ""10""));
    }
{code}
;;;","04/Dec/19 10:00;michael992;I'll upgrade the documentation when i'll sure about the right way;;;","04/Dec/19 10:08;michael992;The only way i found what is your opinion about ? is not ideal for me


{code:java}
    private Endpoint rabbitMq() throws Exception {
        RabbitMQComponent rabbitMQComponent = getContext().getComponent(""rabbitmq"", RabbitMQComponent.class);
        rabbitMQComponent.setArgs(Collections.singletonMap(""queue.x-max-priority"", ""10""));

        return rabbitMQComponent.createEndpoint(rabbitmq(""foo"").queue(""foo"").getUri());
    }
{code}
I don't understand why the args is accessible from the dsl in my previous example if it is no taken into account, when i debug the code i observe that args map always empty (in org.apache.camel.component.rabbitmq.RabbitMQComponent) when using this as query parameter or dsl eg:""rabbitmq:foo?args=any.args"" ;;;","04/Dec/19 10:21;michael992;[~omarsmak] I don't sure about closing this now is right;;;","04/Dec/19 11:22;omarsmak;Yes, it seems there is a bug in regards to endpointdsl and RabbitMQComponent and I verified it. To give you a context, when you do something like this: 
{code}
rabbitmq(""foo"")
        .queue(""foo"")
        .advanced()
        .args(Collections.singletonMap(""queue.x-max-priority"", ""10""));
{code}
The endpointdsl will bootstrap a URI route and parameters. However, these parameters that being bootstrapped by the endpointdsl, is taking this shape:
{code}
""queue.x-max-priority"" -> ""10""
{code}
Meanwhile, the [component expects parameters|https://github.com/apache/camel/blob/master/components/camel-rabbitmq/src/main/java/org/apache/camel/component/rabbitmq/RabbitMQComponent.java#L256] with prefix appended {{arg.}}, e.g in this form:
{code}
""arg.queue.x-max-priority"" -> ""10""
{code}
The fix is fairly simple, you just need to check if why args are not assigned [here|https://github.com/apache/camel/blob/master/components/camel-rabbitmq/src/main/java/org/apache/camel/component/rabbitmq/RabbitMQComponent.java#L252]. 
However, if you wish, you are encouraged to send a PR to fix this since you spent the time to test it and report. Let me know if you are willing to jump on this one to fix. ;;;","04/Dec/19 12:26;michael992;[~omarsmak] Yeah i'll do but still not sure about what i explain my understanding:

*Options* must be set using components object only
*Query parameters* Using dsl or string

Args is in Options section (in the documentation) so i guess we can't set args using dsl maybe i'm wrong ? Options and query parameters i'm still not sure about what the difference thanks for your answer;;;","04/Dec/19 14:32;omarsmak;Query parameters appear in the URI string. Options, that you set in the component level using the APIs. Endpointdsl uses options (API) to set args. Camel normally will parse the URI into {{Map}} of params that will be passed into the component, then component set these params using the options in the component level, you can add a breakpoint [here|https://github.com/apache/camel/blob/master/components/camel-rabbitmq/src/main/java/org/apache/camel/component/rabbitmq/RabbitMQComponent.java#L151] and you will see what happens to param. Try it on both, endpointdsl and running the route using the URI string;;;","04/Dec/19 14:42;michael992;Ok thanks for this precision you can assign me this ticket if you want i'll try to fix this as you're proposed ;;;","04/Dec/19 14:44;omarsmak;Cool. A comment from you that you are working on it is enough. Good luck!;;;","04/Dec/19 20:07;michael992;[~omarsmak] i made [some modifications |https://github.com/apache/camel/pull/3385]it's appear to be work but not sure at all about side effect, it still not clear for me what's relation between options and query parameters.

I also detected some weird test see org.apache.camel.component.rabbitmq.RabbitMQConsumerIntTest.sentMessageIsReceivedWithHeadersRouting()

*// Don't know what it suppose to do but nothing is filtered i get the 3 headers so this test is wrong off course it pass because 1 < 3*
{code:java}
    @Test
    public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException {
        //should only be one message that makes it through because only
        //one has the correct header set
        to.expectedMessageCount(1);

        Channel channel = connection().createChannel();
        channel.basicPublish(HEADERS_EXCHANGE, """", propertiesWithHeader(""foo"", ""bar""), MSG.getBytes());
        channel.basicPublish(HEADERS_EXCHANGE, """", null, MSG.getBytes());
        channel.basicPublish(HEADERS_EXCHANGE, """", propertiesWithHeader(""foo"", ""bra""), MSG.getBytes());

        to.assertIsSatisfied();
    }
{code}
;;;","05/Dec/19 11:54;davsclaus;Also it may be its when you use Map instance, you can try with

.args(""arg.queue.x-max-priority=10"")

;;;","05/Dec/19 12:04;omarsmak;I don't think is going to work. The issue is, when the endpointdsl constructs the params map, it will assign {{arg.queue.x-max-priority}} to {{args}} of the endpoint which is expected when using the property binding [here|https://github.com/apache/camel/blob/master/components/camel-rabbitmq/src/main/java/org/apache/camel/component/rabbitmq/RabbitMQComponent.java#L244]. However, then at this [check|https://github.com/apache/camel/blob/master/components/camel-rabbitmq/src/main/java/org/apache/camel/component/rabbitmq/RabbitMQComponent.java#L252], we don't check if it was assigned to the endpoint and we end up with overwriting an empty {{localArgs}} that overrides what being set at the endpoint. 
;;;","05/Dec/19 12:21;davsclaus;Yeah it should honour the existing args on the endpoint;;;","05/Dec/19 12:42;davsclaus;And yeah it would be nice to use testcontainers to bootstrap rabbitmq for integration testing. I created a ticket: https://issues.apache.org/jira/browse/CAMEL-14260;;;"
InfluxDb does not define its dependency on okio,CAMEL-14241,13271726,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tdiesler,tdiesler,tdiesler,02/Dec/19 15:14,03/Dec/19 11:13,13/Jul/23 08:32,03/Dec/19 11:09,,,,,,,,,,,,3.1.0,,,,,,camel-influxdb,,,,0,,,,,"camel-influxdb has a direct dependency on
{code:java}
 <dependency>
 <groupId>com.squareup.okio</groupId>
 <artifactId>okio</artifactId>
</dependency>

{code}
 

but doesn't define its version",,tdiesler,,,,,,"tdiesler commented on pull request #3375: [CAMEL-14241] InfluxDb does not define its dependency on okio
URL: https://github.com/apache/camel/pull/3375
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/19 15:18;githubbot;600","oscerd commented on pull request #3375: [CAMEL-14241] InfluxDb does not define its dependency on okio
URL: https://github.com/apache/camel/pull/3375
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 11:13;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-12-02 15:14:27.0,,,,,,,,,,,"0|z09740:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Project generated with camel-archetype-spring-boot cannot be built,CAMEL-14234,13271481,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,bedla,bedla,bedla,30/Nov/19 00:17,30/Nov/19 00:54,13/Jul/23 08:32,30/Nov/19 00:54,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,,,,,0,,,,,"As a workaround until new patch release users needs to replace in their pom.xml
{code:java}
<!-- Camel BOM -->
<dependency>
  <groupId>org.apache.camel</groupId>
  <artifactId>camel-spring-boot-dependencies</artifactId>
  <version>3.0.0</version>
  <type>pom</type>
  <scope>import</scope>
</dependency>
{code}
with
{code:java}
<!-- Camel BOM -->
<dependency>
  <groupId>org.apache.camel.springboot</groupId>
  <artifactId>camel-spring-boot-dependencies</artifactId>
  <version>3.0.0</version>
  <type>pom</type>
  <scope>import</scope>
</dependency>
{code}",,bedla,,,,,,"bedlaj commented on pull request #3368: CAMEL-14234: Fix BOM group id for camel-archetype-spring-boot
URL: https://github.com/apache/camel/pull/3368
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Nov/19 00:26;githubbot;600","bedlaj commented on pull request #3368: CAMEL-14234: Fix BOM group id for camel-archetype-spring-boot
URL: https://github.com/apache/camel/pull/3368
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Nov/19 00:48;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-30 00:17:52.0,,,,,,,,,,,"0|z095lk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Discussion forum link in Get in touch page is broken,CAMEL-14231,13271449,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,omarsmak,heiko.braun,heiko.braun,29/Nov/19 16:29,29/Nov/19 19:05,13/Jul/23 08:32,29/Nov/19 19:05,,,,,,,,,,,,,,,,,,website,,,,0,,,,,"The [https://camel.apache.org/discussion-forums.html |https://camel.apache.org/discussion-forums.htmlLeads] link here https://camel.apache.org/manual/latest/contributing.html#getting-in-touch is broken",,heiko.braun,omarsmak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 29 18:48:49 UTC 2019,,,,,,,,,,,"0|z095eg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Nov/19 16:40;omarsmak;we have this page now: https://camel.apache.org/community/support/ and this page https://camel.apache.org/manual/latest/mailing-lists.html ;;;","29/Nov/19 16:42;omarsmak;Sorry forgot to ask, but from where did you get to this page?;;;","29/Nov/19 18:01;heiko.braun;Its taken from here: https://camel.apache.org/manual/latest/contributing.html#getting-in-touch;;;","29/Nov/19 18:48;omarsmak;Thanks, updated the issue description ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-Websocket: The sendToAll method in the Producer is really slow,CAMEL-14224,13271019,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,michael992,michael992,27/Nov/19 14:49,05/Dec/19 12:37,13/Jul/23 08:32,04/Dec/19 11:49,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.1,3.1.0,,,camel-websocket,,,,0,,,,,"I don't know what the idea behind but in this class ([Producer|https://github.com/apache/camel/blob/master/components/camel-websocket/src/main/java/org/apache/camel/component/websocket/WebsocketProducer.java]) sendToAll method the Thread.sleep in the while loop make all the process crazy slow just try to run this code


{code:java}
    @Override
    public void configure() throws Exception {
        String uri = ""websocket://127.0.0.1:8443/test?sendToAll=true&sendTimeout=0"";

        from(uri).to(uri);
    }
{code}


and send multiple message to the server and you will see how slow is it for my point there is two defect:
# Give the availability to send to all *expect* the sender
# Fix the while loop

During my test to have decent performance i set this parameter `sendTimeout` to 0 but i got this exception then: 

{code:java}
org.apache.camel.component.websocket.WebsocketSendException: Failed to deliver message within 0 millis to one or more recipients.. Exchange[ID-DESKTOP-S8PM2C4-1574865248397-0-3]
	at org.apache.camel.component.websocket.WebsocketProducer.sendToAll(WebsocketProducer.java:149) ~[camel-websocket-2.24.2.jar:2.24.2]
	at org.apache.camel.component.websocket.WebsocketProducer.process(WebsocketProducer.java:52) ~[camel-websocket-2.24.2.jar:2.24.2]
	at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61) ~[camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:76) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) [camel-core-2.24.2.jar:2.24.2]
	at org.apache.camel.component.websocket.WebsocketConsumer.sendMessage(WebsocketConsumer.java:75) [camel-websocket-2.24.2.jar:2.24.2]
	at org.apache.camel.component.websocket.WebsocketConsumer.sendMessage(WebsocketConsumer.java:59) [camel-websocket-2.24.2.jar:2.24.2]
	at org.apache.camel.component.websocket.DefaultWebsocket.onMessage(DefaultWebsocket.java:66) [camel-websocket-2.24.2.jar:2.24.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_201]
	at org.eclipse.jetty.websocket.common.events.annotated.CallableMethod.call(CallableMethod.java:70) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.events.annotated.OptionalSessionCallableMethod.call(OptionalSessionCallableMethod.java:72) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.events.JettyAnnotatedEventDriver.onTextMessage(JettyAnnotatedEventDriver.java:251) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.events.JettyAnnotatedEventDriver.onTextFrame(JettyAnnotatedEventDriver.java:243) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:322) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:460) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:441) [websocket-common-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311) [jetty-io-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103) [jetty-io-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117) [jetty-io-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336) [jetty-util-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313) [jetty-util-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171) [jetty-util-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129) [jetty-util-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388) [jetty-util-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806) [jetty-util-9.4.22.v20191022.jar:9.4.22.v20191022]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938) [jetty-util-9.4.22.v20191022.jar:9.4.22.v20191022]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_201]

{code}

",,bedla,davsclaus,michael992,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 05 12:37:31 UTC 2019,,,,,,,,,,,"0|z092qw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"30/Nov/19 13:49;davsclaus;And what happens when you use =1;;;","30/Nov/19 13:51;davsclaus;And yeah looks like you can move this sleep out in the outer loop so it sleeps per run and not per message, can you try to patch the code and test it, and then provide a PR;;;","02/Dec/19 15:37;michael992;With 1 same exception depending on how fast the message was processed, yeah i'll try ;;;","02/Dec/19 21:06;michael992;Hum i don't know how to proceed because there is no test for this specific part, by the way there is a lot of non passing tests when i running using my IDE (IntelliJ) for different raison is it normal ?;;;","02/Dec/19 21:52;bedla;All tests (except one for hystrix) are passing on CI ( [https://builds.apache.org/job/Camel/job/master/1716/testReport/] ) . I was never able to run tests directly in Intellij, the project is simply too huge for IDE and it randomly fails. You need to test it with maven.

 
{code:java}
cd components/whatever
mvn clean install # build and test all in submodule
mvn clean install -Dtest=YourTestClassName # build module and run single test 
{code}
 ;;;","03/Dec/19 10:26;michael992;I know tests are passed using maven but for my point it must be passed when using an IDE also, by the way you can just open your component when you are using an ide and not the whole project ;;;","03/Dec/19 15:20;davsclaus;Well it can be some weird limitation in jetty how fast you can send using it.;;;","03/Dec/19 15:56;michael992;It is not limitation of jetty actual implementation are wrong as you say before we have to fix this loop;;;","05/Dec/19 12:37;michael992;Oh you already fix this one thanks !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndpointBuilderFactory is not updated whenever `:camel-package:generate-endpoint-dsl` is executed,CAMEL-14223,13271018,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,omarsmak,omarsmak,omarsmak,27/Nov/19 14:49,29/Nov/19 09:53,13/Jul/23 08:32,29/Nov/19 09:53,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,tooling,,,,0,,,,,"While I was trying out the endpoint DSL, I noticed whenever {{mvn clean install :camel-package:generate-endpoint-dsl}} maven command is executed under specific component, the corresponding DSL factory will be be created as expected, however {{EndpointBuilderFactory}} interface won't be updated to include the new generated DSL factory which as result, the generated factory won't be exposed whenever camel-endpointdsl is imported",,omarsmak,,,,,,"omarsmak commented on pull request #3366: CAMEL-14223: Fix EndpointBuilderFactory is not updated whenever the maven build is executed
URL: https://github.com/apache/camel/pull/3366
 
 
   Currently, if there is a new component being added or deleted, the `EndpointBuilderFactory` is not updated, which is a result, the endpoint DSL for newly added component won't be exposed to the user. This PR will make sure the interface being updated whenever there are changes in components whenever the normal maven build is executed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Nov/19 22:44;githubbot;600","omarsmak commented on pull request #3366: CAMEL-14223: Fix EndpointBuilderFactory is not updated whenever the maven build is executed
URL: https://github.com/apache/camel/pull/3366
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Nov/19 08:52;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-27 14:49:12.0,,,,,,,,,,,"0|z092qo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-activemq - Setting brokerURL via camel-main issue,CAMEL-14220,13270789,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,26/Nov/19 19:06,23/Jan/20 07:38,13/Jul/23 08:32,03/Dec/19 14:55,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-activemq,,,,0,,,,,It triggers a lazy create connection factory that uses localhost:61616 and sets it due camel-main can detect singleton instanses from registry and auto configure them. But sadly activemq uses this lazy create convention in getter (legacy from Camel 1.x days),,davsclaus,preben,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14213,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 23 07:30:10 UTC 2020,,,,,,,,,,,"0|z091bs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Dec/19 14:19;davsclaus;Okay fixing this in camel-jms which was the cause with some lazy creation in the getter, that was a style James used ;);;;","22/Jan/20 16:10;preben;When upgrading to 3.0.1 from 3.0.0 I found issue in initializing the Activemq FailoverTransport. It will always use localhost:61616.

I think we should reopen this issue.

See gitter [https://gitter.im/apache/apache-camel?at=5e284b963fd0cc7cfe17da8d];;;","23/Jan/20 05:13;davsclaus;You are using spring boot, its not entirely the same. Can you put a sample project on github. And also try with 3.1.0-SNAPSHOT;;;","23/Jan/20 07:30;preben;Sure. I created the project here [https://github.com/pax95/failover-test]

When running the project the failover task will try to connect to localhost

(I see the same behaviour on 3.1.0-SNAPSHOT)
{code:java}
2020-01-23 08:17:32.352 WARN 8463 --- [ActiveMQ Task-1] o.a.a.t.failover.FailoverTransport : Failed to connect to [tcp://localhost:61616] after: 10 attempt(s) continuing to retry.{code}
 

If you change the camel version to 3.0.0 you should see the expected behaviour 
{code:java}
2020-01-23 08:24:20.043 WARN 10019 --- [ActiveMQ Task-1] o.a.a.t.failover.FailoverTransport : Failed to connect to [ssl://foo:61617, ssl://bar:61617] after: 10 attempt(s) continuing to retry.{code}
 

It seems that the FailoverTransport get intialized twice and the default localhost get's added the second time.

I'm aware of that camel also has a camel.component.activemq.broker-u-r-l, but when using SB it should still work with the spring configuration property i would guess

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReactiveStreams subscriber does not enforce type conversion,CAMEL-14219,13270561,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,nferraro,nferraro,nferraro,26/Nov/19 00:01,27/Nov/19 04:01,13/Jul/23 08:32,27/Nov/19 04:01,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-reactive-streams,,,,0,,,,,See: [https://stackoverflow.com/questions/59004326/my-camel-route-app-detects-other-apps-published-ampq-message-but-fails-to/59041466#59041466],,nferraro,,,,,,"nicolaferraro commented on pull request #3362: CAMEL-14219: enforce type conversion on reactive-streams subscriber
URL: https://github.com/apache/camel/pull/3362
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Nov/19 00:03;githubbot;600","davsclaus commented on pull request #3362: CAMEL-14219: enforce type conversion on reactive-streams subscriber
URL: https://github.com/apache/camel/pull/3362
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Nov/19 04:01;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-26 00:01:06.0,,,,,,,,,,,"0|z08zx4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-jms - Using XA and having 2 or more connection factories issue,CAMEL-14213,13270401,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,25/Nov/19 09:11,03/Dec/19 14:55,13/Jul/23 08:32,25/Nov/19 09:54,3.0.0,,,,,,,,,,,3.0.1,3.1.0,,,,,camel-jms,,,,0,,,,,"If you have 2 jms components with their own settings, and you dont set a CF then it may gets autowired to the wrong CF in case you have XA and non-XA mixed up etc. (a bit complex).",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14190,,,,,,,,,,CAMEL-14220,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-25 09:11:52.0,,,,,,,,,,,"0|z08yxk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-olingo2 - Basic auth with endpointHttpHeaders not working ,CAMEL-14207,13270038,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tadayosi,tadayosi,tadayosi,22/Nov/19 07:03,22/Nov/19 07:24,13/Jul/23 08:32,22/Nov/19 07:24,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-olingo2,,,,0,,,,,This bug is the Olingo2 version of CAMEL-13464.,,tadayosi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13464,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-22 07:03:18.0,,,,,,,,,,,"0|z08wow:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-spring-boot - Can restart routes on startup if using run-main-controller,CAMEL-14198,13269777,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,21/Nov/19 09:09,21/Nov/19 10:14,13/Jul/23 08:32,21/Nov/19 10:14,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-spring-boot,,,,0,,,,,"For example running camel-example-spring-boot-activemq, see the logs on startup

2019-11-21 09:59:46.507  INFO 65135 --- [           main] o.a.c.s.boot.SpringBootRoutesCollector   : Loading additional Camel XML routes from: classpath:camel/*.xml
2019-11-21 09:59:46.508  INFO 65135 --- [           main] o.a.c.s.boot.SpringBootRoutesCollector   : Loading additional Camel XML rests from: classpath:camel-rest/*.xml
2019-11-21 09:59:46.512  INFO 65135 --- [           main] o.a.c.s.boot.SpringBootCamelContext      : Apache Camel 3.0.0-SNAPSHOT (CamelContext: camel-1) is starting
2019-11-21 09:59:46.512  INFO 65135 --- [           main] o.a.c.management.JmxManagementStrategy   : JMX is enabled
2019-11-21 09:59:46.702  INFO 65135 --- [           main] o.a.c.s.boot.SpringBootCamelContext      : StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2019-11-21 09:59:46.740  INFO 65135 --- [           main] c.s.b.CamelSpringBootApplicationListener : Starting CamelMainRunController to ensure the main thread keeps running
2019-11-21 09:59:46.744  INFO 65135 --- [inRunController] org.apache.camel.main.BaseMainSupport    : Using properties from classpath:application.properties
2019-11-21 09:59:46.912  INFO 65135 --- [           main] o.a.c.s.boot.SpringBootCamelContext      : Route: route1 started and consuming from: activemq://foo
2019-11-21 09:59:46.917  INFO 65135 --- [           main] o.a.c.s.boot.SpringBootCamelContext      : Route: route2 started and consuming from: timer://bar
2019-11-21 09:59:46.921  INFO 65135 --- [           main] o.a.c.s.boot.SpringBootCamelContext      : Total 2 routes, of which 2 are started
2019-11-21 09:59:46.922  INFO 65135 --- [inRunController] o.a.c.i.engine.DefaultShutdownStrategy   : Starting to graceful shutdown 1 routes (timeout 300 seconds)
2019-11-21 09:59:46.924  INFO 65135 --- [           main] o.a.c.s.boot.SpringBootCamelContext      : Apache Camel 3.0.0-SNAPSHOT (CamelContext: camel-1) started in 0.409 seconds
2019-11-21 09:59:46.928  INFO 65135 --- [           main] sample.camel.SampleAmqApplication        : Started SampleAmqApplication in 1.554 seconds (JVM running for 1.854)
2019-11-21 09:59:47.932  INFO 65135 --- [ - ShutdownTask] o.a.c.i.engine.DefaultShutdownStrategy   : Route: route1 shutdown complete, was consuming from: activemq://foo
2019-11-21 09:59:47.932  INFO 65135 --- [inRunController] o.a.c.i.engine.DefaultShutdownStrategy   : Graceful shutdown of 1 routes completed in 1 seconds
2019-11-21 09:59:47.934  INFO 65135 --- [inRunController] o.a.c.s.boot.SpringBootCamelContext      : Route: route1 is stopped, was consuming from: activemq://foo
2019-11-21 09:59:47.936  INFO 65135 --- [inRunController] o.a.c.s.boot.SpringBootCamelContext      : Route: route1 is shutdown and removed, was consuming from: activemq://foo
2019-11-21 09:59:47.937  INFO 65135 --- [inRunController] o.a.c.i.engine.DefaultShutdownStrategy   : Starting to graceful shutdown 1 routes (timeout 300 seconds)
2019-11-21 09:59:47.939  INFO 65135 --- [ - ShutdownTask] o.a.c.i.engine.DefaultShutdownStrategy   : Waiting as there are still 1 inflight and pending exchanges to complete, timeout in 300 seconds. Inflights per route: [route2 = 1]
2019-11-21 09:59:47.941  INFO 65135 --- [ - ShutdownTask] o.a.c.i.engine.DefaultShutdownStrategy   : There are 1 inflight exchanges:
	InflightExchange: [exchangeId=ID-davsclaus-pro-local-1574326786736-0-1, fromRouteId=route2, atRouteId=route2, nodeId=to2, elapsed=12, duration=18]
2019-11-21 09:59:48.944  INFO 65135 --- [ - ShutdownTask] o.a.c.i.engine.DefaultShutdownStrategy   : Route: route2 shutdown complete, was consuming from: timer://bar
2019-11-21 09:59:48.944  INFO 65135 --- [inRunController] o.a.c.i.engine.DefaultShutdownStrategy   : Graceful shutdown of 1 routes completed in 1 seconds
2019-11-21 09:59:48.946  INFO 65135 --- [inRunController] o.a.c.s.boot.SpringBootCamelContext      : Route: route2 is stopped, was consuming from: timer://bar
2019-11-21 09:59:48.947  INFO 65135 --- [inRunController] o.a.c.s.boot.SpringBootCamelContext      : Route: route2 is shutdown and removed, was consuming from: timer://bar
2019-11-21 09:59:48.966  INFO 65135 --- [inRunController] o.a.c.s.boot.SpringBootCamelContext      : Route: route1 started and consuming from: activemq://foo
2019-11-21 09:59:48.976  INFO 65135 --- [msConsumer[foo]] sample                                   : Exchange[ExchangePattern: InOnly, BodyType: String, Body: Hello from Camel]
2019-11-21 09:59:48.978  INFO 65135 --- [inRunController] o.a.c.s.boot.SpringBootCamelContext      : Route: route2 started and consuming from: timer://bar
2019-11-21 09:59:48.978  INFO 65135 --- [inRunController] o.a.camel.main.DefaultRoutesCollector    : Loading additional Camel XML routes from: classpath:camel/*.xml
2019-11-21 09:59:48.979  INFO 65135 --- [inRunController] o.a.camel.main.DefaultRoutesCollector    : Loading additional Camel XML rests from: classpath:camel-rest/*.xml",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-21 09:09:47.0,,,,,,,,,,,"0|z08v2w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing dependency in camel-optaplanner ,CAMEL-14197,13269769,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,tdiesler,tdiesler,tdiesler,21/Nov/19 08:35,21/Nov/19 10:15,13/Jul/23 08:32,21/Nov/19 10:14,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-optaplanner,,,,0,,,,,"camel-optaplanner has a direct dependency on optaplanner-persistence-common but does not define it.

{code}

Caused by: java.lang.ClassNotFoundException: org.optaplanner.persistence.common.api.domain.solution.SolutionFileIO from [Module ""deployment.camel-optaplanner-tests"" from Service Module Loader]
 at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:255)
 at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:410)
 at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:398)
 at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116)

{code}",,tdiesler,,,,,,"tdiesler commented on pull request #3355: [CAMEL-14197] Missing dependency in camel-optaplanner
URL: https://github.com/apache/camel/pull/3355
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Nov/19 08:42;githubbot;600","davsclaus commented on pull request #3355: [CAMEL-14197] Missing dependency in camel-optaplanner
URL: https://github.com/apache/camel/pull/3355
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Nov/19 09:02;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-21 08:35:27.0,,,,,,,,,,,"0|z08v14:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to bind properties with #bean: scheme,CAMEL-14196,13269576,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,20/Nov/19 11:45,21/Nov/19 19:53,13/Jul/23 08:32,20/Nov/19 11:46,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-core,,,,0,,,,,"If {{#bean:nameOfTheBean}} is used as property value, it should be looked up in the registry. Right now this fails as the \{{PropertyBindingSupport}} expects the literal {{#bean:}} without the bean name.",,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-20 11:45:33.0,,,,,,,,,,,"0|z08tu8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid JID is generated for private chat in XMPP component,CAMEL-14194,13269437,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,pramming,pramming,19/Nov/19 23:02,20/Nov/19 04:20,13/Jul/23 08:32,20/Nov/19 04:20,2.24.2,3.0.0.RC3,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-xmpp,,,,0,,,,,"An invalid JID, containing non-LDH characters, is created for the receiver (participant) when a private chat is started. As a result it is not possible to send chat messages directly to an user.

Group chats are not affected by the issue.

See: [https://stackoverflow.com/questions/58168566/problem-sending-messages-from-camel-xmpp-jid-malformed]

 

Exception seen in Openfire (4.4.3): 
{code:java}
java.lang.IllegalArgumentException: The input 'xxxx.xxx.xx@chat:xxxxx@xxxx.xxx.xx:camel' is not a valid JID domain part: Contains non-LDH characters.
{code}
 

The issue can be fixed by removing the thread name when the JID is created: 
{code:java}
diff --git a/components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppPrivateChatProducer.java b/components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppPrivateChatProducer.java
index b1b30a117ed..6eb1b9cb59c 100644
--- a/components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppPrivateChatProducer.java
+++ b/components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppPrivateChatProducer.java
@@ -97,7 +97,7 @@ public class XmppPrivateChatProducer extends DefaultProducer {     private Chat getOrCreateChat(ChatManager chatManager, final String participant, String thread) throws XmppStringprepException {
         // this starts a new chat or retrieves the pre-existing one in a threadsafe manner
-        return chatManager.chatWith(JidCreate.entityBareFrom(participant + ""@"" + thread));
+        return chatManager.chatWith(JidCreate.entityBareFrom(participant));
     }     private synchronized void reconnect() throws InterruptedException, IOException, SmackException, XMPPException {
{code}",,pramming,,,,,,"jpramming commented on pull request #3351: CAMEL-14194: Message thread name removed from JID
URL: https://github.com/apache/camel/pull/3351
 
 
   A proposed fix to the issue where invalid JID's are generated for private chat messages.
   I could not find any reason for the message thread to be appended to the JID and the thread is set in the message, and have removed the thread.
   Tested using Openfire 4.4.3.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/19 00:48;githubbot;600","davsclaus commented on pull request #3351: CAMEL-14194: Message thread name removed from JID
URL: https://github.com/apache/camel/pull/3351
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/19 04:17;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 20 00:52:25 UTC 2019,,,,,,,,,,,"0|z08szc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Nov/19 23:04;pramming;I'll investigate if this simple fix has any drawbacks and submit a PR as soon as possible.;;;","20/Nov/19 00:52;pramming;I could not find any reason for why the message thread should be added to the JID.

The thread reference exists on the message, which IMO should be sufficient.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSComponent tries to use applicationContext before it is initialised,CAMEL-14190,13269162,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,ccronemberger,ccronemberger,18/Nov/19 21:05,25/Nov/19 09:16,13/Jul/23 08:32,21/Nov/19 13:09,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-jms,,,,0,,,,,"The method getConfiguration checks if applicationContext is null. If not it will try to automatically initialise the ConnectionFactory and the DestinationResolver.

The problem is that applicationContext will always be null when used with JmsComponentAutoConfiguration (or the corresponding classes in other similar starters)  because the method setApplicationContext is called only after the method that creates the bean returns and because the auto configuration class also calls CamelPropertiesHelper.setCamelProperties which in turn calls getConfiguration.

 ",,ccronemberger,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-14213,,,CAMEL-14202,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 21 11:55:22 UTC 2019,,,,,,,,,,,"0|z08rag:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Nov/19 08:24;davsclaus;Can you tell more about in which use-case you have this problem - the camel-jms component are very much in use and we havent got any issues reported before like this.;;;","19/Nov/19 09:43;ccronemberger;I'm trying to use camel-jms-starter and have the ConnectionFactory automatically set.
 I first made camel-jms work specifying the connection factory as an URI parameter (jms:queue:my-queue?connectionFactory=#myConnectionFactory). After that my next step was to start using camel-jms-starter so I could get rid of the connectionFactory parameter in all URIs. So I replaced camel-jms by camel-jms-starter in the pom and removed the URI parameter and added the following line in the application.properties:
 
 camel.component.jms.connection-factory=#myConnectionFactory
 
 Then I found that the # notation does not work in this case and finally I found (by checking the code) that I should not even need to set the connection factory because it should be automatically set if a connection factory bean is found in the application context. Then while debugging it I found that by the first time the getConfiguration method is called the attribute applicationContext is null, so the a configuration is created without the existing connection factory set on it.
 
 More information about the problem with # can be found in my last comment in issue CAMEL-12956. There you can find the steps to reproduce it.;;;","19/Nov/19 09:47;davsclaus;Hmm the # lookup ought to work, how have you setup your JMS CF ;;;","19/Nov/19 09:47;davsclaus;Hmm the # lookup ought to work, how have you setup your JMS CF ;;;","19/Nov/19 12:10;ccronemberger;I tried with # in the ActiveMQ example and it worked there, so something is missing in my actual project.

In regard to automatic initialization of connection factory out of an existing one I confirmed that it happens in the camel-example-spring-boot-activemq project with the difference that in the case of ActiveMQ it implements the method createConnectionFactory, so it gives the impression that everything is ok, but in fact it is creating a second connection factory instead of using the existing one. ;;;","19/Nov/19 12:44;ccronemberger;Comparing camel-example-spring-boot-activemq with my code I found a significant difference that can explain why # does not work in my case.

In ActiveMQ example the target in the Binder.bind method is:

private java.lang.String org.apache.camel.component.activemq.springboot.ActiveMQComponentConfiguration.connectionFactory

while in JMS the target is:

private javax.jms.ConnectionFactory org.apache.camel.component.jms.springboot.JmsComponentConfiguration$JmsConfigurationNestedConfiguration.connectionFactory

 

As you can see in the one that works the type is String and in the one that doesn't it is ConnectionFactory.;;;","19/Nov/19 13:27;ccronemberger;In the JMS Component documentation page I found multiple connection factory related options:

camel.component.jms.connection-factory

camel.component.jms.configuration.connection-factory

camel.component.jms.configuration.listener-connection-factory

camel.component.jms.configuration.template-connection-factory

only camel.component.jms.connection-factory works with #.**;;;","19/Nov/19 13:28;ccronemberger;So the workaround for this bug is to set camel.component.jms.connection-factory with the name of the connection factory prefixed with #.;;;","19/Nov/19 20:23;ccronemberger;I have debugged some tests in the camel-jms module and found that the order of the calls to JmsComponent.getConfiguration and JmsComponent.setApplicationContext is actually the opposite of what happens when running with Spring Boot.

Looks like the major challenge to fix this issue will be to rework the tests and not the actual fix.

Or maybe the code should be prepared to work no matter the order of the calls to those methods.;;;","21/Nov/19 09:07;davsclaus;The example camel-example-spring-boot-activemq is using spring boot activemq starter and not Camel's starter. So its SB that setup ActiveMQ broker, and Camel just uses it, where it in JmsComponent does the auto-lookup of the CF. (so the camel-jms-starter is not in use at all)



;;;","21/Nov/19 09:10;davsclaus;I have fixed the getConfiguration issue so those are lookup of CF, resolver etc are done in doStart which is more correct in Camel;;;","21/Nov/19 11:55;davsclaus;Yeah the spring-boot docs is wrong, the nested configuration.xxx are duplicated which they shouldn't.

So this is correct
camel.component.jms.connection-factory=#myConnectionFactory

And it works if I modify the spring-boot example on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-core-starter - Spring Boot auto-configuration is not generated for some models,CAMEL-14186,13268992,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,18/Nov/19 06:05,18/Nov/19 09:41,13/Jul/23 08:32,18/Nov/19 09:41,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-core,,,,0,,,,,Due the camel-core to camel-core-engine splitup then some auto generated source was not updated.,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-18 06:05:58.0,,,,,,,,,,,"0|z08q8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dead link in SEDA Component documentation,CAMEL-14183,13268365,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,lukas.eder,lukas.eder,14/Nov/19 16:21,15/Nov/19 10:44,13/Jul/23 08:32,15/Nov/19 10:44,,,,,,,,,,,,3.0.0,,,,,,documentation,,,,0,,,,,"The documentation about the SEDA component has a dead link right at the beginning on ""SEDA"":
{quote}The SEDA component provides asynchronous [SEDA|http://www.eecs.harvard.edu/~mdw/proj/seda/] behavior
{quote}
It points here: [http://www.eecs.harvard.edu/~mdw/proj/seda/]

See: [https://camel.apache.org/components/latest/seda-component.html]",,davsclaus,lukas.eder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 15 08:57:55 UTC 2019,,,,,,,,,,,"0|z08mdk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"15/Nov/19 05:55;davsclaus;Thanks for reporiting, there is a ""edit this page"" button, if you want to help fix this.;;;","15/Nov/19 08:57;lukas.eder;Sorry, don't know what to link to, instead, and I don't have an opinion on what should be the content of the page.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AWS S3 component should respect the maxMessagesPerPoll,CAMEL-14174,13268004,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,orpiske,orpiske,orpiske,13/Nov/19 11:53,30/Sep/21 10:34,13/Jul/23 08:32,13/Nov/19 21:03,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-aws2,,,,0,,,,,"When checking for the existence of the bucket the AWS S3 endpoint does not respect the values set with maxMessagesPerPoll [1]. Although it's not a severe problem, it may lead to a small degradation in the route startup when dealing with very larger buckets or simply an undesired behavior for users setting the maxMessagesPerPoll option. 

 

I'll send a PR for this.

 

1. [https://github.com/apache/camel/blob/camel-3.0.0-RC3/components/camel-aws-s3/src/main/java/org/apache/camel/component/aws/s3/S3Endpoint.java#L102]",,orpiske,,,,,,"orpiske commented on pull request #3333: Proposed fix for CAMEL-14174
URL: https://github.com/apache/camel/pull/3333
 
 
   Prevent listing more objects than the value defined in maxMessagesPerPoll during the route initialization
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 11:55;githubbot;600","davsclaus commented on pull request #3333: Proposed fix for CAMEL-14174
URL: https://github.com/apache/camel/pull/3333
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 21:01;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-13 11:53:10.0,,,,,,,,,,,"0|z08k5c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-paho - Durable subscriptions broken on client restart,CAMEL-14173,13267995,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,rolandbeisel,rolandbeisel,13/Nov/19 11:22,20/Nov/19 20:29,13/Jul/23 08:32,20/Nov/19 20:29,3.0.0.RC3,,,,,,,,,,,2.25.0,3.0.0,,,,,camel-paho,,,,0,,,,,"If a client connects to MQTT broker with cleanSession=false, the broker creates a durable subscription for the client. If the application/camel-paho is shutdown (e.g. application deployment) the client is being unsubscribed from the topic (doStop() method in PahoConsumer.java). All messages that are sent in the meantime (while the client is offline) are lost for the client (irrespective of QOS level) because of unsubscription.

Expected behaviour: Camel / Paho Route Shutdown should not unsubscribe durable subscribers (QOS > 1) from topics.",,avi5kdon@gmail.com,davsclaus,rolandbeisel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 13 21:06:26 UTC 2019,,,,,,,,,,,"0|z08k3c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Nov/19 21:06;davsclaus;Ah okay, you are welcome to work on a PR to help fix this. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
setting loggingSizeLimit to -1 when using CXF components does not disable the size limit as the docs say,CAMEL-14172,13267763,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Trivial,Fixed,,dschlenkC1,dschlenkC1,12/Nov/19 16:11,13/Nov/19 04:19,13/Jul/23 08:32,13/Nov/19 04:19,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-cxf,,,,0,,,,,"The docs for the CXF component claim that setting the value of option *loggingSizeLimit* to -1 will disable the size limit. This is not the case - when using -1, the default size limit is still in place. CAMEL-9102 theoretically fixes this issue, but seems to have been closed without merging the PR. Happy to provide a new PR that does similar against current, but it would be nice if either the docs were changed or the bug gets fixed to do what the docs say.",,acosentino,davsclaus,dschlenkC1,,,,"dschlenk commented on pull request #3332: CAMEL-14172: when loggingSizeLimit is -1 it should do what the docs say it does
URL: https://github.com/apache/camel/pull/3332
 
 
   I was able to manually verify this fix works against 2.25.0-SNAPSHOT but couldn't figure out how to write a unit test. Happy to do that if given some hints on how to (successfully) get at log output in a unit test or access the underlying CXF LoggingFeature from a CxfEndpoint. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/19 23:37;githubbot;600","davsclaus commented on pull request #3332: CAMEL-14172: when loggingSizeLimit is -1 it should do what the docs say it does
URL: https://github.com/apache/camel/pull/3332
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 03:49;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 13 04:19:14 UTC 2019,,,,,,,Patch Available,,,,"0|z08ins:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Nov/19 17:53;acosentino;You're welcome to work on the fix. I don't remember why it wasn't merged.

This is the situation on master

[https://github.com/apache/camel/blob/master/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfEndpoint.java#L322];;;","12/Nov/19 23:38;dschlenkC1;[~acosentino] thanks for responding! I've tested this change against the v2 branch IRL and it does fix the issue. I tried my hand at figuring out how to write a unit test, but I couldn't figure out how to either obtain the underlying LoggingFeature from the CxfEndpoint to check for its value or successfully intercept the output to brute force testing that a message longer than the default worked. Happy to add one if someone can point me in the right direction, though. [PR #3332|https://github.com/apache/camel/pull/3332].;;;","13/Nov/19 04:19;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Netty is reporting a resource leak,CAMEL-14166,13267482,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,mgrand,mgrand,11/Nov/19 13:21,11/Nov/19 13:25,13/Jul/23 08:32,11/Nov/19 13:25,3.0.0.RC2,,,,,,,,,,,3.0.0.RC3,,,,,,camel-netty-http,,,,0,,,,,"I am seeing this stack trace:

{{[Camel (camel-1) thread #7 - NettyEventExecutorGroup|#7 - NettyEventExecutorGroup] ERROR io.netty.util.ResourceLeakDetector - LEAK: ByteBuf.release() was not called before it's garbage-collected. See [https://netty.io/wiki/reference-counted-objects.html] for more information.[Camel (camel-1) thread #7 - NettyEventExecutorGroup|#7 - NettyEventExecutorGroup] ERROR io.netty.util.ResourceLeakDetector - LEAK: ByteBuf.release() was not called before it's garbage-collected. See [https://netty.io/wiki/reference-counted-objects.html] for more information.Recent access records: Created at: io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:349) io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:187) io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:178) io.netty.buffer.CompositeByteBuf.allocBuffer(CompositeByteBuf.java:1835) io.netty.buffer.CompositeByteBuf.copy(CompositeByteBuf.java:1487) io.netty.buffer.AbstractByteBuf.copy(AbstractByteBuf.java:1209) org.apache.camel.component.netty.http.NettyChannelBufferStreamCache.copy(NettyChannelBufferStreamCache.java:93) org.apache.camel.processor.MulticastProcessor.createProcessorExchangePairs(MulticastProcessor.java:620) org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:221) org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:228) org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) org.apache.camel.processor.Pipeline.lambda$null$2(Pipeline.java:104) org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59) org.apache.camel.processor.Pipeline.process(Pipeline.java:87) org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:228) org.apache.camel.component.netty.handlers.ServerChannelHandler.processAsynchronously(ServerChannelHandler.java:141) org.apache.camel.component.netty.handlers.ServerChannelHandler.channelRead0(ServerChannelHandler.java:112) org.apache.camel.component.netty.http.handlers.HttpServerChannelHandler.channelRead0(HttpServerChannelHandler.java:202) io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) org.apache.camel.component.netty.http.handlers.HttpServerMultiplexChannelHandler.channelRead0(HttpServerMultiplexChannelHandler.java:156) io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.access$600(AbstractChannelHandlerContext.java:56) io.netty.channel.AbstractChannelHandlerContext$7.run(AbstractChannelHandlerContext.java:365) io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.base/java.lang.Thread.run(Thread.java:834)}}

 
 Here is the rest configuration:

{{restConfiguration()}}
{{ .component(""netty-http"")}}
{{ .host(""0.0.0.0"").port(config.getUiaPortNumber())}}
{{ .bindingMode(RestBindingMode.off)}}
{{ .apiContextPath(""api-doc"")}}
{{ .apiProperty(""api.title"", ""Unified Item API"")}}
{{ .apiProperty(""api.version"", ""0.1.0"")}}
{{ .apiProperty(""api.description"",}}
{{ ""This API allows callers to get information from multiple sources by sending just one request.""}}
{{ + "" A single response is returned that contains all of the requested information in a single JSON object.\n\n""}}
{{ + ""Currently supported sources include\n""}}
{{ + ""* "" + PRODUCT_API_HD_CATALOG_HOST + ""\n""}}
{{ + ""* "" + PRICING_API_HOST + ""\n""}}
{{ + ""* "" + ASSORTMENT_COMMONS_HOST)}}
{{ .apiProperty(""api.contact.name"", ""Mark Grand"")}}
{{ .apiProperty(""api.contact.email"", ""mark_grand@homedepot.com"")}}
{{ .apiProperty(""api.specification.contentType.json"", APPLICATION_JSON)}}
{{ .scheme(""http"")}}

Here is rest endpoint configuration:

{{rest().path(""/uia"").bindingMode(RestBindingMode.off)}}
{{ .get(""/admin/health"").produces(""text/plain"")}}
{{ .description(""This returns a static \""Hello world!\\n\"" response. It is intended to be used as a health check."")}}
{{ .to(""bean:helloBean"")}}
{{ .responseMessage().code(200).message(""Hello world!"").endResponseMessage()}}
{{;}}{{}}

 

rest().path(""/uia/api/v1"").bindingMode(RestBindingMode.off).produces(APPLICATION_JSON)
 .post(""/authorization"").consumes(""text/plain"").type(String.class).produces(""text/plain"")
 .description(""This should be a client's first request to this API. ""
 + ""The request includes the client's credentials for accessing the aggregated services. ""
 + ""The response is a JWT that contains the client's credentials."")
 .param().name(JwtConstants.PRICING_TOKEN_TAG)
 .type(RestParamType.header)
 .dataType(""string"")
 .required(false)
 .description(""The OAuth2 token to be used for accessing pricing information. This will be included in the JWT returned by this operation."")
 .endParam()
 .param().name(JwtConstants.SERVICE_ACCT_TAG)
 .type(RestParamType.header)
 .dataType(""string"")
 .required(true)
 .description(""This is a service account that identifies the client."")
 .endParam()
 .to(DIRECT_AUTHORIZATION)
 .responseMessage().code(200)
 .example(""credentialJwt"", ""eyJhbGciOiJub25lIn0.eyJpc3MiOiJ1bmlmaWVkLWl0ZW0tYXBpIiwiWC1wcmljaW5nLXRva2VuIjoiZXlKcmFXUWlPaUl4SWl3aWRIbHdJam9pU2xkVUlpd2lZV3huSWpvaVVsTXlOVFlpZlEuZXlKaFkyTmxjM05mZEc5clpXNGlPaUpVYm05cE1XeEpaVGxIU2xocGJuSnlhMkV4ZHpkelJrdGxUWFkzSWl3aVlYVmtJam9pYldsamNtOW5ZWFJsZDJGNUlpd2lZWEJwWDNCeWIyUjFZM1JmYkdsemRDSTZXeUpTWlhSaGFXd2dSRzl0WVdsdUlGTmxjblpwWTJVZ0xTQk9iMjRnVUhKdlpDSmRMQ0poY0hCc2FXTmhkR2x2Ymw5dVlXMWxJam9pVWtSVElDMGdSVkFnTFNCT2IyNHRVSEp2WkNJc0ltNWlaaUk2TVRVM01ESXdNRFExTXl3aVpHVjJaV3h2Y0dWeVgyVnRZV2xzSWpvaVpXNTBaWEp3Y21selpYQnlhV05wYm1kQWFHOXRaV1JsY0c5MExtTnZiU0lzSW1semN5STZJbWgwZEhBNlhDOWNMMmh2YldWa1pYQnZkQzF3Y21samFXNW5MV1JsZGk1aGNHbG5aV1V1Ym1WMFhDOWxaR2RsYldsamNtOHRZWFYwYUZ3dmRHOXJaVzRpTENKbGVIQWlPakUxTnpBeU1ESXlOVE1zSW1saGRDSTZNVFUzTURJd01EUTFNeXdpWTJ4cFpXNTBYMmxrSWpvaWRHNDBlalJXTTNKV1JWVktRbHBvUm1kUFVVTk1hVWRRZUdKbWQwazBURzRpTENKcWRHa2lPaUkwWm1aak9EVmxOUzFoTnpFNExUUmlaamt0T0dFek5pMHdZek0xWlRBNE9HRmlNbVlpZlEuR3IzSEdNRl9sUk44eF9qM01YbXRMMHRJWGxCeWZxUEpLVWFuX3hYSF80aHB6Q0Q4eDJJSnQyV1gtR3N3Zm1ZT0pWUm8zMDFyWmZBUDBRdTVkUS12TzM0VDVLcDhmX2txZmpkeFRCM1ZtbUdtQ3p2SlN6eEVDbmVqZU56SG5NTk9BUTAzTVRRX3FnYXB0d0taWjNDTjVwLVU1YXdYN2Rya2NiWldsV0lpS0dmTmNVaFhFZjc5bHpJMnVXbXV2TjgxN3lIMDdXUU16cEJteGh5TFpMdUQ3ZW5CRktvMmwwcnNJYXlORnJqbU5ycl9GTWxCMlVMRkRxcUd4UGpmcDJ2N184TlJ6ZS1hcjIzZUlPelpWdGo3YkRBOW5uQzNoWS1jNk8zckpXRXR6ZzVzT3VqUExNZTFYLS1QNXg1NzhmajZ2R3U0WnFGXzFaNDgwVTZWVFpld1B3Iiwic3ZjQWNjdCI6InBsYWNlaG9sZGVyIGZvciBhIHNlcnZpY2UgYWNjb3VudCJ9."")
 .message(""An encoded JWT whose payload contains the service account and credentials provided by the client. ""
 + ""This JWT will be needed to authorize requests to other endpoints"")
 .responseModel(String.class)
 .endResponseMessage()
 .responseMessage().code(400).message(""Bad Request"").endResponseMessage()

 .get(""/raw?skus=\{skus}&stores=\{stores}"")
 .description(""Queries `"" + PRODUCT_API_HD_CATALOG_HOST + ""`, `"" + PRICING_API_HOST + ""` and `""
 + ASSORTMENT_COMMONS_HOST + ""` for data about combinations of the given stores and SKUs. ""
 + ""The data from the individual services is returned as-is, without being combined."")
 .param().name(JwtConstants.SKUS_ITAG).description(""A comma-separated list of SKUS"").required(true).type(RestParamType.header).endParam()
 .param().name(JwtConstants.STORES_ITAG).description(""A comma-separated list of stores"").required(true).type(RestParamType.header).endParam()
 .clientRequestValidation(true)
 .responseMessage().code(200)
 .message(""Returns a JSON object whose fields have the values returned by the queried services and ""
 + ""also the status codes returned by the queried services."")
 .example(""success"", RAW_RESULT_EXAMPLE)
 .endResponseMessage()
 .responseMessage().code(400).message(""Bad Request"").endResponseMessage()
 .to(DIRECT_RAW)

 .get(""/skus-stores?skus=\{skus}&stores=\{stores}"")
 .description(""Queries `"" + PRODUCT_API_HD_CATALOG_HOST + ""`, `"" + PRICING_API_HOST + ""` and `""
 + ASSORTMENT_COMMONS_HOST + ""` for data about combinations of the given stores and SKUs. ""
 + ""Data from the individual services is reorganized into JSON objects that each refer to a single store-SKU combination."")
 .param().name(JwtConstants.SKUS_ITAG).description(""A comma-separated list of SKUS"").required(true).type(RestParamType.header).endParam()
 .param().name(JwtConstants.STORES_ITAG).description(""A comma-separated list of stores"").required(true).type(RestParamType.header).endParam()
 .clientRequestValidation(true)
 .responseMessage().code(200)
 .message(""Returns a JSON object whose fields describe the request and result. ""
 + ""One field is an array of JSON objects that each describe a different store-sku combination"")
 .example(""success"", SKU_STORE_RESULT_EXAMPLE)
 .endResponseMessage()
 .responseMessage().code(400).message(""Bad Request"").endResponseMessage()
 .to(DIRECT_SKU_STORES)
;","Java 1.8, MacOS Mojave 10.14.6",acosentino,mgrand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 11 13:25:44 UTC 2019,,,,,,,,,,,"0|z08gxc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Nov/19 13:25;acosentino;Fixed on RC3.

 

[https://github.com/apache/camel/commit/ae2719732eb4867ecdb182e969e02a301bddc9f3#diff-e6e9f7220479f25103b607fae7cc9b28];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-stream - When using http url then data is not sent over the wire,CAMEL-14162,13267123,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,08/Nov/19 15:04,08/Nov/19 15:09,13/Jul/23 08:32,08/Nov/19 15:09,,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-stream,,,,0,,,,,When using JDKs URLConnection it wont send data until you start to read the input stream. So we need to add logic to do this so we force a flush and send data.,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-08 15:04:09.0,,,,,,,,,,,"0|z08epk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JmsBinding assumes endpoint can't be null, but it can",CAMEL-14156,13267060,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,08/Nov/19 09:49,08/Nov/19 21:47,13/Jul/23 08:32,08/Nov/19 21:47,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-activemq,camel-jms,,,0,,,,,"CAMEL-13750 introduces a change checking the {{endpoint}} in {{JmsBinding}}:

{code}
if (headerName.equals(""JMSCorrelationID"") && !endpoint.isUseMessageIDAsCorrelationID()) {
{code}

As {{endpoint}} can be null (for instance if you just do {{new JmsBinding()}}), this change is wrong as it can throw {{NullPointerException}}.

I'm fixing.",,acosentino,jbonofre,,,,,"jbonofre commented on pull request #3328: [CAMEL-14156] Avoid NPE with endpoint is null in JmsBinding
URL: https://github.com/apache/camel/pull/3328
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Nov/19 15:58;githubbot;600","davsclaus commented on pull request #3328: [CAMEL-14156] Avoid NPE with endpoint is null in JmsBinding
URL: https://github.com/apache/camel/pull/3328
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Nov/19 21:14;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,AMQ-7333,,,,,,,,,,CAMEL-13750,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 08 13:57:09 UTC 2019,,,,,,,,,,,"0|z08ebk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Nov/19 09:53;acosentino;We won't release 2.23.x. there is no need to fix there;;;","08/Nov/19 13:53;jbonofre;It has been fixed on {{master}}:

{code}
if (headerName.equals(""JMSCorrelationID"") && (endpoint == null || !endpoint.isUseMessageIDAsCorrelationID()))
{code};;;","08/Nov/19 13:55;jbonofre;I'm porting the fix on other branches.;;;","08/Nov/19 13:57;acosentino;I'm removing 2.23.5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
xpath throws NPE if body is null when saxon is used as JAXP implementation,CAMEL-14155,13267048,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ldemasi,ldemasi,ldemasi,08/Nov/19 08:52,13/Nov/19 21:02,13/Jul/23 08:32,13/Nov/19 21:02,,,,,,,,,,,,3.0.0,,,,,,came-core,,,,0,,,,,"despite [XPath API spec|https://docs.oracle.com/javase/8/docs/api/javax/xml/xpath/XPathExpression.html#evaluate-java.lang.Object-javax.xml.namespace.QName-] states:

 
{quote}If a null value is provided for item, an empty document will be used for the context
{quote}
saxon, starting from 9.6, they decided to ignore it and throw NPE if the node is null, from [saxon javadoc|https://www.saxonica.com/html/documentation9.8/javadoc/net/sf/saxon/xpath/XPathExpressionImpl.html#evaluate-java.lang.Object-javax.xml.namespace.QName-]:

 
{quote}Contrary to the interface specification, Saxon does not supply an empty document when the value is null. This is because XPath 2.0 allows the context item to be ""absent"" (null). So Saxon executes the XPath expression with the context item undefined.
{quote}
 

 So in case of xpath expression is executed against a null body or header, saxon throws an NPE

 

 ",,davsclaus,ldemasi,ramu11,,,,"luigidemasi commented on pull request #3335: CAMEL-14155: xpath throws NPE if body is null when saxon is used as J…
URL: https://github.com/apache/camel/pull/3335
 
 
   …AXP implementation
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 15:58;githubbot;600","davsclaus commented on pull request #3335: CAMEL-14155: xpath throws NPE if body is null when saxon is used as J…
URL: https://github.com/apache/camel/pull/3335
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 21:02;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 12 01:30:54 UTC 2019,,,,,,,,,,,"0|z08e8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Nov/19 10:20;davsclaus;I think Lugi works on this;;;","12/Nov/19 01:30;ramu11;[~ldemasi] fell free to own this Jira;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
exception during first resolve of temporary jms destination causes infinitive wait,CAMEL-14148,13266589,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,,Bas Claessen,Bas Claessen,06/Nov/19 13:35,24/Oct/22 13:57,13/Jul/23 08:32,07/Nov/19 17:42,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-jms,,,,0,,,,,"An exception during the first attempt to resolve a temporary destination will cause an infinitive wait for next resolve attempts after the exception is cleared.
A likely scenario for this behaviour to occur is when no connection to a jms server can be established during startup.

This bug is caused by not setting the refreshWanted to false when no previous destination exists in the org.apache.camel.component.jms.reply.TemporaryQueueReplyManager$TemporaryReplyQueueDestinationResolver class.
{code:java}
public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain) throws JMSException {
    // use a temporary queue to gather the reply message
    synchronized (refreshWanted) {
        if (queue == null || refreshWanted.compareAndSet(true, false)) {
            queue = session.createTemporaryQueue();
            setReplyTo(queue);
            if (log.isDebugEnabled()) {
                log.debug(""Refreshed Temporary ReplyTo Queue. New queue: {}"", queue.getQueueName());
            }
            refreshWanted.notifyAll();
        }
    }
    return queue;
}
{code}
When queue == null the refreshWanted.compareAndSet(true, false) is not executed.",,Bas Claessen,,,,,,"basclaessen commented on pull request #3322: CAMEL-14148: exception during first resolve of temporary jms destination causes infinitive wait
URL: https://github.com/apache/camel/pull/3322
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 13:42;githubbot;600","basclaessen commented on pull request #3322: CAMEL-14148: exception during first resolve of temporary jms destination causes infinitive wait
URL: https://github.com/apache/camel/pull/3322
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Nov/19 06:58;githubbot;600","basclaessen commented on pull request #3324: CAMEL-14148 fix
URL: https://github.com/apache/camel/pull/3324
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Nov/19 07:08;githubbot;600","oscerd commented on pull request #3324: CAMEL-14148 fix
URL: https://github.com/apache/camel/pull/3324
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Nov/19 12:15;githubbot;600","basclaessen commented on pull request #3326: CAMEL-14148 fix
URL: https://github.com/apache/camel/pull/3326
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Nov/19 13:40;githubbot;600","davsclaus commented on pull request #3326: CAMEL-14148 fix (master)
URL: https://github.com/apache/camel/pull/3326
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Nov/19 14:24;githubbot;600","basclaessen commented on pull request #3327: CAMEL-14148 fix (camel-2.x)
URL: https://github.com/apache/camel/pull/3327
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Nov/19 15:05;githubbot;600","davsclaus commented on pull request #3327: CAMEL-14148 fix (camel-2.x)
URL: https://github.com/apache/camel/pull/3327
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Nov/19 17:40;githubbot;600",,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 07 15:08:10 UTC 2019,,,,,,,Patch Available,,,,"0|z08bew:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Nov/19 13:43;Bas Claessen;Added pull request with a fix and a test case.;;;","07/Nov/19 15:08;Bas Claessen;Added PRs for master and camel-2.x;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-debezium-mongodb not populating correct values in the message body due to different format,CAMEL-14145,13266538,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,omarsmak,omarsmak,omarsmak,06/Nov/19 10:00,06/Nov/19 14:02,13/Jul/23 08:32,06/Nov/19 14:01,,,,,,,,,,,,3.0.0,,,,,,camel-debezium,,,,0,,,,,"Since Debezium mongodb contains a slight structure format omitted from Debezium from other databases, for example `after` key is being replaced with `patch` only for the mongodb connector which is a results populate the body with `null` since the debezium component relies on `after` key to populate the message body",,omarsmak,,,,,,"omarsmak commented on pull request #3320: CAMEL-14145: Fix camel-debezium-mongodb not populating correct values…
URL: https://github.com/apache/camel/pull/3320
 
 
   Due to the nature of MongoDB oplog, the Debezium Mongodb connector differs a little with the message structure, for example `after` only available with the initial snapshot meanwhile in updates and inserts, there is another field populated called `patch`. This PR shall address this issue  
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 11:36;githubbot;600","oscerd commented on pull request #3320: CAMEL-14145: Fix camel-debezium-mongodb not populating correct values…
URL: https://github.com/apache/camel/pull/3320
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 14:02;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-06 10:00:54.0,,,,,,,,,,,"0|z08b3k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slack Component: Consumer does not retrieve user details on message event,CAMEL-14143,13266417,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,akrohg,akrohg,05/Nov/19 20:10,06/Nov/19 10:31,13/Jul/23 08:32,06/Nov/19 10:31,,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-slack,,,,0,,,,,"The JSON object that Slack delivers for message events no longer sends a *username* attribute; it issues the user's *GUID* in the *user* field. For example:

 
{code:java}
{
        ""client_msg_id"":""6d1d3108-cf2a-4475-941c-0dd70200e88a"",
        ""type"":""message"",
        ""text"":""hello"",
        ""user"":""UMQLDBWQY"",
        ""ts"":""1572977454.000200"",
        ""team"":""T0383HKJ0""
}
{code}
The SlackEndpoint class still looks for the *username* attribute when creating the exchange, so the SlackMessage object comes out pretty bare.
{code:java}
    public Exchange createExchange(ExchangePattern pattern, JsonObject object) {
        Exchange exchange = super.createExchange(pattern);
        SlackMessage slackMessage = new SlackMessage();
        String text = object.getString(""text"");
        String username = object.getString(""username"");
        slackMessage.setText(text);
        slackMessage.setUsername(username);
        if (ObjectHelper.isNotEmpty(object.get(""icons""))) {
            JsonObject icons = object.getMap(""icons"");
            if (ObjectHelper.isNotEmpty(icons.get(""emoji""))) {
                slackMessage.setIconEmoji(icons.getString(""emoji""));
            }
        }
        Message message = exchange.getIn();
        message.setBody(slackMessage);
        return exchange;
    }
{code}
I've attached a .patch that retrieves the user's *GUID* instead, so it's at least available if people using this component want to look up the username with the [users.info API|https://api.slack.com/methods/users.info/test].

 

 ",,akrohg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/19 20:09;akrohg;slack.patch;https://issues.apache.org/jira/secure/attachment/12984992/slack.patch",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-05 20:10:10.0,,,,,,,Patch Available,,,,"0|z08aco:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-archetype-dataformat archetype uses wrong directory for ServiceSupport,CAMEL-14142,13266340,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,odehghan,odehghan,05/Nov/19 13:24,06/Nov/19 14:24,13/Jul/23 08:32,06/Nov/19 14:24,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-archetypes,,,,0,camel-archetype-dataformat,converter,,,"I tried to create a project with camel-archetype-dataformat archetype with Maven archetype generator like this:

F:\Spring-work-space\New Folder>mvn archetype:generate -B -e -DarchetypeGroupId=
 org.apache.camel.archetypes -DarchetypeArtifactId=camel-archetype-dataformat -DarchetypeVersion=3.0.0-RC3 -DgroupId=camelinaction -DartifactId=reverse-dataformat2 -Dname=Reverse -Dscheme=reverse

The project gets built.

But when I opened it , there is a class named ReverseDataFormat at camelinaction package which extends to ServiceSupport.

{color:#000080}public class {color}ReverseDataFormat {color:#000080}extends {color}ServiceSupport {color:#000080}implements {color}DataFormat, DataFormatName

The problem here is that by default it uses the org.apache.camel.support.ServiceSupport;

in order to import this class, but it is wrong and IDEA throw an exception which is right! The ServiceSupport reside in this package: org.apache.camel.support.service.ServiceSupport;

 

 ",,acosentino,davsclaus,odehghan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 06 14:24:39 UTC 2019,,,,,,,,,,,"0|z089vk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Nov/19 08:14;davsclaus;Thanks you are welcome to provide a PR with a fix;;;","06/Nov/19 08:15;davsclaus;And if you could take a look at the other archetypes, they may have similar issue;;;","06/Nov/19 09:39;odehghan;I did something here at  [https://github.com/apache/camel/pull/3319] Hopefully It's right! :);;;","06/Nov/19 13:18;acosentino;This is not merged yet, when it will be merged we can mark this as resolved.;;;","06/Nov/19 14:24;acosentino;This is merged now. No need to reopen.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Camel Undertow does not provide an option to use the producer as the ""Host"" header when bridging two http endpoints",CAMEL-14139,13266272,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,avi5kdon@gmail.com,avi5kdon@gmail.com,05/Nov/19 07:21,14/Nov/19 11:50,13/Jul/23 08:32,08/Nov/19 14:24,3.0.0.RC3,,,,,,,,,,,2.25.0,3.0.0,,,,,camel-undertow,,,,0,,,,,"Camel undertow always propagates the same host header from source to target. There is no option to disable this.
{code:xml}
<route>
            <from uri=""undertow:http://localhost:8189""/>
            <log message=""Source ${in.headers.Host}"" />
            <to uri=""undertow:http://localhost:8289""/>
        </route>
        <route>
            <from uri=""undertow:http://localhost:8289""/>
            <log message=""Target ${in.headers.Host}"" />
        </route>
{code}
 
 Result:
{code:xml}
2019-11-05 12:43:54.738  INFO 30967 --- [  XNIO-2 task-1] route1 :  Source localhost:8189
2019-11-05 12:43:54.789  INFO 30967 --- [  XNIO-3 task-1] route2 :  Target localhost:8189
{code}
Expected:
{code:xml}
2019-11-05 12:43:54.738  INFO 30967 --- [  XNIO-2 task-1] route1 :  Source localhost:8189
2019-11-05 12:43:54.789  INFO 30967 --- [  XNIO-3 task-1] route2 :  Target localhost:8289
{code}
An option to disable the preservation of the original host is present in camel-http ",,avi5kdon@gmail.com,,,,,,"avi5kdonrh commented on pull request #3316: CAMEL-14139 Camel Undertow does not provide an option to use the prod…
URL: https://github.com/apache/camel/pull/3316
 
 
   …ucer as the Host header when bridging two http endpoints
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Nov/19 08:23;githubbot;600","oscerd commented on pull request #3316: CAMEL-14139 Camel Undertow does not provide an option to use the prod…
URL: https://github.com/apache/camel/pull/3316
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 09:34;githubbot;600","avi5kdonrh commented on pull request #3338: CAMEL-14139 Camel Undertow does not provide an option to use the prod…
URL: https://github.com/apache/camel/pull/3338
 
 
   …ucer as the Host header when bridging two http endpoints
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Nov/19 10:39;githubbot;600","davsclaus commented on pull request #3338: CAMEL-14139 Camel Undertow does not provide an option to use the prod…
URL: https://github.com/apache/camel/pull/3338
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Nov/19 11:50;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-05 07:21:09.0,,,,,,,,,,,"0|z089gg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread leak in camel-jetty component if maxThreads or minThreads property is set,CAMEL-14137,13266192,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,ldemasi,ldemasi,04/Nov/19 21:31,06/Nov/19 08:25,13/Jul/23 08:32,06/Nov/19 08:25,,,,,,,,,,,,2.25.0,3.0.0,,,,,camel-jetty,,,,0,,,,,"If a jetty component is configured as a bean with default thread pool settings, the thread pool get closed along with context.

If maxThreads,minThreads or both component properties are set, a new [QueuedThreadPool|https://www.eclipse.org/jetty/javadoc/current/org/eclipse/jetty/util/thread/QueuedThreadPool.html] is instantiated in JettyHttpComponent class  that  not get closed when the context is stopping.

 
  Attached a reproducer.

 

[^camel-jetty-Tleak-reproducer.zip]",,ldemasi,,,,,,"luigidemasi commented on pull request #3315:  CAMEL-14137 Thread leak in camel-jetty component if maxThreads or mi…
URL: https://github.com/apache/camel/pull/3315
 
 
   …nThreads property is set
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Nov/19 22:57;githubbot;600","oscerd commented on pull request #3315:  CAMEL-14137 Thread leak in camel-jetty component if maxThreads or mi…
URL: https://github.com/apache/camel/pull/3315
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Nov/19 16:35;githubbot;600","luigidemasi commented on pull request #3318: CAMEL-14137 Thread leak in camel-jetty component if maxThreads or min…
URL: https://github.com/apache/camel/pull/3318
 
 
   …Threads property is set
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Nov/19 18:56;githubbot;600","valdar commented on pull request #3318: CAMEL-14137 Thread leak in camel-jetty component if maxThreads or min…
URL: https://github.com/apache/camel/pull/3318
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 08:20;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,"04/Nov/19 21:33;ldemasi;camel-jetty-Tleak-reproducer.zip;https://issues.apache.org/jira/secure/attachment/12984834/camel-jetty-Tleak-reproducer.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-11-04 21:31:59.0,,,,,,,,,,,"0|z088yo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException when using recipientList with Strings,CAMEL-14136,13266132,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,Zohhak,Zohhak,04/Nov/19 14:55,06/Nov/19 07:24,13/Jul/23 08:32,06/Nov/19 07:24,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-core,,,,0,,,,,"I already asked this on the mailing list:

I encountered a ConcurrentModificationException in Camel: 
{code:java}
java.util.ConcurrentModificationException: null 
                at java.base/java.util.HashMap.computeIfAbsent(HashMap.java:1134) 
                at org.apache.camel.util.Scanner.cachePattern(Scanner.java:305) 
                at org.apache.camel.util.Scanner.<init>(Scanner.java:82) 
                at org.apache.camel.support.ObjectHelper.lambda$createIterable$3(ObjectHelper.java:593) 
                at org.apache.camel.support.ObjectHelper$$Lambda$1118.0000000000000000.iterator(Unknown Source) 
                at org.apache.camel.support.ObjectHelper.createIterator(ObjectHelper.java:435) 
                at org.apache.camel.support.ObjectHelper.createIterator(ObjectHelper.java:412) 
                at org.apache.camel.processor.RecipientList.sendToRecipientList(RecipientList.java:137) 
                at org.apache.camel.processor.RecipientList.process(RecipientList.java:125) 
                at org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) 
                at org.apache.camel.processor.Pipeline.lambda$null$2(Pipeline.java:104) 
                at org.apache.camel.processor.Pipeline$$Lambda$1096.0000000000000000.run(Unknown Source) 
                at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) 
                at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) 
                at org.apache.camel.impl.engine.DefaultReactiveExecutor.schedule(DefaultReactiveExecutor.java:67) 
                at org.apache.camel.spi.ReactiveExecutor.schedule(ReactiveExecutor.java:32) 
                at org.apache.camel.processor.MulticastProcessor.lambda$schedule$1(MulticastProcessor.java:249) 
                at org.apache.camel.processor.MulticastProcessor$$Lambda$1099.0000000000000000.run(Unknown Source) 
                at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) 
                at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 
                at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 
                at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 
                at java.base/java.lang.Thread.run(Thread.java:831) {code}
My simplified route is as follows. The input is a list of objects, these are split, and based on the object the recipientList is different. When there are two recipients in the String provided by „getRecipients"", the named exception is thrown. Sadly not consistently. 
{code:java}
  from(""seda:input"") 
      .split(method(TestClass.class, ""split""), AggregationStrategies.groupedBody()) 
        .parallelProcessing() 
        .recipientList(method(TestClass.class, ""getRecipients"")) 
          .parallelProcessing() {code}
It looks like the Scanner uses an internal map of compiled Patterns, but this map (LinkedHashMap) is not threadsafe. 

 

Response from Claus Ibsen:

Yeah its a bug in Camel 3, you are surely welcome to log a JIRA ticket 
and work on a patch. 
I can see we (gnodet) introduced a custom fast scanner implementation, 
but its not thread safe. 

We could add synchronization block to that compute if absent. And for 
those constant patterns WHITE_SPACE, FIND_ANY etc we can make them 
static 
as java.util.Pattern is thread-safe and create them once in a class 
static block.

 

I did that and will post a PR-Request to the github project shortly, when the ticket number is known.

 ","Java 11, Camel 3.0.0RC3",davsclaus,Zohhak,,,,,"Zohhak commented on pull request #3313: CAMEL-14136: Fix ConcurrentModificationException in Scanner
URL: https://github.com/apache/camel/pull/3313
 
 
   Internal use of non threadsafe map wrapped with synchronized block,
   extracted some static patterns into class static block
   
   https://issues.apache.org/jira/browse/CAMEL-14136
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Nov/19 15:14;githubbot;600","davsclaus commented on pull request #3313: CAMEL-14136: Fix ConcurrentModificationException in Scanner
URL: https://github.com/apache/camel/pull/3313
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 07:22;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 06 07:24:10 UTC 2019,,,,,,,Patch Available,,,,"0|z088lc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Nov/19 07:24;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-hdfs: Producer throws exception when body is RemoteFile,CAMEL-14132,13266045,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,marius_cornescu,marius_cornescu,04/Nov/19 07:14,04/Nov/19 07:51,13/Jul/23 08:32,04/Nov/19 07:51,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,camel-hdfs,,,,0,,,,,"When running a route *FROM* sftp with streamDownload=true *TO* hdfs, an exception is thrown, with the root cause that *GenericFileConverter.genericFileToInputStream(GenericFile<?> file, Exchange exchange)* needs the exchange instance to be non null

 
{code}
exchange.getContext().getTypeConverter().convertTo(InputStream.class);
{code}
returns null, while 
{code}
exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, value);
{code}

works
 ",,davsclaus,marius_cornescu,,,,,"marius-cornescu commented on pull request #3310: CAMEL-14132 - camel-hdfs: Producer throws exception when body is RemoteFile
URL: https://github.com/apache/camel/pull/3310
 
 
   CAMEL-14132 - camel-hdfs: Producer throws exception when body is RemoteFile
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Nov/19 07:28;githubbot;600","davsclaus commented on pull request #3310: CAMEL-14132 - camel-hdfs: Producer throws exception when body is RemoteFile
URL: https://github.com/apache/camel/pull/3310
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Nov/19 07:48;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 04 07:51:12 UTC 2019,,,,,,,,,,,"0|z08820:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Nov/19 07:15;marius_cornescu;I may have broken this originally.;;;","04/Nov/19 07:35;marius_cornescu;[https://github.com/apache/camel/pull/3310];;;","04/Nov/19 07:51;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kubernetesConfiguration.setNamespace is not working,CAMEL-14129,13266001,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,imranrazakhan,imranrazakhan,03/Nov/19 20:33,06/Nov/19 11:31,13/Jul/23 08:32,06/Nov/19 11:31,,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-kubernetes,,,,0,,,,,"I am running following code and its not working with ""kubernetesConfiguration.setNamespace"" but if i set "".setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, simple(""my-ns""))"" then its work

*Main Class:*
{code:java}
public static void main(String[] args) throws Exception {        
KubernetesConfiguration kubernetesConfiguration = new KubernetesConfiguration();        kubernetesConfiguration.setMasterUrl(""https://0.0.0.0:8443""); kubernetesConfiguration.setOauthToken(""52rAQP_gk3GOtAG8o53loVtozrzPbKy9meNrpNSyCtA""); kubernetesConfiguration.setTrustCerts(true);
kubernetesConfiguration.setNamespace(""my-ns"");
KubernetesClient kc = KubernetesHelper.getKubernetesClient(kubernetesConfiguration);
final Main main = new Main();
main.addRouteBuilder(new MyRoute());
main.bind(""kubeClient"", kc);
main.run(args);    
}{code}
 

*Route Code:*
{code:java}
from(""timer://ipc?repeatCount=1"")
//.setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, simple(""my-ns""))
.setHeader(KubernetesConstants.KUBERNETES_CONFIGMAP_NAME, simple(""my-cm""))
.to(""kubernetes-config-maps:///?kubernetesClient=#kubeClient&operation=getConfigMap"")
.to(""log:my?showAll=true&multiline=true"");{code}
 if in route i set namespace header then it works otherwise it give null body so if we already configured client with namespace it should be used rather than we have to explicitly provide in header of route, yes if we provide in header it should be override on client configuration",,acosentino,imranrazakhan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 06 11:28:53 UTC 2019,,,,,,,,,,,"0|z087s8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Nov/19 11:00;acosentino;Using the kubernetesHelper for this purpose is wrong. This class is used only internally for instatianting the client based on the KubernetesConfiguration of the component. If you need to set your own client and set a namespace, just create the client through the kubernetes-client API and bind it to the registry. Using the Camel helper for this is wrong.;;;","06/Nov/19 11:08;imranrazakhan;Thanks for updates, I think it would be nice if we have examples in documentation or github with usage of kubernetes-client API, so for novice it would be good.;;;","06/Nov/19 11:28;acosentino;By the way on the helper the namespace wasn't set during the client creation, so the bug is there for real. I'm fixing it. I'll add documentation on the instatiation of the client, thanks [~imranrazakhan];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The destination File gets override even if you set the option fileExist to Append  ,CAMEL-14127,13265952,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,odehghan,odehghan,03/Nov/19 12:40,17/Sep/20 13:53,13/Jul/23 08:32,04/Nov/19 04:53,3.0.0.RC3,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-core,,,,0,append,file-component,fileExist,override,"Hi, I'm trying to append the content of a series of text files to another file with file-component using fileExist=Append but the destination file acts like it's been overrided!
Here's how I did it:

from(""file:G:/high"").to(""file:G:/test?fileName=test.txt&fileExist=Append"");",,davsclaus,mcollovati,odehghan,,,,"mcollovati commented on pull request #3309: CAMEL-14127: avoid file by file target replacement when fileExist=Append
URL: https://github.com/apache/camel/pull/3309
 
 
   When file producer applies file based optimization it ignores
   fileExist=Append mode and always replaces target file.
   This change avoids file based optimization when fileExist=Append.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Nov/19 14:34;githubbot;600","davsclaus commented on pull request #3309: CAMEL-14127: avoid file by file target replacement when fileExist=Append
URL: https://github.com/apache/camel/pull/3309
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Nov/19 04:52;githubbot;600","mcollovati commented on pull request #3337: CAMEL-14127: (2.x port) avoid file by file target replacement when fileExist=Append (#3309)
URL: https://github.com/apache/camel/pull/3337
 
 
   When file producer applies file based optimization it ignores
   fileExist=Append mode and always replaces target file.
   This change avoids file based optimization when fileExist=Append.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 19:54;githubbot;600","davsclaus commented on pull request #3337: CAMEL-14127: (2.x port) avoid file by file target replacement when fileExist=Append (#3309)
URL: https://github.com/apache/camel/pull/3337
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 21:02;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,CAMEL-15543,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,Important,,,,,,,,9223372036854775807,,,Sun Nov 10 18:12:57 UTC 2019,,,,,,,,,,,"0|z087hc:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,"03/Nov/19 13:01;mcollovati;It seems the bug has been introduced in 2.20.x, by commit d8c0a53b6787778661fb4cde3c59a50b5691efac

Previous implementaion of {{writeFileByFile}} used {{prepareOutputFileChannel}} that considered {{fileExist=Append}}, whereas the new version directly does a {{Files.copy}} with {{StandardCopyOption.REPLACE_EXISTING option}};;;","04/Nov/19 04:53;davsclaus;Thanks for reporting. And thanks Marco for the fix in the PR;;;","04/Nov/19 18:14;mcollovati;For the record, a workaround for older version is to set *charset* property 
{code:java}
from(""file:G:/high"").to(""file:G:/test?fileName=test.txt&charset=utf-8&fileExist=Append"");{code};;;","10/Nov/19 13:02;mcollovati;Will the fix be backported  to 2.x? Should I open another PR targeting at camel-2.x branch?;;;","10/Nov/19 14:51;davsclaus;Only if 2.x has the same issue - can you check;;;","10/Nov/19 18:12;mcollovati;As commented above, it seems the bug has been introduced in 2.20.x, by commit d8c0a53b6787778661fb4cde3c59a50b5691efac

The test added on PR fails on camel-2.x branch ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stax component can cause infinite loop of file component,CAMEL-14126,13265834,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,tomahi,tomahi,01/Nov/19 20:55,13/Nov/19 05:05,13/Jul/23 08:32,13/Nov/19 05:05,2.24.2,,,,,,,,,,,3.0.0,,,,,,camel-stax,,,,0,,,,,"I discovered a situation where the stax component causes an infinite loop of the file component in case of invalid UTF-8 characters in the file. I attached a sample project with the most simplistic route that shows the behaviour:  [^staxSample.zip] 

The input file containes invalid UTF-8 characters. The route definition is as following:
{code:java}
from(""file://inbound?moveFailed=.failed"")
    .split(stax(Product.class))
        .log(""${body.name}"");
{code}

I get the exceptions
{quote}
Error renaming file from C:\Users\...\inbound\products.xml to inbound\.failed\products.xml
{quote}
and
{quote}
[javax.xml.stream.XMLStreamException: ParseError at [row,col]:[4,29]
Message: Ungültiges Byte 2 von 3-Byte-UTF-8-Sequenz.]
{quote}

When I marshal the whole document at once I don't get the first exception. When I use the splitter with tokenizeXML I won't get any of the exceptions.

----

The sample contains another example where a combination of Splitter with aggregation + seda route called by inOut and an exception in the seda route causes the infinite loop too (Message is ""error renaming file"" as above). 

I could figure out that the issue doesn't occur if at least one of the following changes:
- the Exception is thrown in the ""file""-route instead of in the seda route
- the aggregation returns the newExchange if the oldExchange is null instead of creating a new DefaultExchange
- ""to"" instead of ""inOut"" is used to call the seda endpoint",,davsclaus,tomahi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/19 20:53;tomahi;staxSample.zip;https://issues.apache.org/jira/secure/attachment/12984664/staxSample.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 13 05:05:09 UTC 2019,,,,,,,,,,,"0|z086r4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Nov/19 10:22;davsclaus;The first one smells like a problem with windows file system where a file input stream is not closed, then it can't move the file;;;","12/Nov/19 10:23;davsclaus;And if you do custom aggregation strategy then do not create a new exchange, but use the existing ones!;;;","13/Nov/19 04:58;davsclaus;Okay so this works on linux on also on master branch. The reader is getting closed when there is an invalid file;;;","13/Nov/19 05:05;davsclaus;Added a explicit close. You can work around this on 2.x, by adding a convertBodyTo(byte[].class) before calling the splitter.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-http - Endpoint DSL builder seems not to generate all options,CAMEL-14119,13265528,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,31/Oct/19 12:54,31/Oct/19 14:35,13/Jul/23 08:32,31/Oct/19 14:35,3.0.0.RC3,,,,,,,,,,,3.0.0,,,,,,build system,,,,0,,,,,camel-http has a bunch of endpoint options which I dont see in its generated endpoint dsl,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 31 14:13:28 UTC 2019,,,,,,,,,,,"0|z084v4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Oct/19 14:13;davsclaus;There were some other options missing, adding those;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mtom cannot be enabled in CxfEnpoint,CAMEL-14117,13265471,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,Timizki,Timizki,31/Oct/19 08:03,01/Nov/19 07:42,13/Jul/23 08:32,01/Nov/19 07:42,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-cxf,,,,0,mtom,,,,"If in Spring Boot application CxfEndpoint bean is created with java configuration and cxfendpoints setMtomEnabled(true) method is used mtom stays disabled.

This happens also if mtom is enabled through cxfEndpoint.getProperties().put(""mtom-enabled"", true)

or by using Camels URI property method to(""cxf:bean:myCxfBean?properties.mtom-enabled=true)

or by using Camels query parameters method to(""cxf:bean:myCxfBean?mtomEnabled=true)

 

I believe that bug is caused  by lines from 130 to 133 in  org.apache.camel.component.cxf.CxfComponent. This block of code explicitly sets mtom state by using endpoints properties, but the properties are already handled and therefore the properties map is empty and mtom is always disabled.

 

I have added maven project that has unit tests for verifying the problem.","[^cxf-mtom-tests.zip]",davsclaus,Timizki,,,,,"Timizki commented on pull request #3306: CAMEL-14117: Removed code block that always disables mtom
URL: https://github.com/apache/camel/pull/3306
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Nov/19 06:10;githubbot;600","davsclaus commented on pull request #3306: CAMEL-14117: Removed code block that always disables mtom
URL: https://github.com/apache/camel/pull/3306
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Nov/19 07:40;githubbot;600",,,,,,,,,,,,,1800,600,1200,66%,1800,600,1200,,,,,,,,,,,,,,,,,,,,,"31/Oct/19 07:55;Timizki;cxf-mtom-tests.zip;https://issues.apache.org/jira/secure/attachment/12984448/cxf-mtom-tests.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Moderate,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 01 07:42:22 UTC 2019,,,,,,,,,,,"0|z084ig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Oct/19 08:52;davsclaus;Can you work on a github PR with a suggested fix?;;;","31/Oct/19 12:18;Timizki;Yes I can, I will post PR tomorrow.;;;","01/Nov/19 07:42;davsclaus;Thanks for reporting and the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-elasticsearch-rest: NullPointer exception if there is no body in exchange,CAMEL-14113,13265229,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,jondruse,jondruse,jondruse,30/Oct/19 08:31,31/Oct/19 11:58,13/Jul/23 08:32,31/Oct/19 11:58,3.0.0,,,,,,,,,,,3.0.0,,,,,,camel-elasticsearch-rest,,,,0,,,,,"Try simple route like this:

{quote}from(""timer:foo?period=5000&repeatCount=1"")
                .log("">>> ${body}"")

                .to(""elasticsearch-rest://docker-cluster?operation=INDEX&indexName=twitter&hostAddresses=127.0.0.1:9200"")
                .to(""mock:result"");
{quote}

and then observe exception in log:

{quote}08:59:19.181 [Camel (MyCamel) thread #1 - timer://foo] WARN  o.a.c.component.timer.TimerConsumer - Error processing exchange. Exchange[ID-localhost-localdomain-1572422356875-0-1]. Caused by: [java.lang.NullPointerException - null]
java.lang.NullPointerException: null
	at org.apache.camel.component.elasticsearch.converter.ElasticsearchActionRequestConverter.toIndexRequest(ElasticsearchActionRequestConverter.java:116)
	at org.apache.camel.component.elasticsearch.ElasticsearchProducer.process(ElasticsearchProducer.java:161)
	at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)
	at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148)
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548)
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:138)
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:101)
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
	at org.apache.camel.component.timer.TimerConsumer.sendTimerExchange(TimerConsumer.java:197)
	at org.apache.camel.component.timer.TimerConsumer$1.run(TimerConsumer.java:79)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505){quote}

It would be much better, if error message with explanation is logged  instead of NPE .

",,davsclaus,jondruse,,,,,"JiriOndrusek commented on pull request #3300: [CAMEL-14113] camel-elasticsearch-rest: NullPointer exception if ther…
URL: https://github.com/apache/camel/pull/3300
 
 
   …e is no body in exchange
   
   Issue: https://issues.apache.org/jira/browse/CAMEL-14113
   
   NPE was thrown when body of exchange didn't contain mandatory data. This PR changes behavior in the way, that IllegalArgumentException with explanation is thrown instead.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Oct/19 08:31;githubbot;600","davsclaus commented on pull request #3300: [CAMEL-14113] camel-elasticsearch-rest: NullPointer exception if ther…
URL: https://github.com/apache/camel/pull/3300
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Oct/19 11:58;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 31 08:32:06 UTC 2019,,,,,,,,,,,"0|z0830o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"30/Oct/19 09:15;davsclaus;Yeah maybe there are other operations that requires a mandatory body;;;","30/Oct/19 10:20;jondruse;[~davsclaus] It seems, that for almost all other operation types, there is logged message that content type is wrong. At least I'll add similar behavior for index and update requests and possible other types, where this functionality is missing.;;;","31/Oct/19 08:32;jondruse;PR https://github.com/apache/camel/pull/3300;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"camel-jpa - while persisting list of entity, no id returned for entity",CAMEL-14108,13264513,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,brianyang,brianyang,25/Oct/19 17:44,30/Oct/19 15:50,13/Jul/23 08:32,29/Oct/19 05:26,2.17.1,,,,,,,,,,,2.25.0,3.0.0,,,,,camel-jpa,,,,0,,,,,"i have java entity object with id attribute. 

when i persist single object by using following

<to uri=""jpaOut://com.dnd.model.dnd.eav.EntityInstance""/>
<log message=""${body}""/>

the result message include the generated id for entity instance, and it is saved in database

 

when i persist a list of object by using 

<to uri=""jpaOut://com.dnd.model.dnd.eav.EntityInstance?entityType=java.util.List""/>
<log message=""${body}""/>

the result message shows that {color:#FF0000}id is null{color} for each entityinstance in the list, however, each object is created in database. 

why id is null for list of returned object ? is this a bug?

 

 

 ",,brianyang,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 30 15:50:20 UTC 2019,,,,,,,,,,,"0|z07ylk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Oct/19 07:50;davsclaus;Ah I can see in the code that when its a collection then the returned value from the save is not updated in the message body in Camel vs a single entity, so there may be a little bug;;;","26/Oct/19 08:13;davsclaus;So likely here we need to store the returned values from the save in a temporary collection, and then replace them all back again
https://github.com/apache/camel/blob/f1d33ff95602498569274c913a7c6972d95a5b57/components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaProducer.java#L264

The same for the array;;;","29/Oct/19 15:51;brianyang;is there a work around this issue for now? 

when 3.0.0 will be released ?;;;","30/Oct/19 04:38;davsclaus;It will be released end of november or start of december.

A workaround is to write some java code and use JPA yourself to save the data and store the saved objects into the camel message such as from a Camel Processor;;;","30/Oct/19 15:45;brianyang;Thanks [~davsclaus] 

how about 2.25 , when it will be released ?;;;","30/Oct/19 15:50;davsclaus;Q1 2020;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
avoid using deprecated org.eclipse.jetty.util.MultiPartInputStreamParser ,CAMEL-14105,13264040,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ffang,ffang,ffang,23/Oct/19 15:13,21/Nov/19 19:53,13/Jul/23 08:32,23/Oct/19 15:57,,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,,,,,0,,,,,"This will be removed in future jetty version and already not visible in current(9.4.20) jetty OSGi bundle
{code}
headers org.eclipse.jetty.util

Jetty :: Utilities (276)

.....

Export-Package = 
	org.eclipse.jetty.util;
		exclude:=MultiPartInputStreamParser;
		uses:=""org.eclipse.jetty.util.annotation,
			org.eclipse.jetty.util.component,
			org.eclipse.jetty.util.log,
			org.eclipse.jetty.util.resource,
			org.eclipse.jetty.util.thread"";
{code}

We should use the new fast MultiPartFormInputStream instead by using Servlet 3 API
{code}
javax.servlet.http.HttpServletRequest.getParts()
{code}",,ffang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-23 15:13:11.0,,,,,,,,,,,"0|z07vog:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
netty throws exception if post does not have an empty body,CAMEL-14098,13263850,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zhfeng,mgrand,mgrand,22/Oct/19 17:33,21/Nov/19 19:53,13/Jul/23 08:32,28/Oct/19 09:25,2.24.2,3.0.0.RC2,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-netty-http,camel-netty4-http,,,0,,,,,"I have a very simple route:
{code:java}
class UiaRouteConfig extends RouteBuilder {
    @Override
    public void configure() {
        from(""netty-http:http://0.0.0.0:8080/authorization"")
                .to(""mock:foo"");
    }
}
{code}
If I send a post with no data like this, it works as expected:
{code:java}
curl -v -X POST http://localhost:8080/authorization
{code}
However, if I send even one byte of data like this
{code:java}
curl -v -X POST http://localhost:8080/authorization -d x
{code}
netty throws this exception:
{code}
13:10:14.370 [Camel (camel-1) thread #5 - NettyEventExecutorGroup] DEBUG o.a.c.c.netty.http.NettyHttpConsumer - Closing channel as an exception was thrown from Netty13:10:14.370 [Camel (camel-1) thread #5 - NettyEventExecutorGroup] DEBUG o.a.c.c.netty.http.NettyHttpConsumer - Closing channel as an exception was thrown from Nettyio.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1 at io.netty.util.internal.ReferenceCountUpdater.toLiveRealRefCnt(ReferenceCountUpdater.java:74) at io.netty.util.internal.ReferenceCountUpdater.release(ReferenceCountUpdater.java:138) at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:100) at io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage.release(HttpObjectAggregator.java:379) at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88) at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:112) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) at io.netty.channel.AbstractChannelHandlerContext.access$600(AbstractChannelHandlerContext.java:56) at io.netty.channel.AbstractChannelHandlerContext$7.run(AbstractChannelHandlerContext.java:365) at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66) at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) at java.base/java.lang.Thread.run(Thread.java:834){code}
If it helps, I have uploaded the two classes in this example, along with a maven pom file to build an executable .jar.",Java 1.8 running on a Mac,davsclaus,mgrand,zhfeng,,,,"zhfeng commented on pull request #3280: CAMEL-14098 - Camel-netty-http: Update to fix the issue when populate…
URL: https://github.com/apache/camel/pull/3280
 
 
   … the http request headers
   https://issues.apache.org/jira/browse/CAMEL-14098
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/19 04:09;githubbot;600","davsclaus commented on pull request #3280: CAMEL-14098 - Camel-netty-http: Update to fix the issue when populate…
URL: https://github.com/apache/camel/pull/3280
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/19 04:16;githubbot;600","zhfeng commented on pull request #3286: CAMEL-14098 Camel-netty-http: update the test to check the channel is…
URL: https://github.com/apache/camel/pull/3286
 
 
   … active
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Oct/19 07:06;githubbot;600","zhfeng commented on pull request #3287: CAMEL-14098 back port the fixes to 2.x
URL: https://github.com/apache/camel/pull/3287
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Oct/19 07:14;githubbot;600","oscerd commented on pull request #3286: CAMEL-14098 Camel-netty-http: update the test to check the channel is…
URL: https://github.com/apache/camel/pull/3286
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Oct/19 09:02;githubbot;600","oscerd commented on pull request #3287: CAMEL-14098 back port the fixes to 2.x
URL: https://github.com/apache/camel/pull/3287
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Oct/19 09:24;githubbot;600",,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,"22/Oct/19 17:31;mgrand;UiaMain.java;https://issues.apache.org/jira/secure/attachment/12983769/UiaMain.java","22/Oct/19 17:32;mgrand;UiaRouteConfig.java;https://issues.apache.org/jira/secure/attachment/12983768/UiaRouteConfig.java","22/Oct/19 17:32;mgrand;pom.xml;https://issues.apache.org/jira/secure/attachment/12983767/pom.xml",,3.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 25 04:25:07 UTC 2019,,,,,,,,,,,"0|z07ui8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"25/Oct/19 03:03;zhfeng;Thanks [~mgrand] and I can confirm this is an issue when puplateCamelHeaders from the http request. It can not retain the content buffer and release it at the finally block which causes the exception.;;;","25/Oct/19 04:16;davsclaus;Is this the same problem on 2.x, if so maybe we can backport this?;;;","25/Oct/19 04:22;zhfeng;No, I just check the 2.x branch and there is no such issue in the puplateCamelHeaders. But it would be useful to backport the test, how do you think ?;;;","25/Oct/19 04:23;davsclaus;Yeah sure;;;","25/Oct/19 04:24;zhfeng;Oh, sorry it is my mistake and it looks like the similar issue on 2. and I will try to backport.;;;","25/Oct/19 04:25;zhfeng;The test is failed now on the 2.x;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-gRPC: Copy headers each time we forward the exchange,CAMEL-14097,13263788,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,acosentino,acosentino,22/Oct/19 12:03,21/Nov/19 19:53,13/Jul/23 08:32,30/Oct/19 09:42,2.24.2,3.0.0.RC2,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-grpc,,,,0,,,,,,,acosentino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-22 12:03:45.0,,,,,,,,,,,"0|z07u4g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken links on the registry documentation page,CAMEL-14088,13263486,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,orpiske,orpiske,21/Oct/19 08:23,21/Nov/19 19:53,13/Jul/23 08:32,21/Oct/19 08:53,,,,,,,,,,,,3.0.0,,,,,,website,,,,0,,,,,All the links on the registry documentation page are broken:  [https://camel.apache.org/manual/latest/registry.html],,orpiske,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-21 08:23:48.0,,,,,,,,,,,"0|z07s9c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-debezium - The maven plugin generates a new default port number each time,CAMEL-14087,13263348,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,omarsmak,davsclaus,davsclaus,19/Oct/19 18:59,20/Oct/19 06:41,13/Jul/23 08:32,20/Oct/19 06:41,3.0.0.RC3,,,,,,,,,,,3.0.0,3.0.0.RC3,,,,,camel-debezium,,,,0,,,,,When you run a mvn clean install then it regenerate the component roc with a new port number for the databaseServierId. ,,davsclaus,,,,,,"omarsmak commented on pull request #3267: CAMEL-14087: Fix for serverId is generated everytime when mvn clean install is triggered
URL: https://github.com/apache/camel/pull/3267
 
 
   fix for CAMEL-14087
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Oct/19 23:06;githubbot;600","davsclaus commented on pull request #3267: CAMEL-14087: Fix for serverId is generated everytime when mvn clean install is triggered
URL: https://github.com/apache/camel/pull/3267
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Oct/19 06:41;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-19 18:59:20.0,,,,,,,,,,,"0|z07reo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
docs pom.xml parent version is 3.0.0-SNAPSHOT,CAMEL-14082,13262996,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,zhfeng,zhfeng,zhfeng,18/Oct/19 03:51,18/Oct/19 07:05,13/Jul/23 08:32,18/Oct/19 07:05,,,,,,,,,,,,2.25.0,,,,,,,,,,0,,,,,I think this might be a minor issue when backing port from the master branch.,,zhfeng,,,,,,"zhfeng commented on pull request #3262: CAMEL-14082 Update to fix the parent version
URL: https://github.com/apache/camel/pull/3262
 
 
   https://issues.apache.org/jira/browse/CAMEL-14082
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 03:55;githubbot;600","oscerd commented on pull request #3262: CAMEL-14082 Update to fix the parent version
URL: https://github.com/apache/camel/pull/3262
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 07:04;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-18 03:51:27.0,,,,,,,,,,,"0|z07ppk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-api-component-maven-plugin fromApis throw java.lang.StringIndexOutOfBoundsException,CAMEL-14081,13262995,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zhfeng,zhfeng,zhfeng,18/Oct/19 03:34,18/Oct/19 08:59,13/Jul/23 08:32,18/Oct/19 08:58,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.0,3.0.0.RC3,,,camel-as2,tooling,,,0,,,,,"I find this issue as my locale environment is zh_CN.UTF-8 and the javadoc generate the ""lang=zh"" html files. And this causes the following exception
{noformat}
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1927)
	at org.apache.camel.maven.JavadocParser.startTag(JavadocParser.java:115)
	at javax.swing.text.html.parser.Parser.parseTag(Parser.java:1956)
	at javax.swing.text.html.parser.Parser.parseContent(Parser.java:2097)
	at javax.swing.text.html.parser.Parser.parse(Parser.java:2271)
	at org.apache.camel.maven.JavadocApiMethodGeneratorMojo.getSignatureList(JavadocApiMethodGeneratorMojo.java:101)
	at org.apache.camel.maven.AbstractApiMethodGeneratorMojo.execute(AbstractApiMethodGeneratorMojo.java:70)
	at org.apache.camel.maven.ApiComponentGeneratorMojo.execute(ApiComponentGeneratorMojo.java:92)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:954)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)

{noformat}

I think it is related to JavaDocParser in the camel-api-component-maven-plugin 
{code:java}
if (title != null) {
    // append package name to type name text
    methodTextBuilder.append(title.substring(title.lastIndexOf(' '))).append('.');
}
{code}

This assumes that the java html doc is generated by English language. The workaround could be set ""LANG=en_US.UTF-8"" when running the maven build. In the other hand, I think it could add ""<locale>en</locale>"" in the javadoc  configuration as we have to depend on the html files. This would effect the camel-as2, camel-linkedin, camel-box, camel-fhir, camel-olingo2 and camel-olingo4.",,zhfeng,,,,,,"zhfeng commented on pull request #3263: CAMEL-14081 Update to add locale en in javadoc configuration
URL: https://github.com/apache/camel/pull/3263
 
 
   https://issues.apache.org/jira/browse/CAMEL-14081
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 05:15;githubbot;600","zhfeng commented on pull request #3264: CAMEL-14081 Update to add locale en in javadoc configuration
URL: https://github.com/apache/camel/pull/3264
 
 
   https://issues.apache.org/jira/browse/CAMEL-14081
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 05:25;githubbot;600","davsclaus commented on pull request #3264: CAMEL-14081 Update to add locale en in javadoc configuration
URL: https://github.com/apache/camel/pull/3264
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 07:33;githubbot;600","oscerd commented on pull request #3263: CAMEL-14081 Update to add locale en in javadoc configuration
URL: https://github.com/apache/camel/pull/3263
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 08:53;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 18 05:26:32 UTC 2019,,,,,,,,,,,"0|z07ppc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Oct/19 05:26;zhfeng;I just send two PRs to fix in the master and camel-2.x branches.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-bean - Exception from message getBody may not be handled by error handler,CAMEL-14078,13262850,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,17/Oct/19 12:27,18/Oct/19 15:00,13/Jul/23 08:32,18/Oct/19 15:00,2.24.2,,,,,,,,,,,3.0.0,3.0.0.RC3,,,,,,,,,0,,,,,"Reported on user forum
https://camel.465427.n5.nabble.com/BridgeErrorHandler-on-JMS-Endpoint-does-not-work-as-expected-tp5845420.html

And on SO
https://stackoverflow.com/questions/58407987/apache-camel-jms-component-bridgeerrorhandler-does-not-work-as-documented",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-17 12:27:17.0,,,,,,,,,,,"0|z07ot4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInputStreamCache will not delete temporary file if file system is full,CAMEL-14072,13262518,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,siano,siano,siano,16/Oct/19 06:07,16/Oct/19 13:24,13/Jul/23 08:32,16/Oct/19 11:23,2.24.2,3.0.0.RC2,,,,,,,,,,2.24.3,2.25.0,3.0.0,3.0.0.RC3,,,came-core,,,,0,,,,,"If a FileInputStreamCache completely fills up the underlying fileystem (before the cache file is completely written) processing fails and the temporary file is not deleted afterwards.

The error as such is of course unavoidable but the temporary file should be deleted afterwards.

The reason for this issue is that trying to close the FileOutputStream will throw an IOException (no space left on device). As a consequence the coding that tries to delete the file is not called.",,siano,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-16 06:07:24.0,,,,,,,,,,,"0|z07mrc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Camel-as2] Integration tests are not working,CAMEL-14071,13262352,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,jondruse,jondruse,jondruse,15/Oct/19 12:36,17/Oct/19 19:15,13/Jul/23 08:32,17/Oct/19 19:15,3.0.0,,,,,,,,,,,3.0.0,3.0.0.RC3,,,,,camel-as2,,,,0,,,,,"Run integration tests (mvn clean test -pl :camel-as2 -Dtest=\*IntegrationTest) and see errors:{code}
ERROR] Tests run: 12, Failures: 0, Errors: 12, Skipped: 0, Time elapsed: 5.04 s <<< FAILURE! - in org.apache.camel.component.as2.AS2ServerManagerIntegrationTest
[ERROR] receivePlainEDIMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.186 s  <<< ERROR!
org.apache.camel.FailedToCreateRouteException: Failed to create route route3: Route(route3)[From[as2://server/listen?requestUriPattern=/] ... because of Failed to resolve endpoint: as2://server/listen?requestUriPattern=%2F due to: Server HTTP connection failed
Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: as2://server/listen?requestUriPattern=%2F due to: Server HTTP connection failed
Caused by: org.apache.camel.RuntimeCamelException: Server HTTP connection failed
Caused by: java.net.BindException: Address already in use (Bind failed)

[ERROR] receiveEnvelopedMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.027 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest(AS2ServerManagerIntegrationTest.java:272)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest(AS2ServerManagerIntegrationTest.java:272)

[ERROR] sendEditMessageToFailingProcessorTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.047 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest(AS2ServerManagerIntegrationTest.java:334)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest(AS2ServerManagerIntegrationTest.java:334)

[ERROR] receiveMultipartSignedMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.07 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest(AS2ServerManagerIntegrationTest.java:204)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest(AS2ServerManagerIntegrationTest.java:204)

[ERROR] receivePlainEDIMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.06 s  <<< ERROR!
org.apache.camel.FailedToCreateRouteException: Failed to create route route5: Route(route5)[From[as2://server/listen?requestUriPattern=/] ... because of Failed to resolve endpoint: as2://server/listen?requestUriPattern=%2F due to: Server HTTP connection failed
Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: as2://server/listen?requestUriPattern=%2F due to: Server HTTP connection failed
Caused by: org.apache.camel.RuntimeCamelException: Server HTTP connection failed
Caused by: java.net.BindException: Address already in use (Bind failed)

[ERROR] receiveEnvelopedMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.01 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest(AS2ServerManagerIntegrationTest.java:272)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest(AS2ServerManagerIntegrationTest.java:272)

[ERROR] sendEditMessageToFailingProcessorTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.005 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest(AS2ServerManagerIntegrationTest.java:334)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest(AS2ServerManagerIntegrationTest.java:334)

[ERROR] receiveMultipartSignedMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.053 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest(AS2ServerManagerIntegrationTest.java:204)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest(AS2ServerManagerIntegrationTest.java:204)

[ERROR] receivePlainEDIMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.06 s  <<< ERROR!
org.apache.camel.FailedToCreateRouteException: Failed to create route route7: Route(route7)[From[as2://server/listen?requestUriPattern=/] ... because of Failed to resolve endpoint: as2://server/listen?requestUriPattern=%2F due to: Server HTTP connection failed
Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: as2://server/listen?requestUriPattern=%2F due to: Server HTTP connection failed
Caused by: org.apache.camel.RuntimeCamelException: Server HTTP connection failed
Caused by: java.net.BindException: Address already in use (Bind failed)

[ERROR] receiveEnvelopedMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.015 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest(AS2ServerManagerIntegrationTest.java:272)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest(AS2ServerManagerIntegrationTest.java:272)

[ERROR] sendEditMessageToFailingProcessorTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.004 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest(AS2ServerManagerIntegrationTest.java:334)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest(AS2ServerManagerIntegrationTest.java:334)

[ERROR] receiveMultipartSignedMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)  Time elapsed: 0.058 s  <<< ERROR!
org.apache.http.HttpException: Failed to parse entity content
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest(AS2ServerManagerIntegrationTest.java:204)
Caused by: java.lang.IllegalArgumentException: Content type may not be null
	at org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest(AS2ServerManagerIntegrationTest.java:204)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   AS2ClientManagerIntegrationTest.compressedMessageTest:472->Assert.assertNotNull:712->Assert.assertTrue:41->Assert.fail:88 send result
[ERROR]   AS2ClientManagerIntegrationTest.multipartSignedMessageTest:385->Assert.assertNotNull:712->Assert.assertTrue:41->Assert.fail:88 send result
[ERROR] Errors: 
[ERROR]   AS2ClientManagerIntegrationTest.envelopedMessageSendTest:305 ClassCast org.apa...
[ERROR]   AS2ClientManagerIntegrationTest.setupTest:578->receiveTestMessages:652 » Bind ...
[ERROR]   AS2ClientManagerIntegrationTest.plainMessageSendTest:233 ClassCast org.apache....
[ERROR] org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)
[ERROR]   Run 1: AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest:272 » Http Failed ...
[ERROR]   Run 2: AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest:272 » Http Failed ...
[ERROR]   Run 3: AS2ServerManagerIntegrationTest.receiveEnvelopedMessageTest:272 » Http Failed ...
[INFO] 
[ERROR] org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)
[ERROR]   Run 1: AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest:204 » Http F...
[ERROR]   Run 2: AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest:204 » Http F...
[ERROR]   Run 3: AS2ServerManagerIntegrationTest.receiveMultipartSignedMessageTest:204 » Http F...
[INFO] 
[ERROR] org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.receivePlainEDIMessageTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)
[ERROR]   Run 1: AS2ServerManagerIntegrationTest>CamelTestSupport.setUp:322->CamelTestSupport.doSetUp:459->CamelTestSupport.startCamelContext:819 » FailedToCreateRoute
[ERROR]   Run 2: AS2ServerManagerIntegrationTest>CamelTestSupport.setUp:322->CamelTestSupport.doSetUp:459->CamelTestSupport.startCamelContext:819 » FailedToCreateRoute
[ERROR]   Run 3: AS2ServerManagerIntegrationTest>CamelTestSupport.setUp:322->CamelTestSupport.doSetUp:459->CamelTestSupport.startCamelContext:819 » FailedToCreateRoute
[INFO] 
[ERROR] org.apache.camel.component.as2.AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest(org.apache.camel.component.as2.AS2ServerManagerIntegrationTest)
[ERROR]   Run 1: AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest:334 » Http
[ERROR]   Run 2: AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest:334 » Http
[ERROR]   Run 3: AS2ServerManagerIntegrationTest.sendEditMessageToFailingProcessorTest:334 » Http
[INFO] 
[INFO] 
[ERROR] Tests run: 10, Failures: 2, Errors: 7, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
{code}",,jondruse,,,,,,"JiriOndrusek commented on pull request #3259: [CAMEL-14071] [Camel-as2] Integration tests are not working
URL: https://github.com/apache/camel/pull/3259
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-14071
   
   - One class was missing in if condition of AS2Producer in interception method (https://github.com/apache/camel/commit/30192d63f0290639e815df21ae37c9bc85f184d4#diff-090142443d23c06921786a5181ad7517R44), which become evident during fixation of tests. I've added MultipartSignedEntity into if condition (this entity contains signature entity). Without this change all responses containing MultipartSignedEntity won't be added into body of exchange.
   
   - Added closing connection into @AfterClass method of AS2ClientManagerIntegrationTest.
   
   - There were changes in AS2Producer (https://github.com/apache/camel/commit/30192d63f0290639e815df21ae37c9bc85f184d4#diff-090142443d23c06921786a5181ad7517R40-R48) and AS2Consmer (https://github.com/apache/camel/commit/30192d63f0290639e815df21ae37c9bc85f184d4#diff-8c8e31cb62827ee2306130030a00255cR114-R120), which was not reflected in tests. Tests are fixed now.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Oct/19 11:38;githubbot;600","davsclaus commented on pull request #3259: [CAMEL-14071] [Camel-as2] Integration tests are not working
URL: https://github.com/apache/camel/pull/3259
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Oct/19 19:14;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 17 11:38:51 UTC 2019,,,,,,,,,,,"0|z07lqg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Oct/19 11:38;jondruse;PR: https://github.com/apache/camel/pull/3259;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken links in the components nav.adoc,CAMEL-14064,13262133,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,zregvart,zregvart,14/Oct/19 10:40,14/Oct/19 11:23,13/Jul/23 08:32,14/Oct/19 11:21,,,,,,,,,,,,,,,,,,documentation,website,,,0,,,,,"The website build [fails|https://builds.apache.org/job/Camel.website/job/master/238/console] with broken links in the component nav.adoc.

{code}
11:47:43  $ antora --generator @antora/xref-validator site.yml
11:48:30  Unresolved xrefs (grouped by origin):
11:48:30  
11:48:30  repo: https://github.com/apache/camel.git | branch: master | component: components | version: latest
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: constant-language.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: exchangeProperty-language.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: file-language.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: header-language.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: ref-language.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: simple-language.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: tokenize-language.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: xtokenize-language.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: microprofile-health.adoc
11:48:30    path: docs/components/modules/ROOT/nav.adoc | xref: reactor.adoc
{code}

Same can be seen if the xref verifier is run on the doc module via {{./mvnw -f docs verify}}
",,davsclaus,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 14 11:23:40 UTC 2019,,,,,,,,,,,"0|z07kds:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/Oct/19 10:49;davsclaus;Okay those are missing docs, the last 2 has been corrected. But the general docs was in camel-core and with this splitup there is a little issue in that tool. Let me try to get them working, eg you can also see the WARN if you build catalog-camel+catalog;;;","14/Oct/19 11:03;davsclaus;Is index.adoc generated?;;;","14/Oct/19 11:21;davsclaus;okay should be fixed now;;;","14/Oct/19 11:23;zregvart;bq. Is index.adoc generated?

From what I remember only nav.adoc files are generated, I think the generated files have [a header|https://github.com/apache/camel/blob/master/docs/generated.txt].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException for failed One-Way requests with HTTP session handling,CAMEL-14058,13261790,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Trivial,Fixed,siano,siano,siano,11/Oct/19 12:23,11/Oct/19 12:54,13/Jul/23 08:32,11/Oct/19 12:54,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.0,,,,camel-cxf,,,,0,,,,,"In some cases there is no inMessage in the cxf exchange in case of an error. If HTTP session handling is enabled (cookies), this will result in a NullPointerException.

The fix for this is rather trivial; a null check has to be done before accessing the inMessage.

This usually happens for one-way messages where HTTP session handling does not make much sense (because without a response there are no cookies), but nevertheless there should be no NullPointerException",,siano,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-11 12:23:56.0,,,,,,,,,,,"0|z07i9k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Placeholder are not resolved when using GeneratedPropertyConfigurer ,CAMEL-14054,13261599,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,lb,lb,lb,10/Oct/19 16:04,11/Oct/19 03:21,13/Jul/23 08:32,11/Oct/19 03:21,3.0.0.RC2,,,,,,,,,,,3.0.0.RC3,,,,,,camel-core,,,,0,,,,,"If a property is defined like:

    camel.component.twitter-timeline.consumer-key = {{env:TWITTER_COMNSUMER_KEY}}

then the property will be set on the target object as it is without resolving placeholders.",,lb,,,,,,"davsclaus commented on pull request #3242: CAMEL-14054: Placeholder are not resolved when using GeneratedPropertyConfigurer
URL: https://github.com/apache/camel/pull/3242
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Oct/19 03:20;githubbot;600",,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-10 16:04:14.0,,,,,,,,,,,"0|z07h34:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC StreamList and outputClass does not work,CAMEL-14035,13260531,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,Naryshkin,Naryshkin,04/Oct/19 08:40,11/Oct/19 07:20,13/Jul/23 08:32,07/Oct/19 03:48,2.24.2,,,,,,,,,,,2.24.3,2.25.0,3.0.0,3.0.0.RC3,,,camel-core,camel-jdbc,,,0,,,,,"Situation is simple:

I try to load data from jdbc by Stream to Java object

with such command jdbc:dbBean?outputType=StreamList&outputClass=myClass.

I estimate Java object on exit of flow? but i have Map<String, Object>.

Bug in JdbcProducer at lines 326.

if (outputType == JdbcOutputType.StreamList) {
 exchange.getOut().setBody(iterator);
 exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator));
 // do not close resources as we are in streaming mode
 answer = false;
}

Here need wrap iterator to map objects by method newBeanInstance",,acosentino,davsclaus,Naryshkin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 04 10:44:44 UTC 2019,,,,,,,,,,,"0|z07ai0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Oct/19 08:42;acosentino;Situation is simple, but what is the camel version?;;;","04/Oct/19 08:56;Naryshkin;2.24.2;;;","04/Oct/19 10:44;davsclaus;Ah yeah well spotted. So its basically to build a iterator wrapper that does the newBeanInstance in the next method. 

Are you maybe able to work on a PR?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
multiple consumers for namedReplyTo results in a cryptic nullPointer,CAMEL-14033,13260443,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,ryeats,ryeats,03/Oct/19 20:57,11/Oct/19 07:22,13/Jul/23 08:32,04/Oct/19 06:51,3.0.0.RC1,,,,,,,,,,,3.0.0,3.0.0.RC3,,,,,camel-sjms,,,,0,,,,,"Per [https://camel.apache.org/components/latest/sjms-component.html#_clustering] you should not have multiple inOut producerEndpoints using the same replyTo address but if you do it results in a cryptic null pointer exception it would be nice to have a better error message of some sort directing you to use a unique replyTo address or temporary queue. Additionally if the replyTo is a topic then I don't believe it should result in an error and it may be better to actually use a message selector for this case.

java.lang.NullPointerException: nulljava.lang.NullPointerException: null at org.apache.camel.component.sjms.producer.InOutProducer$MessageConsumerResourcesFactory$1.onMessage(InOutProducer.java:103) ~[?:?] at org.apache.activemq.artemis.jms.client.JMSMessageListenerWrapper.onMessage(JMSMessageListenerWrapper.java:110) ~[254:org.apache.activemq.artemis-server-osgi:2.8.1] at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl.callOnMessage(ClientConsumerImpl.java:1031) ~[?:?] at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl.access$400(ClientConsumerImpl.java:50) ~[?:?] at org.apache.activemq.artemis.core.client.impl.ClientConsumerImpl$Runner.run(ClientConsumerImpl.java:1154) ~[?:?] at org.apache.activemq.artemis.utils.actors.OrderedExecutor.doTask(OrderedExecutor.java:42) ~[?:?] at org.apache.activemq.artemis.utils.actors.OrderedExecutor.doTask(OrderedExecutor.java:31) ~[?:?] at org.apache.activemq.artemis.utils.actors.ProcessorBase.executePendingTasks(ProcessorBase.java:66) ~[?:?] at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:?] at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:?]",,davsclaus,ryeats,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 04 06:51:55 UTC 2019,,,,,,,,,,,"0|z079yg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Oct/19 06:51;davsclaus;Fixed the NPE and update the docs to say to use queues;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-ftp - streamDownload=true and move options dont work,CAMEL-14030,13260250,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,03/Oct/19 07:41,11/Oct/19 07:23,13/Jul/23 08:32,03/Oct/19 08:06,2.24.2,3.0.0.RC2,,,,,,,,,,2.24.3,2.25.0,3.0.0,3.0.0.RC3,,,camel-ftp,,,,0,,,,,"Reported on mailing list
https://camel.465427.n5.nabble.com/Bug-Camel-FTP-streamdownload-move-options-tp5843791.html",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-03 07:41:10.0,,,,,,,,,,,"0|z0795s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-Netty-Http: NettyHttpStreamTest is failing consistently,CAMEL-14027,13259942,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zhfeng,acosentino,acosentino,01/Oct/19 15:34,10/Oct/19 08:00,13/Jul/23 08:32,10/Oct/19 08:00,3.0.0.RC2,,,,,,,,,,,3.0.0,3.0.0.RC3,,,,,camel-netty-http,,,,0,,,,,"{code:java}
[INFO] Running org.apache.camel.component.netty.http.NettyHttpStreamTest[INFO] Running org.apache.camel.component.netty.http.NettyHttpStreamTest[ERROR] Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.482 s <<< FAILURE! - in org.apache.camel.component.netty.http.NettyHttpStreamTest[ERROR] org.apache.camel.component.netty.http.NettyHttpStreamTest  Time elapsed: 0.345 s  <<< FAILURE!java.lang.AssertionError: Leaks detected while running tests: Logger=io.netty.util.ResourceLeakDetector Level=ERROR Message=LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.Recent access records: #1: io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage.release(HttpObjectAggregator.java:379) io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88) io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:112) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.access$600(AbstractChannelHandlerContext.java:56) io.netty.channel.AbstractChannelHandlerContext$7.run(AbstractChannelHandlerContext.java:365) io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)#2: io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.retain(AdvancedLeakAwareCompositeByteBuf.java:36) org.apache.camel.component.netty.http.DefaultNettyHttpBinding.toCamelMessage(DefaultNettyHttpBinding.java:104) org.apache.camel.component.netty.http.NettyHttpEndpoint.createExchange(NettyHttpEndpoint.java:121) org.apache.camel.component.netty.handlers.ServerChannelHandler.channelRead0(ServerChannelHandler.java:91) org.apache.camel.component.netty.http.handlers.HttpServerChannelHandler.channelRead0(HttpServerChannelHandler.java:202) io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) org.apache.camel.component.netty.http.handlers.HttpServerMultiplexChannelHandler.channelRead0(HttpServerMultiplexChannelHandler.java:156) io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.access$600(AbstractChannelHandlerContext.java:56) io.netty.channel.AbstractChannelHandlerContext$7.run(AbstractChannelHandlerContext.java:365) io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)#3: io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.retain(AdvancedLeakAwareCompositeByteBuf.java:36) org.apache.camel.component.netty.http.handlers.HttpServerMultiplexChannelHandler.channelRead0(HttpServerMultiplexChannelHandler.java:154) io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.access$600(AbstractChannelHandlerContext.java:56) io.netty.channel.AbstractChannelHandlerContext$7.run(AbstractChannelHandlerContext.java:365) io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)#4: Hint: 'handler' will handle the message from this point. io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.touch(AdvancedLeakAwareCompositeByteBuf.java:36) io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage.touch(HttpObjectAggregator.java:367) io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest.touch(HttpObjectAggregator.java:446) io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest.touch(HttpObjectAggregator.java:397) io.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:306) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:328) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:302) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)Created at: io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer(AbstractByteBufAllocator.java:223) io.netty.buffer.AbstractByteBufAllocator.compositeBuffer(AbstractByteBufAllocator.java:201) io.netty.handler.codec.MessageAggregator.decode(MessageAggregator.java:271) io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:306) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:328) io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:315) io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:429) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:283) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748): 1 leak records were discarded because the leak record count is targeted to 4. Use system property io.netty.leakDetection.targetRecords to increase the limit., Logger=io.netty.util.ResourceLeakDetector Level=ERROR Message=LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.Recent access records: #1: io.netty.handler.codec.http.DefaultHttpContent.release(DefaultHttpContent.java:94) io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88) io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:90) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:306) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:328) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:302) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)#2: Hint: 'aggregator' will handle the message from this point. io.netty.handler.codec.http.DefaultHttpContent.touch(DefaultHttpContent.java:88) io.netty.handler.codec.http.DefaultLastHttpContent.touch(DefaultLastHttpContent.java:88) io.netty.handler.codec.http.DefaultLastHttpContent.touch(DefaultLastHttpContent.java:28) io.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:306) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:328) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:302) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)#3: Hint: 'inbound-streamer' will handle the message from this point. io.netty.handler.codec.http.DefaultHttpContent.touch(DefaultHttpContent.java:88) io.netty.handler.codec.http.DefaultLastHttpContent.touch(DefaultLastHttpContent.java:88) io.netty.handler.codec.http.DefaultLastHttpContent.touch(DefaultLastHttpContent.java:28) io.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:306) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:328) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:302) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)#4: Hint: 'decoder-0' will handle the message from this point. io.netty.handler.codec.http.DefaultHttpContent.touch(DefaultHttpContent.java:88) io.netty.handler.codec.http.DefaultLastHttpContent.touch(DefaultLastHttpContent.java:88) io.netty.handler.codec.http.DefaultLastHttpContent.touch(DefaultLastHttpContent.java:28) io.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:328) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:302) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)Created at: io.netty.buffer.SimpleLeakAwareByteBuf.unwrappedDerived(SimpleLeakAwareByteBuf.java:143) io.netty.buffer.SimpleLeakAwareByteBuf.readRetainedSlice(SimpleLeakAwareByteBuf.java:67) io.netty.buffer.AdvancedLeakAwareByteBuf.readRetainedSlice(AdvancedLeakAwareByteBuf.java:107) io.netty.handler.codec.http.HttpObjectDecoder.decode(HttpObjectDecoder.java:296) io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:505) io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:444) io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:283) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748): 1 leak records were discarded because the leak record count is targeted to 4. Use system property io.netty.leakDetection.targetRecords to increase the limit., Logger=io.netty.util.ResourceLeakDetector Level=ERROR Message=LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.Recent access records: #1: io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:291) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)#2: Hint: 'decoder' will handle the message from this point. io.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357) io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)#3: Hint: 'DefaultChannelPipeline$HeadContext#0' will handle the message from this point. io.netty.channel.DefaultChannelPipeline.touch(DefaultChannelPipeline.java:116) io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357) io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748)Created at: io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:349) io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:187) io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:178) io.netty.buffer.AbstractByteBufAllocator.ioBuffer(AbstractByteBufAllocator.java:139) io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate(DefaultMaxMessagesRecvByteBufAllocator.java:114) io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:147) io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) java.lang.Thread.run(Thread.java:748){code}",,acosentino,,,,,,"zhfeng commented on pull request #3231: CAMEL-14027 Update to fix the NettyHttpStreamTest to release the buffer
URL: https://github.com/apache/camel/pull/3231
 
 
   https://issues.apache.org/jira/browse/CAMEL-14027
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 06:27;githubbot;600","oscerd commented on pull request #3231: CAMEL-14027 Update to fix the NettyHttpStreamTest to release the buffer
URL: https://github.com/apache/camel/pull/3231
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Oct/19 08:00;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,CAMEL-14017,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-01 15:34:42.0,,,,,,,,,,,"0|z0779k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-salesforce-maven-plugin generate fails on IBM jdk,CAMEL-14023,13259825,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,jondruse,jondruse,jondruse,01/Oct/19 06:32,14/Oct/19 06:51,13/Jul/23 08:32,14/Oct/19 06:51,2.24.2,3.0.0.RC1,,,,,,,,,,2.24.3,2.25.0,3.0.0,3.0.0.RC3,,,camel-salesforce,,,,0,,,,,"Run camel-salesforce-maven-plugin goal generate om ibm java

{code}
<plugin>
	<groupId>org.apache.camel.maven</groupId>
	<artifactId>camel-salesforce-maven-plugin</artifactId>
	<version>${version.camel}</version>
	<configuration>
		<clientId>${camelSalesforce.clientId}</clientId>
		<clientSecret>${camelSalesforce.clientSecret}</clientSecret>
		<userName>${camelSalesforce.userName}</userName>
		<password>${camelSalesforce.password}</password>
		<loginUrl>${camelSalesforce.loginUrl}</loginUrl>
		<version>${camelSalesforce.apiVersion}</version>
		<includes>
			<include>Account</include>
		</includes>
	</configuration>
	<executions>
		<execution>
			<id>salesforce-objects</id>
			<goals>
				<goal>generate</goal>
			</goals>
		</execution>
	</executions>
</plugin>
{code}

Execution will fail with:
{code}[ERROR] Failed to execute goal org.apache.camel.maven:camel-salesforce-maven-plugin:2.25.0-SNAPSHOT:generate (default) on project camel-salesforce: Error connecting to Salesforce: Salesforce login error Unexpected login error: No negotiable cipher suite -> [Help 1]{code}",,davsclaus,jondruse,,,,,"JiriOndrusek commented on pull request #3225: [CAMEL-14023] Camel-salesforce-maven-plugin generate fails on IBM jdk
URL: https://github.com/apache/camel/pull/3225
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-14023
   
   Jetty client (for security reasons) disables all ciphers, which starts with ""SSL_"".
   In IBM java it removes all ciphers, because every cipher starts with SSL, even ciphers for TLS 1.2
   (see issue reported on jetty https://github.com/eclipse/jetty.project/issues/2921).
   This fix changes excluded ciphers, for IBM jdk only, to contain also SSL_* ones.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Oct/19 13:47;githubbot;600","davsclaus commented on pull request #3225: [CAMEL-14023] Camel-salesforce-maven-plugin generate fails on IBM jdk
URL: https://github.com/apache/camel/pull/3225
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Oct/19 06:47;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 07 13:48:55 UTC 2019,,,,,,,,,,,"0|z076jk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Oct/19 06:32;jondruse;I'm working on this issue;;;","03/Oct/19 10:33;davsclaus;Jiri, I granted your user karma to self assign tickets;;;","07/Oct/19 13:48;jondruse;[~davsclaus] thank you very much.;;;","07/Oct/19 13:48;jondruse;PR: https://github.com/apache/camel/pull/3225;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-Kafka ConsumerCount drops to 1 (default) from the defined value,CAMEL-14010,13258570,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,srikant_mantha,srikant_mantha,24/Sep/19 14:27,07/Nov/19 18:01,13/Jul/23 08:32,07/Nov/19 18:01,2.22.0,,,,,,,,,,,3.0.0,3.0.0.RC3,,,,,camel-kafka,,,,0,,,,,"Iam using kafka consumer in our application integrated with Camel. 
 We consume the messages and send the data to the server for processing.

There is one topic ""*XYZ*"" defined with *30* partitions and I have assigned *15* as consumer count on each consumer node (total 2 instances)

/*** Camel Consumer Configuration ***/
{code:java}
kafka.consumersCount=15
 kafka.consumerStreams=15{code}
{{I see from the logs that when the consumer starts, there are *15* consumer threads (lets say on 1 node), which is good as configured.I see from the logs that when the consumer starts, there are 15 consumer threads (lets say on 1 node), which is good as configured.}}

 

 
{code:java}

{code}
{{INFO  Camel (camel-1) thread #2 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 0 to topic XYZ }}
{{INFO  Camel (camel-1) thread #3 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 1 to topic XYZ }}
{{INFO  Camel (camel-1) thread #4 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 2 to topic XYZ }}
{{INFO  Camel (camel-1) thread #5 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 3 to topic XYZ }}
{{INFO  Camel (camel-1) thread #6 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 4 to topic XYZ }}
{{INFO  Camel (camel-1) thread #7 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 5 to topic XYZ }}
{{INFO  Camel (camel-1) thread #8 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 6 to topic XYZ }}
{{INFO  Camel (camel-1) thread #9 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 7 to topic XYZ }}
{{INFO  Camel (camel-1) thread #10 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 8 to topic XYZ }}
{{INFO  Camel (camel-1) thread #11 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 9 to topic XYZ }}
{{INFO  Camel (camel-1) thread #12 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 10 to topic XYZ }}
{{INFO  Camel (camel-1) thread #13 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 11 to topic XYZ }}
{{INFO  Camel (camel-1) thread #14 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 12 to topic XYZ }}
{{INFO  Camel (camel-1) thread #15 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 13 to topic XYZ }}
{{INFO  Camel (camel-1) thread #16 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 14 to topic XYZ}}

 

If server stops responding due to network issue or any other scenario when the server is unavailable, then all the kafka consumers starts unsubscribing which is again an expected behavior (so far good)

Note: We have defined the Camel
{code:java}
ThrottlingExceptionRoutePolicy {code}
which does a health check call on the server before sending the consumed message.
 Once the server is back and available, *I see that not all 15 consumer threads are active*, but only 1 (*I guess this is the default value*). 

From the logs below, I observe that the consumerss are getting subscribed and unsubscribed one by one from the topic and finally the application runs with only a single consumer count. This is really strange to see.

{{INFO  Camel (camel-1) thread #17 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 0 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}

{{auto.commit.interval.ms = 5000 }}
{{auto.offset.reset = latest }}
{{bootstrap.servers = [ListOfDefinedServers] }}
{{check.crcs = true }}
{{client.id =  }}
{{connections.max.idle.ms = 540000 }}
{{enable.auto.commit = false }}
{{exclude.internal.topics = true }}
{{fetch.max.bytes = 52428800 }}
{{fetch.max.wait.ms = 500 }}
{{fetch.min.bytes = 1 }}
{{group.id = XYZ-GroupId-12345 }}
{{heartbeat.interval.ms = 3000 }}
{{interceptor.classes = null }}
{{internal.leave.group.on.close = true }}
{{isolation.level = read_uncommitted }}
{{key.deserializer = class 
org.apache.kafka.common.serialization.StringDeserializer }}
{{max.partition.fetch.bytes = 1048576 }}
{{max.poll.interval.ms = 300000 }}
{{max.poll.records = 500 }}
{{metadata.max.age.ms = 5000 }}
{{metric.reporters = [] metrics.num.samples = 2 }}
{{metrics.recording.level = INFO }}
{{metrics.sample.window.ms = 30000}}
{{partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor] }}
{{receive.buffer.bytes = 65536 }}
{{reconnect.backoff.max.ms = 1000 }}
{{reconnect.backoff.ms = 50 }}
{{request.timeout.ms = 40000 }}
{{retry.backoff.ms = 100 }}
{{sasl.jaas.config = null }}
{{sasl.kerberos.kinit.cmd = /usr/bin/kinit }}
{{sasl.kerberos.min.time.before.relogin = 60000 }}
{{sasl.kerberos.service.name = null sasl.kerberos.ticket.renew.jitter = 0.05 sasl.kerberos.ticket.renew.window.factor = 0.8 sasl.mechanism = GSSAPI security.protocol = SSL send.buffer.bytes = 131072 session.timeout.ms = 10000 ssl.cipher.suites = null ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1] ssl.endpoint.identification.algorithm = HTTPS ssl.key.password = [hidden] ssl.keymanager.algorithm = SunX509 ssl.keystore.location = cert.jks ssl.keystore.password = [hidden] ssl.keystore.type = JKS ssl.protocol = TLS ssl.provider = null ssl.secure.random.implementation = null ssl.trustmanager.algorithm = PKIX ssl.truststore.location = cert.jks ssl.truststore.password = [hidden] ssl.truststore.type = JKS value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer }}

{{INFO  Camel (camel-1) thread #17 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 0 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined INFO  Camel (camel-1) thread #18 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 1 to topic XYZ INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined INFO  Camel (camel-1) thread #18 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 1 from topic XYZ }}

{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}

{{INFO  Camel (camel-1) thread #19 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 2 to topic XYZ }}

{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}

{{INFO  Camel (camel-1) thread #19 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 2 from topic XYZ }}

{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}

{{INFO  Camel (camel-1) thread #20 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 3 to topic XYZ }}

{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}

{{INFO  Camel (camel-1) thread #20 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 3 from topic XYZ}}
INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined

{{INFO  Camel (camel-1) thread #21 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 4 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #21 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 4 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #22 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 5 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #22 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 5 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #23 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 6 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #23 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 6 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #24 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 7 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #24 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 7 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #25 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 8 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #25 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 8 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #26 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 9 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #26 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 9 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #27 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 10 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #27 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 10 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #28 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 11 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #28 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 11 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #29 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 12 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #29 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 12 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #30 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 13 to topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #30 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:351)] Unsubscribing XYZ-Thread 13 from topic XYZ }}
{{INFO  [kafka.clients.consumer.ConsumerConfig(logAll:238)] ConsumerConfig values: Prints all the consumer config values defined/undefined }}
{{INFO  Camel (camel-1) thread #31 - KafkaConsumer[XYZ] [camel.component.kafka.KafkaConsumer(doRun:222)] Subscribing XYZ-Thread 14 to topic XYZ INFO  Camel (camel-1) thread #31 - KafkaConsumer[XYZ] [clients.consumer.internals.AbstractCoordinator(info:341)] [Consumer clientId=consumer-30, groupId=XYZ-GroupId-12345] Discovered group coordinator servername (id: 2147482644 rack: null) INFO  Camel (camel-1) thread #31 - KafkaConsumer[XYZ] [clients.consumer.internals.ConsumerCoordinator(info:341)] [Consumer clientId=consumer-30, groupId=XYZ-GroupId-12345] Revoking previously assigned partitions [] INFO  Camel (camel-1) thread #31 - KafkaConsumer[XYZ] [clients.consumer.internals.AbstractCoordinator(info:336)] [Consumer clientId=consumer-30, groupId=XYZ-GroupId-12345] (Re-)joining group INFO  Camel (camel-1) thread #31 - KafkaConsumer[XYZ] [clients.consumer.internals.AbstractCoordinator(info:341)] [Consumer clientId=consumer-30, groupId=XYZ-GroupId-12345] Successfully joined group with generation 1 INFO  Camel (camel-1) thread #31 - KafkaConsumer[XYZ] [clients.consumer.internals.ConsumerCoordinator(info:341)] [Consumer clientId=consumer-30, groupId=XYZ-GroupId-12345] Setting newly assigned partitions [XYZ-17, XYZ-19, XYZ-13, XYZ-15, XYZ-25, XYZ-27, XYZ-21, XYZ-23, XYZ-1, XYZ-3, XYZ-28, XYZ-9, XYZ-11, XYZ-5, XYZ-7, XYZ-16, XYZ-18, XYZ-12, XYZ-14, XYZ-24, XYZ-26, XYZ-20, XYZ-22, XYZ-0, XYZ-2, XYZ-29, XYZ-8, XYZ-10, XYZ-4, XYZ-6]}}

 

How to fix this issue ?

 ",,acosentino,davsclaus,srikant_mantha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 05 09:55:51 UTC 2019,,,,,,,,,,,"0|z06ysg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Sep/19 14:32;acosentino;camel 2.22.0 is EOL, there won't be any new release. Please try with a new one 2.23.4 or 2.24.2.

Also this looks more something to ask on the dev mailing list.;;;","24/Sep/19 14:33;acosentino;please don't change the priority.;;;","24/Sep/19 14:41;acosentino;stop changing the priority. This is not critical;;;","24/Sep/19 14:44;acosentino;Why are you so disrespectful for the community members managing this JIRA? Stop changing the priority of this issue and read the comments here. This is not a critical bug.;;;","24/Sep/19 14:51;acosentino;Do as you wish. This is not the way to approach a community.;;;","24/Sep/19 15:00;srikant_mantha;Okay, I was modifying the content, didn't see your comments on the priority. I will try with the latest camel-kafka version;;;","24/Sep/19 15:08;srikant_mantha;I have already put this in the dev mailing list, but haven't heard anything from them yet. Moreover, this looks to be a Camel Kafka Consumer Internal stuff where its defaulting the consumer count to 1 on failure. So, I thought its better to ask in this community.;;;","24/Sep/19 15:29;acosentino;I don't know if you mean the kafka dev mailing list, I'm talking about the camel dev mailing list. To reproduce this by the way it would be good to have a project showing the behavior.;;;","24/Sep/19 15:50;srikant_mantha;I have requested access to post in camel dev mail list. Let me see;;;","01/Oct/19 10:37;davsclaus;Are you not seeing an exception or any kind of errors when the server connection is failing? The logic in camel-kafka is that it ought to log these and then do a re-connection in the consumer thread.

Also you dont see any logs with Reconnecting?

And can you try with a newer Camel version as 2.22 is EOL.;;;","01/Oct/19 12:58;srikant_mantha;[~davsclaus] As mentioned in my description, I see only the above logs from camel kafka after enabling the debug logs where its trying to subscribe and then again unsubscribes and finally runs with a single thread. 
I am trying to reproduce the same issue by creating a new project so that the group can see the issue better.;;;","07/Oct/19 21:03;srikant_mantha;[~acosentino] As requested, Please find the below 3 projects that I have created to reproduce the issue.

https://github.com/srikant-mvs/SimpleRestInterface : Dummy Server application listening to endpoints
https://github.com/srikant-mvs/SimpleCamelKafkaProducer : Send message to kafka
https://github.com/srikant-mvs/SimpleCamelKafkaConsumer : Consumer application where the issue exists;;;","08/Oct/19 10:13;acosentino;Thanks for the reproducer.;;;","15/Oct/19 08:24;srikant_mantha;[~acosentino] Were you able to see the reproduced error. Any inputs for me ?;;;","15/Oct/19 08:39;acosentino;I have no time actually. But it's here, for anyone who aim to help.;;;","05/Nov/19 09:33;srikant_mantha;[~acosentino] [~davsclaus] The issue seem to be resolved after using Camel 3 version latest jar. Can you tell when would the feature release be available to use ?;;;","05/Nov/19 09:44;acosentino;There are already release candidate out for this. The last one is RC3. The final release should be before the end of November.;;;","05/Nov/19 09:55;srikant_mantha;[~acosentino]  Thanks for the information;;;",,,,,,,,,,,,,,,,,,,,,,,,,
camel-as2 - AS2 Connection can only handle one connection (connection recovery needed),CAMEL-14008,13258475,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,,sbraus,sbraus,24/Sep/19 08:09,30/Jan/23 08:59,13/Jul/23 08:32,18/Jan/23 13:02,2.24.2,3.x,,,,,,,,,,3.21.0,4.0.0,4.0-M1,,,,camel-as2,,,,1,,,,,"This bug was originally found by: [~EMBEE]

 

The AS2 component creates one HTTP connection with the other party. If nothing happens for a while and the other party decides to close down the connection the component does not attempt to create a new session.

 

This bug was found by running the program a few hours and when a new message was to be send the connection was already closed down by the other party.

 

The component should create a new connection with the other party.

 ",OSGI with Karaf,acosentino,davsclaus,sbraus,,,,"Braus commented on pull request #3188: CAMEL-14008 changed HTTPConnection to a HttpConnectionPool
URL: https://github.com/apache/camel/pull/3188
 
 
   With the help of @Maurice-Betzel 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Sep/19 14:52;githubbot;600","Braus commented on pull request #3188: CAMEL-14008 changed HTTPConnection to a HttpConnectionPool
URL: https://github.com/apache/camel/pull/3188
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 06:50;githubbot;600","Braus commented on pull request #3192: CAMEL-14008 added http connection pooling 
URL: https://github.com/apache/camel/pull/3192
 
 
   with the help of Maurice Betzel
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 09:00;githubbot;600","davsclaus commented on pull request #3192: CAMEL-14008 added http connection pooling 
URL: https://github.com/apache/camel/pull/3192
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Dec/19 08:31;githubbot;600",,,,,,,,,,,57600,55200,2400,4%,57600,55200,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 04 19:57:11 UTC 2021,,,,,,,,,,,"0|z06y7c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Sep/19 08:14;acosentino;You're welcome to work on a patch.;;;","04/Oct/21 19:57;davsclaus;We can maybe use http connection pooling which supports to test the connection and re-create if fails, such as commons-pools or something.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-aws-sqs: amazonAWSHost is not honored when listing the queues,CAMEL-14002,13257947,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,orpiske,orpiske,20/Sep/19 13:05,30/Sep/21 10:34,13/Jul/23 08:32,29/Sep/19 14:41,3.0.0,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-aws,,,,0,,,,,"When a AWS-SQS component is setup to use a different host via the amazonAWSHost property, this host is not honored during the initial listing of the queues. Instead the component list tries to list the queues using the default amazon AWS host which. As a result this causes the component to fail the initialization and may prevent using camel with local/non-public instances of AWS SQS hosts. 

Here's a log snippet taken from a code that configures the AWS-SQS URL as:
{code:java}
aws-sqs://ckc?accessKey=accesskey&amazonAWSHost=localhost%3A33715&autoCreateQueue=false 
{code}
 

This is what is printed on the logs:
{code:java}
2019-09-20 14:27:34,058 [ool-11-thread-1] DEBUG org.apache.http.wire - http-outgoing-2 >> ""POST / HTTP/1.1[\r][\n]""2019-09-20 14:27:34,058 [ool-11-thread-1] DEBUG org.apache.http.wire - http-outgoing-2 >> ""Host: sqs.us-east-1.amazonaws.com[\r][\n]""{code}
 

 ",,orpiske,valdar,,,,,"orpiske commented on pull request #3201: Fix CAMEL-14002
URL: https://github.com/apache/camel/pull/3201
 
 
   @oscerd this is related to the issue we discussed last week. When the amazonAWSHost is provided, the application still tries to use a default host when trying to list the queues (as explained on the ticket).
   
   I am sending this an preview to collect some feedback and further adjust the PR according to the project standards.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Sep/19 12:39;githubbot;600","oscerd commented on pull request #3201: Fix CAMEL-14002
URL: https://github.com/apache/camel/pull/3201
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Sep/19 14:40;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 20 13:08:41 UTC 2019,,,,,,,,,,,"0|z06uyg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Sep/19 13:08;orpiske;I'll send a PR for this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Salesforce Component IDLE_TIMEOUT Blocks Async Request Responses for 2.x,CAMEL-13999,13257858,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,hemangajmera,hemangajmera,20/Sep/19 06:41,07/Oct/19 05:42,13/Jul/23 08:32,01/Oct/19 08:34,2.23.0,,,,,,,,,,,2.24.3,2.25.0,,,,,camel-salesforce,,,,0,camel-salesforce,httpclient,salesforce,,"Bulk, Composite Batch, etc. all throw an exception when trying to return on more than a few records due to [static final IDLE_TIMEOUT|https://github.com/apache/camel/blob/master/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceComponent.java#L80] on the instantiated salesforce component httpClient:

 

Caused by: org.apache.camel.component.salesforce.api.SalesforceException: Unexpected error \{0:null} executing \{POST:https://genericSFDCInstance.salesforce.com/services/data/v38.0/composite/batch}
        at org.apache.camel.component.salesforce.internal.client.AbstractClientBase$1.onComplete(AbstractClientBase.java:199) ~[camel-salesforce-2.23.0.jar:2.23.0]
        at org.eclipse.jetty.client.ResponseNotifier.notifyComplete(ResponseNotifier.java:202) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.ResponseNotifier.notifyComplete(ResponseNotifier.java:194) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpReceiver.terminateResponse(HttpReceiver.java:470) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpReceiver.abort(HttpReceiver.java:552) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpChannel.abortResponse(HttpChannel.java:156) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpChannel.abort(HttpChannel.java:149) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpExchange.abort(HttpExchange.java:257) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpConversation.abort(HttpConversation.java:141) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpRequest.abort(HttpRequest.java:767) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.http.HttpConnectionOverHTTP.abort(HttpConnectionOverHTTP.java:204) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.http.HttpConnectionOverHTTP.close(HttpConnectionOverHTTP.java:190) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.http.HttpConnectionOverHTTP.onIdleExpired(HttpConnectionOverHTTP.java:145) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.ssl.SslConnection.onIdleExpired(SslConnection.java:286) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.AbstractEndPoint.onIdleExpired(AbstractEndPoint.java:401) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.IdleTimeout.checkIdleTimeout(IdleTimeout.java:166) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.IdleTimeout$1.run(IdleTimeout.java:50) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
        ... 1 more


*Caused by: java.util.concurrent.TimeoutException: Idle timeout 5000 ms*
        at org.eclipse.jetty.client.http.HttpConnectionOverHTTP.onIdleExpired(HttpConnectionOverHTTP.java:145) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.ssl.SslConnection.onIdleExpired(SslConnection.java:286) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.AbstractEndPoint.onIdleExpired(AbstractEndPoint.java:401) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.IdleTimeout.checkIdleTimeout(IdleTimeout.java:166) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.IdleTimeout$1.run(IdleTimeout.java:50) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
        ... 1 more

 

Note that as IDLE_TIMEOUT is static, it cannot be set via Spring, and the httpClientProperties map is [never used to set any timeouts|https://github.com/apache/camel/blob/master/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceComponent.java#L714], instead opting to take the [hardcoded defaults|https://github.com/apache/camel/blob/master/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceComponent.java#L707].

 ",,davsclaus,hemangajmera,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13796,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 07 05:42:56 UTC 2019,,,,,,,,,,,"0|z06ueo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Sep/19 06:42;hemangajmera;Can this fix be backported to version 2.x. We are still not ready to move production to version 3.x;;;","20/Sep/19 07:54;davsclaus;Would be good if you can provide the PR for this yourself and we can review and get it merged.;;;","07/Oct/19 05:42;hemangajmera;Thanks! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProxyProtocolTest not releasing acquired ByteBuf,CAMEL-13997,13257663,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,19/Sep/19 12:58,19/Sep/19 13:04,13/Jul/23 08:32,19/Sep/19 13:04,3.0.0.RC1,,,,,,,,,,,3.0.0.RC2,,,,,,camel-netty-http,,,,0,,,,,Seems that I've forgotten to release a {{ByteBuf}} used in the {{uppercase}} processor in the {{ProxyProtocolTest}}. Also Since {{ProxyProtocolTest}} doesn't inherit {{BaseNettyTest}} it doesn't contain the {{@BeforeClass}} or {{@AfterClass}} hooks for verifying the reference counting.,,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-19 12:58:47.0,,,,,,,,,,,"0|z06t7c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
listPods operation of kubernetes component dont support namespace option,CAMEL-13994,13257420,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,imranrazakhan,imranrazakhan,18/Sep/19 16:08,19/Sep/19 07:19,13/Jul/23 08:32,19/Sep/19 07:19,2.24.1,,,,,,,,,,,2.25.0,3.0.0,3.0.0.RC2,,,,camel-kubernetes,,,,0,,,,,"listPods operation dont support namespace option, i tried both by header and inline parameter

.setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, simple(""my-qa""))
 .toF(""kubernetes-pods://%s?oauthToken=%s&trustCerts=true&namespace=my-qa&operation=listPods"", host, authToken)
 .process(new ListPods())
 .to(""log:my?showAll=true&multiline=true"");

 

it shows list of all pods but i only want for my-qa namespace.

 

i check code of

[https://github.com/apache/camel/blob/camel-2.x/components/camel-kubernetes/src/main/java/org/apache/camel/component/kubernetes/pods/KubernetesPodsProducer.java]

and at line number 95

protected void doList(Exchange exchange, String operation) throws Exception {
 PodList podList = getEndpoint().getKubernetesClient().pods().inAnyNamespace().list();

 

its calling inAnyNamespace(), it should use inNamespace("""") and if not mention then inAnyNamespace

 ",,imranrazakhan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-18 16:08:57.0,,,,,,,,,,,"0|z06rpc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-main - Configuring component options with #class dont work,CAMEL-13991,13257299,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,18/Sep/19 07:21,18/Sep/19 08:21,13/Jul/23 08:32,18/Sep/19 08:21,3.0.0.RC1,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-core,,,,0,,,,,The fast component configurer is in use before we check whether the value is a #class etc which we need to do beforehand,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-18 07:21:49.0,,,,,,,,,,,"0|z06qyg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expired certificates and outdated keys in test keystores,CAMEL-13987,13257110,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,17/Sep/19 12:45,19/Sep/19 09:07,13/Jul/23 08:32,19/Sep/19 09:07,3.0.0.RC1,,,,,,,,,,,3.0.0.RC2,,,,,,,,,,0,,,,,We seem to have a number of older keystores containing certificates that have expired or use outdated algorithms (like DSA). I see locally some tests fail because of this. I think the easiest option could be to replace them with newer keystores.,,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 19 09:07:36 UTC 2019,,,,,,,,,,,"0|z06pt4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Sep/19 09:07;zregvart;I think I found the most of the outdated ones. There still could be others that I'm not aware of. Closing for not.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Daily Karaf builds failing,CAMEL-13981,13256865,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,16/Sep/19 12:25,16/Sep/19 15:13,13/Jul/23 08:32,16/Sep/19 15:13,,,,,,,,,,,,3.0.0.RC2,,,,,,build system,,,,0,,,,,"Seems that the [daily Karaf builds|https://builds.apache.org/view/C/view/Apache%20Camel/job/camel.daily.karaf/] are failing for some time now. Oddly the generated Java source by the annotation processor {{DefinitionPropertyPlaceholderConfigurer.java}} is not generated while the seemingly exactly the same build for {{master}} (without Karaf integration tests) is.",,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 16 14:28:36 UTC 2019,,,,,,,,,,,"0|z06oao:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Sep/19 12:26;zregvart;I can't reproduce the issue locally. Perhaps we can add more verbose logging to the annotation processor to try to track down the issue.;;;","16/Sep/19 14:28;zregvart;With the logging on the Karaf daily build the output is this:
{code}
[INFO] --- maven-compiler-plugin:3.8.0:compile (default-compile) @ camel-core ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 449 source files to /home/jenkins/jenkins-slave/workspace/camel.daily.karaf/core/camel-core/target/classes

[INFO] -------------------------------------------------------------
[WARNING] COMPILATION WARNING : 
[INFO] -------------------------------------------------------------
[WARNING] Found 197 elements annotated with XmlRootElement
[WARNING] Found 197 core elements
[WARNING] Found 0 spring elements
[WARNING] Found 0 elements annotated with XmlRootElement
[WARNING] Found 0 core elements
[WARNING] Found 0 spring elements
[INFO] 6 warnings 
[INFO] -------------------------------------------------------------
[INFO] -------------------------------------------------------------
[ERROR] COMPILATION ERROR : 
[INFO] -------------------------------------------------------------
[ERROR] /home/jenkins/jenkins-slave/workspace/camel.daily.karaf/core/camel-core/src/main/java/org/apache/camel/model/DefinitionPropertyPlaceholderConfigurer.java:[24,41] error: cannot find symbol
  symbol:   class DefinitionPropertiesPlaceholderProviderHelper
  location: package org.apache.camel.model.placeholder
[INFO] 1 error
[INFO] -------------------------------------------------------------
{code}

On my machine this is:
{code}
[INFO] --- maven-compiler-plugin:3.8.0:compile (default-compile) @ camel-core ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 449 source files to /home/zregvart/tmp/camel/core/camel-core/target/classes
[WARNING] Found 197 elements annotated with XmlRootElement
[WARNING] Found 197 core elements
[WARNING] Found 0 spring elements
[WARNING] Generating placeholder definitions helper for 144 definitions
[WARNING] Found 0 elements annotated with XmlRootElement
[WARNING] Found 0 core elements
[WARNING] Found 0 spring elements
[INFO] ------------------------------------------------------------------------
{code}

Seems that the {{processModelClass}} method does not generate the {{DefinitionPropertiesPlaceholderProviderHelper.java}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow AS2 Component to reply disposition type failed in the MDN,CAMEL-13976,13256512,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,EMBEE,EMBEE,13/Sep/19 11:56,23/Sep/19 09:46,13/Jul/23 08:32,14/Sep/19 13:35,2.24.2,3.0.0.RC1,,,,,,,,,,2.25.0,3.0.0,3.0.0.RC2,,,,camel-as2,,,,0,,,,,"If on the receiving side of the AS2 request the payload processing fails, no MDN at all is returned. Add an option for returning a MDN with the Disposition type: Failed.",,EMBEE,,,,,,"Maurice-Betzel commented on pull request #3170: CAMEL-13976: added disposition type Failed
URL: https://github.com/apache/camel/pull/3170
 
 
   Allow AS2 Component to reply disposition type failed in the MDN
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/19 12:20;githubbot;600","oscerd commented on pull request #3170: CAMEL-13976: added disposition type Failed
URL: https://github.com/apache/camel/pull/3170
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/19 13:33;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-13 11:56:04.0,,,,,,,,,,,"0|z06m48:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid SpringBootAutoConfiguration for a component when you have a configuration with long class name,CAMEL-13969,13256131,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,omarsmak,omarsmak,omarsmak,11/Sep/19 14:45,17/Sep/19 10:11,13/Jul/23 08:32,17/Sep/19 10:11,3.0.0.RC1,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,tooling,,,,0,,,,,"When you have a property configuration in a component with class name longer than `40` character, the generated `[Component]NestedConfiguration` will contain a space character because of the wrap cut in the maven plugin to replace it with a new space and therefore the generated type name will contain a space which is invalid",,omarsmak,,,,,,"omarsmak commented on pull request #3164: CAMEL-13969: Remove watermark on Classname when generated inner configuration class name
URL: https://github.com/apache/camel/pull/3164
 
 
   Per https://issues.apache.org/jira/browse/CAMEL-13969, this shall fix the naming in a long class names. Note I didn't remove `getShortJavaType(int watermark)` as I _think_ it being used in the `mvel` templates
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 16:03;githubbot;600","oscerd commented on pull request #3164: CAMEL-13969: Remove watermark on Classname when generating inner configuration class name
URL: https://github.com/apache/camel/pull/3164
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/19 10:11;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-11 14:45:42.0,,,,,,,,,,,"0|z06jrk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AS2 component treats http headers case sensitive. According to RFC this should be case insensitive,CAMEL-13968,13256115,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,sbraus,sbraus,11/Sep/19 13:26,19/Sep/19 07:22,13/Jul/23 08:32,19/Sep/19 07:22,2.24.1,3.0.0.RC1,,,,,,,,,,2.25.0,3.0.0.RC2,,,,,camel-as2,,,,1,as2,content-type,http-headers,patch,"The AS2 component treats headers case-sensitive according to the switch case enum's. According to the RFC this should be case-insensitive: [https://tools.ietf.org/html/rfc7230#section-3.2] 

Headers should be treated case insensitive. 

This happens at:

package org.apache.camel.component.as2.api.entity.EntityParser;

in the method: parseMultipartSignedEntityBody
 at line: 487. Specifically the following lines:

lines: 523,526 and in the switch block that follows

 ",,acosentino,EMBEE,sbraus,,,,"Maurice-Betzel commented on pull request #3167: CAMEL-13968: resolved HTTP header case sensitivity while parsing
URL: https://github.com/apache/camel/pull/3167
 
 
   CAMEL-13968: resolved HTTP header case sensitivity while parsing
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Sep/19 11:56;githubbot;600","Maurice-Betzel commented on pull request #3169: CAMEL-13968: resolved HTTP header case sensitivity while parsing
URL: https://github.com/apache/camel/pull/3169
 
 
   PR against Master
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/19 08:23;githubbot;600","Maurice-Betzel commented on pull request #3167: CAMEL-13968: resolved HTTP header case sensitivity while parsing
URL: https://github.com/apache/camel/pull/3167
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/19 12:12;githubbot;600","oscerd commented on pull request #3169: CAMEL-13968: resolved HTTP header case sensitivity while parsing
URL: https://github.com/apache/camel/pull/3169
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/19 13:33;githubbot;600",,,,,,,,,,,14400,12000,2400,16%,14400,12000,2400,,,,,,,,,,,,,,,,,,,,,"11/Sep/19 13:25;sbraus;EntityParser.java;https://issues.apache.org/jira/secure/attachment/12980089/EntityParser.java",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Sep 14 14:26:23 UTC 2019,,,,,,,,,,,"0|z06jo0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/Sep/19 14:26;acosentino;Can you create a PR for camel-2.x? Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to change body of the message in Netty-HTTP when proxying,CAMEL-13966,13256043,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,11/Sep/19 07:34,11/Sep/19 08:22,13/Jul/23 08:32,11/Sep/19 08:22,3.0.0.RC1,,,,,,,,,,,3.0.0.RC2,,,,,,camel-netty-http,,,,0,,,,,When proxying via Netty-HTTP the body of the message can't be modified as the DefaultNettyHttpBinding reuses the HTTP request with body from the received request when acting as a HTTP proxy.,,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 11 08:22:33 UTC 2019,,,,,,,,,,,"0|z06j80:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Sep/19 08:22;zregvart;Refactored a bit not to keep the origin request in Exchange property and check if the message still contains the origin request and tries to reuse it only for that case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OgnlHelper.splitOgnl not able to handle Regex properly,CAMEL-13962,13255903,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,paetzold.michael@gmail.com,paetzold.michael@gmail.com,10/Sep/19 14:18,06/Feb/22 09:48,13/Jul/23 08:32,14/Sep/19 14:04,2.24.1,3.0.0.RC1,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-core,,,,0,,,,,"The splitOgnl method cannot properly handle an expression if it contains numerous paranthesis brackets and dots what is very likely in case you want to use regular expressions.

The following examples tries to extract a specific cookie value from the cookie string that's contained within the headers:

{code:java}
    @Test
    public void splitOgnlWithRegexInMethod() {
        String ognl = ""header.cookie.replaceFirst(\"".*;?iwanttoknow=([^;]+);?.*\"", \""$1\"")"";
        assertFalse(OgnlHelper.isInvalidValidOgnlExpression(ognl));
        assertTrue(OgnlHelper.isValidOgnlExpression(ognl));

        List<String> strings = OgnlHelper.splitOgnl(ognl);
        assertEquals(3, strings.size());
        assertEquals(""header"", strings.get(0));
        assertEquals("".cookie"", strings.get(1));
        assertEquals("".replaceFirst(\"".*;?iwanttoknow=([^;]+);?.*\"", \""$1\"")"", strings.get(2));
    }
{code}

The test fails using the current code base since the regular expression itself is split at the first dot after the first closing paranthesis bracket.

If you'll agree that this is a bug I can come up with a possible solution that takes the amount of opening/closing brackets into account via PR.",,paetzold.michael@gmail.com,,,,,,"mpaetzold commented on pull request #3165: CAMEL-13962: keep track of brackets that belong to a method in order …
URL: https://github.com/apache/camel/pull/3165
 
 
   … to prevent false method splitting
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Sep/19 08:34;githubbot;600","oscerd commented on pull request #3165: CAMEL-13962: keep track of brackets that belong to a method in order …
URL: https://github.com/apache/camel/pull/3165
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/19 14:04;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,CAMEL-17591,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-10 14:18:16.0,,,,,,,,,,,"0|z06icw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reconsider default for xslt:allowStAX,CAMEL-13961,13255887,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,tdiesler,tdiesler,10/Sep/19 13:20,20/Sep/19 06:40,13/Jul/23 08:32,20/Sep/19 06:40,,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-xslt,,,,0,,,,,"This is currently set to true. However, Xalan (which the default XSLT processor for most) cannot handle StAXSource

{code}
Caused by: javax.xml.transform.TransformerException: javax.xml.transform.TransformerException: org.apache.xml.dtm.DTMException: Not supported: javax.xml.transform.stax.StAXSource@6a35603
	at org.apache.xalan.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:642)
	at org.apache.xalan.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:303)
	at org.apache.camel.component.xslt.XsltBuilder.process(XsltBuilder.java:132)
	at org.apache.camel.support.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:95)
	at org.apache.camel.component.xslt.XsltEndpoint.onExchange(XsltEndpoint.java:121)

{code}",,davsclaus,tdiesler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 17 03:59:13 UTC 2019,,,,,,,,,,,"0|z06i9c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Sep/19 03:59;davsclaus;Okay can you provide a PR?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-retained buffer when using Netty-HTTP as proxy,CAMEL-13960,13255863,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,10/Sep/19 11:53,10/Sep/19 11:56,13/Jul/23 08:32,10/Sep/19 11:56,3.0.0.RC1,,,,,,,,,,,3.0.0.RC2,,,,,,camel-netty-http,,,,0,,,,,"As can be seen in the stack trace in the CAMEL-13707, we seem to have a non-retained buffer that's being released.",,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 10 11:56:50 UTC 2019,,,,,,,,,,,"0|z06i40:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Sep/19 11:56;zregvart;Added a retain when re-using the body of the initial request to be passed as the body of the next request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XPathBuilder threadSafe mode should also be enabled when the NodeList contains only 1 item,CAMEL-13958,13255657,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ramu11,jpraet,jpraet,09/Sep/19 14:29,30/Sep/19 08:43,13/Jul/23 08:32,30/Sep/19 08:43,2.24.1,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-saxon,,,,0,,,,,"In CAMEL-10225 the ""threadSafety"" property was added. But looking at the code, it is only enabled when the NodeList contains 2 or more items:

XPathBuilder: [https://github.com/apache/camel/blob/master/components/camel-xpath/src/main/java/org/apache/camel/language/xpath/XPathBuilder.java#L1064]
{code:java}
        if (threadSafety && answer != null && answer instanceof NodeList) {
            try {
                NodeList list = (NodeList)answer;                // when the result is NodeList and it has 2+ elements then its
                // not thread-safe to use concurrently
                // and we need to clone each node and build a thread-safe list
                // to be used instead
                boolean threadSafetyNeeded = list.getLength() >= 2;
                if (threadSafetyNeeded) {
                    answer = new ThreadSafeNodeList(list);
                    if (LOG.isDebugEnabled()) {
                        LOG.debug(""Created thread-safe result from: {} as: {}"", list.getClass().getName(), answer.getClass().getName());
                    }
                }
            } catch (Exception e) {
                throw ObjectHelper.wrapRuntimeCamelException(e);
            }
        }
{code}
But I get the same type of error as mentioned in CAMEL-10225 when my NodeList only contains 1 item:
{code:java}
org.apache.camel.TypeConversionException: Error during type conversion from type: java.lang.String to the required type: java.io.InputStream with value <ssin>84073120992</ssin> due java.lang.NullPointerException
    at org.apache.camel.impl.converter.BaseTypeConverterRegistry.createTypeConversionException(BaseTypeConverterRegistry.java:666)
    at org.apache.camel.impl.converter.BaseTypeConverterRegistry.convertTo(BaseTypeConverterRegistry.java:157)
    at org.apache.camel.impl.MessageSupport.getBody(MessageSupport.java:87)
    at org.apache.camel.impl.MessageSupport.getBody(MessageSupport.java:61)
    at org.apache.camel.builder.xml.XsltBuilder.process(XsltBuilder.java:124)
    at org.apache.camel.impl.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:103)
    at org.apache.camel.component.xslt.XsltEndpoint.onExchange(XsltEndpoint.java:139)
    at org.apache.camel.impl.ProcessorEndpoint$1.process(ProcessorEndpoint.java:71)
    at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148)
    at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548)
    at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:138)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:101)
    at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:76)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148)
    at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548)
    at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:138)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:101)
    at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:76)
    at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548)
    at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
    at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:109)
    at org.apache.camel.processor.MulticastProcessor.doProcessParallel(MulticastProcessor.java:859)
    at org.apache.camel.processor.MulticastProcessor.access$200(MulticastProcessor.java:86)
    at org.apache.camel.processor.MulticastProcessor$1.call(MulticastProcessor.java:330)
    at org.apache.camel.processor.MulticastProcessor$1.call(MulticastProcessor.java:316)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at be.fgov.kszbcss.tracer.concurrent.TracerRunnable.run(TracerRunnable.java:27)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.camel.RuntimeCamelException: java.lang.NullPointerException
    at org.apache.camel.util.ObjectHelper.wrapRuntimeCamelException(ObjectHelper.java:1826)
    at org.apache.camel.util.ObjectHelper.invokeMethod(ObjectHelper.java:1405)
    at org.apache.camel.impl.converter.InstanceMethodTypeConverter.convertTo(InstanceMethodTypeConverter.java:79)
    at org.apache.camel.impl.converter.BaseTypeConverterRegistry.doConvertTo(BaseTypeConverterRegistry.java:325)
    at org.apache.camel.impl.converter.BaseTypeConverterRegistry.convertTo(BaseTypeConverterRegistry.java:140)
    ... 33 more
Caused by: java.lang.NullPointerException
    at com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.clearChunkValue(DeferredDocumentImpl.java:2038)
    at com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeValueString(DeferredDocumentImpl.java:1149)
    at com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.getNodeValueString(DeferredDocumentImpl.java:1134)
    at com.sun.org.apache.xerces.internal.dom.DeferredTextImpl.synchronizeData(DeferredTextImpl.java:96)
    at com.sun.org.apache.xerces.internal.dom.CharacterDataImpl.getData(CharacterDataImpl.java:163)
    at net.sf.saxon.dom.DOMSender.walkNode(DOMSender.java:266)
    at net.sf.saxon.dom.DOMSender.outputElement(DOMSender.java:334)
    at net.sf.saxon.dom.DOMSender.sendElement(DOMSender.java:190)
    at net.sf.saxon.dom.DOMSender.send(DOMSender.java:101)
    at net.sf.saxon.dom.DOMObjectModel.sendDOMSource(DOMObjectModel.java:282)
    at net.sf.saxon.dom.DOMObjectModel.sendSource(DOMObjectModel.java:264)
    at net.sf.saxon.event.Sender.send(Sender.java:207)
    at net.sf.saxon.jaxp.IdentityTransformer.transform(IdentityTransformer.java:366)
    at org.apache.camel.converter.jaxp.XmlConverter.toResult(XmlConverter.java:146)
    at org.apache.camel.converter.jaxp.XmlConverter.toResult(XmlConverter.java:125)
    at org.apache.camel.converter.jaxp.XmlConverter.toString(XmlConverter.java:248)
    at org.apache.camel.converter.jaxp.XmlConverter.toString(XmlConverter.java:292)
    at org.apache.camel.converter.jaxp.DomConverter.toString(DomConverter.java:105)
    at org.apache.camel.converter.jaxp.DomConverter.toString(DomConverter.java:74)
    at org.apache.camel.converter.jaxp.DomConverter.toByteArray(DomConverter.java:144)
    at org.apache.camel.converter.jaxp.DomConverter.toInputStream(DomConverter.java:139)
    at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.apache.camel.util.ObjectHelper.invokeMethod(ObjectHelper.java:1401)
    ... 36 more
{code}",,davsclaus,jpraet,ramu11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 30 06:42:08 UTC 2019,,,,,,,,,,,"0|z06gu8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"30/Sep/19 03:45;davsclaus;Ramu, are you working on this?;;;","30/Sep/19 06:42;ramu11;[~davsclaus]  yup, will work ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dead link from Writing components documentation page,CAMEL-13957,13255561,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,apupier,apupier,09/Sep/19 07:41,01/Oct/19 08:09,13/Jul/23 08:32,01/Oct/19 08:09,,,,,,,,,,,,3.0.0.RC2,,,,,,documentation,website,,,0,help-wanted,,,,"from [https://camel.apache.org/manual/latest/writing-components.html there are several dead links:|https://camel.apache.org/manual/latest/writing-components.html]
 * Component [http://activemq.apache.org/camel/maven/current/camel-core/apidocs/org/apache/camel/Component.html]
 * DefaultComponent [http://activemq.apache.org/camel/maven/current/camel-core/apidocs/org/apache/camel/impl/DefaultComponent.html]
 * CamelContext [http://camel.apache.org/maven/current/camel-core/apidocs/org/apache/camel/CamelContext.html]
 * createProducer() [http://camel.apache.org/maven/current/camel-core/apidocs/org/apache/camel/Endpoint.html#createProducer()]
 * and not checked after that",,alexkieling,apupier,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 26 20:49:43 UTC 2019,,,,,,,,,,,"0|z06g8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Sep/19 10:46;zregvart;Near the top right there's a ""Edit this Page"" link that takes directly to the GitHub editor to edit that document. Contributions welcome.;;;","13/Sep/19 17:40;alexkieling;Are the files with broken links available somewhere else?;;;","26/Sep/19 13:27;alexkieling;[~zregvart] shall we change the current Javadoc URLs to [https://www.javadoc.io/doc/org.apache.camel/camel-core/3.0.0-RC1]?;;;","26/Sep/19 20:49;zregvart;I would try to avoid linking to a particular version because we'd have to remember to update it each time we release. Would be nicer to tie it to a version via [component versions|https://docs.antora.org/antora/2.1/component-versions/], the issue there is that we build with the version {{latest}} and there's no such version on javadoc.io.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileDataSet does not support a single file larger than 1024 bytes,CAMEL-13956,13255524,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,,bradhgbst,bradhgbst,08/Sep/19 23:10,17/Sep/19 04:57,13/Jul/23 08:32,17/Sep/19 04:06,2.24.0,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,,,,,0,,,,,"Using dataset with a FileDataSet configured with a single file - new FileDataSet(filename) - doesn't work as expected if the file is more than 1024 bytes.

Expected result: The whole file is used as the dataset source.

Actual result: The file gets split into multiple messages at 1024 byte boundaries.

 ",,bradhgbst,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 17 04:57:55 UTC 2019,,,,,,,,,,,"0|z06g0o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Sep/19 00:54;bradhgbst;I suspect the java.util.Scanner doesn't expand it's 1024 byte buffer with the regular expression that FileDataSet gives it (""z"" - end of input).

 ;;;","17/Sep/19 04:06;davsclaus;Yeah there is also a SO about this
https://stackoverflow.com/questions/22350037/behavior-of-using-z-vs-z-as-scanner-delimiter;;;","17/Sep/19 04:06;davsclaus;You are welcome to work on a PR for camel 2.x branch;;;","17/Sep/19 04:57;bradhgbst;Thanks Claus.  Resolving in 3.0.0 only is ok for my needs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generated property configurator is using wrong method on endpoint (camel-file-watch component),CAMEL-13954,13255351,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,tiaede00,tiaede00,06/Sep/19 19:32,12/Sep/19 06:04,13/Jul/23 08:32,12/Sep/19 06:04,3.0.0.RC1,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,,,,,0,,,,,"Hi, I'am very new at Camel and I've being trying to use the component camel-file-watch (version:3.0.0-RC1).
When I set thing up with spring-boot, it does not seem to dectect file systems events.
With a little investigation, I found that the property conversion of events from the uri scheme (file-watch://some-directory?events=DELETE,CREATE) to the endpoint is calling

(FileWatchEndpoint.java)
public void setEvents(Set<FileEventEnum> events) {
this.events = events;
}

Instead of

(FileWatchEndpoint.java)
@SuppressWarnings(""unused"") //called via reflection
public void setEvents(String commaSeparatedEvents) {
String[] stringArray = commaSeparatedEvents.split("","");
Set<FileEventEnum> eventsSet = new HashSet<>();
for (String event : stringArray) {
eventsSet.add(FileEventEnum.valueOf(event.trim()));
}
events = eventsSet.isEmpty() ? new HashSet<>(Arrays.asList(FileEventEnum.values())) : eventsSet;
}

(FileWatchEndpoint.java) events object declaration

@UriParam(label = ""consumer"",
enums = ""CREATE,MODIFY,DELETE"",
description = ""Comma separated list of events to watch."",
defaultValue = ""CREATE,MODIFY,DELETE"")
private Set<FileEventEnum> events = new HashSet<>(Arrays.asList(FileEventEnum.values()));

Basically the conversion from String to Set<FileEventEnum> fails and the component is calling the first method listed above with Set<String> instead of Set<FileEventEnum>

I got it to work by adding a converter from String to Set<FileEventEnum> but I feel like this should have been taken care of by the component.

Let me know what you think",,davsclaus,omarsmak,tiaede00,,,,"omarsmak commented on pull request #3157: CAMEL-13954: Set file-watch events explicitly instead of relying on relying on the the auto generated property configurator
URL: https://github.com/apache/camel/pull/3157
 
 
   **Scope of changes**
   
   - Due to [CAMEL-13954](https://issues.apache.org/jira/browse/CAMEL-13954), the auto generated property configurator will use the wrong method which is expected due to the param type. However, instead of that, we just set events manually using the correct method.
   - Change junit testing directory from the default to the `target` folder. 
   - Make sure to delete spring testing files after the tests.
   - Add and modify some testing cases 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 08:51;githubbot;600","oscerd commented on pull request #3157: CAMEL-13954: Set file-watch events explicitly instead of relying on relying on the the auto generated property configurator
URL: https://github.com/apache/camel/pull/3157
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Sep/19 06:04;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Sep 08 16:50:22 UTC 2019,,,,,,,,,,,"0|z06ey8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Sep/19 19:39;davsclaus;Yeah it should be fixed in the component, we have done it for others which had a similar issue.;;;","06/Sep/19 19:40;davsclaus;Use a string type to set the events that can support comma separation values. This works the best also with tooling and configuration from sprig boot etc;;;","06/Sep/19 19:45;tiaede00;Right ! Good to know. Thanks for the quick update ;;;","08/Sep/19 16:50;omarsmak;I can work on it [~davsclaus];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-undertow - UnitOfWork should be done after send back response,CAMEL-13942,13254855,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ffang,ffang,ffang,04/Sep/19 19:54,05/Sep/19 13:58,13/Jul/23 08:32,05/Sep/19 13:58,,,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.RC2,,camel-undertow,,,,0,,,,,"since done UoW will close the CachedStream and delete the temp file used by the CachedStream on the Camel Exchange, done UoW too early will cause error when process the response message which still reply on the CachedStream",,davsclaus,ffang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 05 11:26:37 UTC 2019,,,,,,,,,,,"0|z06bw8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"05/Sep/19 07:29;davsclaus;Can you backport this to 2.x branch too;;;","05/Sep/19 11:26;ffang;[~davsclaus], sure, will do;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when Conduit is null,CAMEL-13941,13254711,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,jgreffe,jgreffe,04/Sep/19 13:24,04/Sep/19 17:35,13/Jul/23 08:32,04/Sep/19 17:35,2.20.1,2.21.2,2.23.1,2.24.1,,,,,,,,2.23.4,2.24.2,2.25.0,,,,camel-cxf,,,,0,,,,,"Hello,

the CxfProducer.doStart() retrieves a Conduit.

If this Conduit is null, should we still throw a NullPointerException or, should we check nullity before condition?
{code:java}
Conduit conduit = client.getConduit();

        if (conduit.getClass().getName().endsWith(""JMSConduit"")) {
...
}{code}

https://github.com/apache/camel/blob/camel-2.21.2/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfProducer.java#L87
https://github.com/apache/camel/blob/camel-2.23.1/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfProducer.java#L87
https://github.com/apache/camel/blob/camel-2.24.1/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfProducer.java#L87

Thanks for your point of view.",,davsclaus,jgreffe,,,,,"jgreffe commented on pull request #3142: CAMEL-13941: avoid NullPointerException when Conduit is null
URL: https://github.com/apache/camel/pull/3142
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/19 15:47;githubbot;600","davsclaus commented on pull request #3142: CAMEL-13941: avoid NullPointerException when Conduit is null
URL: https://github.com/apache/camel/pull/3142
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/19 17:32;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 04 17:35:41 UTC 2019,,,,,,,,,,,"0|z06bio:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Sep/19 14:36;davsclaus;Yeah its better with an IllegalStateException or something similar and say that the conduit is null;;;","04/Sep/19 14:37;davsclaus;But how can it be null, how and what do you do since you get a null ?;;;","04/Sep/19 14:50;jgreffe;We're in a case where we use a specific class overriding FailoverTargetSelector.selectConduit()
 [https://github.com/apache/cxf/blob/cxf-3.2.4/rt/features/clustering/src/main/java/org/apache/cxf/clustering/FailoverTargetSelector.java#L132]

At camelContext startup, this endpoint doesn't exist, but we should being able to start the camelContext successfully.

Here is an example :
{code:java}
 <reference id=""locatorFeature"" <reference id=""locatorFeature"" interface=""org.talend.esb.servicelocator.cxf.LocatorFeature"" />
 <cxf:cxfEndpoint id=""customerClient"" wsdlURL=""example.wsdl"" xmlns:tns=""http://www.example.com/"" endpointName=""tns:CustomerServicePort"" serviceName=""tns:CustomerServiceService"" serviceClass=""com.example.CustomerService"" address=""locator://"">
 
<cxf:features>
 <ref component-id=""locatorFeature"" />
 </cxf:features>

 <cxf:properties> <entry key=""schema-validation-enabled"" value=""true"" />
 </cxf:properties>
 </cxf:cxfEndpoint>

 <camelContext id=""BlueprintLocatorContext"" xmlns=""http://camel.apache.org/schema/blueprint"">
 <route id=""blueprintLocatorRoute""> <from uri=""timer:myTimer?period=10s"" />
 <log message=""Scheduled_message"" />
 <transform>
 <simple>111</simple>
 </transform>
 <removeHeaders pattern=""*"" />
 <to uri=""cxf:bean:customerClient?synchronous=true"" />
 </route>

 </camelContext>{code}
When starting, the custom code overrides selectConduit, and we would like to avoid any exception (even if the endpoint isn't available) to have the camelContext starting properly and having a bundle status {{Active}}.

One tested behaviour is returning a null {{Conduit}}, and adding a nullity test on CXF, and have the expected behaviour.

 

Maybe I pointed the wrong place, or our implementation isn't effective?;;;","04/Sep/19 15:02;davsclaus;Ah okay, then I think just a != null check on that would help you. You can try to patch the code and test it and then send a PR to us;;;","04/Sep/19 15:48;jgreffe;[~davsclaus],

PR is here : [https://github.com/apache/camel/pull/3142];;;","04/Sep/19 17:35;davsclaus;Thanks for the PR.

This does not apply to master branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrongly formated date in the news section,CAMEL-13937,13254642,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,04/Sep/19 08:10,04/Sep/19 08:45,13/Jul/23 08:32,04/Sep/19 08:45,,,,,,,,,,,,,,,,,,website,,,,0,,,,,"As reported on the [users mailing list|https://mail-archives.apache.org/mod_mbox/camel-users/201909.mbox/%3CCAJuwR1UFnty3ov%3D-Fr7Ky3rjUJNg1QmS80B5fxB2nHGOGKbvmA%40mail.gmail.com%3E] there's an issue with how the dates are formatted on the news section.",,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-04 08:10:16.0,,,,,,,,,,,"0|z06b3c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-properties: Properties with types different from string are not taken into account,CAMEL-13935,13254417,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,lb,lb,03/Sep/19 15:32,06/Sep/19 16:40,13/Jul/23 08:32,06/Sep/19 16:40,3.0.0.RC1,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-properties,,,,0,,,,,"
The properties component spi has a setOverrideProperties that allow to use an arbitrary Properties object so it is possible that the properties it holds are not of type string. 

In case the properties component is asked to resolve a non string property, then it will fail as DefaultPropertiesLookup uses Properties::getProperty [¹] which returns null in case of the requested property is not of type string.

The error is a little bit misleading as it states: 

{code}
because of PropertiesComponent with name properties must be defined in CamelContext to support property placeholders. Property with key [the.body] not found in properties from text: in.body == {{the.body}}
{code}

[1] https://github.com/apache/camel/blob/master/components/camel-properties/src/main/java/org/apache/camel/component/properties/DefaultPropertiesLookup.java#L40",,davsclaus,lb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 06 16:21:55 UTC 2019,,,,,,,,,,,"0|z06a1s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Sep/19 16:12;davsclaus;So we should make those setInitial / setOverride properties convert their values to string types;;;","06/Sep/19 16:21;davsclaus;Okay I have a fix;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-file - tempFileName directory is not auto-created if it is relative before the endpoint path,CAMEL-13931,13254296,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,derdimi,derdimi,02/Sep/19 20:12,06/Sep/19 19:07,13/Jul/23 08:32,05/Sep/19 07:26,2.22.5,2.23.3,2.24.1,3.0.0.M4,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.RC2,,camel-core,,,,0,pull-request-available,,,,"Hi,

I face a requirement to place temp files in a folder at the same hierarchy as the output folder like this:
 * {{target/data/output/claus.txt}}
 * {{target/data/temp/claus.tmp}}

Using a simple route definition like:
{code:java}
from(""direct:a"").to(""file://target/data/output/?tempFileName=../temp/${file:name.noext}.tmp""){code}
 

If the temp folder does not exist, the GenericFileProducer should auto-create it. However, it only does so correctly for the tempFileName path, if it is *relativ ""after"" the endpoint path*. If it is above/before the endpoint path the tempFileName path will be created as a child of the endpoint path instead:
 * {{target/data/output/target/data/temp}}

This results in a NoSuchFileException when camel tries to write the temp file into the ""correct"" temp directory target/data/temp afterwards.

 

 

A very easy way to reproduce this is to use the 'parentFileUrl' instead of the 'fileUrl' in the createRouteBuilder method of FileProduceTempFileNameTest.java ([https://github.com/apache/camel/blob/master/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceTempFileNameTest.java]).",,davsclaus,derdimi,,,,,"derdimi commented on pull request #3138: CAMEL-13931 tempFileName directory is not auto-created
URL: https://github.com/apache/camel/pull/3138
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Sep/19 22:37;githubbot;600","derdimi commented on pull request #3144: CAMEL-13931 tempFileName directory is not auto-created...
URL: https://github.com/apache/camel/pull/3144
 
 
   ...if it is relative before the endpoint path
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/19 22:47;githubbot;600","davsclaus commented on pull request #3138: CAMEL-13931 tempFileName directory is not auto-created...
URL: https://github.com/apache/camel/pull/3138
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 07:10;githubbot;600","davsclaus commented on pull request #3144: CAMEL-13931 tempFileName directory is not auto-created...
URL: https://github.com/apache/camel/pull/3144
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 07:24;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 06 19:07:33 UTC 2019,,,,,,,,,,,"0|z069aw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Sep/19 22:41;derdimi;I have created a pull request for master and will include a pull request for 2.x later tomorrow.;;;","04/Sep/19 22:48;derdimi;Update: Pull request for 2.x created as well.;;;","05/Sep/19 07:26;davsclaus;Thanks for reporting and the PRs;;;","06/Sep/19 19:07;derdimi;Appreciate it. Thanks for the quick response and straightforward collaboration =);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken links detected by the link validator,CAMEL-13928,13254183,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,02/Sep/19 08:43,02/Sep/19 08:58,13/Jul/23 08:32,02/Sep/19 08:58,,,,,,,,,,,,,,,,,,documentation,website,,,0,,,,,"We have some broken links:
{code:java}
10:16:49  anchor not found from manual/latest/binding.html to manual/latest/binding.html#xref:components::index
10:16:49  anchor not found from manual/latest/event-message.html to manual/latest/event-message.html#xref:components::index
10:16:49  anchor not found from manual/latest/faq.html to manual/latest/faq.html#xref:components::index
10:16:49  anchor not found from manual/latest/servicepool.html to manual/latest/servicepool.html#xref:components::index {code}
as can be seen on the website build: https://builds.apache.org/job/Camel.website/job/master/149/console",,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-02 08:43:02.0,,,,,,,,,,,"0|z068ls:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-DirectVM: failIfNoConsumers option not taken into account when block is enabled,CAMEL-13924,13254153,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,acosentino,acosentino,02/Sep/19 05:25,02/Sep/19 06:18,13/Jul/23 08:32,02/Sep/19 06:18,2.23.3,2.24.1,3.0.0.RC1,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.RC2,,,,,,0,,,,,,,acosentino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-02 05:25:41.0,,,,,,,,,,,"0|z068f4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Producer not useable under camel-blueprint,CAMEL-13921,13254129,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,gnodet,graben,graben,01/Sep/19 18:34,19/Dec/19 17:36,13/Jul/23 08:32,11/Sep/19 07:45,3.0.0.RC1,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,,,,,0,,,,,"The karaf feature actually does not install camel-caffeine-lrucache. With DefaultLRUCache the JMS producer will get stopped causing a java.util.concurrent.RejectedExecutionException at runtime.

This can be reproduced (even non OSGi environment!) if camel-caffeine-lrucache is explicitly excluded in e.g. camel-test.


{noformat}
java.util.concurrent.RejectedExecutionException: null
	at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:139) ~[camel-jms-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:134) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:40) ~[camel-support-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.support.processor.DelegateSyncProcessor.process(DelegateSyncProcessor.java:64) ~[camel-support-3.0.0-RC1.jar:3.0.0-RC1]
	at de.graf.camel.metadata.MetaDataInterceptor$ProcessorImpl.process(MetaDataInterceptor.java:163) ~[classes/:?]
	at org.apache.camel.support.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:93) ~[camel-support-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryState.run(RedeliveryErrorHandler.java:476) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleSync(DefaultReactiveExecutor.java:75) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.scheduleSync(ReactiveExecutor.java:66) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:158) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:146) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:203) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.lambda$null$2(Pipeline.java:104) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.schedule(DefaultReactiveExecutor.java:67) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.schedule(ReactiveExecutor.java:32) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.callback(DefaultReactiveExecutor.java:100) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.lambda$process$0(CamelInternalProcessor.java:183) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:210) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.lambda$process$0(Pipeline.java:84) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleSync(DefaultReactiveExecutor.java:75) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:84) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryState.run(RedeliveryErrorHandler.java:476) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleSync(DefaultReactiveExecutor.java:75) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.scheduleSync(ReactiveExecutor.java:66) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:158) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.access$301(TransactionErrorHandler.java:44) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler$2.process(TransactionErrorHandler.java:228) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:225) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:189) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36) ~[spring-tx-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140) ~[spring-tx-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:182) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:140) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:107) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:116) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:228) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.MulticastProcessor$MulticastState.lambda$run$1(MulticastProcessor.java:329) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.util.concurrent.AsyncCompletionService$Task.run(AsyncCompletionService.java:150) ~[camel-util-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.schedule(DefaultReactiveExecutor.java:67) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.schedule(ReactiveExecutor.java:32) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.callback(DefaultReactiveExecutor.java:100) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.lambda$process$0(CamelInternalProcessor.java:183) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:122) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:228) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.MulticastProcessor$MulticastState.lambda$run$1(MulticastProcessor.java:329) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.util.concurrent.AsyncCompletionService$Task.run(AsyncCompletionService.java:150) ~[camel-util-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleSync(DefaultReactiveExecutor.java:75) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.scheduleSync(ReactiveExecutor.java:66) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:235) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Splitter.process(Splitter.java:111) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:40) ~[camel-support-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.support.processor.DelegateSyncProcessor.process(DelegateSyncProcessor.java:64) ~[camel-support-3.0.0-RC1.jar:3.0.0-RC1]
	at de.graf.camel.metadata.MetaDataInterceptor$ProcessorImpl.process(MetaDataInterceptor.java:163) ~[classes/:?]
	at org.apache.camel.support.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:93) ~[camel-support-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryState.run(RedeliveryErrorHandler.java:476) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleSync(DefaultReactiveExecutor.java:75) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.scheduleSync(ReactiveExecutor.java:66) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:158) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:146) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:203) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.lambda$null$2(Pipeline.java:104) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.schedule(DefaultReactiveExecutor.java:67) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.schedule(ReactiveExecutor.java:32) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.callback(DefaultReactiveExecutor.java:100) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.lambda$process$0(CamelInternalProcessor.java:183) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:210) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.lambda$null$2(Pipeline.java:104) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.schedule(DefaultReactiveExecutor.java:67) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.schedule(ReactiveExecutor.java:32) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.callback(DefaultReactiveExecutor.java:100) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.lambda$process$0(CamelInternalProcessor.java:183) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:210) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.lambda$null$2(Pipeline.java:104) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.schedule(DefaultReactiveExecutor.java:67) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.schedule(ReactiveExecutor.java:32) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.callback(DefaultReactiveExecutor.java:100) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.lambda$process$0(CamelInternalProcessor.java:183) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:210) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.lambda$process$0(Pipeline.java:84) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleSync(DefaultReactiveExecutor.java:75) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:84) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryState.run(RedeliveryErrorHandler.java:476) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleSync(DefaultReactiveExecutor.java:75) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.scheduleSync(ReactiveExecutor.java:66) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:158) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.access$301(TransactionErrorHandler.java:44) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler$2.process(TransactionErrorHandler.java:228) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:225) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:103) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.support.processor.DelegateSyncProcessor.process(DelegateSyncProcessor.java:64) ~[camel-support-3.0.0-RC1.jar:3.0.0-RC1]
	at de.graf.camel.metadata.MetaDataInterceptor$ProcessorImpl.process(MetaDataInterceptor.java:163) ~[classes/:?]
	at org.apache.camel.support.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:93) ~[camel-support-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryState.run(RedeliveryErrorHandler.java:476) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleSync(DefaultReactiveExecutor.java:75) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spi.ReactiveExecutor.scheduleSync(ReactiveExecutor.java:66) ~[camel-api-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:158) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.access$301(TransactionErrorHandler.java:44) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler$2.process(TransactionErrorHandler.java:228) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:225) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:189) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36) ~[spring-tx-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140) ~[spring-tx-5.1.9.RELEASE.jar:5.1.9.RELEASE]
	at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:182) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:140) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:107) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:116) ~[camel-spring-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:228) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.doProcess(Pipeline.java:103) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.lambda$process$1(Pipeline.java:87) ~[camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$3.run(DefaultReactiveExecutor.java:116) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:185) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:87) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:228) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:74) [camel-direct-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.SharedCamelInternalProcessor.process(SharedCamelInternalProcessor.java:189) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.SharedCamelInternalProcessor$1.process(SharedCamelInternalProcessor.java:90) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:78) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.processor.SharedCamelInternalProcessor.process(SharedCamelInternalProcessor.java:87) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultProducerCache.send(DefaultProducerCache.java:147) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:176) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:172) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:153) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:187) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at org.apache.camel.impl.engine.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:195) [camel-base-3.0.0-RC1.jar:3.0.0-RC1]
	at de.graf.camel.metadata.MetaDataInterceptorTest.testRoundtrip(MetaDataInterceptorTest.java:176) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_222]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_222]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_222]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_222]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) [junit-4.12.jar:4.12]
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) [junit-4.12.jar:4.12]
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-3.0.0-M3.jar:3.0.0-M3]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-3.0.0-M3.jar:3.0.0-M3]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-3.0.0-M3.jar:3.0.0-M3]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-3.0.0-M3.jar:3.0.0-M3]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-3.0.0-M3.jar:3.0.0-M3]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-3.0.0-M3.jar:3.0.0-M3]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-3.0.0-M3.jar:3.0.0-M3]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-3.0.0-M3.jar:3.0.0-M3]
{noformat}
","Windows 10
Java 11
Karaf 4.2.6",acosentino,davsclaus,gnodet,graben,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 11 16:51:10 UTC 2019,,,,,,,,,,,"0|z0689s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Sep/19 18:44;graben;Just adding caffeine will not help. There is still a lack in LRUCacheFactory which seems not to work in OSGi environments. And still the question of why does it not work with the default implementation?;;;","02/Sep/19 19:18;acosentino;I think [~gnodet] may help here;;;","02/Sep/19 19:18;acosentino;Reopened. Sorry for the confusion;;;","03/Sep/19 05:27;davsclaus;There is a potential fix here
https://github.com/apache/camel/commit/a5d3e3453740829231bb58f9ebd9a151fa2a98b3

And karaf should install caffeine cache as it should be used;;;","03/Sep/19 05:30;acosentino;Do you mean the camel-caffeine-lrucache dependency in camel-core feature?;;;","03/Sep/19 06:06;davsclaus;Yeah;;;","03/Sep/19 06:24;acosentino;This should be done now.;;;","03/Sep/19 07:49;graben;Well, I think that are two topics.
 # How to get camel-caffeine-lrucache work under OSGi environment? (I'm still skeptical if it will work but not proofed yet) 
 ## Why is LRUCacheFactory not based on FactoryFinder SPI, I think this would make things easier
 # Why does the DefaultLRUCache not work?
 ## Why have two implementations of LRUCache if one might be ""useless""? :)

Greetings
 Benjamin;;;","08/Sep/19 15:42;graben;Just tested with the latest SNAPSHOT build. Still does not work as expected. camel-caffeine-lrucache won't get initialized in OSGi environment!;;;","08/Sep/19 16:04;acosentino;[~gnodet]  would you mind having a look?;;;","11/Sep/19 07:45;gnodet;Resolved by:

  [https://github.com/apache/camel/commit/ae93bd9e5163cfab639869a333aa064fca76ad92]

  [https://github.com/apache/camel/commit/7082500b816b0a2e54d2c1f6ff47099965fe6e3d] ;;;","11/Sep/19 16:51;graben;Works for me. (y);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""camel-package:update-readme"" throws ArrayIndexOutOfBoundsException when there is an empty ""adoc"" file",CAMEL-13919,13254084,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,omarsmak,omarsmak,31/Aug/19 19:34,06/Sep/19 07:35,13/Jul/23 08:32,06/Sep/19 07:35,3.0.0.M4,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,tooling,,,,0,,,,,"Steps to produce: 
 * Create an empty {{adoc}} file in any component.
 * Run {{camel-package:update-readme}}.
 * It will fail with the following error: 
{code}
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1
    at org.apache.camel.maven.packaging.UpdateReadmeMojo.updateAvailableFrom (UpdateReadmeMojo.java:510)
    at org.apache.camel.maven.packaging.UpdateReadmeMojo.executeComponent (UpdateReadmeMojo.java:151)
    at org.apache.camel.maven.packaging.UpdateReadmeMojo.execute (UpdateReadmeMojo.java:105)
{code}

* As I can see [here|https://github.com/apache/camel/blob/master/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java#L510], it looks it will try to retrieve index although there are empty lines",,davsclaus,omarsmak,,,,,"omarsmak commented on pull request #3148: MINOR: CAMEL-13919: Fix ArrayIndexOutOfBoundsException when generate readme …
URL: https://github.com/apache/camel/pull/3148
 
 
   It happens if you have an empty documentation file or a file with less than 5 lines per https://issues.apache.org/jira/browse/CAMEL-13919
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 16:39;githubbot;600","davsclaus commented on pull request #3148: MINOR: CAMEL-13919: Fix ArrayIndexOutOfBoundsException when generate readme …
URL: https://github.com/apache/camel/pull/3148
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 07:35;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 06 07:35:55 UTC 2019,,,,,,,,,,,"0|z067zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Aug/19 19:36;omarsmak;Hey [~davsclaus] [~jbonofre], I am not really sure if that is _expected_ , but if you think this needs to be fixed, I would like to work on it ;;;","01/Sep/19 06:42;davsclaus;Yeah sure you are welcome to fix this, as its a little bug;;;","06/Sep/19 07:35;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX - Early registered services may not be enlisted in XML DSL,CAMEL-13904,13252731,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,23/Aug/19 18:33,23/Aug/19 20:03,13/Jul/23 08:32,23/Aug/19 20:03,,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-blueprint,camel-spring,jmx,,0,,,,,In some use-cases depending on how you run Camel then some early services for JMX may not get registered,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-08-23 18:33:37.0,,,,,,,,,,,"0|z05znk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Starting from yesterday cfxEndpoint wont start,CAMEL-13890,13252105,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Blocker,Fixed,zregvart,tjuul,tjuul,21/Aug/19 10:53,04/Sep/19 15:43,13/Jul/23 08:32,21/Aug/19 12:28,,,,,,,,,,,,,,,,,,camel-cxf,,,,0,,,,,"Starting from yesterday suddenly all cfxEndpoints won't start. This is in production and all environments and on local machines.

My suspicion is some problems loading xmlns from camel. I get 403 - forbidden:

 

https://camel.apache.org/schema/cxf/

http://cxf.apache.org/jaxrs

 

It gives this exception:

 

springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 1 in XML document from ServletContext resource [/WEB-INF/applicationContext.xml] is invalid; nested exception is org.xml.sax.SAXParseException: White spaces are required between publicId and systemId.
 at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
 at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
 at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
 at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
 at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
 at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
 at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
 at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
 at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
 at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:613)
 at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:514)
 at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:444)
 at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:326)
 at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
 at com.ibm.ws.webcontainer.webapp.WebApp.notifyServletContextCreated(WebApp.java:2376)
 at com.ibm.ws.webcontainer.webapp.WebApp.initialize(WebApp.java:1004)
 at com.ibm.ws.webcontainer.webapp.WebApp.initialize(WebApp.java:6566)
 at com.ibm.ws.webcontainer.osgi.DynamicVirtualHost.startWebApp(DynamicVirtualHost.java:467)
 at com.ibm.ws.webcontainer.osgi.DynamicVirtualHost.startWebApplication(DynamicVirtualHost.java:462)
 at com.ibm.ws.webcontainer.osgi.WebContainer.startWebApplication(WebContainer.java:1132)
 at com.ibm.ws.webcontainer.osgi.WebContainer.startModule(WebContainer.java:937)
 at com.ibm.ws.app.manager.module.internal.ModuleHandlerBase.deployModule(ModuleHandlerBase.java:99)
 at com.ibm.ws.app.manager.module.internal.DeployedModuleInfoImpl.installModule(DeployedModuleInfoImpl.java:49)
 at com.ibm.ws.app.manager.module.internal.DeployedAppInfoBase.deployModules(DeployedAppInfoBase.java:429)
 at com.ibm.ws.app.manager.module.internal.DeployedAppInfoBase.deployApp(DeployedAppInfoBase.java:415)
 at com.ibm.ws.app.manager.war.internal.WARApplicationHandlerImpl.install(WARApplicationHandlerImpl.java:65)
 at com.ibm.ws.app.manager.internal.statemachine.StartAction.execute(StartAction.java:140)
 at com.ibm.ws.app.manager.internal.statemachine.ApplicationStateMachineImpl.enterState(ApplicationStateMachineImpl.java:1258)
 at com.ibm.ws.app.manager.internal.statemachine.ApplicationStateMachineImpl.run(ApplicationStateMachineImpl.java:873)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 at java.lang.Thread.run(Thread.java:812)
Caused by: org.xml.sax.SAXParseException: White spaces are required between publicId and systemId.

 

 ",,acosentino,davsclaus,tjuul,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13891,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 04 15:43:45 UTC 2019,,,,,,,,,,,"0|z05vso:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Aug/19 11:02;zregvart;Thanks for reporting this, we launched the new website and it has directory listings turned off, so that might be an issue in this case.

Can you share the XML declarations you have, I'm guessing you don't have {{schemaLocation}} defined for {{https://camel.apache.org/schema/cxf/}}.;;;","21/Aug/19 11:11;tjuul;That was my suspicion to. But of course that should not be a problem when I have a schemaLocaltion which I do.

 

My XML looks like this:

 

<beans xmlns=""http://www.springframework.org/schema/beans""
 xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
 xmlns:jaxrs=""http://cxf.apache.org/jaxrs""
 xmlns:cxf=""http://camel.apache.org/schema/cxf""
 xsi:schemaLocation=""
 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
 http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
 http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
 http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.18.1-spring.xsd"">
 
 <import resource=""classpath:META-INF/cxf/cxf.xml""/>
 <import resource=""classpath:META-INF/cxf/cxf-servlet.xml""/>
 
 <cxf:cxfEndpoint id=""email.hent.service""
 address=""${CICS_SERVICES_URL}/services/RSBLA"" serviceClass=""rsbla.RSBLA"">
 <!-- cxf:inInterceptors>
 <ref bean=""loggingInInterceptor"" />
 </cxf:inInterceptors>
 <cxf:outInterceptors>
 <ref bean=""loggingOutInterceptor"" />
 </cxf:outInterceptors-->
 </cxf:cxfEndpoint>

 

If I have the cxf:cxfEndpoint inside my applicationContext.xml it fails if I remove it it starts up.

I can't figure out why. It is in all our running Apache Camel applications that uses cxf:cxfEndpoint, and it started yesterday afternoon - or at least after restart this morning.;;;","21/Aug/19 11:27;zregvart;We enabled directory indexes for {{/schema/...}} on the website that should prevent you from getting the 403 error. Can you try again and report if it helped?;;;","21/Aug/19 11:27;acosentino;Can you check now? [~zregvart] should have fixed it;;;","21/Aug/19 11:35;tjuul;We don't get the 403 anymore, but still the same exception in the applications.

I wonder if it is in some sub-schemas down in cfx.xml or cfx-servlet.xml.;;;","21/Aug/19 11:42;zregvart;It could be that the HTTP client trying to download those schemas is not following the redirects. If you do {{curl -v http://camel.apache.org/schema/cxf/camel-cxf-2.18.1-spring.xsd}} you'll get a redirect to https://camel.apache.org/schema/cxf/camel-cxf-2.18.1-spring.xsd with a HTML in the body. I think we need to disable HTTP to HTTP over TLS redirect for schemas.;;;","21/Aug/19 11:48;tjuul;Yes I actually also saw a redirect permanently in the browser console earlier on:

 

This is the output I get:

 

C:\curl>curl -v http://camel.apache.org/schema/cxf/camel-cxf-2.18.1-spring.xsd
* Trying 40.79.78.1...
* TCP_NODELAY set
* Connected to camel.apache.org (40.79.78.1) port 80 (#0)
> GET /schema/cxf/camel-cxf-2.18.1-spring.xsd HTTP/1.1
> Host: camel.apache.org
> User-Agent: curl/7.55.1
> Accept: */*
>
< HTTP/1.1 301 Moved Permanently
< Date: Wed, 21 Aug 2019 11:47:23 GMT
< Server: Apache/2.4.18 (Ubuntu)
< Strict-Transport-Security: max-age=16070400; includeSubDomains
< Location: https://camel.apache.org/schema/cxf/camel-cxf-2.18.1-spring.xsd
< Cache-Control: max-age=0
< Expires: Wed, 21 Aug 2019 11:47:23 GMT
< Content-Length: 271
< Content-Type: text/html; charset=iso-8859-1
<
<!DOCTYPE HTML PUBLIC ""-//IETF//DTD HTML 2.0//EN"">
<html><head>
<title>301 Moved Permanently</title>
</head><body>
<h1>Moved Permanently</h1>
<p>The document has moved <a href=""https://camel.apache.org/schema/cxf/camel-cxf-2.18.1-spring.xsd"">here</a>.</p>
</body></html>
* Connection #0 to host camel.apache.org left intact;;;","21/Aug/19 11:53;zregvart;Okay, so we're serving schemas over plaintext HTTP and there should not be a redirect with the HTML body to https. Does that fix the issue for you [~tjuul]?;;;","21/Aug/19 12:06;tjuul;Great! It works... That was a hard one to find for me.

Thanks a lot...;;;","21/Aug/19 12:24;davsclaus;Ah so in the camel-cxf JAR there are spring mapping files to map XSD namespaces to local files so it will not load over the internet.

And it has all versions

http\://camel.apache.org/schema/cxf/camel-cxf-2.18.1.xsd=schema/cxfEndpoint.xsd

And also without version number (most ppl use that)

So it may be something on your IBM WebSphere that causes something to load over the internet. You should be able to start up without internet connectivity;;;","21/Aug/19 12:27;zregvart;Awesome, thank you again for reporting this so quickly, I'm sure others could face a similar issue and we got it fixed quickly because of that.

We can leave it as is, though as you have seen this could cause issues in the future if the Camel website becomes inaccessible for your application: think new network policy in place that forbids access to the Internet from production servers. Using XML schema resources from the Internet could also cause security issues for your application as the schema files can be modified as they pass unencrypted over networks that you do not control.;;;","21/Aug/19 12:28;zregvart;Marking this as fixed with the confirmation from [~tjuul].;;;","21/Aug/19 12:28;davsclaus;Ah you should not have -spring, eg

http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.18.1-spring.xsd"">

Should be

http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.18.1.xsd"">;;;","21/Aug/19 15:07;tjuul;I totally agree that it is not good that we need to talk to the internet and be dependent on that.

And let me just say that it absolutely worries our management how it could be possible to have almost all our internal and external solutions down for around 8 hours because of something like this :) 
So, let me try to understand it - the only thing we god wrong was the one namespace with -spring in it ?

If I change to [http://camel.apache.org/schema/cxf] [http://camel.apache.org/schema/cxf/camel-cxf-2.18.1.xsd] it would have worked ?;;;","21/Aug/19 20:26;davsclaus;Look inside the camel-cxf JAR in the META-INF folder there are some spring files. They map http urls to the XSD file that are embedded inside the JAR so it works offline. You did not use an URL that matched any of those, eg as you had -spring.

;;;","04/Sep/19 15:43;tjuul;Ok, we have changed all the references to the correct ones and the applications are now in production.

Feel free to do the changes you did again :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"camel-servlet + camel-http4 with null body causes ""Stream closed"" IOException",CAMEL-13886,13252014,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tadayosi,tadayosi,tadayosi,21/Aug/19 06:05,13/Sep/19 09:31,13/Jul/23 08:32,13/Sep/19 02:37,2.25.0,3.0.0.M4,,,,,,,,,,2.25.0,3.0.0.RC2,,,,,camel-http-common,camel-http4,camel-servlet,,0,,,,,"A Rest DSL route like the following causes {{java.io.IOException: Stream closed}} when invoked at http://localhost:8000/test/proxy:
{code:java}
        rest(""/test"")
                .get(""/proxy"")
                .to(""direct:callInternalRestService"");

        from(""direct:callInternalRestService"")
                .setHeader(Exchange.HTTP_METHOD, constant(""DELETE""))
                //.setBody(constant("""")) // workaround for null body and http4 component
                .to(""http4://localhost:9000/test?bridgeEndpoint=true"")
                .log(""${body}"");
{code}

The error stacktrace:
{code}
Caused by: java.io.IOException: Stream closed
	at org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:372)
	at org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:156)
	at org.apache.camel.util.IOHelper.copy(IOHelper.java:202)
	at org.apache.camel.util.IOHelper.copy(IOHelper.java:174)
	at org.apache.camel.util.IOHelper.copyAndCloseInput(IOHelper.java:234)
	at org.apache.camel.util.IOHelper.copyAndCloseInput(IOHelper.java:230)
	at org.apache.camel.http.common.HttpHelper.readResponseBodyFromInputStream(HttpHelper.java:245)
	at org.apache.camel.http.common.HttpHelper.readRequestBodyFromServletRequest(HttpHelper.java:196)
	at org.apache.camel.http.common.DefaultHttpBinding.parseBody(DefaultHttpBinding.java:577)
	at org.apache.camel.http.common.HttpMessage.createBody(HttpMessage.java:78)
	... 54 common frames omitted
{code}

-This seems to happen only when Tomcat is used as the container with Spring Boot. Undertow doesn't cause such an issue.-

The real root cause is that when an exchange has an {{HttpMessage}} with {{null}} body as its out message, then the next time {{Exchange.getMessage()}} is invoked the {{HttpMessage}} is tricked by the {{null}} body and tries to create body again with the already closed request input stream.",,coheigea,davsclaus,tadayosi,,,,"tadayosi commented on pull request #3166: CAMEL-13886: camel-servlet + camel-http4 with null body causes ""Stream closed"" IOException
URL: https://github.com/apache/camel/pull/3166
 
 
   Normally servlet request can be read only once, but when
   Exchange#getOut() is invoked HttpMessage may be copied for the out
   message with the original request that has been already read.
   This fix protects it from being read again.
   
   https://issues.apache.org/jira/browse/CAMEL-13886
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Sep/19 09:28;githubbot;600","tadayosi commented on pull request #3166: CAMEL-13886: camel-servlet + camel-http4 with null body causes ""Stream closed"" IOException
URL: https://github.com/apache/camel/pull/3166
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/19 02:28;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 23 04:11:59 UTC 2019,,,,,,,,,,,"0|z05v8g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Aug/19 13:16;coheigea;[~tadayosi] - looks like this issues caused some test failures on 2.x in camel-servlet + camel-jetty: https://builds.apache.org/job/Camel/job/camel-2.x/230/#showFailuresLink;;;","22/Aug/19 02:10;tadayosi;[~coheigea] Yes, I noticed the failures too. Working on it. Thanks for your notification.;;;","23/Aug/19 03:48;davsclaus;Okay but this works for Camel 3.x? If so then we can have a fix here if we dont find a solution that works on the old 2.x and 3.x at the same time.;;;","23/Aug/19 04:11;tadayosi;[~davsclaus] No, it turned out my previous fix was not really correct. I reverted it from both 2.x and 3.x. I'm working on a better fix right now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"netty4-http component is setting an invalid ""host"" HTTP header",CAMEL-13880,13251762,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ramu11,urken,urken,20/Aug/19 06:33,05/Sep/19 01:59,13/Jul/23 08:32,05/Sep/19 01:59,2.24.0,,,,,,,,,,,3.0.0,,,,,,camel-netty4-http,,,,0,,,,,"The netty4-http component is setting an invalid ""host"" HTTP header when no port is defined in the uri for requests.

netty4-http sets the header in DefaultNettyHttpBinding.toNettyRequest where URI is used to parse the uri string but URI give -1 if no port is defined. For example the host header could be set to ""hostname:-1"" which is not accepted of some proxy servers that check the validity of the host header. For example Apache proxy will return a http error 400(Bad request).

See [https://tools.ietf.org/html/rfc7230#section-5.4]

 
{code:java}
// This is how it's done in DefaultNettyHttpBinding.toNettyRequest
URI u = new URI(uri);
String hostHeader = u.getHost() + (u.getPort() == 80 ? """" : "":"" + u.getPort());
request.headers().set(HttpHeaderNames.HOST.toString(), hostHeader);
LOG.trace(""Host: {}"", hostHeader);
{code}
{{}}

One solution could be:
{code:java}
URI u = new URI(uri);
int port = u.getPort();
String hostHeader = u.getHost() + (port == 80 || port ==-1 ? """" : "":"" + port);
request.headers().set(HttpHeaderNames.HOST.toString(), hostHeader);
{code}",,DenisIstomin,urken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-08-20 06:33:21.0,,,,,,,,,,,"0|z05too:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message is forwarded to the wrong Kafka Topic,CAMEL-13878,13251699,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,kklear,kklear,19/Aug/19 21:18,01/Oct/19 10:20,13/Jul/23 08:32,01/Oct/19 10:20,2.24.1,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-kafka,,,,0,,,,,"I have 3 Apache Spring Boot applications and 3 topics.

Let's call them Topic A, B and C and the Spring Boot applications FirstApp, SecondApp and ThridApp. I use Java DSL for the Kafka configuration.

The FirstApp creates a message to Kafka Topic A.

The SecondApp reads from Topic A makes transformations and passes each value to Topic B.

The ThirdApp reads from Topic B and after transformations tries to pass it to Topic C.

At this point through the debugger I saw that at the class  org.apache.camel.component.kafka.KafkaProducer and at the method 

protected Iterator<ProducerRecord> createRecorder(Exchange exchange) something strange is happening.
The headerTopic (line 140) from the following line:

String headerTopic = exchange.getIn().getHeader(KafkaConstants.TOPIC, String.class);

contains the topic A! The correct topic that I have clearly set through the Java DSL can be found under the line 137: 

String topic = endpoint.getConfiguration().getTopic();

As a workaround I have entered the following line inside a processor at the SecondProgram:

exchange.getIn().setHeader(KafkaConstants.TOPIC, null);

This has the side-effect that the headerTopic at line 140 is empty and thus the correct topic from line 137 is used.

I believe that since I have clearly set the destination topic at the ThirdProgram to Topic C then Apache Camel should not override this with Topic A.

It looks like a bug since from the method description I understand that we try to avoid circular loops.

 ",,davsclaus,kklear,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 01 09:33:04 UTC 2019,,,,,,,,,,,"0|z05tao:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Oct/19 08:56;davsclaus;You can set bridgeEndpoint=true in Camel 2.x;;;","01/Oct/19 09:33;davsclaus;For Camel 3 lets add a new OVERRIDE_TOPIC that you should use instead of TOPIC as a header, then we wont have this issue anymore;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RouteHealthCheck has NPE when JMX disabled,CAMEL-13877,13251685,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,pheaber,pheaber,19/Aug/19 20:58,21/Aug/19 06:53,13/Jul/23 08:32,21/Aug/19 06:52,3.0.0-M1,,,,,,,,,,,3.0.0.RC1,,,,,,,,,,0,,,,,"RouteHealthCheck throws NPE when JMX is disabled

See attached Junit",,pheaber,,,,,,"pheaber commented on pull request #3112: CAMEL-13877 fix NPE in RouteHealthCheck
URL: https://github.com/apache/camel/pull/3112
 
 
   Fix for NPE
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Aug/19 21:11;githubbot;600","oscerd commented on pull request #3112: CAMEL-13877 fix NPE in RouteHealthCheck
URL: https://github.com/apache/camel/pull/3112
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Aug/19 06:53;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,"19/Aug/19 20:58;pheaber;RouteHealthCheckTest.java;https://issues.apache.org/jira/secure/attachment/12978000/RouteHealthCheckTest.java",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 19 21:11:44 UTC 2019,,,,,,,,,,,"0|z05t7k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Aug/19 21:11;pheaber;Submitted PR [https://github.com/apache/camel/pull/3112];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel Olingo: incorrect result in consumer ,CAMEL-13861,13250252,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,phantomjinx,phantomjinx,12/Aug/19 11:00,13/Aug/19 04:25,13/Jul/23 08:32,13/Aug/19 04:25,3.0.0.M4,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-olingo2,camel-olingo4,,,0,,,,,"The [Olingo4Consumer|https://github.com/apache/camel/blob/master/components/camel-olingo4/camel-olingo4-component/src/main/java/org/apache/camel/component/olingo4/Olingo4Consumer.java#L102] when filtered using the already-seen property, is checked for empty EntitySets and returns 0. This return value ensures that unless consumer.sendEmptyMessageWhenIdle = true, no empty messages are generated.
However, this behaviour is not consistent when a key predicate is used. In this case, an entity is returned which is then filtered to null. This is not handled and an empty message is transmitted with a null body.",,davsclaus,phantomjinx,,,,,"phantomjinx commented on pull request #3096: CAMEL-13861: Fixes missing logic producing empty messages
URL: https://github.com/apache/camel/pull/3096
 
 
   * Olingo[*]Consumer
    * Tests for null results as well as empty collections. Return 0 accordingly
   
   * Adds and updates tests to assume no empty messages unless the
     consumer.sendEmptyMessageWhenIdle property has been configured
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Aug/19 12:20;githubbot;600","davsclaus commented on pull request #3096: CAMEL-13861: Fixes missing logic producing empty messages
URL: https://github.com/apache/camel/pull/3096
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Aug/19 04:24;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 13 04:25:03 UTC 2019,,,,,,,,,,,"0|z05khk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Aug/19 11:00;phantomjinx;PR on the way.;;;","13/Aug/19 04:25;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-microprofile-config: service file point to the wrong class,CAMEL-13854,13250144,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,lb,lb,lb,11/Aug/19 21:04,12/Aug/19 11:40,13/Jul/23 08:32,12/Aug/19 11:40,,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-microprofile-config,,,,0,,,,,,,lb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-08-11 21:04:47.0,,,,,,,,,,,"0|z05jtk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-webhook - Should be lenient properties,CAMEL-13847,13249852,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,09/Aug/19 09:30,09/Aug/19 09:44,13/Jul/23 08:32,09/Aug/19 09:44,,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,,,,,0,,,,,"So you can pass in uri parameters to the target endpoint, as today it will validate its own configuration only.",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-08-09 09:30:01.0,,,,,,,,,,,"0|z05i0w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Salesforce Component IDLE_TIMEOUT Blocks Async Request Responses,CAMEL-13796,13247426,Bug,Closed,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,mtajiri,mtajiri,26/Jul/19 22:20,20/Sep/19 06:41,13/Jul/23 08:32,07/Aug/19 08:31,2.23.0,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-salesforce,,,,0,camel-salesforce,httpclient,salesforce,,"Bulk, Composite Batch, etc. all throw an exception when trying to return on more than a few records due to [static final IDLE_TIMEOUT|https://github.com/apache/camel/blob/master/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceComponent.java#L80] on the instantiated salesforce component httpClient:

 

Caused by: org.apache.camel.component.salesforce.api.SalesforceException: Unexpected error \{0:null} executing \{POST:https://genericSFDCInstance.salesforce.com/services/data/v38.0/composite/batch}
        at org.apache.camel.component.salesforce.internal.client.AbstractClientBase$1.onComplete(AbstractClientBase.java:199) ~[camel-salesforce-2.23.0.jar:2.23.0]
        at org.eclipse.jetty.client.ResponseNotifier.notifyComplete(ResponseNotifier.java:202) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.ResponseNotifier.notifyComplete(ResponseNotifier.java:194) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpReceiver.terminateResponse(HttpReceiver.java:470) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpReceiver.abort(HttpReceiver.java:552) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpChannel.abortResponse(HttpChannel.java:156) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpChannel.abort(HttpChannel.java:149) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpExchange.abort(HttpExchange.java:257) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpConversation.abort(HttpConversation.java:141) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.HttpRequest.abort(HttpRequest.java:767) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.http.HttpConnectionOverHTTP.abort(HttpConnectionOverHTTP.java:204) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.http.HttpConnectionOverHTTP.close(HttpConnectionOverHTTP.java:190) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.client.http.HttpConnectionOverHTTP.onIdleExpired(HttpConnectionOverHTTP.java:145) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.ssl.SslConnection.onIdleExpired(SslConnection.java:286) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.AbstractEndPoint.onIdleExpired(AbstractEndPoint.java:401) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.IdleTimeout.checkIdleTimeout(IdleTimeout.java:166) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.IdleTimeout$1.run(IdleTimeout.java:50) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
        ... 1 more


*Caused by: java.util.concurrent.TimeoutException: Idle timeout 5000 ms*
        at org.eclipse.jetty.client.http.HttpConnectionOverHTTP.onIdleExpired(HttpConnectionOverHTTP.java:145) ~[jetty-client-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.ssl.SslConnection.onIdleExpired(SslConnection.java:286) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.AbstractEndPoint.onIdleExpired(AbstractEndPoint.java:401) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.IdleTimeout.checkIdleTimeout(IdleTimeout.java:166) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at org.eclipse.jetty.io.IdleTimeout$1.run(IdleTimeout.java:50) ~[jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
        ... 1 more

 

Note that as IDLE_TIMEOUT is static, it cannot be set via Spring, and the httpClientProperties map is [never used to set any timeouts|https://github.com/apache/camel/blob/master/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceComponent.java#L714], instead opting to take the [hardcoded defaults|https://github.com/apache/camel/blob/master/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceComponent.java#L707].

 ",,davsclaus,mtajiri,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13999,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 07 16:31:05 UTC 2019,,,,,,,,,,,"0|z0532o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Aug/19 07:42;davsclaus;Ah okay so lets make the idle timeout configurable.;;;","07/Aug/19 08:31;davsclaus;You can now configure them and the default is now 10 seconds for idle;;;","07/Aug/19 16:01;mtajiri;Perfect, thank you very much Claus.;;;","07/Aug/19 16:31;mtajiri;Fixed by   [CAMEL-13796|https://github.com/apache/camel/commit/c30da59f07ca72859082dd2ec09cc250aa15e79f];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TokenXMLExpressionIterator with inheritNamespaceToken creates duplicate default namespace definition,CAMEL-13795,13247338,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,Pieczewski,Pieczewski,26/Jul/19 14:41,31/Jul/19 12:32,13/Jul/23 08:32,31/Jul/19 12:30,2.21.5,2.22.5,2.23.3,2.24.1,3.0.0.M4,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.RC1,,came-core,,,,0,,,,," If a sub-item also contains the default namespace definition the splitter will duplicate it.

 
{code:java|title=route definition}
from(""file:target/pair?initialDelay=0&delay=10"")
                    // split the order child tags, and inherit namespaces from the orders root tag
                    .split().tokenizeXML(""order"", ""orders"")
                        .to(""mock:split"");
{code}
 

 
{code:xml|title=input}
<orders xmlns=""http:acme.com""> 
 <order xmlns=""http:acme.com"" id=""1"">Camel in Action</order>
 <order id=""2"">ActiveMQ in Action</order>
 <order id=""3"">DSL in Action</order>
</orders>""
{code}
{code:xml|title=output[1]}
<order xmlns=""http:acme.com"" id=""1"" xmlns=""http:acme.com"">Camel in Action</order>
{code}
{code:xml|title=expected[1]}
 <order xmlns=""http:acme.com"" id=""1"">Camel in Action</order>
{code}",,davsclaus,Pieczewski,,,,,"drmaniac commented on pull request #3068: CAMEL-13795: Fixing the issue of already declared namespaces within the child
URL: https://github.com/apache/camel/pull/3068
 
 
   CAMEL-13795: Fixing the issue of already declared namespaces within the child
   I have also align the tests classes
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:17;githubbot;600","drmaniac commented on pull request #3069: CAMEL-13795: Fixing the issue of already declared namespaces within the child
URL: https://github.com/apache/camel/pull/3069
 
 
   CAMEL-13795: Fixing the issue of already declared namespaces within the child
   I have also align the tests classes
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:19;githubbot;600","oscerd commented on pull request #3069: CAMEL-13795: Fixing the issue of already declared namespaces within the child
URL: https://github.com/apache/camel/pull/3069
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:20;githubbot;600","drmaniac commented on pull request #3070: CAMEL-13795: Fixing the issue of already declared namespaces within the child
URL: https://github.com/apache/camel/pull/3070
 
 
   CAMEL-13795: Fixing the issue of already declared namespaces within the child
   I have also align the tests classes
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:22;githubbot;600","oscerd commented on pull request #3068: CAMEL-13795: Fixing the issue of already declared namespaces within the child
URL: https://github.com/apache/camel/pull/3068
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:25;githubbot;600","drmaniac commented on pull request #3071: CAMEL-13795: Fixing the issue of already declared namespaces within the child
URL: https://github.com/apache/camel/pull/3071
 
 
   CAMEL-13795: Fixing the issue of already declared namespaces within the child
   I have also align the tests classes
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:26;githubbot;600","oscerd commented on pull request #3067: CAMEL-13795
URL: https://github.com/apache/camel/pull/3067
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:26;githubbot;600","oscerd commented on pull request #3066: CAMEL-13795: 
URL: https://github.com/apache/camel/pull/3066
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:26;githubbot;600","davsclaus commented on pull request #3071: CAMEL-13795: Fixing the issue of already declared namespaces within the child
URL: https://github.com/apache/camel/pull/3071
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 12:28;githubbot;600","davsclaus commented on pull request #3070: CAMEL-13795: Fixing the issue of already declared namespaces within the child
URL: https://github.com/apache/camel/pull/3070
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 12:29;githubbot;600",,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 31 12:30:37 UTC 2019,,,,,,,,,,,"0|z052j4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Jul/19 12:30;davsclaus;Thanks for reporting and the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix the camel-archetype-component to inherit from DefaultConsumer instead of ScheduledPollConsumer,CAMEL-13783,13246530,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,omarsmak,omarsmak,23/Jul/19 09:32,04/Aug/19 09:14,13/Jul/23 08:32,04/Aug/19 09:14,,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-archetypes,,,,0,,,,,"Currently the {{[camel-archetype-component|https://github.com/apache/camel/blob/master/archetypes/camel-archetype-component/src/main/resources/archetype-resources/src/main/java/__name__Consumer.java#L28]}} inherits from {{ScheduledPollConsumer}}, since this consumer is less used, it will make sense to change the consumer to {{DefaultConsumer}} instead. ",,omarsmak,,,,,,"omarsmak commented on pull request #3059: CAMEL-13783: Fix the camel-archetype-component to inherit from DefaultConsumer instead of ScheduledPollConsumer
URL: https://github.com/apache/camel/pull/3059
 
 
   Per the title, this will fix the generated `camel-archetype-component` project to inherit from `DefaultConsumer` instead of `ScheduledPollConsumer`
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/19 12:28;githubbot;600","davsclaus commented on pull request #3059: CAMEL-13783: Fix the camel-archetype-component to inherit from DefaultConsumer instead of ScheduledPollConsumer
URL: https://github.com/apache/camel/pull/3059
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Aug/19 09:01;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 23 09:33:27 UTC 2019,,,,,,,,,,,"0|z04xjs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Jul/19 09:33;omarsmak;Will work on this ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[MongoDB] autoclosable cursor,CAMEL-13776,13246256,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,squakez,squakez,22/Jul/19 08:26,23/Jul/19 08:03,13/Jul/23 08:32,23/Jul/19 08:03,,,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.RC1,,,,,,0,,,,,"The [following statement|https://github.com/apache/camel/blob/master/components/camel-mongodb3/src/main/java/org/apache/camel/component/mongodb3/MongoDbTailingThread.java#L86] is not allowing the consumer to properly resume a previously stored tailing tracking.

{code}

try (MongoCursor<Document> iterator = dbCol.find(gt(tailTracking.getIncreasingFieldName(), lastVal))

{code}

As the iterator is consumer outside that block, it is always impossible to recover any stopped tracking. The consumer test were infact previously @ignore-d for this reason.

Already working to fix this problem.",,squakez,,,,,,"squakez commented on pull request #3055: CAMEL-13776 - fixing autoclosable cursor issue
URL: https://github.com/apache/camel/pull/3055
 
 
   Fixed the autoclosable cursor issue discovered and enabled Junit test related that should now work as expected. From now on, the consumer should be able correctly to resume any tracking stored previously. Also, any stopped consumer will be catched trying to provide a graceful shutdown of the consumer thread.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 09:01;githubbot;600","oscerd commented on pull request #3055: CAMEL-13776 - fixing autoclosable cursor issue
URL: https://github.com/apache/camel/pull/3055
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 09:08;githubbot;600","squakez commented on pull request #3056: CAMEL-13776 - backport issue fixed
URL: https://github.com/apache/camel/pull/3056
 
 
   As specified in the title.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 10:11;githubbot;600","oscerd commented on pull request #3056: CAMEL-13776 - backport issue fixed
URL: https://github.com/apache/camel/pull/3056
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/19 07:43;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-07-22 08:26:32.0,,,,,,,,,,,"0|z04vuw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properties of class Map does not work with Spring Boot 2.x,CAMEL-13770,13245972,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,hemangajmera,hemangajmera,19/Jul/19 10:58,02/Aug/19 05:02,13/Jul/23 08:32,24/Jul/19 16:52,2.23.3,2.24.1,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.RC1,,camel-salesforce,camel-spring-boot-starters,,,0,,,,,"From version 2.22.0 onwards spring-boot version is upgraded to 2.x
After that all Map properties are not working

For example in application.properties
camel.component.salesforce.http-client-properties is treated as string instead of Map and whatever value we provide to it, the Map is initialize as null

",,davsclaus,hemangajmera,ramu11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/19 11:07;hemangajmera;screenshot-with-2.21.1.png;https://issues.apache.org/jira/secure/attachment/12975244/screenshot-with-2.21.1.png","19/Jul/19 10:59;hemangajmera;screenshot-with-2.24.1.png;https://issues.apache.org/jira/secure/attachment/12975243/screenshot-with-2.24.1.png",,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 02 05:02:38 UTC 2019,,,,,,,,,,,"0|z04u3s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Jul/19 11:07;hemangajmera;This is with Camel 2.24.1 and Spring-boot 2.1.6 !screenshot-with-2.24.1.png! 

This is with camel 2.21.1 and spring-boot 1.5.21  !screenshot-with-2.21.1.png! ;;;","20/Jul/19 09:43;davsclaus;Can you post some sample code of the configuration you did before.;;;","22/Jul/19 09:15;hemangajmera;I was using camel.component.
{code:java}
salesforce.http-client-properties.requestBufferSize=65536
{code}

Since we have very long query. The default value is not sufficient.

If this parameter is not used, we get exception 
{code}
Caused by: org.eclipse.jetty.http.BadMessageException: 500: Request header too large
{code}

I also run in debug mode, where I can see httpClientProperties in SalesforceComponent as empty in new version and initialized with requestBufferSize in old version.;;;","22/Jul/19 13:21;hemangajmera;code attached in CAMEL-13766 can be used to check this.;;;","24/Jul/19 12:29;davsclaus;Thanks I have reproduced this on master and work on a fix there;;;","24/Jul/19 12:36;hemangajmera;Can this be please fixed in version 2.x also.


;;;","24/Jul/19 16:52;davsclaus;Yeah I have backported it to relevant 2.x branches;;;","02/Aug/19 05:02;hemangajmera;hi
  I was searching for release calendar or guideline. Do you know when are these version planned to be released?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-caffeine: exclude transitive dependencies not required,CAMEL-13751,13245243,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,lb,lb,lb,16/Jul/19 15:36,16/Jul/19 15:59,13/Jul/23 08:32,16/Jul/19 15:59,,,,,,,,,,,,3.0.0.RC1,,,,,,camel-caffeine,camel-caffeine-lrucache,,,0,,,,,"For some reason [1], caffeine declares some additional dependencies that are not needed at runtime:

{code}
[INFO] +- com.github.ben-manes.caffeine:caffeine:jar:2.7.0:compile
[INFO] |  +- org.checkerframework:checker-qual:jar:2.6.0:compile
[INFO] |  \- com.google.errorprone:error_prone_annotations:jar:2.3.3:compile
{code}

So we can get rid of them

[1] https://github.com/ben-manes/caffeine/issues/300",,lb,,,,,,"oscerd commented on pull request #3045: CAMEL-13751: camel-caffeine: exclude transitive dependencies not required
URL: https://github.com/apache/camel/pull/3045
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jul/19 15:58;githubbot;600",,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-07-16 15:36:03.0,,,,,,,,,,,"0|z04q28:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incoming JMSCorrelationID is passed along when useMessageIDAsCorrelationID,CAMEL-13750,13245205,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,alvinkwekel@gmail.com,alvinkwekel@gmail.com,16/Jul/19 12:21,08/Nov/19 09:52,13/Jul/23 08:32,19/Jul/19 08:39,2.24.1,,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.RC1,,camel-activemq,camel-jms,,,1,,,,," 
{noformat}
+-+            +-+            +-+
| | +-> Q1 +-> | | +-> Q3 +-> | |
|A|            |B|            |C|
| | <-+ Q2 <-+ | | <-+ Q4 <-+ | |
+-+            +-+            +-+{noformat}
 JMS request goes from A to B to C and the reply back from C to B to A.

A useMessageIDAsCorrelationID=false
 B useMessageIDAsCorrelationID=true
 C useMessageIDAsCorrelationID=false

The JMSCorrelationID assigned by A is passed along to C via Camel message headers when useMessageIDAsCorrelationID is set on B's request. B is expecting the JMSMessageID to be used as JMSCorrelationID on the reply but since the JMSCorrelationID is actually provided, C could decide to give precedence to the JMSCorrelationID rendering B's message selector to not match.

The only case this would work as expected is when C is also set to useMessageIDAsCorrelationID to always prefer the JMSMessageID. But consider situations where C is not under your control and/or implemented in a different technology than Camel.

I'd argue the JMSCorrelationID should be made _null_ when the useMessageIDAsCorrelationID is set on a provider.

I've created an example project to demonstrate the behavior: [https://github.com/alvinkwekel/camel-example-jmscorrelationid]

This issue seems to be closely related to https://issues.apache.org/jira/browse/CAMEL-2249",,acosentino,alvinkwekel@gmail.com,davsclaus,jbonofre,,,"alvinkwekel commented on pull request #3049: CAMEL-13750: Omit JMSCorrelationID when sending with useMessageIDAsCo…
URL: https://github.com/apache/camel/pull/3049
 
 
   When the setting useMessageIdAsCorrelationid is true for the client and false for the server and a correlation id is set on the message then we expect the client to omit the correlation id on the JMS message to force the server to use the message id. But the correlation id should still be available on the client exchange message afterwards.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jul/19 13:58;githubbot;600","oscerd commented on pull request #3049: CAMEL-13750: Omit JMSCorrelationID when sending with useMessageIDAsCo…
URL: https://github.com/apache/camel/pull/3049
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jul/19 08:39;githubbot;600","alvinkwekel commented on pull request #3061: CAMEL-13750: Omit JMSCorrelationID when sending with useMessageIDAsCo…
URL: https://github.com/apache/camel/pull/3061
 
 
   Backport to 2.x
   
   When the setting useMessageIdAsCorrelationid is true for the client and false for the server and a correlation id is set on the message then we expect the client to omit the correlation id on the JMS message to force the server to use the message id. But the correlation id should still be available on the client exchange message afterwards.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/19 10:18;githubbot;600","oscerd commented on pull request #3061: CAMEL-13750: Omit JMSCorrelationID when sending with useMessageIDAsCo…
URL: https://github.com/apache/camel/pull/3061
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/19 15:03;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,CAMEL-14156,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Advanced,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 08 09:52:31 UTC 2019,,,,,,,,,,,"0|z04pts:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Jul/19 18:19;davsclaus;The idea of this feature is not to mix and match the setting, but was for some brokers like WebSphereMQ back then had issues and you could turn on to use an alternative correlation id.

Maybe in your use-case/situation you can set custom correlation IDs that works with your mixed set of brokers and this scenario.

You are of course welcome to dive into the source code and see if you can improve the code, but at this points this ticket is likely not a priority in this community at the moment. Others are of course to VOTE on the jira ticket and comment too.;;;","17/Jul/19 18:27;davsclaus;Also on B you can try to remove the existing JMSCorrelationID before sending to C;;;","18/Jul/19 08:55;alvinkwekel@gmail.com;Our current workaround is indeed to remove the JMSCorrelationID from the Camel message using removeHeader in the routes.

I’ll see if I can create a patch to let the useMessageIDAsCorrelationID play nice in a heterogeneous landscape.;;;","18/Jul/19 14:04;alvinkwekel@gmail.com;I've submitted a PR [3049|https://github.com/apache/camel/pull/3049]. Let me know what you think.;;;","22/Jul/19 08:56;alvinkwekel@gmail.com;Thanks for accepting the fix. Would it be possible to merge this into 2.24.x?;;;","22/Jul/19 08:59;acosentino;Yes, I think so on 2.x, 2.24.x and 2.23.x ;;;","25/Jul/19 10:19;alvinkwekel@gmail.com;I've created a backport PR for 2.x. [https://github.com/apache/camel/pull/3061];;;","25/Jul/19 10:21;acosentino;Yes, I forgot about it.. Sorry [~alvinkwekel@gmail.com];;;","08/Nov/19 09:47;acosentino;[~jbonofre]Onofré why did you re-assign this?;;;","08/Nov/19 09:52;jbonofre;A mistake, I was about to reopen it, but I finally create a new Jira. I'm reassigning.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-salesforce integration tests deserialization issue,CAMEL-13746,13244330,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,aldettinger,aldettinger,aldettinger,11/Jul/19 13:38,12/Jul/19 08:01,13/Jul/23 08:32,12/Jul/19 08:01,3.0.0-M3,,,,,,,,,,,3.0.0.RC1,,,,,,camel-salesforce,,,,0,,,,,"Multiple fix/enhancements are need:

+ The JobInfo de-serialization is not working anymore (no more namespace aware)

+ itests are also executed during test phase

+ few typos in documentation

+ some tests are not designed to run in concurrency with others",,aldettinger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 11 14:18:47 UTC 2019,,,,,,,,,,,"0|z04kgo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Jul/19 14:18;aldettinger;pushed to master, let's wait the next build.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel route customized id isn't correct if there are more than one Rest DSL route availble,CAMEL-13724,13243268,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ffang,ffang,ffang,04/Jul/19 21:30,11/Jul/19 14:03,13/Jul/23 08:32,05/Jul/19 17:33,2.23.3,2.24.1,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.M4,,rest,,,,0,,,,,"If rest dsl routes have their own customer ids, the id would be ignored, hence generate  invalid swagger operation Id 
the testcase here can expose this problem
{code}
--- a/core/camel-core/src/test/java/org/apache/camel/impl/RouteIdRestDefinitionTest.java
+++ b/core/camel-core/src/test/java/org/apache/camel/impl/RouteIdRestDefinitionTest.java
@@ -39,7 +39,8 @@ public class RouteIdRestDefinitionTest extends ContextTestSupport {
             public void configure() throws Exception {
                 from(""direct:start1?timeout=30000"").to(""mock:result"");
                 from(""direct:start2"").to(""mock:result"");
-                rest(""/say/hello"").get(""/bar"").id(""getSayHelloBar"").to(""mock:result"");
+                rest(""/say/hello"").get(""/bar"").id(""getSayHelloBar"").to(""mock:result"")
+                .get(""/bar/{user}"").id(""getSayHelloBarWithUser"").to(""mock:result"");
             }
         };
     }
@@ -47,6 +48,7 @@ public class RouteIdRestDefinitionTest extends ContextTestSupport {
     @Test
     public void testSayHelloBar() {
         assertEquals(""getSayHelloBar"", context.getRouteDefinitions().get(2).getId());
+        assertEquals(""getSayHelloBarWithUser"", context.getRouteDefinitions().get(3).getId());
     }
     
 }
{code}",,acosentino,davsclaus,ffang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13424,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 11 14:03:46 UTC 2019,,,,,,,,,,,"0|z04dzs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"05/Jul/19 09:11;davsclaus;Thanks Freeman, can you backport this to relevant branches as in fix versions;;;","05/Jul/19 13:29;ffang;[~davsclaus], sure, I will do it.

Freeman;;;","11/Jul/19 08:16;acosentino;[~ffang] this seems to break the restlet tests

 

[ERROR] Failures: 
[ERROR] org.apache.camel.component.restlet.RestRestletCorsTest.testCors(org.apache.camel.component.restlet.RestRestletCorsTest)
[ERROR] Run 1: RestRestletCorsTest.testCors:43->Assert.assertEquals:144->Assert.assertEquals:118->Assert.failNotEquals:834->Assert.fail:88 expected:<https://localhost:443> but was:<null>
[ERROR] Run 2: RestRestletCorsTest.testCors:43->Assert.assertEquals:144->Assert.assertEquals:118->Assert.failNotEquals:834->Assert.fail:88 expected:<https://localhost:443> but was:<null>
[ERROR] Run 3: RestRestletCorsTest.testCors:43->Assert.assertEquals:144->Assert.assertEquals:118->Assert.failNotEquals:834->Assert.fail:88 expected:<https://localhost:443> but was:<null>
[INFO] 
[ERROR] org.apache.camel.component.restlet.RestRestletCorsTest.testRestletProducerGet(org.apache.camel.component.restlet.RestRestletCorsTest)
[ERROR] Run 1: RestRestletCorsTest.testRestletProducerGet:60->Assert.assertThat:923->Assert.assertThat:956 
Expected: is ""https://localhost:443""
 but: was null
[ERROR] Run 2: RestRestletCorsTest.testRestletProducerGet:60->Assert.assertThat:923->Assert.assertThat:956 
Expected: is ""https://localhost:443""
 but: was null
[ERROR] Run 3: RestRestletCorsTest.testRestletProducerGet:60->Assert.assertThat:923->Assert.assertThat:956 
Expected: is ""https://localhost:443""
 but: was null
[INFO] 
[ERROR] org.apache.camel.component.restlet.RestRestletGetCorsTest.testCors(org.apache.camel.component.restlet.RestRestletGetCorsTest)
[ERROR] Run 1: RestRestletGetCorsTest.testCors:39->Assert.assertEquals:144->Assert.assertEquals:118->Assert.failNotEquals:834->Assert.fail:88 expected:<*> but was:<null>
[ERROR] Run 2: RestRestletGetCorsTest.testCors:39->Assert.assertEquals:144->Assert.assertEquals:118->Assert.failNotEquals:834->Assert.fail:88 expected:<*> but was:<null>
[ERROR] Run 3: RestRestletGetCorsTest.testCors:39->Assert.assertEquals:144->Assert.assertEquals:118->Assert.failNotEquals:834->Assert.fail:88 expected:<*> but was:<null>;;;","11/Jul/19 13:34;acosentino;It seems to be ok on CI, so probably I had a mix on my local repo. Sorry for the noise [~ffang];;;","11/Jul/19 14:03;ffang;No problem [~acosentino]! Another pair of eyes is always great!

I did run the tests in camel-restlet when committing and I did it again this morning, all passed.

Cheers
Freeman;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix syntax for pulsar component,CAMEL-13718,13242755,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,lhein,lhein,02/Jul/19 13:30,05/Jul/19 10:21,13/Jul/23 08:32,05/Jul/19 09:10,2.24.1,,,,,,,,,,,2.24.2,2.25.0,3.0.0,3.0.0.M4,,,,,,,0,,,,,"Replace

 
{noformat}
pulsar:persistence://tenant/namespace/topic{noformat}
 

with
{noformat}
pulsar:configuration{noformat}
or
{noformat}
pulsar:uri{noformat}
 

There is currently only a single property of kind ""path"" for this component which is called ""topic"". The description of that parameter suggests that is should hold type, tenant and topic values for the endpoint which makes the name ""topic"" for this parameter a bad choice. I would rather suggest to rename it to something more fitting like ""configuration"" or ""uri"" instead.

 ",,lhein,,,,,,"lhein commented on pull request #3013: CAMEL-13718 - fixed wrong syntax for pulsar endpoints
URL: https://github.com/apache/camel/pull/3013
 
 
   Signed-off-by: Lars Heinemann <lhein.smx@gmail.com>
   
   This is a change proposal. I haven't tested it in all details. Please make sure to review the change carefully.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/19 15:55;githubbot;600","davsclaus commented on pull request #3013: CAMEL-13718 - fixed wrong syntax for pulsar endpoints
URL: https://github.com/apache/camel/pull/3013
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jul/19 06:20;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,CAMEL-10013,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 02 15:55:57 UTC 2019,,,,,,,,,,,"0|z04auo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Jul/19 15:55;lhein;added a change proposal at [https://github.com/apache/camel/pull/3013.] please review and test carefully.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix syntax for websocket-jsr356 component,CAMEL-13717,13242745,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,lhein,lhein,02/Jul/19 13:04,02/Jul/19 15:04,13/Jul/23 08:32,02/Jul/19 15:04,2.24.1,,,,,,,,,,,3.0.0,3.0.0.M4,,,,,camel-websocket,,,,0,,,,,"replace
{noformat}
resourceUri{noformat}
with
{noformat}
websocketPathOrUri{noformat}",,lhein,,,,,,"lhein commented on pull request #3012: CAMEL-13717 - fixed wrong syntax for websocket-jsr356 endpoints
URL: https://github.com/apache/camel/pull/3012
 
 
   Signed-off-by: Lars Heinemann <lhein.smx@gmail.com>
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/19 13:16;githubbot;600","oscerd commented on pull request #3012: CAMEL-13717 - fixed wrong syntax for websocket-jsr356 endpoints
URL: https://github.com/apache/camel/pull/3012
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/19 14:20;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,CAMEL-10013,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 02 13:17:10 UTC 2019,,,,,,,,,,,"0|z04asg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Jul/19 13:17;lhein;provided a PR at https://github.com/apache/camel/pull/3012;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix syntax for corda component,CAMEL-13716,13242739,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,lhein,lhein,02/Jul/19 12:52,02/Jul/19 15:04,13/Jul/23 08:32,02/Jul/19 15:04,2.24.1,,,,,,,,,,,3.0.0,3.0.0.M4,,,,,camel-corda,,,,0,,,,,"replace
{noformat}
corda:url {noformat}
with
{noformat}
corda:configuration{noformat}",,lhein,,,,,,"lhein commented on pull request #3011: CAMEL-13716 - fixed wrong syntax for corda endpoints
URL: https://github.com/apache/camel/pull/3011
 
 
   Signed-off-by: Lars Heinemann <lhein.smx@gmail.com>
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/19 13:00;githubbot;600","oscerd commented on pull request #3011: CAMEL-13716 - fixed wrong syntax for corda endpoints
URL: https://github.com/apache/camel/pull/3011
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/19 14:19;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,CAMEL-10013,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 02 13:00:37 UTC 2019,,,,,,,,,,,"0|z04ar4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Jul/19 13:00;lhein;provided a PR at https://github.com/apache/camel/pull/3011;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Files.createTempFile not equivalent to File.createTempFile,CAMEL-13711,13242477,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tdiesler,tdiesler,tdiesler,01/Jul/19 10:35,09/Jul/19 06:20,13/Jul/23 08:32,09/Jul/19 06:20,,,,,,,,,,,,2.25.0,3.0.0,3.0.0.RC1,,,,camel-hdfs2,,,,0,,,,,"It seems that Files.createTempFile is NOT equivalent to File.createTempFile.

With this debug code 

{code}
        private File getHfdsFileToTmpFile(String hdfsPath, HdfsConfiguration configuration) {
            try {
                String fname = hdfsPath.substring(hdfsPath.lastIndexOf('/'));

                System.out.println(""fname: "" + fname);
                
                File outputDest;
                try {
                    System.out.println(""First trying: Files.createTempFile"");
                    outputDest = Files.createTempFile(fname, "".hdfs"").toFile();
                } catch (Exception ex) {
                    
                    ex.printStackTrace();

                    System.out.println(""Now trying: File.createTempFile"");
                    outputDest = File.createTempFile(fname, "".hdfs"");
                }
                
                System.out.println(""outputDest: "" + outputDest);
                 
               ...
        }
    },
{code}

I see ...

{code}
{12:29:50,180 INFO  [stdout]  fname: /ID-MacBook-1561976987280-0-1.opened
12:29:50,180 INFO  [stdout]  First trying: Files.createTempFile
12:29:50,189 ERROR [stderr]  java.lang.IllegalArgumentException: Invalid prefix or suffix
12:29:50,189 ERROR [stderr]  	at java.nio.file.TempFileHelper.generatePath(TempFileHelper.java:63)
12:29:50,190 ERROR [stderr]  	at java.nio.file.TempFileHelper.create(TempFileHelper.java:127)
12:29:50,190 ERROR [stderr]  	at java.nio.file.TempFileHelper.createTempFile(TempFileHelper.java:161)
12:29:50,190 ERROR [stderr]  	at java.nio.file.Files.createTempFile(Files.java:897)
12:29:50,190 ERROR [stderr]  	at org.apache.camel.component.hdfs2.HdfsFileType$1.getHfdsFileToTmpFile(HdfsFileType.java:147)
12:29:50,190 ERROR [stderr]  	at org.apache.camel.component.hdfs2.HdfsFileType$1.createInputStream(HdfsFileType.java:131)
12:29:50,191 ERROR [stderr]  	at org.apache.camel.component.hdfs2.HdfsInputStream.createInputStream(HdfsInputStream.java:50)
12:29:50,191 ERROR [stderr]  	at org.apache.camel.component.hdfs2.HdfsConsumer.doPoll(HdfsConsumer.java:139)
12:29:50,191 ERROR [stderr]  	at org.apache.camel.component.hdfs2.HdfsConsumer.poll(HdfsConsumer.java:97)
12:29:50,191 ERROR [stderr]  	at org.apache.camel.support.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:170)
12:29:50,191 ERROR [stderr]  	at org.apache.camel.support.ScheduledPollConsumer.run(ScheduledPollConsumer.java:97)
12:29:50,191 ERROR [stderr]  	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
12:29:50,191 ERROR [stderr]  	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
12:29:50,192 ERROR [stderr]  	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
12:29:50,192 ERROR [stderr]  	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
12:29:50,192 ERROR [stderr]  	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
12:29:50,192 ERROR [stderr]  	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
12:29:50,192 ERROR [stderr]  	at java.lang.Thread.run(Thread.java:748)
12:29:50,192 INFO  [stdout]  Now trying: File.createTempFile
12:29:50,193 INFO  [stdout]  outputDest: /var/folders/11/lsh29g8s2msbx_sv1j2zzg5c0000gn/T/ID-MacBook-1561976987280-0-1.opened3105164072945824679.hdfs
{code}

CrossRef: https://github.com/wildfly-extras/wildfly-camel/issues/2838",,tdiesler,,,,,,"tdiesler commented on pull request #3008: [CAMEL-13711] Files.createTempFile not equivalent to File.createTempFile
URL: https://github.com/apache/camel/pull/3008
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jul/19 10:49;githubbot;600","oscerd commented on pull request #3008: [CAMEL-13711] Files.createTempFile not equivalent to File.createTempFile
URL: https://github.com/apache/camel/pull/3008
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/19 08:25;githubbot;600","tdiesler commented on pull request #3026: [CAMEL-13711] Files.createTempFile not equivalent to File.createTempFile
URL: https://github.com/apache/camel/pull/3026
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jul/19 14:16;githubbot;600","oscerd commented on pull request #3026: [CAMEL-13711] Files.createTempFile not equivalent to File.createTempFile
URL: https://github.com/apache/camel/pull/3026
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jul/19 06:19;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 08 14:14:14 UTC 2019,,,,,,,,,,,"0|z0494g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Jul/19 10:37;tdiesler;See github comment
https://github.com/apache/camel/commit/bdc882a2031df73fdf48d5c22ff8c0014ceec82d#r34138795;;;","08/Jul/19 14:14;tdiesler;This is still not fixed - reverting to the retry code above;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-netty4-http - Query string issues,CAMEL-13707,13242456,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,bedla,ecotoper,ecotoper,01/Jul/19 09:35,20/Jul/19 14:40,13/Jul/23 08:32,09/Jul/19 06:47,,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-netty4-http,,,,0,,,,,"Test environment:

 

[https://github.com/zregvart/camel-netty-proxy]

running the readme, all ok,

 

running the following command, no connection and the following error message: 
{code:java}

$ http_proxy=http://localhost:8080 curl -v ""http://neverssl.co?user=123m"" * Uses proxy env variable http_proxy == 'http://localhost:8080' * Trying ::1... * TCP_NODELAY set * Connected to localhost (::1) port 8080 (#0) > GET http://neverssl.co/?user=123m HTTP/1.1 > Host: neverssl.co > User-Agent: curl/7.64.0 > Accept: */* > Proxy-Connection: Keep-Alive > ^C {code}

Log output:
{code:java}
2019-07-01 08:23:55 [Camel Thread #11 - NettyClientTCPWorker] WARN i.n.util.concurrent.DefaultPromise - An exception was thrown by org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete() io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1 at io.netty.util.internal.ReferenceCountUpdater.toLiveRealRefCnt(ReferenceCountUpdater.java:74) at io.netty.util.internal.ReferenceCountUpdater.release(ReferenceCountUpdater.java:138) at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:100) at io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage.release(HttpObjectAggregator.java:386) at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88) at org.apache.camel.component.netty4.NettyProducer$BodyReleaseCallback.done(NettyProducer.java:663) at org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete(NettyProducer.java:631) at org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete(NettyProducer.java:612) at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:502) at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:495) at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:474) at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:415) at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:540) at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:533) at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:106) at io.netty.channel.DefaultChannelPromise.setFailure(DefaultChannelPromise.java:89) at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:216) at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:49) at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:188) at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:174) at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:502) at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:476) at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:415) at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:540) at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:529) at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:101) at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84) at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:1009) at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:517) at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:428) at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:487) at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:405) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500) at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906) at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) at java.lang.Thread.run(Thread.java:748){code}
 ",,bedla,ecotoper,,,,,"bedlaj commented on pull request #3018: CAMEL-13707: The path should not be empty in combination with http query
URL: https://github.com/apache/camel/pull/3018
 
 
   Standard HTTP clients (Chrome and even curl) replaces empty path to / when query string in present and some web servers expects this.
   Eg: http://captive.apple.com?hello=hi becomes http://captive.apple.com/?hello=hi
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jul/19 13:48;githubbot;600","oscerd commented on pull request #3018: CAMEL-13707: The path should not be empty in combination with http query
URL: https://github.com/apache/camel/pull/3018
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jul/19 06:46;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,"03/Jul/19 22:47;bedla;CamelHttpQuerySlashPath.java;https://issues.apache.org/jira/secure/attachment/12973621/CamelHttpQuerySlashPath.java",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 19 18:39:59 UTC 2019,,,,,,,,,,,"0|z048zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Jul/19 20:09;bedla;It is not about query string at all, it is because the correct url is http://neverssl.com?user=123m (You have missed *m* in TLD);;;","03/Jul/19 20:22;ecotoper;[~bedla]

 
{code:java}
localhost.localdomain ➜  camel-netty-proxy git:(master) http_proxy=http://localhost:8080 curl -v ""http://neverssl.com?user=123""
* Uses proxy env variable http_proxy == 'http://localhost:8080'
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 8080 (#0)
> GET http://neverssl.com/?user=123 HTTP/1.1
> Host: neverssl.com
> User-Agent: curl/7.64.0
> Accept: */*
> Proxy-Connection: Keep-Alive
>
< HTTP/1.1 400 Bad Request
< content-length: 3674
< Server: CloudFront
< X-Amz-Cf-Id: j8XHKtmGAuH4Q51gu8zVnWIISEz-3qL8C47D4FvLFXn5bj4yJsVqvw==
< X-Amz-Cf-Pop: MAD51-C1
< X-Cache: Error from cloudfront
< content-type: text/plain
< connection: close
<
org.apache.camel.component.netty4.http.NettyHttpOperationFailedException: Netty HTTP operation failed invoking http://neverssl.com:80 with statusCode: 400
        at org.apache.camel.component.netty4.http.NettyHttpHelper.populateNettyHttpOperationFailedException(NettyHttpHelper.java:160)
        at org.apache.camel.component.netty4.http.NettyHttpProducer$NettyHttpProducerCallback.done(NettyHttpProducer.java:141)
        at org.apache.camel.component.netty4.NettyProducer$NettyProducerCallback.done(NettyProducer.java:541)
        at org.apache.camel.component.netty4.handlers.ClientChannelHandler.channelRead0(ClientChannelHandler.java:210)
        at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
        at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:301)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
        at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
        at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:682)
        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:617)
        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:534)
        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
        at java.lang.Thread.run(Thread.java:748)
* Closing connection 0{code};;;","03/Jul/19 22:32;bedla;It seems to be issue in netty producer. When *CamelHttpQuery* is null or single slash, it goes removed from request uri. Some webservers then treats the request as invalid in combination with http query parameters. I was able to reproduce this in 3.0.0.M3  with simple producer [^CamelHttpQuerySlashPath.java]

Wireshark shows this:
{code:java}
Request:

GET ?hello=hi HTTP/1.1
User-Agent: curl/7.47.0
Accept: */*
Proxy-Connection: Keep-Alive
content-length: 0
Accept: */*
hello: hi
User-Agent: curl/7.47.0
host: captive.apple.com
connection: keep-alive

Response:
HTTP/1.0 400 Invalid HTTP Request
Date: Wed, 03 Jul 2019 21:18:28 GMT
Via: http/1.1 deber5-edge-bx-009.ts.apple.com (ApacheTrafficServer/8.0.4)
Server: ATS/8.0.4
Cache-Control: no-store
Content-Type: text/html
Content-Language: en
CDNUUID: cd74be3a-730d-46eb-a5e8-29e9da0816f4-1791644171
Content-Length: 219

<HTML>
<HEAD>
<TITLE>Bad Request</TITLE>
</HEAD>

<BODY BGCOLOR=""white"" FGCOLOR=""black"">
<H1>Bad Request</H1>
<HR>

<FONT FACE=""Helvetica,Arial""><B>
Description: Could not process this request.
</B></FONT>
<HR>
</BODY>

{code}
 ;;;","05/Jul/19 12:58;bedla;Working on fix;;;","19/Jul/19 15:50;ecotoper;Hi [~bedla]

I'm testing with the following change, but I can't build at all, could you help me? 


Change: 
[https://github.com/zregvart/camel-netty-proxy/compare/master...eloycoto:ApacheRepo?expand=1]

 

Log on build: 


{code:java}

localhost.localdomain ➜  camel-netty-proxy git:(ApacheRepo) docker build --no-cache -t camel-netty-proxy .
Sending build context to Docker daemon  21.74MB
Step 1/15 : FROM maven:3-jdk-8 AS build
 ---> 23d9c051cfbe
Step 2/15 : WORKDIR /build
 ---> Running in a25881239161
Removing intermediate container a25881239161
 ---> 5de680d18779
Step 3/15 : COPY pom.xml settings.xml ./
 ---> 89b14aa0daca
Step 4/15 : RUN mvn -B -q -s settings.xml dependency:go-offline
 ---> Running in 6e7acbc93b4c

[ERROR] Failed to execute goal on project camel-netty-proxy: Could not resolve dependencies for project com.github.zregvart:camel-netty-proxy:jar:0.0.1: The following artifacts could not be resolved: org.apache.camel:camel-main:jar:3.0.0-SNAPSHOT, org.apache.camel:camel-core:jar:3.0.0-SNAPSHOT, org.apache.camel:camel-api:jar:3.0.0-SNAPSHOT, org.apache.camel:camel-netty4-http:jar:3.0.0-SNAPSHOT: Could not find artifact org.apache.camel:camel-main:jar:3.0.0-SNAPSHOT in apache (https://repository.apache.org/) -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException{code}

Could you help me to get a sandbox using current master? 

Regards.;;;","19/Jul/19 18:39;bedla;Hi [~ecotoper],

you need to enable snapshots for repository. 
{code:java}
<repository>
  <id>apache</id>
  <url>https://repository.apache.org/content/repositories/snapshots/</url>
  <releases> 
    <enabled>false</enabled>
  </releases>
  <snapshots>
    <enabled>true</enabled>
  </snapshots>
</repository>
{code}
 Dont forget to upgrade once 3.0.0.M5 is released, snapshot artifacts are not safe for production use.

//Edit: Just realized the comment is not completely correct, you need to use snapshots url also. See edited comment [~ecotoper], or [https://camel.apache.org/maven-2-snapshot-repository-in-pom.html] for more details;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
createRowModel failed to set cell's valueType,CAMEL-13700,13242284,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ramu11,kevin.cao,kevin.cao,29/Jun/19 09:48,05/Jul/19 16:46,13/Jul/23 08:32,05/Jul/19 16:46,3.0.0,,,,,,,,,,,3.0.0,,,,,,camel-hbase,,,,0,,,,,"When 
{code:java}
org.apache.camel.component.hbase.HBaseEndpoint#createRowModel
{code}
function has been called, following code should check if `valueType` parameter has been set, if so, then set cell's valueType.
{code:java}
if (parameters.containsKey(HBaseAttribute.HBASE_VALUE_TYPE.asOption(i))) {
    String valueType = String.valueOf(parameters.remove(HBaseAttribute.HBASE_VALUE_TYPE.asOption(i)));
    if (valueType != null && !valueType.isEmpty()) {
        rowModel.setRowType(getCamelContext().getClassResolver().resolveClass(valueType));
    }
}
{code}
However, the code set rowModel's rowType instead of cellModel's valueType, and, IMHO, this is not correct.

 

My endpoint is configurated as following:
{code:xml}
<from uri=""hbase:table?operation=CamelHBaseScan&amp;row.family=motion&amp;row.qualifier=aver_max_A&amp;row.valueType=java.lang.Integer"" />
{code}
Thanks! ",,davsclaus,kevin.cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 02 11:32:47 UTC 2019,,,,,,,,,,,"0|z047xk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Jul/19 11:32;davsclaus;Ah yeah that seems more correct. You are welcome to provide a PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The flattern pom has broken all the maven-archetypes,CAMEL-13698,13242134,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Critical,Fixed,,davsclaus,davsclaus,28/Jun/19 10:02,28/Jun/19 11:35,13/Jul/23 08:32,28/Jun/19 11:35,,,,,,,,,,,,3.0.0,3.0.0.M4,,,,,tooling,,,,0,,,,,"The archetypes dont work, 

M! worked
http://repo2.maven.org/maven2/org/apache/camel/archetypes/3.0.0-M1/archetypes-3.0.0-M1.pom

M3 fails
http://repo2.maven.org/maven2/org/apache/camel/archetypes/3.0.0-M3/archetypes-3.0.0-M3.pom",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-06-28 10:02:47.0,,,,,,,,,,,"0|z0470o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NotifyBuilder not working as expected,CAMEL-13687,13241676,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,sreejeshraj,sreejeshraj,26/Jun/19 09:28,01/Jul/19 16:32,13/Jul/23 08:32,01/Jul/19 16:32,2.23.1,,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.M4,,came-core,,,,0,,,,,"am trying to test an error handling route. The {{NotificationBuilder}} does not work as expected (it always returns false).

Created a main route and a test route to test the main route. I used Spring Boot - all other tests work fine, so there is no problem with the setup I guess.

 

I have attached the sample project. Please uncomment the @Ignore method to test the method. Please read the README.md attached in the project",,davsclaus,sreejeshraj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/19 09:26;sreejeshraj;camel-spring-boot-sample.zip;https://issues.apache.org/jira/secure/attachment/12972953/camel-spring-boot-sample.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,https://github.com/sreejeshraj/camel-spring-boot-sample,,,,,,,,,,9223372036854775807,,,Mon Jul 01 16:02:11 UTC 2019,,,,,,,,,,,"0|z0446w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Jul/19 16:02;davsclaus;This is working as designed as the fromRoute is from the original route as its stated in the javadoc.

To do what you want we need a new fromCurrentRoute that I am adding.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-file - From file to file with readLock=fileLock dont work on windows,CAMEL-13680,13241404,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,25/Jun/19 07:09,02/Jul/19 12:11,13/Jul/23 08:32,25/Jun/19 07:58,,,,,,,,,,,,2.25.0,3.0.0,3.0.0.M4,,,,camel-core,,,,0,,,,,"You can get errors like
{code}
Stacktrace
---------------------------------------------------------------------------------------------------------------------------------------
org.apache.camel.component.file.GenericFileOperationFailedException: Cannot store file: work\cbr\output\ID-WIN-JTA8KU4EF9D-1561426618994-0-2
	at org.apache.camel.component.file.FileOperations.storeFile(FileOperations.java:352)
	at org.apache.camel.component.file.GenericFileProducer.writeFile(GenericFileProducer.java:305)
	at org.apache.camel.component.file.GenericFileProducer.processExchange(GenericFileProducer.java:169)
	at org.apache.camel.component.file.GenericFileProducer.process(GenericFileProducer.java:80)
	at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)
	at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148)
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548)
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:138)
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:101)
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
	at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:452)
	at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:219)
	at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:183)
	at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:174)
	at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.nio.file.FileSystemException: work\cbr\input\ID-WIN-JTA8KU4EF9D-1561426618994-0-2 -> work\cbr\output\ID-WIN-JTA8KU4EF9D-1561426618994-0-2: The process cannot access the file because it is being used by another process
	at sun.nio.fs.WindowsException.translateToIOException(Unknown Source)
	at sun.nio.fs.WindowsException.rethrowAsIOException(Unknown Source)
	at sun.nio.fs.WindowsFileCopy.copy(Unknown Source)
	at sun.nio.fs.WindowsFileSystemProvider.copy(Unknown Source)
	at java.nio.file.Files.copy(Unknown Source)
{code}",,davsclaus,hfuruichi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 02 12:11:18 UTC 2019,,,,,,,,,,,"0|z042ig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Jul/19 08:55;hfuruichi;Hello [~davsclaus],

I realized that the fix was not enough for this issue.

org.apache.camel.component.file.FileOperations.writeFileByFile() was OK now, but we also need to fix org.apache.camel.component.file.FileOperations.renameFile() and org.apache.camel.util.FileUtil class's methods to avoid to use java.nio.file.Files.copy() method.

Please take a look at this stack trace to get an idea about it. (Sorry it's not 3.0.x, but I hope it still helps)
{code:java}
[ead #4 - file://work/cbr/input] GenericFileOnCompletion        WARN  Error during commit. Exchange[ID-WIN-JTA8KU4EF9D-1562055372761-0-1]. Caused by: [org.apache.camel.component.file.GenericFileOperationFailedException - Error renaming file from C:\Users\Administrator\workspace\FuseReproducer\work\cbr\input\ID-WIN-JTA8KU4EF9D-1562029860727-1-2 to work\cbr\input\.camel\ID-WIN-JTA8KU4EF9D-1562029860727-1-2]
org.apache.camel.component.file.GenericFileOperationFailedException: Error renaming file from C:\Users\Administrator\workspace\FuseReproducer\work\cbr\input\ID-WIN-JTA8KU4EF9D-1562029860727-1-2 to work\cbr\input\.camel\ID-WIN-JTA8KU4EF9D-1562029860727-1-2
	at org.apache.camel.component.file.FileOperations.renameFile(FileOperations.java:85)
	at org.apache.camel.component.file.strategy.GenericFileProcessStrategySupport.renameFile(GenericFileProcessStrategySupport.java:128)
	at org.apache.camel.component.file.strategy.GenericFileRenameProcessStrategy.commit(GenericFileRenameProcessStrategy.java:111)
	at org.apache.camel.component.file.GenericFileOnCompletion.processStrategyCommit(GenericFileOnCompletion.java:127)
	at org.apache.camel.component.file.GenericFileOnCompletion.onCompletion(GenericFileOnCompletion.java:83)
	at org.apache.camel.component.file.GenericFileOnCompletion.onComplete(GenericFileOnCompletion.java:59)
	at org.apache.camel.util.UnitOfWorkHelper.doneSynchronizations(UnitOfWorkHelper.java:104)
	at org.apache.camel.impl.DefaultUnitOfWork.done(DefaultUnitOfWork.java:243)
	at org.apache.camel.util.UnitOfWorkHelper.doneUow(UnitOfWorkHelper.java:65)
	at org.apache.camel.processor.CamelInternalProcessor$UnitOfWorkProcessorAdvice.after(CamelInternalProcessor.java:685)
	at org.apache.camel.processor.CamelInternalProcessor$UnitOfWorkProcessorAdvice.after(CamelInternalProcessor.java:634)
	at org.apache.camel.processor.CamelInternalProcessor$InternalCallback.done(CamelInternalProcessor.java:251)
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:127)
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201)
	at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:454)
	at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:223)
	at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:187)
	at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:174)
	at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.nio.file.FileSystemException: C:\Users\Administrator\workspace\FuseReproducer\work\cbr\input\ID-WIN-JTA8KU4EF9D-1562029860727-1-2 -> work\cbr\input\.camel\ID-WIN-JTA8KU4EF9D-1562029860727-1-2: The process cannot access the file because it is being used by another process

	at sun.nio.fs.WindowsException.translateToIOException(Unknown Source)
	at sun.nio.fs.WindowsException.rethrowAsIOException(Unknown Source)
	at sun.nio.fs.WindowsFileCopy.copy(Unknown Source)
	at sun.nio.fs.WindowsFileSystemProvider.copy(Unknown Source)
	at java.nio.file.Files.copy(Unknown Source)
	at org.apache.camel.util.FileUtil.copyFile(FileUtil.java:541)
	at org.apache.camel.util.FileUtil.renameFileUsingCopy(FileUtil.java:525)
	at org.apache.camel.util.FileUtil.renameFile(FileUtil.java:499)
	at org.apache.camel.component.file.FileOperations.renameFile(FileOperations.java:82)
	... 25 more
{code};;;","02/Jul/19 08:59;davsclaus;Can you try set renameUsingCopy=true;;;","02/Jul/19 09:27;hfuruichi;Yes. I tested it, but does not work either.

Even I enabled the option, go into the same stack trace.

 
{code:java}
at sun.nio.fs.WindowsException.translateToIOException(Unknown Source)
 at sun.nio.fs.WindowsException.rethrowAsIOException(Unknown Source)
 at sun.nio.fs.WindowsFileCopy.copy(Unknown Source)
 at sun.nio.fs.WindowsFileSystemProvider.copy(Unknown Source)
 at java.nio.file.Files.copy(Unknown Source)
 at org.apache.camel.util.FileUtil.copyFile(FileUtil.java:541)
 at org.apache.camel.util.FileUtil.renameFileUsingCopy(FileUtil.java:525)
{code}

 Please take a look at this source code, how the ""renameUsingCopy"" option is used.

 

[https://github.com/apache/camel/blob/eed7b1113ec1b72731b051f69ea3d269bf5fb1c5/components/camel-file/src/main/java/org/apache/camel/component/file/FileOperations.java#L80]

 ;;;","02/Jul/19 12:01;davsclaus;Okay so this is not possible on windows with readLock=fileLock. The changes we did previously was only to ensure the file lock could be released.

There are too many places where the file component can do a copy/rename/move or other operations. We will update the doc to mention that readLock=fileLock is not supported on windows. You can use any of the many other read locks on windows instead.;;;","02/Jul/19 12:11;davsclaus;Added a check that if readLock=fileLock on windows you now get an error and also updated the doc.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows network UNC paths not treated correctly (File2/tempPrefix),CAMEL-13667,13240654,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,cblamauer,cblamauer,20/Jun/19 14:07,21/Jun/19 12:50,13/Jul/23 08:32,21/Jun/19 12:50,2.22.2,,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.M4,,came-core,,,,0,camel-core,camel-file,UNC,windows,"Dear all,

We are using Camel's File2 endpoint to deliver reports to a Windows network share. The used URI is (here in a properties file):

{{# File URI equivalent of \\FILESERVER.mycompany.local\Public\reports}}
 {{report.delivery.to=[file:////FILESERVER.mycompany.local/Public/reports?keepLastModified=true&tempPrefix=tmp_]}}

This results in an exception, see the stack trace (attached).

I debugged and traced the issue back to:

{{org.apache.camel.component.file.GenericFileProducer#createTempFileName}}

which is using

{{org.apache.camel.util.FileUtil#compactPath(java.lang.String, java.lang.String)}}

This method only preserves the first slash/backslash at the start. For UNC paths on Windows however, 2 backslashes are needed.

I prepared a patch for:
 * {{org.apache.camel.util.FileUtil}}
 * {{org.apache.camel.util.FileUtilTest}}

which remedies the issue on Windows.

I would appreciate if you could check the patch, and integrate it to 2.x and 3.x branches if it is ok.

Thank you.

Kind regards,

Clemens

 ",,acosentino,cblamauer,davsclaus,derdimi,,,"cblamauer commented on pull request #2989: PR for CAMEL-13667 (2.x branch)
URL: https://github.com/apache/camel/pull/2989
 
 
   PR for Windows network UNC paths not treated correctly (File2/tempPrefix)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jun/19 15:28;githubbot;600","cblamauer commented on pull request #2990: PR for CAMEL-13667 master
URL: https://github.com/apache/camel/pull/2990
 
 
   Windows network UNC paths not treated correctly (File2/tempPrefix)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jun/19 15:44;githubbot;600","oscerd commented on pull request #2990: PR for CAMEL-13667 master
URL: https://github.com/apache/camel/pull/2990
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jun/19 12:30;githubbot;600","oscerd commented on pull request #2989: PR for CAMEL-13667 (2.x branch)
URL: https://github.com/apache/camel/pull/2989
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jun/19 12:44;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,"20/Jun/19 14:07;cblamauer;Windows_network_UNC_paths_not_treated_correctly_(File2_tempPrefix).patch;https://issues.apache.org/jira/secure/attachment/12972345/Windows_network_UNC_paths_not_treated_correctly_%28File2_tempPrefix%29.patch","20/Jun/19 14:18;cblamauer;stacktrace.log;https://issues.apache.org/jira/secure/attachment/12972346/stacktrace.log",,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,Thu Jun 20 16:10:23 UTC 2019,,,,,,,Patch Available,,,,"0|z03xwg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Jun/19 14:11;davsclaus;Thanks for reporting and the patch - looks fine for me;;;","20/Jun/19 14:11;davsclaus;I wonder if you would attempt to provide the patch as a github PR, then its a bit easier for us? ;;;","20/Jun/19 14:19;cblamauer;Hi Claus,
sure, will do.;;;","20/Jun/19 14:50;cblamauer;I have created a pull request for camel-2.23.x branch:
[https://github.com/apache/camel/pull/2988]

Please let me know if you need anything else.

Thank you.;;;","20/Jun/19 15:10;acosentino;Can you create the PR against master branch and camel-2.x branch. We'll backport if it's fine, but start with the two mainline branches.;;;","20/Jun/19 16:10;cblamauer;I have created 2 separate PRs for 2.x & master:
2.x: https://github.com/apache/camel/pull/2989
master: https://github.com/apache/camel/pull/2990;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Route autoStartup cancellation from a RoutePolicy is not working properly in Camel 3,CAMEL-13666,13240604,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,aldettinger,aldettinger,aldettinger,20/Jun/19 08:14,24/Jun/19 07:31,13/Jul/23 08:32,24/Jun/19 07:31,3.0.0-M3,,,,,,,,,,,3.0.0,3.0.0.M4,,,,,camel-core,camel-jgroups,,,0,,,,,"It looks like route autoStartup cancellation from a route policy is not working properly with Camel 3.

For instance, ClusteredRoutePolicy.onInit() is [setting autoStartup to false|https://github.com/apache/camel/blob/master/core/camel-core/src/main/java/org/apache/camel/impl/cluster/ClusteredRoutePolicy.java#L171], but routes are actually started.

*How to reproduce:*

The test [JGroupsRaftClusteredRoutePolicyTest|https://github.com/apache/camel/blob/master/components/camel-jgroups-raft/src/test/java/org/apache/camel/component/jgroups/raft/cluster/JGroupsRaftClusteredRoutePolicyTest.java#L97] reproduces this issue when autoStartup(false) is not explicitly set in createRouteBuilder.

The test [RoutePolicyAutoStartupCancelledOnInitTest|https://github.com/apache/camel/blob/master/core/camel-core/src/test/java/org/apache/camel/impl/RoutePolicyAutoStartupCancelledOnInitTest.java] is a small reproducer too.

*Workaround:*
 Explicitly set autoStartup(false):
{code:java}
from(...).autoStartup(false)
{code}",,aldettinger,,,,,,"aldettinger commented on pull request #2991: CAMEL-13666: Fixed the autoStartup cancellation from route policy issue
URL: https://github.com/apache/camel/pull/2991
 
 
   This PR proposes a solution to fix [CAMEL-13666](https://issues.apache.org/jira/browse/CAMEL-13666).
   Could one please have a look ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jun/19 10:04;githubbot;600","aldettinger commented on pull request #2991: CAMEL-13666: Fixed the autoStartup cancellation from route policy issue
URL: https://github.com/apache/camel/pull/2991
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jun/19 12:46;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 20 08:50:05 UTC 2019,,,,,,,,,,,"0|z03xlk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Jun/19 08:50;aldettinger;Building a reproducer in camel-core would be a good start.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-example-spring-cloud-serviceregistry is failing,CAMEL-13661,13240158,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,aldettinger,aldettinger,aldettinger,18/Jun/19 09:50,19/Jun/19 06:59,13/Jul/23 08:32,19/Jun/19 06:59,3.0.0-M3,,,,,,,,,,,3.0.0.M4,,,,,,examples,,,,0,,,,,There is a version misalignment as spring boot and spring cloud release train are bound together.,,aldettinger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-06-18 09:50:03.0,,,,,,,,,,,"0|z03uug:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
optaplanner-7.23 not usable in WildFly,CAMEL-13654,13239907,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tdiesler,tdiesler,tdiesler,17/Jun/19 10:49,09/Sep/19 08:03,13/Jul/23 08:32,18/Jun/19 07:58,,,,,,,,,,,,3.0.0,3.0.0.M4,,,,,,,,,0,,,,,"drools-7.23 uses this code in `org.drools.core.common.ProjectClassLoader` ...

{code}
    public void setDroolsClassLoader(ClassLoader droolsClassLoader) {
        if (getParent() != droolsClassLoader && isOsgiClassLoader(droolsClassLoader)) {
            this.droolsClassLoader = droolsClassLoader;
            if (CACHE_NON_EXISTING_CLASSES) {
                nonExistingClasses.clear();
            }
        }
    }
{code}

drools-7.14 uses

{code}
    public void setDroolsClassLoader(ClassLoader droolsClassLoader) {
        if (getParent() != droolsClassLoader) {
            this.droolsClassLoader = droolsClassLoader;
            if (CACHE_NON_EXISTING_CLASSES) {
                nonExistingClasses.clear();
            }
        }
    }
{code}

In a non flat classpath environment, the later version of drools does not allow the CL to get set to anything that is not an OSGi CL. 

CrossRefs: https://github.com/wildfly-extras/wildfly-camel/issues/2831, https://github.com/kiegroup/drools/commit/85c5308031a84a0ac4086c1df363bb1b4b3c6af9
",,acosentino,tdiesler,,,,,"tdiesler commented on pull request #2980: [CAMEL-13654] optaplanner-7.23 not usable in WildFly
URL: https://github.com/apache/camel/pull/2980
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jun/19 11:12;githubbot;600","oscerd commented on pull request #2980: [CAMEL-13654] optaplanner-7.23 not usable in WildFly
URL: https://github.com/apache/camel/pull/2980
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jun/19 07:56;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 09 08:03:23 UTC 2019,,,,,,,,,,,"0|z03tbc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Sep/19 08:03;acosentino;The problem has been fixed in Optaplanner 7.26.0.Final. Updated;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Testing for an expected Header in a MockEndpoint doesnt happen if there is no Exchange received,CAMEL-13642,13239224,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,jonvila,jonvila,13/Jun/19 09:45,28/Jun/19 14:03,13/Jul/23 08:32,28/Jun/19 14:03,2.21.0,,,,,,,,,,,2.23.4,2.24.2,2.25.0,,,,,,,,0,,,,,"Context

{quote}

When we have a MockEndpoint that expects for any header to be received, now there is no error raised if there is no Exchange received.

So , it only checks for the expression if there is an Exchange, therefore the test doesn't fail.

{quote}

Where 
{quote}MockEndpoint.expectedHeaderReceived:519
{quote}
Fix
{quote}Add an assert for getReceivedExchanges > 0
{quote}",,acosentino,jonvila,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 14 08:52:37 UTC 2019,,,,,,,,,,,"0|z03p3s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Jun/19 09:48;acosentino;[https://github.com/apache/camel/commit/f91a92093aaf80db757ff0401f41dd2fc049023a#diff-1a021d74a8f7dd666b2317e8de990bcd]

 

on 2.x we have this fix;;;","13/Jun/19 09:49;acosentino;Which is already in 3.x;;;","13/Jun/19 09:59;jonvila;Totally, my fault. Thank you [~acosentino]

I was looking at the code from my project using Fuse 7.3, that uses Camel 2.21.0

I already edited the version affected in this jira.;;;","13/Jun/19 10:00;acosentino;So we have this fixed on 2.x, 2.24.x and 3.x

2.23.x is the only active branch to fix eventually.

2.22.5 is the last one released for 2.22.x

2.21.x won't be released anymore

You can backport the fix to 2.23.x;;;","14/Jun/19 08:52;jonvila;PR: [https://github.com/apache/camel/pull/2976];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-pulsar build is flaky,CAMEL-13639,13239101,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,aldettinger,aldettinger,aldettinger,12/Jun/19 18:09,14/Jun/19 07:49,13/Jul/23 08:32,14/Jun/19 07:49,3.0.0-M3,,,,,,,,,,,3.0.0.M4,,,,,,,,,,0,,,,,"The camel-pulsar build sometime fails with an error message containing ""Policies not found for public/default namespace"".

But actually, the default/namespace should be in the container out of the box.",,aldettinger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 14 07:49:54 UTC 2019,,,,,,,,,,,"0|z03od4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Jun/19 18:15;aldettinger;Starting the container manually demonstrates that the namespace is there. However, it could be that the metric endpoint answers before the actual registration.

I will try first to waitFor ""/admin/v2/namespaces/public"" to answer HTTP 200 as it works locally.;;;","14/Jun/19 07:49;aldettinger;That's 3 builds without anymore pulsar related issues, resolving.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Quartz2 firenow doesn't work consistently,CAMEL-13625,13238142,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,deepaktaker,deepaktaker,07/Jun/19 08:35,09/Jun/19 11:44,13/Jul/23 08:32,09/Jun/19 11:44,2.24.0,,,,,,,,,,,2.23.3,2.24.1,2.25.0,3.0.0,3.0.0.M4,,camel-quartz2,,,,0,,,,,"Hi Colleagues,

We have an interesting bug in the camel-quartz2 where the firenow doesn't work consistently.

it works sometimes and sometimes it doesn't. On debug i found that the problem occurs when Scheduler starts it invokes *CamleJob,*  *CamleJob* starts executing and tries to read from *getProcessors()* method of *LoadBalancerSupport* class. sometimes *getProcessors()* method returns empty list as a result routes doesn't get executed.

*StartupListener* (QuartzComponent) gets notified much before the *QuartzConsumer* starts, as a result it is not able to get the List<Processor> from *getProcessors()* method of *LoadBalancerSupport* class.

 

Analysis of the problem

--------------------------------------------------------------------------------------------------
 # *DefaultCamelContext* method *safelyStartRouteServices()* notifies QuartzComponent's *onCamelContextStarted()* method.
 # The above step starts the scheduler which then calls *execute()* method in *CamelJob* class.
 # In the execute() method it invokes *getProcessors()* method of *LoadBalancerSupport* class to get the List<Processor>.
 # Sometimes *getProcessors()*  returns empty list.
 # The reason is  List<Processor> in *LoadBalancerSupport* class is populated by *QuartzConsumer* on start of consumer. but  it is started after QuartzComponent's *onCamelContextStarted()* method is called in *DefaultCamelContext*.
 # When i checked the older version of camel which we are using in our organization 2.17.0 i see the order is different.
 # Consumer starts first then the classes that implements *StartupListener*.

To Summarize

-------------------------------------------------------------------------------------------------------
 # The order in which *StartupListener* and *Consumer* is started in *DefaultCamelContext* is causing race condition.
 # The older version of camel 2.17.0 order is first *Consumer* starts followed by classes that implement *StartupListener*

 

I have attached the junit with quartz2, since it is intermittent issue, i made the junit to run 1000 times and it fails randomly which proves existence of the problem.

I have also attached by proposed solution in DefaultCamelContext in the attachment.

 

 ",,davsclaus,deepaktaker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/19 11:04;deepaktaker;Solution.java;https://issues.apache.org/jira/secure/attachment/12971167/Solution.java","07/Jun/19 08:31;deepaktaker;cameltest.zip;https://issues.apache.org/jira/secure/attachment/12971154/cameltest.zip",,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,Moderate,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Jun 09 11:44:58 UTC 2019,,,,,,,,,,,"0|z03ig8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Jun/19 10:28;davsclaus;You can set the option startDelayedSeconds=X on the component to delay starting the quartz scheduler.
;;;","09/Jun/19 10:32;davsclaus;Are you use fireNow to run a quartz scheduler job only once? If so then use the timer component instead.;;;","09/Jun/19 11:44;davsclaus;Thanks for reporting and the analysis of the bug;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-yammer component doesn't deserialize correctly phone number field in the users endpoint,CAMEL-13614,13237722,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,acosentino,acosentino,05/Jun/19 12:58,05/Jun/19 13:06,13/Jul/23 08:32,05/Jun/19 13:06,,,,,,,,,,,,3.0.0,3.0.0.M4,,,,,,,,,0,,,,,,,acosentino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-06-05 12:58:56.0,,,,,,,,,,,"0|z03fv4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Olingo Consumer filtering can cause NPE,CAMEL-13606,13237230,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,phantomjinx,phantomjinx,03/Jun/19 12:20,06/Jun/19 07:19,13/Jul/23 08:32,06/Jun/19 07:19,2.21.5,,,,,,,,,,,2.24.1,2.25.0,3.0.0,3.0.0.M4,,,camel-olingo2,camel-olingo4,,,0,,,,,"When polling with the Olingo*Consumer, the result is intercepted and filtered (if filtering is switched on). If a key predicate is used as well then, on subsequent polling iterations, the result is filtered to return null. When the result is then intercepted and passed to the Olingo*Index for indexing, the latter fails to handle the null value and causes an NullPointerException. This exception is reported/logged and polling continues with subsequent iterations (also blowing up with NPEs). Need to fix the Index classes so they handle null values correctly.",,davsclaus,phantomjinx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 04 10:13:36 UTC 2019,,,,,,,,,,,"0|z03cuw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Jun/19 12:21;phantomjinx;Working on PR now.;;;","03/Jun/19 18:38;davsclaus;Thanks for reporting and looking forward to the PR. And will you fix both olingo2 and olingo4;;;","04/Jun/19 10:13;phantomjinx;PR for both olingo2 & 4 -> https://github.com/apache/camel/pull/2959;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-sql - Repeated parameters in URI are not treated correctly,CAMEL-13592,13236010,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,Kosta K,Kosta K,28/May/19 14:00,07/Jul/19 14:53,13/Jul/23 08:32,07/Jul/19 14:53,2.20.1,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-sql,,,,0,,,,,"When constructing Camel SQL component with the following URI:
{code:java}
sql:INSERT INTO TABLE ....?batch=true&...&batch=true{code}
Resulting camel endpoint ends up with batch == false. The reason for this is found in 
{code:java}
private static void addParameter // this is in UriSupport.java{code}
This method adds values into a list and then setting the parameter does not work correctly. I believe that Camel should be more linient for such ""errors"" (which can occur if you construct URI programatically). 

I suggest parameter value detection. If
{code:java}
existing.equals(value) // to use actual names of variables from the code{code}
then just ignore. DO NOT do the following (list construction; current behavior):
{code:java}
if (existing instanceof List) {
    list = CastUtils.cast((List<?>) existing);
} else {
    // create a new list to hold the multiple values
    list = new ArrayList<String>();
    String s = existing != null ? existing.toString() : null;
    if (s != null) {
        list.add(s);
    }
}
list.add(value);
{code}
In the end the URI shown in the beginning will result in Component with batch equal to false. Which is really hard to determine why and what happened. 

 

I believe this is a generic problem tho",,davsclaus,Kosta K,sumeetp1991,,,,"sumeetpatil commented on pull request #2956: CAMEL-13592 Repeated parameters in URI are not treated correctly
URL: https://github.com/apache/camel/pull/2956
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/19 11:37;githubbot;600","davsclaus commented on pull request #2956: CAMEL-13592 Repeated parameters in URI are not treated correctly
URL: https://github.com/apache/camel/pull/2956
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jul/19 09:37;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,CAMEL-13688,CAMEL-13732,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Jul 07 14:53:04 UTC 2019,,,,,,,,,,,"0|z035dc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/May/19 14:16;davsclaus;You are welcome to provide a PR with your code suggestions for an improvement;;;","28/May/19 14:20;davsclaus;Also test with newer version such as 2.24.0 as 2.20.x is somewhat old.;;;","02/Jun/19 11:39;sumeetp1991;Hi [~davsclaus],

This is still an issue in new versions.
Can you please review the PR - [https://github.com/apache/camel/pull/2956]?

 

Thanks,

Sumeet;;;","07/Jul/19 09:38;Kosta K;Hi

I am currently ooo as we have public holidays and on vacation next week.
I will return on Monday the 15th of July.

I wont be able to read emails as I will be in the middle of nowhere

While you miss me:
--> FOR OBR/Composer
- Richard Hlavica
--> FOR Kinaxis
- Tomas Navratil / Jan Klimcak
--> FOR Apache Camel / UE
- Tomas Navratil, Pavel Spatny

===> For ANYTHING and EVERYTHING Middleware:
--> for requests/issues/anything middleware: ~IT Middleware Support <ITMiddlewareSupport@onsemi.com> - these will be read and delegated and usually taken care of within the next business day

--> For critical issues requiring immediate attention (production issues) please contact our duty pager (available 24/7):
~IT Middleware Critical <IT-Middleware-Critical@onsemi.com>

For escalation contact:
Daniel Bartek --> Daniel.Bartek@Onsemi.com
;;;","07/Jul/19 14:53;davsclaus;Fixed by CAMEL-13732;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"InflightRepository, InflightEntry getElapsed is 0",CAMEL-13587,13235838,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,jkike,jkike,27/May/19 15:07,28/May/19 13:09,13/Jul/23 08:32,28/May/19 13:09,2.22.1,,,,,,,,,,,2.22.5,2.23.3,2.24.1,2.25.0,3.0.0,3.0.0-M3,came-core,,,,1,,,,,"Hi,

I made a camel-route that checks about inflight messages on other server through JMX connection.
It was working fine in 2.17.x but now we upgrade to 2.22.1 and I always obtain a result of 0 millisecond for the elapsed field.

I use the browse() operation of JMX bean. You can use jconsole to run a simple test.

!image-2019-05-27-17-04-12-319.png!

This is a major bug for us, since we use the code to monitoring production routes. Is there any workaround like get the echange historymessage from the exchage id?

Thank you","Camel 2.22.1

 ",davsclaus,jkike,,,,,"bdevido commented on pull request #2949: Camel 2.x - CAMEL-13587 backporting from master
URL: https://github.com/apache/camel/pull/2949
 
 
   CAMEL-13587: Inflight repository browse should compute elapsed if themessage is still inflight at a given node. Thanks to Barbara De Vido for reporting.
   Backporting from master
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/May/19 12:32;githubbot;600","davsclaus commented on pull request #2949: Camel 2.x - CAMEL-13587 backporting from master
URL: https://github.com/apache/camel/pull/2949
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/May/19 13:06;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,"27/May/19 15:04;jkike;image-2019-05-27-17-04-12-319.png;https://issues.apache.org/jira/secure/attachment/12969922/image-2019-05-27-17-04-12-319.png",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 28 13:09:14 UTC 2019,,,,,,,,,,,"0|z034bk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/May/19 15:14;davsclaus;You need to turn on message history
context.setMessageHistory(true);

;;;","28/May/19 06:53;jkike;hi claus, 
it is set to true. 

the elapsed is not computed on current node since no one invoke the method nodeProcessingDone. 

Please consider to reopen the issue. 
;;;","28/May/19 11:03;jkike;Hi,

I did this as workaround.

Implemented a custom infligth repository, that has the same logic of the DefaultInflightRepository and then in the new inner class (the original cannot be extended/overriden) InflightExchangeEntry I modified the code for getElapsed() as follow


{code:java}
 @Override
        @SuppressWarnings(""unchecked"")
        public long getElapsed() {
            LinkedList<MessageHistory> list = exchange.getProperty(Exchange.MESSAGE_HISTORY, LinkedList.class);
            if (list == null || list.isEmpty()) {
                return 0;
            }

            // get latest entry
            MessageHistory history = list.getLast();
            if (history != null) {
                return System.currentTimeMillis() - history.getTime();  // MY FIX!!!!!
            } else {
                return 0;
            }
        }
{code}


 ;;;","28/May/19 12:07;davsclaus;Thanks for the suggested fix. I updated it a little bit in this commit
https://github.com/apache/camel/commit/02b2f265a57b757155757fc330c1d7108574bcfa

I wonder if you could do a PR for the camel-2.x branch based on this so we can backport the fix. This needs manual work as master and camel-2.x has drifted part.;;;","28/May/19 12:32;jkike;I did the PR.
Hope I did it right.

Thank you
Barbara;;;","28/May/19 13:09;davsclaus;Thanks that was correct PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New website: The spacing related to links in antora generated docs is wrong,CAMEL-13586,13235827,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,acosentino,acosentino,27/May/19 14:05,21/Aug/19 07:44,13/Jul/23 08:32,21/Aug/19 07:44,,,,,,,,,,,,,,,,,,website,,,,0,,,,,"This can be noticed for example in 

[http://camel.apache.org/staging/components/latest/ahc-ws-component.html#ahc-component]",,acosentino,bedla,nayanagamuhandiram,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 21 07:44:51 UTC 2019,,,,,,,,,,,"0|z03494:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Aug/19 17:35;nayanagamuhandiram;Hi is this bug still available? I couldn`t spot it in the above link or in [https://camel.apache.org/components/latest/ahc-ws-component.html];;;","20/Aug/19 21:59;bedla;I think this was fixed with CAMEL-13839;;;","21/Aug/19 07:44;zregvart;Yeah we fixed this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
avoid adding cxf message context map into camel exchange,CAMEL-13576,13235442,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ffang,ffang,ffang,24/May/19 15:20,24/May/19 15:36,13/Jul/23 08:32,24/May/19 15:36,,,,,,,,,,,,2.22.5,2.23.3,2.24.1,2.25.0,3.0.0,,,,,,0,,,,,which can easily cause ConcurrentModificationException under high load,,ffang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-24 15:20:31.0,,,,,,,,,,,"0|z031vk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message body ignored in DefaultNettyHttpBinding::toNettyResponse,CAMEL-13572,13235347,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,24/May/19 09:40,24/May/19 09:54,13/Jul/23 08:32,24/May/19 09:54,3.0.0-M3,,,,,,,,,,,3.0.0-M3,,,,,,camel-netty4-http,,,,0,,,,,The last optimization that returned the {{HttpResponse}} in case that the exchange's message is a {{NettyHttpMessage}} resulted in any changes to the body of the message being ignored. The optimization should have checked if the body is set and only return the already created {{HttpResponse}} in case the message body is {{null}}.,,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-24 09:40:05.0,,,,,,,,,,,"0|z031ag:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-hystrix - HystrixBadRequestException is swallowed,CAMEL-13561,13235091,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,christian.ohr,christian.ohr,23/May/19 09:34,07/Aug/19 03:32,13/Jul/23 08:32,07/Aug/19 03:32,,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-hystrix,,,,0,,,,,"CAMEL-13066 fixed a problem that HystrixBadRequestExceptions caused the fallback processor being executed.

However, it seems that due to this fix the exception is simply thrown away and the route proceeds as if no error has occurred. This is certainly not the intended behavior.

As I understand it, the HystrixBadRequestExceptions should simply be thrown out of the HystrixProcessor, but without any fallback processor being triggered or circuit being opened",,christian.ohr,davsclaus,ramu11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 24 09:42:44 UTC 2019,,,,,,,,,,,"0|z02zpk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/May/19 09:42;davsclaus;Can you provide a PR and/our unit test or something to help point out your point what you want/say;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mail component is not reading attachments in OSGi,CAMEL-13560,13234914,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,ffang,eximius,eximius,22/May/19 14:35,31/May/19 13:57,13/Jul/23 08:32,31/May/19 13:57,2.24.0,,,,,,,,,,,,,,,,,camel-mail,,,,0,,,,,"I have such route (taken from [documentation|https://camel.apache.org/mail.html]):
{code:java}
  @Override
  public void configure() throws Exception {    
    from(""imaps://login@host:993?password=pass&debugMode=true"")
      .process(new Processor() {

        @Override
        public void process(final Exchange exchange) throws Exception {
          final Message in = exchange.getIn();
      
          Map<String, DataHandler> attachments = in.getAttachments();
          System.out.println(""ATTACHMENTS: ""+attachments.size());
        }
      });
  }
{code}
When I sent email with images.jpg attachment, email is read, but attachment Map is empty.

Debug shows:
{code:java}
DEBUG: setDebug: JavaMail version 1.6.1
DEBUG: getProvider() returning javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle,1.6.1]
DEBUG IMAPS: mail.imap.fetchsize: 16384
DEBUG IMAPS: mail.imap.ignorebodystructuresize: false
DEBUG IMAPS: mail.imap.statuscachetimeout: 1000
DEBUG IMAPS: mail.imap.appendbuffersize: -1
DEBUG IMAPS: mail.imap.minidletime: 10
DEBUG IMAPS: closeFoldersOnStoreFailure
DEBUG IMAPS: trying to connect to host ""XXXXXX.com"", port 993, isSSL true
* OK IMAP4 ready
A0 CAPABILITY
* CAPABILITY IMAP4rev1 UIDPLUS LITERAL+ CHILDREN NAMESPACE XLIST IDLE MOVE XAOL-MOVE AUTH=PLAIN
A0 OK completed
DEBUG IMAPS: AUTH: PLAIN
DEBUG IMAPS: protocolConnect login, host=XXXXXX.com, user=XXXXXXX, password=<non-null>
DEBUG IMAPS: AUTHENTICATE PLAIN command trace suppressed
DEBUG IMAPS: AUTHENTICATE PLAIN command result: A1 OK Login completed
A2 CAPABILITY
* CAPABILITY IMAP4rev1 UIDPLUS LITERAL+ CHILDREN NAMESPACE XLIST ID IDLE MOVE XAOL-MOVE
A2 OK CAPABILITY completed
A3 LIST """" INBOX
* LIST (\Noinferiors) ""/"" ""INBOX""
A3 OK List completed
DEBUG IMAPS: connection available -- size: 1
A4 SELECT INBOX
* 13 EXISTS
* 0 RECENT
* OK [UNSEEN 13] UIDs valid
* OK [UIDVALIDITY 1549376878] UIDs valid
* OK [UIDNEXT 36] Predicted next UID
* FLAGS (\Answered \Flagged \Deleted \Seen \Draft)
* OK [PERMANENTFLAGS (\Answered \Flagged \Deleted \Seen \Draft)]
* OK [NOMODSEQ] Sorry, this mailbox format doesn't support modsequences
A4 OK [READ-WRITE] SELECT completed
A5 SEARCH UNSEEN 1:13
* SEARCH 13
A5 OK Search completed
A6 FETCH 13 (BODY.PEEK[HEADER.FIELDS (Message-ID)])
* 13 FETCH (BODY[HEADER.FIELDS (Message-ID)] {65}
Message-ID: <175c8cc9-19fa-fc48-40c8-e42148578e23@XXXXXX.com>

)
A6 OK Fetch completed
A7 FETCH 13 (FLAGS)
* 13 FETCH (FLAGS ())
A7 OK Fetch completed
A8 FETCH 13 (BODYSTRUCTURE)
* 13 FETCH (BODYSTRUCTURE ((""text"" ""plain"" (""charset"" ""utf-8"" ""format"" ""flowed"") NIL NIL ""7bit"" 10 3 NIL NIL NIL)(""image"" ""jpeg"" (""name"" ""images.jpg"") NIL NIL ""base64"" 16794 NIL (""attachment"" (""filename"" ""images.jpg"")) NIL) ""mixed"" (""boundary"" ""------------53A9AD932142735A4433B153"") NIL NIL))
A8 OK Fetch completed
A9 FETCH 13 (BODY.PEEK[HEADER])
* 13 FETCH (BODY[HEADER] {3286}
Return-Path: <XXXXXX@XXXXXX.com>
Delivered-To: XXXXXX@XXXXXX.com
Received: (wp-smtpd mx.XXXXXX.com 31103 invoked from network); 22 May 2019 16:14:00 +0200
Received: from mail-XXX.google.com ([209.85.167.54])
          (envelope-sender <XXXXXX@XXXXXX.com>)
          by mx.tlen.pl (WP-SMTPD) with ECDHE-RSA-AES256-GCM-SHA384 encrypted SMTP
          for <XXXXXX@XXXXXX.com>; 22 May 2019 16:14:00 +0200
Received: by mail-XXX.google.com with SMTP id d8so1XXXb.8
        for <XXXXXX@XXXXXX.com>; Wed, 22 May 2019 07:14:00 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=XXX.gappssmtp.com; s=XXX;
        h=to:from:subject:message-id:date:user-agent:mime-version
         :content-language;
        bh=8Bw7uLBuofXm3FHknjhDSjXXX=;
        b=kqcK74fTrzyDas7Wsn7EJfSxJuXXX==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:to:from:subject:message-id:date:user-agent
         :mime-version:content-language;
        bh=8Bw7uLBuofXmXXXX6oDyAiCFLfHU=;
        b=F1EsLfk3qaiJXiNX0XXXXXXX==
X-Gm-Message-State: APXXXXXX=
X-Google-Smtp-Source: APXvXXXXXWYQ==
X-Received: by 2002:a19:c517:: with SMTP id w23mr27342169lfe.73.1558534439904;
        Wed, 22 May 2019 07:13:59 -0700 (PDT)
Return-Path: <XXXXXX@XXXXXX.com>
Received: from [XXXXXX] (host-XXXXXX.com. [XXXXXX])
        by smtp.gmail.com with ESMTPSA id XXXX
        for <XXXXXX@XXXXXX.com>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 22 May 2019 07:13:59 -0700 (PDT)
To: XXXXXX@XXXXXX.com
From: =?UTF-8?Q?XXX=c5=9bXX?= <XXXXXX@XXXXXX.com>
Subject: Test attachment
Message-ID: <175c8cc9-XXX23@XXXXXX.com>
Date: Wed, 22 May 2019 16:13:58 +0200
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.6.1
MIME-Version: 1.0
Content-Type: multipart/mixed;
 boundary=""------------53A9AD932142735A4433B153""
Content-Language: pl
X-WP-DKIM-Status: good (id: XXXXXX.com.gappssmtp.c)
X-WP-MailID: 3f705f51c9402ad04c3cda34f72497b2
X-WP-SPAM: NO (U9) 0W0001A [0QMk]

)
A9 OK Fetch completed

ATTACHMENTS: 0

{code}

I've check all: imap, imaps, pop3 and pop3s",,acosentino,davsclaus,eximius,ffang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/May/19 20:23;eximius;karaf.mail.issue.zip;https://issues.apache.org/jira/secure/attachment/12970066/karaf.mail.issue.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 31 13:56:54 UTC 2019,,,,,,,,,,,"0|z02ym8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/May/19 11:25;eximius;[~cibsen@e-ma.net], not being able to fetch attachments is rather serious issue...;;;","24/May/19 12:05;acosentino;You have other possibilities with other components and other scheme. That's why is a minor.;;;","24/May/19 12:27;eximius;[~acosentino] thanks for clarification. Could you please point me to the proper component/scheme which can download email with attachments (without deleting the email from inbox)?;;;","24/May/19 12:31;davsclaus;It works for many others, its hard to reproduce as mail servers and whatnot can be different, and I suggest you investigate yourself on your system, by debugging the camel-mail and see if you can spot a problem.

If you want prioritzed help then ask the commercial vendors;;;","24/May/19 12:48;eximius;[~davsclaus] - I'm not asking for ""prioritzed help"". It just seemed like rather serious issue.

I've tested different email and they're the same.

I'm eager to help. I can share my email account together with invalid emails. Please email me at https://onetimesecret.com/secret/aeh0sz191vpi7vrtt4xfez8g9omeouf;;;","24/May/19 12:53;acosentino;Did you try with the other available protocol in the component?;;;","24/May/19 15:13;eximius;[~acosentino], yes, I've checked:
 * imap on 143
 * imaps on 993
 * pop3 on 110
 * pop3s on 995

non of them returned attachmets;;;","27/May/19 12:08;eximius;[~davsclaus], [~acosentino]
I've started to dig into the issue, and it looks like the same code receives attachment just fine, when I run it in JUnit test (without mocking, just using DefaultCamelContext), but when I deploy it as a bundle in Apache Karaf, then email is received, but attachments are empty.

Do you have any idea why?;;;","27/May/19 16:12;davsclaus;No but it likely depend a lot on your OSGi platform and how you run your bundles, and all its complexity with classloading. I suggest to contract your commercial vendor if you use such a product.;;;","28/May/19 15:14;eximius;[~davsclaus], It seems that the reason is Java version, not OSGi.

In class: org.apache.camel.component.mail.MailBinding in line 297:
{code:java}
Object content = message.getContent();
{code}
When I run Apache Karaf using JDK8, ""content"" is of class javax.mail.internet.MimeMultipart and attachments are found just fine. 
In exactly the same Apache Karaf instance with the same app run on JDK11 ""content"" is of class com.sun.mail.imap.IMAPInputStream and attachments are not found;;;","28/May/19 15:19;eximius;although it looks like this: https://jira.apache.org/jira/browse/KARAF-4154;;;","28/May/19 16:40;ffang;Hi [~eximius],

If you can append a test application bundle which I can build and deploy into Karaf, I can take a close look at this JDK11 issue with Karaf.

Thanks!
Freeman;;;","28/May/19 19:56;eximius;[~ffang] - Great!
Here is the bundle that reproduces the issue:

{code:java}
package karaf.mail.issue;

import static java.util.Objects.nonNull;

import java.util.Map;
import java.util.UUID;

import javax.activation.DataHandler;

import org.apache.camel.Attachment;
import org.apache.camel.CamelContext;
import org.apache.camel.Exchange;
import org.apache.camel.Message;
import org.apache.camel.Processor;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.core.osgi.OsgiDefaultCamelContext;
import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceRegistration;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Activator implements BundleActivator {
  private static final Logger log = LoggerFactory.getLogger(Activator.class);

  private static final String HOST = ""<TYPE_HOST>"";
  private static final String LOGIN = ""<TYPE_LOGIN>"";
  private static final String PASSWORD = ""<TYPE_PASSWORD>"";
  private static final int PORT = 993;

  private ServiceRegistration<CamelContext> registrationCamelContext;

  private CamelContext camelContext;

  @Override
  public void start(final BundleContext bundleContext) throws Exception {
    log.info(""Registering OsgiDefaultCamelContext"");

    camelContext = new OsgiDefaultCamelContext(bundleContext);

    registrationCamelContext = bundleContext.registerService(CamelContext.class, camelContext, null);

    final EmailRoute emailRoute = new EmailRoute(camelContext);
    camelContext.addRoutes(emailRoute);

    camelContext.start();
  }

  @Override
  public void stop(BundleContext context) throws Exception {
    log.info(""Unregistering OsgiDefaultCamelContext"");
    if(nonNull(registrationCamelContext)) {
      registrationCamelContext.unregister();
    }
    if(nonNull(camelContext)) {
      camelContext.stop();
    }
  }

  public class EmailRoute extends RouteBuilder {

    private static final String ROUTE_FROM = ""imaps:/"";

    private final String routeId;

    public EmailRoute(final CamelContext camelContext) throws Exception {
      super(camelContext);
      this.routeId = UUID.randomUUID().toString();
    }

    @Override
    public void configure() throws Exception {
      from(String.format(""%s/%s@%s:%s?password=%s&debugMode=false&delete=false&unseen=true&consumer.delay=30000"", ROUTE_FROM, LOGIN, HOST, PORT, PASSWORD))
        .routeId(routeId)
        .process(new Processor() {

          @Override
          public void process(final Exchange exchange) throws Exception {
            final Message in = exchange.getIn();
            final String from = in.getHeader(""from"", String.class);
            final String subject = in.getHeader(""subject"", String.class);
            log.info(""Processing email from: {}, with subject: {}"", from, subject);
            final Map<String, Attachment> objects = in.getAttachmentObjects();
            log.debug(""getAttachmentObjects: {}"", objects);
            final Object body = in.getBody();
            log.info(""Body: {}"", body);
            final Map<String, DataHandler> attachments = in.getAttachments();
            log.info(""ATTACHMENTS FOUND: {}"", attachments.size());
          }
        });
    }
  }
}
{code}

If you want to deploy using bnd - here it is:

{code:java}
Private-Package: karaf.mail.issue
Bundle-Version: 1.0.0
Bundle-Activator: karaf.mail.issue.Activator
Bundle-Name: Karaf mail test
Bundle-Description: Trying to reproduce bug

-runee: JavaSE-1.8

-runproperties: \
    org.osgi.framework.bootdelegation=""sun.misc""

-buildpath: \
	slf4j.api;version=1.7,\
	osgi.core;version=6.0,\
	osgi.annotation;version=6.0,\
	org.apache.camel.camel-core;version=2.23,\
	org.apache.camel.camel-core-osgi;version=2.23,\
	org.apache.camel.camel-mail;version=2.23,\
	com.sun.mail.javax.mail;version=1.6,\
	javax.activation:activation;version=1.1

-runrequires: \
	bnd.identity;id='org.apache.camel.camel-core-osgi',\
	bnd.identity;id='org.apache.camel.camel-mail',\
	bnd.identity;id='com.sun.mail.javax.mail'

-runbundles: \
	ch.qos.logback.classic;version='[1.2.3,1.2.4)',\
	ch.qos.logback.core;version='[1.2.3,1.2.4)',\
	com.sun.mail.javax.mail;version='[1.6.1,1.6.2)',\
	org.apache.camel.camel-core;version='[2.23.1,2.23.2)',\
	org.apache.camel.camel-core-osgi;version='[2.23.1,2.23.2)',\
	org.apache.camel.camel-mail;version='[2.23.1,2.23.2)',\
	org.osgi.service.event;version='[1.4.0,1.4.1)',\
	slf4j.api;version='[1.7.25,1.7.26)'
{code}

Environment:
* Windows 7
* Gitbash
* apache-karaf-4.2.5
* JDK8 (working): java version ""1.8.0_144"" / Java(TM) SE Runtime Environment (build 1.8.0_144-b01) / Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)
* JDK11 (not working):  openjdk version ""11.0.2"" 2019-01-15 / OpenJDK Runtime Environment 18.9 (build 11.0.2+9) / OpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)

Steps to reproduce:
1) Set host / user / password in java file
2) Build bundle
3) Clean version of Karaf (rm -fr data)
4) feature:repo-add camel 2.23.1
5) feature:install camel camel-scr camel-stream camel-mail
6) bundle:install -s mvn:my.group/karaf.mail.issue/1.0.0
7) log:tail
8) send email with attachment (or mark as unread)

On JDK8 you get: 21:46:26.204 INFO [Camel (camel-1) thread #1 - imaps://username@host:993] ATTACHMENTS FOUND: 1
On JDK9/11 you get: 21:50:11.103 INFO [Camel (camel-1) thread #1 - imaps://username@host:993] ATTACHMENTS FOUND: 0;;;","28/May/19 20:05;ffang;Thanks [~eximius]!

Could you please put all in a project with pom.xml so that I can build and deploy? That's more handy.;;;","28/May/19 20:20;eximius;sure: https://issues.apache.org/jira/secure/attachment/12970066/karaf.mail.issue.zip

1) unzip

2) change host/login/password in Activator.java file

3) cd karaf.mail.issue

4) ./gradlew release

5) bundle:install -s mvn:my.group/karaf.mail.issue/1.0.0;;;","28/May/19 20:29;ffang;[~eximius], thanks!

I will take a look

Freeman;;;","28/May/19 20:33;eximius;thank you so much [~ffang]!;;;","30/May/19 16:02;ffang;Hi [~eximius],

I figured out the problem under the hood.

This is caused by when using jdk9/jdk11, it exposes a javax.activation version which isn't OSGi compatible.

So far you can edit $KARAF_HOME/etc/jre.properties
remove
{code}
javax.activation;version=""1.2"", \
{code}
from jre-9(jre-11 also use it) property, then it should work for you.

And I will fix it for next Karaf release.

Cheers
Freeman;;;","31/May/19 13:47;eximius;That's fantastic news, thanks [~ffang]!;;;","31/May/19 13:56;ffang;[~eximius] FYI, this is fixed by KARAF-6299

Cheers
Freeman;;;",,,,,,,,,,,,,,,,,,,,,,,
camel-salesforce: Add support for change data capture,CAMEL-13559,13234902,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,aldettinger,aldettinger,aldettinger,22/May/19 13:05,03/Jun/19 08:54,13/Jul/23 08:32,03/Jun/19 08:54,3.0.0-M2,,,,,,,,,,,3.0.0.M4,,,,,,camel-salesforce,,,,0,,,,,,,aldettinger,,,,,,"aldettinger commented on pull request #2942: CAMEL-13559: initial work to add change data capture in camel-salesforce (DO NOT MERGE PLEASE)
URL: https://github.com/apache/camel/pull/2942
 
 
   Not ready to be merged, but as I will be away from keyboard the coming days it would be a good spot to get quick feedback.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/May/19 13:13;githubbot;600","aldettinger commented on pull request #2942: CAMEL-13559: initial work to add change data capture in camel-salesforce (DO NOT MERGE PLEASE)
URL: https://github.com/apache/camel/pull/2942
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/May/19 07:05;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 03 08:54:04 UTC 2019,,,,,,,,,,,"0|z02yjk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Jun/19 08:54;aldettinger;data capture support has been added to the camel-salesforce component.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel main - Duration max messages may not work,CAMEL-13556,13234846,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,22/May/19 08:57,22/May/19 10:14,13/Jul/23 08:32,22/May/19 10:14,,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-core,,,,0,,,,,Looks like max duration = 1 will not shutdown the jvm. Also the idle checker background thread is stopping camel from the same thread as itself so its own thread pool cannot shutdown nicely.,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-22 08:57:57.0,,,,,,,,,,,"0|z02y74:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Using ""route1"" as a route id produces infinite loop",CAMEL-13554,13234693,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,gsoto,gsoto,21/May/19 18:37,22/May/19 07:54,13/Jul/23 08:32,22/May/19 07:54,2.24.0,,,,,,,,,,,2.23.3,2.24.1,2.25.0,3.0.0,3.0.0-M3,,came-core,,,,0,,,,,"Steps:
# Start a Camel context.
# Add a route through RouteBuilder with id *""route1""* (reserved id).
# Attempt to add a second route with no id. The method enters an infinite loop. 

Example code that reproduces the problem:
{code:java}
package com.paytrue.swakka;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.impl.DefaultCamelContext;

public class InfLoopMain {

    public static void main(final String[] args) throws Exception {
        final DefaultCamelContext camelContext = new DefaultCamelContext();
        camelContext.start();

        final RouteBuilder route1 = new RouteBuilder() {
            @Override
            public void configure() {
                from(""direct:in1"")
                    .id(""route1"") // Note the name
                    .to(""mock:test1"");
            }
        };
        camelContext.addRoutes(route1);

        final RouteBuilder route2 = new RouteBuilder() {
            @Override
            public void configure() {
                from(""direct:in2"")
                    .to(""mock:test2"");
            }
        };
        // Infinite loop
        camelContext.addRoutes(route2);
    }
}
{code}
 ","JDK 8u121

Camel 2.24.0",davsclaus,gsoto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 22 07:38:08 UTC 2019,,,,,,,,,,,"0|z02x94:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"22/May/19 07:38;davsclaus;Yeah so there is a bug in the auto assign logic that are looking for ""free numbers"". However usually you would not use route1 for your own route assigned ids, but we should fix this to avoid the looping.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OnCompletion behaves strange in combination with direct subroutes,CAMEL-13553,13234605,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,jakob.thun,jakob.thun,21/May/19 13:06,08/Jan/21 13:42,13/Jul/23 08:32,08/Jan/21 13:42,2.23.2,2.24.0,3.7.0,,,,,,,,,3.7.1,3.8.0,,,,,came-core,,,,0,,,,,"There is a strange behaviour in .onCompletion().modeBeforeConsumer() when used in combination with direct sub-routes.

The route behaves differently depending on where onCompletion is declared. When declared in the top of the route it will execute several times. Once for every route, including the subroutes.

I have made a small spring-boot sample app where I try to demonstrate this behaviour.
 [https://github.com/jakobthun/camel-oncompletion-bug]

This route:
{code:java}
    public static final String ORIGINAL_ROUTE_NAME  = ""PossibleBug-original-route"";
    public static final String SUBROUTE_NAME        = ""PossibleBug-subroute"";
    public static final String DIRECT_ENDPOINT      = ""direct:possiblebug"";

    @Override
    public void configure() throws Exception {

        from(""timer:expected?period=10000&delay=5000"")
                .routeId(ORIGINAL_ROUTE_NAME)
                .onCompletion().modeBeforeConsumer()
                    .log(""This should be done once, when the original route is completed i.e. after log 3. But when onCompletion is defined in top of route AND it is in modeBeforeConsumer() it will also be applied to when the direct-route is completed. So it will be executed twice."")
                .end()
                .log(""1"")
                .to(DIRECT_ENDPOINT)
                .log(""3"");

        from(DIRECT_ENDPOINT)
                .routeId(SUBROUTE_NAME)
                .log(""2"");

    }
{code}
 Generates the following log:
{noformat}
2019-05-21 14:50:24.545  INFO 138880 --- [imer://expected] PossibleBug-original-route               : 1
2019-05-21 14:50:24.545  INFO 138880 --- [imer://expected] PossibleBug-subroute                     : 2
2019-05-21 14:50:24.545  INFO 138880 --- [imer://expected] PossibleBug-original-route               : This should be done once, when the original route is completed i.e. after log 3. When onCompletion is defined in top of route it is also applied to the direct-route
2019-05-21 14:50:24.545  INFO 138880 --- [imer://expected] PossibleBug-original-route               : 3
2019-05-21 14:50:24.545  INFO 138880 --- [imer://expected] PossibleBug-original-route               : This should be done once, when the original route is completed i.e. after log 3. When onCompletion is defined in top of route it is also applied to the direct-route

{noformat}
 

As can be seen above the log message defined in onCompletion shows up twice. If onCompletion is defined in the end of the route this will not be the case. Also when using modeAfterConsumer (or not specifying mode) it will only show up once. See github project to see this example in action.

 

 ",,davsclaus,jakob.thun,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 08 13:42:15 UTC 2021,,,,,,,,,,,"0|z02wpk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"22/May/19 05:04;jakob.thun;*Made I should add:* If this is the exptected behaviour I think it needs to be better described in the documenentation.;;;","07/Jan/21 14:41;davsclaus;Thanks for reporting, I have reproduced this with latest code.;;;","08/Jan/21 12:22;davsclaus;I have a fix for this. And then I will also look at fixing so if you use global scoped onCompletion then its only triggered once per exchange (currently it is mistakenly called twice).

The docs is also being cleaned up.;;;","08/Jan/21 13:42;davsclaus;Thanks for reporting and the test case.

Sorry for the late response and fix;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-salesforce: Some integration tests do not pass,CAMEL-13550,13234350,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,aldettinger,aldettinger,aldettinger,20/May/19 15:54,20/May/19 16:26,13/Jul/23 08:32,20/May/19 16:26,3.0.0-M2,,,,,,,,,,,3.0.0-M3,,,,,,camel-salesforce,,,,0,,,,,"I've hit some issues while running integration tests:
 * replayId is needed for PlatformEventsConsumerIntegrationTest
 * information missing in the README file
 * salesforceComponentVerifierExtension need adaptation to recent changes in camel exceptions management

 ",,aldettinger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-20 15:54:01.0,,,,,,,,,,,"0|z02v4w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
expectedHeaderReceived should failed when no message is received,CAMEL-13549,13234342,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,eximius,eximius,20/May/19 15:02,10/May/20 11:19,13/Jul/23 08:32,22/May/19 03:36,2.24.0,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-test,,,,0,,,,,"This test should fail:
{code:java}
import org.apache.camel.RoutesBuilder;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.mock.MockEndpoint;
import org.apache.camel.test.junit4.CamelTestSupport;
import org.assertj.core.api.Assertions;
import org.junit.Test;

public class MyRouteTest extends CamelTestSupport {

  private static final String ROUTE_ID = ""mytest"";

  @Override
  public RoutesBuilder createRouteBuilder() throws Exception {
    return new RouteBuilder() {

      @Override
      public void configure() throws Exception {
        from(""direct:foo"")
          .id(ROUTE_ID)
          .to(""mock:extract"");
      }
    };
  }

  @Test
  public void shouldFail() throws InterruptedException {
    // given
    final MockEndpoint mock = getMockEndpoint(""mock:extract"");

    // declare
    mock.expectedHeaderReceived(""foo"", ""bar"");

    // when
//template.sendBody(""direct:foo"", ""test"");

    // then
    mock.assertIsSatisfied();
  }
}
{code}

Because we were expecting some headers, but none headers were received",,davsclaus,eximius,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-15037,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 22 10:16:14 UTC 2019,,,,,,,,,,,"0|z02v34:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/May/19 07:52;davsclaus;Can you double check you see this on latest Camel 2.x version. I think it works on 2.24.;;;","21/May/19 15:55;eximius;Yes, test passes, but it should FAIL ;);;;","22/May/19 03:37;davsclaus;set the expected message count = 1 for camel 2.x;;;","22/May/19 09:46;eximius;[~davsclaus] - I know about `expected message count`, but don't you think that `expectedHeaderReceived` should work without it?

I see that you changed that for 3.x. Is there any possibility to backport it to 2.x?;;;","22/May/19 09:59;davsclaus;Not really as we are too busy with Camel 3.x and this is only for testing, not production usage of Camel, and it has been like this for Camel 2.x always.

You are doing something very seldom to just assert a single header.;;;","22/May/19 10:16;eximius;ok, thanks for info;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-spring build fails on windows,CAMEL-13548,13234319,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,bedla,onders,onders,20/May/19 13:45,15/Jul/19 12:09,13/Jul/23 08:32,15/Jul/19 12:09,,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-spring,,,,0,,,,,"[ERROR] Failed to execute goal com.github.davidmoten:jax-maven-plugin:0.1.6:schemagen (generate schema) on project camel-spring: Could not execute [C:\Program Files\Java\jdk-11.0.3\bin\java, -classpath, C:\Users\sezgin\.m2\repository\com\github\davidmoten\jax-maven-plugin-core\0.1.6\jax-maven-plugin-core-0.1.6.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\ws\jaxws-tools\2.3.1\jaxws-tools-2.3.1.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\ws\jaxws-rt\2.3.1\jaxws-rt-2.3.1.jar;C:\Users\sezgin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\sezgin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\sezgin\.m2\repository\javax\xml\ws\jaxws-api\2.3.1\jaxws-api-2.3.1.jar;C:\Users\sezgin\.m2\repository\javax\xml\soap\javax.xml.soap-api\1.4.0\javax.xml.soap-api-1.4.0.jar;C:\Users\sezgin\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\sezgin\.m2\repository\javax\jws\javax.jws-api\1.1\javax.jws-api-1.1.jar;C:\Users\sezgin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\sezgin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\sezgin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\sezgin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\ws\policy\2.7.5\policy-2.7.5.jar;C:\Users\sezgin\.m2\repository\com\sun\activation\javax.activation\1.2.0\javax.activation-1.2.0.jar;C:\Users\sezgin\.m2\repository\org\glassfish\gmbal\gmbal-api-only\3.1.0-b001\gmbal-api-only-3.1.0-b001.jar;C:\Users\sezgin\.m2\repository\org\glassfish\external\management-api\3.0.0-b012\management-api-3.0.0-b012.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\stream\buffer\streambuffer\1.5.6\streambuffer-1.5.6.jar;C:\Users\sezgin\.m2\repository\org\jvnet\mimepull\mimepull\1.9.10\mimepull-1.9.10.jar;C:\Users\sezgin\.m2\repository\org\glassfish\ha\ha-api\3.1.9\ha-api-3.1.9.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\messaging\saaj\saaj-impl\1.5.0\saaj-impl-1.5.0.jar;C:\Users\sezgin\.m2\repository\com\fasterxml\woodstox\woodstox-core\5.1.0\woodstox-core-5.1.0.jar;C:\Users\sezgin\.m2\repository\org\codehaus\woodstox\stax2-api\4.1\stax2-api-4.1.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\bind\jaxb-xjc\2.3.1\jaxb-xjc-2.3.1.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\bind\jaxb-jxc\2.3.1\jaxb-jxc-2.3.1.jar, com.github.davidmoten.jaxws.SchemaGenMain, -cp, C:\Users\sezgin\.m2\repository\org\apache\camel\camel-core-xml\3.0.0-SNAPSHOT\camel-core-xml-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-util-json\3.0.0-SNAPSHOT\camel-util-json-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\com\ibm\websphere\uow\6.0.2.17\uow-6.0.2.17.jar;C:\Users\sezgin\.m2\repository\javax\enterprise\concurrent\javax.enterprise.concurrent-api\1.0\javax.enterprise.concurrent-api-1.0.jar;C:\Users\sezgin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\sezgin\.m2\repository\io\projectreactor\reactor-core\3.2.9.RELEASE\reactor-core-3.2.9.RELEASE.jar;C:\Users\sezgin\.m2\repository\com\fasterxml\classmate\1.3.1\classmate-1.3.1.jar;C:\Users\sezgin\.m2\repository\org\checkerframework\checker-qual\2.6.0\checker-qual-2.6.0.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-seda\3.0.0-SNAPSHOT\camel-seda-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-xslt\3.0.0-SNAPSHOT\camel-xslt-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-core\5.1.7.RELEASE\spring-core-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-bean\3.0.0-SNAPSHOT\camel-bean-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-dataformat\3.0.0-SNAPSHOT\camel-dataformat-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-direct\3.0.0-SNAPSHOT\camel-direct-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-support\3.0.0-SNAPSHOT\camel-support-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-aop\5.1.7.RELEASE\spring-aop-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\io\reactivex\rxjava\1.3.8\rxjava-1.3.8.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-base\3.0.0-SNAPSHOT\camel-base-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-browse\3.0.0-SNAPSHOT\camel-browse-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-vm\3.0.0-SNAPSHOT\camel-vm-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-expression\5.1.7.RELEASE\spring-expression-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-xpath\3.0.0-SNAPSHOT\camel-xpath-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\beanshell\bsh\2.0b5\bsh-2.0b5.jar;C:\Users\sezgin\.m2\repository\com\sun\activation\javax.activation\1.2.0\javax.activation-1.2.0.jar;C:\Users\sezgin\.m2\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;C:\Users\sezgin\.m2\repository\io\reactivex\rxjava2\rxjava\2.2.8\rxjava-2.2.8.jar;C:\Users\sezgin\.m2\repository\com\hazelcast\hazelcast-all\3.2.5\hazelcast-all-3.2.5.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-management-api\3.0.0-SNAPSHOT\camel-management-api-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-timer\3.0.0-SNAPSHOT\camel-timer-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\sezgin\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\sezgin\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\spi-annotations\3.0.0-SNAPSHOT\spi-annotations-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-stub\3.0.0-SNAPSHOT\camel-stub-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-context\5.1.7.RELEASE\spring-context-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\javax\interceptor\javax.interceptor-api\1.2.2\javax.interceptor-api-1.2.2.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-jcl\5.1.7.RELEASE\spring-jcl-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\javax\xml\soap\javax.xml.soap-api\1.4.0\javax.xml.soap-api-1.4.0.jar;C:\Users\sezgin\.m2\repository\org\codehaus\groovy\groovy-xml\2.5.6\groovy-xml-2.5.6.jar;C:\Users\sezgin\.m2\repository\org\aspectj\aspectjweaver\1.9.3\aspectjweaver-1.9.3.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-controlbus\3.0.0-SNAPSHOT\camel-controlbus-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\io\reactivex\rxjava-reactive-streams\1.2.1\rxjava-reactive-streams-1.2.1.jar;C:\Users\sezgin\.m2\repository\javax\money\money-api\1.0.3\money-api-1.0.3.jar;C:\Users\sezgin\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\sezgin\.m2\repository\org\apache\commons\commons-pool2\2.6.0\commons-pool2-2.6.0.jar;C:\Users\sezgin\.m2\repository\com\github\ben-manes\caffeine\caffeine\2.7.0\caffeine-2.7.0.jar;C:\Users\sezgin\.m2\repository\io\netty\netty-common\4.1.36.Final\netty-common-4.1.36.Final.jar;C:\Users\sezgin\.m2\repository\javax\ejb\javax.ejb-api\3.2\javax.ejb-api-3.2.jar;C:\Users\sezgin\.m2\repository\joda-time\joda-time\2.10.1\joda-time-2.10.1.jar;C:\Users\sezgin\.m2\repository\javax\xml\ws\jaxws-api\2.3.0\jaxws-api-2.3.0.jar;C:\Users\sezgin\.m2\repository\org\jvnet\mimepull\mimepull\1.9.7\mimepull-1.9.7.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-instrument\5.1.7.RELEASE\spring-instrument-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\javax\resource\javax.resource-api\1.7.1\javax.resource-api-1.7.1.jar;C:\Users\sezgin\.m2\repository\org\jetbrains\kotlin\kotlin-reflect\1.2.71\kotlin-reflect-1.2.71.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-caffeine-lrucache\3.0.0-SNAPSHOT\camel-caffeine-lrucache-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\codehaus\groovy\groovy\2.5.6\groovy-2.5.6.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-directvm\3.0.0-SNAPSHOT\camel-directvm-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-api\3.0.0-SNAPSHOT\camel-api-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-dataset\3.0.0-SNAPSHOT\camel-dataset-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-mock\3.0.0-SNAPSHOT\camel-mock-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-file\3.0.0-SNAPSHOT\camel-file-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-saga\3.0.0-SNAPSHOT\camel-saga-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\sezgin\.m2\repository\javax\xml\ws\jaxws-api\2.3.1\jaxws-api-2.3.1.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-log\3.0.0-SNAPSHOT\camel-log-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\net\sourceforge\findbugs\annotations\1.3.2\annotations-1.3.2.jar;C:\Users\sezgin\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-core\3.0.0-SNAPSHOT\camel-core-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\io\netty\netty-buffer\4.1.36.Final\netty-buffer-4.1.36.Final.jar;C:\Users\sezgin\.m2\repository\com\jamonapi\jamon\2.81\jamon-2.81.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-ref\3.0.0-SNAPSHOT\camel-ref-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-language\3.0.0-SNAPSHOT\camel-language-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\messaging\saaj\saaj-impl\1.3.28\saaj-impl-1.3.28.jar;C:\Users\sezgin\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\meta-annotations\3.0.0-SNAPSHOT\meta-annotations-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-rest\3.0.0-SNAPSHOT\camel-rest-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.2.71\kotlin-stdlib-1.2.71.jar;C:\Users\sezgin\.m2\repository\com\google\errorprone\error_prone_annotations\2.3.3\error_prone_annotations-2.3.3.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-util\3.0.0-SNAPSHOT\camel-util-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-tx\5.1.7.RELEASE\spring-tx-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\sezgin\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-properties\3.0.0-SNAPSHOT\camel-properties-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\jboss\spec\javax\rmi\jboss-rmi-api_1.0_spec\1.0.6.Final\jboss-rmi-api_1.0_spec-1.0.6.Final.jar;C:\Users\sezgin\.m2\repository\org\hibernate\hibernate-validator\5.4.3.Final\hibernate-validator-5.4.3.Final.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-beans\5.1.7.RELEASE\spring-beans-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-scheduler\3.0.0-SNAPSHOT\camel-scheduler-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-validator\3.0.0-SNAPSHOT\camel-validator-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.2.71\kotlin-stdlib-common-1.2.71.jar;C:\Users\sezgin\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\sezgin\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\gitrepo\camel\components\camel-spring\target\classes;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-core\3.0.0-SNAPSHOT\camel-core-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-util\3.0.0-SNAPSHOT\camel-util-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-api\3.0.0-SNAPSHOT\camel-api-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-base\3.0.0-SNAPSHOT\camel-base-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-support\3.0.0-SNAPSHOT\camel-support-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-bean\3.0.0-SNAPSHOT\camel-bean-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-browse\3.0.0-SNAPSHOT\camel-browse-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-caffeine-lrucache\3.0.0-SNAPSHOT\camel-caffeine-lrucache-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\com\github\ben-manes\caffeine\caffeine\2.7.0\caffeine-2.7.0.jar;C:\Users\sezgin\.m2\repository\org\checkerframework\checker-qual\2.6.0\checker-qual-2.6.0.jar;C:\Users\sezgin\.m2\repository\com\google\errorprone\error_prone_annotations\2.3.3\error_prone_annotations-2.3.3.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-controlbus\3.0.0-SNAPSHOT\camel-controlbus-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-dataformat\3.0.0-SNAPSHOT\camel-dataformat-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-dataset\3.0.0-SNAPSHOT\camel-dataset-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-direct\3.0.0-SNAPSHOT\camel-direct-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-directvm\3.0.0-SNAPSHOT\camel-directvm-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-file\3.0.0-SNAPSHOT\camel-file-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-language\3.0.0-SNAPSHOT\camel-language-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-log\3.0.0-SNAPSHOT\camel-log-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-mock\3.0.0-SNAPSHOT\camel-mock-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-properties\3.0.0-SNAPSHOT\camel-properties-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-ref\3.0.0-SNAPSHOT\camel-ref-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-rest\3.0.0-SNAPSHOT\camel-rest-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-saga\3.0.0-SNAPSHOT\camel-saga-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-scheduler\3.0.0-SNAPSHOT\camel-scheduler-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-seda\3.0.0-SNAPSHOT\camel-seda-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-stub\3.0.0-SNAPSHOT\camel-stub-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-timer\3.0.0-SNAPSHOT\camel-timer-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-validator\3.0.0-SNAPSHOT\camel-validator-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-vm\3.0.0-SNAPSHOT\camel-vm-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-xpath\3.0.0-SNAPSHOT\camel-xpath-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-xslt\3.0.0-SNAPSHOT\camel-xslt-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-util-json\3.0.0-SNAPSHOT\camel-util-json-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-management-api\3.0.0-SNAPSHOT\camel-management-api-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\camel-core-xml\3.0.0-SNAPSHOT\camel-core-xml-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\spi-annotations\3.0.0-SNAPSHOT\spi-annotations-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-core\5.1.7.RELEASE\spring-core-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-jcl\5.1.7.RELEASE\spring-jcl-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-aop\5.1.7.RELEASE\spring-aop-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-context\5.1.7.RELEASE\spring-context-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-beans\5.1.7.RELEASE\spring-beans-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-expression\5.1.7.RELEASE\spring-expression-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\springframework\spring-tx\5.1.7.RELEASE\spring-tx-5.1.7.RELEASE.jar;C:\Users\sezgin\.m2\repository\org\apache\camel\apt\3.0.0-SNAPSHOT\apt-3.0.0-SNAPSHOT.jar;C:\Users\sezgin\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\sezgin\.m2\repository\javax\xml\ws\jaxws-api\2.3.0\jaxws-api-2.3.0.jar;C:\Users\sezgin\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\sezgin\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\sezgin\.m2\repository\com\sun\activation\javax.activation\1.2.0\javax.activation-1.2.0.jar;C:\Users\sezgin\.m2\repository\org\apache\geronimo\specs\geronimo-ws-metadata_2.0_spec\1.1.3\geronimo-ws-metadata_2.0_spec-1.1.3.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\messaging\saaj\saaj-impl\1.3.28\saaj-impl-1.3.28.jar;C:\Users\sezgin\.m2\repository\org\jvnet\mimepull\mimepull\1.9.7\mimepull-1.9.7.jar;C:\Users\sezgin\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\sezgin\.m2\repository\org\jboss\spec\javax\rmi\jboss-rmi-api_1.0_spec\1.0.6.Final\jboss-rmi-api_1.0_spec-1.0.6.Final.jar;C:\Users\sezgin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\sezgin\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\sezgin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\sezgin\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\sezgin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\sezgin\.m2\repository\javax\xml\soap\javax.xml.soap-api\1.4.0\javax.xml.soap-api-1.4.0.jar, -d, C:\gitrepo\camel\components\camel-spring\target/schema, -episode, C:\gitrepo\camel\components\camel-spring\target/schema/META-INF/JAXB/episode_generate-schema.xjb, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\MimeMultipartDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestSecurityApiKey.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RecipientListDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\StopDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\PassThroughServiceCallServiceFilterConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\Base64DataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\InterceptSendToEndpointDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SagaPropagation.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestSecuritiesDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestHostNameResolver.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\KubernetesServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\ZipDeflaterDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\XQueryExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\Model.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\LoadBalancerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\FilterParametersDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelEndpointFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\CamelProxyFactoryDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\Block.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RouteBuilderDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractBaseSSLContextParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\AbstractCamelFluentProducerTemplateFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractKeyStoreParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OnExceptionDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestBindingMode.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ServiceCallServiceChooserConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ClaimCheckDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\BindyDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\IdempotentConsumerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\BeanDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\CryptoDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\XMLSecurityDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\loadbalancer\FailoverLoadBalancerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\CamelServiceExporterDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ModelChannel.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelRouteContextFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ContextScanDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\BindyType.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\RefExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\WhenDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RemoveHeadersDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\loadbalancer\CustomLoadBalancerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\util\spring\SSLContextServerParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\IdentifiedType.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestOperationResponseHeaderDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ThrottleDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\LanguageExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\validator\CustomValidatorDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ServiceCallDefinitionConstants.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\AvroDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\DeleteVerbDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestPropertyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\PGPDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\MulticastDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\PutVerbDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\ConstantExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\validator\ValidatorDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\Hl7TerserExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\CamelPropertyPlaceholderLocationDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OptionalIdentifiedDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractSecureRandomParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\InterceptFromDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelRedeliveryPolicyFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractSSLContextServerParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\GzipDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\WhenSkipSendToEndpointDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\AbstractCamelConsumerTemplateFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ExecutorServiceAwareDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\CamelPropertyPlaceholderDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ServiceCallExpressionConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ThreadPoolProfileDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\util\spring\KeyManagersParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\loadbalancer\RandomLoadBalancerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ServiceCallDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\SimpleExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\BlacklistServiceCallServiceFilterConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\config\BatchResequencerConfig.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ConvertBodyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SetBodyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\DefaultServiceCallServiceLoadBalancerConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\TransformDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\GlobalOptionDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\transformer\CustomTransformerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\StepDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\PackageScanDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\config\ResequencerConfig.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\TimeUnitAdapter.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\BeanioDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\ExpressionDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OnFallbackDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RouteDefinitionHelper.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\TransactedDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ServiceCallServiceLoadBalancerConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractSSLContextParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\YAMLDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\XmlRpcDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\BarcodeDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\loadbalancer\TopicLoadBalancerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\HeaderExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SetHeaderDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\GlobalOptionsDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SendDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\FilterDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ServiceCallServiceFilterConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\UniVocityFixedWidthDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\JacksonXMLDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\TidyMarkupDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\validator\EndpointValidatorDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\XPathExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\loadbalancer\WeightedLoadBalancerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\CatchDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\YAMLLibrary.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\HealthyServiceCallServiceFilterConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\XStreamDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SetFaultBodyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\DescriptionDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\CombinedServiceCallServiceFilterConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\IcalDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\MvelExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OptimisticLockRetryPolicyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RestContextRefDefinitionHelper.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\PolicyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractKeyManagersParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\ASN1DataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\DataFormatsDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\FhirDataformat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RouteContextRefDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\HeadVerbDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\InOutDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RoutingSlipDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ChoiceDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestOperationParamDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelProducerTemplateFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\FlatpackDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ProcessorDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\validator\ValidatorsDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\ThriftDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OnCompletionDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ConsulServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RollbackDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelBeanPostProcessor.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\MethodCallExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ValidateDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SagaCompletionMode.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\transformer\TransformerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelConsumerTemplateFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\AggregateDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ExpressionNodeHelper.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractJsseUtilFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\AbstractCamelEndpointFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\AbstractCamelFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\DataFormatDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ModelHelper.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\loadbalancer\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SagaActionUriDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\UniVocityAbstractDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\NoOutputDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\AbstractCamelRedeliveryPolicyFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\UniVocityHeader.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RedeliveryPolicyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\RssDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\UnmarshalDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\ErrorHandlerType.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ClaimCheckOperation.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\ErrorHandlerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\util\spring\SSLContextParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ServiceCallConfigurationDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\RibbonServiceCallServiceLoadBalancerConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\YAMLTypeFilterDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\TokenizerExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\SecureSocketProtocolsParametersDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\AbstractCamelProducerTemplateFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelFluentProducerTemplateFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ProcessorDefinitionHelper.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\FromDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractTrustManagersParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ScriptDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RoutesDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\HL7DataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\transformer\TransformersDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\PollEnrichDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\VerbDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\validator\PredicateValidatorDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\PatchVerbDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\CachingServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SetPropertyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\GroovyExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\XMLTokenizerExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\loadbalancer\RoundRobinLoadBalancerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\InOnlyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SagaOptionDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\PropertyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\util\spring\KeyStoreParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\HystrixConfigurationDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\CipherSuitesParametersDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\config\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ResequenceDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\WireTapDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestsDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SagaDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\CsvDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\config\StreamResequencerConfig.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\OgnlExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\CombinedServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\LogDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RemovePropertyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OutputTypeDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ProcessDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelRestContextFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\NoOutputExpressionNode.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RouteContextRefDefinitionHelper.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\CamelStreamCachingStrategyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RouteDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\ZooKeeperServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\loadbalancer\StickyLoadBalancerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\GetVerbDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\PatternBasedPackageScanFilter.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\Constants.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestConstants.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\CamelJMXAgentDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\transformer\DataFormatTransformerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\ZipFileDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OtherAttributesAware.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestConfigurationDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\AbstractCamelThreadPoolFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\transformer\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\CustomDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\util\spring\TrustManagersParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RemovePropertiesDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\FhirXmlDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\MarshalDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\ExchangePropertyExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\SoapJaxbDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\EtcdServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\JsonLibrary.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\util\spring\SecureRandomParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\JsonPathExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelContextFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SamplingDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\BoonDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ModelCamelContext.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RestContextRefDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ThreadsDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ToDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestBindingDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\JsonApiDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\JsonDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\spring\CamelThreadPoolFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\HystrixDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\SpELExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestSecurityOAuth2.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\SecurityDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\SNIHostNamesDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\StaticServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SortDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\UniVocityTsvDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\util\spring\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\InterceptDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\SyslogDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\FhirJsonDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\InputTypeDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\util\spring\SSLContextClientParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestOperationResponseMsgDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\YAMLTypeFilterType.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\TarFileDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OnCompletionMode.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\ProtobufDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestSecurityBasicAuth.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ThrowExceptionDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestSecurityDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\EnrichDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ExpressionNode.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\CamelPropertyPlaceholderFunctionDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\DelayDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\language\NamespaceAwareExpression.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\TryDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\validator\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\CollectionFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\FinallyDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OutputDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\DnsServiceCallServiceDiscoveryConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ExpressionSubElementDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\LoopDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RouteContainer.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestParamType.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SplitDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\package-info.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\cloud\CustomServiceCallServiceFilterConfiguration.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\HystrixConfigurationCommon.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\OtherwiseDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\util\jsse\AbstractSSLContextClientParametersFactoryBean.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\PipelineDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\LoadBalanceDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\PostVerbDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\JaxbDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\LZFDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\ToDynamicDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\SetExchangePatternDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\transformer\EndpointTransformerDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\dataformat\UniVocityCsvDataFormat.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\EndpointRequiredDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\rest\RestContainer.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\DynamicRouterDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\model\RemoveHeaderDefinition.java, C:\gitrepo\camel\components\camel-spring\target\schema-src\org\apache\camel\core\xml\AbstractCamelContextFactoryBean.java] in C:\gitrepo\camel\components\camel-spring.: Cannot run program ""C:\Program Files\Java\jdk-11.0.3\bin\java"" (in directory ""C:\gitrepo\camel\components\camel-spring""): CreateProcess error=206, The filename or extension is too long -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException","Windows

maven 3.6.1

jdk 11",bedla,davidmoten2,onders,,,,"oscerd commented on pull request #3042: CAMEL-13548: Upgrade jaxb-maven-plugin to 2.5.0
URL: https://github.com/apache/camel/pull/3042
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jul/19 12:09;githubbot;600",,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jul 13 13:50:58 UTC 2019,,,,,,,,,,,"0|z02uy0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/May/19 16:22;onders;Unless number of files which is used to generated xsd and copied into schema-src is reduced, there seems to be no workaround for windows AFA i am aware.;;;","28/May/19 10:56;onders;The fix for this issue will not be needed if this [PR|[https://github.com/mojohaus/jaxb2-maven-plugin/pull/126]] gets merged and 2.5 or later versions are released with this fix. I had re-tested this PR as [~jpoth] did already before.

Even not using jax-maven-plugin and going back to jaxb2 maven plugin works though. But sources are compiled as below;

 

[INFO] — jaxb2-maven-plugin:2.4:schemagen (generate schema) @ camel-spring —
 [INFO] Created EpisodePath [C:\gitrepo\camel\components\camel-spring\target\schema\META-INF\JAXB]: true
 [INFO] Created EpisodePath [C:\gitrepo\camel\components\camel-spring\target\schema\META-INF\JAXB]: true
 warning: Supported source version 'RELEASE_7' from annotation processor 'com.sun.tools.jxc.ap.SchemaGenerator' less than -source '11'
 Note: Writing C:\gitrepo\camel\schema1.xsd
 Note: Writing C:\gitrepo\camel\schema2.xsd
 Note: Writing C:\gitrepo\camel\components\camel-spring\target\schema\META-INF\JAXB\episode_generate schema.xjb
 Note: Writing C:\gitrepo\camel\components\camel-spring\target\schema\META-INF\JAXB\episode_generate schema.xjb
 Note: Some input files use unchecked or unsafe operations.
 Note: Recompile with -Xlint:unchecked for details.

 

Not sure why jax-maven-plugin is introduced here. [https://github.com/apache/camel/commit/bc449cb20687dd0821e2ac93c490418cf67cb1a2#diff-2ba07f5fb165e803bbfe137205c08f02]

 Possibly missed a test on windows. 

Not a problem, it looks like i made regression :)

Neither exec plugin and jax-maven-plugin helps with this issue on windows, only jaxb2-maven-plugin seems a better option for future.

 ;;;","13/Jul/19 13:50;bedla;jaxb2-maven-plugin 2.5 is available in maven central from today.

[https://search.maven.org/artifact/org.codehaus.mojo/jaxb2-maven-plugin/2.5.0/maven-plugin]

It includes JDK11 fix ( [https://github.com/mojohaus/jaxb2-maven-plugin/issues/138] ) so maybe we can upgrade and revert jax workaround introduced in commit bc449cb20687dd0821e2ac93c490418cf67cb1a2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-package-maven-plugin - spring auto configuration generation fails for properties component on windows as type contains in valid char  which is '<' and '>',CAMEL-13546,13234278,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,onders,onders,onders,20/May/19 11:25,21/May/19 08:21,13/Jul/23 08:32,21/May/19 08:21,,,,,,,,,,,,3.0.0,,,,,,camel-package-maven-plugin,,,,0,,,,,"this is reproducible on windows.

[http://camel.465427.n5.nabble.com/Re-Error-building-3-0-0-SNAPSHOT-td5830913.html]",Windows,onders,,,,,,"onderson commented on pull request #2936: CAMEL-13546 - as < and > is invalid in windows
URL: https://github.com/apache/camel/pull/2936
 
 
   bypass if type starts with java.util.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 11:49;githubbot;600","onderson commented on pull request #2936: CAMEL-13546 - as < and > is invalid in windows
URL: https://github.com/apache/camel/pull/2936
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 08:13;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 20 11:42:13 UTC 2019,,,,,,,,,,,"0|z02uow:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/May/19 11:42;onders;Botttom line this is the code causing failure on windows. but passing in Unix based boxes because < or > is not invalid and sourcePath yields to be null and execution does not fail.

 
{code:java}
List<String> myList = new ArrayList<String>();
myList.add(""C:\\gitrepo\\camel\\components\\camel-properties\\src\\main\\java"");
myList.add(""C:\\gitrepo\\camel\\components\\camel-properties\\target\\generated-sources\\annotations"");
String fileName = ""java/util/List<org/apache/camel/component/properties/PropertiesLocation>.java"";
Path sourcePath = myList.stream().map(Paths::get).map(p -> p.resolve(fileName)).filter(Files::isRegularFile).findFirst().orElse(null);{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
netty4-http tests report memory leak,CAMEL-13545,13234181,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,19/May/19 18:35,20/May/19 07:14,13/Jul/23 08:32,20/May/19 07:14,3.0.0-M2,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-netty4-http,,,,0,,,,,"Seems that the changes introduced to support implementing proxy protocol in nett4-http introduced a memory leak as witnessed by the failing [tests on CI|https://builds.apache.org/view/C/view/Apache%20Camel/job/Camel/job/master/1243/testReport/junit/org.apache.camel.component.netty4.http/NettyHttpRestContextPathMatcherTest/org_apache_camel_component_netty4_http_NettyHttpRestContextPathMatcherTest/].",,zregvart,,,,,,"zregvart commented on pull request #2929: CAMEL-13545: fix netty4-http memory issues
URL: https://github.com/apache/camel/pull/2929
 
 
   `DefaultNettyHttpBinding::toNettyRequest` could allocate a new Netty `ByteBuf` (e.g. via `NettyConverter::toByteBuffer`) which in turn might or might not be passed to the `FullHttpRequest` depending on the resulting buffer size: if it's 0 it will not be set as content of the request. In that case this causes a memory leak.
   
   The buffer having the size of 0 is quite common for `GET` or `OPTIONS` HTTP method requests, so releasing the buffer if the incoming request is received when acting as a proxy will cause the any downstream Netty requests (say in a scenario `from(""netty-http:proxy:..."").toD(""netty-http:..."")`) to block.
   
   So additional optimization was added to store the proxy HTTP request in the `Exchange` property and to check if the current request in the `NettyHttpMessage` has the same reference; and in that case the proxy HTTP request will be reused, only changes to the HTTP method, protocol or request URL will be applied.
   
   Tests pass, would appreciate if my assumptions would be double checked.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/19 18:57;githubbot;600","oscerd commented on pull request #2929: CAMEL-13545: fix netty4-http memory issues
URL: https://github.com/apache/camel/pull/2929
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 07:13;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,CAMEL-13521,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-19 18:35:48.0,,,,,,,,,,,"0|z02u2w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@PropertyInject is broken for Spring projects using CamelTestContextBootstrapper,CAMEL-13543,13233987,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,srdo,srdo,17/May/19 15:19,19/May/19 14:17,13/Jul/23 08:32,19/May/19 14:17,2.24.0,,,,,,,,,,,2.24.1,2.25.0,3.0.0,,,,camel-spring,camel-test,,,0,,,,,"I'm trying to override properties in a Camel Spring project. In my production code, I have
a field injected with

@Component
public class MyRouteBuilder extends  SpringRouteBuilder {

  @PropertyInject(""{{MY_PROPERTY}} "")
  private String myProperty;

}

I normally load the value from a properties file using a BridgePropertyPlaceholderConfigurer.

In one of my tests, I'd like to replace the property. My test looks as follows:

@RunWith(CamelSpringRunner.class)
@BootstrapWith(CamelTestContextBootstrapper.class)
@ContextConfiguration(locations = {
    ""classpath:META-INF/spring/my-properties.xml""
})
@DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)
@UseAdviceWith
public class CitizenLookupPatientByOIDRouteTest {
  @Test
   public void test() {
      ...
   }

   @UseOverridePropertiesWithPropertiesComponent
  public static Properties overrideProperties() {
    Properties overrides = new Properties();
    overrides.setProperty(""MY_PROPERTY"", ""some-value"");
    return overrides;
  }
}

What I am seeing is that the injected field gets the value from the properties file, rather
than the overridden value. Debugging this, I see that the field injection happens during Spring
bean postprocessing, which is before the overrideProperties method is called.

parseUri:190, PropertiesComponent (org.apache.camel.component.properties)
parseUri:178, PropertiesComponent (org.apache.camel.component.properties)
resolvePropertyPlaceholders:2547, DefaultCamelContext (org.apache.camel.impl)
getInjectionPropertyValue:276, CamelPostProcessorHelper (org.apache.camel.impl)
injectFieldProperty:214, DefaultCamelBeanPostProcessor (org.apache.camel.impl)
doWith:174, DefaultCamelBeanPostProcessor$1 (org.apache.camel.impl)
doWithFields:74, ReflectionHelper (org.apache.camel.util)
injectFields:170, DefaultCamelBeanPostProcessor (org.apache.camel.impl)
postProcessBeforeInitialization:83, DefaultCamelBeanPostProcessor (org.apache.camel.impl)
postProcessBeforeInitialization:154, CamelBeanPostProcessor (org.apache.camel.spring)
applyBeanPostProcessorsBeforeInitialization:419, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)
initializeBean:1737, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)
doCreateBean:576, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)
createBean:498, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)
lambda$doGetBean$0:320, AbstractBeanFactory (org.springframework.beans.factory.support)
getObject:-1, 1286771084 (org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$40)
getSingleton:222, DefaultSingletonBeanRegistry (org.springframework.beans.factory.support)
doGetBean:318, AbstractBeanFactory (org.springframework.beans.factory.support)
getBean:199, AbstractBeanFactory (org.springframework.beans.factory.support)
preInstantiateSingletons:846, DefaultListableBeanFactory (org.springframework.beans.factory.support)
finishBeanFactoryInitialization:863, AbstractApplicationContext (org.springframework.context.support)
refresh:546, AbstractApplicationContext (org.springframework.context.support)
loadContext:152, CamelSpringTestContextLoader (org.apache.camel.test.spring)
loadContext:89, CamelSpringTestContextLoader (org.apache.camel.test.spring)
loadContextInternal:99, DefaultCacheAwareContextLoaderDelegate (org.springframework.test.context.cache)
loadContext:117, DefaultCacheAwareContextLoaderDelegate (org.springframework.test.context.cache)
getApplicationContext:108, DefaultTestContext (org.springframework.test.context.support)
injectDependencies:118, DependencyInjectionTestExecutionListener (org.springframework.test.context.support)
prepareTestInstance:83, DependencyInjectionTestExecutionListener (org.springframework.test.context.support)
prepareTestInstance:246, TestContextManager (org.springframework.test.context)
createTest:227, SpringJUnit4ClassRunner (org.springframework.test.context.junit4)

The code causing the injection in CamelSpringContextLoader is this https://github.com/apache/camel/blob/camel-2.23.1/components/camel-test-spring/src/main/java/org/apache/camel/test/spring/CamelSpringTestContextLoader.java#L152.
A few lines below, the properties override code is called.

The issue here is that Spring is responsible for injecting the property value into the @PropertyInject field, but CamelSpringTestContextLoader first loads the Spring context, thus causing field injection, and then sets the property overrides.

I'll put up a PR with a proposal for a fix shortly.
",,srdo,,,,,,"srdo commented on pull request #2925: CAMEL-13543: Make CamelSpringTestContextLoader set property overrides…
URL: https://github.com/apache/camel/pull/2925
 
 
   … before the CamelContext is injected into any other bean
   
   https://issues.apache.org/jira/browse/CAMEL-13543
   
   The change here is to set the property overrides using a Spring BeanPostProcessor for the CamelContext, rather than setting them once the entire Spring context is initialized. My understanding is this will ensure the overrides are set before the CamelContext is injected into other beans during Spring initialization.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 15:56;githubbot;600","srdo commented on pull request #2928: CAMEL-13543 (master)
URL: https://github.com/apache/camel/pull/2928
 
 
   Forward port of https://github.com/apache/camel/pull/2925.
   
   Put the changes in the last commit for easy review. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/19 10:26;githubbot;600","oscerd commented on pull request #2928: CAMEL-13543 (master)
URL: https://github.com/apache/camel/pull/2928
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/19 13:57;githubbot;600","oscerd commented on pull request #2925: CAMEL-13543: Make CamelSpringTestContextLoader set property overrides…
URL: https://github.com/apache/camel/pull/2925
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/19 14:05;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-17 15:19:57.0,,,,,,,,,,,"0|z02svs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in camel-hystrix when xecutionTimeoutInMilliseconds() and onFallback() are used ,CAMEL-13541,13233957,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,valdar,valdar,valdar,17/May/19 13:15,21/May/19 16:59,13/Jul/23 08:32,21/May/19 07:53,2.18.0,,,,,,,,,,,2.22.5,2.23.3,2.24.1,2.25.0,3.0.0,3.0.0-M3,camel-hystrix,,,,0,,,,,"If e{{xecutionTimeoutInMilliseconds()}} and {{onFallback()}} are used together in a camel hystrix definition. When an Hystrix timeout occurs there might be race conditions in modifying the running exchange between the 2 hystrix threads running in {{HystrixProcessorCommand.run()}} and {{HystrixProcessorCommand.()}}.

This can be verified running the attached modified {{HystrixTimeoutWithFallbackTest}} test inside {{components/camel-hystrix}}.",,valdar,,,,,,"valdar commented on pull request #2926: CAMEL-13541: fixed Race condition in camel-hystrix when xecutionTimeo…
URL: https://github.com/apache/camel/pull/2926
 
 
   …utInMilliseconds() and onFallback() are used
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 20:34;githubbot;600","oscerd commented on pull request #2926: CAMEL-13541: fixed Race condition in camel-hystrix when xecutionTimeo…
URL: https://github.com/apache/camel/pull/2926
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 06:59;githubbot;600","valdar commented on pull request #2932: CAMEL-13541: fixed Race condition in camel-hystrix when xecutionTimeo…
URL: https://github.com/apache/camel/pull/2932
 
 
   …utInMilliseconds() and onFallback() are used
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 08:58;githubbot;600","valdar commented on pull request #2933: CAMEL-13541: fixed Race condition in camel-hystrix when xecutionTimeo…
URL: https://github.com/apache/camel/pull/2933
 
 
   …utInMilliseconds() and onFallback() are used
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 08:58;githubbot;600","valdar commented on pull request #2934: CAMEL-13541: fixed Race condition in camel-hystrix when xecutionTimeo…
URL: https://github.com/apache/camel/pull/2934
 
 
   …utInMilliseconds() and onFallback() are used
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 08:58;githubbot;600","valdar commented on pull request #2932: CAMEL-13541: fixed Race condition in camel-hystrix when xecutionTimeo…
URL: https://github.com/apache/camel/pull/2932
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 08:58;githubbot;600","valdar commented on pull request #2933: CAMEL-13541: fixed Race condition in camel-hystrix when xecutionTimeo…
URL: https://github.com/apache/camel/pull/2933
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 08:59;githubbot;600","valdar commented on pull request #2934: CAMEL-13541: fixed Race condition in camel-hystrix when xecutionTimeo…
URL: https://github.com/apache/camel/pull/2934
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 08:59;githubbot;600","valdar commented on pull request #2939: CAMEL-13541 - Fixed CS
URL: https://github.com/apache/camel/pull/2939
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 16:52;githubbot;600","valdar commented on pull request #2939: CAMEL-13541 - Fixed CS
URL: https://github.com/apache/camel/pull/2939
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 16:52;githubbot;600","valdar commented on pull request #2940: CAMEL-13541 - Fixed CS
URL: https://github.com/apache/camel/pull/2940
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 16:56;githubbot;600","valdar commented on pull request #2940: CAMEL-13541 - Fixed CS
URL: https://github.com/apache/camel/pull/2940
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 16:56;githubbot;600","valdar commented on pull request #2941: CAMEL-13541 - Fixed CS
URL: https://github.com/apache/camel/pull/2941
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 16:58;githubbot;600","valdar commented on pull request #2941: CAMEL-13541 - Fixed CS
URL: https://github.com/apache/camel/pull/2941
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 16:59;githubbot;600",,0,8400,,,0,8400,,,,,,,,,,,,,,,,,,,,,"17/May/19 13:15;valdar;HystrixTimeoutWithFallbackTest.java;https://issues.apache.org/jira/secure/attachment/12969023/HystrixTimeoutWithFallbackTest.java",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-17 13:15:50.0,,,,,,,,,,,"0|z02sp4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflow when using bean(this),CAMEL-13536,13233801,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,eximius,eximius,16/May/19 15:42,17/May/19 10:07,13/Jul/23 08:32,16/May/19 16:12,2.24.0,,,,,,,,,,,2.22.5,2.23.3,2.24.1,2.25.0,3.0.0,3.0.0-M3,came-core,camel-test,tests,,0,,,,,"This testcase
{code:java}
import org.apache.camel.CamelContext;
import org.apache.camel.Exchange;
import org.apache.camel.RoutesBuilder;
import org.apache.camel.builder.AdviceWithRouteBuilder;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.mock.MockEndpoint;
import org.apache.camel.test.junit4.CamelTestSupport;
import org.junit.Test;

public class MyRouteTest extends CamelTestSupport {

private static final String ROUTE_ID = ""mytest"";

@Override
protected RoutesBuilder createRouteBuilder() throws Exception {
  return new RouteBuilder() {

    @Override
    public void configure() throws Exception {
      from(""direct:mytest"")
      .id(ROUTE_ID)
      .bean(this, ""hello"", false) // <- here is the problem
      .to(""stream:out"");
    }

    public void hello(final Exchange exchange) {
    }
  };
}

@Override
public void setUp() throws Exception {
  super.setUp();
  final CamelContext camelContext = context();
  camelContext.getRouteDefinition(ROUTE_ID)
    .adviceWith(camelContext, new AdviceWithRouteBuilder() {
    @Override
    public void configure() throws Exception {
      weaveAddLast().to(""mock:extract"");
    }
  });
}

@Override
public boolean isUseAdviceWith() {
  return true;
}

@Test
public void shouldFire() throws InterruptedException {
  // given
  final MockEndpoint myMock = getMockEndpoint(""mock:extract"");

  myMock.expectedMessageCount(1);

  // when
  template.sendBody(""direct:mytest"", ""test"");

  // then
  myMock.assertIsSatisfied();
}
}
{code}
Throws
{code:java}
java.lang.StackOverflowError
at java.util.AbstractCollection.toString(Unknown Source)
at java.lang.String.valueOf(Unknown Source)
at java.lang.StringBuilder.append(Unknown Source)
at org.apache.camel.model.RoutesDefinition.toString(RoutesDefinition.java:64)
at org.apache.camel.builder.RouteBuilder.toString(RouteBuilder.java:74)
at org.apache.camel.model.BeanDefinition.description(BeanDefinition.java:89)
at org.apache.camel.model.BeanDefinition.toString(BeanDefinition.java:78)
at java.lang.String.valueOf(Unknown Source)
{code}
 ",,davsclaus,eximius,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 17 10:07:19 UTC 2019,,,,,,,,,,,"0|z02rqg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/May/19 16:12;davsclaus;Thanks for reporting. As workaround dont call method via this and have the method added to the route builder instance itself, and its also only stackoverflow in a toString dump of the route model.;;;","17/May/19 10:07;eximius;[~davsclaus], could you please paste a short example of what do you mean by ""have the method added to the route builder instance itself"";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-salesforce: integration tests fail because salesforce answer is not valid xml,CAMEL-13533,13233696,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,aldettinger,aldettinger,aldettinger,16/May/19 07:16,16/May/19 09:19,13/Jul/23 08:32,16/May/19 09:19,3.0.0-M2,,,,,,,,,,,3.0.0-M3,,,,,,camel-salesforce,,,,0,,,,,"Some salesforce API response are not valid xml because xml element name contains space whereas they should not.

For instance, the CompositeApiBatchIntegrationTest.shouldSupportLimits was failing because the response contained:

<Ant Migration Tool>

...

</Ant Migration Tool>

 ",,aldettinger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 16 09:19:05 UTC 2019,,,,,,,,,,,"0|z02r2w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/May/19 09:19;aldettinger;Xml related tests are now ignored for composite batch api;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docker component socket mode does not work,CAMEL-13526,13233411,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,jamesnetherton,jamesnetherton,jamesnetherton,15/May/19 08:18,15/May/19 08:25,13/Jul/23 08:32,15/May/19 08:25,3.0.0,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-docker,,,,0,,,,,"When I recently upgraded the docker java client, I missed a change in behaviour for how the path to the docker daemon unix socket is determined. It used to be hard coded, but it's now configurable via the host URL:

[https://github.com/docker-java/docker-java/commit/32220487c9f6fc54dceb152e774d3d09f5548943#diff-1e9098e0bf3cde696fe27648bc113a13]

The camel-docker component cannot currently handle unix:// URL schemes in the host parameter because it erroneously appends the port number onto the end of the URL.

 ",,jamesnetherton,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-15 08:18:16.0,,,,,,,,,,,"0|z02pbk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RuntimeCamelCatalog#asEndpointUri strips dash from url with toD and netty4-http,CAMEL-13524,13233330,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,bedla,bedla,14/May/19 21:33,16/May/19 09:47,13/Jul/23 08:32,16/May/19 09:47,2.23.0,3.0.0-M2,,,,,,,,,,2.22.5,2.23.3,2.24.1,2.25.0,3.0.0,3.0.0-M3,came-core,,,,0,,,,,"[https://stackoverflow.com/questions/56136857/how-to-use-camel-tod-and-netty4-http-component-problem-with-optimization-of-din]

This is very similar to CAMEL-12705, but in this case it affects url with dashes. Tested with current master.

*{{url}}*
{code:java}
netty4-http:http://a-b-c.hostname.tld:8080/anything{code}
*results in* 
{code:java}
netty4-http:http:a-b:8080/path{code}
Unit test in attachment.

 

-Maybe-

-_AbstractCamelCatalog#SYNTAX_PATTERN_ should be changed to- 
{code:java}
([\w.-]+)
{code}
-Or is there reason, why is dash excluded from regexp?-

I have tried to edit regexp and it broke test too, it results in resolved = ""netty4-http:http:a-b-c.hostname.tld-8080""",,bedla,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/May/19 21:24;bedla;RuntimeCamelCatalog#asEndpointUri_strips_dash_from_url_with_netty4-http.patch;https://issues.apache.org/jira/secure/attachment/12968713/RuntimeCamelCatalog%23asEndpointUri_strips_dash_from_url_with_netty4-http.patch",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 16 08:38:33 UTC 2019,,,,,,,,,,,"0|z02otk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/May/19 08:29;davsclaus;Cannot reproduce this on master
https://github.com/apache/camel/commit/56b030607a3fe7861bac987483c82a00af718735;;;","16/May/19 08:38;davsclaus;Ah okay got it reproduced, so its the optional path in the end that is caused a bit of stir;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-salesforce: setup-salesforce-instance issues error messages,CAMEL-13520,13233203,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,aldettinger,aldettinger,aldettinger,14/May/19 10:16,14/May/19 15:44,13/Jul/23 08:32,14/May/19 15:44,3.0.0-M2,,,,,,,,,,,3.0.0-M3,,,,,,camel-salesforce,,,,0,,,,,"{{Running *mvn -Pintegration antrun:run@setup-salesforce-instance* to first setup the connected app needed for integration tests reports issues:}}
 * {{The ModifyMetadata permission is needed}}
 * {{Some Apex classes contains invalid % characters}}",,aldettinger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-14 10:16:04.0,,,,,,,,,,,"0|z02o1c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix camel-netty4-http TLS tests,CAMEL-13517,13233190,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,14/May/19 09:47,14/May/19 10:11,13/Jul/23 08:32,14/May/19 10:11,,,,,,,,,,,,3.0.0-M3,,,,,,camel-netty4-http,,,,0,,,,,"The keystore used in TLS tests for contains a expired certificate for a DSA key. This narrows down the cipher selection to disabled ciphers and the only cipher available is the NULL with NULL cipher, making any TLS handshake virtually impossible.",,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-14 09:47:01.0,,,,,,,,,,,"0|z02nyg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CXFRS header ""CamelDestinationOverrideUrl"" ignored after changing it twice",CAMEL-13513,13233017,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,agagliardi,agagliardi,13/May/19 16:09,15/May/19 09:44,13/Jul/23 08:32,15/May/19 09:44,2.17.0,,,,,,,,,,,2.23.3,2.24.1,3.0.0,3.0.0-M3,,,camel-cxfrs,,,,0,,,,,"In a route that changes the destination of rsClient in CXFRS dynamically, using the Header ""CamelDestinationOverrideUrl"", it stops working when set for second time.
This issue has been partially fixed in the CAMEL-12541 but only for Spring based endpoint, the issue still exists for the Blueprint based endpoint.",,acosentino,agagliardi,,,,,"agagliardi commented on pull request #2913: CAMEL-13513 CXFRS header ""CamelDestinationOverrideUrl"" ignored after changing it twice
URL: https://github.com/apache/camel/pull/2913
 
 
   This issue has been fixed for the CXFRS Spring Endpoint with the CAMEL-12541 but not for the CXFRS Blueprint endpoint.
   Integration tests has been disabled on master but the test works on 2.x branches.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 14:49;githubbot;600","oscerd commented on pull request #2913: CAMEL-13513 CXFRS header ""CamelDestinationOverrideUrl"" ignored after changing it twice
URL: https://github.com/apache/camel/pull/2913
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 07:45;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 14 14:53:11 UTC 2019,,,,,,,,,,,"0|z02mw8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/May/19 16:15;acosentino;2.17.x is not released anymore. Did you check with newer version?;;;","14/May/19 14:53;agagliardi;Hi Andrea, yes the issue exists also on master.

I've made a PR on master with an integration test (disabled on master but works on 2.x) and the fix similar to the one made for CXFRS Spring Endpoint.

[https://github.com/apache/camel/pull/2913];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Strange behaviour of SimpleLRUCache with ProducerTemplate,CAMEL-13504,13232922,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,gnodet,jamesnetherton,jamesnetherton,13/May/19 07:14,12/Sep/19 13:16,13/Jul/23 08:32,12/Sep/19 13:16,3.0.0,,,,,,,,,,,3.0.0.RC2,,,,,,came-core,,,,0,,,,,"If no cache factory implementation can be found on the classpath then Camel falls back on {{SimpleLRUCache}}.

This has some strange effects when using {{ProducerTemplate.send()}} (or {{.request()}}). I didn't dig too much into the problem, but it's something to do with what happens when a producer is evicted from the producer cache. It causes the producer {{doStop()}} method to be called. So if an endpoint is trying to connect to some external resource, it ends up closing that connection prior to any message being sent.

To see this, add a dependency exclusion for {{camel-caffeine-lrucache}} in the {{camel-elasticsearch-rest}} {{pom.xml}}, then run a test:
{code:java}
mvn clean test -Dtest=ElasticsearchIndexTest#testIndex
{code}
In the console output you'll see something like the following. Note the multiple connect / disconnect from {{ElasticsearchProducer}}:
{code:java}
[2019-05-13T08:03:30,574][INFO ][o.a.c.c.e.ElasticsearchProducer] [unknown] Connecting to the ElasticSearch cluster: elasticsearch
[2019-05-13T08:03:30,575][INFO ][o.a.c.c.e.ElasticsearchProducer] [unknown] Disconnecting from ElasticSearch cluster: elasticsearch
[2019-05-13T08:03:30,578][INFO ][o.a.c.c.e.ElasticsearchProducer] [unknown] Connecting to the ElasticSearch cluster: elasticsearch
[2019-05-13T08:03:30,579][INFO ][o.a.c.c.e.ElasticsearchProducer] [unknown] Disconnecting from ElasticSearch cluster: elasticsearch
[2019-05-13T08:03:30,582][INFO ][o.a.c.c.e.ElasticsearchProducer] [unknown] Connecting to the ElasticSearch cluster: elasticsearch
[2019-05-13T08:03:30,582][INFO ][o.a.c.c.e.ElasticsearchProducer] [unknown] Disconnecting from ElasticSearch cluster: elasticsearch
[2019-05-13T08:03:30,586][INFO ][o.a.c.c.e.ElasticsearchProducer] [unknown] Connecting to the ElasticSearch cluster: elasticsearch
[2019-05-13T08:03:30,587][INFO ][o.a.c.c.e.ElasticsearchProducer] [unknown] Disconnecting from ElasticSearch cluster: elasticsearch
[2019-05-13T08:03:30,590][INFO ][o.a.c.i.DefaultCamelContext] [unknown] Route: route9 started and consuming from: direct://start
[2019-05-13T08:03:30,591][INFO ][o.a.c.i.DefaultCamelContext] [unknown] Route: route10 started and consuming from: direct://index
[2019-05-13T08:03:30,591][INFO ][o.a.c.i.DefaultCamelContext] [unknown] Route: route11 started and consuming from: direct://deleteIndex
[2019-05-13T08:03:30,592][INFO ][o.a.c.i.DefaultCamelContext] [unknown] Route: route12 started and consuming from: direct://indexWithReplication
[2019-05-13T08:03:30,592][INFO ][o.a.c.i.DefaultCamelContext] [unknown] Total 4 routes, of which 4 are started
[2019-05-13T08:03:30,592][INFO ][o.a.c.i.DefaultCamelContext] [unknown] Apache Camel 3.0.0-SNAPSHOT (CamelContext: camel-3) started in 0.040 seconds
{code}
When the test case comes to send a message via {{ProducerTemplate}}, it fails because there is no active connection to the test ElasticSearch cluster.
{code:java}
java.lang.IllegalStateException: Request cannot be executed; I/O reactor status: STOPPED
{code}",,gnodet,jamesnetherton,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 12 13:16:24 UTC 2019,,,,,,,,,,,"0|z02mb4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Sep/19 13:16;gnodet;This should be fixed by [https://github.com/apache/camel/commit/7082500b816b0a2e54d2c1f6ff47099965fe6e3d];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting a clientConfig parameter always creates new cookie store per endpoint,CAMEL-13497,13232582,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,siano,siano,siano,10/May/19 06:23,10/May/19 11:17,13/Jul/23 08:32,10/May/19 11:06,2.23.2,,,,,,,,,,,2.23.3,2.24.1,3.0.0,,,,camel-ahc,,,,0,,,,,"If a clientConfig parameter is defined for an ahc endpoint, a new cookie store will be created on the endpoint, regardless of the configuration set to the clientConfig parameter.

This makes it impossible to have an endpoint without a cookie store, when this parameter is set (which also means that the clientConfig parameter and the cookieHandler paramter do not work together).

The root cause for this issue is that AhcComponent.cloneConfig() is called at several places in the code to create a configuration builder from the provided configuration. This method is calling new DefaultAsyncHttpClientConfig.Builder(clientConfig), to create that new builder, but this call will create a new cookie store on each invocation and provide it to the new builder. This means even if the cookie store is set to null in the provided configuration the client for the endpoint will be created with a cloned configuration, which will then have a new cookie store.",,acosentino,siano,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 10 11:17:09 UTC 2019,,,,,,,,,,,"0|z02k80:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/May/19 11:06;acosentino;2.24.0 is on vote already. I created the 2.24.1 label;;;","10/May/19 11:08;siano;Oh, Sorry I overlooked that. Which branch does this need to go into, camel-2.x?;;;","10/May/19 11:10;acosentino;No problem. It's exactly where you pushed.

https://github.com/apache/camel/tree/camel-2.x;;;","10/May/19 11:17;siano;Great, Thanks for your help!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-invoker-plugin taking as much heapspace as the Maven itself,CAMEL-13496,13232511,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,09/May/19 18:06,09/May/19 18:17,13/Jul/23 08:32,09/May/19 18:17,,,,,,,,,,,,2.23.3,2.24.0,3.0.0-M3,,,,build system,,,,0,,,,,"When we run {{maven-invoker-plugin}} it takes on any {{MAVEN_OPTS}} or {{.mvn/jvm.config}} settings and runs with those. We specify 3.5GB of heap for the Maven process in {{.mvn/jvm.config}} so for each invocation {{maven-invoker-plugin}} will start a JVM with additional 3.5GB of heap.

There is no way of overriding the entire JVM configuration, but luckily the last {{-Xmx}} setting on the JVM command line is taken into consideration, so when configuring the {{maven-invoker-plugin}} we can set the {{<mavenOpts>}} configuration and it will be appended to the {{java}} command line arguments and the last {{-Xmx}} parameter will set the heap size.",,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-09 18:06:02.0,,,,,,,,,,,"0|z02js8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CamelTestSupport.isCreateCamelContextPerClass no longer works for junit4 tests,CAMEL-13491,13231993,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,hallonbat,hallonbat,07/May/19 11:57,06/Jun/19 10:59,13/Jul/23 08:32,06/Jun/19 10:59,2.23.0,,,,,,,,,,,3.0.0,3.0.0.M4,,,,,camel-test,,,,0,,,,,"With the changes in 

org.apache.camel.test.junit4.CamelTestSupport done during the work on https://issues.apache.org/jira/browse/CAMEL-12534 the camel context is now recreated for every test regardless of the return value from

isCreateCamelContextPerClass()

. Since junit4 creates a new instance of the class for every test the variable tests will be recreated and initialized to 0 for every test.

This condition in tearDown will always be true
{code:java}
// code placeholder
if (tests.compareAndSet(v, v - 1)) {
    if (v == 1) {
{code}
which stops the camel context after every test.",,davsclaus,hallonbat,,,,,"davsclaus commented on pull request #2963: CAMEL-13491: Fixed camel-test with isCreateCamelContextPerClass = tru…
URL: https://github.com/apache/camel/pull/2963
 
 
   …e to correctly setup/teardown only once before/after class and reset in between test methods. This is a little bit tricky to do with JUnit 4
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jun/19 06:35;githubbot;600","davsclaus commented on pull request #2963: CAMEL-13491: Fixed camel-test with isCreateCamelContextPerClass = tru…
URL: https://github.com/apache/camel/pull/2963
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jun/19 10:59;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 06 06:35:38 UTC 2019,,,,,,,,,,,"0|z02gm8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/May/19 09:47;davsclaus;You are welcome to work on a fix and submit a PR;;;","13/May/19 07:31;hallonbat;I can sure give it a try, I just have to set up a dev environment for Camel.;;;","16/May/19 10:10;davsclaus;Jan, how is it going?;;;","16/May/19 10:17;hallonbat;I have been busy working on other things unfortunately, I am cloning Camel from Github now so that it is easy to get started when I am done with my other task (hopefully later today).;;;","03/Jun/19 18:57;davsclaus;Any update on this;;;","03/Jun/19 19:02;hallonbat;I have been struggling to get Camel to build and get it configured in Intellij. I managed to build it via command line now but Intellij is still having issues. It did not import all poms as Maven modules. Should I base the pull request on master or some other branch?;;;","03/Jun/19 19:04;davsclaus;master, and I really suggest to just only open the module you work on, eg camel-test and then just open its pom.xml file.

You should not import the entire project as its too massive;;;","03/Jun/19 20:10;hallonbat;Do you ever run the Camel unit tests in parallel? Do they have to support running the tests with the surefire parallel parameter set to methods?;;;","03/Jun/19 22:41;hallonbat;I have been looking at the code now and I must admit that my knowledge of JUnit internals is not the best so I might have missed something. Is there any way to know in the @After annotated tearDown method that the currently running test method is the last in the test class and that it is time to stop the camel context? From my point of view that is why we have the @AfterClass annotation to be able to run code after all test methods have been executed. So for now I am inclined to move the tearDown back to a static @AfterClass annotated method. Since the @AfterClass method needs to be static, doing that would mess up test classes that override doPostTearDown and/or cleanupResources, expecting them to be executed after the camel context is stopped. Any input or suggestions on how to fix it?;;;","06/Jun/19 06:35;davsclaus;Yeah this is a bit tricky to do. I took a look and created a PR with a fix
https://github.com/apache/camel/pull/2963

Feedback is welcome;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-undertow: consumer thrown NPE when the body cannot be converted to ByteBuffer,CAMEL-13489,13231832,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,lb,lb,lb,06/May/19 17:27,07/May/19 12:58,13/Jul/23 08:32,07/May/19 12:58,,,,,,,,,,,,2.24.0,3.0.0,,,,,camel-undertow,,,,0,,,,,"Assuming we have a simple route like:

{code}
from(""undertow:http://localhost:{{port}}/incompatibleData"")
    .transform().constant(Collections.singletonMap(""key"", ""val""));
{code}

This code will cause an NPE on UndertowConsumer because the body cannot be converted to a ByteBuffer [1], instead of an NPE we should use mandatoryConvertTo so the exception is more clear.

[1] https://github.com/apache/camel/blob/master/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowConsumer.java#L156",,lb,,,,,,"oscerd commented on pull request #2906: CAMEL-13489: camel-undertow: consumer thrown NPE when the body cannot be converted to ByteBuffer
URL: https://github.com/apache/camel/pull/2906
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/19 12:58;githubbot;600",,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-05-06 17:27:43.0,,,,,,,,,,,"0|z02fmg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel Shiro has a transitive dependency to Commons-Collections,CAMEL-13479,13231457,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,FloDev,FloDev,03/May/19 14:36,13/May/19 09:53,13/Jul/23 08:32,13/May/19 09:53,2.23.2,,,,,,,,,,,2.23.3,2.24.1,3.0.0,3.0.0-M3,,,,,,,0,,,,,"Commons BeanUtils, which is requied by Apache Shiro has Commons-Collections as Dependency so Commons-Collections should be added to camel-shiro in features.xml",,acosentino,FloDev,,,,,"DevFlorian commented on pull request #2901: CAMEL-13479: Camel Shiro has a transitive dependency to Commons-Collections
URL: https://github.com/apache/camel/pull/2901
 
 
   Camel Shiro has a transitive dependency to Commons-Collections
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/May/19 14:39;githubbot;600","DevFlorian commented on pull request #2909: CAMEL-13479
URL: https://github.com/apache/camel/pull/2909
 
 
   Camel Shiro has a transitive dependency to Commons-Collections
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 07:20;githubbot;600","DevFlorian commented on pull request #2901: CAMEL-13479: Camel Shiro has a transitive dependency to Commons-Collections
URL: https://github.com/apache/camel/pull/2901
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 07:21;githubbot;600","oscerd commented on pull request #2909: CAMEL-13479
URL: https://github.com/apache/camel/pull/2909
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 09:53;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 03 15:05:03 UTC 2019,,,,,,,,,,,"0|z02db4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/May/19 15:05;acosentino;Once merged we can mark this as resolved;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"camel-box, review BoxUsersManagerIntegrationTest for unnecassary ignored test and some possible problems",CAMEL-13478,13231404,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,jondruse,jondruse,03/May/19 07:05,16/May/19 12:55,13/Jul/23 08:32,16/May/19 12:55,,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-box,,,,0,,,,,"There are a lot of ignored tests In BoxUsersManagerIntegrationTest , which works - just unignore them and explain in comments how to  run them successfully.

There are other problems with tests. For example ""testDeleteUser"" randomly fails.

After execution of all tests, some box entities created during tests are not removed and cause problems in the following run.",,jondruse,,,,,,"JiriOndrusek commented on pull request #2900: [CAMEL-13478] camel-box, review BoxUsersManagerIntegrationTest for unnecassary ignored test and some possible problems
URL: https://github.com/apache/camel/pull/2900
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-13478
   
   Un-ignored some tests.
   Added comments to explain how to run them.
   Fixed some smaller issues with failing tests and not cleaning after execution.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/May/19 07:13;githubbot;600","davsclaus commented on pull request #2900: [CAMEL-13478] camel-box, review BoxUsersManagerIntegrationTest for unnecassary ignored test and some possible problems
URL: https://github.com/apache/camel/pull/2900
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/May/19 12:08;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 03 07:13:56 UTC 2019,,,,,,,,,,,"0|z02czc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/May/19 07:05;jondruse;I'm working on this issue;;;","03/May/19 07:13;jondruse;PR: https://github.com/apache/camel/pull/2900;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KafkaConfiguration puts truststore password into keystore password property,CAMEL-13477,13231295,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,KitD,KitD,02/May/19 15:53,03/May/19 05:24,13/Jul/23 08:32,03/May/19 05:24,,,,,,,,,,,,2.22.5,2.23.3,2.24.0,3.0.0,3.0.0-M3,,camel-kafka,,,,0,,,,,"If you create a component-level KafkaConfiguration, and set SslContextParameters on it that includes a truststore password, then when creating consumer or producer properties, the KafkaConfiguration puts the truststore password into the keystore password field, resulting in errors such as:

{{Caused by: org.apache.kafka.common.KafkaException: SSL key store is not specified, but key store password is specified.}}
{{ at org.apache.kafka.common.security.ssl.SslFactory.createKeystore(SslFactory.java:283)}}
{{ at org.apache.kafka.common.security.ssl.SslFactory.configure(SslFactory.java:126)}}
{{ at org.apache.kafka.common.network.SaslChannelBuilder.configure(SaslChannelBuilder.java:149)}}

 

PR available here:

[https://github.com/apache/camel/pull/2899]",,davsclaus,KitD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 03 05:24:38 UTC 2019,,,,,,,Patch Available,,,,"0|z02cb4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/May/19 05:24;davsclaus;Thanks for reporting and the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel with Olingo4 not shutting down,CAMEL-13475,13231064,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,r.schoen@topdesk.com,r.schoen@topdesk.com,01/May/19 09:56,02/Sep/19 14:45,13/Jul/23 08:32,02/Sep/19 14:45,2.23.2,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-olingo4,,,,0,,,,,"I'm using the Olingo4 component and I want my Camel to run as a cron job. After my exchange is completed I stop the camel context, but the jvm doesn’t close and keeps running. I found out that there still was a thread running with a httpAsyncClient.

I checked the code for the component and found in the class Olingo4AppImpl that there by default a CloseableHttpAsyncClient is started, but not closed when camel is being shut down.

I added this to close method and now the jvm process is stopping:

@Override
public void close() {
   if (client instanceof CloseableHttpAsyncClient) {
       try {
           client.close();
       }
       catch (IOException e) {
           throw new RuntimeException(e);
       }
   }
}

Not sure what should happen when somebody uses their own httpAsyncClientBuilder.",,acosentino,r.schoen@topdesk.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 02 12:23:33 UTC 2019,,,,,,,,,,,"0|z02avs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/May/19 12:23;acosentino;contributions are welcome.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception tag is missing when Camel Java DSL is converted into XML using dumpRouteAsXml() operation,CAMEL-13468,13230736,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,shailendra14k,shailendra14k,29/Apr/19 16:59,25/Mar/20 17:03,13/Jul/23 08:32,30/Apr/19 05:25,2.22.4,3.0.0-M1,,,,,,,,,,2.23.3,2.24.0,3.0.0,3.0.0-M3,,,came-core,,,,0,,,,,"Exception tag is missing when Camel Java DSL is converted into XML using dumpRouteAsXml() operation

#Java DSL route
{code:java}
public void configure() {
	onException(Exception.class).log(""${exception.stacktrace}"").logStackTrace(true)
			.handled(true);

	from(""timer://foo?fixedRate=true&period=10000&repeatCount=101"").routeId(""test"")
			.log(""Hello World"");
}
{code}
#XML converted by dumpRouteAsXml() operation(*<exception>java.lang.Exception</exception>* tag is missing)
{code:java}
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<route xmlns=""http://camel.apache.org/schema/spring"" customId=""true"" id=""test"">
    <from uri=""timer://foo?fixedRate=true&amp;period=10000&amp;repeatCount=101""/>
    <onException id=""onException1"">
        <redeliveryPolicy logStackTrace=""true""/>
        <log id=""log1"" message=""${exception.stacktrace}""/>
    </onException>
    <log id=""log2"" message=""Hello World""/>
</route>
{code}",,davsclaus,shailendra14k,,,,,"shailendra14k commented on pull request #2893: [CAMEL-13468]Exception tag is missing when Camel Java DSL is converte…
URL: https://github.com/apache/camel/pull/2893
 
 
   …d into XML using dumpRouteAsXml() operation
   
   JIRA:- https://issues.apache.org/jira/browse/CAMEL-13468
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/19 17:13;githubbot;600","davsclaus commented on pull request #2893: [CAMEL-13468]Exception tag is missing when Camel Java DSL is converte…
URL: https://github.com/apache/camel/pull/2893
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Apr/19 03:44;githubbot;600","davsclaus commented on pull request #2895: [CAMEL-13468]Exception tag is missing when Camel Java DSL is converte…
URL: https://github.com/apache/camel/pull/2895
 
 
   …d into XML using dumpRouteAsXml() operation
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Apr/19 14:58;githubbot;600","davsclaus commented on pull request #2895: [CAMEL-13468]Exception tag is missing when Camel Java DSL is converte…
URL: https://github.com/apache/camel/pull/2895
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/May/19 05:25;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,CAMEL-14792,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 30 09:27:48 UTC 2019,,,,,,,,,,,"0|z028uw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"30/Apr/19 05:25;davsclaus;Thanks for reporting and the PR;;;","30/Apr/19 09:27;davsclaus;Okay working on backporting this to 2.x;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultCamelContext not stopping all routes on doStop(),CAMEL-13466,13230699,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,jbonofre,jgreffe,jgreffe,29/Apr/19 13:43,02/Jul/19 09:04,13/Jul/23 08:32,02/Jul/19 09:04,2.20.1,,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.M4,,camel-core,,,,0,,,,,"Hello,

after applying CAMEL-12980,

we're still facing an issue with a failing starting feature and the CXFServlet {{/services}} URL.

 

To reproduce :
 * drop the attached JAR in deploy
 * wait for bundle start and failure
 * access {{/services}} URL : endpoint + WSDL are listed > is this an expected behaviour?

 
 For further analysis, it seems to be something missing in camel-core :

When blueprint fails, the {{doStop()}} method is called :
 [https://github.com/apache/camel/blob/camel-2.20.1/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java#L3506]
 At that line, it tries to stop only the routes already started, but not the ones failing *before* filling {{routeStartupOrder}} List.
 [https://github.com/apache/camel/blob/camel-2.20.1/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java#L4041]

One of this routes is a CxfConsumer which has already been instanciated, with a server creation :
 [https://github.com/apache/camel/blob/camel-2.20.1/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfConsumer.java#L69]

Even with {{DefaultCamelContext.doStop()}}, the server is still started and available in {{/services}}.

Tried a fix by adding this line in DefaultCamelContext:3502 :
{code:java}
// fill all the routes to be stopped
getRouteStartupOrder().addAll(routeServices.values().stream().map(this::doPrepareRouteToBeStarted).collect(Collectors.toList()));

// stop route inputs in the same order as they was started so we stop the very first inputs first
 try {
 // force shutting down routes as they may otherwise cause shutdown to hang
...
{code}
And now the endpoint isn't available anymore.
 But this fix isn't effective enough as {{getRouteStartupOrder()}} may have duplicates?

Thanks,",,acosentino,davsclaus,dkulp,ggrzybek,jbonofre,jgreffe,"jbonofre commented on pull request #2917: [CAMEL-13466] Fully populate (including routes which failed to start) routes to be stopped in the CamelContext
URL: https://github.com/apache/camel/pull/2917
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 09:06;githubbot;600","davsclaus commented on pull request #2917: [CAMEL-13466] Fully populate (including routes which failed to start) routes to be stopped in the CamelContext
URL: https://github.com/apache/camel/pull/2917
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/19 08:25;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,CAMEL-13644,,,,,,,,,"29/Apr/19 13:43;jgreffe;sample-dozer-route-2.0.0-SNAPSHOT.jar;https://issues.apache.org/jira/secure/attachment/12967379/sample-dozer-route-2.0.0-SNAPSHOT.jar",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 02 08:25:29 UTC 2019,,,,,,,,,,,"0|z028mo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/May/19 09:04;ggrzybek;[~ancosen] I'm not sure it's OSGi related... CAMEL-12980 was about detecting Camel context problems and reflecting them in OSGi status, but not vice versa.
Do you think this can be _fixed_ generally for Camel Context (without relation to OSGi/SB/default)?;;;","06/May/19 09:06;jbonofre;I'm starting to work on this issue, first checking outside of OSGi/Karaf to see if it's OSGi related or Camel general. I will verify in log messages.;;;","06/May/19 10:54;acosentino;Can you please use a newer version and check? We don't release 2.20.x from a while;;;","13/May/19 08:10;jbonofre;I'm now testing with 2.21.5, on a simple example in a {{Main}} (not in Karaf).;;;","14/May/19 05:54;jbonofre;I have a fix, I'm opening the corresponding PR.;;;","03/Jun/19 07:18;davsclaus;Jean any update on this with you working on unit test;;;","10/Jun/19 13:21;jbonofre;The test is not so easy to do. I tried something like this:

{code}
        try {
            camelContext.addRoutes(new RouteBuilder() {
                @Override
                public void configure() throws Exception {
                    throw new IllegalStateException(""Starting failure"");
                }
            });
            camelContext.start();
        } catch (Exception e) {
            // nothing to do
        }
{code}

but it's not exactly the same case as here the CamelContext doesn't start at all. I would need some help for the test.

Anyway,  the fix has been tested successfully ""at runtime"".;;;","13/Jun/19 06:37;davsclaus;Okay the CxfConsumer is wrong, it should never do such logic in its constructor, such init logic should be in doInit / doStart etc. So that should be fixed too.;;;","13/Jun/19 06:41;davsclaus;That test with throwing an exception in the route builder is wrong, you need to do this from a route consumer in its doStart etc. I can help with this later. 

I think the current PR needs to be polished and the commented out code removed, also a better code comment why we do this, and we need 2x PRs one for camel-2.x branch and another for master.;;;","13/Jun/19 08:48;jbonofre;It sounds good. Let me update the PR. Thanks a lot [~davsclaus] !;;;","02/Jul/19 08:25;davsclaus;Okay I found some time to work on this and have a working fix with unit test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Camel-box, BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId) typo in argument name",CAMEL-13465,13230679,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,jondruse,jondruse,29/Apr/19 12:33,30/Apr/19 13:36,13/Jul/23 08:32,30/Apr/19 13:35,,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-box,,,,0,,,,,"There is a typo in argument of API method BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId). >>>memEbership<<<
(see https://github.com/apache/camel/blob/master/components/camel-box/camel-box-api/src/main/java/org/apache/camel/component/box/api/BoxGroupsManager.java#L273)

It forces users to use this ""wrong"" parameter in their code.

Typo should be fixed, but it also has to be consistent in tests",,jondruse,,,,,,"JiriOndrusek commented on pull request #2892: [CAMEL-13465] Camel-box, BoxGroupMembership.Info getGroupMembershipIn…
URL: https://github.com/apache/camel/pull/2892
 
 
   …fo(String groupMemebershipId) typo in argument name
   
   Issue: https://issues.apache.org/jira/browse/CAMEL-13465
   
   Typo in API was forcing users to use wrong name of argument in their code.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/19 14:01;githubbot;600","oscerd commented on pull request #2892: [CAMEL-13465] Camel-box, BoxGroupMembership.Info getGroupMembershipIn…
URL: https://github.com/apache/camel/pull/2892
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Apr/19 13:36;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 29 14:01:14 UTC 2019,,,,,,,,,,,"0|z028i8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Apr/19 12:33;jondruse;I'm working on this issue;;;","29/Apr/19 14:01;jondruse;PR: https://github.com/apache/camel/pull/2892;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with Olingo4 and authenticated metadata,CAMEL-13464,13230661,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,r.schoen@topdesk.com,r.schoen@topdesk.com,29/Apr/19 11:06,22/Nov/19 07:03,13/Jul/23 08:32,02/May/19 10:04,2.23.2,,,,,,,,,,,2.23.3,2.24.0,3.0.0,3.0.0-M3,,,camel-olingo4,,,,0,,,,,"I'm currently working with the Olingo4 component for linking with Microsoft Dynamics 365 CRM. This OData feed requires authentication to get the metadata. As I have to refresh the Access Token for authenticating I can not add it to the configuration, but I'm using the CamelOlingo4.endpointHttpHeaders header for this. But when the component is retrieving the metadata it is ignoring the header and it is not able to authenticate.

If I add the headers to the get metadata request it works.",,acosentino,dmvolod,r.schoen@topdesk.com,,,,"Duvel commented on pull request #2897: [CAMEL-13464] Olingo4: use endpointHttpHeaders for EDM, solving authentication issue
URL: https://github.com/apache/camel/pull/2897
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/May/19 09:19;githubbot;600","oscerd commented on pull request #2896: [CAMEL-13464] Olingo4: use endpointHttpHeaders for EDM, solving authentication issue
URL: https://github.com/apache/camel/pull/2896
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/May/19 09:57;githubbot;600","oscerd commented on pull request #2897: [CAMEL-13464] Olingo4: use endpointHttpHeaders for EDM, solving authentication issue
URL: https://github.com/apache/camel/pull/2897
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/May/19 10:04;githubbot;600",,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,CAMEL-14207,,,,,,,,,"29/Apr/19 14:20;r.schoen@topdesk.com;headers_fix.diff;https://issues.apache.org/jira/secure/attachment/12967382/headers_fix.diff",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 01 09:29:30 UTC 2019,,,,,,,,,,,"0|z028e8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Apr/19 14:09;dmvolod;[~r.schoen@topdesk.com], have you configured the code like this example [https://github.com/apache/camel/blob/5fd45068a93973a6fa22ff117bdb04a77a785eb0/components/camel-olingo4/camel-olingo4-component/src/test/java/org/apache/camel/component/olingo4/Olingo4ComponentTest.java#L280]

If not, please provide a simple reproducer if possible.;;;","29/Apr/19 14:20;r.schoen@topdesk.com;This is how I set my header, so yes:

 

Map<String, String> endpointHttpHeaders = new HashMap<>()
endpointHttpHeaders.put('AUTHORIZATION', ""Bearer ${oDataAuthentication.accessToken}"".toString())

exchange.in.headers.put('CamelOlingo4.endpointHttpHeaders', endpointHttpHeaders)

 

I don't know how to create a simple test-case, I'm not familiar with any mock odata-services.

 

I attached the diff how I solved in my project: [^headers_fix.diff];;;","29/Apr/19 14:25;dmvolod;Ah, understood, is it related to just for EDM getting only and not for regular requests as described in [Olingo4ComponentTest.java#L280|https://github.com/apache/camel/blob/5fd45068a93973a6fa22ff117bdb04a77a785eb0/components/camel-olingo4/camel-olingo4-component/src/test/java/org/apache/camel/component/olingo4/Olingo4ComponentTest.java#L280]?;;;","29/Apr/19 14:27;r.schoen@topdesk.com;Yup, it is only a problem when getting the EDM, everything else works.;;;","29/Apr/19 14:30;dmvolod;Thanks for report. I can add your fix to upstream or you can create a PR on top of you changes. For test we are working with public based OData v4.0 service, but I'm not aware about auth or any other header-based features for it, but you can try to find.;;;","30/Apr/19 10:35;dmvolod;[~r.schoen@topdesk.com], are you working on PR for fix or I can add your patch to upstream?;;;","01/May/19 08:01;r.schoen@topdesk.com;I'm not working an a PR at the moment, but I could create one. Do I understand correctly that this has to be for two branches, 2.23 and 3.0? ;;;","01/May/19 08:03;acosentino;Branches are camel-2.x and master. Thanks;;;","01/May/19 09:29;r.schoen@topdesk.com;I created two pull requests for this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Requesting collection properties not handled,CAMEL-13458,13230061,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,phantomjinx,phantomjinx,25/Apr/19 09:20,25/Apr/19 20:00,13/Jul/23 08:32,25/Apr/19 20:00,,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-olingo4,,,,0,,,,,"Querying a URI such as [https://services.odata.org/V4/TripPinServiceRW/People('russellwhyte')/AddressInfo] throws an exception ""Unsupported property: AddressInfo"".

This is due to no check being made for the property being a collection [here|[https://github.com/apache/camel/blob/master/components/camel-olingo4/camel-olingo4-api/src/main/java/org/apache/camel/component/olingo4/api/impl/Olingo4AppImpl.java#L410].]",,dmvolod,phantomjinx,,,,,"phantomjinx commented on pull request #2883: CAMEL-13458: Support return of collection properties in Olingo4
URL: https://github.com/apache/camel/pull/2883
 
 
   * Olingo4AppImpl
    * If property has collection then return it.
   
   * Tests to prove fix
   
   * Olingo2ComponentTest
    * Shore up tests to make them more reliable.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Apr/19 09:44;githubbot;600","asfgit commented on pull request #2883: CAMEL-13458: Support return of collection properties in Olingo4
URL: https://github.com/apache/camel/pull/2883
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Apr/19 19:59;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 25 20:00:58 UTC 2019,,,,,,,,,,,"0|z024ow:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"25/Apr/19 09:20;phantomjinx;Working on a fix now and will submit PR presently.;;;","25/Apr/19 09:45;phantomjinx;PR -> https://github.com/apache/camel/pull/2883;;;","25/Apr/19 20:00;dmvolod;Thanks, [~phantomjinx]. Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel Blueprint JUnit Test keeps Filelock after Test,CAMEL-13443,13229540,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,FloDev,FloDev,23/Apr/19 08:37,21/Dec/20 13:36,13/Jul/23 08:32,21/Dec/20 13:36,2.23.1,,,,,,,,,,,3.8.0,,,,,,camel-blueprint,camel-test,,,0,,,,,"I use CamelBlueprintTestSupport for my JUnit Tests. CamelBlueprintTestSupport keeps FileLocks on jar Files in target/test-bundles. Due to this, my Tests fails on Jenkins, because of FileNotFoundException (too many open files). My current workaround is to Run every Test in a single JVM.",,davsclaus,FloDev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 21 13:36:07 UTC 2020,,,,,,,,,,,"0|z021hk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Apr/19 07:42;davsclaus;Are you able to find out which files it has a lock on? I wonder if its the test bundle itself, or the karaf bundles or something. eg if the former its maybe something in camel we can fix, but the latter may be in apache felix/karaf etc.;;;","29/Apr/19 09:30;FloDev;One Jar is named like my test Class and it contains only my blueprint.xml in OSGI-INF. The other one is named configAdminInitBundle. I guess they are created in CamelBlueprintHelper createConfigAdminInitBundle and createTestBundle;;;","29/Apr/19 09:42;davsclaus;Okay try to look in the camel-test-blueprint source code and see if there is some place something needs to be closed when the test stops, there may be some file streams etc that should be closed.

;;;","06/Aug/19 20:08;davsclaus;What OS platform are you using for your Jenkins?;;;","07/Aug/19 06:56;FloDev;It´s running on openSUSE Leap 15.0;;;","01/Oct/19 08:43;davsclaus;Yeah it may be a bit more slower now. Anyone able to dive in and try to find out would be appreciated.;;;","21/Dec/20 10:23;davsclaus;Okay so this is only per unit test that the open files are kept but will be closed when the entire test suite is done. And as such if you run camel-test-blueprint as test itself it may open 400 files to run all its tests.;;;","21/Dec/20 13:21;davsclaus;Okay have some more code that closes the file handles. But also found out there is a bug in tiny bundle, but switching to a newer 3.0 version that seems to close file handles better.;;;","21/Dec/20 13:36;davsclaus;Okay the file handles gets closed better now, and running all the tests in camel-test-blueprint does not grow file handles, and they go between 100-250 or so during testing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel jBPM WorkItemHandler should allow passthrough of Exceptions,CAMEL-13438,13229109,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,swiderski.maciej,mccloud,mccloud,19/Apr/19 16:51,22/Apr/19 11:47,13/Jul/23 08:32,22/Apr/19 11:47,2.23.2,3.0.0-M2,,,,,,,,,,2.23.3,2.24.0,3.0.0,3.0.0-M3,,,camel-jbpm,,,,0,,,,,"Currently, the Camel-JBPM WorkItemHandler wraps every exception coming from a Camel Route into a WorkItemRuntimeException. Although this is a safe way to handle the exceptions, it's also very inflexible, as we can only return a single exception type, and thus only react to a single exception type in our BPMN2 model.

We should add a ""HandleExceptions"" WIH parameter to indicate whether any exceptions should be handled by the WorkItemHandler or not. That way, we can make the Camel Routes responsible for handling the exceptions, which gives us much greater flexibility wrt error and exception handling.",,mccloud,,,,,,"DuncanDoyle commented on pull request #2875: Fixes CAMEL-13438: Added option to disable WIH exception handling, pa…
URL: https://github.com/apache/camel/pull/2875
 
 
   …ssing through any exceptions throw by the Camel Route.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Apr/19 17:07;githubbot;600","davsclaus commented on pull request #2875: Fixes CAMEL-13438: Added option to disable WIH exception handling, pa…
URL: https://github.com/apache/camel/pull/2875
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Apr/19 11:42;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 19 17:28:45 UTC 2019,,,,,,,,,,,"0|z01yu0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Apr/19 17:07;mccloud;PR: [https://github.com/apache/camel/pull/2875];;;","19/Apr/19 17:28;mccloud;We also need to backport this to 2.23-2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ThrowExceptionProcessor should use 'getConstructor' instead of 'getDeclaredConstructor', so it doesn't force users to implement the constructors of their exception classes.",CAMEL-13437,13229103,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,mccloud,mccloud,19/Apr/19 16:15,22/Apr/19 11:47,13/Jul/23 08:32,22/Apr/19 11:47,2.23.2,,,,,,,,,,,2.22.5,2.23.3,2.24.0,3.0.0,3.0.0-M3,,camel-core,,,,0,,,,,"ThrowExceptionProcessor uses this line of code to retrieve the constructor of an Exception class:
{code:java}
Constructor<?> constructor = type.getDeclaredConstructor(String.class);{code}
The problem is that this will only find constructors defined in the actual class itself, not in its superclasses. This forces users to unnecessarily implement a constructor that excepts a {{String}} in their custom exception classes.

Easy fix, use the following method:
{code:java}
Constructor<?> constructor = type.getConstructor(String.class);{code}
 Will fix and create a PR.",,mccloud,,,,,,"DuncanDoyle commented on pull request #2876: Fixes CAMEL-13437: now also looking for constructor in superclasses.
URL: https://github.com/apache/camel/pull/2876
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Apr/19 17:27;githubbot;600","davsclaus commented on pull request #2876: Fixes CAMEL-13437: now also looking for constructor in superclasses.
URL: https://github.com/apache/camel/pull/2876
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Apr/19 11:41;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 19 17:27:40 UTC 2019,,,,,,,,,,,"0|z01yso:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Apr/19 17:27;mccloud;PR: [https://github.com/apache/camel/pull/2876];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Camel-box, investigate and fix integration test failures",CAMEL-13434,13228856,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,jondruse,jondruse,18/Apr/19 12:47,26/Apr/19 09:38,13/Jul/23 08:32,26/Apr/19 09:38,3.0.0,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-box,,,,0,,,,,"During validation of https://issues.apache.org/jira/browse/CAMEL-13426, I've run integration tests in camel-box-component and results contains a lot of error - errors were there before fix of CAMEL-13426. Tests should be validated and fixed or ignored.

Current test results:

{quote}[ERROR] Failures: 
[ERROR]   BoxSearchManagerIntegrationTest.testSearchFolder:61->Assert.assertEquals:645->Assert.failNotEquals:834->Assert.fail:88 searchFolder file found expected:<1> but was:<0>
[ERROR] Errors: 
[ERROR]   BoxCollaborationsManagerIntegrationTest.testAddFolderCollaboration:100 Runtime
[ERROR]   BoxFilesManagerIntegrationTest.testUpdateFileMetadata:394->AbstractBoxTestSupport.requestBodyAndHeaders:80 » CamelExecution
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxGroupsManagerIntegrationTest.setupTest:231->createTestGroup:247 » BoxAPIResponse
[ERROR]   BoxTasksManagerIntegrationTest.testAddAssignmentToTask:70->AbstractBoxTestSupport.requestBodyAndHeaders:80 » CamelExecution
[ERROR]   BoxTasksManagerIntegrationTest.testGetFileTasks:134->AbstractBoxTestSupport.requestBody:85 » CamelExecution
[ERROR]   BoxTasksManagerIntegrationTest.testGetTaskAssignments:166->AbstractBoxTestSupport.requestBody:85 » CamelExecution
[ERROR]   BoxUsersManagerIntegrationTest.testCreateAppUser:96->AbstractBoxTestSupport.requestBodyAndHeaders:80 » CamelExecution
[ERROR]   BoxUsersManagerIntegrationTest.testCreateEnterpriseUser:126->AbstractBoxTestSupport.requestBodyAndHeaders:80 » CamelExecution
[ERROR]   BoxUsersManagerIntegrationTest.testDeleteUser:142 » BoxAPIResponse The API ret...
[ERROR]   BoxUsersManagerIntegrationTest.testGetAllEnterpriseOrExternalUsers:191->AbstractBoxTestSupport.requestBodyAndHeaders:80 » CamelExecution
[ERROR]   BoxUsersManagerIntegrationTest.testUpdateUserInfo:241 » BoxAPIResponse The API...
[ERROR]   BoxUsersManagerIntegrationTest.testmMoveFolderToUser:247 » BoxAPIResponse The ...{quote} ",,jondruse,,,,,,"JiriOndrusek commented on pull request #2886: [CAMEL-13434] Camel-box, investigate and fix integration test failures
URL: https://github.com/apache/camel/pull/2886
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-13434
   
   Fix contains several fixes in camel-box integration tests + several ignored tests, because they can not succeed (because of some box restrictions)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Apr/19 07:49;githubbot;600","oscerd commented on pull request #2886: [CAMEL-13434] Camel-box, investigate and fix integration test failures
URL: https://github.com/apache/camel/pull/2886
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Apr/19 09:37;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 26 07:50:19 UTC 2019,,,,,,,,,,,"0|z01xbc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Apr/19 12:47;jondruse;I'm working on this issue.;;;","26/Apr/19 07:50;jondruse;PR https://github.com/apache/camel/pull/2886;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
S3: Exchange body stream is loaded into memory to calculate content length which is already set via headers,CAMEL-13433,13228821,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,mvlakh,mvlakh,18/Apr/19 10:20,23/Apr/19 09:17,13/Jul/23 08:32,23/Apr/19 09:17,2.22.1,2.23.2,3.0.0-M1,,,,,,,,,2.23.3,2.24.0,3.0.0,3.0.0-M3,,,camel-aws,,,,0,,,,,"My code uploads large files to S3 storage (500 MB and bigger). I create an exchange with properly set meta information headers including the _CamelAwsS3ContentLength_, as a body I provide a stream. Everything worked well in Camel 2.14.3 but when I upgraded to Camel ti version 2.22.1 I suddenly began getting OOM issues from time to time. I did some debugging and found that the issue is in *S3Producer* that loads content of the body stream into memory.
{code:java}
public void processSingleOp(final Exchange exchange) throws Exception {

ObjectMetadata objectMetadata = determineMetadata(exchange);  <== here we already set length

File filePayload = null;
InputStream is = null;
ByteArrayOutputStream baos = null;
Object obj = exchange.getIn().getMandatoryBody();
PutObjectRequest putObjectRequest = null;
// Need to check if the message body is WrappedFile
if (obj instanceof WrappedFile) {
   obj = ((WrappedFile<?>)obj).getFile();
}
if (obj instanceof File) {
   filePayload = (File)obj;
   is = new FileInputStream(filePayload);
} else {
   is = exchange.getIn().getMandatoryBody(InputStream.class);
   baos = determineLengthInputStream(is);        <====== the issue is here
   objectMetadata.setContentLength(baos.size());
   is = new ByteArrayInputStream(baos.toByteArray());
}

...
{code}
This is a defect since, as I mentioned, I already provide content length via headers and in the first line of the method populates that information into object metadata.

I think there should be some if check that skips content length size calculation if it is already known. 

 ",,acosentino,davsclaus,mvlakh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 23 06:49:31 UTC 2019,,,,,,,,,,,"0|z01x3s:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,"18/Apr/19 12:02;acosentino;The problem is the overidding of the lenght or the input stream read? 

 

Because if it's the overidding we can do

 
{code:java}
is = exchange.getIn().getMandatoryBody(InputStream.class);
baos = determineLengthInputStream(is);
if (!(objectMetadata.getContentLength() > 0)) {
objectMetadata.setContentLength(baos.size());
is = new ByteArrayInputStream(baos.toByteArray());
} else {
is = new ByteArrayInputStream(baos.toByteArray());
}
{code};;;","18/Apr/19 12:16;acosentino;This should be sufficient. In one case we set the size from baos, in the other case we use baos but we already know the lenght from objectMetadata;;;","19/Apr/19 13:53;mvlakh;Hello [~ancosen], thank you for your time spent on this issue.

The biggest issue is that the producer loads entire content into memory and this causes OOM if content is large. I believe this is incorrect, especially if it does this only to calculate size of the provided content that is already known. Cannot we just process input as stream to make sure that we won't occupy all heap space when we upload large content? I think this should be the right fix. Do you agree?;;;","19/Apr/19 14:00;acosentino;I think we still need to know the size if it's not provided, but yes, we can skip that part if the content length has been already provided. I'll try to push a fix next week.;;;","19/Apr/19 14:03;acosentino;Just to give a bit of context, the original fix was related to CAMEL-11728, to avoid a warn message.

I'm blaming myself for this. Let me work on this;;;","20/Apr/19 06:36;mvlakh;yes this is what I think should be done. Thank you very much for your work on this. I think i will need to find some time to get sources so that next time i can provide a patch along with a reported issue to help you guys;;;","23/Apr/19 06:49;davsclaus;Yeah good idea to grab the content-length if its already provided as a header and use that. And maybe add a little DEBUG logging that we are doing this, or that the length is to be determined by reading the data into memory. 

Also if you stream from eg http to s3 then we can maybe use the content-length header from HTTP, and read the stream as-is. There is an Exchange.CONTENT-LENGTH constant AFAIR.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-undertow - Response with large data gets truncated on cloud,CAMEL-13428,13228578,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tadayosi,tadayosi,tadayosi,17/Apr/19 11:22,03/Jun/19 07:15,13/Jul/23 08:32,03/Jun/19 07:15,3.0.0-M2,,,,,,,,,,,2.22.5,2.23.3,2.24.0,3.0.0,3.0.0-M3,,camel-undertow,,,,0,,,,,"When a Spring Boot application with camel-undertow is deployed on a Kubernetes environment, say OpenShift, responses with large data may get truncated.
{code}
$ curl -sv hello-camel-tasato-test.7e14.starter-us-west-2.openshiftapps.com > out
*   Trying 52.36.115.21...
* TCP_NODELAY set
* Connected to hello-camel-tasato-test.7e14.starter-us-west-2.openshiftapps.com (52.36.115.21) port 80 (#0)
> GET / HTTP/1.1
> Host: hello-camel-tasato-test.7e14.starter-us-west-2.openshiftapps.com
> User-Agent: curl/7.64.1
> Accept: */*
> 
< HTTP/1.1 200 OK
< Accept: */*
< User-Agent: curl/7.64.1
< Forwarded: for=27.95.227.48;host=hello-camel-tasato-test.7e14.starter-us-west-2.openshiftapps.com;proto=http;proto-version=
< Date: Wed, 17 Apr 2019 11:18:54 GMT
< X-Forwarded-Proto: http
< X-Forwarded-Port: 80
< X-Forwarded-For: 27.95.227.48
< Content-Length: 1009999
< X-Forwarded-Host: hello-camel-tasato-test.7e14.starter-us-west-2.openshiftapps.com
< Set-Cookie: a87d1be1aa3f6decad88f44c63db4670=7939401110c788ff04e98b94cb1b682f; path=/; HttpOnly
< Cache-control: private
< 
{ [921 bytes data]
* transfer closed with 698964 bytes remaining to read
* Closing connection 0
{code}

Notice the curl message: {{transfer closed with 698964 bytes remaining to read}}

It depends on the throughput of the network and the size of response data.",On Kubernetes / OpenShift,acosentino,davsclaus,tadayosi,,,,"tadayosi commented on pull request #2872: CAMEL-13428: camel-undertow - Response with large data gets truncated on cloud
URL: https://github.com/apache/camel/pull/2872
 
 
   https://issues.apache.org/jira/browse/CAMEL-13428
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/19 02:40;githubbot;600","tadayosi commented on pull request #2872: CAMEL-13428: camel-undertow - Response with large data gets truncated on cloud
URL: https://github.com/apache/camel/pull/2872
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Apr/19 00:03;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 19 06:01:00 UTC 2019,,,,,,,,,,,"0|z01vls:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Apr/19 05:56;davsclaus;Does this only apply to camel 3, what about camel 2.x? Can we backport this ?;;;","19/Apr/19 06:01;acosentino;I think we must backport on 2.x, 2.23.x and 2.22.x. I'm on it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Camel-box, error code 400 (Error parsing input model.) during task related events",CAMEL-13426,13228566,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,jondruse,jondruse,17/Apr/19 10:27,18/Apr/19 14:24,13/Jul/23 08:32,18/Apr/19 14:24,3.0.0,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-box,,,,0,,,,,"When camel-box component is used to e.g. create task, it causes error code 400 and message ""Error parsing input model"".

How to simulate:
Run integrationtest BoxTasksManagerIntegrationTest#testAddFileTask",,jondruse,,,,,,"JiriOndrusek commented on pull request #2871: [CAMEL-13426] Camel-box, error code 400 (Error parsing input model.) …
URL: https://github.com/apache/camel/pull/2871
 
 
   …during task related events
   
   Issue: https://issues.apache.org/jira/browse/CAMEL-13426
   
   Problem is fixed by change in date format in box sdk - https://github.com/box/box-java-sdk/commit/391171a82e7266f1fafffa0bbfa203105dda9cce (in version 2.30.1). 
   I've verified that the change of format in request body json (change from ""2019-04-17T08:59:35+0000"" to ""2019-04-18T07:26:27Z"") - which is format changed in above commit - fixes problem.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Apr/19 11:28;githubbot;600","oscerd commented on pull request #2871: [CAMEL-13426] Camel-box, error code 400 (Error parsing input model.) …
URL: https://github.com/apache/camel/pull/2871
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/19 14:23;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 17 11:28:55 UTC 2019,,,,,,,,,,,"0|z01vj4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Apr/19 10:28;jondruse;I'm working on this issue.;;;","17/Apr/19 11:28;jondruse;PR https://github.com/apache/camel/pull/2871;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rest Component custom routeId is not accessible in processor,CAMEL-13424,13228403,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ffang,mahesgov,mahesgov,16/Apr/19 18:50,12/Jul/19 19:39,13/Jul/23 08:32,12/Jul/19 19:39,2.23.1,,,,,,,,,,,2.23.4,2.24.2,2.25.0,3.0.0,3.0.0.RC1,,came-core,rest,,,0,,,,,"Rest component route id set in routebuilder is not accessible in processor. Below is the example

RouteBuilder:

{{rest(""/app"").get(""/test"").id(""REST-TEST"").to(""direct:test"").endRest();}}

from(""direct:test"").routeId(""TEST"").id(""TEST"").process(""TestProcessor"");

or

rest(""/app"").get(""/test"").route().routeId(""TEST"").id(""REST-TEST"")

{{Processor:}}

{{String routeId = exchange.getFromRouteId();}}{{}}

{{routeId is always random id in case of apache camel 2.23.x but works in 2.22.x versions.}}

 ","Apache camel 2.23.x,Tomcat 9, JDK 8",bedla,davsclaus,dmvolod,dodoanelli,ffang,mahesgov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-12908,,CAMEL-13724,,,,,,,"26/Jun/19 20:01;bedla;Camel13424Test.java;https://issues.apache.org/jira/secure/attachment/12972999/Camel13424Test.java",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 12 19:38:52 UTC 2019,,,,,,,,,,,"0|z01uio:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Jun/19 20:01;bedla;Cannot reproduce this in 2.23.1. Passing unit test in attachment. [^Camel13424Test.java]. [~mahesgov] Is this related to any specific component? As I dont see the issue using restlet.;;;","05/Jul/19 03:47;davsclaus;Could be fixed by CAMEL-13724;;;","05/Jul/19 17:26;ffang;I will verify the testcase here;;;","12/Jul/19 19:38;ffang;test case added in camel code base to ensure it works;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix syntax for service component ,CAMEL-13410,13227634,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,apupier,apupier,12/Apr/19 07:11,16/Apr/19 06:27,13/Jul/23 08:32,16/Apr/19 06:27,2.23.1,,,,,,,,,,,2.23.2,2.24.0,3.0.0,3.0.0-M3,,,,,,,0,,,,,itis currently service:serviceName:delegateUri instead of service:delegateUri,,apupier,sumeetp1991,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-10013,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-04-12 07:11:15.0,,,,,,,,,,,"0|z01ps8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix syntax for nsq component,CAMEL-13409,13227629,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,apupier,apupier,12/Apr/19 06:56,12/Apr/19 07:20,13/Jul/23 08:32,12/Apr/19 07:20,2.23.1,,,,,,,,,,,2.23.3,2.24.0,3.0.0,3.0.0-M3,,,,,,,0,,,,,it is nsq:lookupServer although it should be nsq:servers,,apupier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-10013,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-04-12 06:56:03.0,,,,,,,,,,,"0|z01pr4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDbChangesetTracker fails silently on network error and does not recover,CAMEL-13407,13227430,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ramu11,simon.temple@amalto.com,simon.temple@amalto.com,11/Apr/19 10:46,13/Jun/19 07:24,13/Jul/23 08:32,03/Jun/19 14:12,2.21.5,,,,,,,,,,,2.23.3,2.24.1,2.25.0,3.0.0,3.0.0-M3,,camel-couchdb,,,,0,,,,,"We ran into this in production when a network error made the CouchDB instance unavailable for a short while.

We were running with camel 2.18.1 so I patched a local copy of the component; which has been running without problems for many weeks now.

I'd like to propose our code as the fix to this.

We're now running with 2.23.1 so would be looking for a 2.x fix",,acosentino,ramu11,simon.temple@amalto.com,,,,,,,,,,,,,,,,,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,"16/Apr/19 17:11;simon.temple@amalto.com;CouchDbChangesetTracker.java;https://issues.apache.org/jira/secure/attachment/12966116/CouchDbChangesetTracker.java","16/Apr/19 17:12;simon.temple@amalto.com;CouchDbChangesetTrackerTest.java;https://issues.apache.org/jira/secure/attachment/12966117/CouchDbChangesetTrackerTest.java",,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,Moderate,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 13 07:24:42 UTC 2019,,,,,,,,,,,"0|z01oj4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Apr/19 01:56;ramu11;[~simon.temple@amalto.com] could you please attach a simple  junit test for the changes;;;","16/Apr/19 17:14;simon.temple@amalto.com;I added testProcessorUnstable() to CouchDbChangesetTrackerTest

and reattached CouchDbChangesetTracker as I made a couple of small changes to ensure we always log exceptions that cause the Runnable to exit.;;;","10/Jun/19 14:34;simon.temple@amalto.com;I just downloaded the 2.23.3 ZIP bundle as it was released yesterday. 

https://github.com/apache/camel/releases/tag/camel-2.23.3

Unfortunately this change is not in the release.

In which release will this fix be release?;;;","10/Jun/19 15:03;ramu11;It is fixed in master branch  ;;;","10/Jun/19 15:04;acosentino;on 3.0.0-M3;;;","10/Jun/19 15:17;simon.temple@amalto.com;""We're now running with 2.23.1 so would be looking for a 2.x fix""

Any chance we can have a fix on a 2.x branch?;;;","11/Jun/19 10:48;acosentino;We can try to backport on 2.x and 2.24.x and 2.23.x (available for 2.23.4);;;","12/Jun/19 06:57;simon.temple@amalto.com;Yes please.

Thank you;;;","13/Jun/19 07:24;acosentino;Done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"camel-pulsar - ""|"" in endpoint syntax breaks components adoc table",CAMEL-13406,13227128,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,tadayosi,tadayosi,10/Apr/19 09:03,10/Apr/19 09:18,13/Jul/23 08:32,10/Apr/19 09:09,3.0.0-M3,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,,,,,0,,,,,"Camel Pulsar endpoint syntax {{pulsar:[persistent|non-persistent]://tenant/namespace/topic}} defined in:
{code:java}
@UriEndpoint(scheme = ""pulsar"", title = ""Apache Pulsar"", syntax = ""pulsar:[persistent|non-persistent]://tenant/namespace/topic"", label = ""messaging"")
public class PulsarEndpoint extends DefaultEndpoint {
{code}
breaks component list table in https://github.com/apache/camel/blob/master/components/readme.adoc as {{|}} is the column separator in asciidoc.",,acosentino,tadayosi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 10 09:18:52 UTC 2019,,,,,,,,,,,"0|z01mpc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Apr/19 09:16;tadayosi;[~ancosen] Very fast. Thanks :-);;;","10/Apr/19 09:18;acosentino;I'm regenerating the components readme now. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Default allowUseOriginalMessage=""false"" prevent clearing inflightRepository using jms with transferExchange=""true""",CAMEL-13403,13227113,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,Bastien M,Bastien M,10/Apr/19 08:00,12/Apr/19 09:34,13/Jul/23 08:32,12/Apr/19 09:34,,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-jms,,,,0,,,,,"When using transferExchange=""true"" in a JMS consumer (assuming producer also did), camel is breaking the match between key and exchange in inflightRepository if allowUseOriginalMessage=""true"" is not set in camel context.

This can lead to java heap space out of memory because camel is not able to clear the inflightRepository from old Exchange.

Identified behaviour :
 # Camel receive the JMS message
 ## If allowUseOriginalMessage=true : parse JMS message to build Exchange instance
 ## If not : generate a new Instance
 # Camel add the Exchange to inflightRepository
 # On accessing the ExchangeBody, if it was not parsed  yet camel rebuild the Exchange but do not change the key(exchangeId) in the inflightRepository
 # When the route process is over the message is not disposed if the key has been changed in the Exchange but not inflightRepository
 # Sooner or later the heap space if full and application crash.

The problem appeared in 2.18.0 and is present up until 2.23.1 (tested with attached test case). Release note of 2.18.0 says :

""Optimize Camel to only enable AllowUseOriginalMessage if in use by error handler or OnCompletion<[http://camel.apache.org/oncompletion.html]>. End user who manually access the original message using the Java API must configure AllowUseOriginalMessage=true.""

Problem is transferExchange=""true"" case also needs allowUseOriginalMessage=""true"" even if the not accessing original message by Java API an other way.

Easy work around : set allowUseOriginalMessage=""true"" in camel context configuration",,Bastien M,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Apr/19 07:51;Bastien M;JmsInOutTransferExchangeInflightRepositoryFlushTest.java;https://issues.apache.org/jira/secure/attachment/12965424/JmsInOutTransferExchangeInflightRepositoryFlushTest.java",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 12 08:56:42 UTC 2019,,,,,,,,,,,"0|z01mm0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Apr/19 08:56;davsclaus;The issue cannot be reproduced on master (camel 3) so we have likely fixed it there. For 2.x users then use the suggested workaround.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel FTP Cannot list directory with 'File not found' prepending additional '/' in front of directory automatically,CAMEL-13400,13226876,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,vsvdhsagar,vsvdhsagar,09/Apr/19 07:54,21/May/19 08:11,13/Jul/23 08:32,21/May/19 08:11,3.0.0-M1,,,,,,,,,,,2.22.5,2.23.3,2.24.1,3.0.0,,,camel-ftp,,,,0,,,,,"I need to poll files form a dynamic folder based on a specific date, so I have provided the parent directory in endpoint URI, enabled recursive flag and add filterDirectory accordingly. But It is not able to poll from the directory, it says file not found for that directory. It is trying with an addition '/' while listing {{listFor(/XXXX)}}

*Endpoint URI*

{{sftp://XXXX:22051?connectTimeout=90000&disconnect=true&filterDirectory=%24%7Bfile%3Aname%7D+starts+with+%27%24%7Bbean%3AdateofExchange%3Fmethod%3DforLoc%28%22MY%22%29%7D%27&flatten=true&include=.*IMG&knownHostsFile=C%3A%5Cprogram+files%5Cascertain%5CI2R-MystiQ-Engine%5Cknown_hosts&noop=true&password=xxxxxx&preferredAuthentications=password&reconnectDelay=30000&recursive=true&scheduler=quartz2&scheduler.cron=0+0%2F5+*+*+*+%3F&stepwise=false&username=XXXX_ftpuser }}

*TRACE LOG*

{{TRACE 2019-04-05T15:25:03,389 [org.apache.camel.component.file.remote.SftpConsumer] - Polling directory: TRACE 2019-04-05T15:25:03,389 [org.apache.camel.component.file.remote.SftpOperations] - listFiles() TRACE 2019-04-05T15:25:03,712 [org.apache.camel.component.file.remote.SftpConsumer] - Found 12 in directory: TRACE 2019-04-05T15:25:03,712 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:27 ., dir=true] TRACE 2019-04-05T15:25:03,712 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[.] TRACE 2019-04-05T15:25:03,712 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=.., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 03:04 .., dir=true] TRACE 2019-04-05T15:25:03,712 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[..] TRACE 2019-04-05T15:25:03,728 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20170526, longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 02:16 20170526, dir=true] TRACE 2019-04-05T15:25:04,413 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[20170526] TRACE 2019-04-05T15:25:04,413 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181119, longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:24 20181119, dir=true] TRACE 2019-04-05T15:25:05,117 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[20181119] TRACE 2019-04-05T15:25:05,117 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181121, longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:25 20181121, dir=true] TRACE 2019-04-05T15:25:05,837 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[20181121] TRACE 2019-04-05T15:25:05,840 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181122, longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:26 20181122, dir=true] TRACE 2019-04-05T15:25:06,561 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[20181122] TRACE 2019-04-05T15:25:06,563 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181123, longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:27 20181123, dir=true] TRACE 2019-04-05T15:25:07,258 [org.apache.camel.component.file.remote.SftpConsumer] - Polling sub directory: /20181123 from: sftp://XXXX:22051?connectTimeout=90000&disconnect=true&filterDirectory=%24%7Bfile%3Aname%7D+starts+with+%27%24%7Bbean%3AdateofExchange%3Fmethod%3DforLoc%28%22MY%22%29%7D%27&flatten=true&include=.*IMG&knownHostsFile=C%3A%5Cprogram+files%5Cascertain%5CI2R-MystiQ-Engine%5Cknown_hosts&noop=true&password=xxxxxx&preferredAuthentications=password&reconnectDelay=30000&recursive=true&scheduler=quartz2&scheduler.cron=0+0%2F5+*+*+*+%3F&stepwise=false&username=XXXX_ftpuser TRACE 2019-04-05T15:25:07,260 [org.apache.camel.component.file.remote.SftpConsumer] - doPollDirectory from absolutePath: /20181123, dirName: 20181123 TRACE 2019-04-05T15:25:07,263 [org.apache.camel.component.file.remote.SftpConsumer] - Polling directory: /20181123 TRACE 2019-04-05T15:25:07,265 [org.apache.camel.component.file.remote.SftpOperations] - listFiles(/20181123) DEBUG 2019-04-05T15:25:07,281 [org.apache.camel.component.file.remote.SftpConsumer] - Caught exception Cannot list directory: /20181123 TRACE 2019-04-05T15:25:07,297 [org.apache.camel.component.file.remote.SftpConsumer] - Not ignoring file error Cannot list directory: /20181123 for /20181123 DEBUG 2019-04-05T15:25:07,297 [org.apache.camel.component.file.remote.SftpConsumer] - Error occurred during poll directory: due Cannot list directory: /20181123. Removing 0 files marked as in-progress. WARN 2019-04-05T15:25:07,297 [org.apache.camel.component.file.remote.RemoteFilePollingConsumerPollStrategy] - Trying to recover by force disconnecting from remote server and re-connecting at next poll: sftp://XXX@1XXXX:22051 DEBUG 2019-04-05T15:25:07,297 [org.apache.camel.component.file.remote.SftpConsumer] - Force disconnecting from: sftp://XXX@XXXX:22051 WARN 2019-04-05T15:25:07,297 [org.apache.camel.component.file.remote.SftpConsumer] - Consumer SftpConsumer[sftp://XXXX:22051?connectTimeout=90000&disconnect=true&filterDirectory=%24%7Bfile%3Aname%7D+starts+with+%27%24%7Bbean%3AdateofExchange%3Fmethod%3DforLoc%28%22MY%22%29%7D%27&flatten=true&include=.*IMG&knownHostsFile=C%3A%5Cprogram+files%5Cascertain%5CI2R-MystiQ-Engine%5Cknown_hosts&noop=true&password=xxxxxx&preferredAuthentications=password&reconnectDelay=30000&recursive=true&scheduler=quartz2&scheduler.cron=0+0%2F5+*+*+*+%3F&stepwise=false&username=XXXX_ftpuser] failed polling endpoint: sftp://XXXX:22051?connectTimeout=90000&disconnect=true&filterDirectory=%24%7Bfile%3Aname%7D+starts+with+%27%24%7Bbean%3AdateofExchange%3Fmethod%3DforLoc%28%22MY%22%29%7D%27&flatten=true&include=.*IMG&knownHostsFile=C%3A%5Cprogram+files%5Cascertain%5CI2R-MystiQ-Engine%5Cknown_hosts&noop=true&password=xxxxxx&preferredAuthentications=password&reconnectDelay=30000&recursive=true&scheduler=quartz2&scheduler.cron=0+0%2F5+*+*+*+%3F&stepwise=false&username=XXXX_ftpuser. Will try again at next poll. Caused by: [org.apache.camel.component.file.GenericFileOperationFailedException - Cannot list directory: /20181123] org.apache.camel.component.file.GenericFileOperationFailedException: Cannot list directory: /20181123 at org.apache.camel.component.file.remote.SftpOperations.listFiles(SftpOperations.java:660) ~[camel-ftp-2.21.1.jar!/:2.21.1] at org.apache.camel.component.file.remote.SftpConsumer.doPollDirectory(SftpConsumer.java:128) ~[camel-ftp-2.21.1.jar!/:2.21.1] at org.apache.camel.component.file.remote.RemoteFileConsumer.doSafePollSubDirectory(RemoteFileConsumer.java:260) ~[camel-ftp-2.21.1.jar!/:2.21.1] at org.apache.camel.component.file.remote.SftpConsumer.pollSubDirectory(SftpConsumer.java:96) ~[camel-ftp-2.21.1.jar!/:2.21.1] at org.apache.camel.component.file.remote.SftpConsumer.doPollDirectory(SftpConsumer.java:178) ~[camel-ftp-2.21.1.jar!/:2.21.1] at org.apache.camel.component.file.remote.SftpConsumer.pollDirectory(SftpConsumer.java:87) ~[camel-ftp-2.21.1.jar!/:2.21.1] at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:124) ~[camel-core-2.21.1.jar!/:2.21.1] at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:174) [camel-core-2.21.1.jar!/:2.21.1] at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:101) [camel-core-2.21.1.jar!/:2.21.1] at org.apache.camel.pollconsumer.quartz2.QuartzScheduledPollConsumerJob.execute(QuartzScheduledPollConsumerJob.java:61) [camel-quartz2-2.21.1.jar!/:2.21.1] at org.quartz.core.JobRunShell.run(JobRunShell.java:202) [quartz-2.3.0.jar!/:?] at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573) [quartz-2.3.0.jar!/:?] Caused by: com.jcraft.jsch.SftpException: File not found: /20181123 at com.jcraft.jsch.ChannelSftp.throwStatusError(ChannelSftp.java:2873) ~[jsch-0.1.54.jar!/:?] at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2225) ~[jsch-0.1.54.jar!/:?] at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2242) ~[jsch-0.1.54.jar!/:?] at com.jcraft.jsch.ChannelSftp.ls(ChannelSftp.java:1592) ~[jsch-0.1.54.jar!/:?] at com.jcraft.jsch.ChannelSftp.ls(ChannelSftp.java:1553) ~[jsch-0.1.54.jar!/:?] at org.apache.camel.component.file.remote.SftpOperations.listFiles(SftpOperations.java:651) ~[camel-ftp-2.21.1.jar!/:2.21.1] ... 11 more }}

When I try to hardcode that folder along with endpint URI, it simply can list that directory and poll files. This time there is no '/' before the directory while listing {{listFor(XXXX)}}

*Endpoint URI*

{{sftp://XXXX:22051/20181123?connectTimeout=90000&disconnect=true&flatten=true&include=.*IMG&knownHostsFile=C%3A%5Cprogram+files%5Cascertain%5CI2R-MystiQ-Engine%5Cknown_hosts&noop=true&password=xxxxxx&preferredAuthentications=password&reconnectDelay=30000&recursive=true&scheduler=quartz2&scheduler.cron=0+0%2F5+*+*+*+%3F&separator=Auto&stepwise=false&username=XXXX_ftpuser }}

*TRACE LOG*

{{TRACE 2019-04-05T18:40:00,009 [org.apache.camel.component.file.remote.SftpConsumer] - prePollCheck on sftp://XXX@XXXX:22051 DEBUG 2019-04-05T18:40:00,009 [org.apache.camel.component.file.remote.SftpConsumer] - Not connected/logged in, connecting to: sftp://XXX@XXXX:22051 TRACE 2019-04-05T18:40:00,009 [org.apache.camel.component.file.remote.SftpOperations] - Session isn't connected, trying to recreate and connect. DEBUG 2019-04-05T18:40:00,009 [org.apache.camel.component.file.remote.SftpOperations] - Using knownhosts file: C:\program files\ascertain\I2R-MystiQ-Engine\known_hosts DEBUG 2019-04-05T18:40:00,009 [org.apache.camel.component.file.remote.SftpOperations] - Using known hosts information from file: C:\program files\ascertain\I2R-MystiQ-Engine\known_hosts DEBUG 2019-04-05T18:40:00,025 [org.apache.camel.component.file.remote.SftpOperations] - Using StrickHostKeyChecking: no DEBUG 2019-04-05T18:40:00,025 [org.apache.camel.component.file.remote.SftpOperations] - Using PreferredAuthentications: password TRACE 2019-04-05T18:40:00,025 [org.apache.camel.component.file.remote.SftpOperations] - Connecting use connectTimeout: 90000 ... TRACE 2019-04-05T18:40:00,465 [org.apache.camel.component.file.remote.SftpOperations] - Channel isn't connected, trying to recreate and connect. TRACE 2019-04-05T18:40:00,465 [org.apache.camel.component.file.remote.SftpOperations] - Connecting use connectTimeout: 90000 ... DEBUG 2019-04-05T18:40:01,215 [org.apache.camel.component.file.remote.SftpOperations] - Connected to sftp://XXX@XXXX:22051 DEBUG 2019-04-05T18:40:01,215 [org.apache.camel.component.file.remote.SftpConsumer] - Connected and logged in to: sftp://XXX@XXXX:22051 TRACE 2019-04-05T18:40:01,215 [org.apache.camel.component.file.remote.SftpConsumer] - doPollDirectory from absolutePath: 20181123, dirName: null TRACE 2019-04-05T18:40:01,215 [org.apache.camel.component.file.remote.SftpConsumer] - Polling directory: 20181123 TRACE 2019-04-05T18:40:01,215 [org.apache.camel.component.file.remote.SftpOperations] - listFiles(20181123) TRACE 2019-04-05T18:40:02,621 [org.apache.camel.component.file.remote.SftpConsumer] - Found 6 in directory: 20181123 TRACE 2019-04-05T18:40:02,621 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:27 ., dir=true] TRACE 2019-04-05T18:40:02,621 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[.] TRACE 2019-04-05T18:40:02,637 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=.., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:27 .., dir=true] TRACE 2019-04-05T18:40:02,637 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[..] TRACE 2019-04-05T18:40:02,637 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=Consolidated, longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:26 Consolidated, dir=true] TRACE 2019-04-05T18:40:02,637 [org.apache.camel.component.file.remote.SftpConsumer] - Polling sub directory: 20181123/Consolidated from: sftp://XXXX:22051/20181123?connectTimeout=90000&disconnect=true&flatten=true&include=.*IMG&knownHostsFile=C%3A%5Cprogram+files%5Cascertain%5CI2R-MystiQ-Engine%5Cknown_hosts&noop=true&password=xxxxxx&preferredAuthentications=password&reconnectDelay=30000&recursive=true&scheduler=quartz2&scheduler.cron=0+0%2F5+*+*+*+%3F&separator=Auto&stepwise=false&username=XXXX_ftpuser TRACE 2019-04-05T18:40:02,637 [org.apache.camel.component.file.remote.SftpConsumer] - doPollDirectory from absolutePath: 20181123/Consolidated, dirName: Consolidated TRACE 2019-04-05T18:40:02,637 [org.apache.camel.component.file.remote.SftpConsumer] - Polling directory: 20181123/Consolidated TRACE 2019-04-05T18:40:02,637 [org.apache.camel.component.file.remote.SftpOperations] - listFiles(20181123/Consolidated) TRACE 2019-04-05T18:40:02,715 [org.apache.camel.component.file.remote.SftpConsumer] - Found 5 in directory: 20181123/Consolidated TRACE 2019-04-05T18:40:02,715 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:26 ., dir=true] TRACE 2019-04-05T18:40:02,715 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/.] TRACE 2019-04-05T18:40:02,715 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=.., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:27 .., dir=true] TRACE 2019-04-05T18:40:02,715 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/..] TRACE 2019-04-05T18:40:02,715 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181124020438943_021420181123INW.MYR, longName=-r-x------ 1 ftpadmin ftpadmin 408097 Nov 23 2018 20181124020438943_021420181123INW.MYR, dir=false] TRACE 2019-04-05T18:40:02,731 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/20181124020438943_021420181123INW.MYR] TRACE 2019-04-05T18:40:02,731 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181124020439099_035820181123INW.MYR, longName=-r-x------ 1 ftpadmin ftpadmin 21689 Nov 23 2018 20181124020439099_035820181123INW.MYR, dir=false] TRACE 2019-04-05T18:40:02,731 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/20181124020439099_035820181123INW.MYR] TRACE 2019-04-05T18:40:02,731 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=ToPPay, longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 06:41 ToPPay, dir=true] TRACE 2019-04-05T18:40:02,731 [org.apache.camel.component.file.remote.SftpConsumer] - Polling sub directory: 20181123/Consolidated/ToPPay from: sftp://XXXX:22051/20181123?connectTimeout=90000&disconnect=true&flatten=true&include=.*IMG&knownHostsFile=C%3A%5Cprogram+files%5Cascertain%5CI2R-MystiQ-Engine%5Cknown_hosts&noop=true&password=xxxxxx&preferredAuthentications=password&reconnectDelay=30000&recursive=true&scheduler=quartz2&scheduler.cron=0+0%2F5+*+*+*+%3F&separator=Auto&stepwise=false&username=XXXX_ftpuser TRACE 2019-04-05T18:40:02,731 [org.apache.camel.component.file.remote.SftpConsumer] - doPollDirectory from absolutePath: 20181123/Consolidated/ToPPay, dirName: ToPPay TRACE 2019-04-05T18:40:02,731 [org.apache.camel.component.file.remote.SftpConsumer] - Polling directory: 20181123/Consolidated/ToPPay TRACE 2019-04-05T18:40:02,731 [org.apache.camel.component.file.remote.SftpOperations] - listFiles(20181123/Consolidated/ToPPay) TRACE 2019-04-05T18:40:02,777 [org.apache.camel.component.file.remote.SftpConsumer] - Found 8 in directory: 20181123/Consolidated/ToPPay TRACE 2019-04-05T18:40:02,777 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 06:41 ., dir=true] TRACE 2019-04-05T18:40:02,777 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/ToPPay/.] TRACE 2019-04-05T18:40:02,777 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=.., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:26 .., dir=true] TRACE 2019-04-05T18:40:02,777 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/ToPPay/..] TRACE 2019-04-05T18:40:02,793 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=021420181123INW.MYR, longName=-r-x------ 1 ftpadmin ftpadmin 408097 Nov 23 2018 021420181123INW.MYR, dir=false] TRACE 2019-04-05T18:40:02,793 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/ToPPay/021420181123INW.MYR] TRACE 2019-04-05T18:40:02,793 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=021420181123INW1.MYR, longName=-r-x------ 1 ftpadmin ftpadmin 579829 Nov 23 2018 021420181123INW1.MYR, dir=false] TRACE 2019-04-05T18:40:02,793 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/ToPPay/021420181123INW1.MYR] TRACE 2019-04-05T18:40:02,793 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=035820181123INW.MYR, longName=-r-x------ 1 ftpadmin ftpadmin 21689 Nov 23 2018 035820181123INW.MYR, dir=false] TRACE 2019-04-05T18:40:02,793 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/ToPPay/035820181123INW.MYR] TRACE 2019-04-05T18:40:02,793 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=035820181123INW1.MYR, longName=-r-x------ 1 ftpadmin ftpadmin 30954 Nov 23 2018 035820181123INW1.MYR, dir=false] TRACE 2019-04-05T18:40:02,793 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/ToPPay/035820181123INW1.MYR] TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181124020438943_021420181123INW.MYR, longName=-r-x------ 1 ftpadmin ftpadmin 408097 Nov 23 2018 20181124020438943_021420181123INW.MYR, dir=false] TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/ToPPay/20181124020438943_021420181123INW.MYR] TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181124020439099_035820181123INW.MYR, longName=-r-x------ 1 ftpadmin ftpadmin 21689 Nov 23 2018 20181124020439099_035820181123INW.MYR, dir=false] TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Consolidated/ToPPay/20181124020439099_035820181123INW.MYR] TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=Data, longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:26 Data, dir=true] TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpConsumer] - Polling sub directory: 20181123/Data from: sftp://XXXX:22051/20181123?connectTimeout=90000&disconnect=true&flatten=true&include=.*IMG&knownHostsFile=C%3A%5Cprogram+files%5Cascertain%5CI2R-MystiQ-Engine%5Cknown_hosts&noop=true&password=xxxxxx&preferredAuthentications=password&reconnectDelay=30000&recursive=true&scheduler=quartz2&scheduler.cron=0+0%2F5+*+*+*+%3F&separator=Auto&stepwise=false&username=XXXX_ftpuser TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpConsumer] - doPollDirectory from absolutePath: 20181123/Data, dirName: Data TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpConsumer] - Polling directory: 20181123/Data TRACE 2019-04-05T18:40:02,809 [org.apache.camel.component.file.remote.SftpOperations] - listFiles(20181123/Data) TRACE 2019-04-05T18:40:02,871 [org.apache.camel.component.file.remote.SftpConsumer] - Found 501 in directory: 20181123/Data TRACE 2019-04-05T18:40:02,871 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:26 ., dir=true] TRACE 2019-04-05T18:40:02,871 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Data/.] TRACE 2019-04-05T18:40:02,871 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=.., longName=dr-x------ 2 ftpadmin ftpadmin 0 Mar 12 05:27 .., dir=true] TRACE 2019-04-05T18:40:02,871 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Data/..] TRACE 2019-04-05T18:40:02,871 [org.apache.camel.component.file.remote.SftpConsumer] - SftpFile[fileName=20181123021401015101004323IWNM.MMYR, longName=-r-x------ 1 ftpadmin ftpadmin 14846 Nov 23 2018 20181123021401015101004323IWNM.MMYR, dir=false] TRACE 2019-04-05T18:40:02,871 [org.apache.camel.component.file.remote.SftpConsumer] - File did not match. Will skip this file: RemoteFile[Data/20181123021401015101004323IWNM.MMYR] }}

I am sure that the cause of the issue has to be the addition '/' prepending with directory name while listing {{listFor(/XXXX)}}. How can I avoid it ! .. using {{seperator}} parameter didn't effect i suppose it is only for producing files and not for consuming. I need to resolve this issue as soon as possible. Please suggest me some solution :(

*EDITED :*

I can reproduce the issue in latest version as well,I suppose the issue is when there is no base path only the '/' gets prepended which should not actually happen

Code Snippet from SftpConsumer.java Camel 3.0.0.M1

{{if (file.isDirectory()) \{ RemoteFile<SftpRemoteFile> remote = asRemoteFile(absolutePath, file, getEndpoint().getCharset()); if (endpoint.isRecursive() && depth < endpoint.getMaxDepth() && isValidFile(remote, true, files)) { // recursive scan and add the sub files and folders String subDirectory = file.getFilename(); String path = absolutePath + ""/"" + subDirectory; boolean canPollMore = pollSubDirectory(path, subDirectory, fileList, depth); if (!canPollMore) { return false; } } // we cannot use file.getAttrs().isLink on Windows, so we dont invoke the method // just assuming its a file we should poll } }}
{quote}String path = absolutePath + ""/"" + subDirectory;
{quote}",,acosentino,betoflowv93,davsclaus,ramu11,sumeetp1991,vsvdhsagar,"betoflowv93 commented on pull request #2931: CAMEL-13400 Camel FTP Cannot list directory with 'File not found' prepending additional '/' in front of directory automatically
URL: https://github.com/apache/camel/pull/2931
 
 
   -Check empty base path before adding '/' (FtpConsumer) .
   -Add a new test.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/19 04:31;githubbot;600","davsclaus commented on pull request #2931: CAMEL-13400 Camel FTP Cannot list directory with 'File not found' prepending additional '/' in front of directory automatically
URL: https://github.com/apache/camel/pull/2931
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 07:54;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 20 04:33:49 UTC 2019,,,,,,,,,,,"0|z01l5c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Apr/19 07:56;acosentino;ask on the user mailing list first;;;","09/Apr/19 08:18;davsclaus;This was first debated on SO which the user should have reported in this JIRA so others can see that we have talked about it there first:
https://stackoverflow.com/questions/55570093/camel-ftp-cannot-list-directory-with-file-not-found-pre-pending-additional

I think it smells like a little bug, and a potential fix is to check if that absolutePath is empty and if so omit appending the slash.;;;","09/Apr/19 08:22;acosentino;Reopened.;;;","16/May/19 05:42;betoflowv93;It seems that the 'stepwise=false' attribute is causing the problem.  When it is set to false and no base path is provided in the endpoint URI (ftp://ZZZ@XXX:YYY?password...) the absolute paths used in the listFiles method are generated with the '/' prefix ('/mock/foo'), but if a base path is defined in the URI (ftp://ZZZ@XXX:YYY/bar?password...)  the resulting absolute paths do not have this prefix ('bar/mock/foo').

However, the issue depends of the server implementation since I tested with the embedded FTP server used in the tests and the files were returned normally using the absolute paths containing the prefix '/'.

 ;;;","20/May/19 04:33;betoflowv93;Hi.

I have just sent a PR. Could you please give it a look.

Regards,

Roberto.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RedisStringIdempotentRepository resetting expiry on existing keys,CAMEL-13397,13226672,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,k1th,k1th,08/Apr/19 11:10,10/Apr/19 13:08,13/Jul/23 08:32,10/Apr/19 13:08,2.23.1,,,,,,,,,,,2.23.3,2.24.0,3.0.0,3.0.0-M3,,,camel-spring-redis,,,,0,,,,,"When getting new input and seeing for example the same file name for the second time before expiry hits, {{add}} will simply reset the expiry to the original value independent of the {{set}} being successful or not.

This way, the key will never expire if {{add}} is called more freuqently than the key expires.

 
{code:java}
public boolean add(String key) {
    boolean added = valueOperations.setIfAbsent(createRedisKey(key), key);
    if (expiry > 0) {
        valueOperations.getOperations().expire(createRedisKey(key), expiry, TimeUnit.SECONDS);
    }
    return added;
}{code}
this should probably rather be:
{code:java}
public boolean add(String key) {
    return valueOperations.setIfAbsent(createRedisKey(key), key, Duration.ofSeconds(expiry));
}{code}",,k1th,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-04-08 11:10:50.0,,,,,,,,,,,"0|z01jwo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-leveldb can no longer use non-native leveldb libraries,CAMEL-13396,13226630,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,jamesnetherton,jamesnetherton,jamesnetherton,08/Apr/19 07:23,08/Apr/19 10:35,13/Jul/23 08:32,08/Apr/19 10:35,2.23.2,3.0.0,,,,,,,,,,2.23.3,2.24.0,3.0.0,3.0.0-M3,,,camel-leveldb,,,,0,,,,,"I was testing out the 2.23.2 release with WildFly-Camel and our camel-leveldb integration test has started to fail with:

java.lang.NoClassDefFoundError: org/fusesource/leveldbjni/JniDBFactory

I think the changes introduced in CAMEL-13368 have caused this. Specifically the static import for the factory class:

https://github.com/apache/camel/blob/camel-2.23.x/components/camel-leveldb/src/main/java/org/apache/camel/component/leveldb/LevelDBFile.java#L36

There's a dedicated private getFactory() method in LevelDBFile, which is more friendly for modular class loading environments. So I think the code should be using that instead.",,jamesnetherton,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-04-08 07:23:20.0,,,,,,,,,,,"0|z01jnc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException on opentracing example,CAMEL-13393,13226321,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,zregvart,zregvart,05/Apr/19 08:38,12/Jun/19 07:59,13/Jul/23 08:32,12/Jun/19 07:59,3.0.0-M2,,,,,,,,,,,3.0.0-M3,,,,,,camel-core,,,,0,,,,,"When running service1 from of the opentracing example an NullPointerException is logged to the standard out:

{code}
2019-04-05 10:33:54.620  INFO 23268 --- [           main] o.a.camel.spring.boot.RoutesCollector    : Starting CamelMainRunController to ensure the main thread keeps running
[WARNING] 
java.lang.RuntimeException: java.lang.NullPointerException
    at org.apache.camel.spring.boot.CamelSpringBootApplicationController.run (CamelSpringBootApplicationController.java:83)
    at org.apache.camel.spring.boot.CamelMainRunController$DaemonTask.run (1m2Cam20melM1ainRunController.java:53)9
    -04-05 10:33:54.622  INFO at5m23268 java.lang.Thread.run --- [           main] o.a.c.impl.DefaultStreamCachingStrategy  : StreamCaching in use with spool directory: /tmp/camel/camel-tmp-4e01e06f-baf2-4a4c-abce-89e2a14f7516 and rules: [Sp (Thread.java:748)
ool > 128K body size]
Caused by: java.lang.NullPointerException
    at org.apache.camel.main.MainSupport.postProcessCamelContext (MainSupport.java:745)
    at org.apache.camel.main.MainSupport.initCamelContext (MainSupport.java:676)
    at org.apache.camel.main.Main.doStart (Main.java:107)
    at org.apache.camel.support.service.ServiceSupport.start (ServiceSupport.java:86)
    at org.apache.camel.main.MainSupport.run (MainSupport.java:203)
    at org.apache.camel.spring.boot.CamelSpringBootApplicationController.run (CamelSpringBootApplicationController.java:78)
    at org.apache.camel.spring.boot.CamelMainRunController$DaemonTask.run (CamelMainRunController.java:53)
    at java.lang.Thread.run (Thread.java:748)
{code}

Take a look at CAMEL-13386 on how to reproduce.",,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-04-05 08:38:42.0,,,,,,,,,,,"0|z01hr4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong removing parameters logic in ServiceComponent.,CAMEL-13388,13225379,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,Nightmeister,Nightmeister,01/Apr/19 20:39,07/Apr/19 07:30,13/Jul/23 08:32,05/Apr/19 04:11,2.22.3,2.23.1,3.0.0-M1,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M3,,,,,,0,easyfix,,,,"Component: camel-service

Mistake in class : org.apache.camel.component.service.ServiceComponent.java:83

This error prevents the delegating component from receiving URI parameters.

*Have:*
{code:java}
parameters.keySet().removeAll(parameters.keySet());
{code}
*Must be:*
{code:java}
parameters.keySet().removeAll(params.keySet());
{code}
 ",,davsclaus,Nightmeister,,,,,"Nightmeister commented on pull request #2857: CAMEL-13388: Wrong removing parameters logic in ServiceComponent.
URL: https://github.com/apache/camel/pull/2857
 
 
   https://issues.apache.org/jira/browse/CAMEL-13388
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Apr/19 12:00;githubbot;600","Nightmeister commented on pull request #2858: CAMEL-13388: Wrong removing parameters logic in ServiceComponent.
URL: https://github.com/apache/camel/pull/2858
 
 
   https://issues.apache.org/jira/browse/CAMEL-13388
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Apr/19 12:01;githubbot;600","Nightmeister commented on pull request #2859: CAMEL-13388: Wrong removing parameters logic in ServiceComponent.
URL: https://github.com/apache/camel/pull/2859
 
 
   https://issues.apache.org/jira/browse/CAMEL-13388
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Apr/19 12:02;githubbot;600","oscerd commented on pull request #2857: CAMEL-13388: Wrong removing parameters logic in ServiceComponent.
URL: https://github.com/apache/camel/pull/2857
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/19 09:03;githubbot;600","oscerd commented on pull request #2856: CAMEL-13388: Wrong removing parameters logic in ServiceComponent.
URL: https://github.com/apache/camel/pull/2856
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/19 09:08;githubbot;600","davsclaus commented on pull request #2859: CAMEL-13388: Wrong removing parameters logic in ServiceComponent.
URL: https://github.com/apache/camel/pull/2859
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/19 07:30;githubbot;600","davsclaus commented on pull request #2858: CAMEL-13388: Wrong removing parameters logic in ServiceComponent.
URL: https://github.com/apache/camel/pull/2858
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/19 07:30;githubbot;600",,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 05 12:02:57 UTC 2019,,,,,,,,,,,"0|z01c8g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Apr/19 07:05;davsclaus;You are welcome to provide a fix via a github PR
https://github.com/apache/camel/;;;","05/Apr/19 09:57;Nightmeister;[~davsclaus], thx for that fix.

I found that when we use specific parameters for delegating component we get parameters validation errors on general service component.

For example:

Service URI: service:recaptcha-service:jetty:[http://0.0.0.0:2224/recaptcha?matchOnUriPrefix=true&throwExceptionOnFailure=false]

Camel creating endpoint uri=[service://recaptcha-service:jetty:[http://0.0.0.0:2224/recaptcha?matchOnUriPrefix=true&throwExceptionOnFailure=false]|http://0.0.0.0:2224/recaptcha?matchOnUriPrefix=true&throwExceptionOnFailure=false],]

After that, camel creating endpoint with specific jetty parameters uri=[jetty://http://0.0.0.0:2224/recaptcha?matchOnUriPrefix=true&throwExceptionOnFailure=false], path=[[http://0.0.0.0:2224/recaptcha]]

But we get exception on route creation : org.apache.camel.FailedToCreateRouteException: Failed to create route route2: Route(route2)[[From[service:recaptcha-service:jetty:http://0... because of Failed to resolve endpoint: service://recaptcha-service:jetty:http://0.0.0.0:2224/recaptcha?matchOnUriPrefix=true&throwExceptionOnFailure=false due to: Failed to resolve endpoint: service://recaptcha-service:jetty:http://0.0.0.0:2224/recaptcha?matchOnUriPrefix=true&throwExceptionOnFailure=false due to: There are 2 parameters that couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[\{matchOnUriPrefix=true, throwExceptionOnFailure=false}]

ServiceComponent should ignore delegating parameters.

I think, that legal fix can be like that:

Class: org.apache.camel.component.service.ServiceEndpoint
{code:java}
@Override
public boolean isLenientProperties() {
  return true;
} {code};;;","05/Apr/19 10:38;davsclaus;Ah yeah that sounds right, can you provide a PR;;;","05/Apr/19 11:03;Nightmeister;Yes, I'll do.;;;","05/Apr/19 12:02;Nightmeister;Done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-twitter-direct-message doesn't filter by filterOld parameter,CAMEL-13387,13225353,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,claudio4j,claudio4j,01/Apr/19 18:37,02/Apr/19 07:04,13/Jul/23 08:32,02/Apr/19 07:04,,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M3,,camel-twitter,,,,0,,,,,DirectMessageConsumerHandler doesn't filter old messages when parameter filterOld=true,,claudio4j,davsclaus,,,,,"claudio4j commented on pull request #2851: CAMEL-13387 camel-twitter-direct-message doesn't filter by filterOld parameter
URL: https://github.com/apache/camel/pull/2851
 
 
   https://issues.apache.org/jira/browse/CAMEL-13387
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Apr/19 19:46;githubbot;600","davsclaus commented on pull request #2851: CAMEL-13387 camel-twitter-direct-message doesn't filter by filterOld parameter
URL: https://github.com/apache/camel/pull/2851
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/19 07:02;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 02 07:04:43 UTC 2019,,,,,,,,,,,"0|z01c34:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Apr/19 07:04;davsclaus;Thanks for reporting and the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error assembling JAR: Manifest file: /home/camel/camel/target/checkout/parent/target/classes/META-INF/MANIFEST.MF does not exist,CAMEL-13386,13225254,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,objectiser,objectiser,01/Apr/19 11:46,16/Apr/19 10:29,13/Jul/23 08:32,16/Apr/19 10:28,3.0.0-M2,,,,,,,,,,,3.0.0-M3,,,,,,build system,examples,,,0,,,,,"Tried building the 3.0.0-M2 opentracing example, and got:
{noformat}
INFO]
[INFO] --- maven-bundle-plugin:4.1.0:manifest (bundle-manifest) @ camel-example-opentracing-loggingtracer ---
[WARNING] Manifest org.apache.camel.example:camel-example-opentracing-loggingtracer:jar:3.0.0-M2 : Unused Import-Package instructions: [org.apache.camel.*]
[INFO]
[INFO] --- maven-jar-plugin:3.1.1:jar (default-jar) @ camel-example-opentracing-loggingtracer ---
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Camel :: Example :: OpenTracing 3.0.0-M2:
[INFO]
[INFO] Camel :: Example :: OpenTracing .................... SUCCESS [  1.046 s]
[INFO] Camel :: Example :: OpenTracing :: LoggingTracer ... FAILURE [  1.596 s]
[INFO] Camel :: Example :: OpenTracing :: Client .......... SKIPPED
[INFO] Camel :: Example :: OpenTracing :: Service 1 ....... SKIPPED
[INFO] Camel :: Example :: OpenTracing :: Service 2 ....... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.245 s
[INFO] Finished at: 2019-04-01T12:24:50+01:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-jar-plugin:3.1.1:jar (default-jar) on project camel-example-opentracing-loggingtracer: Error assembling JAR: Manifest file: /home/camel/camel/target/checkout/parent/target/classes/META-INF/MANIFEST.MF does not exist. -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :camel-example-opentracing-loggingtracer{noformat}
Also got the same error when building in the examples folder, with the camel-example-aggregate example.

The manifest file path mentioned in the error is included in a file "".flattened-pom.xml"" present in many of the examples folder. This file is not present in 3.0.0-M1 which builds fine.

 

 ",,acosentino,davsclaus,objectiser,zregvart,,,"zregvart commented on pull request #2869: CAMEL-13386: Maven Flatten plugin refinements
URL: https://github.com/apache/camel/pull/2869
 
 
   This makes sure that Maven Flatten plugin is run in all profiles not just for `release` and changes the `properties` element processing to `keep` in contrast to the previous setting (`expand`) it should not replace property placeholders with expanded properties that might contain values specific to the machine the build is running.
   
   Also makes sure that the distribution archives do not hold the `.flattened-pom.xml` file.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Apr/19 20:16;githubbot;600","zregvart commented on pull request #2869: CAMEL-13386: Maven Flatten plugin refinements
URL: https://github.com/apache/camel/pull/2869
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/19 10:26;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 16 10:28:39 UTC 2019,,,,,,,,,,,"0|z01bh4:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,"01/Apr/19 12:04;acosentino;I cannot reproduce this:

 
{code:java}
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Camel :: Example :: OpenTracing 3.0.0-M2:
[INFO]
[INFO] Camel :: Example :: OpenTracing .................... SUCCESS [ 3.265 s]
[INFO] Camel :: Example :: OpenTracing :: LoggingTracer ... SUCCESS [ 1.101 s]
[INFO] Camel :: Example :: OpenTracing :: Client .......... SUCCESS [01:09 min]
[INFO] Camel :: Example :: OpenTracing :: Service 1 ....... SUCCESS [ 34.235 s]
[INFO] Camel :: Example :: OpenTracing :: Service 2 ....... SUCCESS [ 4.871 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 02:03 min
[INFO] Finished at: 2019-04-01T14:03:52+02:00
[INFO] ------------------------------------------------------------------------

{code};;;","02/Apr/19 07:08;davsclaus;What version of maven do you use, and what command do you run exactly and from which directory?;;;","05/Apr/19 07:35;objectiser;[~davsclaus] Sorry for delay, I didn't get any notifications - need to check my settings.

I am using maven 3.6.0.

Steps to reproduce:
 * After unpacking distribution, ran ""mvn compile"" in camel-example-opentracing folder and worked fine
 * Then ran ""mvn compile spring-boot:run"" from the service1 sub-folder, which fails as it cannot find the LoggingTracer
 * So return to the camel-example-opentracing folder and run ""mvn clean install"" which fails with the error.

Is the flattened pom new for M2?;;;","05/Apr/19 07:37;acosentino;yes, it's a new feature.

[~zregvart] can you take a look here?;;;","05/Apr/19 08:39;zregvart;From 2.20 we no longer publish examples to the Maven repository ([https://search.maven.org/search?q=g:org.apache.camel%20AND%20a:examples&core=gav)] we seem to have published them for some time after that only for snapshots but that ceased also ([https://repository.apache.org/#nexus-search;gav~org.apache.camel.example~examples~~~)].

I think you got an error because of the missing {{org.apache.example:examples}} POM. An error should look like:

{code}
[ERROR] Failed to execute goal on project camel-example-opentracing-service1: Could not resolve dependencies for project org.apache.camel.example:camel-example-opentracing-service1:jar:3.0.0-M2: Failed to collect dependencies at org.apache.camel.example:camel-example-opentracing-loggingtracer:jar:3.0.0-M2: Failed to read artifact descriptor for org.apache.camel.example:camel-example-opentracing-loggingtracer:jar:3.0.0-M2: Could not find artifact org.apache.camel.example:examples:pom:3.0.0-M2 in central (https://repo.maven.apache.org/maven2) -> [Help 1]
{code}

To build and run the opentracing example you need to:

{code:sh}
$ unzip apache-camel-3.0.0-M2-src.zip
$ cd apache-camel-3.0.0-M2/examples
$ mvn -N install
$ cd camel-example-opentracing
$ mvn install
$ cd service1
$ mvn spring-boot:run
{code}

There is an unrelated (I think) issue that I logged in CAMEL-13393.;;;","08/Apr/19 08:25;objectiser;[~zregvart] Your steps worked because of using the source zip, as this doesn't have the flattened poms - if you try it with the binary distribution, the ""mvn install"" in camel-example-opentracing should fail.

 ;;;","16/Apr/19 10:28;zregvart;[~objectiser] we baked in some build system specific properties into the POM files so this caused the OSGI support to look for MANIFEST.MF files in {{/home/camel}}. I just merged additional refinements to flattened POMs that I think should fix the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-cxf - failure processor for custom exception handling cannot get the original message,CAMEL-13376,13224597,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,ffang,j_ri,j_ri,28/Mar/19 14:01,27/May/19 19:06,13/Jul/23 08:32,27/May/19 19:06,2.21.0,,,,,,,,,,,2.22.5,2.23.3,2.24.1,2.25.0,3.0.0,,camel-cxf,,,,0,,,,,"I configured custom exception handling for a CXF consumer where I want to use my own processor.
 
 Lile this:
 
 onException(Exception.class)
            .handled(false)
            .useOriginalMessage()
            .process(failureResponseProcessor);
 
 or:
 
 <onException useOriginalMessage=""true"">
    <exception>java.lang.Exception</exception>
    <handled><constant>false</constant></handled>
    <process ref=""failureResponseProcessor""/>
</onException>



If allowStreaming is enabled on the CXF consumer endpoint, my FailureResponseProcessor cannot get the original body (the body part of CachedCxfPayload seems to be empty).

If I set allowStreaming to false, the processor works as expected.


I did a branch on my fork to create this reproducer:

https://github.com/jochenr/camel/tree/Reproducer-CXF-CustomExceptionHandling-in-StreamingMode/examples/camel-example-cxf-proxy


If you toggle the setting of allowStreaming between true and false, you see the different output to the console, right after the string
""This was the original BODY that caused the fault:""","Redhat Fuse 7.0 (on EAP)

reproduced with current ""camel-example-cxf-proxy"" example",acosentino,davsclaus,ffang,j_ri,vrlgohel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 27 17:20:16 UTC 2019,,,,,,,,,,,"0|z017g8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Mar/19 14:05;acosentino;For Red Hat product you need to contact RH support.;;;","28/Mar/19 14:37;davsclaus;You likely need to turn on stream-caching as if something that is streamed may be read already and not re-readable
http://camel.apache.org/why-is-my-message-body-empty.html;;;","28/Mar/19 15:10;j_ri;sure, I'm aware of this.

if you take a look at

[https://github.com/jochenr/camel/blob/Reproducer-CXF-CustomExceptionHandling-in-StreamingMode/examples/camel-example-cxf-proxy/src/main/resources/META-INF/spring/camel-config.xml]

 

you see that in my reproducer (and in my real project) this is done:

<route streamCache=""true"">

 ;;;","28/Mar/19 15:13;j_ri;@[~ancosen]: I did contact the RH support in parallel, but I thought it's simpler to put it here and just send the link to RH...and I thought it could help other people, too.;;;","29/Mar/19 12:57;j_ri;why did you lower the priority?

IMHO it's quite essential that this works. As workaround I have to disable streaming or I have to wire-tap all messages to find the message that caused an error in a ""wire-tap archive"" and have to correlate it manually (beisdes that I need a lot of hard drive space).

Actually I only want to archive/log messages that caused errors.....;;;","27/May/19 17:20;ffang;We need to set the body back to original CxfPayload with cached stream source so
CxfPayload is re-readable;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XMLTokenExpressionIterator Default Exchange charset overrides original xml encoding from InputStream,CAMEL-13374,13224371,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,smithsv,smithsv,27/Mar/19 17:04,23/Mar/21 09:00,13/Jul/23 08:32,23/Mar/21 07:59,2.18.0,2.22.0,,,,,,,,,,3.10.0,,,,,,camel-core,,,,0,,,,,"Default Exchange charset overrides original xml encoding from InputStream

at

org.apache.camel.support.XMLTokenExpressionIterator.doEvaluate(Exchange exchange, boolean closeStream)

_String charset = IOHelper.getCharsetName(exchange);_

must be replaced with

_String charset = IOHelper.getCharsetName(exchange, *false*);_

then at 

_// woodstox's getLocation().etCharOffset() does not return the offset correctly for InputStream, so use Reader instead._
_this(path, nsmap, mode, group, new *InputStreamReader*(in, charset));_

_and_ 

_// woodstox's getLocation().etCharOffset() does not return the offset correctly for InputStream, so use Reader instead._
_this(path, nsmap, mode, 1, new *InputStreamReader*(in, charset));_

lines use 

org.apache.commons.io.input.XmlStreamReader instead of just InputStreamReader

it correctly determinants encoding from xml header when it present.

 

Examle document at InputStream body:

_<?xml version = ""1.0"" encoding= ""ISO-8859-5"" standalone=""no"" ?>_

_<xml/>_

Current _charset_ result: is UTF-8 (*default* from _IOHelper.getCharsetName(exchange)_)

Expected result: _ISO-8859-5_

 ",,davsclaus,smithsv,vrlgohel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-11846,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 23 06:38:27 UTC 2021,,,,,,,,,,,"0|z0162g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Mar/19 09:09;davsclaus;You are welcome to provide your suggested fix as a github PR, then we can better review, and possible apply the fix. Also a good idea if possible is to provide an unit test that tests this fix.;;;","23/Mar/21 06:38;davsclaus;We can use camel-xml-io which has a XmlStreamReader that can read the charset from the xml declaration.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-stax - FileInputStream not closed,CAMEL-13373,13224357,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,Sirbu,Sirbu,27/Mar/19 16:17,18/Jun/19 08:14,13/Jul/23 08:32,18/Jun/19 08:14,2.23.1,,,,,,,,,,,3.0.0,3.0.0.M4,,,,,camel-stax,,,,0,,,,,"The StAXProcessor.java class does not close the stream it opens.

I had to modify it like this: 

public void process(Exchange exchange) throws Exception {
 InputSource is = exchange.getIn().getMandatoryBody(InputSource.class);
 XMLStreamReader stream = exchange.getIn().getMandatoryBody(XMLStreamReader.class);
 // Fermeture de la inputstream ici, car dans la version originale de la classe la stream reste ouverte.
 *try(InputStream inputStreamToClose = is.getByteStream()) {*
 XMLReader reader = new StaxStreamXMLReader(stream);
 ContentHandler handler;
 if (this.contentHandlerClass != null)

{ handler = (ContentHandler) this.contentHandlerClass.newInstance(); }

else

{ handler = this.contentHandler; }

reader.setContentHandler(handler);
 reader.parse(is);
 if (ExchangeHelper.isOutCapable(exchange))

{ exchange.getOut().setHeaders(exchange.getIn().getHeaders()); exchange.getOut().setBody(handler); }

else

{ exchange.getIn().setBody(handler); }

} *finally*

*{ // Fermeture de la strem ValidatingStreamReader validatingStreamReader = (ValidatingStreamReader)stream; validatingStreamReader.closeCompletely(); }*

*}*",,acosentino,davsclaus,Sirbu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 18 08:14:23 UTC 2019,,,,,,,,,,,"0|z015zc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Mar/19 16:34;acosentino;It's not really clear. Maybe open a PR.;;;","27/Mar/19 16:49;Sirbu;Each time we have a from(""file://).to(stax://) after camel finishes to process the route we observe a FileInputStream not closed.

After analyzing who was responsible for opening the FileInputStream, i found that the StAXProcessor.java was in cause.

t I opens the stream for reading (line; reader.parse(is) but it never closes it.

So, i had to modify the source code by adding a try with resources at the line in bold.

Is it more clear ? or should i open a PR and post the link here ?

Thanks   ;;;","27/Mar/19 16:52;acosentino;If you have a quick fix for this you can open a Pull request with the fix. Otherwise, it is clear. ;;;","27/Mar/19 17:33;Sirbu;[https://github.com/apache/camel/pull/2843];;;","28/Mar/19 11:28;Sirbu;Hello I updated the PR.

I think that theres no quickfix as I had to add woodstox library. This is brocken the Checkstyle of the project..

For more details on the pb:

These 2 lines opens the FilesInputStreams that are never closed:

*_InputSource is = exchange.getIn().getMandatoryBody(InputSource.class);_*
*_XMLStreamReader stream = exchange.getIn().getMandatoryBody(XMLStreamReader.class);_*;;;","18/Jun/19 08:14;davsclaus;Thanks for reporting and the PR.

Mind that this happens on windows only;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LevelDB NPE if persistentFileName has no paths in LevelDBAggregationRepository,CAMEL-13368,13224246,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,hakuseki,hakuseki,27/Mar/19 09:45,29/Mar/19 08:58,13/Jul/23 08:32,29/Mar/19 08:58,2.22.3,2.23.1,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,,,camel-leveldb,,,,0,aggregator,leveldb,,,"If the constructor of
{code:java}
LevelDBAggregationRepository(""repositoryName"", ""persistentFilename""){code}
is used and the
{code:java}
fileName{code}
does not include any path delimiters it will return a NPE.

 

The actual NPE code is within *LevelDBFile.java* where the *getFile().getParent()* is the cause:
{code:java}
try {
 getFile().getParentFile().mkdirs();
 DBFactory factory = getFactory();
 db = factory.open(getFile(), options);
} catch (IOException ioe) {
 throw new RuntimeException(""Error opening LevelDB with file "" + getFile(), ioe);
}{code}
 

Stacktrace:

Caused by: java.lang.NullPointerException: null
 at org.apache.camel.component.leveldb.LevelDBFile.start(LevelDBFile.java:173)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:75)
 at org.apache.camel.component.leveldb.LevelDBAggregationRepository.doStart(LevelDBAggregationRepository.java:412)
 at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:72)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:75)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:60)
 at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:104)
 at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:90)
 at org.apache.camel.processor.aggregate.AggregateProcessor.doStart(AggregateProcessor.java:1384)
 at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:72)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:75)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:60)
 at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:104)
 at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:90)
 at org.apache.camel.processor.RedeliveryErrorHandler.doStart(RedeliveryErrorHandler.java:1484)
 at org.apache.camel.support.ChildServiceSupport.start(ChildServiceSupport.java:44)
 at org.apache.camel.support.ChildServiceSupport.start(ChildServiceSupport.java:31)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:75)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:60)
 at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:104)
 at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:90)
 at org.apache.camel.processor.interceptor.DefaultChannel.doStart(DefaultChannel.java:160)
 at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:72)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:75)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:60)
 at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:104)
 at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:90)
 at org.apache.camel.processor.DelegateAsyncProcessor.doStart(DelegateAsyncProcessor.java:80)
 at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:72)
 at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:75)
 at org.apache.camel.impl.RouteService.startChildService(RouteService.java:370)
 at org.apache.camel.impl.RouteService.doWarmUp(RouteService.java:196)
 at org.apache.camel.impl.RouteService.warmUp(RouteService.java:145)
 ... 31 common frames omitted","MacOS 10.14.3

java version ""1.8.0_201""
Java(TM) SE Runtime Environment (build 1.8.0_201-b09)
Java HotSpot(TM) 64-Bit Server VM (build 25.201-b09, mixed mode)",davsclaus,hakuseki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 28 09:41:04 UTC 2019,,,,,,,,,,,"0|z015ao:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Mar/19 11:20;davsclaus;Contributions with a fix is welcome
https://github.com/apache/camel/blob/master/CONTRIBUTING.md;;;","27/Mar/19 15:07;hakuseki;{code:java}
/**
 * The class LevelDBSetupTest
 *
 * @author mgr, 2019-03-27
 * @version 1.0
 */
public class LevelDBSetupTest extends CamelTestSupport {
 private LevelDBFile levelDBFile;

 @Override
 public void setUp() throws Exception {
 super.setUp();
// deleteDirectory("""");
 final File file = new File(""leveldb.dat"");
 levelDBFile = new LevelDBFile();
 levelDBFile.setFile(file);
 }

 @Override
 public void tearDown() throws Exception {
 levelDBFile.stop();
 super.tearDown();
 }

 @Test
 public void testLevelDBStart() {
 levelDBFile.start();
 }
}{code}
 

This one breaks.

Working on patch but unsure on how to proceed. 

I have forked PR and now branched out.;;;","28/Mar/19 09:41;hakuseki;PR submitted

[https://github.com/apache/camel/pull/2845];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-jaxb - Error loading fallback type converter in Karaf,CAMEL-13367,13224012,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,26/Mar/19 11:17,28/Mar/19 09:52,13/Jul/23 08:32,28/Mar/19 09:52,3.0.0-M2,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,karaf,,,,0,,,,,To reproduce then unit test cia2 source code chapter10-camel-cxf-rest-karaf,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-26 11:17:57.0,,,,,,,,,,,"0|z013v4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MLLP Endpoint 'maxConcurrentConsumers' configuration support,CAMEL-13366,13223985,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,vishal423,vishal423,26/Mar/19 09:24,27/Mar/19 08:35,13/Jul/23 08:32,27/Mar/19 08:35,2.23.1,,,,,,,,,,,2.23.2,2.24.0,3.0.0,3.0.0-M3,,,camel-mllp,,,,0,,,,,"If you provide 'maxConcurrentConsumers' query parameter on the endpoint URI, then, the route fails with error message 

_""There are 1 parameters that couldn't be set on the endpoint. Check the uri
if the parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{maxConcurrentConsumers=xx}] ""_

As per docs, it should be supported as query parameter.",,davsclaus,vishal423,,,,,"vishal423 commented on pull request #2842: CAMEL-13366: support maxConcurrentConsumers configuration on the endpoint URI
URL: https://github.com/apache/camel/pull/2842
 
 
   - Closes CAMEL-13366
   - This change would allow to specify `maxConcurrentConsumers` property on the endpoint URI (docs already specify that)
   - Unit tests to assert property behavior when specified on the endpoint URI.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/19 17:54;githubbot;600","davsclaus commented on pull request #2842: CAMEL-13366: support maxConcurrentConsumers configuration on the endpoint URI
URL: https://github.com/apache/camel/pull/2842
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/19 08:29;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 27 08:35:20 UTC 2019,,,,,,,,,,,"0|z013p4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Mar/19 09:26;vishal423;I know the cause and will patch fix;;;","27/Mar/19 08:35;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sometimes SedaConsumer does not start and remains stuck,CAMEL-13358,13223375,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,graeme_moss,graeme_moss,22/Mar/19 15:28,23/Mar/19 07:32,13/Jul/23 08:32,23/Mar/19 07:32,2.19.0,,,,,,,,,,,3.0.0,,,,,,camel-core,,,,0,,,,,"Sometimes we notice that some of our routes get ""stuck"" and do not process anything.  Looking at the stacktrace for such a route we see something like this:
{code:java}
""Camel (SomeName) thread #648 - seda://someName"" #1287 daemon prio=5 os_prio=0 tid=0x00007f23880cf000 nid=0x25006 waiting on condition [0x00007f1f23530000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00000006e4beb8e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:748)
{code}
whereas we would instead normally expect to see something like this:
{code:java}
""Camel (SomeName) thread #840 - seda://someName"" #1577 daemon prio=5 os_prio=0 tid=0x00007f227c02b000 nid=0x256fe waiting on condition [0x00007f1f0ca20000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00000006eb69c1f8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
        at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
        at org.apache.camel.component.seda.SedaConsumer.doRun(SedaConsumer.java:198)
        at org.apache.camel.component.seda.SedaConsumer.run(SedaConsumer.java:154)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:748)
{code}

Note that whereas this latter example has SedaConsumer in the stacktrace polling for an exchange, the former example has no such SedaConsumer in the stacktrace and is stuck waiting for a new ""task"" to be given to the ThreadPoolExecutor.

After adding debug logging, I see that the issue is as follows:

The code in ServiceSupport here writes to the starting and started flags using one thread (call it Thread W):
{code}
    public void start() throws Exception {
        if (isStarting() || isStarted()) {
            // only start service if not already started
            LOG.trace(""Service already started"");
            return;
        }
        if (starting.compareAndSet(false, true)) {
            LOG.trace(""Starting service"");
            try {
                doStart();
                started.set(true);
                starting.set(false);
{code}
and on a different thread (call it thread R) this code in ServiceSupport reads the starting and started flags:
{code}
    public boolean isRunAllowed() {
        // if we have not yet initialized, then all options is false
        boolean unused1 = !started.get() && !starting.get() && !stopping.get() && !stopped.get();
        boolean unused2 = !suspending.get() && !suspended.get() && !shutdown.get() && !shuttingdown.get();
        if (unused1 && unused2) {
            return false;
        }
        return !isStoppingOrStopped();
    }
{code}

So the order of events is:
# Thread W: calls ServiceSupport.start()
# Thread W: compareAndSet starting from false to true
# Thread W: calls ServiceSupport.doStart() which eventually creates and starts Thread R
# Thread R: calls SedaConsumer.doRun() which calls isRunAllowed()
# Thread R: in isRunAllowed() reads started as false
# Thread W: set started to true
# Thread W: set starting to false
# Thread R: in isRunAllowed() reads starting as false
# Thread R: concludes that isRunAllowed is false
# Thread R: the while loop in SedaConsumer.doRun is not executed and the thread will forever remain stuck waiting for a new ""task"" (on ThreadPoolExecutor.java:1067)

One fix would be to swap reading of starting and started so that starting is read first, then started.

Looking at the latest code in Camel 3.0.x, this code has been refactored to use a single ""status"" field instead of multiple different AtomicBoolean fields.  That should also fix this bug.  However, for completeness, I thought it best to log this bug anyway.",,davsclaus,graeme_moss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Mar 23 07:32:10 UTC 2019,,,,,,,,,,,"0|z00zyw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Mar/19 07:32;davsclaus;Thanks for the report and the detailed explanation. Yeah its improved/fixed in 3.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression - Namespaces defined on the SOAP envelope get lost in PAYLOAD mode,CAMEL-13357,13223130,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ffang,j_ri,j_ri,21/Mar/19 16:30,28/Mar/19 12:36,13/Jul/23 08:32,28/Mar/19 12:36,,,,,,,,,,,,2.22.4,2.23.2,3.0.0,,,,camel-cxf,,,,1,,,,,"If a request message is send to a CXF consumer or a response is returned to the CXF provider that contains namespace definions at the SOAP envelope and the Camel-CXF endpoint is configured in PAYLOAD mode the namespace definition gets lost unless streaming is disabled.

If the resulting CxfPayload is then converted e.g. to String that String will contain invalid XML (because some namespace definition is missing).

For non-streaming mode (system property org.apache.camel.component.cxf.streaming is set to false) there are special precautions met to set these envelope namespaces on the first DOM element of the payload but this coding is missing for StAX.

The messages in question look like that:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"">
  <soap:Body>
    <ns2:getTokenResponse xmlns:ns2=""http://camel.apache.org/cxf/namespace"">
      <return xsi:type=""xs:string"">Return Value</return>
    </ns2:getTokenResponse>
  </soap:Body>
</soap:Envelope>

If the CxfPayload is converted to String it will lack the definition for the xsi namespace prefix (and further XML parsing will fail).",,dmvolod,j_ri,ramu11,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-8663,,,,,,,,CXF-6394,,,,,CAMEL-11681,,,,"22/Mar/19 13:27;j_ri;ReproducerException.log;https://issues.apache.org/jira/secure/attachment/12963402/ReproducerException.log",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 22 12:48:57 UTC 2019,,,,,,,Patch Available,,,,"0|z00ygo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Mar/19 16:34;j_ri;exactly the decribed problem is still/again there in version camel-cxf-2.21.0  (resp. camel-cxf-2.21.0.fuse-000077-redhat-1)

I had to turn streaming off org.apache.camel.component.cxf.CxfEndpoint.setAllowStreaming(Boolean)

so that my application works in PAYLOAD mode.;;;","21/Mar/19 17:01;dmvolod;[~j_ri], do you have a simple test case for this issue?;;;","22/Mar/19 12:48;j_ri;Hi,

I implemented a reproducer in my fork of the camel-examples.

The reproducer is based on the ""camel-example-cxf-proxy"" example.

Here it is:

[https://github.com/jochenr/camel/tree/Reproducer-CAMEL-13357/examples/camel-example-cxf-proxy]

 

 

To test it, please send the XML from the following file(s) via Soap-UI to the service:
 # [https://github.com/jochenr/camel/blob/Reproducer-CAMEL-13357/examples/camel-example-cxf-proxy/src/test/resources/non-working-request.xml]
 # [https://github.com/jochenr/camel/blob/Reproducer-CAMEL-13357/examples/camel-example-cxf-proxy/src/test/resources/working-request.xml]

1. does not work, while 2. works fine.

If you compare the requests you see that 1. has the ""xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""" namespace in the Envelope, while 2. defines it within the body.

 

If you change the option ""allowStreaming=true"" to false, you can see the request 1. also works.

 

In my opinion 1. should also work, if streaming is enabled.

 

Best regards,
 Jochen

 

 P.S.: Attached ""ReproducerException.log"" you find the exception log for comparison.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MLLP Component 'maxConcurrentConsumers' configuration is ignored,CAMEL-13355,13223083,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,vishal423,vishal423,21/Mar/19 13:56,24/Mar/19 09:29,13/Jul/23 08:32,24/Mar/19 09:29,3.0.0-M1,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M2,,camel-mllp,,,,0,,,,,"If you set 'maxConcurrentConsumers' property in the MllpConfiguration object and assign that to MllpComponent, then, during creation of MllpEndpoint instance, that property is ignored and default value of 5 is used.",,davsclaus,vishal423,,,,,"vishal423 commented on pull request #2837: CAMEL-13355: copy method updated to include maxConcurrentConsumers
URL: https://github.com/apache/camel/pull/2837
 
 
   - Closes CAMEL-13355
   - This change would allow maxConcurrentConsumers property set at component level to be used during endpoint instance creation.
   - Refactored unit tests to remove code not in use and added unit tests related to this change.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Mar/19 18:33;githubbot;600","davsclaus commented on pull request #2837: CAMEL-13355: copy method updated to include maxConcurrentConsumers
URL: https://github.com/apache/camel/pull/2837
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/19 09:23;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 21 18:34:53 UTC 2019,,,,,,,,,,,"0|z00y68:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Mar/19 14:15;vishal423;I will soon raise PR on github to fix this issue;;;","21/Mar/19 16:07;davsclaus;Thanks for spotting this and doing a PR;;;","21/Mar/19 18:34;vishal423;PR raised # https://github.com/apache/camel/pull/2837;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-netty4-http: error resolving relative path,CAMEL-13351,13222829,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,lb,lb,lb,20/Mar/19 12:33,23/Mar/19 09:02,13/Jul/23 08:32,23/Mar/19 09:02,,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M2,,camel-netty4-http,,,,0,,,,,"DefaultNettyHttpBinding the uri used for request is computed as follow:

{code}
String uriForRequest = uri;
if (configuration.isUseRelativePath()) {
    int indexOfPath = uri.indexOf((new URI(uri)).getPath());
    if (indexOfPath > 0) {
        uriForRequest = uri.substring(indexOfPath);
    }
}
{code}

This has some issues:
- indexOf + substring are in fact the same as what we cna achieve with new URI(uri).getPath()
- in case the path is resolved to / then the logic is wrong as in case of an uri like http://something:80/ it will end up with //something:80/",,lb,,,,,,"lburgazzoli commented on pull request #35: fix: add custom netty http binding to workaround CAMEL-13351
URL: https://github.com/apache/camel-k-runtime/pull/35
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Mar/19 05:32;githubbot;600","davsclaus commented on pull request #2832: CAMEL-13351: camel-netty4-http: error resolving relative path
URL: https://github.com/apache/camel/pull/2832
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/19 08:55;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-20 12:33:40.0,,,,,,,,,,,"0|z00wls:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid swagger json/yaml generated for Rest DSL,CAMEL-13340,13222536,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,ssavenko,ssavenko,19/Mar/19 10:40,24/Mar/19 10:04,13/Jul/23 08:32,21/Mar/19 16:18,2.22.0,,,,,,,,,,,2.23.2,2.24.0,3.0.0,,,,camel-swagger,,,,0,,,,,"Swagger rests description is generated with invalid responseSchema element. You can see example I found on [stackoverflow|https://stackoverflow.com/questions/52745160/camel-rest-dsl-swagger-output-contains-invalid-responseschema-element].

From camel 2.2 swagger-core was upgraded from 1.5.17 to 1.5.20.

In Swagger 1.5.19 new ResponseSchemaMixin was added to default object mapper [https://github.com/swagger-api/swagger-core/commit/8b97df3667559fca1783da845607afc30e550b83#diff-58c27954db290a19d4fadbfe34b0bbf3]

Camel creates ObjectMapper manually, and does not add this mixin, which results in incorrect json/yaml generated. See [https://github.com/apache/camel/blob/camel-2.22.0/components/camel-swagger-java/src/main/java/org/apache/camel/swagger/RestSwaggerSupport.java#L216] and line 235

Fix can be either add ResponseSchemaMixin to manually created objectmappers OR call Json.mapper() and Yaml.mapper() to use swagger logic and don't create mapper manually.",,davsclaus,dmvolod,ssavenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Mar 24 10:04:36 UTC 2019,,,,,,,,,,,"0|z00uso:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Mar/19 06:08;davsclaus;You are welcome to work on a proposed fix as a PR;;;","20/Mar/19 10:14;dmvolod;Thanks [~ssavenko], I will look into this issue.

 ;;;","21/Mar/19 07:22;davsclaus;The karaf feature for camel-swagger-java now fails due that io.swagger.jackson.mixin package is not exported by swagger-core. We would need to ""override"" this in our features.xml file or something.;;;","21/Mar/19 15:33;dmvolod;Rewrite code to prevent use not exported package. It uses an ObjectMapperFactory to prevent add specific capabilities on library fix.;;;","22/Mar/19 15:03;ssavenko;[~dmvolod] I don't think it will work for yaml. mapper = Yaml.mapper() is used to generate json and then convert to yaml (for some reason), so probably should be also mapper = Json.mapper() for yaml in that line. Thanks.;;;","24/Mar/19 10:04;dmvolod;Thanks for suggestion, [~ssavenko]. I will fix, but the not good think that this is not covered by the test cases.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Partition revoke implemented to save offset state using KafkaConsumer.position API results in message loss,CAMEL-13339,13222383,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,viswaram,viswaram,18/Mar/19 17:51,24/Mar/19 09:21,13/Jul/23 08:32,24/Mar/19 09:21,2.23.0,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M2,,camel-kafka,,,,0,,,,,"Current implementation of org.apache.camel.component.kafka.KafkaConsumer.KafkaFetchRecords's onPartitionsRevoked, uses org.apache.kafka.clients.consumer.KafkaConsumer.position(partition). This approach causes message loss when multiple processes listening to same topic for point to point messaging (like a QUEUE) type implementation.

 

Issue is noticed when partition gets assigned and then gets revoked in quick succession. Upon partition assignment, say at the beginning of processing offset is set to 0, and say there was no poll for this partition (may be due to earlier poll brought in bunch of records and they are still being processed). Subsequently, say partition got revoked, before polling.

In this case, as onPartitionsRevoked looks at org.apache.kafka.clients.consumer.KafkaConsumer.position(partition) to save offset state and so 0 gets saved in this case in StateRepository implementation. When the same partition get assigned again, StateRepository.getState returns 0. Since Camel KafkaConsumer treats this as last processed offset, it adds 1 to it moving pointer to offset 1. Because of this, message at offset 0 never gets processed.

 

Two fixes might be needed
 # a) onPartitionsRevoked should look at last processed offset (possibly store 'last processed offset' for each topic/partition in a memory map) and use it to save offset
 # b) Currently onPartitionsRevoked just saves offset state when an implementation of StateRepository configured. Ideally it should call KafkaFetchRecords.commitOffset so commitSync call goes through when partition revoked and no StateRepository implementation configured",,davsclaus,ramu11,viswaram,,,,"viswaramamoorthy commented on pull request #2838: CAMEL-13339 - Fix to use last processed offset maintained by Camel KafkaConsumer to avoid message loss upon partition revoke
URL: https://github.com/apache/camel/pull/2838
 
 
   In message processing loop introduced saved last offset processed in map and used the last processed offset from the map when partition revoke called by Kafka broker
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 12:14;githubbot;600","davsclaus commented on pull request #2838: CAMEL-13339 - Fix to use last processed offset maintained by Camel KafkaConsumer to avoid message loss upon partition revoke
URL: https://github.com/apache/camel/pull/2838
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/19 09:13;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Mar 24 09:21:35 UTC 2019,,,,,,,,,,,"0|z00tuo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Mar/19 03:43;ramu11;[~viswaram] I see you are working on CAMEL-13338. Are you working on this one also?

;;;jira-users","21/Mar/19 03:43;ramu11;you are very welcome to send a PR. We love contributions
https://github.com/apache/camel/blob/master/CONTRIBUTING.md;;;","22/Mar/19 12:16;viswaram;[~ramu11] Raised a PR to fix this issue. please check;;;","24/Mar/19 09:21;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConsumerRebalanceListener is not registered when topicIsPattern is turned off. Causing message loss or too many duplicates,CAMEL-13338,13222372,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,viswaram,viswaram,18/Mar/19 17:13,25/Mar/19 12:53,13/Jul/23 08:32,24/Mar/19 09:22,2.23.0,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M2,,camel-kafka,,,,0,,,,,"Not registering ConsumerRebalanceListener when topicIsPattern turned off, causes either too many duplicate messages getting delivered to message processing layer or causes message loss depending on autoOffsetReset flag value.
 
Issue is noticed with below test scenario
Topic: e.g. TestMessage
Number of partitions: 25 (this is not completely relevant to issue)
ConsumerUri: kafka:<kafka-broker-uris>?topic=TestMessage&groupId=TestMessage_GROUP&consumersCount=5&autoCommitEnable=false&offsetRepository=#<DB-state-repository>
Number processes running consumers: 2 or more; e.g. two instances of Docker containers listening from same topic each with 5 consumer threads
 
Please note that offset management is done in DB with an implementation of Camel's StateRepository interface to eliminate too duplicate messages arriving at the message processor (at most one message processing needed for my use case)
 
When a second process instance (say second container) brought up, since ConsumerRebalanceListener is not registered, partitions start processing at earliest offsets if autoOffsetReset is set to earliest as expected. In this case, too many duplicate messages arrive at the message processing layer. If autoOffsetReset is set to latest, message loss occurs for certain partitions. If autoOffsetReset is set to none, no valid offset exception thrown by broker
 
Issue would be noticed consistently when simulating slow message processing for the above test scenario
 
 ",,davsclaus,ramu11,viswaram,,,,"viswaramamoorthy commented on pull request #2833: CAMEL-13338 - Fix to use Kafka client KafkaConsumer.subscribe API wit…
URL: https://github.com/apache/camel/pull/2833
 
 
   …h ConsumerRebalanceListener registration when topicIsPattern is set to false
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/19 14:51;githubbot;600","viswaramamoorthy commented on pull request #2833: CAMEL-13338 - Fix to use Kafka client KafkaConsumer.subscribe API wit…
URL: https://github.com/apache/camel/pull/2833
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/19 16:46;githubbot;600","viswaramamoorthy commented on pull request #2834: CAMEL-13338 - Fix to use Kafka client KafkaConsumer.subscribe API wit…
URL: https://github.com/apache/camel/pull/2834
 
 
   …h ConsumerRebalanceListener registration when topicIsPattern is set to false
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/19 16:46;githubbot;600","davsclaus commented on pull request #2834: CAMEL-13338 - Fix to use Kafka client KafkaConsumer.subscribe API wit…
URL: https://github.com/apache/camel/pull/2834
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/19 09:09;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 25 12:53:55 UTC 2019,,,,,,,,,,,"0|z00ts8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Mar/19 17:14;viswaram;To solve, ConsumerRebalanceListener should be registered while subscribing to Kafka topics even though topicIsPattern is turned off. I tried this fix locally and when I use camel-kafka with fix, I do not see any issues. I would be happy to send a PR. ;;;","19/Mar/19 06:58;davsclaus;Yes you are very welcome to send a PR. We love contributions
https://github.com/apache/camel/blob/master/CONTRIBUTING.md;;;","20/Mar/19 14:54;viswaram;[~davsclaus] Thanks. I have raised a PR with fix. ;;;","24/Mar/19 09:22;davsclaus;Thanks for the PR;;;","25/Mar/19 12:53;viswaram;[~davsclaus] Thanks for merging PR. I see that you have merged fix into 2.23.x branch as well. Do you know when 2.23.2 would be released?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel JBPM WID definitions contain incorrect WIH classname,CAMEL-13330,13221659,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,swiderski.maciej,mccloud,mccloud,14/Mar/19 12:53,18/Mar/19 15:09,13/Jul/23 08:32,18/Mar/19 15:09,2.23.1,3.0.0-M1,,,,,,,,,,2.23.2,2.24.0,3.0.0,3.0.0-M2,,,camel-jbpm,,,,0,,,,,"The .wid files in the camel-jbpm JAR contain incorrect classnames for the InOutCamelConnector and InOnlyCamelConnector, which causes the generated WorkItemHandler configuration in the kie-deployment-descriptor to be incorrect.",,mccloud,,,,,,"DuncanDoyle commented on pull request #2825: Fixes CAMEL-13330. Fixed classname in annotations of WIHs. Added new …
URL: https://github.com/apache/camel/pull/2825
 
 
   …build plugin to properly filter the placeholders in the annotations in the WIH java source files.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Mar/19 12:28;githubbot;600","oscerd commented on pull request #2825: Fixes CAMEL-13330. Fixed classname in annotations of WIHs. Added new …
URL: https://github.com/apache/camel/pull/2825
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Mar/19 15:08;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-14 12:53:28.0,,,,,,,,,,,"0|z00pe0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-yammer - olderThan and newerThan endpoint options are not working for high message number,CAMEL-13324,13221383,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,jbouska,jbouska,13/Mar/19 11:24,13/Mar/19 18:09,13/Jul/23 08:32,13/Mar/19 18:09,,,,,,,,,,,,,,,,,,,,,,0,,,,,"Yammer message ID can be very high. OlderThan and newerThan endpoint options consumes message id and we are running out of integer range.

 
{code:java}
Caused by: org.apache.camel.TypeConversionException: Error during type conversion from type: java.lang.String to the required type: int with value 58802444918784 due For input string: ""58802444918784""
{code}
 

Suggested fix is change olderThan and newerThan options to `long`.",,jbouska,,,,,,"bouskaJ commented on pull request #2823: [CAMEL-13324] Change olderThan and newerThan options type
URL: https://github.com/apache/camel/pull/2823
 
 
   Tested with camel 2.21.0
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 11:27;githubbot;600","aldettinger commented on pull request #2823: [CAMEL-13324] Change olderThan and newerThan options type
URL: https://github.com/apache/camel/pull/2823
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 18:09;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-13 11:24:05.0,,,,,,,,,,,"0|z00no0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-twitter-direct-message doesn't use default delay of 30s,CAMEL-13321,13221216,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,claudio4j,claudio4j,12/Mar/19 20:38,13/Mar/19 07:35,13/Jul/23 08:32,13/Mar/19 07:26,,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M2,,camel-twitter,,,,0,,,,,"Per the documentation, the default delay is 30s, but running the camel-twitter-directmessage polls at 500ms interval.",,claudio4j,,,,,,"claudio4j commented on pull request #2821: CAMEL-13321 - camel-twitter-direct-message doesn't use default delay of 30s
URL: https://github.com/apache/camel/pull/2821
 
 
   https://issues.apache.org/jira/browse/CAMEL-13321
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Mar/19 20:48;githubbot;600","oscerd commented on pull request #2821: CAMEL-13321 - camel-twitter-direct-message doesn't use default delay of 30s
URL: https://github.com/apache/camel/pull/2821
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 07:26;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-12 20:38:49.0,,,,,,,,,,,"0|z00mn4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DirectMessageConsumerHandler.java [4] pollConsume method calls Twitter.getDirectMessages(getLastIdPaging()),CAMEL-13320,13221205,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,claudio4j,claudio4j,12/Mar/19 18:55,13/Mar/19 07:19,13/Jul/23 08:32,13/Mar/19 07:19,,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M2,,camel-twitter,,,,0,,,,,"DirectMessageConsumerHandler.java [1] pollConsume method calls Twitter.getDirectMessages(getLastIdPaging()), the method is deprecated [2] and filters out the messages sent by the account [3]. The master version removed the getDirectMessages(Paging p) method and doesn't filter the messages. The fix is to call getDirectMessages(int count) instead.

1. https://github.com/apache/camel/blob/master/components/camel-twitter/src/main/java/org/apache/camel/component/twitter/directmessage/DirectMessageConsumerHandler.java#L39
2. https://github.com/Twitter4J/Twitter4J/blob/4.0.7/twitter4j-core/src/main/java/twitter4j/api/DirectMessagesResources.java#L53
3. https://github.com/Twitter4J/Twitter4J/blob/4.0.7/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java#L422",,claudio4j,,,,,,"claudio4j commented on pull request #2820: CAMEL-13320 - DirectMessageConsumerHandler.java pollConsume method ca…
URL: https://github.com/apache/camel/pull/2820
 
 
   …lls deprecated Twitter.getDirectMessages(Paging p)
   
   https://issues.apache.org/jira/browse/CAMEL-13320
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Mar/19 19:18;githubbot;600","oscerd commented on pull request #2820: CAMEL-13320 - DirectMessageConsumerHandler.java pollConsume method ca…
URL: https://github.com/apache/camel/pull/2820
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 07:18;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-12 18:55:23.0,,,,,,,,,,,"0|z00mko:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"TwitterConverter calls deprecated getSenderScreenName, throws UnsupportedOperationException",CAMEL-13319,13221202,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,claudio4j,claudio4j,12/Mar/19 18:54,13/Mar/19 07:09,13/Jul/23 08:32,13/Mar/19 07:09,,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M2,,camel-twitter,,,,0,,,,,"TwitterConverter.java at [1] line 49, calls DirectMessage.getSenderScreenName() but it is deprecated [2] and its implementation DirectMessageJSONImpl [3] throws UnsupportedOperationException. To fix, just call getSenderId() instead.

 

1. https://github.com/apache/camel/blob/master/components/camel-twitter/src/main/java/org/apache/camel/component/twitter/util/TwitterConverter.java#L49
2. https://github.com/Twitter4J/Twitter4J/blob/4.0.7/twitter4j-core/src/main/java/twitter4j/DirectMessage.java#L47
3. https://github.com/Twitter4J/Twitter4J/blob/4.0.7/twitter4j-core/src/internal-json/java/twitter4j/DirectMessageJSONImpl.java#L254",,claudio4j,,,,,,"claudio4j commented on pull request #2819: CAMEL-13319 - TwitterConverter calls deprecated getSenderScreenName, throws UnsupportedOperationException
URL: https://github.com/apache/camel/pull/2819
 
 
   https://issues.apache.org/jira/browse/CAMEL-13319
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Mar/19 19:05;githubbot;600","oscerd commented on pull request #2819: CAMEL-13319 - TwitterConverter calls deprecated getSenderScreenName, throws UnsupportedOperationException
URL: https://github.com/apache/camel/pull/2819
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 07:04;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-12 18:54:02.0,,,,,,,,,,,"0|z00mk0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Olingo4 Connector split does not handle result values,CAMEL-13316,13221127,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,phantomjinx,phantomjinx,12/Mar/19 13:32,06/Jun/19 07:18,13/Jul/23 08:32,20/Mar/19 14:39,2.21.4,2.23.1,,,,,,,,,,2.24.1,2.25.0,3.0.0,3.0.0-M2,,,camel-olingo4,,,,0,,,,,"When the split property is set to true on the Olingo4Consumer, the splitResults() method is enacted. This only handles response results that are ClientEntitySets or ClientEntities, while not handling ClientValues.",,phantomjinx,,,,,,"phantomjinx commented on pull request #2831: CAMEL-13316: Olingo components handle value/property results
URL: https://github.com/apache/camel/pull/2831
 
 
   * When split, both olingo components handle results which are values or
     properties rather than entities.
   
   * Provides tests confirming the fix.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/19 19:29;githubbot;600","oscerd commented on pull request #2831: CAMEL-13316: Olingo components handle value/property results
URL: https://github.com/apache/camel/pull/2831
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/19 14:38;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 19 19:30:25 UTC 2019,,,,,,,,,,,"0|z00m3c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Mar/19 19:30;phantomjinx;PR -> [https://github.com/apache/camel/pull/2831|https://github.com/apache/camel/pull/2831];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-sql cannot resolve nested simple expression,CAMEL-13305,13220485,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,rnetuka,rnetuka,08/Mar/19 15:36,11/Mar/19 07:23,13/Jul/23 08:32,11/Mar/19 07:23,,,,,,,,,,,,2.23.2,2.24.0,3.0.0,3.0.0-M2,,,camel-sql,,,,0,,,,,"- camel-sql cannot resolve nested simple expression
 - For example, `to(""sql:insert into T_EXAMPLE values (:#$\{header.header1[${header.CamelLoopIndex}][COLUMN_NAME1]})"")` is resolved as `insert into T_EXAMPLE values (?][COLUMN_NAME1]})` instead of `insert into T_EXAMPLE values ( ? )}`. And database driver will generate a syntax error.
 - FYI, `.setHeader(""header1"",simple(""$\{header.header1[${header.CamelLoopIndex}][COLUMN_NAME1]})""))` is resolved correctly. So probably sql-camel cannot properly parse the range of simple expression.",,rnetuka,,,,,,"rnetuka commented on pull request #2812: [CAMEL-13305] camel-sql cannot resolve nested simple expression
URL: https://github.com/apache/camel/pull/2812
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-13305
   
   When using nested expressions in SQL routes, such as
   .to(""sql:INSERT INTO example VALUES (:?${array[${index}]})"");
   both REPLACE_PATTERN and NAME_PATTERN are unable to match the whole expression correctly. We have to find correct enclosing bracket and create a substring in such cases.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 15:38;githubbot;600","oscerd commented on pull request #2812: [CAMEL-13305] camel-sql cannot resolve nested simple expression
URL: https://github.com/apache/camel/pull/2812
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/19 07:10;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-08 15:36:10.0,,,,,,,,,,,"0|z00i5c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel Bindy Tab delimited - Handling Blank Values,CAMEL-13304,13220481,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,rnetuka,rnetuka,08/Mar/19 15:10,12/Mar/19 11:05,13/Jul/23 08:32,12/Mar/19 11:05,,,,,,,,,,,,2.23.2,2.24.0,3.0.0,3.0.0-M2,,,camel-bindy,,,,0,,,,,"Attached the tab Delimited File, XSD/java Object and the converted XML. The Bindy is not reading the file properly based on position when it has blank values.

Input file:

 
|Student 1st 80 56 54 90 90|
|hello 1st 70 65 75 90 11|

 

On the output, i see this,

 
|<?xml version='1.0' encoding='UTF-8'?>|
|<list>|
|<com.redhat.StudentResult>|
|<id>Student</id>|
|<name>1st</name>|
|<semester>80</semester>|
|<grade>B</grade>|
|<totalScore>290</totalScore>|
|<result>Pass</result>|
|<javaMarks>56</javaMarks>|
|<cMarks>54</cMarks>|
|<dbmsMarks>90</dbmsMarks>|
|<mathematicsMarks>90</mathematicsMarks>|
|<dataStructureMarks>0</dataStructureMarks>|
|</com.redhat.StudentResult>|
|<com.redhat.StudentResult>|
|<id>hello</id>|
|<name>1st</name>|
|<semester>70</semester>|
|<grade>C</grade>|
|<totalScore>241</totalScore>|
|<result>Fail</result>|
|<javaMarks>65</javaMarks>|
|<cMarks>75</cMarks>|
|<dbmsMarks>90</dbmsMarks>|
|<mathematicsMarks>11</mathematicsMarks>|
|<dataStructureMarks>0</dataStructureMarks>|
|</com.redhat.StudentResult>|
|</list>|

 

The order was not followed, as you can see from the xml you paste. The Student and hello is mapped to ID tag (should be mapped on the name tag). the ID tag should be empty since from the input file it is blank.",,rnetuka,,,,,,"rnetuka commented on pull request #2811: [CAMEL-13304] Camel Bindy Tab delimited - Handling Blank Values
URL: https://github.com/apache/camel/pull/2811
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-13304
   
   When using tab as a separator in CSV (i.e. TSV format), trimming any leading whitespaces might lead to breaking empty field values.
   
   Trailing whitespaces shouldn't be a problem, since all unset fields will have their default values. Also, empty lines are discarded by line = line.replaceAll(""\s+$"", """"); as they were before.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 15:13;githubbot;600","oscerd commented on pull request #2811: [CAMEL-13304] Camel Bindy Tab delimited - Handling Blank Values
URL: https://github.com/apache/camel/pull/2811
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Mar/19 11:05;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 08 15:13:51 UTC 2019,,,,,,,,,,,"0|z00i4g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Mar/19 15:13;rnetuka;PR: https://github.com/apache/camel/pull/2811;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel with OSGi blueprint on Karaf should detect JMX,CAMEL-13303,13220428,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,08/Mar/19 09:32,08/Mar/19 10:10,13/Jul/23 08:32,08/Mar/19 10:10,3.0.0-M1,,,,,,,,,,,3.0.0,3.0.0-M2,,,,,camel-osgi,,,,0,,,,,"10:31:00.277 INFO [Blueprint Event Dispatcher: 1] Attempting to start CamelContext: camel-1
10:31:00.279 INFO [Blueprint Event Dispatcher: 1] Apache Camel 3.0.0-SNAPSHOT (CamelContext: camel-1) is starting
10:31:00.281 INFO [Blueprint Event Dispatcher: 1] JMX is disabled",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 08 09:53:55 UTC 2019,,,,,,,,,,,"0|z00hso:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Mar/19 09:52;davsclaus;Its because the JMX is loaded via Java ServiceLoader. It should use the factory finder which we use for loading all the other Camel stuff today.;;;","08/Mar/19 09:53;davsclaus;10:53:34.239 INFO [Blueprint Event Dispatcher: 1] Attempting to start CamelContext: camel-1
10:53:34.240 INFO [Blueprint Event Dispatcher: 1] Apache Camel 3.0.0-SNAPSHOT (CamelContext: camel-1) is starting
10:53:34.242 INFO [Blueprint Event Dispatcher: 1] JMX is enabled;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dump JMX stats for null timestamps should not use 1970-1-1 as date,CAMEL-13296,13220123,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,07/Mar/19 08:21,08/Mar/19 10:10,13/Jul/23 08:32,08/Mar/19 10:10,,,,,,,,,,,,3.0.0,3.0.0-M2,,,,,jmx,,,,0,,,,,"Noticed this
lastExchangeFailureTimestamp=""1970-01-01T00:59:59.999+0100"" ",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-07 08:21:49.0,,,,,,,,,,,"0|z00fx4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Camel-box, switch HtmlUnit to JSoup to not rely on Jetty (and allow update to servlet api 4)",CAMEL-13284,13219263,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,jondruse,jondruse,04/Mar/19 12:04,08/Mar/19 06:07,13/Jul/23 08:32,05/Mar/19 11:54,3.0.0-M1,,,,,,,,,,,3.0.0,3.0.0-M2,,,,,camel-box,,,,0,,,,,"Component camel-box depends on Jetty (see https://github.com/apache/camel/blob/master/platforms/karaf/features/src/main/resources/features.xml#L553)

This dependency doesn't allow update servlet-api to 4.0

Solution is to refactor component to use JSoup instead.",,acosentino,jondruse,tadayosi,,,,"JiriOndrusek commented on pull request #2803: [CAMEL-13284] Camel-box, switch HtmlUnit to JSoup to not rely on Jetty
URL: https://github.com/apache/camel/pull/2803
 
 
   Issue https://issues.apache.org/jira/browse/CAMEL-13284
   
   Refactor of camel-box component to replace HtmlUnit with Jsoup which allows to remove dependency to Jetty and therefor allows to use servlet-api 4.0
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/19 15:34;githubbot;600","oscerd commented on pull request #2803: [CAMEL-13284] Camel-box, switch HtmlUnit to JSoup to not rely on Jetty
URL: https://github.com/apache/camel/pull/2803
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Mar/19 11:54;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,CAMEL-13279,,,,,,CAMEL-13300,,,,,,CAMEL-13090,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 04 12:09:21 UTC 2019,,,,,,,,,,,"0|z00ao0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Mar/19 12:09;acosentino;+1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't use validation of JaxbDataFormat of non Root JAXB Elements,CAMEL-13282,13219234,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,michael.lueck,michael.lueck,04/Mar/19 08:12,15/Mar/19 12:57,13/Jul/23 08:32,15/Mar/19 12:57,2.23.1,,,,,,,,,,,2.24.0,3.0.0,3.0.0-M2,,,,camel-jaxb,,,,0,,,,,"When a JAXB class that is created or generated has no @XmlRootElement
 annotation JaxbDataFormat would try to find a ObjectFactory method which
 can create a JAXBElement for the type of the object. It would then use
 the JAXBElement to marshal the object.

While trying to find the objectFactory and to call the appropriate
 method it would catch *ALL* Exceptions that are thrown and just logs a
 message.

While I don't see why an Exception should only be logged here, this especially
 breaks when the exception is thrown due to a validation error. Because
 the calls to the *marshal* operation will throw an MarshalException in
 that case which would be caught by the catch block. In other cases where
 no object factory is used but JAXB classes with XmlRootElement
 Annotations or JAXBElements are used the MarshalExceptions will be
 thrown and the doMarshal method will be left.

I already created a PR on github for this: [PR2800 |https://github.com/apache/camel/pull/2800]

*Workaround:* If someone is experiencing this problem the first thing to check whether is it possible to make the JAXB Class have the @XmlRootElement Annotation. In that case you won't experience any problems. 
Especially when the classes are generated from XSD you may either use an separate binding to add the annotation or you may create the element definitions in the xsd using an anonymous inline complexType/simpleType that extends your desired type. 

In my case the @XmlRootElement annotation was not added because i used the definition as follows:
{code:xml}
<element name=""myElement"" type=""tns:myElementType""/>
<complexType name=""myElementType"">
<!-- your type definition here -->
</complexType>
{code}
instead you should write
{code:xml}
<element name=""myElement>
  <complexType>
   <!-- your type definition here -->
  </complexType>
</element>
{code}",,michael.lueck,,,,,,"oscerd commented on pull request #2800: [CAMEL-13282] Can't use validation of JaxbDataFormat of non Root JAXB Elements
URL: https://github.com/apache/camel/pull/2800
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Mar/19 12:57;githubbot;600",,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-03-04 08:12:47.0,,,,,,,,,,,"0|z00ahk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-box - Standard Authentication starts failing,CAMEL-13279,13219201,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tadayosi,tadayosi,tadayosi,04/Mar/19 04:03,08/Mar/19 05:49,13/Jul/23 08:32,08/Mar/19 05:49,2.23.1,3.0.0-M1,,,,,,,,,,3.0.0,3.0.0-M2,,,,,camel-box,,,,0,,,,,"Camel Box standard authentication starts failing with the following error stacktrace:
{code}
org.apache.camel.RuntimeCamelException: Box API connection failed: elementName=[form] attributeName=[name] attributeValue=[consent_form]
	at org.apache.camel.component.box.internal.BoxConnectionHelper.createStandardAuthenticatedConnection(BoxConnectionHelper.java:212)
	at org.apache.camel.component.box.internal.BoxConnectionHelper.createConnection(BoxConnectionHelper.java:91)
	at org.apache.camel.component.box.BoxComponent.doStart(BoxComponent.java:85)
	at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:72)
	at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3709)
	at org.apache.camel.impl.DefaultCamelContext.startServices(DefaultCamelContext.java:3715)
	at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3437)
	at org.apache.camel.impl.DefaultCamelContext$4.call(DefaultCamelContext.java:3248)
	at org.apache.camel.impl.DefaultCamelContext$4.call(DefaultCamelContext.java:3244)
	at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:3267)
	at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:3244)
	at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:72)
	at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:3160)
	at org.apache.camel.test.junit4.CamelTestSupport.startCamelContext(CamelTestSupport.java:760)
	at org.apache.camel.test.junit4.CamelTestSupport.doSetUp(CamelTestSupport.java:392)
	at org.apache.camel.test.junit4.CamelTestSupport.setUp(CamelTestSupport.java:281)
	[...]
Caused by: com.gargoylesoftware.htmlunit.ElementNotFoundException: elementName=[form] attributeName=[name] attributeValue=[consent_form]
	at com.gargoylesoftware.htmlunit.html.HtmlPage.getFormByName(HtmlPage.java:643)
	at org.apache.camel.component.box.internal.BoxConnectionHelper.createStandardAuthenticatedConnection(BoxConnectionHelper.java:170)
	... 49 more
{code}

Camel Box implements the 3-legged auth using HTTP scraping for the 1st leg to acquire the auth code and it appears the auth dialog at Box.com has been changed.",,jondruse,tadayosi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13284,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 08 05:49:22 UTC 2019,,,,,,,,,,,"0|z00aa8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Mar/19 15:38;jondruse;Problem is fixed in improvement [CAMEL-13279|https://issues.apache.org/jira/browse/CAMEL-13279] ([PR|https://github.com/apache/camel/pull/2803]);;;","08/Mar/19 05:49;tadayosi;[~jondruse] Yeah it's fixed. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix log configuration for karaf integration tests,CAMEL-13278,13218894,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,gnodet,gnodet,gnodet,01/Mar/19 14:18,01/Mar/19 19:36,13/Jul/23 08:32,01/Mar/19 19:36,,,,,,,,,,,,3.0.0-M2,,,,,,tests,,,,0,,,,,,,gnodet,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13277,,,,,,,,,,,,,,KARAF-6180,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 01 19:36:54 UTC 2019,,,,,,,,,,,"0|z008e0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Mar/19 19:36;gnodet;https://github.com/apache/camel/commit/48bd797518fe091b7ac7274a62d1024daa78fa0e;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove warnings about annotations when validating karaf features,CAMEL-13276,13218886,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,gnodet,gnodet,gnodet,01/Mar/19 13:10,01/Mar/19 19:37,13/Jul/23 08:32,01/Mar/19 13:46,,,,,,,,,,,,3.0.0-M2,,,,,,,,,,0,,,,,,,gnodet,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13277,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 01 19:37:12 UTC 2019,,,,,,,,,,,"0|z008c8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Mar/19 13:16;gnodet;We need to force the use of bndlib 3.5.0 when validating the features.
The workaround can be removed when bndlib 4.2.0 is released.;;;","01/Mar/19 19:37;gnodet;https://github.com/apache/camel/commit/7e58725067763ef8e8f251f5ff81e4e82d922107;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
File producer - Issue with toD when using moveExisting,CAMEL-13272,13218401,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,27/Feb/19 17:12,01/Mar/19 13:15,13/Jul/23 08:32,28/Feb/19 06:08,,,,,,,,,,,,3.0.0,3.0.0-M2,,,,,camel-core,,,,0,,,,,"See SO
https://stackoverflow.com/questions/54890566/camel-file-component-create-a-file-and-if-already-exist-move-it-and-renamed-i/54910417#54910417

And for the solution/workaround to use to instead of toD",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13254,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 27 17:41:34 UTC 2019,,,,,,,,,,,"0|z005cw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Feb/19 17:41;davsclaus;Okay I have reproduced this and its a bit more tricky to solve, the same issue would be for the ftp component as they extend file.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-rabbitmq - x-death header gets lost because of incorrect header value validation,CAMEL-13270,13218366,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,pbillen,pbillen,27/Feb/19 15:01,18/Jan/20 23:22,13/Jul/23 08:32,04/Oct/19 14:10,2.23.0,,,,,,,,,,,3.0.0,3.0.0.RC3,,,,,camel-rabbitmq,,,,0,,,,,"In `RabbitMQMessageConverter.java`, some kind of header value validation is done:


{code:java}
    private Object getValidRabbitMQHeaderValue(Object headerValue) {
        if (headerValue instanceof String) {
            return headerValue;
        } else if (headerValue instanceof Number) {
            return headerValue;
        } else if (headerValue instanceof Boolean) {
            return headerValue;
        } else if (headerValue instanceof Date) {
            return headerValue;
        } else if (headerValue instanceof byte[]) {
            return headerValue;
        } else if (headerValue instanceof LongString) {
            return headerValue;
        }

        return null;
    }
{code}

While this is correct for the listed typed, this is incomplete. An example of this is the `x-death` header, as explained on https://www.rabbitmq.com/dlx.html#effects. This header is basically a `List<Map<String,Object>>`.

If a message with such header is consumed and then propagated to another queue, the header will be lost. An example use case is consuming a dead-letter queue and propagating the messages to another queue, possible after some delay, until the `count` field in the `x-death` header reached a certain threshold.

I am happy to provide a self-contained example if this would be helpful.",,acosentino,davsclaus,pbillen,ramu11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jan 18 23:22:05 UTC 2020,,,,,,,,,,,"0|z0055c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Feb/19 15:03;acosentino;You're more than welcome to contribute a PR with a fix and a test for this;;;","13/Mar/19 02:11;ramu11;could you please attach a simple test case to reproduce the issue;;;","06/Aug/19 19:14;davsclaus;Maybe we should just accept any header starting with `x-` and dont care about the type;;;","18/Jan/20 23:22;pbillen;Thank your for fixing. I had the opportunity to try this out, and the fix works great! The `x-death` header is now preserved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel stops consuming queue after restart of RabbitMQ broker,CAMEL-13267,13218311,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,pbillen,pbillen,27/Feb/19 11:00,06/Aug/19 19:12,13/Jul/23 08:32,06/Aug/19 19:12,2.23.0,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-rabbitmq,,,,0,,,,,"I am consuming a RabbitMQ queue as following:

 
{code:java}
from(""rabbitmq://localhost:5672?username=test&password=test&declare=false&queue=q&autoAck=false&threadPoolSize=1&exclusiveConsumer=true"")
   .to(""log:receive"");{code}
 

When I restart the RabbitMQ broker, no messages are longer received in the log handler.

 

According the management interface, all pending messages are in UNACKED state. This means that they are transmitted to the consumer, but not acknowledged. In other words, Camel was able to restore the connection after the restart, but fails to deliver to the log handler and acknowledge them afterwards.

 

I did not test this, but I believe the consumer will eventually crash due to OOM.

 

+*example*+

 

Please find a self-contained example on [https://github.com/pbillen/playground-camel-13267|https://github.com/pbillen/playground-camel-13267].You need a (local) Docker daemon to run this. Use it as following:

 
 # Start with `mvn clean install -U`.
 # You notice in the logging that every 500ms, a message is sent and received. You can also log into the administrator interface on [http://localhost:15672|http://localhost:15672/] with login/password `test`. You will see the message pass through every 500ms. Great!
 # Now restart the RabbitMQ broker. Typically, find the container identifier with `docker ps` and then execute `docker restart <identifier>`.
 # After restart, you notice that every 500ms a message is sent, but not received. You can also log into the administrator interface and see that all messages are into the UNACKED state.",,davsclaus,pbillen,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 06 19:10:53 UTC 2019,,,,,,,,,,,"0|z004tc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Feb/19 13:07;zregvart;[~pbillen] have you noticed the {{automaticRecoveryEnabled}} endpoint property? Take look at the [component documentation|https://github.com/apache/camel/blob/master/components/camel-rabbitmq/src/main/docs/rabbitmq-component.adoc] for other automatic recovery options.;;;","27/Feb/19 13:16;pbillen;[~zregvart] I added an example to the issue description. I will now look into the auto-recovery option. Though, I believe the connection and consumer is already being recovered, as all messages after the restart are into UNACKED state. This means that the messages have been delivered successfully to the consumer, but not yet acknowledged (which makes sense, because they do not seem to be propagated to the log handler, as described in the issue).

Thanks for feedback! I will let you know if auto recovery helps here.;;;","27/Feb/19 13:27;pbillen;[~zregvart] Right, everything seems to work fine with `automaticRecoveryEnabled` enabled! This is great, because it solves my use case. Thanks a lot!

That said, I am wondering what is happening with `automaticRecoveryEnabled` disabled, which is the default. As explained, all messages are in UNACKED state, so they are at consumer side. Where are they? Are they queued? Until when? Don't we risk going OOM here?;;;","28/Feb/19 16:31;zregvart;[~pbillen] I guess we should set the {{automaticRecoveryEnabled}} to true by default, we're explicitly setting it from {{null}} to {{false}} (I think because of a change made in CAMEL-12111). Pull request for that would be very welcome.

I don't have the answers to your other questions, and I don't think Apache Camel community is not the place to ask those, perhaps reach out to RabbitMQ community as Camel is simply utilizing the AMQP client from RabbitMQ.;;;","06/Aug/19 19:10;davsclaus;Lets enable that option out of the box in camel 3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Header filtering in HTTP producers from RestProducerFactory filters IN instead of OUT headers,CAMEL-13249,13217489,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,22/Feb/19 17:00,25/Feb/19 15:54,13/Jul/23 08:32,25/Feb/19 15:53,2.18.0,,,,,,,,,,,2.23.2,2.24.0,3.0.0,,,,camel-http-common,,,,0,,,,,"{{HttpRestHeaderFilterStrategy}} is used by HTTP producers and it delegates to {{applyFilterToExternalHeaders}} from superclass, which filters in the {{IN}} direction instead of in the {{OUT}} direction.

This leads to an issue when HTTP consumer is followed by a HTTP producer created from the {{RestProducerFactory}} implementation in that the HTTP headers that are meant to be filtered out are passed on to the HTTP service being invoked.

These headers include {{Host}} header which is used for virtual hosting and will most likely fail the request with 404 or 503 HTTP status.",,zregvart,,,,,,"zregvart commented on pull request #2790: CAMEL-13249: invoke `applyFilterToCamelHeaders` instead of `applyFilterToExternalHeaders`
URL: https://github.com/apache/camel/pull/2790
 
 
   This changes the invocation in `HttpRestHeaderFilterStrategy::applyFilterToCamelHeaders` to delegate to `super::applyFilterToCamelHeaders` instead of `super::applyFilterToExternalHeaders`.
   
   Also adds integration test demonstrating the issue and refactors `HttpRestHeaderFilterStrategyTest` from `components/camel-http4` to `/components/camel-http-common` as it doesn't depend on `http4` component and tests a class in `camel-http-common`.
   
   @davsclaus @oscerd can you take a look, this seems right to me, but the use of `applyFilterToExternalHeaders` vs `applyFilterToCamelHeaders` seems intentional so I could be missing something.
   
   If this change gets approved I'll backport it to `2.23.x` and forward port it to `master`.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/19 17:07;githubbot;600","zregvart commented on pull request #2790: CAMEL-13249: invoke `applyFilterToCamelHeaders` instead of `applyFilterToExternalHeaders`
URL: https://github.com/apache/camel/pull/2790
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 15:54;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-02-22 17:00:23.0,,,,,,,,,,,"0|yi1a40:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RabbitMq producer not always honoring EXCHANGE_OVERRIDE_NAME header,CAMEL-13245,13217259,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,pchesneau,pchesneau,21/Feb/19 16:55,18/May/20 16:18,13/Jul/23 08:32,04/Oct/19 14:00,2.23.1,,,,,,,,,,,3.0.0,3.0.0.RC2,,,,,camel-rabbitmq,,,,0,,,,,"The RabbitMqProducer and RabbitMqPublisher do not honor the EXCHANGE_OVERRIDE_NAME header when used for a routing Key not starting with

{color:#333333}RabbitMQConstants.RABBITMQ_DIRECT_REPLY_ROUTING_KEY.{color}

{color:#660e7a}{color:#333333}For example :{color} {color}

{color:#333333}{{from(""stream:in?promptMessage=Enter message payload: "").}}{{setHeader(RabbitMQConstants.EXCHANGE_OVERRIDE_NAME,constant("""")).setHeader(RabbitMQConstants.ROUTING_KEY,constant(""test""))}}
{{.to(""rabbitmq:uselessExchange"");}}{color}

{color:#333333}will publish the message with the routing key ""test"" on the ""uselessExchange"" exchange instead of the expected """" (default exchange).{color}

{color:#333333}This seems to come from a conflict between : {color}
 * {color:#333333}_org.apache.camel.component.rabbitmq.RabbitMQProducer#processInOnly_ which extract and remove the exchange override name, then pass it to _org.apache.camel.component.rabbitmq.RabbitMQProducer#basicPublish_ where it is not used.
{color}
 * {color:#333333}_org.apache.camel.component.rabbitmq.RabbitMQMessagePublisher#publishToRabbit_MQ (that is called by the previous function through the ChannelCallback) where the Exchange override name is once again removed (though it is null now, since it has been removed previously){color}

{color:#333333}Note that when the routing key starts with RABBITMQ_DIRECT_REPLY_ROUTING_KEY the behavior is almost correct thanks to org.apache.camel.component.rabbitmq.RabbitMQMessagePublisher#resolveMessageFrom{color}

{color:#333333}which overrides the exchange_override_name with the default exchange.{color}

{color:#333333}I would gladly create a PR or a patch with a correction, but I'm not sure of the intended behavior ? {color}

{color:#333333}Should we: {color}
 * {color:#333333} do not extract the EXCHANGE_OVERRIDE_NAME in the _org.apache.camel.component.rabbitmq.RabbitMQProducer#processInOnly_{color}
 * {color:#333333}Extract it but make sure it goes all the way down to the _org.apache.camel.component.rabbitmq.RabbitMQMessagePublisher#RabbitMQMessagePublisher_ constructor where it could be saved and reused later by the _org.apache.camel.component.rabbitmq.RabbitMQMessagePublisher#publishToRabbitMQ_{color}

{color:#333333}In my Opinion the best solution would be to remove the extraction of the header in {color}

{color:#333333}_org.apache.camel.component.rabbitmq.RabbitMQProducer#processInOnly (and org.apache.camel.component.rabbitmq.RabbitMQProducer#processInOut)_ 
{color}

 ",,davsclaus,pchesneau,ramu11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 04 14:00:49 UTC 2019,,,,,,,,,,,"0|yi18p4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Mar/19 02:14;ramu11;Hi,

please attach a simple test case to show the issue. we will look into it;;;","04/Oct/19 13:57;davsclaus;The header need to be extracted so its not propagated over rabbitmq, and may be used again on ""the other side"" if Camel is processing the message there too. 
;;;","04/Oct/19 14:00;davsclaus;This has been fixed by
https://github.com/apache/camel/commit/44d243ecb1c77530d70d56cc76caae2491498d48;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing backport-util-concurrent-version property defined in the parent pom.xml,CAMEL-13241,13217094,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,xldai,xldai,21/Feb/19 06:28,21/Feb/19 06:39,13/Jul/23 08:32,21/Feb/19 06:39,2.23.1,,,,,,,,,,,2.23.2,2.24.0,,,,,karaf,,,,0,,,,,"This property is somehow removed from the parent pom.xml

{code}
<backport-util-concurrent-version>3.1</backport-util-concurrent-version>
{code}

As consequence, we have wrong camel-ical feature generated from the apache-camel-2.23.1-features.xml

{code}
<feature name=""camel-ical"" version=""2.23.1"" resolver=""(obr)"" start-level=""50"">
    <feature version=""2.23.1"">camel-core</feature>
    <bundle dependency=""true"">mvn:commons-lang/commons-lang/2.6</bundle>
    <bundle dependency=""true"">mvn:commons-codec/commons-codec/1.11</bundle>
    <bundle dependency=""true"">wrap:mvn:backport-util-concurrent/backport-util-concurrent/${backport-util-concurrent-version}$Bundle-SymbolicName=backport-util-concurrent.backport-util-concurrent&Bundle-Version=${backport-util-concurrent-version}</bundle>
    <bundle dependency=""true"">mvn:org.mnode.ical4j/ical4j/1.0.7</bundle>
    <bundle>mvn:org.apache.camel/camel-ical/2.23.1</bundle>
</feature>
{code}

This property come back again after the CAMEL-13002 fixed by Guillaume but only on the master branch. On camel-2.23.x branch it still has to be fixed.",Java 8,xldai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-02-21 06:28:26.0,,,,,,,,,,,"0|yi17og:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mock endpoint - Small glitch in logging excepted failure,CAMEL-13236,13216890,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,20/Feb/19 11:39,21/Feb/19 11:52,13/Jul/23 08:32,21/Feb/19 11:52,2.22.3,2.23.1,,,,,,,,,,2.23.2,2.24.0,3.0.0,,,,camel-core,,,,0,,,,,"We do
log.info(""Caught expected failure: {}"", e);

You cannot do {} with an exception.",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 20 11:39:50 UTC 2019,,,,,,,,,,,"0|yi16fc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Feb/19 11:39;davsclaus;You end up with
{code}
2019-02-20 12:37:53,662 [main           ] INFO  MockEndpoint                   - Caught expected failure: {}
java.lang.AssertionError: Gap detected: last: 2 current: 4
	at org.junit.Assert.fail(Assert.java:88)
	at camelinaction.GapJava8Test.lambda$null$3(GapJava8Test.java:86)
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-cdi - Configuring properties component via @Produces seems to not working,CAMEL-13235,13216871,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,20/Feb/19 10:21,29/Oct/19 08:07,13/Jul/23 08:32,29/Oct/19 08:07,3.0.0,,,,,,,,,,,3.0.0,,,,,,camel-cdi,,,,0,,,,,"The chapter7/cdi example with the CiA2 source code fails. There is a TODO added as workaround in the camel3m1 branch.

https://github.com/camelinaction/camelinaction2/tree/camel3m1/chapter7/cdi",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 29 08:07:45 UTC 2019,,,,,,,,,,,"0|yi16b4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Oct/19 08:07;davsclaus;Updated the example;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error starting SQS consumer due to config option missing that's required for producer only,CAMEL-13230,13216773,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,strelok1,strelok1,19/Feb/19 23:38,20/Feb/19 14:47,13/Jul/23 08:32,20/Feb/19 14:21,2.21.0,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,,,camel-aws,,,,0,,,,,"Currently if you consume from an SQS queue that is a FIFO queue and do not specify a *messageGroupIdStrategy* option the consumer fails to start with an error:

{{Failed to resolve endpoint: aws-sqs://queue.name.fifo?accessKey=xxx&maxMessagesPerPoll=1&region=AP_SOUTHEAST_2&secretKey=xxx&visibilityTimeout=60 due to: messageGroupIdStrategy must be set for FIFO queues}}

This parameter is used for *producing* only to set the GroupId on the messages sent to the queue and should not be checked as part of general endpoint configuration check. It should be checked in the producer, perhaps in +org.apache.camel.component.aws.sqs.SqsProducer#configureFifoAttributes+ or in the constructor.

 ",,strelok1,,,,,,"strelok1 commented on pull request #2788: CAMEL-13230: Error starting SQS consumer due to config option missing that's required for producer only
URL: https://github.com/apache/camel/pull/2788
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Feb/19 05:04;githubbot;600","oscerd commented on pull request #2788: CAMEL-13230: Error starting SQS consumer due to config option missing that's required for producer only
URL: https://github.com/apache/camel/pull/2788
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Feb/19 14:47;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-02-19 23:38:24.0,,,,,,,,,,,"0|yi15pc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SMPP: Host, port and systemid component configuration is always overridden by URI configuration",CAMEL-13211,13216220,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,pascalschumacher,pascalschumacher,pascalschumacher,17/Feb/19 09:43,17/Feb/19 21:09,13/Jul/23 08:32,17/Feb/19 21:09,2.23.1,,,,,,,,,,,2.23.2,2.24.0,3.x,,,,camel-smpp,,,,0,,,,,"It is not possible to configure host, port and systemId at component level (e.g. by using Spring Boot component configuration properties), because camel-smpp always uses the values from the URI, even if the values are not present.

",,pascalschumacher,,,,,,"PascalSchumacher commented on pull request #2783: CAMEL-13211 - SMPP: Host, port and systemid component configuration i…
URL: https://github.com/apache/camel/pull/2783
 
 
   …s always overridden by URI configuration
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/19 09:47;githubbot;600","asfgit commented on pull request #2783: CAMEL-13211 - SMPP: Host, port and systemid component configuration i…
URL: https://github.com/apache/camel/pull/2783
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/19 20:57;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-02-17 09:43:57.0,,,,,,,,,,,"0|yi12bs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-salesfoce ignores resolveProperty Placeholders ,CAMEL-13196,13215556,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,lb,lb,lb,13/Feb/19 17:55,01/Mar/19 13:39,13/Jul/23 08:32,13/Feb/19 18:22,,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,camel-salesforce,,,,0,,,,,camel-salesforce ignores the global option resolvePropertyPlaceholders as SalesforceComponent.doStart does not invoke the parent method.,,lb,,,,,,"lburgazzoli commented on pull request #2769: CAMEL-13196: camel-salesfoce ignores resolveProperty Placeholders
URL: https://github.com/apache/camel/pull/2769
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Feb/19 18:22;githubbot;600",,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-02-13 17:55:57.0,,,,,,,,,,,"0|yi0y9c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Path resolution in rest-swagger fails to include the whole path,CAMEL-13192,13215502,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,zregvart,zregvart,zregvart,13/Feb/19 13:05,07/May/19 11:55,13/Jul/23 08:32,13/Feb/19 14:22,2.21.0,2.21.1,2.21.2,2.21.3,2.21.4,2.22.0,2.22.1,2.22.2,2.22.3,2.23.0,2.23.1,3.0.0,,,,,,,,,,0,,,,,"When trying to resolve paths from a given OpenAPI 2.0 document the trailing part of the path after the last path parameter placeholder is lost.

For example path with:
{code:java}
/path/{param}/will/be/lost{code}
Is resolved as:
{code:java}
/path/{param}{code}",,tmielke,zregvart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-02-13 13:05:17.0,,,,,,,,,,,"0|yi0xxc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URISupport sanitizeUri don't hide complete password if password contains colon,CAMEL-13191,13215474,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,Pieczewski,Pieczewski,13/Feb/19 10:34,15/Feb/19 06:47,13/Jul/23 08:32,15/Feb/19 06:47,2.23.1,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,,,camel-core,,,,0,,,,,"sanitizedUri don't hide the complete password if the password contains a colon.

e.g.

camel route URI is ""sftp://user:hidden:password@target.test"" where the password is ""hidden:password"" 

the sanitizedUri method will only hide the last part of password (sftp://user:hidden:xxxxxx@target.test)

{code:java|title=UnitTest}
import org.apache.camel.util.URISupport;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

class UriSupportTest {

  @Test
  void testURISanitizeUri() {
    var sanitizedUri = URISupport.sanitizeUri(""sftp://user:hidden:Password@target.test"");
    Assertions.assertEquals(""sftp://user:xxxxxx@target.test"", sanitizedUri);
  }

}

{code}
 ",,Pieczewski,,,,,,"drmaniac commented on pull request #2766: CAMEL-13191: Fix Regex Pattern to hide passwords in URI 
URL: https://github.com/apache/camel/pull/2766
 
 
   Created Ticket https://issues.apache.org/jira/browse/CAMEL-13191
   For this issue I have created this minor patch. 
   
   The pattern stops colon search after the first colon, so the sanitizeUri method will hide the complete password part. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Feb/19 14:27;githubbot;600","davsclaus commented on pull request #2766: CAMEL-13191: Fix Regex Pattern to hide passwords in URI 
URL: https://github.com/apache/camel/pull/2766
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/19 04:44;githubbot;600","drmaniac commented on pull request #2771: CAMEL-13191: Fix Regex Pattern to hide passwords in URI
URL: https://github.com/apache/camel/pull/2771
 
 
   Backport from 3.x to 2.x
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/19 12:15;githubbot;600","oscerd commented on pull request #2771: CAMEL-13191: Fix Regex Pattern to hide passwords in URI
URL: https://github.com/apache/camel/pull/2771
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/19 14:58;githubbot;600","drmaniac commented on pull request #2774: CAMEL-13191: Fix Regex Pattern to hide passwords in URI
URL: https://github.com/apache/camel/pull/2774
 
 
   Backport from 3.x to 2.22.x
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/19 15:30;githubbot;600","drmaniac commented on pull request #2775: CAMEL-13191: Fix Regex Pattern to hide passwords in URI
URL: https://github.com/apache/camel/pull/2775
 
 
   Backport from 3.x to 2.23.x
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/19 15:31;githubbot;600","oscerd commented on pull request #2775: CAMEL-13191: Fix Regex Pattern to hide passwords in URI
URL: https://github.com/apache/camel/pull/2775
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/19 06:24;githubbot;600","oscerd commented on pull request #2774: CAMEL-13191: Fix Regex Pattern to hide passwords in URI
URL: https://github.com/apache/camel/pull/2774
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/19 06:46;githubbot;600",,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 13 14:27:43 UTC 2019,,,,,,,,,,,"0|yi0xr4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Feb/19 12:29;Pieczewski;Worst case scenario is if the colon is at the end of the password, than it will only append the ''xxxxxx"" -> clear password will be logged. 

 

e.g.

uri: sftp://user:hidden:Password:@target.test

password: ""hidden:Password:""

log -> sftp://user:hidden:Password:xxxxxx@target.test;;;","13/Feb/19 12:44;Pieczewski;To resolve this issue I would suggest following pattern change in URISupport class.

 
{code:java}
private static final Pattern USERINFO_PASSWORD = Pattern.compile(""(.*://.*?:)(.*)(@)"");
{code}
 ;;;","13/Feb/19 14:27;Pieczewski;Create PullRequest for this change 

https://github.com/apache/camel/pull/2766;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-linkedin - IllegalArgumentException: Error authorizing application during linkedin authentication,CAMEL-13179,13215004,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,jondruse,jondruse,11/Feb/19 13:59,12/Feb/19 14:35,13/Jul/23 08:32,12/Feb/19 14:35,2.23.1,,,,,,,,,,,2.23.2,2.24.0,3.0.0,,,,camel-linkedin,,,,0,,,,,"There is a problem during authentication to linkedin. Which ends with following exception:

{noformat}

java.lang.IllegalArgumentException: Error authorizing application: Error authorizing application:

at org.apache.camel.component.linkedin.api.LinkedInOAuthRequestFilter.getRefreshToken(LinkedInOAuthRequestFilter.java:235)
 at org.apache.camel.component.linkedin.api.LinkedInOAuthRequestFilter.updateOAuthToken(LinkedInOAuthRequestFilter.java:307)
 at org.apache.camel.component.linkedin.api.LinkedInOAuthRequestFilter.<init>(LinkedInOAuthRequestFilter.java:123)
 at org.apache.camel.component.linkedin.api.AbstractResourceIntegrationTest.createOAuthHelper(AbstractResourceIntegrationTest.java:102)
 at org.apache.camel.component.linkedin.api.AbstractResourceIntegrationTest.beforeClass(AbstractResourceIntegrationTest.java:62)
 at org.apache.camel.component.linkedin.api.SearchResourceIntegrationTest.beforeClass(SearchResourceIntegrationTest.java:31)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
 at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
 at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
 at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
 at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
 at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
 at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
 at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: java.lang.IllegalArgumentException: Error authorizing application: 
 at org.apache.camel.component.linkedin.api.LinkedInOAuthRequestFilter.getRefreshToken(LinkedInOAuthRequestFilter.java:189)

{noformat}

How to simulate:
1. add your credentials to src/test/resources/test-options.properties
2. run [camel-linkedin-api]$ mvn clean install -P linkedin-test -Dtest=SearchResourceIntegrationTest",,jondruse,,,,,,"JiriOndrusek commented on pull request #2761: [CAMEL-13179] camel-linkedin - IllegalArgumentException
URL: https://github.com/apache/camel/pull/2761
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-13179
   
   Changes in linkedin authentication has to be reflected in camel component
   (see https://developer.linkedin.com/docs/oauth2)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/19 10:03;githubbot;600","oscerd commented on pull request #2761: [CAMEL-13179] camel-linkedin - IllegalArgumentException
URL: https://github.com/apache/camel/pull/2761
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/19 14:35;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 12 10:04:01 UTC 2019,,,,,,,,,,,"0|yi0uuw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Feb/19 10:04;jondruse;PR: https://github.com/apache/camel/pull/2761;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel yammer component is accessing non-existent page,CAMEL-13176,13214646,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,rnetuka,rnetuka,08/Feb/19 15:19,11/Feb/19 06:04,13/Jul/23 08:32,11/Feb/19 06:04,,,,,,,,,,,,2.24.0,3.0.0,,,,,,,,,0,,,,,"When using camel-yammer component to receive relationships the component is (most likely) trying to access [non-existent page|https://www.yammer.com/api/v1/] and results in returning null.",,rnetuka,,,,,,"rnetuka commented on pull request #2754: [CAMEL-13176] camel yammer component is accessing non-existent page
URL: https://github.com/apache/camel/pull/2754
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-13176
   
   Relationships seem to be removed from Yammer.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/19 15:42;githubbot;600","davsclaus commented on pull request #2754: [CAMEL-13176] camel yammer component is accessing non-existent page
URL: https://github.com/apache/camel/pull/2754
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/19 05:58;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,"08/Feb/19 15:18;rnetuka;reproducer.zip;https://issues.apache.org/jira/secure/attachment/12958072/reproducer.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 08 15:43:34 UTC 2019,,,,,,,,,,,"0|yi0snk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Feb/19 15:20;rnetuka;Yammer API docs seems to be outdated. [https://www.yammer.com/api/v1/relationships.json] is not working anymore. I'm not familiar with Yammer, but according to [https://developer.yammer.com/docs/relationshipsjson] it ""Shows org chart relationships.""

However, org charts are deprecated from May 2018. There doesn't seem to be any replacement for that.
[https://answers.microsoft.com/en-us/msoffice/forum/all/organization-chart-in-yammer/6cd9cb5c-b7f0-456c-a75e-8b845c05f46f];;;","08/Feb/19 15:43;rnetuka;PR: https://github.com/apache/camel/pull/2754;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-restdsl-swagger xml generation can't find required method allowableValues(String),CAMEL-13171,13214556,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,davsclaus,davsclaus,08/Feb/19 08:50,15/Feb/19 08:06,13/Jul/23 08:32,15/Feb/19 08:06,2.23.1,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,,,tooling,,,,0,,,,,"Reported on SO
https://stackoverflow.com/questions/54405868/camel-restdsl-swagger-xml-generation-cant-find-required-method-allowablevalues?noredirect=1#comment95906957_54405868

Look at the provided sample project on github and see if we can reproduce the issue and find out whats the issue is",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-02-08 08:50:05.0,,,,,,,,,,,"0|yi0s3k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Starting Salesforce pushtopic with initialReplayIdMap set to a value will eventually break after 24 hours.,CAMEL-13170,13214472,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,,hnguyen15,hnguyen15,07/Feb/19 21:51,14/Nov/21 09:02,13/Jul/23 08:32,14/Nov/21 09:02,2.23.1,,,,,,,,,,,3.14.0,,,,,,camel-salesforce,,,,0,salesforce,,,,"[~zregvart] [~lb]

In version 2.23.1 when I set initialReplayIdMap to a value when the route starts everything behave like normal and I am fine with the replays. I'm getting an issue every time the route re-subscribes it tries to replay from the map again. The initialReplayIdMap needs to zero out (don't see any code that modifies the initialReplayIdMap) so we can default to -1 so we can wait for new replay ids. Eventually if i leave the route on for over 24 hours it eventually breaks because the replay id 24h time to live and the push topics stops working.

Something must have happened in Salesforce cause I saw the same issue in the salesforce java forcedotcom/emp-connector . The issue was reported and fixed here. 

https://github.com/forcedotcom/EMP-Connector/issues/39

 

 

 

 ",,davsclaus,hnguyen15,jeremyross,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-15233,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Nov 13 18:00:48 UTC 2021,,,,,,,,,,,"0|yi0rkw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Mar/19 22:13;hnguyen15;[~cibsen@e-ma.net] can you assign this to me I have the fix that I can create a pull request for.;;;","12/Mar/19 07:56;davsclaus;Okay I assigned you this ticket. Thanks for contributing to the project.
https://github.com/apache/camel/blob/master/CONTRIBUTING.md;;;","06/Aug/19 18:58;davsclaus;Any update on this?;;;","01/Oct/19 08:44;davsclaus;Are you working on this?;;;","13/Nov/21 18:00;jeremyross;[~hnguyen15] Just pushed a commit for this. Please test with 3.14.0-SNAPSHOT and let me know if this helps.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Underlying File for StreamCache gets deleted too early with direct-vm,CAMEL-13168,13214343,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,siano,siano,siano,07/Feb/19 10:42,07/Feb/19 13:42,13/Jul/23 08:32,07/Feb/19 13:42,2.23.1,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,,,camel-core,,,,0,,,,,"If one route calls a different route via direct-vm endpoint and the second route creates a StreamCache based for a file in the called route but the payload is propagated back to the calling route, this route will not be able to call the file because it is already deleted.

The issue is actually the same as for CAMEL-7787. As the multicast processor the direct-vm processor creates a copy of the exchange and does perform the further processing with this exchange till the route comes back. The stream cache will create a synchronization on this second exchange to delete the file when the exchange is done, but the StreamCache as an entity (then without underlying file) might be handed back to the original exchange.

The fix is actually the same as for CAMEL-7787, set the exchange property Exchange.STREAM_CACHE_UNIT_OF_WORK to the LUW of the initial exchange.

 ",,davsclaus,siano,sms0070,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 07 13:13:13 UTC 2019,,,,,,,,,,,"0|yi0qso:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Feb/19 13:05;davsclaus;We also need this to be fixed on master which has the direct-vm component in the components folder. The unit test are stil in core/camel-core.;;;","07/Feb/19 13:13;siano;Yes, I am working on it. Can the tests in core/camel-core use direct-vm endpoints or do I have to move the test for that?

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileMEPInOutTest fails on case sensitive filesystem,CAMEL-13167,13214314,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,tapiiron,tapiiron,07/Feb/19 06:56,01/Mar/19 13:25,13/Jul/23 08:32,07/Feb/19 07:21,3.0.0,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,tests,,,,0,,,,,"Test fails on case sensitive filesystem (using master branch, currenty camel3):

camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileMEPInOutTest.java

fix diff:

diff --git a/core/camel-core/src/test/java/org/apache/camel/component/file/FileMEPInOutTest.java b/core/camel-core/src/test/java/org/apache/ca
mel/component/file/FileMEPInOutTest.java
index 653eae88e32..3b73132791c 100644
--- a/core/camel-core/src/test/java/org/apache/camel/component/file/FileMEPInOutTest.java
+++ b/core/camel-core/src/test/java/org/apache/camel/component/file/FileMEPInOutTest.java
@@ -32,7 +32,7 @@ public class FileMEPInOutTest extends ContextTestSupport {
         MockEndpoint mock = getMockEndpoint(""mock:result"");
         mock.expectedMessageCount(1);
         mock.expectedBodiesReceived(""Hello World"");
-        mock.expectedFileExists(""target/data/fileMEPInOutTest.txt"", ""Hello World"");
+        mock.expectedFileExists(""target/data/FileMEPInOutTest.txt"", ""Hello World"");

         // request is InOut
         template.requestBodyAndHeader(""direct:in"", ""Hello World"", Exchange.FILE_NAME,
@@ -51,4 +51,4 @@ public class FileMEPInOutTest extends ContextTestSupport {
         };
     }

-}
\ No newline at end of file
+}",Linux with case sensivite filesystem,acosentino,tapiiron,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/19 06:56;tapiiron;FileMepInOutTest-casefix.patch;https://issues.apache.org/jira/secure/attachment/12957859/FileMepInOutTest-casefix.patch",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 07 07:21:38 UTC 2019,,,,,,,Patch Available,,,,"0|yi0qm8:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,"07/Feb/19 07:21;acosentino;Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayBlockingQueueFactory ignores capacity argument,CAMEL-13166,13214281,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,acosentino,bedla,bedla,06/Feb/19 23:56,07/Feb/19 08:30,13/Jul/23 08:32,07/Feb/19 08:29,2.23.1,,,,,,,,,,,2.23.2,2.24.0,3.0.0,,,,camel-core,,,,0,,,,,ArrayBlockingQueueFactory#create(int) uses defaultCapacity instead of passed capacity.,,acosentino,bedla,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/19 23:57;bedla;CAMEL-13166__ArrayBlockingQueueFactoryuses_defaultCapacity_instead_of_passed_capacity.patch;https://issues.apache.org/jira/secure/attachment/12957844/CAMEL-13166__ArrayBlockingQueueFactoryuses_defaultCapacity_instead_of_passed_capacity.patch",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,Thu Feb 07 08:30:01 UTC 2019,,,,,,,Patch Available,,,,"0|yi0qew:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Feb/19 08:30;acosentino;Thanks for the patch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unknown parameter issue on weaving from-with on a REST-DSL route,CAMEL-13162,13213942,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,dmvolod,Rovo,Rovo,05/Feb/19 15:34,19/Mar/19 09:35,13/Jul/23 08:32,19/Mar/19 09:35,2.23.0,2.23.1,,,,,,,,,,2.23.2,2.24.0,3.0.0,3.0.0-M2,,,camel-test,,,,0,,,,,"On attempting to weave a REST-DSL route and replace the route with something different, i.e. {color:#d04437}direct:start{color} seems to be fine in regards to the produced debug XML ...

XML before weaving:
{code:java}
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<route xmlns=""http://camel.apache.org/schema/spring""
       customId=""true""
       id=""apiHeartbeat""
       rest=""true"">
    <from uri=""rest://post:/heartbeat:/%7Bsender%7D?description=Test+description&amp;routeId=apiHeartbeat""/>
    <log id=""log1""
        message=""Received request with payload ${body} and headers: ${headers}""/>
    <to id=""to1"" uri=""mock:done""/>
</route>{code}
XML after weaving:
{code:java}
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<route xmlns=""http://camel.apache.org/schema/spring""
       customId=""true""
       id=""apiHeartbeat""
       rest=""true"">
    <from uri=""direct:start""/>
    <log id=""log1""
        message=""Received request with payload ${body} and headers: ${headers}""/>
    <to id=""to1"" uri=""mock:done""/>
</route>{code}
... though on sending a message via a producerTemplate will result in the following exception:
{code:java}
org.apache.camel.FailedToCreateRouteException: Failed to create route apiHeartbeat: Route(apiHeartbeat)[[From[direct://start?routeId=apiHeartbea... because of Failed to resolve endpoint: direct://start?routeId=apiHeartbeat due to: Failed to resolve endpoint: direct://start?routeId=apiHeartbeat due to: There are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{routeId=apiHeartbeat}]

    at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:217)
    at org.apache.camel.impl.DefaultCamelContext.startRoute(DefaultCamelContext.java:1140)
    at org.apache.camel.model.RouteDefinition.adviceWith(RouteDefinition.java:318)
    at at.erpel.messaginghub.services.unit.routes.api.CamelRouteAdviceTest.testRouteWeaving(CamelRouteAdviceTest.java:69)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
    at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
    at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: direct://start?routeId=apiHeartbeat due to: Failed to resolve endpoint: direct://start?routeId=apiHeartbeat due to: There are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{routeId=apiHeartbeat}]
    at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:753)
    at org.apache.camel.util.CamelContextHelper.getMandatoryEndpoint(CamelContextHelper.java:80)
    at org.apache.camel.model.RouteDefinition.resolveEndpoint(RouteDefinition.java:227)
    at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:116)
    at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:122)
    at org.apache.camel.model.FromDefinition.resolveEndpoint(FromDefinition.java:75)
    at org.apache.camel.impl.DefaultRouteContext.getEndpoint(DefaultRouteContext.java:98)
    at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:1332)
    at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:212)
    ... 33 more
Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: direct://start?routeId=apiHeartbeat due to: There are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{routeId=apiHeartbeat}]
    at org.apache.camel.impl.DefaultComponent.validateParameters(DefaultComponent.java:215)
    at org.apache.camel.impl.DefaultComponent.createEndpoint(DefaultComponent.java:139)
    at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:706)
    ... 41 more{code}
 

A code that reproduces this issue is listed below:
{code:java}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import org.apache.camel.CamelContext;
import org.apache.camel.Exchange;
import org.apache.camel.ProducerTemplate;
import org.apache.camel.builder.AdviceWithRouteBuilder;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.mock.MockEndpoint;
import org.apache.camel.model.ModelCamelContext;
import org.apache.camel.spring.javaconfig.CamelConfiguration;
import org.apache.camel.test.spring.CamelSpringRunner;
import org.apache.camel.test.spring.CamelTestContextBootstrapper;
import org.apache.camel.test.spring.UseAdviceWith;
import org.apache.commons.codec.binary.Base64;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.context.annotation.Configuration;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.test.context.BootstrapWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.support.AnnotationConfigContextLoader;

@RunWith(CamelSpringRunner.class)
@BootstrapWith(CamelTestContextBootstrapper.class)
@ContextConfiguration(
    classes = CamelRouteAdviceTest.Config.class,
    loader = AnnotationConfigContextLoader.class
)
@UseAdviceWith
public class CamelRouteAdviceTest {

  @Configuration
  static class Config extends CamelConfiguration {

    @Override
    public List<RouteBuilder> routes() {
      List<RouteBuilder> routes = new ArrayList<>(1);
      routes.add(new RouteBuilder() {
        @Override
        public void configure() {
          rest(""/heartbeat"")
              .post(""/{sender}"")
              .description(""Test description"")

              .route().routeId(""apiHeartbeat"")
                .log(""Received request with payload ${body} and headers: ${headers}"")
                .to(""mock:done"");
        }
      });
      return routes;
    }
  }

  @Resource
  private CamelContext context;

  @Test
  public void testRouteWeaving() throws Exception {

    // Arrange

    context.getRouteDefinitions().get(0).adviceWith((ModelCamelContext) context,
        new AdviceWithRouteBuilder() {
          @Override
          public void configure() {
            this.replaceFromWith(""direct:start"");
          }
        });

    MockEndpoint doneEndpoint = context.getEndpoint(""mock:done"", MockEndpoint.class);
    doneEndpoint.expectedMessageCount(1);

    String sender = UUID.randomUUID().toString();
    HttpServletRequest request = new MockHttpServletRequest(""PUT"", ""https://localhost:8383/api/v1/heartbeat/"" + sender);
    Map<String, Object> headers = new HashMap<>();
    headers.put(Exchange.HTTP_METHOD, ""PUT"");               // required for check appKey
    headers.put(""sender"", sender);
    headers.put(""Authorization"", ""Basic "" + Base64.encodeBase64String((""test:abcd1234"").getBytes()));
    headers.put(""User-Agent"", ""Apache-HttpClient/4.5.2 (Java/1.8.0_101)"");

    // Act

    ProducerTemplate template = context.createProducerTemplate();
    template.sendBodyAndHeaders(""direct:start"", request, headers);

    // Assert

    doneEndpoint.assertIsSatisfied();
  }
}
{code}
Commenting out {color:#d04437}routeId(""apiHeartbeat""){color} does not solve the problem as here {color:#d04437}route1{color} is taken as the routeId and appended to the endpoint to invoke",,davsclaus,dmvolod,Rovo,,,,"davsclaus commented on pull request #2829: (fix) CAMEL-13162: Fixed rest-dsl advice-with using inlined route wit…
URL: https://github.com/apache/camel/pull/2829
 
 
   …h route id and replacing from should not append routeId as uri parameter.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/19 09:22;githubbot;600","davsclaus commented on pull request #2829: (fix) CAMEL-13162: Fixed rest-dsl advice-with using inlined route wit…
URL: https://github.com/apache/camel/pull/2829
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/19 09:27;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,CAMEL-12908,CAMEL-12943,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 19 09:24:26 UTC 2019,,,,,,,,,,,"0|yi0obs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"05/Feb/19 16:10;dmvolod;This could be regression of CAMEL-12908

Please check the issue with 2.21.x version if it will work, we will look at the related fix.;;;","05/Feb/19 16:44;Rovo;Code runs with Camel 2.21.4 and 2.22.3 if I add a configuration such as
{code:java}
restConfiguration().component(""servlet"");{code}
before the rest route definition, though with 2.23.0 and 2.23.1 the same test fails even with the restConfiguration in place.

It might be related to https://issues.apache.org/jira/browse/CAMEL-12943;;;","05/Feb/19 16:55;dmvolod;Yes, could be, as CAMEL-12943 is also regression of CAMEL-12908

Thanks for reporting, I will look at this issue.;;;","06/Feb/19 10:26;dmvolod;[~davsclaus], what do you think about refactor routeId generation and initiation for REST and common DSLs in 3.0.0?;;;","19/Mar/19 08:37;davsclaus;Taking a look now.

You can use the stub component instead of direct and it should work with the advice.;;;","19/Mar/19 09:23;davsclaus;A fix in this PR
https://github.com/apache/camel/pull/2829;;;","19/Mar/19 09:24;davsclaus;Dmitry, yeah you are welcome to log a JIRA ticket about this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-example-spring-boot-master running error,CAMEL-13154,13213519,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,njiang,njiang,njiang,03/Feb/19 01:25,03/Feb/19 09:08,13/Jul/23 08:32,03/Feb/19 01:40,2.23.0,2.23.1,,,,,,,,,,2.23.2,3.0.0,,,,,,,,,0,,,,,"When running the spring-boot-master, as we use the spring-boot-web-starter by default,  I get the port is ready bound error when I start another instance.

As the example doesn't use the web server anymore, the fix could we just remove the spring-boot-web-starter. 
",,acosentino,njiang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Feb 03 09:03:33 UTC 2019,,,,,,,,,,,"0|yi0lq0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Feb/19 01:40;njiang;Applied the patch into master and camel-2.23.x branches.;;;","03/Feb/19 08:30;acosentino;Can you please backport on camel-2.x branch too? It's the main maintenance branch for 2.x now;;;","03/Feb/19 09:03;njiang;Sure, [~ancosen] I just backported it to camel-2.x branch.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-JBPM KIE-Server extension should use KJAR project classloaded in deployment-scoped CamelContext,CAMEL-13152,13213318,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,swiderski.maciej,mccloud,mccloud,01/Feb/19 14:05,06/Feb/19 10:54,13/Jul/23 08:32,06/Feb/19 10:54,2.23.1,,,,,,,,,,,2.23.2,2.24.0,3.0.0,,,,camel-jbpm,,,,0,,,,,"When a camel-route configured in a KJAR deployment reference a class in the KJAR (for example in an <unmarshal> element), you get a ClassNotFoundException. The problem is that the CamelContext is unable to find the custom class defined in the KJAR.

We should set the Application CamelContext classloader to the KJAR classloader for deployment-scoped (KJAR scoped) CamelContext.",,mccloud,,,,,,"DuncanDoyle commented on pull request #2742: CAMEL-13152: KJAR classloaded now set as CamelContext classloader for…
URL: https://github.com/apache/camel/pull/2742
 
 
   … deployment-scoped contexts.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Feb/19 14:18;githubbot;600","oscerd commented on pull request #2742: CAMEL-13152: KJAR classloaded now set as CamelContext classloader for…
URL: https://github.com/apache/camel/pull/2742
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/19 10:53;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-02-01 14:05:49.0,,,,,,,,,,,"0|yi0khc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ reports wrong number of arguments,CAMEL-13145,13212828,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,tdiesler,tdiesler,30/Jan/19 14:23,01/Mar/19 13:24,13/Jul/23 08:32,04/Feb/19 14:50,,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,camel-activemq,,,,0,,,,,"With a simple route definition like this 

{code}
        CamelContext camelctx = new DefaultCamelContext();
        camelctx.addRoutes(new RouteBuilder() {
            @Override
            public void configure() throws Exception {
                from(""direct:start"").
                transform(simple(""Hello ${body}"")).
                toF(""activemq:queue:%s?connectionFactory=java:/ActiveMQConnectionFactory"", QUEUE_NAME);
            }
        });
{code}

I see

{code}
Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: activemq://queue:testQueue?connectionFactory=java%3A%2FActiveMQConnectionFactory due to: java.lang.IllegalArgumentException: wrong number of arguments
	at org.wildfly.camel.test.activemq.ActiveMQIntegrationTest.testSendMessage(ActiveMQIntegrationTest.java:125)
Caused by: java.lang.RuntimeException: java.lang.IllegalArgumentException: wrong number of arguments
	at org.wildfly.camel.test.activemq.ActiveMQIntegrationTest.testSendMessage(ActiveMQIntegrationTest.java:125)
Caused by: java.lang.IllegalArgumentException: wrong number of arguments
	at org.wildfly.camel.test.activemq.ActiveMQIntegrationTest.testSendMessage(ActiveMQIntegrationTest.java:125)
{code}

CrossRef: https://github.com/wildfly-extras/wildfly-camel/issues/2763",,acosentino,tdiesler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 04 14:50:36 UTC 2019,,,,,,,,,,,"0|yi0hgw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Jan/19 12:38;acosentino;Here there is not so much we can do, because ActiveMQ will need to align to Camel 3, what I think you can do it's override the ActiveMQ component and make it use the IntrospectionSupport from Camel-support in camel 3;;;","04/Feb/19 14:50;acosentino;This should be fixed now that we moved ActiveMQ-Camel into Camel repository with name Camel-ActiveMQ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-kafka - consumer does not respect auto.commit.interval.ms with AutoCommitEnabled=true,CAMEL-13140,13212452,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,avasilevskii,avasilevskii,29/Jan/19 09:27,12/Apr/19 07:11,13/Jul/23 08:32,18/Mar/19 11:54,2.23.0,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,3.0.0-M2,,camel-kafka,,,,0,,,,,"This is probably a side effect of CAMEL-12454: when auto commit enabled is enabled kafka consumer commits offsets as soon as an exchange is complete with no regard to the auto.commit.interval.ms setting, which may cause additional non-balanced load on the kafka cluster (see attached screenshot depicting kafka brokers cpu load right after upgrade from 2.20.3 to 2.23.0).

Here is an example with debugging turned on for org.apache.camel.component.kafka.KafkaConsumer, as you can see Kafka consumer commits every 10-500 ms instead of once per 5 seconds:
{code:java}
2019-01-28 10:46:55.025  INFO 3324 --- [ontext_Worker-3] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [192.168.56.10:9093]
	check.crcs = true
	client.id = 
	connections.max.idle.ms = 540000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = service_new
	heartbeat.interval.ms = 3000
	interceptor.classes = null
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 40000
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = SSL
	send.buffer.bytes = 131072
	session.timeout.ms = 30000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = /usr/files/server.jks
	ssl.keystore.password = [hidden]
	ssl.keystore.type = JCEKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = /usr/files/truststore.jks
	ssl.truststore.password = [hidden]
	ssl.truststore.type = JCEKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2019-01-28 10:46:55.160  INFO 3324 --- [ontext_Worker-3] o.a.kafka.common.utils.AppInfoParser     : Kafka version : 1.0.2
2019-01-28 10:46:55.160  INFO 3324 --- [ontext_Worker-3] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId : 2a121f7b1d402825
2019-01-28 10:46:55.160  INFO 3324 --- [ontext_Worker-3] o.a.camel.spring.SpringCamelContext      : Route: route1 started and consuming from: kafka:topic1,topic2,topic3?brokers=192.168.56.10:9093
2019-01-28 10:46:55.161  INFO 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Subscribing topic1,topic2,topic3-Thread 0 to topic topic1,topic2,topic3
2019-01-28 10:46:55.161  INFO 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Subscribing topic1,topic2,topic3-Thread 0 to topic topic1,topic2,topic3
2019-01-28 10:46:55.313  INFO 3324 --- [uponassignment]] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=service_new] Discovered group coordinator 192.168.56.10:9093 (id: 2147483646 rack: null)
2019-01-28 10:46:55.315  INFO 3324 --- [uponassignment]] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=service_new] Revoking previously assigned partitions []
2019-01-28 10:46:55.316  INFO 3324 --- [uponassignment]] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=service_new] (Re-)joining group
2019-01-28 10:46:58.469  INFO 3324 --- [uponassignment]] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=service_new] Successfully joined group with generation 3
2019-01-28 10:46:58.470  INFO 3324 --- [uponassignment]] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=service_new] Setting newly assigned partitions [topic3-1, topic3-0, topic2-1, topic1-0, topic2-0, topic1-1]
2019-01-28 10:47:24.953 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3221
2019-01-28 10:47:24.953 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3221
2019-01-28 10:47:24.957 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3222
2019-01-28 10:47:24.957 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3222
2019-01-28 10:47:24.964 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3325
2019-01-28 10:47:24.964 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3325
2019-01-28 10:47:25.005 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3223
2019-01-28 10:47:25.005 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3223
2019-01-28 10:47:25.515 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3326
2019-01-28 10:47:25.515 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3326
2019-01-28 10:47:26.005 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3224
2019-01-28 10:47:26.005 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3224
2019-01-28 10:47:26.528 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3327
2019-01-28 10:47:26.528 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3327
2019-01-28 10:47:27.014 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3225
2019-01-28 10:47:27.014 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3225
2019-01-28 10:47:27.512 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3328
2019-01-28 10:47:27.512 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3328
2019-01-28 10:47:28.001 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3226
2019-01-28 10:47:28.001 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3226
2019-01-28 10:47:28.497 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3329
2019-01-28 10:47:28.497 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3329
2019-01-28 10:47:29.024 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3330
2019-01-28 10:47:29.024 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3330
2019-01-28 10:47:29.521 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3227
2019-01-28 10:47:29.521 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3227
2019-01-28 10:47:30.012 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3228
2019-01-28 10:47:30.012 DEBUG 3324 --- [uponassignment]] o.a.camel.component.kafka.KafkaConsumer  : Auto commitSync topic1,topic2,topic3-Thread 0 from topic topic1,topic2,topic3 with offset: 3228
{code}

When downgraded to camel-kafka 2.20.3 commits are done correctly (once every auto.commit.interval.ms) and there are no messages from o.a.camel.component.kafka.KafkaConsumer in the debug log.
Running with debugger showed that this code actually never gets executed in 2.20.3: https://github.com/apache/camel/blob/2.20.x/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConsumer.java#L382 and we seem to rely on the auto-commit feature of the Kafka client itself, not the camel-kafka wrapper.",,avasilevskii,davsclaus,ramu11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-10013,,,,,,,,,"29/Jan/19 09:27;avasilevskii;Kafka_Brokers_CPU.png;https://issues.apache.org/jira/secure/attachment/12956678/Kafka_Brokers_CPU.png",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 18 11:55:31 UTC 2019,,,,,,,,,,,"0|yi0f5s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"15/Mar/19 05:42;ramu11;Hi,
I am looking into this. is it possible to attach  your test case which we can run and reproduce this. there are lot of changes since 20.x version
;;;","18/Mar/19 11:24;davsclaus;Thanks I have reproduced this and work on a fix;;;","18/Mar/19 11:55;davsclaus;Okay so the sync commit happens when the partition has no more data, and camel-kafka consumer is idling.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
File consumer with charset doesn't parse XML,CAMEL-13136,13212261,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tadayosi,tdiesler,tdiesler,28/Jan/19 15:43,15/May/19 06:59,13/Jul/23 08:32,15/May/19 06:59,3.0.0-M1,,,,,,,,,,,3.0.0,3.0.0-M3,,,,,camel-core,,,,0,,,,,"This now shows on camel-3.0

https://issues.jboss.org/browse/ENTESB-10033",,davsclaus,tadayosi,tdiesler,,,,"tadayosi commented on pull request #2910: CAMEL-13136: File consumer with charset doesn't parse XML
URL: https://github.com/apache/camel/pull/2910
 
 
   https://issues.apache.org/jira/browse/CAMEL-13136
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 11:46;githubbot;600","oscerd commented on pull request #2910: CAMEL-13136: File consumer with charset doesn't parse XML
URL: https://github.com/apache/camel/pull/2910
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 06:59;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,CAMEL-13112,,,,,CAMEL-12769,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 14 09:14:11 UTC 2019,,,,,,,,,,,"0|yi0e0g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Jan/19 01:37;tadayosi;Regression of CAMEL-12769 for Camel 3.0?;;;","08/May/19 10:30;tadayosi;[~davsclaus] It appears that this regression has been introduced along with CAMEL-13112, where [EncodingInputStream|https://github.com/apache/camel/blob/camel-3.0.0-M2/components/camel-file/src/main/java/org/apache/camel/component/file/GenericFileConverter.java#L259-L301] has been cloned into {{GenericFileConverter}} and thus [this condition|https://github.com/apache/camel/blob/camel-3.0.0-M2/core/camel-base/src/main/java/org/apache/camel/converter/jaxp/XmlConverter.java#L695] never becomes true in {{XmlConverter}}. I understand that {{camel-file}} can only depend on {{camel-support}}, so what do you think would be the best way to fix it?

Can we make {{camel-file}} depend also on {{camel-util}}?  Or should we instead move {{EncodingInputStream}} out of {{IOHelper}} in {{camel-util}} and into {{camel-support}}?;;;","14/May/19 08:06;davsclaus;camel-support uses camel-util, so it should be there? And you can try to use it from IOHelper instead;;;","14/May/19 09:14;tadayosi;Thanks [~davsclaus]. Yes, you are right. We can directly refer to {{IOHelper}} from {{GenericFileConverter}}. I'm making a pull req that applies the needed changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
uploadBlobBlocks and commitBlobBlockList operations does not work with List ,CAMEL-13132,13212144,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,apoltavtsev,apoltavtsev,28/Jan/19 05:27,28/Jan/19 10:15,13/Jul/23 08:32,28/Jan/19 10:15,2.21.2,,,,,,,,,,,2.21.5,2.22.4,2.23.2,2.24.0,3.0.0,,camel-azure,,,,0,,,,,"This is problematic code on 2.21.2:

[https://github.com/apache/camel/blob/release/2.21.2/components/camel-azure/src/main/java/org/apache/camel/component/azure/blob/BlobServiceProducer.java#L160]

the same issue for ""commitBlobBlockList"": 

[https://github.com/apache/camel/blob/release/2.21.2/components/camel-azure/src/main/java/org/apache/camel/component/azure/blob/BlobServiceProducer.java#L192]

 

it is necessary to replace it by ""blobBlocks = (List<BlobBlock>)object;"" and by ""blockEntries = (List<BlockEntry>)object;"" correspondingly

 

In master problematic code is more strange, but can be resolved in the same way:

[https://github.com/apache/camel/blob/master/components/camel-azure/src/main/java/org/apache/camel/component/azure/blob/BlobServiceProducer.java#156]

and the same issue for ""commitBlobBlockList"": 

[https://github.com/apache/camel/blob/master/components/camel-azure/src/main/java/org/apache/camel/component/azure/blob/BlobServiceProducer.java#L188]

 

 

 ",,apoltavtsev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-28 05:27:19.0,,,,,,,,,,,"0|yi0dag:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot install camel-jms Karaf feature,CAMEL-13128,13212005,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,gnodet,acosentino,acosentino,26/Jan/19 11:52,01/Mar/19 13:29,13/Jul/23 08:32,28/Jan/19 13:51,3.0.0,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,karaf,,,,0,,,,,"by installing on camel-jms
{code:java}
karaf@root()> feature:repo-add file:////home/oscerd/.m2/repository/org/apache/camel/karaf/apache-camel/3.0.0-SNAPSHOT/apache-camel-3.0.0-SNAPSHOT-features.xml
Adding feature url file:////home/oscerd/.m2/repository/org/apache/camel/karaf/apache-camel/3.0.0-SNAPSHOT/apache-camel-3.0.0-SNAPSHOT-features.xml
karaf@root()> feature:install -v camel-jms
Adding features: camel-jms/[3.0.0.SNAPSHOT,3.0.0.SNAPSHOT]
Changes to perform:
Region: root
Bundles to install:
mvn:com.github.ben-manes.caffeine/caffeine/2.6.2
mvn:org.apache.camel/camel-api/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-base/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-browse/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-commands-core/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-controlbus/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-core/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-dataformat/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-direct/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-directvm/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-file/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-jms/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-language/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-log/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-management-api/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-management-impl/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-properties/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-ref/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-saga/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-scheduler/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-seda/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-stub/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-support/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-timer/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-util/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-validator/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-vm/3.0.0-SNAPSHOT
mvn:org.apache.camel/json-simple-ordered/3.0.0-SNAPSHOT
mvn:org.apache.camel.karaf/camel-karaf-commands/3.0.0-SNAPSHOT
mvn:org.apache.camel/spi-annotations/3.0.0-SNAPSHOT
mvn:commons-pool/commons-pool/1.6
mvn:org.apache.geronimo.specs/geronimo-jms_2.0_spec/1.0-alpha-2
mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.aopalliance/1.0_6
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/2.2.11_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-aop/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-beans/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context-support/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-core/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-expression/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-jms/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-tx/5.1.3.RELEASE_1
mvn:org.codehaus.woodstox/stax2-api/3.1.4
mvn:org.codehaus.woodstox/woodstox-core-asl/4.4.1
Stopping bundles:
org.ops4j.pax.logging.pax-logging-log4j2/1.10.1
Installing bundles:
mvn:com.github.ben-manes.caffeine/caffeine/2.6.2
mvn:org.apache.camel/camel-api/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-base/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-browse/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-commands-core/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-controlbus/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-core/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-dataformat/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-direct/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-directvm/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-file/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-jms/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-language/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-log/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-management-api/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-management-impl/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-properties/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-ref/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-saga/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-scheduler/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-seda/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-stub/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-support/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-timer/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-util/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-validator/3.0.0-SNAPSHOT
mvn:org.apache.camel/camel-vm/3.0.0-SNAPSHOT
mvn:org.apache.camel/json-simple-ordered/3.0.0-SNAPSHOT
mvn:org.apache.camel.karaf/camel-karaf-commands/3.0.0-SNAPSHOT
mvn:org.apache.camel/spi-annotations/3.0.0-SNAPSHOT
mvn:commons-pool/commons-pool/1.6
mvn:org.apache.geronimo.specs/geronimo-jms_2.0_spec/1.0-alpha-2
mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.aopalliance/1.0_6
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/2.2.11_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-aop/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-beans/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context-support/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-core/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-expression/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-jms/5.1.3.RELEASE_1
mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-tx/5.1.3.RELEASE_1
mvn:org.codehaus.woodstox/stax2-api/3.1.4
mvn:org.codehaus.woodstox/woodstox-core-asl/4.4.1
Refreshing bundles:
org.ops4j.pax.logging.pax-logging-log4j2/1.10.1 (Should be wired to: org.apache.geronimo.specs.geronimo-jms_2.0_spec/1.0.0.alpha-2 (through [org.ops4j.pax.logging.pax-logging-log4j2/1.10.1] osgi.wiring.package; resolution:=optional; filter:=""(osgi.wiring.package=javax.jms)""), stax2-api/3.1.4 (through [org.ops4j.pax.logging.pax-logging-log4j2/1.10.1] osgi.wiring.package; resolution:=optional; filter:=""(osgi.wiring.package=org.codehaus.stax2)""))
Starting bundles:
org.ops4j.pax.logging.pax-logging-log4j2/1.10.1
stax2-api/3.1.4
woodstox-core-asl/4.4.1
org.apache.geronimo.specs.geronimo-jta_1.1_spec/1.1.1
org.apache.servicemix.bundles.jaxb-impl/2.2.11.1
org.apache.servicemix.bundles.spring-core/5.1.3.RELEASE_1
org.apache.servicemix.bundles.aopalliance/1.0.0.6
org.apache.servicemix.bundles.spring-beans/5.1.3.RELEASE_1
org.apache.servicemix.bundles.spring-aop/5.1.3.RELEASE_1
org.apache.servicemix.bundles.spring-expression/5.1.3.RELEASE_1
org.apache.servicemix.bundles.spring-context/5.1.3.RELEASE_1
org.apache.servicemix.bundles.spring-tx/5.1.3.RELEASE_1
org.apache.servicemix.bundles.spring-jms/5.1.3.RELEASE_1
org.apache.servicemix.bundles.spring-context-support/5.1.3.RELEASE_1
com.github.ben-manes.caffeine/2.6.2
org.apache.camel.camel-util/3.0.0.SNAPSHOT
org.apache.geronimo.specs.geronimo-jms_2.0_spec/1.0.0.alpha-2
org.apache.camel.camel-management-api/3.0.0.SNAPSHOT
org.apache.camel.spi-annotations/3.0.0.SNAPSHOT
org.apache.camel.camel-jms/3.0.0.SNAPSHOT
org.apache.camel.camel-api/3.0.0.SNAPSHOT
org.apache.camel.camel-support/3.0.0.SNAPSHOT
org.apache.camel.camel-log/3.0.0.SNAPSHOT
org.apache.camel.camel-seda/3.0.0.SNAPSHOT
org.apache.camel.camel-vm/3.0.0.SNAPSHOT
org.apache.camel.camel-properties/3.0.0.SNAPSHOT
org.apache.camel.camel-language/3.0.0.SNAPSHOT
org.apache.camel.json-simple-ordered/3.0.0.SNAPSHOT
org.apache.camel.camel-base/3.0.0.SNAPSHOT
org.apache.camel.camel-direct/3.0.0.SNAPSHOT
org.apache.camel.camel-core/3.0.0.SNAPSHOT
org.apache.camel.camel-management-impl/3.0.0.SNAPSHOT
org.apache.camel.camel-browse/3.0.0.SNAPSHOT
org.apache.camel.camel-validator/3.0.0.SNAPSHOT
org.apache.camel.camel-saga/3.0.0.SNAPSHOT
org.apache.camel.camel-directvm/3.0.0.SNAPSHOT
org.apache.camel.camel-file/3.0.0.SNAPSHOT
org.apache.camel.camel-stub/3.0.0.SNAPSHOT
org.apache.camel.camel-timer/3.0.0.SNAPSHOT
org.apache.camel.camel-controlbus/3.0.0.SNAPSHOT
org.apache.camel.camel-ref/3.0.0.SNAPSHOT
org.apache.commons.pool/1.6.0
org.apache.camel.camel-scheduler/3.0.0.SNAPSHOT
org.apache.camel.camel-dataformat/3.0.0.SNAPSHOT
org.apache.camel.camel-commands-core/3.0.0.SNAPSHOT
org.apache.camel.karaf.camel-karaf-commands/3.0.0.SNAPSHOT
org.apache.karaf.features.internal.util.MultiException: Error restarting bundles:
Activator start error in bundle org.apache.camel.camel-core [51].
at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:1005)
at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1025)
at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$13(FeaturesServiceImpl.java:964)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Suppressed: org.osgi.framework.BundleException: Activator start error in bundle org.apache.camel.camel-core [51].
at org.apache.felix.framework.Felix.activateBundle(Felix.java:2290)
at org.apache.felix.framework.Felix.startBundle(Felix.java:2146)
at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:998)
at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:984)
at org.apache.karaf.features.internal.service.BundleInstallSupportImpl.startBundle(BundleInstallSupportImpl.java:161)
at org.apache.karaf.features.internal.service.FeaturesServiceImpl.startBundle(FeaturesServiceImpl.java:1116)
at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:997)
... 6 more
Caused by: java.lang.NoClassDefFoundError: org/apache/camel/util/ObjectHelper
at org.apache.camel.impl.osgi.Activator$BundleTypeConverterLoader.<init>(Activator.java:386)
at org.apache.camel.impl.osgi.Activator.registerTypeConverterLoader(Activator.java:236)
at org.apache.camel.impl.osgi.Activator.addingBundle(Activator.java:136)
at org.apache.camel.impl.osgi.tracker.BundleTracker$Tracked.customizerAdding(BundleTracker.java:430)
at org.apache.camel.impl.osgi.tracker.AbstractTracked.trackAdding(AbstractTracked.java:260)
at org.apache.camel.impl.osgi.tracker.AbstractTracked.trackInitial(AbstractTracked.java:187)
at org.apache.camel.impl.osgi.tracker.BundleTracker.open(BundleTracker.java:173)
at org.apache.camel.impl.osgi.Activator.start(Activator.java:101)
at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:697)
at org.apache.felix.framework.Felix.activateBundle(Felix.java:2240)
... 12 more
Caused by: java.lang.ClassNotFoundException: org.apache.camel.util.ObjectHelper not found by org.apache.camel.camel-jms [56]
at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1639)
at org.apache.felix.framework.BundleWiringImpl.access$200(BundleWiringImpl.java:80)
at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:2053)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
at org.apache.felix.framework.BundleWiringImpl.getClassByDelegation(BundleWiringImpl.java:1414)
at org.apache.felix.framework.BundleWiringImpl.searchImports(BundleWiringImpl.java:1660)
at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1590)
at org.apache.felix.framework.BundleWiringImpl.access$200(BundleWiringImpl.java:80)
at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:2053)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
... 22 more
Error executing command: Error restarting bundles:
Activator start error in bundle org.apache.camel.camel-core [51].
{code}
 ",,acosentino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-26 11:52:08.0,,,,,,,,,,,"0|yi0cfk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-Fhir-Example-osgi doesn't work,CAMEL-13127,13212004,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,jpoth,acosentino,acosentino,26/Jan/19 11:49,01/Mar/19 13:30,13/Jul/23 08:32,28/Jan/19 09:31,,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,examples,,,,0,,,,,"{code:java}
12:47:27.332 WARN [pipe-install -s mvn:org.apache.camel.example/camel-example-fhir-osgi/3.0.0-SNAPSHOT] Listener caused an exception, will be ignored
java.util.concurrent.ExecutionException: java.lang.NoClassDefFoundError: org/apache/camel/util/concurrent/ThreadPoolRejectedPolicy
at java.util.concurrent.FutureTask.report(FutureTask.java:122) ~[?:?]
at java.util.concurrent.FutureTask.get(FutureTask.java:192) ~[?:?]
at java.util.concurrent.AbstractExecutorService.doInvokeAny(AbstractExecutorService.java:193) ~[?:?]
at java.util.concurrent.AbstractExecutorService.invokeAny(AbstractExecutorService.java:225) ~[?:?]
at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper$4.call(ScheduledExecutorServiceWrapper.java:185) ~[48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper$15.call(ScheduledExecutorServiceWrapper.java:446) ~[48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.utils.threading.RWLock.runReadOperation(RWLock.java:33) ~[48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper.runUnlessShutdown(ScheduledExecutorServiceWrapper.java:443) ~[48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper.invokeAny(ScheduledExecutorServiceWrapper.java:180) ~[48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintEventDispatcher.callListener(BlueprintEventDispatcher.java:188) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintEventDispatcher.callListeners(BlueprintEventDispatcher.java:178) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintEventDispatcher.blueprintEvent(BlueprintEventDispatcher.java:133) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:427) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:278) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:299) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:268) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:264) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:254) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422) [48:org.apache.aries.blueprint.core:1.10.1]
at org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1179) [?:?]
at org.apache.felix.framework.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:730) [?:?]
at org.apache.felix.framework.EventDispatcher.fireBundleEvent(EventDispatcher.java:485) [?:?]
at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4579) [?:?]
at org.apache.felix.framework.Felix.startBundle(Felix.java:2174) [?:?]
at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:998) [?:?]
at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:984) [?:?]
at org.apache.karaf.bundle.command.Install.execute(Install.java:115) [17:org.apache.karaf.bundle.core:4.2.2]
at org.apache.karaf.shell.impl.action.command.ActionCommand.execute(ActionCommand.java:84) [35:org.apache.karaf.shell.core:4.2.2]
at org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:68) [35:org.apache.karaf.shell.core:4.2.2]
at org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:86) [35:org.apache.karaf.shell.core:4.2.2]
at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:599) [35:org.apache.karaf.shell.core:4.2.2]
at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:526) [35:org.apache.karaf.shell.core:4.2.2]
at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:415) [35:org.apache.karaf.shell.core:4.2.2]
at org.apache.felix.gogo.runtime.Pipe.doCall(Pipe.java:416) [35:org.apache.karaf.shell.core:4.2.2]
at org.apache.felix.gogo.runtime.Pipe.call(Pipe.java:229) [35:org.apache.karaf.shell.core:4.2.2]
at org.apache.felix.gogo.runtime.Pipe.call(Pipe.java:59) [35:org.apache.karaf.shell.core:4.2.2]
at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:?]
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:?]
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:?]
at java.lang.Thread.run(Thread.java:748) [?:?]
Caused by: java.lang.NoClassDefFoundError: org/apache/camel/util/concurrent/ThreadPoolRejectedPolicy
at org.apache.camel.spi.ThreadPoolProfile.getRejectedExecutionHandler(ThreadPoolProfile.java:225) ~[?:?]
at org.apache.camel.support.DefaultThreadPoolFactory.newScheduledThreadPool(DefaultThreadPoolFactory.java:100) ~[?:?]
at org.apache.camel.impl.DefaultExecutorServiceManager.newScheduledThreadPool(DefaultExecutorServiceManager.java:242) ~[?:?]
at org.apache.camel.impl.DefaultExecutorServiceManager.newScheduledThreadPool(DefaultExecutorServiceManager.java:266) ~[?:?]
at org.apache.camel.support.DefaultScheduledPollConsumerScheduler.doStart(DefaultScheduledPollConsumerScheduler.java:172) ~[?:?]
at org.apache.camel.support.service.ServiceSupport.start(ServiceSupport.java:86) ~[?:?]
at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:55) ~[?:?]
at org.apache.camel.support.ScheduledPollConsumer.doStart(ScheduledPollConsumer.java:439) ~[?:?]
at org.apache.camel.component.file.GenericFileConsumer.doStart(GenericFileConsumer.java:707) ~[?:?]
at org.apache.camel.support.service.ServiceSupport.start(ServiceSupport.java:86) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.startService(AbstractCamelContext.java:3631) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.doStartOrResumeRouteConsumers(AbstractCamelContext.java:3949) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.doStartRouteConsumers(AbstractCamelContext.java:3884) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.safelyStartRouteServices(AbstractCamelContext.java:3804) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.doStartOrResumeRoutes(AbstractCamelContext.java:3568) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.doStartCamel(AbstractCamelContext.java:3420) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.lambda$doStart$2(AbstractCamelContext.java:3217) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.doWithDefinedClassLoader(AbstractCamelContext.java:3234) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.doStart(AbstractCamelContext.java:3215) ~[?:?]
at org.apache.camel.support.service.ServiceSupport.start(ServiceSupport.java:86) ~[?:?]
at org.apache.camel.impl.AbstractCamelContext.start(AbstractCamelContext.java:3131) ~[?:?]
at org.apache.camel.blueprint.BlueprintCamelContext.start(BlueprintCamelContext.java:251) ~[?:?]
at org.apache.camel.blueprint.BlueprintCamelContext.maybeStart(BlueprintCamelContext.java:293) ~[?:?]
at org.apache.camel.blueprint.BlueprintCamelContext.blueprintEvent(BlueprintCamelContext.java:184) ~[?:?]
at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:190) ~[?:?]
at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:188) ~[?:?]
at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:?]
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:?]
at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:?]
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:?]
at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:?]
at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:?]
at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:?]
... 3 more
{code}",,acosentino,jpoth,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 28 09:31:18 UTC 2019,,,,,,,,,,,"0|yi0cfc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Jan/19 09:31;jpoth;Closed with https://github.com/apache/camel/commit/2c63df2ecfa3f8cdf15bf08febfcad6b720bea01;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Camel-MongoDB: Endpoint shutdown closes mongo connection, killing the connection for everyone",CAMEL-13125,13211827,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,acosentino,acosentino,25/Jan/19 12:58,13/Feb/19 04:59,13/Jul/23 08:32,13/Feb/19 04:59,2.23.1,,,,,,,,,,,2.22.3,2.23.2,2.24.0,3.0.0,,,camel-mongodb,,,,0,,,,,"We have the same situation of CAMEL-13123 on camel-mongodb, even though it has been deprecated",,acosentino,bwesterfield,,,,,"bwesterfield commented on pull request #2757: Camel 2.x : CAMEL-13125
URL: https://github.com/apache/camel/pull/2757
 
 
   CAMEL-13125 : Endpoint shutdown closes mongo connection, killing the connection for everyone.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/19 18:37;githubbot;600","bwesterfield commented on pull request #2758: Camel 2.23.x : CAMEL-13125
URL: https://github.com/apache/camel/pull/2758
 
 
   CAMEL-13125 : Endpoint shutdown closes mongo connection, killing the connection for everyone.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/19 18:39;githubbot;600","oscerd commented on pull request #2758: Camel 2.23.x : CAMEL-13125
URL: https://github.com/apache/camel/pull/2758
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/19 18:40;githubbot;600","oscerd commented on pull request #2757: Camel 2.x : CAMEL-13125
URL: https://github.com/apache/camel/pull/2757
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/19 18:41;githubbot;600","bwesterfield commented on pull request #2763: CAMEL-13125 : Removal of stop method from MongoDbEndpoint
URL: https://github.com/apache/camel/pull/2763
 
 
   CAMEL-13125 : Removal of stop method from MongoDbEndpoint
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/19 14:44;githubbot;600","davsclaus commented on pull request #2763: CAMEL-13125 : Removal of stop method from MongoDbEndpoint
URL: https://github.com/apache/camel/pull/2763
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Feb/19 04:56;githubbot;600",,,,,,,,,,0,3600,,,0,3600,,,,CAMEL-13123,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 12 15:02:08 UTC 2019,,,,,,,,,,,"0|yi0bc0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Feb/19 18:33;bwesterfield;I will take a peek at this one.

 ;;;","11/Feb/19 18:37;acosentino;Thanks. ;;;","11/Feb/19 18:38;acosentino;In case there is already an assignee always add a comment like you did;;;","11/Feb/19 18:40;bwesterfield;Sure thing!  ;;;","11/Feb/19 19:07;bwesterfield;Apologies [~ancosen] I didn't notice that you were the assignee.  ;;;","11/Feb/19 19:09;acosentino;No problem! Contributions are welcome always!;;;","12/Feb/19 07:57;acosentino;[~bwesterfield] can you please do the same for 2.22.x? Thanks;;;","12/Feb/19 14:45;bwesterfield;[~ancosen] : Done - > [https://github.com/apache/camel/pull/2763]

Thank you!;;;","12/Feb/19 14:51;bwesterfield;[~ancosen] : I've also got a branch completed for camel-2.21.x if needed.  Let me know if you want that one PR'd as well.  

Thanks!;;;","12/Feb/19 14:52;acosentino;[~bwesterfield], thanks but 2.21.x is EOL and the last release for that branch has been already released;;;","12/Feb/19 15:02;bwesterfield;[~ancosen] : Sounds good.  Please let me know if there is anything else needed.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Endpoint shutdown closes mongo connection, killing the connection for everyone",CAMEL-13123,13211585,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,PeterN,PeterN,24/Jan/19 15:00,08/Apr/19 10:55,13/Jul/23 08:32,25/Jan/19 08:47,2.23.1,,,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,camel-mongodb3,,,,0,,,,,"[This piece of code in MongoEndpoint|https://github.com/apache/camel/blob/21bb980d29cdb7f09d875f8278fcf1d21f785ea0/components/camel-mongodb3/src/main/java/org/apache/camel/component/mongodb3/MongoDbEndpoint.java#L302] closes the underlying MongoClient object when an Endpoint gets stopped. This is not correct behavior. There most probably are other endpoints using the client and this closes the connection for all of them. So if route1 stops and route2 is using the same MongoClient (from the registry) then route2 just got nuked.",,davsclaus,PeterN,,,,,"tveskrna commented on pull request #2853: [CAMEL-13123] Add test stoping endpoint
URL: https://github.com/apache/camel/pull/2853
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/19 13:19;githubbot;600","tveskrna commented on pull request #2853: [CAMEL-13123] Add test stopping endpoint
URL: https://github.com/apache/camel/pull/2853
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/19 10:20;githubbot;600","tveskrna commented on pull request #2864: [CAMEL-13123] Add test stopping endpoint
URL: https://github.com/apache/camel/pull/2864
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/19 10:40;githubbot;600","oscerd commented on pull request #2864: [CAMEL-13123] Add test stopping endpoint
URL: https://github.com/apache/camel/pull/2864
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/19 10:55;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,CAMEL-13125,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 24 19:00:19 UTC 2019,,,,,,,,,,,"0|yi09u8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Jan/19 15:06;PeterN;A  [pull request|https://github.com/apache/camel/pull/2733] is ready.;;;","24/Jan/19 19:00;davsclaus;Ah thanks, yeah it looks like the lifecycle of the mongodb client is handled outside Camel for this component. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential bug in BeanExpression/HttpMessage,CAMEL-13122,13211575,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,mkirouac,mkirouac,24/Jan/19 14:21,11/Oct/19 07:20,13/Jul/23 08:32,07/Oct/19 08:42,2.23.1,,,,,,,,,,,3.0.0,3.0.0.RC3,,,,,camel-servlet,,,,0,,,,,"I think I found a potential bug when using a bean to set a property if a message is coming through http. I wanted to check here before opening a bug in case I am missing something. It is very similar to the following bug which has already been fixed: [https://stackoverflow.com/questions/40293128/camel-rest-service-throws-exception-when-returning-null/40317432#40317432].

 

The difference is that instead of returning null, an exception is thrown from the bean method. When that happen, I see the same behavior as described in the stackoverflow post above.  I included an example on how to reproduce at the end of this email. Here is what I think happens:

 

Problem starts in BeanExpression:
 1. The exchange is copied, BeanExpression: line 194: Exchange resultExchange = ExchangeHelper.createCopy(exchange, true)
 2. The out body is then retrieved from the exchange, BeanExpression: line 201: result = resultExchange.getOut().getBody();
 3. Since out() is null, the in() message is copied to the out(), this makes a copy of the HttpMessage, which is copied along with the original ServletRequest (which contains a closed stream) DefaultExchange.class line 317.
 4. To copy the message from in to out, the method newInstance() from HttpMessage class is called. HttpMessage line 85
 5. At this point, the new instance of HttpMessage tries to read the stream from the original message which is already closed, IOException.

 

Example just below, I would be expecting the EXCEPTION_CAUGHT to be the RuntimeException I throw but instead it's a RuntimeBeanExpressionException effectively wrapping a IOException.

 
{code:java}
public void configureTestException() {

  restDefinitionV1 = restDefinitionV1

    .get(""/throwException"")

    .route()

     .onException(Exception.class)

       .process(exchange -> {System.out.println(""Caught exception of type: "" + exchange.getProperty(Exchange.EXCEPTION_CAUGHT).getClass());} )

       .handled(true)

     .end()

       .setProperty(""test"").method(new TestBean(), ""throwException"")

     .endRest();

}

               

public static class TestBean {

  public void throwException() {

    throw new RuntimeException(""Excepting this exception to be handled by onException"");

  }

}
{code}
 

I will try to provide an actual unit test shortly.",,bedla,davsclaus,mkirouac,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/19 19:57;bedla;Camel13122Test.java;https://issues.apache.org/jira/secure/attachment/12957957/Camel13122Test.java",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 07 08:42:03 UTC 2019,,,,,,,,,,,"0|yi09s0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Feb/19 19:58;bedla;[~mkirouac] -Could you confirm affected version? I was not able reproduce this in 2.23.1. Attaching passing unit test [^Camel13122Test.java] based on your inputs.-

Now I see, the issue is related to camel-servlet and my unit test used camel-restlet. I was able to reproduce this with Arquillian test.;;;","07/Oct/19 08:42;davsclaus;Fixed by CAMEL-10425;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Route irc->irc cycles the message because of ""irc.target"" header",CAMEL-13121,13211552,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,dmvolod,rnetuka,rnetuka,24/Jan/19 13:34,27/Sep/19 13:46,13/Jul/23 08:32,27/Sep/19 13:46,2.21.0,,,,,,,,,,,2.25.0,3.0.0,3.0.0.RC2,,,,camel-irc,,,,0,,,,,"Configure this route:

from(""irc://priv@localhost:6667/test1"")
 .log(""${headers}"")
 .to(""irc://chan@localhost:6667/test2"");

 

Send private message to user _priv._

 

Expected result:
 The message is routed to user _chan._

 

Actual result:

The message is routed back to user _priv_ and enters an infinite loop

 

Cause:

Inside camel-core Pipeline, the IRC message has still its old target set in its properties.",,acosentino,davsclaus,dmvolod,jondruse,rnetuka,,"JiriOndrusek commented on pull request #3200: [CAMEL-13121] Route irc->irc cycles the message because of irc.target…
URL: https://github.com/apache/camel/pull/3200
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-13121
   
   Added header ""irc.sendTo"", which makes ""irc.target"" read only and removes some unclear behavior as issue describes.
   
   Test are fixed also to work with this change (and also covers it)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Sep/19 12:30;githubbot;600","JiriOndrusek commented on pull request #3204: [CAMEL-13121] Route irc->irc cycles the message because of irc.target…
URL: https://github.com/apache/camel/pull/3204
 
 
   Issue: https://issues.apache.org/jira/browse/CAMEL-13121
   
   master PR: https://github.com/apache/camel/pull/3200
   
   Added header ""irc.sendTo"", which makes ""irc.target"" read only and removes some unclear behavior as issue describes.
   
   Test are fixed to work with this change (and also to cover it)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Sep/19 14:25;githubbot;600","oscerd commented on pull request #3200: [CAMEL-13121] Route irc->irc cycles the message because of irc.target…
URL: https://github.com/apache/camel/pull/3200
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/19 13:42;githubbot;600","oscerd commented on pull request #3204: [CAMEL-13121] Route irc->irc cycles the message because of irc.target…
URL: https://github.com/apache/camel/pull/3204
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/19 13:46;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,CAMEL-14013,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 26 12:32:57 UTC 2019,,,,,,,,,,,"0|yi09mw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Jan/19 14:01;dmvolod;Please ask [https://gitter.im/apache/apache-camel] channel first. Note, that camel-core doesn't know nothing about irc or any other components...and can't be a cause

If not, please submit a complete JUnit test case, but it's a minimal chance that is related to camel-core behavior, not camel-irc;;;","24/Jan/19 14:10;acosentino;We have a camel-irc component and I guess this is a real issue. The problem is probably related on how the stuff is done.;;;","24/Jan/19 14:28;dmvolod;[~ancosen], yes, I agree with you, it's looks like component default behavior and not related to camel-core. The producer takes IrcConstants.IRC_TARGET by default from the header populated by consumer.;;;","24/Jan/19 15:14;rnetuka;The problem is there is field called _target_ in IrcMessage and that field is left intact during routing. This causes the message being sent to the former user when it reaches the SendProcessor.;;;","24/Jan/19 15:24;davsclaus;You can remove that header as a workaround;;;","24/Jan/19 16:03;dmvolod;org.apache.camel.component.irc.it.IrcRouteTest and org.apache.camel.component.irc.it.IrcPrivmsgTest also fails with java.lang.NullPointerException

Need to be checked;;;","25/Jan/19 10:21;rnetuka;[~davsclaus]: I surely can't remove the [target|https://github.com/apache/camel/blob/master/components/camel-irc/src/main/java/org/apache/camel/component/irc/IrcMessage.java#L29] field

 ;;;","25/Jan/19 10:31;dmvolod;[~rnetuka], it looks like not related to message target property. It takes this property from header [https://github.com/apache/camel/blob/e34b4f87d1aecf739c7dd142e480019dfa189848/components/camel-irc/src/main/java/org/apache/camel/component/irc/IrcProducer.java#L45]

I will look at this issue more detail with real test case and server.;;;","25/Jan/19 10:33;davsclaus;Just remove the header via <removeHeader> and the name is the value of the constant IrcConstants.IRC_TARGET;;;","25/Jan/19 10:41;rnetuka;[~dmvolod] I have proposed solution in https://github.com/rnetuka/camel-1/commit/35c57d4aca64be6d22c11af248e5eba02dd28f8a. See if it's of any use.;;;","25/Jan/19 10:44;acosentino;It doesn't make sense to add a method to camel-core Pipeline for a corner case.;;;","25/Jan/19 10:48;dmvolod;+1 to [~ancosen], it could be better to change component logic rather than change a core behaivour for all.;;;","25/Jan/19 10:53;davsclaus;Some of the other components did that too, and the workaround was to remove that header. The solution is to use another named header for overriding the target in the producer, and not use the name of the header from the consumer.

;;;","25/Sep/19 12:10;jondruse;[~dmvolod] [~davsclaus] I agree with your previous comments and removal of header is working in this case. 
From my POV it would be nice to have a validation, which fail if message goes to target which is not defined in ""to"" endoint.
In the above case it will fail with validation error, because message is being sent to channel #test1, which is not defined as in endpoint .to(""irc://chan@localhost:6667/test2"");

It is a simple change, which makes sense. It could be done by this: https://github.com/JiriOndrusek/camel/commit/1f972395eac1ee998b7d7b790ba704f7e34466af#diff-c64bf7249f53d33cc5f9c65b8c9a9fe9R58

WDYT?;;;","25/Sep/19 12:46;dmvolod;[~jondruse], I think it could be possible solution to log an error for this case and could be applied via PR. ;;;","25/Sep/19 13:55;davsclaus;Lets just add a new header key that you use to send to a specific target instead of the configured name from the endpoint. Then the existing header is a read-only header. We do this in JMS etc, and other components.

;;;","25/Sep/19 14:34;jondruse;[~dmvolod] Should I look into the header as [~davsclaus] suggested, or will you do it (because you are assignee to this issue)?;;;","25/Sep/19 15:10;dmvolod;[~jondruse], you are welcome to work on the PR, don't care about assignments.;;;","26/Sep/19 12:32;jondruse;PR: https://github.com/apache/camel/pull/3200

I've added new header ""irc.sendTo"" to define target destination of message. Route defined in this issue works with this change without modification.

I'm not sure about correct processes here, but I think that this change should be mentioned in documentation for the component, as it ads new header for users to use.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Camel-google-mail: Stream component doesn't work in OSGi,CAMEL-13098,13210948,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,acosentino,acosentino,22/Jan/19 11:04,22/Jan/19 11:17,13/Jul/23 08:32,22/Jan/19 11:17,,,,,,,,,,,,2.22.3,2.23.2,2.24.0,3.0.0,,,camel-google-mail,,,,0,,,,,There are missing exports,,acosentino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-22 11:04:48.0,,,,,,,,,,,"0|yi05x4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-google-calendar: Stream component doesn't work in OSGi,CAMEL-13097,13210938,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,acosentino,acosentino,22/Jan/19 10:28,22/Jan/19 10:39,13/Jul/23 08:32,22/Jan/19 10:39,,,,,,,,,,,,2.23.2,2.24.0,3.0.0,,,,camel-google-calendar,,,,0,,,,,There are missing export directives,,acosentino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-22 10:28:00.0,,,,,,,,,,,"0|yi05uw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MockEndpoint may not respect expected minimum message count,CAMEL-13096,13210904,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tdiesler,tdiesler,tdiesler,22/Jan/19 08:27,01/Mar/19 13:32,13/Jul/23 08:32,22/Jan/19 10:04,,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,camel-core,,,,0,,,,,"A sequence like this ...

{code}
            mockEndpoint.expectedMinimumMessageCount(1);
            mockEndpoint.expectedHeaderReceived(CHANNEL, ""subscriberChannel"");
            mockEndpoint.assertIsSatisfied();
{code}

may fail when the number of received messages is > 1

This is because expectedHeaderReceived() implicitly sets the expectedMessageCount to 1, which will take priority over expectedMinimumMessageCount.

Instead, expectedHeaderReceived should implicitly set expectedMinimumMessageCount to 1.",,tdiesler,,,,,,"tdiesler commented on pull request #2725: [CAMEL-13096] MockEndpoint may not respect expected minimum message c…
URL: https://github.com/apache/camel/pull/2725
 
 
   …ount
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/19 08:31;githubbot;600","oscerd commented on pull request #2725: [CAMEL-13096] MockEndpoint may not respect expected minimum message c…
URL: https://github.com/apache/camel/pull/2725
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/19 10:03;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-22 08:27:13.0,,,,,,,,,,,"0|yi05nc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Context MBean not unregistered on startup failure,CAMEL-13094,13210893,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,davsclaus,tdiesler,tdiesler,22/Jan/19 07:18,01/Aug/19 07:48,13/Jul/23 08:32,01/Aug/19 07:48,3.0.0,,,,,,,,,,,3.0.0,3.0.0.RC1,,,,,camel-core,,,,0,,,,,"In Camel-2.23.x a failure to start the context would call ServiceSupport.doStop(). This is no longer the case. Instead, a CamelContextStartupFailureEvent is thrown and services that might previously have been started are never stopped.

As a result or (side effect) the context MBean may remain registered if the startup failure occurred after its initial registration. ",,davsclaus,tdiesler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 01 06:46:21 UTC 2019,,,,,,,,,,,"0|yi05kw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"22/Jan/19 07:24;davsclaus;I dont recall any startup changes like that. Do you have any reproducable project / unit test etc?
The only change is in camel-blueprint, and I would assume you are not talking about OSGi but eap/widlfly;;;","22/Jan/19 07:35;tdiesler;{code}
            try {
                doStart();
                started.set(true);
                starting.set(false);
                stopping.set(false);
                stopped.set(false);
                suspending.set(false);
                suspended.set(false);
                shutdown.set(false);
                shuttingdown.set(false);
            } catch (Exception e) {
                try {
                    stop();
                } catch (Exception e2) {
                    // Ignore exceptions as we want to show the original exception
                } finally {
                    // ensure flags get reset to stopped as we failed during starting
                    stopping.set(false);
                    stopped.set(true);
                    starting.set(false);
                    started.set(false);
                    suspending.set(false);
                    suspended.set(false);
                    shutdown.set(false);
                    shuttingdown.set(false);
                }
                throw e;
            } 
{code}

https://github.com/apache/camel/blob/camel-2.23.x/camel-core/src/main/java/org/apache/camel/support/ServiceSupport.java#L83

vs.

{code}
            try {
                status = STARTING;
                log.trace(""Starting service"");
                doStart();
                status = STARTED;
                log.trace(""Service started"");
            } catch (Exception e) {
                status = FAILED;
                log.trace(""Error while starting service"", e);
                throw e;
            }
{code}

https://github.com/apache/camel/blob/master/camel-api/src/main/java/org/apache/camel/support/ServiceSupport.java#L90;;;","22/Jan/19 08:48;davsclaus;Yeah we should do like the old behaviour and stop on startup failure and throw the original exception;;;","22/Jan/19 09:13;tdiesler;Here is a plain [SimpleManagementTest|https://github.com/wildfly-extras/wildfly-camel/blob/master/itests/camel/src/test/java/org/wildfly/camel/test/plain/simple/SimpleManagementTest.java] that shows the issue.;;;","01/Aug/19 06:46;davsclaus;Thanks for the test-case Thomas;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Output of route-profile is empty if there are same route-id for multiple camel-contexts.,CAMEL-13093,13210821,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,chandrashekharpandey,chandrashekharpandey,21/Jan/19 17:35,21/Jan/19 19:35,13/Jul/23 08:32,21/Jan/19 19:35,2.17.1,2.21.3,2.23.1,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,karaf,,,,0,,,,,"* Unzip the attached reproducer.
 * Build it using 'mvn clean install'.
 * Deploy it in Fuse with command 'bundle:install -s mvn:com.mycompany/camel-blueprint-cbr/1.0.0-SNAPSHOT'.
 * If we execute route-profile command, we find that output is empty or no output.

karaf@root()> route-profile cbr-example-context1 1-route Profile Camel Context: cbr-example-context1 Id Count Last (ms) Delta (ms) Mean (ms) Min (ms) Max (ms) Total (ms) Self (ms) karaf@root()>",ALL,chandrashekharpandey,davsclaus,,,,,"1984shekhar commented on pull request #2724: CAMEL-13093
URL: https://github.com/apache/camel/pull/2724
 
 
   karaf route-profile command improvement
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jan/19 17:37;githubbot;600","davsclaus commented on pull request #2724: CAMEL-13093
URL: https://github.com/apache/camel/pull/2724
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jan/19 19:32;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,"21/Jan/19 17:33;chandrashekharpandey;TestProjectWithDirect.zip;https://issues.apache.org/jira/secure/attachment/12955682/TestProjectWithDirect.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Moderate,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 21 19:35:30 UTC 2019,,,,,,,,,,,"0|yi054w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Jan/19 17:46;chandrashekharpandey;Working on this;;;","21/Jan/19 19:35;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gzipping HTTP response prevents writing chunked output,CAMEL-13092,13210816,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,tdudgeon,tdudgeon,21/Jan/19 17:23,24/Mar/21 06:32,13/Jul/23 08:32,24/Mar/21 06:32,2.23.1,,,,,,,,,,,3.10.0,,,,,,camel-servlet,,,,0,,,,,"This has been discussed in the users mailing list [1], but there was no conclusion, and it looks like a bug or quirk so I'm raising this issue to try to get resolution.

The issue is that when writing the response of an HTTP request using a PipedInputStream to the Message body and with the `Content-Encoding: gzip` set as a response header the data does not seem to be sent until the entire stream has been written to the PipedInputStream. This means the client cannot start to read the response until the entire set of data has been written. When that header is not set the data is streamed immediately.

Also, symptomatic of this, when using `Content-Encoding: gzip` the `Content-Length` header gets set, which can only happen after the entire stream has been processed. Without the gzip header the 'Transfer-Encoding: chunked' header gets set and there is no Content-Length as you might expect. I would have expected this to happen even if the `Content-Encoding: gzip` header is set.

Is this a bug, or am I missing some magical way to ensure that the response is streamed when it is being gzipped?

 

[1]http://mail-archives.apache.org/mod_mbox/camel-users/201901.mbox/%3C9cc4adf0-91f2-a111-edce-e7a18fde9fdf%40gmail.com%3E","I encounter this using the REST DSL with the servlet component, but I imagine its a more general problem. I

'm using Camel 2.18.0, but I checked and the problem seem to also happen with the latest version.",davsclaus,tdudgeon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 23 18:08:41 UTC 2021,,,,,,,,,,,"0|yi053s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Aug/19 18:55;davsclaus;Are you able to build a reproducer as either a sample project, or some unit test?;;;","23/Mar/21 17:54;davsclaus;Have build an use case for plain text (not gzipped);;;","23/Mar/21 18:08;davsclaus;When in gzip mode then it seems its currently hardcoded to be non chunked in the doWriteGZIPResponse method

            if (LOG.isDebugEnabled()) {
                LOG.debug(""Streaming response as GZIP in non-chunked mode with content-length {} and buffer size: {}"", data.length, response.getBufferSize());
            }
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.servlet.http.MappingMatch not found when starting camel-example-spring-boot,CAMEL-13084,13210543,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,ppalaga,ppalaga,19/Jan/19 16:14,01/Feb/19 06:27,13/Jul/23 08:32,21/Jan/19 09:26,2.23.0,2.23.1,3.0.0,,,,,,,,,2.23.2,2.24.0,3.0.0,,,,examples,,,,0,,,,,"Steps to reproduce:
{code}
git checkout -b camel-2.x upstream/camel-2.x
git show --summary
# commit fb5278ea2860e05b833f8e32d4ec6c2dfcc73c94 (HEAD -> camel-2.x, upstream/camel-2.x)
# Author: Claus Ibsen <claus.ibsen@gmail.com>
# Date:   Sat Jan 19 09:57:17 2019 +0100
# 
#     Add missing docs for EIPs
# 
cd examples/camel-example-spring-boot
mvn clean package

java -jar target/camel-example-spring-boot-*.jar 
# Expected: no error
# Actual:
# [...]
# Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-01-19 17:09:16.253 ERROR 21732 --- [           main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is java.lang.NoClassDefFoundError: javax/servlet/http/MappingMatch
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157) ~[spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540) ~[spring-context-5.1.4.RELEASE.jar!/:5.1.4.RELEASE]
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at sample.camel.MyCamelApplication.main(MyCamelApplication.java:33) [classes!/:2.24.0-SNAPSHOT]
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
        at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48) [camel-example-spring-boot-2.24.0-SNAPSHOT.jar:2.24.0-SNAPSHOT]
        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87) [camel-example-spring-boot-2.24.0-SNAPSHOT.jar:2.24.0-SNAPSHOT]
        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50) [camel-example-spring-boot-2.24.0-SNAPSHOT.jar:2.24.0-SNAPSHOT]
        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51) [camel-example-spring-boot-2.24.0-SNAPSHOT.jar:2.24.0-SNAPSHOT]
Caused by: java.lang.NoClassDefFoundError: javax/servlet/http/MappingMatch
        at io.undertow.servlet.handlers.ServletPathMatches.resolveServletForPath(ServletPathMatches.java:445) ~[undertow-servlet-2.0.16.Final.jar!/:2.0.16.Final]
        at io.undertow.servlet.handlers.ServletPathMatches.setupServletChains(ServletPathMatches.java:280) ~[undertow-servlet-2.0.16.Final.jar!/:2.0.16.Final]
        at io.undertow.servlet.handlers.ServletPathMatches.getData(ServletPathMatches.java:145) ~[undertow-servlet-2.0.16.Final.jar!/:2.0.16.Final]
        at io.undertow.servlet.handlers.ServletPathMatches.initData(ServletPathMatches.java:76) ~[undertow-servlet-2.0.16.Final.jar!/:2.0.16.Final]
        at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:256) ~[undertow-servlet-2.0.16.Final.jar!/:2.0.16.Final]
        at org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.createDeploymentManager(UndertowServletWebServerFactory.java:284) ~[spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.getWebServer(UndertowServletWebServerFactory.java:208) ~[spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181) ~[spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154) ~[spring-boot-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]
        ... 16 common frames omitted
Caused by: java.lang.ClassNotFoundException: javax.servlet.http.MappingMatch
        at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
        at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
        at org.springframework.boot.loader.LaunchedURLClassLoader.loadClass(LaunchedURLClassLoader.java:93) ~[camel-example-spring-boot-2.24.0-SNAPSHOT.jar:2.24.0-SNAPSHOT]
        at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
        ... 25 common frames omitted

{code}",,acosentino,davsclaus,dmvolod,njiang,ppalaga,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13090,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 01 06:27:31 UTC 2019,,,,,,,,,,,"0|yi03f4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Jan/19 16:16;ppalaga;Reproducible with Camel 2.23.0 and 2.23.1. Works with 2.22.2;;;","21/Jan/19 08:42;davsclaus;Its the spring-boot-starter-undertow that seems to not work, it doesnt include the needed servlet apis;;;","21/Jan/19 08:45;acosentino;I added explicitly the dependency for the moment, we have a similar situation for camel-example-rest-producer.;;;","21/Jan/19 08:52;davsclaus;Ah okay it was a Camel BOM that pulls in servlet api 3, and spring boot requires api 4.

Adding the servlet-api 4 makes it work, its the same problem with all the undertow-starter examples

{code}
 git grep ""starter-undertow""
camel-example-fhir-auth-tx-spring-boot/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-fhir-spring-boot/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-rabbitmq/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-rest-producer/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot-clustered-route-controller/cluster-node/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot-health-checks/application/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot-health-checks/service/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot-master/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot-rest-swagger/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot-servicecall/consumer/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot-supervising-route-controller/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot-xml/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-boot/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-cloud-servicecall/consumer/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-cloud-servicecall/service/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-cloud-serviceregistry/consumer/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-spring-cloud-serviceregistry/service/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-twitter-salesforce/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
camel-example-validator-spring-boot/pom.xml:      <artifactId>spring-boot-starter-undertow</artifactId>
{code};;;","21/Jan/19 09:26;acosentino;This one is fixed, I'll add the dependency also to the other examples.;;;","21/Jan/19 13:47;acosentino;I fixed the rest and found some bugs on the spring-cloud examples. Fixed them too.;;;","21/Jan/19 13:49;dmvolod;[~ancosen], how is idea about to keep javax.servlet-api version in one place to minimize care on change it?;;;","21/Jan/19 13:52;acosentino;Yeah, this is the main idea, but the problem we currently have is related to the servlet version we have in Parent POM, we could align to 4.0.1, but we won't be sure to have the OSGi support working fine. Once we get the back a working OSGi support we can align everything in one single place. This is just a temporary workaround.;;;","21/Jan/19 13:57;dmvolod;Yes, understood, but we can temporary keep this version in examples root pom.xml to remember where we've changed it.;;;","21/Jan/19 13:59;acosentino;Oh, my bad, you're right, copy-pasted with the explicit dependency :(

I'm fixing that!;;;","21/Jan/19 14:15;acosentino;Done, thanks for spotting this [~dmvolod];;;","01/Feb/19 04:32;njiang;[~ancosen] I happened to hit this issue and found you add lots of dependency across the examples , we can just specify servlet API 
 in the dependency manager of example pom.xml to override the setting of camel-parent.   As servlet API is backward compatible, the other example should be fine to use servlet-api 4.x.  
I just committed a quick fix for it and merged the patch into camel-2.23.x branch.;;;","01/Feb/19 06:18;acosentino;Totally right, thanks [~njiang];;;","01/Feb/19 06:27;acosentino;I backported to camel-2.x too.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-package-maven-plugin:3.0.0-SNAPSHOT fails on generate-jaxb-list goal,CAMEL-13080,13210366,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,onders,onders,onders,18/Jan/19 12:30,01/Mar/19 13:40,13/Jul/23 08:32,18/Jan/19 13:43,,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,build system,,,,0,,,,,"Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 11: jar:file:C:\Users\sezgin\.m2\repository\org\apache\camel\spi-annotations\3.0.0-SNAPSHOT\spi-annotations-3.0.0-SNAPSHOT.jar!/
 at java.net.URI.create (URI.java:852)
 at org.apache.camel.maven.packaging.PackageJaxbMojo.asFolder (PackageJaxbMojo.java:172)
 at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
 at java.util.ArrayList$ArrayListSpliterator.forEachRemaining (ArrayList.java:1382)
 at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:481)
 at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:471)
 at java.util.stream.ForEachOps$ForEachOp.evaluateSequential (ForEachOps.java:151)
 at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential (ForEachOps.java:174)
 at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
 at java.util.stream.ReferencePipeline.forEach (ReferencePipeline.java:418)
 at org.apache.camel.maven.packaging.PackageJaxbMojo.createIndex (PackageJaxbMojo.java:161)
 at org.apache.camel.maven.packaging.PackageJaxbMojo.execute (PackageJaxbMojo.java:111)
 at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:134)",- windows,onders,,,,,,"onderson commented on pull request #2718: CAMEL-13080 - fix URI creation for windows builds
URL: https://github.com/apache/camel/pull/2718
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/19 12:39;githubbot;600","onderson commented on pull request #2718: CAMEL-13080 - fix URI creation for windows builds
URL: https://github.com/apache/camel/pull/2718
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/19 13:41;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-18 12:30:48.0,,,,,,,,,,,"0|yi02c0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-AWS EKS: Specify the VPC Config header correctly,CAMEL-13079,13210351,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,acosentino,acosentino,18/Jan/19 11:04,01/Mar/19 13:33,13/Jul/23 08:32,18/Jan/19 11:07,,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,,,,,0,,,,,We are setting the ROLE_ARN header for VPC Config.,,acosentino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-18 11:04:20.0,,,,,,,,,,,"0|yi028o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Olingo4 Consumer appears to not work with backoffIdleThreshold,CAMEL-13077,13210216,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,phantomjinx,phantomjinx,17/Jan/19 18:20,25/Jan/19 10:15,13/Jul/23 08:32,25/Jan/19 10:15,2.21.0,2.22.0,2.23.0,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,camel-olingo2,camel-olingo4,,,0,,,,,"Looking into using {{backoffIdleThreshold}} for reducing the amount of polling of OData consuming. So far I cannot see how it would work for the [Olingo4Consumer|https://github.com/apache/camel/blob/master/components/camel-olingo4/camel-olingo4-component/src/main/java/org/apache/camel/component/olingo4/Olingo4Consumer.java]. Bear with me, this may get a little deep to follow!

Hierarchy: ScheduledPollConsumer > AbstractApiConsumer > Olingo4Consumer

SchedulePollConsumer maintains an [idleCounter|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/support/ScheduledPollConsumer.java#L61], which is incremented each time no messages are returned from polling. Once the {{idleCounter}} starts to increment then this in turn starts to increment the backoffCounter taking into account properties such as {{backoffIdleThreshold}}, resulting in delaying polling etc.

However, in order for {{idleCounter}} to increment, {{poll()}} methods must return 0 messages. Since {{Olingo4Consumer}} defers its {{result[0]}} to [ApiConsumer.getResultsProcessed()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/support/component/ApiConsumerHelper.java#L85], the results must be in a form that can be handled by this static method, namely a List, an Iterable or an Array. Otherwise, the result is merely added to the Exchange and the constant '1' is returned.

Now here is the crux. OData services like to return a {{ClientEntitySet}} hence when the result is passed to {{ApiConsumerHelper}}, it is none of the expected types and ['1'|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/support/component/ApiConsumerHelper.java#L128] is therefore always returned. Consequently, the return value of {{poll()}} is 1 hence {{idleCounter}} is never incremented.

I hope that makes sense and if I have made a mistake then please let me know. I think the way to handle this would be to put the entities of the {{ClientEntitySet}} into the result rather than the set itself. That way ApiConsumerHelper would understand a {{Collection}} as an {{Iterable}} and return a proper value based on the size of the collection. Alternatively, if the {{ClientEntitySet}} is desired as the result then maybe {{ApiConsumerHelper}} needs to be extended in some way so as to correctly handle a return value for {{poll()}}.

Not sure which way to go on this so anxious to start a discussion.",,davsclaus,dmvolod,phantomjinx,,,,"phantomjinx commented on pull request #2719: CAMEL-13077: Fix polling return for empty OData ClientEntitySets
URL: https://github.com/apache/camel/pull/2719
 
 
   * ApiConsumerHelper does not recognise ClientEntitySets and thus defaults
     to return a constant 1. This means that the scheduling polling is never
     concluded to be idle and the backoffXXX consumer properties do not work.
   
   * If the ClientEntitySet is empty then return 0 to allow for backoffXXX
     properties to correctly handle the scheduling of the polling.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/19 16:17;githubbot;600","davsclaus commented on pull request #2719: CAMEL-13077: Fix polling return for empty OData ClientEntitySets
URL: https://github.com/apache/camel/pull/2719
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/19 14:56;githubbot;600","phantomjinx commented on pull request #2732: CAMEL-13077: Fix polling return for empty OData ODataFeeds (#2719)
URL: https://github.com/apache/camel/pull/2732
 
 
    * ApiConsumerHelper does not recognise ODataFeeds and thus defaults
      to return a constant 1. This means that the scheduling polling is never
      concluded to be idle and the backoffXXX consumer properties do not work.
   
    * If the ODataFeed is empty then return 0 to allow for backoffXXX
      properties
   
    * This is an equivalent change to that already committed for olingo4
      component.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/19 12:02;githubbot;600","asfgit commented on pull request #2732: CAMEL-13077: Fix polling return for empty OData ODataFeeds (#2719)
URL: https://github.com/apache/camel/pull/2732
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 08:23;githubbot;600",,,,,,,,,,,,0,2400,,,0,2400,,,,,,,CAMEL-13082,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 25 10:15:43 UTC 2019,,,,,,,,,,,"0|yi01eo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Jan/19 12:08;davsclaus;Yeah that sounds correct that 0 should be returned if no data. You are welcome to attempt to provide a fix via github PR then we can review that;;;","18/Jan/19 16:20;phantomjinx;*PR* -> [2719|https://github.com/apache/camel/pull/2719];;;","22/Jan/19 14:57;davsclaus;Can you do a PR for olingo2 also, thanks;;;","24/Jan/19 12:06;phantomjinx;[~davsclaus]

As requested -> [PR|https://github.com/apache/camel/pull/2732];;;","25/Jan/19 10:15;dmvolod;Thanks [~phantomjinx]. Merged and backported.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ObjectHelper does no longer see META-INF/services from camel-core,CAMEL-13076,13210169,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,tdiesler,tdiesler,tdiesler,17/Jan/19 14:28,01/Mar/19 13:33,13/Jul/23 08:32,18/Jan/19 09:40,,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,camel-core,,,,0,,,,,"The separation of camel-util from camel-core is somewhat problematic because of this code https://paste.fedoraproject.org/paste/6OE~asoW6rmuNjA3z-1XUQ In a modular environment, ObjectHelper does no longer see META-INF/services from camel-core",,tdiesler,,,,,,"tdiesler commented on pull request #2715: [CAMEL-13076] ObjectHelper does no longer see META-INF/services from …
URL: https://github.com/apache/camel/pull/2715
 
 
   …camel-core
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 15:53;githubbot;600","davsclaus commented on pull request #2715: [CAMEL-13076] ObjectHelper does no longer see META-INF/services from …
URL: https://github.com/apache/camel/pull/2715
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/19 09:36;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-17 14:28:07.0,,,,,,,,,,,"0|yi014o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove dependency on ActiveMQ SNAPSHOT,CAMEL-13068,13209817,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,tdiesler,tdiesler,16/Jan/19 08:11,01/Mar/19 13:33,13/Jul/23 08:32,16/Jan/19 10:14,,,,,,,,,,,,3.0.0,3.0.0-M1,,,,,camel-activemq,,,,0,,,,,"Currently we have a reference to [ActiveMQ-5.16.0-SNAPSHOT|https://github.com/apache/camel/blob/master/parent/pom.xml#L42] in Camel-3.0.x, which prevents the WildFly-Camel build that is based on Camel-3.0.x. We integrate the activemq component like [this|https://github.com/wildfly-extras/wildfly-camel/blob/master/feature/modules/etc/smartics/camel-modules.xml#L60], which has a dependency on the activemq module like [this|https://github.com/wildfly-extras/wildfly-camel/blob/master/feature/modules/etc/smartics/activemq-modules.xml#L23].
  
 Perhaps that 5.16.x snapshot can be released to some public repository.",,acosentino,tdiesler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7060,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 16 10:15:08 UTC 2019,,,,,,,,,,,"0|y0020g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Jan/19 10:15;acosentino;We are now using 5.15.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Olingo2Endpoint swallowing consumer. options,CAMEL-13063,13209662,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,dmvolod,dmvolod,15/Jan/19 14:47,17/Jan/19 14:10,13/Jul/23 08:32,17/Jan/19 14:10,2.21.0,,,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,camel-olingo2,,,,0,,,,,,,dmvolod,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13054,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-15 14:47:46.0,,,,,,,,,,,"0|y00120:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
olingo2 component serviceUri not set,CAMEL-13062,13209660,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,dmvolod,dmvolod,15/Jan/19 14:46,17/Jan/19 14:10,13/Jul/23 08:32,17/Jan/19 14:10,2.21.0,,,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,camel-olingo2,,,,0,,,,,,,dmvolod,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13005,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-15 14:46:10.0,,,,,,,,,,,"0|y0011k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing properties on Olingo2 consumer initialisation,CAMEL-13061,13209610,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,dmvolod,dmvolod,15/Jan/19 10:28,17/Jan/19 14:11,13/Jul/23 08:32,17/Jan/19 14:11,2.21.0,,,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,camel-olingo2,,,,0,,,,,,,dmvolod,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13006,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-15 10:28:29.0,,,,,,,,,,,"0|y000qg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-olingo2 assumes '/' at end of URI,CAMEL-13059,13209587,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,dmvolod,dmvolod,15/Jan/19 09:28,17/Jan/19 14:11,13/Jul/23 08:32,17/Jan/19 14:11,2.21.0,,,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,camel-olingo2,,,,0,odata,,,,,,dmvolod,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-15 09:28:00.0,,,,,,,,,,,"0|y000lc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractFutureCallback generates NPE when response is a 401,CAMEL-13058,13209577,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,dmvolod,dmvolod,15/Jan/19 08:26,17/Jan/19 14:11,13/Jul/23 08:32,17/Jan/19 14:11,2.21.0,,,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,camel-olingo2,,,,0,odata,,,,,,dmvolod,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-13012,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-15 08:26:50.0,,,,,,,,,,,"0|y000j4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Olingo4Endpoint swallowing consumer. options,CAMEL-13054,13209437,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,dmvolod,phantomjinx,phantomjinx,14/Jan/19 14:44,17/Jan/19 14:10,13/Jul/23 08:32,17/Jan/19 14:10,2.21.0,,,,,,,,,,,2.21.5,2.22.3,2.23.2,2.24.0,3.0.0,,camel-olingo4,,,,0,odata,,,,"The Olingo4Endpoint, while calling [configureProperties|https://github.com/apache/camel/blob/master/components/camel-olingo4/camel-olingo4-component/src/main/java/org/apache/camel/component/olingo4/Olingo4Endpoint.java#L109], first calls [parseQueryParams|https://github.com/apache/camel/blob/master/components/camel-olingo4/camel-olingo4-component/src/main/java/org/apache/camel/component/olingo4/Olingo4Endpoint.java#L191](). This results in consumer.* options being removed from the options map before they can be applied to the DefaultEndpoint.configureProperties(). Consequently, consumer.* options, eg. consumer.delay, can never be applied on the Olingo4Consumer.

To correct this it should be a matter of adding the following [here|https://github.com/apache/camel/blob/master/components/camel-olingo4/camel-olingo4-component/src/main/java/org/apache/camel/component/olingo4/Olingo4Endpoint.java#L198]:
{code:java}
  if (paramName.startsWith(""consumer."")) {
    continue;
  }
{code}",,davsclaus,dmvolod,phantomjinx,,,,"phantomjinx commented on pull request #2708: CAMEL-13054: Olingo4Endpoint - avoid swallowing consumer options
URL: https://github.com/apache/camel/pull/2708
 
 
   * Those options prefixed with 'consumer' are required to be processed by
     Olingo4Endpoint's parent class. However, they are getting added to the
     query options instead and never applied to the scheduling consumer.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jan/19 08:47;githubbot;600","asfgit commented on pull request #2708: CAMEL-13054: Olingo4Endpoint - avoid swallowing consumer options
URL: https://github.com/apache/camel/pull/2708
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jan/19 15:49;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,CAMEL-13063,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Novice,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 17 14:10:35 UTC 2019,,,,,,,,,,,"0|u00tig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/Jan/19 20:28;davsclaus;Contributions is welcome, for example as a github PR;;;","15/Jan/19 08:50;phantomjinx;PR: [https://github.com/apache/camel/pull/2708|https://github.com/apache/camel/pull/2708];;;","17/Jan/19 14:10;dmvolod;Thanks [~phantomjinx] for PR.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf commands that start/resume contexts and routes should use proper TCCL,CAMEL-13049,13208992,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,ggrzybek,ggrzybek,ggrzybek,11/Jan/19 12:34,11/Jan/19 13:42,13/Jul/23 08:32,11/Jan/19 13:42,2.24.0,,,,,,,,,,,2.21.5,2.22.3,2.23.1,2.24.0,3.0.0,,,,,,0,,,,,"When starting route using {{route-start}} Karaf command, TCCL is used from Karaf shell console thread - usually App Class Loader. It should be ClassLoader of the context itself.",,ggrzybek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 11 13:41:56 UTC 2019,,,,,,,,,,,"0|u00qs0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Jan/19 13:41;ggrzybek;Fixed:
{noformat}
   c7b772c8b5d..da36458fbd5  camel-2.21.x -> camel-2.21.x
   53185f0b221..ca2ba93782b  camel-2.22.x -> camel-2.22.x
   15a1f10fb53..93eeec1be30  camel-2.23.x -> camel-2.23.x
   aadb0f83c65..b07c5e0c307  camel-2.x -> camel-2.x
   2af70bc092f..b26db98574e  master -> master
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Validator Component Fails on XSD with file Relative Imports or include,CAMEL-13047,13208967,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Minor,Fixed,davsclaus,W.Y,W.Y,11/Jan/19 10:33,23/Mar/21 17:03,13/Jul/23 08:32,23/Mar/21 17:03,2.22.0,2.22.1,2.22.2,,,,,,,,,3.10.0,,,,,,camel-core,,,,0,,,,,"When using the validator component with an XSD that references (import/include) a second XSD on a different path, and where the second XSD references a third XSD using a relative path, the path of the third XSD is resolved relative to the first schema rather than relative to the second.
I found it it same bug ticket reported , although it stated it is fixed already at camel 2.10, but it does not work for us when we use >=camel 2.22. The problem is reported as fixed at 
https://issues.apache.org/jira/browse/CAMEL-6013  . i modified testcase of it  and put it here again for you to reproduce the problem. thanks and rgds 
",,acosentino,davsclaus,W.Y,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/19 13:52;W.Y;testcase.zip;https://issues.apache.org/jira/secure/attachment/12954591/testcase.zip",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 23 15:38:08 UTC 2021,,,,,,,,,,,"0|u00qmg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Jan/19 13:55;W.Y;unzip testcase 

you have 

testcase\outside
testcase\project
cd testcase\project\camel-validator-test 
mvn test 

you will see the problem, it works with xsdfile at  testcase\project
it failed with xsdfiles at testcase\outside;;;","18/Jan/19 09:54;W.Y;Any feedback on this Bug?;;;","18/Jan/19 11:08;acosentino;[~ramu11] is working on that in his free time. I guess you'll have to wait.;;;","07/Jul/19 14:56;davsclaus;Thanks for the test-case.

Maybe in the mean time structure your XSDs so they dont use so many relative paths among them, or maybe have 1 master xsd that imports all the others. ;;;","23/Mar/21 14:35;davsclaus;Thanks for the sample project - I managed to make it run with latest code.;;;","23/Mar/21 15:38;davsclaus;A bit complex with that deep directory structure, but the hunch is that the resolver loose the scheme being file as all the relative links, end up loosing file: as scheme, which means it ends up using classpath as resolver.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel-Slack: The verifier must be able to validate webhook and token at the same time,CAMEL-13045,13208712,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,acosentino,acosentino,10/Jan/19 07:03,10/Jan/19 07:36,13/Jul/23 08:32,10/Jan/19 07:36,,,,,,,,,,,,2.23.1,2.24.0,3.0.0,,,,camel-slack,,,,0,,,,,,,acosentino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-01-10 07:03:46.0,,,,,,,,,,,"0|u00p28:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Camel-AWS MQ: it is not possible to set Broker ""Public accessibility"" parameter using createBroker command",CAMEL-13044,13208596,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,acosentino,apoltavtsev,apoltavtsev,09/Jan/19 18:16,10/Jan/19 10:05,13/Jul/23 08:32,10/Jan/19 10:05,2.21.2,2.23.0,,,,,,,,,,2.21.5,2.22.3,2.23.1,2.24.0,3.0.0,,camel-aws,,,,0,,,,,"For now all MQ instances are created with ""public accessibility"" = false using ""createBroker"" command. As result, created AWS Broker instance is not accessible outside AWS environment. And there is no way to change it (corresponding parameter in not propagated to AWS MQ client).

It is necessary to add propagation of ""publiclyAccessible"" parameter to ""createBroker"" operation:

...

request.withPubliclyAccessible(publiclyAccessible);

...",,acosentino,apoltavtsev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 09 19:01:58 UTC 2019,,,,,,,,,,,"0|u00ocw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Jan/19 19:01;acosentino;I'll try to fix this tomorrow. If you want a PR is welcome.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
camel-cxfrs - SimpleBinding ignores annotations on interface,CAMEL-13037,13207978,Bug,Resolved,CAMEL,Camel,software,acosentino,"Apache Camel is an extremely powerful declarative Java based, type-safe <a href=""http://camel.apache.org/dsl.html"">Domain Specific Language</a> POJO broker, which uses <a href=""http://camel.apache.org/enterprise-integration-patterns.html"">Enterprise Integration Patterns</a> as its foundation for integration.",http://camel.apache.org/,Major,Fixed,onders,jensgr@gmx.net,jensgr@gmx.net,07/Jan/19 09:07,13/Feb/19 08:19,13/Jul/23 08:32,13/Feb/19 08:19,2.23.0,,,,,,,,,,,2.22.4,2.23.2,2.24.0,3.0.0,,,camel-cxfrs,,,,0,,,,,"When using a service resource that implements an interface, and the interface carries the JAX-RS annotations (a common setup, e.g. when auto-generating code with Swagger) the SimpleBinding ignores those annotations and does not set up the proper Camel message headers.",,acosentino,jensgr@gmx.net,onders,,,,"onderson commented on pull request #2765: CAMEL-13037 - SimpleBinding ignores annotations on interface, Thanks …
URL: https://github.com/apache/camel/pull/2765
 
 
   …Jens Kleine-Herzbruch
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/19 21:43;githubbot;600","onderson commented on pull request #2765: CAMEL-13037 - SimpleBinding ignores annotations on interface, Thanks …
URL: https://github.com/apache/camel/pull/2765
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Feb/19 06:50;githubbot;600",,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,"07/Jan/19 09:07;jensgr@gmx.net;0001-use-the-same-procedure-CXF-uses-for-discovering-JAX-.patch;https://issues.apache.org/jira/secure/attachment/12953964/0001-use-the-same-procedure-CXF-uses-for-discovering-JAX-.patch",,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,Unknown,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,Wed Feb 13 08:19:45 UTC 2019,,,,,,,Patch Available,,,,"0|u00kjk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Feb/19 09:51;jensgr@gmx.net;Is this supposed to be committed already?;;;","07/Feb/19 10:10;acosentino;thanks for the patch. This will be committed soon.;;;","12/Feb/19 15:29;onders;[~ancosen], do you need a hand for this?;;;","12/Feb/19 15:31;acosentino;[~onders], yes, that would be great, can you take care of it? :);;;","12/Feb/19 15:37;onders;yes sure.;;;","13/Feb/19 08:19;onders;merged on master and backported to relevant branches. thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
